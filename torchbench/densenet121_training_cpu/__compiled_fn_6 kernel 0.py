
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_convolution_backward_div_native_batch_norm_backward_sum_threshold_backward_view_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const bool* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr3)
{
    auto out_ptr2 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1000L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(1000L + x0));
            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(2000L + x0));
            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(3000L + x0));
            auto tmp2 = tmp0 + tmp1;
            auto tmp4 = tmp2 + tmp3;
            auto tmp6 = tmp4 + tmp5;
            tmp6.store(out_ptr0 + static_cast<long>(x0));
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(4L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr1 + static_cast<long>(x0 + (1024L*x2) + (50176L*x1)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (1024L*x1)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0 + (1024L*x2) + (50176L*x1)));
                            auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp10 = tmp8 - tmp9;
                            auto tmp11 = tmp7 * tmp10;
                            tmp_acc0_vec = tmp_acc0_vec + tmp7;
                            tmp_acc1_vec = tmp_acc1_vec + tmp11;
                        }
                    }
                    tmp_acc0_vec.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr1 + static_cast<long>(992L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(992L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(992L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(992L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            tmp15.store(out_ptr3 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const bool* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(992L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(992L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(960L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(960L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(960L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(960L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(960L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(960L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(960L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(960L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            tmp26.store(out_ptr2 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_threshold_backward_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const bool* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       float* out_ptr0,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7,
                       float* out_ptr8,
                       float* out_ptr9,
                       float* out_ptr10,
                       float* out_ptr11,
                       float* out_ptr12,
                       float* out_ptr13,
                       float* out_ptr14,
                       float* out_ptr15,
                       float* out_ptr16)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(512L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr2 + static_cast<long>(x2 + (512L*x1) + (25088L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(512L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(512L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(512L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(512L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(512L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(512L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(512L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(512L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(512L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(512L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(512L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(512L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr3 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(544L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(544L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(544L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(544L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(544L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(544L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(544L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(544L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(544L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(544L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(544L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(544L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr4 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(576L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(576L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(576L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(576L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(576L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(576L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(576L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(576L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(576L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(576L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(576L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(576L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr5 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(608L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(608L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(608L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(608L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(608L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(608L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(608L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(608L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(608L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(608L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(608L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(608L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr6 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(640L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(640L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(640L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(640L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(640L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(640L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(640L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(640L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(640L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(640L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(640L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(640L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr7 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(672L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(672L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(672L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(672L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(672L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(672L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(672L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(672L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(672L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(672L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(672L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(672L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr8 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(704L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(704L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(704L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(704L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(704L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(704L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(704L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(704L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(704L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(704L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(704L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(704L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr9 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(736L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(736L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(736L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(736L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(736L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(736L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(736L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(736L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(736L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(736L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(736L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(736L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr10 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(768L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(768L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(768L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(768L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(768L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(768L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(768L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(768L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(768L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(768L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(768L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(768L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr11 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(800L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(800L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(800L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(800L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(800L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(800L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(800L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(800L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(800L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(800L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(800L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(800L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr12 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(832L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(832L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(832L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(832L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(832L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(832L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(832L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(832L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(832L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(832L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(832L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(832L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr13 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(864L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(864L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(864L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(864L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(864L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(864L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(864L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(864L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(864L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(864L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(864L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(864L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr14 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(896L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(896L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(896L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(896L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(896L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(896L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(896L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(896L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(896L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(896L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(896L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(896L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr15 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(49L); x1+=static_cast<long>(1L))
                    {
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                        {
                            auto tmp0 = flag_to_float_vec(in_ptr5 + static_cast<long>(928L + x2 + (1024L*x1) + (50176L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(928L + x2 + (1024L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(928L + x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(928L + x2));
                            auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(928L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(928L + x2 + (992L*x1) + (48608L*x0)));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(928L + x2));
                            auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(928L + x2));
                            auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(928L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(928L + x2 + (960L*x1) + (47040L*x0)));
                            auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(928L + x2));
                            auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(928L + x2));
                            auto tmp2 = static_cast<float>(49.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 / tmp3;
                            auto tmp5 = static_cast<float>(0.0);
                            auto tmp6 = at::vec::Vectorized<float>(tmp5);
                            auto tmp7 = decltype(tmp6)::blendv(tmp4, tmp6, tmp0);
                            auto tmp9 = static_cast<float>(1e-05);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 + tmp10;
                            auto tmp12 = tmp11.rsqrt();
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp15 = tmp7 * tmp14;
                            auto tmp17 = to_float_mask(tmp16 <= tmp6);
                            auto tmp19 = decltype(tmp6)::blendv(tmp18, tmp6, tmp17);
                            auto tmp21 = tmp20 + tmp10;
                            auto tmp22 = tmp21.rsqrt();
                            auto tmp24 = tmp22 * tmp23;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp26 = tmp15 + tmp25;
                            auto tmp28 = to_float_mask(tmp27 <= tmp6);
                            auto tmp30 = decltype(tmp6)::blendv(tmp29, tmp6, tmp28);
                            auto tmp32 = tmp31 + tmp10;
                            auto tmp33 = tmp32.rsqrt();
                            auto tmp35 = tmp33 * tmp34;
                            auto tmp36 = tmp30 * tmp35;
                            auto tmp37 = tmp26 + tmp36;
                            tmp37.store(out_ptr16 + static_cast<long>(x2 + (32L*x1) + (1568L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(928L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(928L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (32L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(896L + x1 + (928L*x0)));
                        auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(896L + x1 + (928L*x0)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(896L + x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(896L + x1));
                        auto tmp2 = static_cast<float>(0.0);
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = to_float_mask(tmp1 <= tmp3);
                        auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                        auto tmp8 = static_cast<float>(1e-05);
                        auto tmp9 = at::vec::Vectorized<float>(tmp8);
                        auto tmp10 = tmp7 + tmp9;
                        auto tmp11 = tmp10.rsqrt();
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp14 = tmp6 * tmp13;
                        auto tmp15 = tmp0 + tmp14;
                        tmp15.store(in_out_ptr1 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_threshold_backward_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (32L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(864L + x1 + (928L*x0)));
                        auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(864L + x1 + (928L*x0)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(864L + x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(864L + x1));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(864L + x1 + (896L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(864L + x1 + (896L*x0)));
                        auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(864L + x1));
                        auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(864L + x1));
                        auto tmp2 = static_cast<float>(0.0);
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = to_float_mask(tmp1 <= tmp3);
                        auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                        auto tmp8 = static_cast<float>(1e-05);
                        auto tmp9 = at::vec::Vectorized<float>(tmp8);
                        auto tmp10 = tmp7 + tmp9;
                        auto tmp11 = tmp10.rsqrt();
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp14 = tmp6 * tmp13;
                        auto tmp15 = tmp0 + tmp14;
                        auto tmp17 = to_float_mask(tmp16 <= tmp3);
                        auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                        auto tmp21 = tmp20 + tmp9;
                        auto tmp22 = tmp21.rsqrt();
                        auto tmp24 = tmp22 * tmp23;
                        auto tmp25 = tmp19 * tmp24;
                        auto tmp26 = tmp15 + tmp25;
                        tmp26.store(in_out_ptr1 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(832L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(832L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(832L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(832L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(832L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(832L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(832L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(832L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(832L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(832L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(832L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(832L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                tmp37.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(800L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(800L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(800L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(800L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(800L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(800L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(800L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(800L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(800L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(800L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(800L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(800L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(800L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(800L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(800L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(800L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                tmp48.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(768L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(768L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(768L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(768L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(768L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(768L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(768L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(768L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(768L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(768L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(768L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(768L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(768L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(768L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(768L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(768L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(768L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(768L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(768L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(768L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                tmp59.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(736L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(736L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(736L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(736L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(736L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(736L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(736L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(736L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(736L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(736L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(736L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(736L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(736L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(736L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(736L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(736L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(736L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(736L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(736L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(736L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(736L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(736L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(736L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(736L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                tmp70.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(704L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(704L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(704L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(704L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(704L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(704L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(704L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(704L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(704L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(704L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(704L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(704L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(704L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(704L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(704L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(704L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(704L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(704L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(704L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(704L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(704L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(704L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(704L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(704L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(704L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(704L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(704L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(704L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                tmp81.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(672L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(672L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(672L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(672L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(672L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(672L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(672L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(672L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(672L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(672L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(672L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(672L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(672L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(672L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(672L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(672L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(672L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(672L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(672L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(672L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(672L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(672L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(672L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(672L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(672L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(672L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(672L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(672L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(672L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(672L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(672L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(672L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                tmp92.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(640L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(640L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(640L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(640L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(640L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(640L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(640L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(640L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(640L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(640L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(640L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(640L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(640L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(640L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(640L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(640L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(640L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(640L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(640L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(640L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(640L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(640L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(640L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(640L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(640L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(640L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(640L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(640L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(640L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(640L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(640L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(640L + x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(640L + x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(640L + x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(640L + x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(640L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                tmp103.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(608L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(608L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(608L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(608L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(608L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(608L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(608L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(608L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(608L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(608L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(608L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(608L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(608L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(608L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(608L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(608L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(608L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(608L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(608L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(608L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(608L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(608L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(608L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(608L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(608L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(608L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(608L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(608L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(608L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(608L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(608L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(608L + x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(608L + x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(608L + x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(608L + x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(608L + x1));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(608L + x1 + (640L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(608L + x1 + (640L*x0)));
                auto tmp108 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(608L + x1));
                auto tmp111 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(608L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                auto tmp105 = to_float_mask(tmp104 <= tmp3);
                auto tmp107 = decltype(tmp3)::blendv(tmp106, tmp3, tmp105);
                auto tmp109 = tmp108 + tmp9;
                auto tmp110 = tmp109.rsqrt();
                auto tmp112 = tmp110 * tmp111;
                auto tmp113 = tmp107 * tmp112;
                auto tmp114 = tmp103 + tmp113;
                tmp114.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(576L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(576L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(576L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(576L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(576L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(576L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(576L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(576L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(576L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(576L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(576L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(576L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(576L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(576L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(576L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(576L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(576L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(576L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(576L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(576L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(576L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(576L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(576L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(576L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(576L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(576L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(576L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(576L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(576L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(576L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(576L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(576L + x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(576L + x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(576L + x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(576L + x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(576L + x1));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(576L + x1 + (640L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(576L + x1 + (640L*x0)));
                auto tmp108 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(576L + x1));
                auto tmp111 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(576L + x1));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(576L + x1 + (608L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(576L + x1 + (608L*x0)));
                auto tmp119 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(576L + x1));
                auto tmp122 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(576L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                auto tmp105 = to_float_mask(tmp104 <= tmp3);
                auto tmp107 = decltype(tmp3)::blendv(tmp106, tmp3, tmp105);
                auto tmp109 = tmp108 + tmp9;
                auto tmp110 = tmp109.rsqrt();
                auto tmp112 = tmp110 * tmp111;
                auto tmp113 = tmp107 * tmp112;
                auto tmp114 = tmp103 + tmp113;
                auto tmp116 = to_float_mask(tmp115 <= tmp3);
                auto tmp118 = decltype(tmp3)::blendv(tmp117, tmp3, tmp116);
                auto tmp120 = tmp119 + tmp9;
                auto tmp121 = tmp120.rsqrt();
                auto tmp123 = tmp121 * tmp122;
                auto tmp124 = tmp118 * tmp123;
                auto tmp125 = tmp114 + tmp124;
                tmp125.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(544L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(544L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(544L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(544L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(544L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(544L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(544L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(544L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(544L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(544L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(544L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(544L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(544L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(544L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(544L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(544L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(544L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(544L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(544L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(544L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(544L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(544L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(544L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(544L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(544L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(544L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(544L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(544L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(544L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(544L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(544L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(544L + x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(544L + x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(544L + x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(544L + x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(544L + x1));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(544L + x1 + (640L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(544L + x1 + (640L*x0)));
                auto tmp108 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(544L + x1));
                auto tmp111 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(544L + x1));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(544L + x1 + (608L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(544L + x1 + (608L*x0)));
                auto tmp119 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(544L + x1));
                auto tmp122 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(544L + x1));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(544L + x1 + (576L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(544L + x1 + (576L*x0)));
                auto tmp130 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(544L + x1));
                auto tmp133 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(544L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                auto tmp105 = to_float_mask(tmp104 <= tmp3);
                auto tmp107 = decltype(tmp3)::blendv(tmp106, tmp3, tmp105);
                auto tmp109 = tmp108 + tmp9;
                auto tmp110 = tmp109.rsqrt();
                auto tmp112 = tmp110 * tmp111;
                auto tmp113 = tmp107 * tmp112;
                auto tmp114 = tmp103 + tmp113;
                auto tmp116 = to_float_mask(tmp115 <= tmp3);
                auto tmp118 = decltype(tmp3)::blendv(tmp117, tmp3, tmp116);
                auto tmp120 = tmp119 + tmp9;
                auto tmp121 = tmp120.rsqrt();
                auto tmp123 = tmp121 * tmp122;
                auto tmp124 = tmp118 * tmp123;
                auto tmp125 = tmp114 + tmp124;
                auto tmp127 = to_float_mask(tmp126 <= tmp3);
                auto tmp129 = decltype(tmp3)::blendv(tmp128, tmp3, tmp127);
                auto tmp131 = tmp130 + tmp9;
                auto tmp132 = tmp131.rsqrt();
                auto tmp134 = tmp132 * tmp133;
                auto tmp135 = tmp129 * tmp134;
                auto tmp136 = tmp125 + tmp135;
                tmp136.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(512L + x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(512L + x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(512L + x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(512L + x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(512L + x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(512L + x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(512L + x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(512L + x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(512L + x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(512L + x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(512L + x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(512L + x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(512L + x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(512L + x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(512L + x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(512L + x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(512L + x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(512L + x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(512L + x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(512L + x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(512L + x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(512L + x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(512L + x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(512L + x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(512L + x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(512L + x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(512L + x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(512L + x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(512L + x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(512L + x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(512L + x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(512L + x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(512L + x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(512L + x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(512L + x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(512L + x1));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(512L + x1 + (640L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(512L + x1 + (640L*x0)));
                auto tmp108 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(512L + x1));
                auto tmp111 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(512L + x1));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(512L + x1 + (608L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(512L + x1 + (608L*x0)));
                auto tmp119 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(512L + x1));
                auto tmp122 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(512L + x1));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(512L + x1 + (576L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(512L + x1 + (576L*x0)));
                auto tmp130 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(512L + x1));
                auto tmp133 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(512L + x1));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(512L + x1 + (544L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(512L + x1 + (544L*x0)));
                auto tmp141 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(512L + x1));
                auto tmp144 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(512L + x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                auto tmp105 = to_float_mask(tmp104 <= tmp3);
                auto tmp107 = decltype(tmp3)::blendv(tmp106, tmp3, tmp105);
                auto tmp109 = tmp108 + tmp9;
                auto tmp110 = tmp109.rsqrt();
                auto tmp112 = tmp110 * tmp111;
                auto tmp113 = tmp107 * tmp112;
                auto tmp114 = tmp103 + tmp113;
                auto tmp116 = to_float_mask(tmp115 <= tmp3);
                auto tmp118 = decltype(tmp3)::blendv(tmp117, tmp3, tmp116);
                auto tmp120 = tmp119 + tmp9;
                auto tmp121 = tmp120.rsqrt();
                auto tmp123 = tmp121 * tmp122;
                auto tmp124 = tmp118 * tmp123;
                auto tmp125 = tmp114 + tmp124;
                auto tmp127 = to_float_mask(tmp126 <= tmp3);
                auto tmp129 = decltype(tmp3)::blendv(tmp128, tmp3, tmp127);
                auto tmp131 = tmp130 + tmp9;
                auto tmp132 = tmp131.rsqrt();
                auto tmp134 = tmp132 * tmp133;
                auto tmp135 = tmp129 * tmp134;
                auto tmp136 = tmp125 + tmp135;
                auto tmp138 = to_float_mask(tmp137 <= tmp3);
                auto tmp140 = decltype(tmp3)::blendv(tmp139, tmp3, tmp138);
                auto tmp142 = tmp141 + tmp9;
                auto tmp143 = tmp142.rsqrt();
                auto tmp145 = tmp143 * tmp144;
                auto tmp146 = tmp140 * tmp145;
                auto tmp147 = tmp136 + tmp146;
                tmp147.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(196L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (928L*x0)));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (928L*x0)));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (896L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (896L*x0)));
                auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp23 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1 + (864L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1 + (864L*x0)));
                auto tmp31 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                auto tmp34 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (832L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (832L*x0)));
                auto tmp42 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                auto tmp45 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (800L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (800L*x0)));
                auto tmp53 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                auto tmp56 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1 + (768L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (768L*x0)));
                auto tmp64 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1));
                auto tmp67 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1 + (736L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1 + (736L*x0)));
                auto tmp75 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                auto tmp78 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x1 + (704L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x1 + (704L*x0)));
                auto tmp86 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(x1));
                auto tmp89 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(x1));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x1 + (672L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x1 + (672L*x0)));
                auto tmp97 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(x1));
                auto tmp100 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(x1));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(x1 + (640L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(x1 + (640L*x0)));
                auto tmp108 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(x1));
                auto tmp111 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(x1));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(x1 + (608L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(x1 + (608L*x0)));
                auto tmp119 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(x1));
                auto tmp122 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(x1));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(x1 + (576L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(x1 + (576L*x0)));
                auto tmp130 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(x1));
                auto tmp133 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(x1));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(x1 + (544L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(x1 + (544L*x0)));
                auto tmp141 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(x1));
                auto tmp144 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(x1));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(x1 + (512L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(x1 + (512L*x0)));
                auto tmp152 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(x1));
                auto tmp155 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(x1));
                auto tmp2 = static_cast<float>(0.0);
                auto tmp3 = at::vec::Vectorized<float>(tmp2);
                auto tmp4 = to_float_mask(tmp1 <= tmp3);
                auto tmp6 = decltype(tmp3)::blendv(tmp5, tmp3, tmp4);
                auto tmp8 = static_cast<float>(1e-05);
                auto tmp9 = at::vec::Vectorized<float>(tmp8);
                auto tmp10 = tmp7 + tmp9;
                auto tmp11 = tmp10.rsqrt();
                auto tmp13 = tmp11 * tmp12;
                auto tmp14 = tmp6 * tmp13;
                auto tmp15 = tmp0 + tmp14;
                auto tmp17 = to_float_mask(tmp16 <= tmp3);
                auto tmp19 = decltype(tmp3)::blendv(tmp18, tmp3, tmp17);
                auto tmp21 = tmp20 + tmp9;
                auto tmp22 = tmp21.rsqrt();
                auto tmp24 = tmp22 * tmp23;
                auto tmp25 = tmp19 * tmp24;
                auto tmp26 = tmp15 + tmp25;
                auto tmp28 = to_float_mask(tmp27 <= tmp3);
                auto tmp30 = decltype(tmp3)::blendv(tmp29, tmp3, tmp28);
                auto tmp32 = tmp31 + tmp9;
                auto tmp33 = tmp32.rsqrt();
                auto tmp35 = tmp33 * tmp34;
                auto tmp36 = tmp30 * tmp35;
                auto tmp37 = tmp26 + tmp36;
                auto tmp39 = to_float_mask(tmp38 <= tmp3);
                auto tmp41 = decltype(tmp3)::blendv(tmp40, tmp3, tmp39);
                auto tmp43 = tmp42 + tmp9;
                auto tmp44 = tmp43.rsqrt();
                auto tmp46 = tmp44 * tmp45;
                auto tmp47 = tmp41 * tmp46;
                auto tmp48 = tmp37 + tmp47;
                auto tmp50 = to_float_mask(tmp49 <= tmp3);
                auto tmp52 = decltype(tmp3)::blendv(tmp51, tmp3, tmp50);
                auto tmp54 = tmp53 + tmp9;
                auto tmp55 = tmp54.rsqrt();
                auto tmp57 = tmp55 * tmp56;
                auto tmp58 = tmp52 * tmp57;
                auto tmp59 = tmp48 + tmp58;
                auto tmp61 = to_float_mask(tmp60 <= tmp3);
                auto tmp63 = decltype(tmp3)::blendv(tmp62, tmp3, tmp61);
                auto tmp65 = tmp64 + tmp9;
                auto tmp66 = tmp65.rsqrt();
                auto tmp68 = tmp66 * tmp67;
                auto tmp69 = tmp63 * tmp68;
                auto tmp70 = tmp59 + tmp69;
                auto tmp72 = to_float_mask(tmp71 <= tmp3);
                auto tmp74 = decltype(tmp3)::blendv(tmp73, tmp3, tmp72);
                auto tmp76 = tmp75 + tmp9;
                auto tmp77 = tmp76.rsqrt();
                auto tmp79 = tmp77 * tmp78;
                auto tmp80 = tmp74 * tmp79;
                auto tmp81 = tmp70 + tmp80;
                auto tmp83 = to_float_mask(tmp82 <= tmp3);
                auto tmp85 = decltype(tmp3)::blendv(tmp84, tmp3, tmp83);
                auto tmp87 = tmp86 + tmp9;
                auto tmp88 = tmp87.rsqrt();
                auto tmp90 = tmp88 * tmp89;
                auto tmp91 = tmp85 * tmp90;
                auto tmp92 = tmp81 + tmp91;
                auto tmp94 = to_float_mask(tmp93 <= tmp3);
                auto tmp96 = decltype(tmp3)::blendv(tmp95, tmp3, tmp94);
                auto tmp98 = tmp97 + tmp9;
                auto tmp99 = tmp98.rsqrt();
                auto tmp101 = tmp99 * tmp100;
                auto tmp102 = tmp96 * tmp101;
                auto tmp103 = tmp92 + tmp102;
                auto tmp105 = to_float_mask(tmp104 <= tmp3);
                auto tmp107 = decltype(tmp3)::blendv(tmp106, tmp3, tmp105);
                auto tmp109 = tmp108 + tmp9;
                auto tmp110 = tmp109.rsqrt();
                auto tmp112 = tmp110 * tmp111;
                auto tmp113 = tmp107 * tmp112;
                auto tmp114 = tmp103 + tmp113;
                auto tmp116 = to_float_mask(tmp115 <= tmp3);
                auto tmp118 = decltype(tmp3)::blendv(tmp117, tmp3, tmp116);
                auto tmp120 = tmp119 + tmp9;
                auto tmp121 = tmp120.rsqrt();
                auto tmp123 = tmp121 * tmp122;
                auto tmp124 = tmp118 * tmp123;
                auto tmp125 = tmp114 + tmp124;
                auto tmp127 = to_float_mask(tmp126 <= tmp3);
                auto tmp129 = decltype(tmp3)::blendv(tmp128, tmp3, tmp127);
                auto tmp131 = tmp130 + tmp9;
                auto tmp132 = tmp131.rsqrt();
                auto tmp134 = tmp132 * tmp133;
                auto tmp135 = tmp129 * tmp134;
                auto tmp136 = tmp125 + tmp135;
                auto tmp138 = to_float_mask(tmp137 <= tmp3);
                auto tmp140 = decltype(tmp3)::blendv(tmp139, tmp3, tmp138);
                auto tmp142 = tmp141 + tmp9;
                auto tmp143 = tmp142.rsqrt();
                auto tmp145 = tmp143 * tmp144;
                auto tmp146 = tmp140 * tmp145;
                auto tmp147 = tmp136 + tmp146;
                auto tmp149 = to_float_mask(tmp148 <= tmp3);
                auto tmp151 = decltype(tmp3)::blendv(tmp150, tmp3, tmp149);
                auto tmp153 = tmp152 + tmp9;
                auto tmp154 = tmp153.rsqrt();
                auto tmp156 = tmp154 * tmp155;
                auto tmp157 = tmp151 * tmp156;
                auto tmp158 = tmp147 + tmp157;
                tmp158.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(736L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(736L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(672L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(672L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(640L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(640L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(608L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(608L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(576L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (576L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (576L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (576L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(576L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(544L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (544L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (544L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (544L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(544L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (512L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (512L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (512L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(14L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(14L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(512L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr5[static_cast<long>(x3 + (512L*(std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(7L, 1L + (c10::div_floor_integer(x2, 2L))))))) + (512L*(((std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(7L, 1L + (c10::div_floor_integer(x2, 2L)))))) >= 0L) ? 0L : 7L)) + (3584L*(std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(7L, 1L + (c10::div_floor_integer(x1, 2L))))))) + (3584L*(((std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(7L, 1L + (c10::div_floor_integer(x1, 2L)))))) >= 0L) ? 0L : 7L)) + (25088L*x0))];
                            auto tmp1 = tmp0 / 4;
                            auto tmp2 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x1, 2L)));
                            auto tmp3 = c10::convert<int>(std::min(7L, 1L + (c10::div_floor_integer(x1, 2L))));
                            auto tmp4 = tmp2 < tmp3;
                            auto tmp5 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x2, 2L)));
                            auto tmp6 = c10::convert<int>(std::min(7L, 1L + (c10::div_floor_integer(x2, 2L))));
                            auto tmp7 = tmp5 < tmp6;
                            auto tmp8 = tmp4 & tmp7;
                            auto tmp9 = static_cast<float>(0.0);
                            auto tmp10 = tmp8 ? tmp1 : tmp9;
                            out_ptr2[static_cast<long>(x3 + (512L*x2) + (7168L*x1) + (100352L*x0))] = tmp10;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1024L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (1024L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (1024L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(992L + x1 + (1024L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(992L + x1 + (1024L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(992L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(992L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        tmp13.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(992L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (992L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(992L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(960L + x1 + (1024L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(960L + x1 + (1024L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(960L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(960L + x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(960L + x1 + (992L*x0)));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(960L + x1 + (992L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(960L + x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(960L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        auto tmp15 = to_float_mask(tmp14 <= tmp2);
                        auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                        auto tmp19 = tmp18 + tmp8;
                        auto tmp20 = tmp19.rsqrt();
                        auto tmp22 = tmp20 * tmp21;
                        auto tmp23 = tmp17 * tmp22;
                        auto tmp24 = tmp13 + tmp23;
                        tmp24.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_threshold_backward_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (960L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(928L + x1 + (1024L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(928L + x1 + (1024L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(928L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(928L + x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(928L + x1 + (992L*x0)));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(928L + x1 + (992L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(928L + x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(928L + x1));
                        auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(928L + x1 + (960L*x0)));
                        auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(928L + x1 + (960L*x0)));
                        auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(928L + x1));
                        auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(928L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        auto tmp15 = to_float_mask(tmp14 <= tmp2);
                        auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                        auto tmp19 = tmp18 + tmp8;
                        auto tmp20 = tmp19.rsqrt();
                        auto tmp22 = tmp20 * tmp21;
                        auto tmp23 = tmp17 * tmp22;
                        auto tmp24 = tmp13 + tmp23;
                        auto tmp26 = to_float_mask(tmp25 <= tmp2);
                        auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                        auto tmp30 = tmp29 + tmp8;
                        auto tmp31 = tmp30.rsqrt();
                        auto tmp33 = tmp31 * tmp32;
                        auto tmp34 = tmp28 * tmp33;
                        auto tmp35 = tmp24 + tmp34;
                        tmp35.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(896L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(896L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(896L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(896L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(896L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(896L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(896L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(896L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(896L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(896L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(896L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(896L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(896L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(896L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(896L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(896L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                tmp46.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(864L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(864L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(864L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(864L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(864L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(864L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(864L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(864L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(864L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(864L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(864L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(864L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(864L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(864L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(864L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(864L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(864L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(864L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(864L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(864L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                tmp57.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(832L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(832L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(832L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(832L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(832L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(832L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(832L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(832L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(832L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(832L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(832L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(832L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(832L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(832L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(832L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(832L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(832L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(832L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(832L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(832L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(832L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(832L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(832L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(832L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                tmp68.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(800L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(800L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(800L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(800L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(800L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(800L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(800L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(800L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(800L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(800L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(800L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(800L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(800L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(800L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(800L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(800L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(800L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(800L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(800L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(800L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(800L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(800L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(800L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(800L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(800L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(800L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(800L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(800L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                tmp79.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(768L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(768L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(768L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(768L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(768L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(768L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(768L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(768L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(768L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(768L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(768L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(768L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(768L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(768L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(768L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(768L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(768L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(768L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(768L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(768L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(768L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(768L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(768L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(768L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(768L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(768L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(768L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(768L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(768L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(768L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(768L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(768L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                tmp90.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(736L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(736L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(736L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(736L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(736L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(736L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(736L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(736L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(736L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(736L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(736L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(736L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(736L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(736L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(736L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(736L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(736L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(736L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(736L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(736L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(736L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(736L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(736L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(736L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(736L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(736L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(736L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(736L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(736L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(736L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(736L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(736L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(736L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(736L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(736L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(736L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                tmp101.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(704L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(704L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(704L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(704L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(704L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(704L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(704L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(704L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(704L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(704L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(704L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(704L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(704L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(704L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(704L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(704L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(704L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(704L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(704L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(704L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(704L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(704L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(704L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(704L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(704L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(704L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(704L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(704L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(704L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(704L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(704L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(704L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(704L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(704L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(704L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(704L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(704L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(704L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(704L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(704L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                tmp112.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(672L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(672L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(672L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(672L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(672L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(672L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(672L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(672L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(672L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(672L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(672L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(672L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(672L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(672L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(672L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(672L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(672L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(672L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(672L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(672L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(672L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(672L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(672L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(672L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(672L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(672L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(672L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(672L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(672L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(672L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(672L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(672L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(672L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(672L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(672L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(672L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(672L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(672L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(672L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(672L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(672L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(672L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(672L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(672L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                tmp123.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(640L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(640L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(640L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(640L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(640L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(640L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(640L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(640L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(640L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(640L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(640L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(640L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(640L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(640L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(640L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(640L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(640L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(640L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(640L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(640L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(640L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(640L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(640L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(640L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(640L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(640L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(640L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(640L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(640L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(640L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(640L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(640L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(640L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(640L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(640L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(640L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(640L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(640L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(640L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(640L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(640L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(640L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(640L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(640L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(640L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(640L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(640L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(640L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                tmp134.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(608L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(608L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(608L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(608L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(608L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(608L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(608L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(608L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(608L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(608L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(608L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(608L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(608L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(608L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(608L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(608L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(608L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(608L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(608L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(608L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(608L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(608L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(608L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(608L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(608L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(608L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(608L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(608L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(608L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(608L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(608L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(608L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(608L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(608L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(608L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(608L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(608L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(608L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(608L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(608L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(608L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(608L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(608L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(608L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(608L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(608L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(608L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(608L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(608L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(608L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(608L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(608L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                tmp145.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(576L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(576L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(576L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(576L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(576L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(576L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(576L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(576L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(576L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(576L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(576L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(576L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(576L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(576L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(576L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(576L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(576L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(576L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(576L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(576L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(576L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(576L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(576L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(576L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(576L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(576L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(576L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(576L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(576L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(576L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(576L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(576L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(576L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(576L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(576L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(576L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(576L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(576L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(576L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(576L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(576L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(576L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(576L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(576L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(576L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(576L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(576L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(576L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(576L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(576L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(576L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(576L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(576L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(576L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(576L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(576L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                tmp156.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(544L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(544L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(544L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(544L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(544L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(544L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(544L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(544L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(544L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(544L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(544L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(544L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(544L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(544L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(544L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(544L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(544L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(544L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(544L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(544L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(544L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(544L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(544L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(544L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(544L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(544L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(544L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(544L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(544L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(544L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(544L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(544L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(544L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(544L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(544L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(544L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(544L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(544L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(544L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(544L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(544L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(544L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(544L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(544L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(544L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(544L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(544L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(544L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(544L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(544L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(544L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(544L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(544L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(544L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(544L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(544L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(544L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(544L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(544L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(544L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                tmp167.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(512L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(512L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(512L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(512L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(512L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(512L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(512L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(512L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(512L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(512L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(512L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(512L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(512L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(512L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(512L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(512L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(512L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(512L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(512L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(512L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(512L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(512L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(512L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(512L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(512L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(512L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(512L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(512L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(512L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(512L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(512L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(512L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(512L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(512L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(512L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(512L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(512L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(512L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(512L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(512L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(512L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(512L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(512L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(512L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(512L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(512L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(512L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(512L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(512L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(512L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(512L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(512L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(512L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(512L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(512L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(512L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(512L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(512L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(512L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(512L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(512L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(512L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(512L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(512L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                tmp178.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(480L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(480L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(480L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(480L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(480L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(480L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(480L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(480L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(480L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(480L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(480L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(480L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(480L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(480L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(480L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(480L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(480L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(480L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(480L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(480L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(480L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(480L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(480L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(480L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(480L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(480L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(480L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(480L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(480L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(480L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(480L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(480L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(480L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(480L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(480L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(480L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(480L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(480L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(480L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(480L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(480L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(480L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(480L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(480L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(480L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(480L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(480L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(480L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(480L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(480L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(480L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(480L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(480L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(480L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(480L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(480L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(480L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(480L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(480L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(480L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(480L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(480L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(480L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(480L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(480L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(480L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(480L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(480L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                tmp189.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(448L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(448L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(448L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(448L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(448L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(448L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(448L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(448L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(448L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(448L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(448L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(448L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(448L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(448L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(448L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(448L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(448L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(448L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(448L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(448L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(448L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(448L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(448L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(448L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(448L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(448L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(448L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(448L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(448L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(448L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(448L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(448L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(448L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(448L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(448L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(448L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(448L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(448L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(448L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(448L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(448L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(448L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(448L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(448L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(448L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(448L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(448L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(448L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(448L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(448L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(448L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(448L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(448L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(448L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(448L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(448L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(448L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(448L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(448L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(448L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(448L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(448L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(448L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(448L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(448L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(448L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(448L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(448L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(448L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(448L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(448L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(448L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                tmp200.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(416L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(416L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(416L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(416L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(416L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(416L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(416L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(416L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(416L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(416L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(416L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(416L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(416L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(416L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(416L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(416L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(416L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(416L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(416L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(416L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(416L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(416L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(416L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(416L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(416L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(416L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(416L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(416L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(416L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(416L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(416L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(416L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(416L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(416L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(416L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(416L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(416L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(416L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(416L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(416L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(416L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(416L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(416L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(416L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(416L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(416L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(416L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(416L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(416L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(416L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(416L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(416L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(416L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(416L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(416L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(416L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(416L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(416L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(416L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(416L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(416L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(416L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(416L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(416L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(416L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(416L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(416L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(416L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(416L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(416L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(416L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(416L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(416L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(416L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(416L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(416L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                tmp211.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(384L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(384L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(384L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(384L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(384L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(384L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(384L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(384L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(384L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(384L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(384L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(384L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(384L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(384L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(384L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(384L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(384L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(384L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(384L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(384L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(384L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(384L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(384L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(384L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(384L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(384L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(384L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(384L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(384L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(384L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(384L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(384L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(384L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(384L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(384L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(384L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(384L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(384L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(384L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(384L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(384L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(384L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(384L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(384L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(384L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(384L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(384L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(384L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(384L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(384L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(384L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(384L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(384L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(384L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(384L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(384L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(384L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(384L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(384L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(384L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(384L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(384L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(384L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(384L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(384L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(384L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(384L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(384L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(384L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(384L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(384L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(384L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(384L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(384L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(384L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(384L + x1));
                auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(384L + x1 + (416L*x0)));
                auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(384L + x1 + (416L*x0)));
                auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(384L + x1));
                auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(384L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                auto tmp213 = to_float_mask(tmp212 <= tmp2);
                auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                auto tmp217 = tmp216 + tmp8;
                auto tmp218 = tmp217.rsqrt();
                auto tmp220 = tmp218 * tmp219;
                auto tmp221 = tmp215 * tmp220;
                auto tmp222 = tmp211 + tmp221;
                tmp222.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(352L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(352L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(352L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(352L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(352L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(352L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(352L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(352L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(352L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(352L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(352L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(352L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(352L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(352L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(352L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(352L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(352L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(352L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(352L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(352L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(352L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(352L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(352L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(352L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(352L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(352L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(352L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(352L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(352L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(352L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(352L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(352L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(352L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(352L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(352L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(352L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(352L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(352L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(352L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(352L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(352L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(352L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(352L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(352L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(352L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(352L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(352L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(352L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(352L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(352L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(352L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(352L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(352L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(352L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(352L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(352L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(352L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(352L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(352L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(352L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(352L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(352L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(352L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(352L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(352L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(352L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(352L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(352L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(352L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(352L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(352L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(352L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(352L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(352L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(352L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(352L + x1));
                auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(352L + x1 + (416L*x0)));
                auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(352L + x1 + (416L*x0)));
                auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(352L + x1));
                auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(352L + x1));
                auto tmp223 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(352L + x1 + (384L*x0)));
                auto tmp225 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(352L + x1 + (384L*x0)));
                auto tmp227 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(352L + x1));
                auto tmp230 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(352L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                auto tmp213 = to_float_mask(tmp212 <= tmp2);
                auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                auto tmp217 = tmp216 + tmp8;
                auto tmp218 = tmp217.rsqrt();
                auto tmp220 = tmp218 * tmp219;
                auto tmp221 = tmp215 * tmp220;
                auto tmp222 = tmp211 + tmp221;
                auto tmp224 = to_float_mask(tmp223 <= tmp2);
                auto tmp226 = decltype(tmp2)::blendv(tmp225, tmp2, tmp224);
                auto tmp228 = tmp227 + tmp8;
                auto tmp229 = tmp228.rsqrt();
                auto tmp231 = tmp229 * tmp230;
                auto tmp232 = tmp226 * tmp231;
                auto tmp233 = tmp222 + tmp232;
                tmp233.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(320L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(320L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(320L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(320L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(320L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(320L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(320L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(320L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(320L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(320L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(320L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(320L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(320L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(320L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(320L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(320L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(320L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(320L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(320L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(320L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(320L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(320L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(320L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(320L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(320L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(320L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(320L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(320L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(320L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(320L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(320L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(320L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(320L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(320L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(320L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(320L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(320L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(320L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(320L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(320L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(320L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(320L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(320L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(320L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(320L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(320L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(320L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(320L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(320L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(320L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(320L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(320L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(320L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(320L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(320L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(320L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(320L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(320L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(320L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(320L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(320L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(320L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(320L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(320L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(320L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(320L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(320L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(320L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(320L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(320L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(320L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(320L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(320L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(320L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(320L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(320L + x1));
                auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(320L + x1 + (416L*x0)));
                auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(320L + x1 + (416L*x0)));
                auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(320L + x1));
                auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(320L + x1));
                auto tmp223 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(320L + x1 + (384L*x0)));
                auto tmp225 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(320L + x1 + (384L*x0)));
                auto tmp227 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(320L + x1));
                auto tmp230 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(320L + x1));
                auto tmp234 = at::vec::Vectorized<float>::loadu(in_ptr84 + static_cast<long>(320L + x1 + (352L*x0)));
                auto tmp236 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(320L + x1 + (352L*x0)));
                auto tmp238 = at::vec::Vectorized<float>::loadu(in_ptr86 + static_cast<long>(320L + x1));
                auto tmp241 = at::vec::Vectorized<float>::loadu(in_ptr87 + static_cast<long>(320L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                auto tmp213 = to_float_mask(tmp212 <= tmp2);
                auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                auto tmp217 = tmp216 + tmp8;
                auto tmp218 = tmp217.rsqrt();
                auto tmp220 = tmp218 * tmp219;
                auto tmp221 = tmp215 * tmp220;
                auto tmp222 = tmp211 + tmp221;
                auto tmp224 = to_float_mask(tmp223 <= tmp2);
                auto tmp226 = decltype(tmp2)::blendv(tmp225, tmp2, tmp224);
                auto tmp228 = tmp227 + tmp8;
                auto tmp229 = tmp228.rsqrt();
                auto tmp231 = tmp229 * tmp230;
                auto tmp232 = tmp226 * tmp231;
                auto tmp233 = tmp222 + tmp232;
                auto tmp235 = to_float_mask(tmp234 <= tmp2);
                auto tmp237 = decltype(tmp2)::blendv(tmp236, tmp2, tmp235);
                auto tmp239 = tmp238 + tmp8;
                auto tmp240 = tmp239.rsqrt();
                auto tmp242 = tmp240 * tmp241;
                auto tmp243 = tmp237 * tmp242;
                auto tmp244 = tmp233 + tmp243;
                tmp244.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(288L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(288L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(288L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(288L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(288L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(288L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(288L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(288L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(288L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(288L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(288L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(288L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(288L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(288L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(288L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(288L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(288L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(288L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(288L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(288L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(288L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(288L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(288L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(288L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(288L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(288L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(288L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(288L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(288L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(288L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(288L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(288L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(288L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(288L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(288L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(288L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(288L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(288L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(288L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(288L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(288L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(288L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(288L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(288L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(288L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(288L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(288L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(288L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(288L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(288L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(288L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(288L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(288L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(288L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(288L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(288L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(288L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(288L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(288L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(288L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(288L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(288L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(288L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(288L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(288L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(288L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(288L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(288L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(288L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(288L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(288L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(288L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(288L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(288L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(288L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(288L + x1));
                auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(288L + x1 + (416L*x0)));
                auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(288L + x1 + (416L*x0)));
                auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(288L + x1));
                auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(288L + x1));
                auto tmp223 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(288L + x1 + (384L*x0)));
                auto tmp225 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(288L + x1 + (384L*x0)));
                auto tmp227 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(288L + x1));
                auto tmp230 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(288L + x1));
                auto tmp234 = at::vec::Vectorized<float>::loadu(in_ptr84 + static_cast<long>(288L + x1 + (352L*x0)));
                auto tmp236 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(288L + x1 + (352L*x0)));
                auto tmp238 = at::vec::Vectorized<float>::loadu(in_ptr86 + static_cast<long>(288L + x1));
                auto tmp241 = at::vec::Vectorized<float>::loadu(in_ptr87 + static_cast<long>(288L + x1));
                auto tmp245 = at::vec::Vectorized<float>::loadu(in_ptr88 + static_cast<long>(288L + x1 + (320L*x0)));
                auto tmp247 = at::vec::Vectorized<float>::loadu(in_ptr89 + static_cast<long>(288L + x1 + (320L*x0)));
                auto tmp249 = at::vec::Vectorized<float>::loadu(in_ptr90 + static_cast<long>(288L + x1));
                auto tmp252 = at::vec::Vectorized<float>::loadu(in_ptr91 + static_cast<long>(288L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                auto tmp213 = to_float_mask(tmp212 <= tmp2);
                auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                auto tmp217 = tmp216 + tmp8;
                auto tmp218 = tmp217.rsqrt();
                auto tmp220 = tmp218 * tmp219;
                auto tmp221 = tmp215 * tmp220;
                auto tmp222 = tmp211 + tmp221;
                auto tmp224 = to_float_mask(tmp223 <= tmp2);
                auto tmp226 = decltype(tmp2)::blendv(tmp225, tmp2, tmp224);
                auto tmp228 = tmp227 + tmp8;
                auto tmp229 = tmp228.rsqrt();
                auto tmp231 = tmp229 * tmp230;
                auto tmp232 = tmp226 * tmp231;
                auto tmp233 = tmp222 + tmp232;
                auto tmp235 = to_float_mask(tmp234 <= tmp2);
                auto tmp237 = decltype(tmp2)::blendv(tmp236, tmp2, tmp235);
                auto tmp239 = tmp238 + tmp8;
                auto tmp240 = tmp239.rsqrt();
                auto tmp242 = tmp240 * tmp241;
                auto tmp243 = tmp237 * tmp242;
                auto tmp244 = tmp233 + tmp243;
                auto tmp246 = to_float_mask(tmp245 <= tmp2);
                auto tmp248 = decltype(tmp2)::blendv(tmp247, tmp2, tmp246);
                auto tmp250 = tmp249 + tmp8;
                auto tmp251 = tmp250.rsqrt();
                auto tmp253 = tmp251 * tmp252;
                auto tmp254 = tmp248 * tmp253;
                auto tmp255 = tmp244 + tmp254;
                tmp255.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const float* in_ptr92,
                       const float* in_ptr93,
                       const float* in_ptr94,
                       const float* in_ptr95)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(256L + x1 + (1024L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(256L + x1 + (1024L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(256L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(256L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(256L + x1 + (992L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(256L + x1 + (992L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(256L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(256L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(256L + x1 + (960L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(256L + x1 + (960L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(256L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(256L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(256L + x1 + (928L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(256L + x1 + (928L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(256L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(256L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(256L + x1 + (896L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(256L + x1 + (896L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(256L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(256L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(256L + x1 + (864L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(256L + x1 + (864L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(256L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(256L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(256L + x1 + (832L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(256L + x1 + (832L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(256L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(256L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(256L + x1 + (800L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(256L + x1 + (800L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(256L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(256L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(256L + x1 + (768L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(256L + x1 + (768L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(256L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(256L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(256L + x1 + (736L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(256L + x1 + (736L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(256L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(256L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(256L + x1 + (704L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(256L + x1 + (704L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(256L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(256L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(256L + x1 + (672L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(256L + x1 + (672L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(256L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(256L + x1));
                auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(256L + x1 + (640L*x0)));
                auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(256L + x1 + (640L*x0)));
                auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(256L + x1));
                auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(256L + x1));
                auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(256L + x1 + (608L*x0)));
                auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(256L + x1 + (608L*x0)));
                auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(256L + x1));
                auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(256L + x1));
                auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(256L + x1 + (576L*x0)));
                auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(256L + x1 + (576L*x0)));
                auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(256L + x1));
                auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(256L + x1));
                auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(256L + x1 + (544L*x0)));
                auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(256L + x1 + (544L*x0)));
                auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(256L + x1));
                auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(256L + x1));
                auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(256L + x1 + (512L*x0)));
                auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(256L + x1 + (512L*x0)));
                auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(256L + x1));
                auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(256L + x1));
                auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(256L + x1 + (480L*x0)));
                auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(256L + x1 + (480L*x0)));
                auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(256L + x1));
                auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(256L + x1));
                auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(256L + x1 + (448L*x0)));
                auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(256L + x1 + (448L*x0)));
                auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(256L + x1));
                auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(256L + x1));
                auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(256L + x1 + (416L*x0)));
                auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(256L + x1 + (416L*x0)));
                auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(256L + x1));
                auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(256L + x1));
                auto tmp223 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(256L + x1 + (384L*x0)));
                auto tmp225 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(256L + x1 + (384L*x0)));
                auto tmp227 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(256L + x1));
                auto tmp230 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(256L + x1));
                auto tmp234 = at::vec::Vectorized<float>::loadu(in_ptr84 + static_cast<long>(256L + x1 + (352L*x0)));
                auto tmp236 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(256L + x1 + (352L*x0)));
                auto tmp238 = at::vec::Vectorized<float>::loadu(in_ptr86 + static_cast<long>(256L + x1));
                auto tmp241 = at::vec::Vectorized<float>::loadu(in_ptr87 + static_cast<long>(256L + x1));
                auto tmp245 = at::vec::Vectorized<float>::loadu(in_ptr88 + static_cast<long>(256L + x1 + (320L*x0)));
                auto tmp247 = at::vec::Vectorized<float>::loadu(in_ptr89 + static_cast<long>(256L + x1 + (320L*x0)));
                auto tmp249 = at::vec::Vectorized<float>::loadu(in_ptr90 + static_cast<long>(256L + x1));
                auto tmp252 = at::vec::Vectorized<float>::loadu(in_ptr91 + static_cast<long>(256L + x1));
                auto tmp256 = at::vec::Vectorized<float>::loadu(in_ptr92 + static_cast<long>(256L + x1 + (288L*x0)));
                auto tmp258 = at::vec::Vectorized<float>::loadu(in_ptr93 + static_cast<long>(256L + x1 + (288L*x0)));
                auto tmp260 = at::vec::Vectorized<float>::loadu(in_ptr94 + static_cast<long>(256L + x1));
                auto tmp263 = at::vec::Vectorized<float>::loadu(in_ptr95 + static_cast<long>(256L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                auto tmp136 = to_float_mask(tmp135 <= tmp2);
                auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                auto tmp140 = tmp139 + tmp8;
                auto tmp141 = tmp140.rsqrt();
                auto tmp143 = tmp141 * tmp142;
                auto tmp144 = tmp138 * tmp143;
                auto tmp145 = tmp134 + tmp144;
                auto tmp147 = to_float_mask(tmp146 <= tmp2);
                auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                auto tmp151 = tmp150 + tmp8;
                auto tmp152 = tmp151.rsqrt();
                auto tmp154 = tmp152 * tmp153;
                auto tmp155 = tmp149 * tmp154;
                auto tmp156 = tmp145 + tmp155;
                auto tmp158 = to_float_mask(tmp157 <= tmp2);
                auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                auto tmp162 = tmp161 + tmp8;
                auto tmp163 = tmp162.rsqrt();
                auto tmp165 = tmp163 * tmp164;
                auto tmp166 = tmp160 * tmp165;
                auto tmp167 = tmp156 + tmp166;
                auto tmp169 = to_float_mask(tmp168 <= tmp2);
                auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                auto tmp173 = tmp172 + tmp8;
                auto tmp174 = tmp173.rsqrt();
                auto tmp176 = tmp174 * tmp175;
                auto tmp177 = tmp171 * tmp176;
                auto tmp178 = tmp167 + tmp177;
                auto tmp180 = to_float_mask(tmp179 <= tmp2);
                auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                auto tmp184 = tmp183 + tmp8;
                auto tmp185 = tmp184.rsqrt();
                auto tmp187 = tmp185 * tmp186;
                auto tmp188 = tmp182 * tmp187;
                auto tmp189 = tmp178 + tmp188;
                auto tmp191 = to_float_mask(tmp190 <= tmp2);
                auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                auto tmp195 = tmp194 + tmp8;
                auto tmp196 = tmp195.rsqrt();
                auto tmp198 = tmp196 * tmp197;
                auto tmp199 = tmp193 * tmp198;
                auto tmp200 = tmp189 + tmp199;
                auto tmp202 = to_float_mask(tmp201 <= tmp2);
                auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                auto tmp206 = tmp205 + tmp8;
                auto tmp207 = tmp206.rsqrt();
                auto tmp209 = tmp207 * tmp208;
                auto tmp210 = tmp204 * tmp209;
                auto tmp211 = tmp200 + tmp210;
                auto tmp213 = to_float_mask(tmp212 <= tmp2);
                auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                auto tmp217 = tmp216 + tmp8;
                auto tmp218 = tmp217.rsqrt();
                auto tmp220 = tmp218 * tmp219;
                auto tmp221 = tmp215 * tmp220;
                auto tmp222 = tmp211 + tmp221;
                auto tmp224 = to_float_mask(tmp223 <= tmp2);
                auto tmp226 = decltype(tmp2)::blendv(tmp225, tmp2, tmp224);
                auto tmp228 = tmp227 + tmp8;
                auto tmp229 = tmp228.rsqrt();
                auto tmp231 = tmp229 * tmp230;
                auto tmp232 = tmp226 * tmp231;
                auto tmp233 = tmp222 + tmp232;
                auto tmp235 = to_float_mask(tmp234 <= tmp2);
                auto tmp237 = decltype(tmp2)::blendv(tmp236, tmp2, tmp235);
                auto tmp239 = tmp238 + tmp8;
                auto tmp240 = tmp239.rsqrt();
                auto tmp242 = tmp240 * tmp241;
                auto tmp243 = tmp237 * tmp242;
                auto tmp244 = tmp233 + tmp243;
                auto tmp246 = to_float_mask(tmp245 <= tmp2);
                auto tmp248 = decltype(tmp2)::blendv(tmp247, tmp2, tmp246);
                auto tmp250 = tmp249 + tmp8;
                auto tmp251 = tmp250.rsqrt();
                auto tmp253 = tmp251 * tmp252;
                auto tmp254 = tmp248 * tmp253;
                auto tmp255 = tmp244 + tmp254;
                auto tmp257 = to_float_mask(tmp256 <= tmp2);
                auto tmp259 = decltype(tmp2)::blendv(tmp258, tmp2, tmp257);
                auto tmp261 = tmp260 + tmp8;
                auto tmp262 = tmp261.rsqrt();
                auto tmp264 = tmp262 * tmp263;
                auto tmp265 = tmp259 * tmp264;
                auto tmp266 = tmp255 + tmp265;
                tmp266.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const float* in_ptr92,
                       const float* in_ptr93,
                       const float* in_ptr94,
                       const float* in_ptr95,
                       const float* in_ptr96,
                       const float* in_ptr97,
                       const float* in_ptr98,
                       const float* in_ptr99)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(784L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(256L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (992L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (992L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1 + (960L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1 + (960L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (928L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (928L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                    auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (896L*x0)));
                    auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (896L*x0)));
                    auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                    auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                    auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1));
                    auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                    auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                    auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1));
                    auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(x1));
                    auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(x1));
                    auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x1 + (768L*x0)));
                    auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x1 + (768L*x0)));
                    auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(x1));
                    auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(x1));
                    auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(x1 + (736L*x0)));
                    auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(x1 + (736L*x0)));
                    auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(x1));
                    auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(x1));
                    auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(x1 + (704L*x0)));
                    auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(x1 + (704L*x0)));
                    auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(x1));
                    auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(x1));
                    auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(x1 + (672L*x0)));
                    auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(x1 + (672L*x0)));
                    auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(x1));
                    auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(x1));
                    auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(x1 + (640L*x0)));
                    auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(x1 + (640L*x0)));
                    auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(x1));
                    auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(x1));
                    auto tmp146 = at::vec::Vectorized<float>::loadu(in_ptr52 + static_cast<long>(x1 + (608L*x0)));
                    auto tmp148 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(x1 + (608L*x0)));
                    auto tmp150 = at::vec::Vectorized<float>::loadu(in_ptr54 + static_cast<long>(x1));
                    auto tmp153 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(x1));
                    auto tmp157 = at::vec::Vectorized<float>::loadu(in_ptr56 + static_cast<long>(x1 + (576L*x0)));
                    auto tmp159 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(x1 + (576L*x0)));
                    auto tmp161 = at::vec::Vectorized<float>::loadu(in_ptr58 + static_cast<long>(x1));
                    auto tmp164 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(x1));
                    auto tmp168 = at::vec::Vectorized<float>::loadu(in_ptr60 + static_cast<long>(x1 + (544L*x0)));
                    auto tmp170 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(x1 + (544L*x0)));
                    auto tmp172 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(x1));
                    auto tmp175 = at::vec::Vectorized<float>::loadu(in_ptr63 + static_cast<long>(x1));
                    auto tmp179 = at::vec::Vectorized<float>::loadu(in_ptr64 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp181 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp183 = at::vec::Vectorized<float>::loadu(in_ptr66 + static_cast<long>(x1));
                    auto tmp186 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(x1));
                    auto tmp190 = at::vec::Vectorized<float>::loadu(in_ptr68 + static_cast<long>(x1 + (480L*x0)));
                    auto tmp192 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(x1 + (480L*x0)));
                    auto tmp194 = at::vec::Vectorized<float>::loadu(in_ptr70 + static_cast<long>(x1));
                    auto tmp197 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(x1));
                    auto tmp201 = at::vec::Vectorized<float>::loadu(in_ptr72 + static_cast<long>(x1 + (448L*x0)));
                    auto tmp203 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(x1 + (448L*x0)));
                    auto tmp205 = at::vec::Vectorized<float>::loadu(in_ptr74 + static_cast<long>(x1));
                    auto tmp208 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(x1));
                    auto tmp212 = at::vec::Vectorized<float>::loadu(in_ptr76 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp214 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp216 = at::vec::Vectorized<float>::loadu(in_ptr78 + static_cast<long>(x1));
                    auto tmp219 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(x1));
                    auto tmp223 = at::vec::Vectorized<float>::loadu(in_ptr80 + static_cast<long>(x1 + (384L*x0)));
                    auto tmp225 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(x1 + (384L*x0)));
                    auto tmp227 = at::vec::Vectorized<float>::loadu(in_ptr82 + static_cast<long>(x1));
                    auto tmp230 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(x1));
                    auto tmp234 = at::vec::Vectorized<float>::loadu(in_ptr84 + static_cast<long>(x1 + (352L*x0)));
                    auto tmp236 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(x1 + (352L*x0)));
                    auto tmp238 = at::vec::Vectorized<float>::loadu(in_ptr86 + static_cast<long>(x1));
                    auto tmp241 = at::vec::Vectorized<float>::loadu(in_ptr87 + static_cast<long>(x1));
                    auto tmp245 = at::vec::Vectorized<float>::loadu(in_ptr88 + static_cast<long>(x1 + (320L*x0)));
                    auto tmp247 = at::vec::Vectorized<float>::loadu(in_ptr89 + static_cast<long>(x1 + (320L*x0)));
                    auto tmp249 = at::vec::Vectorized<float>::loadu(in_ptr90 + static_cast<long>(x1));
                    auto tmp252 = at::vec::Vectorized<float>::loadu(in_ptr91 + static_cast<long>(x1));
                    auto tmp256 = at::vec::Vectorized<float>::loadu(in_ptr92 + static_cast<long>(x1 + (288L*x0)));
                    auto tmp258 = at::vec::Vectorized<float>::loadu(in_ptr93 + static_cast<long>(x1 + (288L*x0)));
                    auto tmp260 = at::vec::Vectorized<float>::loadu(in_ptr94 + static_cast<long>(x1));
                    auto tmp263 = at::vec::Vectorized<float>::loadu(in_ptr95 + static_cast<long>(x1));
                    auto tmp267 = at::vec::Vectorized<float>::loadu(in_ptr96 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp269 = at::vec::Vectorized<float>::loadu(in_ptr97 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp271 = at::vec::Vectorized<float>::loadu(in_ptr98 + static_cast<long>(x1));
                    auto tmp274 = at::vec::Vectorized<float>::loadu(in_ptr99 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    auto tmp48 = to_float_mask(tmp47 <= tmp2);
                    auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                    auto tmp52 = tmp51 + tmp8;
                    auto tmp53 = tmp52.rsqrt();
                    auto tmp55 = tmp53 * tmp54;
                    auto tmp56 = tmp50 * tmp55;
                    auto tmp57 = tmp46 + tmp56;
                    auto tmp59 = to_float_mask(tmp58 <= tmp2);
                    auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                    auto tmp63 = tmp62 + tmp8;
                    auto tmp64 = tmp63.rsqrt();
                    auto tmp66 = tmp64 * tmp65;
                    auto tmp67 = tmp61 * tmp66;
                    auto tmp68 = tmp57 + tmp67;
                    auto tmp70 = to_float_mask(tmp69 <= tmp2);
                    auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                    auto tmp74 = tmp73 + tmp8;
                    auto tmp75 = tmp74.rsqrt();
                    auto tmp77 = tmp75 * tmp76;
                    auto tmp78 = tmp72 * tmp77;
                    auto tmp79 = tmp68 + tmp78;
                    auto tmp81 = to_float_mask(tmp80 <= tmp2);
                    auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                    auto tmp85 = tmp84 + tmp8;
                    auto tmp86 = tmp85.rsqrt();
                    auto tmp88 = tmp86 * tmp87;
                    auto tmp89 = tmp83 * tmp88;
                    auto tmp90 = tmp79 + tmp89;
                    auto tmp92 = to_float_mask(tmp91 <= tmp2);
                    auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                    auto tmp96 = tmp95 + tmp8;
                    auto tmp97 = tmp96.rsqrt();
                    auto tmp99 = tmp97 * tmp98;
                    auto tmp100 = tmp94 * tmp99;
                    auto tmp101 = tmp90 + tmp100;
                    auto tmp103 = to_float_mask(tmp102 <= tmp2);
                    auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                    auto tmp107 = tmp106 + tmp8;
                    auto tmp108 = tmp107.rsqrt();
                    auto tmp110 = tmp108 * tmp109;
                    auto tmp111 = tmp105 * tmp110;
                    auto tmp112 = tmp101 + tmp111;
                    auto tmp114 = to_float_mask(tmp113 <= tmp2);
                    auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                    auto tmp118 = tmp117 + tmp8;
                    auto tmp119 = tmp118.rsqrt();
                    auto tmp121 = tmp119 * tmp120;
                    auto tmp122 = tmp116 * tmp121;
                    auto tmp123 = tmp112 + tmp122;
                    auto tmp125 = to_float_mask(tmp124 <= tmp2);
                    auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                    auto tmp129 = tmp128 + tmp8;
                    auto tmp130 = tmp129.rsqrt();
                    auto tmp132 = tmp130 * tmp131;
                    auto tmp133 = tmp127 * tmp132;
                    auto tmp134 = tmp123 + tmp133;
                    auto tmp136 = to_float_mask(tmp135 <= tmp2);
                    auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                    auto tmp140 = tmp139 + tmp8;
                    auto tmp141 = tmp140.rsqrt();
                    auto tmp143 = tmp141 * tmp142;
                    auto tmp144 = tmp138 * tmp143;
                    auto tmp145 = tmp134 + tmp144;
                    auto tmp147 = to_float_mask(tmp146 <= tmp2);
                    auto tmp149 = decltype(tmp2)::blendv(tmp148, tmp2, tmp147);
                    auto tmp151 = tmp150 + tmp8;
                    auto tmp152 = tmp151.rsqrt();
                    auto tmp154 = tmp152 * tmp153;
                    auto tmp155 = tmp149 * tmp154;
                    auto tmp156 = tmp145 + tmp155;
                    auto tmp158 = to_float_mask(tmp157 <= tmp2);
                    auto tmp160 = decltype(tmp2)::blendv(tmp159, tmp2, tmp158);
                    auto tmp162 = tmp161 + tmp8;
                    auto tmp163 = tmp162.rsqrt();
                    auto tmp165 = tmp163 * tmp164;
                    auto tmp166 = tmp160 * tmp165;
                    auto tmp167 = tmp156 + tmp166;
                    auto tmp169 = to_float_mask(tmp168 <= tmp2);
                    auto tmp171 = decltype(tmp2)::blendv(tmp170, tmp2, tmp169);
                    auto tmp173 = tmp172 + tmp8;
                    auto tmp174 = tmp173.rsqrt();
                    auto tmp176 = tmp174 * tmp175;
                    auto tmp177 = tmp171 * tmp176;
                    auto tmp178 = tmp167 + tmp177;
                    auto tmp180 = to_float_mask(tmp179 <= tmp2);
                    auto tmp182 = decltype(tmp2)::blendv(tmp181, tmp2, tmp180);
                    auto tmp184 = tmp183 + tmp8;
                    auto tmp185 = tmp184.rsqrt();
                    auto tmp187 = tmp185 * tmp186;
                    auto tmp188 = tmp182 * tmp187;
                    auto tmp189 = tmp178 + tmp188;
                    auto tmp191 = to_float_mask(tmp190 <= tmp2);
                    auto tmp193 = decltype(tmp2)::blendv(tmp192, tmp2, tmp191);
                    auto tmp195 = tmp194 + tmp8;
                    auto tmp196 = tmp195.rsqrt();
                    auto tmp198 = tmp196 * tmp197;
                    auto tmp199 = tmp193 * tmp198;
                    auto tmp200 = tmp189 + tmp199;
                    auto tmp202 = to_float_mask(tmp201 <= tmp2);
                    auto tmp204 = decltype(tmp2)::blendv(tmp203, tmp2, tmp202);
                    auto tmp206 = tmp205 + tmp8;
                    auto tmp207 = tmp206.rsqrt();
                    auto tmp209 = tmp207 * tmp208;
                    auto tmp210 = tmp204 * tmp209;
                    auto tmp211 = tmp200 + tmp210;
                    auto tmp213 = to_float_mask(tmp212 <= tmp2);
                    auto tmp215 = decltype(tmp2)::blendv(tmp214, tmp2, tmp213);
                    auto tmp217 = tmp216 + tmp8;
                    auto tmp218 = tmp217.rsqrt();
                    auto tmp220 = tmp218 * tmp219;
                    auto tmp221 = tmp215 * tmp220;
                    auto tmp222 = tmp211 + tmp221;
                    auto tmp224 = to_float_mask(tmp223 <= tmp2);
                    auto tmp226 = decltype(tmp2)::blendv(tmp225, tmp2, tmp224);
                    auto tmp228 = tmp227 + tmp8;
                    auto tmp229 = tmp228.rsqrt();
                    auto tmp231 = tmp229 * tmp230;
                    auto tmp232 = tmp226 * tmp231;
                    auto tmp233 = tmp222 + tmp232;
                    auto tmp235 = to_float_mask(tmp234 <= tmp2);
                    auto tmp237 = decltype(tmp2)::blendv(tmp236, tmp2, tmp235);
                    auto tmp239 = tmp238 + tmp8;
                    auto tmp240 = tmp239.rsqrt();
                    auto tmp242 = tmp240 * tmp241;
                    auto tmp243 = tmp237 * tmp242;
                    auto tmp244 = tmp233 + tmp243;
                    auto tmp246 = to_float_mask(tmp245 <= tmp2);
                    auto tmp248 = decltype(tmp2)::blendv(tmp247, tmp2, tmp246);
                    auto tmp250 = tmp249 + tmp8;
                    auto tmp251 = tmp250.rsqrt();
                    auto tmp253 = tmp251 * tmp252;
                    auto tmp254 = tmp248 * tmp253;
                    auto tmp255 = tmp244 + tmp254;
                    auto tmp257 = to_float_mask(tmp256 <= tmp2);
                    auto tmp259 = decltype(tmp2)::blendv(tmp258, tmp2, tmp257);
                    auto tmp261 = tmp260 + tmp8;
                    auto tmp262 = tmp261.rsqrt();
                    auto tmp264 = tmp262 * tmp263;
                    auto tmp265 = tmp259 * tmp264;
                    auto tmp266 = tmp255 + tmp265;
                    auto tmp268 = to_float_mask(tmp267 <= tmp2);
                    auto tmp270 = decltype(tmp2)::blendv(tmp269, tmp2, tmp268);
                    auto tmp272 = tmp271 + tmp8;
                    auto tmp273 = tmp272.rsqrt();
                    auto tmp275 = tmp273 * tmp274;
                    auto tmp276 = tmp270 * tmp275;
                    auto tmp277 = tmp266 + tmp276;
                    tmp277.store(in_out_ptr0 + static_cast<long>(x1 + (256L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(928L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (928L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(928L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_109 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (896L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_110 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_111 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (864L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(864L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_112 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_113 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (832L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_114 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_115 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (800L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_116 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_117 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (768L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_118 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_119 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(736L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (736L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(736L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_120 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_121 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (704L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_122 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_123 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(672L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (672L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(672L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_124 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_125 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(640L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (640L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(640L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_126 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_127 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(608L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (608L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(608L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_128 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_129 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(576L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (576L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (576L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (576L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(576L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_130 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_131 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(544L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (544L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (544L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (544L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(544L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_132 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_133 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_134 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_135 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(480L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(480L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_136 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_137 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(448L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(448L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_138 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_139 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(416L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(416L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_140 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_141 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(384L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(384L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_142 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_143 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_144 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_145 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(320L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(320L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_146 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_147 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(288L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(288L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_148 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                float tmp_acc1 = 0;
                at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                    auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp8 = tmp6 - tmp7;
                    auto tmp9 = tmp5 * tmp8;
                    tmp_acc0_vec = tmp_acc0_vec + tmp5;
                    tmp_acc1_vec = tmp_acc1_vec + tmp9;
                }
                tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
            auto tmp2 = static_cast<float>(1e-05);
            auto tmp3 = at::vec::Vectorized<float>(tmp2);
            auto tmp4 = tmp1 + tmp3;
            auto tmp5 = tmp4.rsqrt();
            auto tmp6 = tmp0 * tmp5;
            tmp6.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_149 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(28L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(28L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(256L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr5[static_cast<long>(x3 + (256L*(std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(14L, 1L + (c10::div_floor_integer(x2, 2L))))))) + (256L*(((std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(14L, 1L + (c10::div_floor_integer(x2, 2L)))))) >= 0L) ? 0L : 14L)) + (3584L*(std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(14L, 1L + (c10::div_floor_integer(x1, 2L))))))) + (3584L*(((std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(14L, 1L + (c10::div_floor_integer(x1, 2L)))))) >= 0L) ? 0L : 14L)) + (50176L*x0))];
                            auto tmp1 = tmp0 / 4;
                            auto tmp2 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x1, 2L)));
                            auto tmp3 = c10::convert<int>(std::min(14L, 1L + (c10::div_floor_integer(x1, 2L))));
                            auto tmp4 = tmp2 < tmp3;
                            auto tmp5 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x2, 2L)));
                            auto tmp6 = c10::convert<int>(std::min(14L, 1L + (c10::div_floor_integer(x2, 2L))));
                            auto tmp7 = tmp5 < tmp6;
                            auto tmp8 = tmp4 & tmp7;
                            auto tmp9 = static_cast<float>(0.0);
                            auto tmp10 = tmp8 ? tmp1 : tmp9;
                            out_ptr2[static_cast<long>(x3 + (256L*x2) + (7168L*x1) + (200704L*x0))] = tmp10;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_150 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (512L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(480L + x1 + (512L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(480L + x1 + (512L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(480L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(480L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        tmp13.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_151 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_152 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(480L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (480L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(480L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(448L + x1 + (512L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(448L + x1 + (512L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(448L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(448L + x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(448L + x1 + (480L*x0)));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(448L + x1 + (480L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(448L + x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(448L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        auto tmp15 = to_float_mask(tmp14 <= tmp2);
                        auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                        auto tmp19 = tmp18 + tmp8;
                        auto tmp20 = tmp19.rsqrt();
                        auto tmp22 = tmp20 * tmp21;
                        auto tmp23 = tmp17 * tmp22;
                        auto tmp24 = tmp13 + tmp23;
                        tmp24.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_153 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_threshold_backward_154 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(448L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (448L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(448L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(416L + x1 + (512L*x0)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(416L + x1 + (512L*x0)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(416L + x1));
                        auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(416L + x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(416L + x1 + (480L*x0)));
                        auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(416L + x1 + (480L*x0)));
                        auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(416L + x1));
                        auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(416L + x1));
                        auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(416L + x1 + (448L*x0)));
                        auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(416L + x1 + (448L*x0)));
                        auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(416L + x1));
                        auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(416L + x1));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = static_cast<float>(1e-05);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp12 = tmp10 * tmp11;
                        auto tmp13 = tmp5 * tmp12;
                        auto tmp15 = to_float_mask(tmp14 <= tmp2);
                        auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                        auto tmp19 = tmp18 + tmp8;
                        auto tmp20 = tmp19.rsqrt();
                        auto tmp22 = tmp20 * tmp21;
                        auto tmp23 = tmp17 * tmp22;
                        auto tmp24 = tmp13 + tmp23;
                        auto tmp26 = to_float_mask(tmp25 <= tmp2);
                        auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                        auto tmp30 = tmp29 + tmp8;
                        auto tmp31 = tmp30.rsqrt();
                        auto tmp33 = tmp31 * tmp32;
                        auto tmp34 = tmp28 * tmp33;
                        auto tmp35 = tmp24 + tmp34;
                        tmp35.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_155 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_156 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(384L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(384L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(384L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(384L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(384L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(384L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(384L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(384L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(384L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(384L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(384L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(384L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(384L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(384L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(384L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(384L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                tmp46.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_157 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_158 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(352L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(352L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(352L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(352L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(352L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(352L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(352L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(352L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(352L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(352L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(352L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(352L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(352L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(352L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(352L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(352L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(352L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(352L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(352L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(352L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                tmp57.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_159 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_160 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(320L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(320L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(320L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(320L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(320L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(320L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(320L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(320L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(320L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(320L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(320L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(320L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(320L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(320L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(320L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(320L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(320L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(320L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(320L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(320L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(320L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(320L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(320L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(320L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                tmp68.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_161 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_162 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(288L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(288L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(288L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(288L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(288L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(288L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(288L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(288L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(288L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(288L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(288L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(288L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(288L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(288L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(288L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(288L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(288L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(288L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(288L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(288L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(288L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(288L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(288L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(288L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(288L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(288L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(288L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(288L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                tmp79.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_163 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_164 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(256L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(256L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(256L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(256L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(256L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(256L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(256L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(256L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(256L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(256L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(256L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(256L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(256L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(256L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(256L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(256L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(256L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(256L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(256L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(256L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(256L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(256L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(256L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(256L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(256L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(256L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(256L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(256L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(256L + x1 + (288L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(256L + x1 + (288L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(256L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(256L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                tmp90.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_165 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_166 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(224L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(224L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(224L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(224L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(224L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(224L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(224L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(224L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(224L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(224L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(224L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(224L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(224L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(224L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(224L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(224L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(224L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(224L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(224L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(224L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(224L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(224L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(224L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(224L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(224L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(224L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(224L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(224L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(224L + x1 + (288L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(224L + x1 + (288L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(224L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(224L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(224L + x1 + (256L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(224L + x1 + (256L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(224L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(224L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                tmp101.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_167 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_168 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(192L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(192L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(192L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(192L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(192L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(192L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(192L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(192L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(192L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(192L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(192L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(192L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(192L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(192L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(192L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(192L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(192L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(192L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(192L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(192L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(192L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(192L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(192L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(192L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(192L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(192L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(192L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(192L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(192L + x1 + (288L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(192L + x1 + (288L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(192L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(192L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(192L + x1 + (256L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(192L + x1 + (256L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(192L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(192L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(192L + x1 + (224L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(192L + x1 + (224L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(192L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(192L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                tmp112.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_169 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_170 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(160L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(160L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(160L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(160L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(160L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(160L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(160L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(160L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(160L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(160L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(160L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(160L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(160L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(160L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(160L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(160L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(160L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(160L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(160L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(160L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(160L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(160L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(160L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(160L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(160L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(160L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(160L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(160L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(160L + x1 + (288L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(160L + x1 + (288L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(160L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(160L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(160L + x1 + (256L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(160L + x1 + (256L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(160L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(160L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(160L + x1 + (224L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(160L + x1 + (224L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(160L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(160L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(160L + x1 + (192L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(160L + x1 + (192L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(160L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(160L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                tmp123.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_171 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_172 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(128L + x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(128L + x1 + (512L*x0)));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(128L + x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(128L + x1));
                auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(128L + x1 + (480L*x0)));
                auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(128L + x1 + (480L*x0)));
                auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(128L + x1));
                auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(128L + x1));
                auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(128L + x1 + (448L*x0)));
                auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(128L + x1 + (448L*x0)));
                auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(128L + x1));
                auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(128L + x1));
                auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(128L + x1 + (416L*x0)));
                auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(128L + x1 + (416L*x0)));
                auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(128L + x1));
                auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(128L + x1));
                auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(128L + x1 + (384L*x0)));
                auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(128L + x1 + (384L*x0)));
                auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(128L + x1));
                auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(128L + x1));
                auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(128L + x1 + (352L*x0)));
                auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(128L + x1 + (352L*x0)));
                auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(128L + x1));
                auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(128L + x1));
                auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(128L + x1 + (320L*x0)));
                auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(128L + x1 + (320L*x0)));
                auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(128L + x1));
                auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(128L + x1));
                auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(128L + x1 + (288L*x0)));
                auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(128L + x1 + (288L*x0)));
                auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(128L + x1));
                auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(128L + x1));
                auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(128L + x1 + (256L*x0)));
                auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(128L + x1 + (256L*x0)));
                auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(128L + x1));
                auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(128L + x1));
                auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(128L + x1 + (224L*x0)));
                auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(128L + x1 + (224L*x0)));
                auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(128L + x1));
                auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(128L + x1));
                auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(128L + x1 + (192L*x0)));
                auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(128L + x1 + (192L*x0)));
                auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(128L + x1));
                auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(128L + x1));
                auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(128L + x1 + (160L*x0)));
                auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(128L + x1 + (160L*x0)));
                auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(128L + x1));
                auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(128L + x1));
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = to_float_mask(tmp0 <= tmp2);
                auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                auto tmp7 = static_cast<float>(1e-05);
                auto tmp8 = at::vec::Vectorized<float>(tmp7);
                auto tmp9 = tmp6 + tmp8;
                auto tmp10 = tmp9.rsqrt();
                auto tmp12 = tmp10 * tmp11;
                auto tmp13 = tmp5 * tmp12;
                auto tmp15 = to_float_mask(tmp14 <= tmp2);
                auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                auto tmp19 = tmp18 + tmp8;
                auto tmp20 = tmp19.rsqrt();
                auto tmp22 = tmp20 * tmp21;
                auto tmp23 = tmp17 * tmp22;
                auto tmp24 = tmp13 + tmp23;
                auto tmp26 = to_float_mask(tmp25 <= tmp2);
                auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                auto tmp30 = tmp29 + tmp8;
                auto tmp31 = tmp30.rsqrt();
                auto tmp33 = tmp31 * tmp32;
                auto tmp34 = tmp28 * tmp33;
                auto tmp35 = tmp24 + tmp34;
                auto tmp37 = to_float_mask(tmp36 <= tmp2);
                auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                auto tmp41 = tmp40 + tmp8;
                auto tmp42 = tmp41.rsqrt();
                auto tmp44 = tmp42 * tmp43;
                auto tmp45 = tmp39 * tmp44;
                auto tmp46 = tmp35 + tmp45;
                auto tmp48 = to_float_mask(tmp47 <= tmp2);
                auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                auto tmp52 = tmp51 + tmp8;
                auto tmp53 = tmp52.rsqrt();
                auto tmp55 = tmp53 * tmp54;
                auto tmp56 = tmp50 * tmp55;
                auto tmp57 = tmp46 + tmp56;
                auto tmp59 = to_float_mask(tmp58 <= tmp2);
                auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                auto tmp63 = tmp62 + tmp8;
                auto tmp64 = tmp63.rsqrt();
                auto tmp66 = tmp64 * tmp65;
                auto tmp67 = tmp61 * tmp66;
                auto tmp68 = tmp57 + tmp67;
                auto tmp70 = to_float_mask(tmp69 <= tmp2);
                auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                auto tmp74 = tmp73 + tmp8;
                auto tmp75 = tmp74.rsqrt();
                auto tmp77 = tmp75 * tmp76;
                auto tmp78 = tmp72 * tmp77;
                auto tmp79 = tmp68 + tmp78;
                auto tmp81 = to_float_mask(tmp80 <= tmp2);
                auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                auto tmp85 = tmp84 + tmp8;
                auto tmp86 = tmp85.rsqrt();
                auto tmp88 = tmp86 * tmp87;
                auto tmp89 = tmp83 * tmp88;
                auto tmp90 = tmp79 + tmp89;
                auto tmp92 = to_float_mask(tmp91 <= tmp2);
                auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                auto tmp96 = tmp95 + tmp8;
                auto tmp97 = tmp96.rsqrt();
                auto tmp99 = tmp97 * tmp98;
                auto tmp100 = tmp94 * tmp99;
                auto tmp101 = tmp90 + tmp100;
                auto tmp103 = to_float_mask(tmp102 <= tmp2);
                auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                auto tmp107 = tmp106 + tmp8;
                auto tmp108 = tmp107.rsqrt();
                auto tmp110 = tmp108 * tmp109;
                auto tmp111 = tmp105 * tmp110;
                auto tmp112 = tmp101 + tmp111;
                auto tmp114 = to_float_mask(tmp113 <= tmp2);
                auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                auto tmp118 = tmp117 + tmp8;
                auto tmp119 = tmp118.rsqrt();
                auto tmp121 = tmp119 * tmp120;
                auto tmp122 = tmp116 * tmp121;
                auto tmp123 = tmp112 + tmp122;
                auto tmp125 = to_float_mask(tmp124 <= tmp2);
                auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                auto tmp129 = tmp128 + tmp8;
                auto tmp130 = tmp129.rsqrt();
                auto tmp132 = tmp130 * tmp131;
                auto tmp133 = tmp127 * tmp132;
                auto tmp134 = tmp123 + tmp133;
                tmp134.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_173 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_174 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3136L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (480L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (480L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1 + (448L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1 + (448L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (416L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                    auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (384L*x0)));
                    auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (384L*x0)));
                    auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                    auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                    auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1 + (352L*x0)));
                    auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (352L*x0)));
                    auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1));
                    auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                    auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1 + (320L*x0)));
                    auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1 + (320L*x0)));
                    auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                    auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1));
                    auto tmp80 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x1 + (288L*x0)));
                    auto tmp82 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x1 + (288L*x0)));
                    auto tmp84 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(x1));
                    auto tmp87 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(x1));
                    auto tmp91 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp93 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp95 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(x1));
                    auto tmp98 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(x1));
                    auto tmp102 = at::vec::Vectorized<float>::loadu(in_ptr36 + static_cast<long>(x1 + (224L*x0)));
                    auto tmp104 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(x1 + (224L*x0)));
                    auto tmp106 = at::vec::Vectorized<float>::loadu(in_ptr38 + static_cast<long>(x1));
                    auto tmp109 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(x1));
                    auto tmp113 = at::vec::Vectorized<float>::loadu(in_ptr40 + static_cast<long>(x1 + (192L*x0)));
                    auto tmp115 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(x1 + (192L*x0)));
                    auto tmp117 = at::vec::Vectorized<float>::loadu(in_ptr42 + static_cast<long>(x1));
                    auto tmp120 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(x1));
                    auto tmp124 = at::vec::Vectorized<float>::loadu(in_ptr44 + static_cast<long>(x1 + (160L*x0)));
                    auto tmp126 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(x1 + (160L*x0)));
                    auto tmp128 = at::vec::Vectorized<float>::loadu(in_ptr46 + static_cast<long>(x1));
                    auto tmp131 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(x1));
                    auto tmp135 = at::vec::Vectorized<float>::loadu(in_ptr48 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp137 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp139 = at::vec::Vectorized<float>::loadu(in_ptr50 + static_cast<long>(x1));
                    auto tmp142 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    auto tmp48 = to_float_mask(tmp47 <= tmp2);
                    auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                    auto tmp52 = tmp51 + tmp8;
                    auto tmp53 = tmp52.rsqrt();
                    auto tmp55 = tmp53 * tmp54;
                    auto tmp56 = tmp50 * tmp55;
                    auto tmp57 = tmp46 + tmp56;
                    auto tmp59 = to_float_mask(tmp58 <= tmp2);
                    auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                    auto tmp63 = tmp62 + tmp8;
                    auto tmp64 = tmp63.rsqrt();
                    auto tmp66 = tmp64 * tmp65;
                    auto tmp67 = tmp61 * tmp66;
                    auto tmp68 = tmp57 + tmp67;
                    auto tmp70 = to_float_mask(tmp69 <= tmp2);
                    auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                    auto tmp74 = tmp73 + tmp8;
                    auto tmp75 = tmp74.rsqrt();
                    auto tmp77 = tmp75 * tmp76;
                    auto tmp78 = tmp72 * tmp77;
                    auto tmp79 = tmp68 + tmp78;
                    auto tmp81 = to_float_mask(tmp80 <= tmp2);
                    auto tmp83 = decltype(tmp2)::blendv(tmp82, tmp2, tmp81);
                    auto tmp85 = tmp84 + tmp8;
                    auto tmp86 = tmp85.rsqrt();
                    auto tmp88 = tmp86 * tmp87;
                    auto tmp89 = tmp83 * tmp88;
                    auto tmp90 = tmp79 + tmp89;
                    auto tmp92 = to_float_mask(tmp91 <= tmp2);
                    auto tmp94 = decltype(tmp2)::blendv(tmp93, tmp2, tmp92);
                    auto tmp96 = tmp95 + tmp8;
                    auto tmp97 = tmp96.rsqrt();
                    auto tmp99 = tmp97 * tmp98;
                    auto tmp100 = tmp94 * tmp99;
                    auto tmp101 = tmp90 + tmp100;
                    auto tmp103 = to_float_mask(tmp102 <= tmp2);
                    auto tmp105 = decltype(tmp2)::blendv(tmp104, tmp2, tmp103);
                    auto tmp107 = tmp106 + tmp8;
                    auto tmp108 = tmp107.rsqrt();
                    auto tmp110 = tmp108 * tmp109;
                    auto tmp111 = tmp105 * tmp110;
                    auto tmp112 = tmp101 + tmp111;
                    auto tmp114 = to_float_mask(tmp113 <= tmp2);
                    auto tmp116 = decltype(tmp2)::blendv(tmp115, tmp2, tmp114);
                    auto tmp118 = tmp117 + tmp8;
                    auto tmp119 = tmp118.rsqrt();
                    auto tmp121 = tmp119 * tmp120;
                    auto tmp122 = tmp116 * tmp121;
                    auto tmp123 = tmp112 + tmp122;
                    auto tmp125 = to_float_mask(tmp124 <= tmp2);
                    auto tmp127 = decltype(tmp2)::blendv(tmp126, tmp2, tmp125);
                    auto tmp129 = tmp128 + tmp8;
                    auto tmp130 = tmp129.rsqrt();
                    auto tmp132 = tmp130 * tmp131;
                    auto tmp133 = tmp127 * tmp132;
                    auto tmp134 = tmp123 + tmp133;
                    auto tmp136 = to_float_mask(tmp135 <= tmp2);
                    auto tmp138 = decltype(tmp2)::blendv(tmp137, tmp2, tmp136);
                    auto tmp140 = tmp139 + tmp8;
                    auto tmp141 = tmp140.rsqrt();
                    auto tmp143 = tmp141 * tmp142;
                    auto tmp144 = tmp138 * tmp143;
                    auto tmp145 = tmp134 + tmp144;
                    tmp145.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_175 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_176 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(416L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (416L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(416L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_177 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_178 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(384L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (384L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(384L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_179 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_180 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (352L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_181 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_182 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(320L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (320L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(320L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_183 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_184 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(288L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (288L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(288L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_185 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_186 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_187 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_188 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(224L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(224L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_189 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_190 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(192L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(192L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_191 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_192 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(160L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(160L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_193 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_194 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(128L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr5[static_cast<long>(x3 + (128L*(std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(28L, 1L + (c10::div_floor_integer(x2, 2L))))))) + (128L*(((std::min(std::max(0L, c10::div_floor_integer(x2, 2L)), (-1L) + (std::min(28L, 1L + (c10::div_floor_integer(x2, 2L)))))) >= 0L) ? 0L : 28L)) + (3584L*(std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(28L, 1L + (c10::div_floor_integer(x1, 2L))))))) + (3584L*(((std::min(std::max(0L, c10::div_floor_integer(x1, 2L)), (-1L) + (std::min(28L, 1L + (c10::div_floor_integer(x1, 2L)))))) >= 0L) ? 0L : 28L)) + (100352L*x0))];
                            auto tmp1 = tmp0 / 4;
                            auto tmp2 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x1, 2L)));
                            auto tmp3 = c10::convert<int>(std::min(28L, 1L + (c10::div_floor_integer(x1, 2L))));
                            auto tmp4 = tmp2 < tmp3;
                            auto tmp5 = c10::convert<int>(std::max(0L, c10::div_floor_integer(x2, 2L)));
                            auto tmp6 = c10::convert<int>(std::min(28L, 1L + (c10::div_floor_integer(x2, 2L))));
                            auto tmp7 = tmp5 < tmp6;
                            auto tmp8 = tmp4 & tmp7;
                            auto tmp9 = static_cast<float>(0.0);
                            auto tmp10 = tmp8 ? tmp1 : tmp9;
                            out_ptr2[static_cast<long>(x3 + (128L*x2) + (7168L*x1) + (401408L*x0))] = tmp10;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_195 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (256L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(256L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(224L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(224L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(224L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(224L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_196 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_197 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(224L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (224L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(224L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(192L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(192L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(192L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(192L + x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(192L + x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(192L + x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(192L + x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(192L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    tmp24.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_198 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_threshold_backward_199 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       float* out_ptr0,
                       float* out_ptr2)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(192L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (192L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(192L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(160L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(160L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(160L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(160L + x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(160L + x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(160L + x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(160L + x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(160L + x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(160L + x1 + (192L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(160L + x1 + (192L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(160L + x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(160L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    tmp35.store(out_ptr2 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_200 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_201 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(128L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(128L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(128L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(128L + x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(128L + x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(128L + x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(128L + x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(128L + x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(128L + x1 + (192L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(128L + x1 + (192L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(128L + x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(128L + x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(128L + x1 + (160L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(128L + x1 + (160L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(128L + x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(128L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    tmp46.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_202 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_203 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(96L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(96L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(96L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(96L + x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(96L + x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(96L + x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(96L + x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(96L + x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(96L + x1 + (192L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(96L + x1 + (192L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(96L + x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(96L + x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(96L + x1 + (160L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(96L + x1 + (160L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(96L + x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(96L + x1));
                    auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(96L + x1 + (128L*x0)));
                    auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(96L + x1 + (128L*x0)));
                    auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(96L + x1));
                    auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(96L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    auto tmp48 = to_float_mask(tmp47 <= tmp2);
                    auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                    auto tmp52 = tmp51 + tmp8;
                    auto tmp53 = tmp52.rsqrt();
                    auto tmp55 = tmp53 * tmp54;
                    auto tmp56 = tmp50 * tmp55;
                    auto tmp57 = tmp46 + tmp56;
                    tmp57.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_204 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_convolution_backward_205 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(64L + x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(64L + x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(64L + x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(64L + x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(64L + x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(64L + x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(64L + x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(64L + x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(64L + x1 + (192L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(64L + x1 + (192L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(64L + x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(64L + x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(64L + x1 + (160L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(64L + x1 + (160L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(64L + x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(64L + x1));
                    auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(64L + x1 + (128L*x0)));
                    auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(64L + x1 + (128L*x0)));
                    auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(64L + x1));
                    auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(64L + x1));
                    auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(64L + x1 + (96L*x0)));
                    auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(64L + x1 + (96L*x0)));
                    auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(64L + x1));
                    auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(64L + x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    auto tmp48 = to_float_mask(tmp47 <= tmp2);
                    auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                    auto tmp52 = tmp51 + tmp8;
                    auto tmp53 = tmp52.rsqrt();
                    auto tmp55 = tmp53 * tmp54;
                    auto tmp56 = tmp50 * tmp55;
                    auto tmp57 = tmp46 + tmp56;
                    auto tmp59 = to_float_mask(tmp58 <= tmp2);
                    auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                    auto tmp63 = tmp62 + tmp8;
                    auto tmp64 = tmp63.rsqrt();
                    auto tmp66 = tmp64 * tmp65;
                    auto tmp67 = tmp61 * tmp66;
                    auto tmp68 = tmp57 + tmp67;
                    tmp68.store(in_out_ptr0 + static_cast<long>(x1 + (32L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_206 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_207 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(12544L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(64L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (256L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1 + (224L*x0)));
                    auto tmp16 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (224L*x0)));
                    auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp21 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp25 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1 + (192L*x0)));
                    auto tmp27 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1 + (192L*x0)));
                    auto tmp29 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp32 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                    auto tmp36 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (160L*x0)));
                    auto tmp38 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1 + (160L*x0)));
                    auto tmp40 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                    auto tmp43 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                    auto tmp47 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp49 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp51 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                    auto tmp54 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                    auto tmp58 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1 + (96L*x0)));
                    auto tmp60 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (96L*x0)));
                    auto tmp62 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1));
                    auto tmp65 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                    auto tmp69 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1 + (64L*x0)));
                    auto tmp71 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1 + (64L*x0)));
                    auto tmp73 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                    auto tmp76 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    auto tmp15 = to_float_mask(tmp14 <= tmp2);
                    auto tmp17 = decltype(tmp2)::blendv(tmp16, tmp2, tmp15);
                    auto tmp19 = tmp18 + tmp8;
                    auto tmp20 = tmp19.rsqrt();
                    auto tmp22 = tmp20 * tmp21;
                    auto tmp23 = tmp17 * tmp22;
                    auto tmp24 = tmp13 + tmp23;
                    auto tmp26 = to_float_mask(tmp25 <= tmp2);
                    auto tmp28 = decltype(tmp2)::blendv(tmp27, tmp2, tmp26);
                    auto tmp30 = tmp29 + tmp8;
                    auto tmp31 = tmp30.rsqrt();
                    auto tmp33 = tmp31 * tmp32;
                    auto tmp34 = tmp28 * tmp33;
                    auto tmp35 = tmp24 + tmp34;
                    auto tmp37 = to_float_mask(tmp36 <= tmp2);
                    auto tmp39 = decltype(tmp2)::blendv(tmp38, tmp2, tmp37);
                    auto tmp41 = tmp40 + tmp8;
                    auto tmp42 = tmp41.rsqrt();
                    auto tmp44 = tmp42 * tmp43;
                    auto tmp45 = tmp39 * tmp44;
                    auto tmp46 = tmp35 + tmp45;
                    auto tmp48 = to_float_mask(tmp47 <= tmp2);
                    auto tmp50 = decltype(tmp2)::blendv(tmp49, tmp2, tmp48);
                    auto tmp52 = tmp51 + tmp8;
                    auto tmp53 = tmp52.rsqrt();
                    auto tmp55 = tmp53 * tmp54;
                    auto tmp56 = tmp50 * tmp55;
                    auto tmp57 = tmp46 + tmp56;
                    auto tmp59 = to_float_mask(tmp58 <= tmp2);
                    auto tmp61 = decltype(tmp2)::blendv(tmp60, tmp2, tmp59);
                    auto tmp63 = tmp62 + tmp8;
                    auto tmp64 = tmp63.rsqrt();
                    auto tmp66 = tmp64 * tmp65;
                    auto tmp67 = tmp61 * tmp66;
                    auto tmp68 = tmp57 + tmp67;
                    auto tmp70 = to_float_mask(tmp69 <= tmp2);
                    auto tmp72 = decltype(tmp2)::blendv(tmp71, tmp2, tmp70);
                    auto tmp74 = tmp73 + tmp8;
                    auto tmp75 = tmp74.rsqrt();
                    auto tmp77 = tmp75 * tmp76;
                    auto tmp78 = tmp72 * tmp77;
                    auto tmp79 = tmp68 + tmp78;
                    tmp79.store(in_out_ptr0 + static_cast<long>(x1 + (64L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_208 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_209 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(160L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (160L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(160L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_210 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_211 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_212 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_213 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (96L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (96L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (96L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_214 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (128L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_native_batch_norm_backward_threshold_backward_215 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(12544L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp7 = tmp5 * tmp6;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp7;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_216 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    auto out_ptr1 = in_out_ptr0;
    auto in_ptr1 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    float tmp_acc1 = 0;
                    at::vec::Vectorized<float> tmp_acc1_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(50176L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0 + (64L*x1)));
                        auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x0));
                        auto tmp1 = static_cast<float>(0.0);
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = to_float_mask(tmp0 <= tmp2);
                        auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                        auto tmp8 = tmp6 - tmp7;
                        auto tmp9 = tmp5 * tmp8;
                        tmp_acc0_vec = tmp_acc0_vec + tmp5;
                        tmp_acc1_vec = tmp_acc1_vec + tmp9;
                    }
                    tmp_acc0_vec.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc1_vec.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp2 = static_cast<float>(1e-05);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 + tmp3;
                    auto tmp5 = tmp4.rsqrt();
                    auto tmp6 = tmp0 * tmp5;
                    tmp6.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(50176L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(64L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (64L*x0)));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x1 + (64L*x0)));
                    auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp1 = static_cast<float>(0.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = to_float_mask(tmp0 <= tmp2);
                    auto tmp5 = decltype(tmp2)::blendv(tmp4, tmp2, tmp3);
                    auto tmp7 = static_cast<float>(1e-05);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp12 = tmp10 * tmp11;
                    auto tmp13 = tmp5 * tmp12;
                    tmp13.store(in_out_ptr1 + static_cast<long>(x1 + (64L*x0)));
                }
            }
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_4, primals_6, primals_7, primals_9, primals_10, primals_12, primals_13, primals_15, primals_16, primals_18, primals_19, primals_21, primals_22, primals_24, primals_25, primals_27, primals_28, primals_30, primals_31, primals_33, primals_34, primals_36, primals_37, primals_39, primals_40, primals_42, primals_43, primals_45, primals_46, primals_48, primals_49, primals_51, primals_52, primals_54, primals_55, primals_57, primals_58, primals_60, primals_61, primals_63, primals_64, primals_66, primals_67, primals_69, primals_70, primals_72, primals_73, primals_75, primals_76, primals_78, primals_79, primals_81, primals_82, primals_84, primals_85, primals_87, primals_88, primals_90, primals_91, primals_93, primals_94, primals_96, primals_97, primals_99, primals_100, primals_102, primals_103, primals_105, primals_106, primals_108, primals_109, primals_111, primals_112, primals_114, primals_115, primals_117, primals_118, primals_120, primals_121, primals_123, primals_124, primals_126, primals_127, primals_129, primals_130, primals_132, primals_133, primals_135, primals_136, primals_138, primals_139, primals_141, primals_142, primals_144, primals_145, primals_147, primals_148, primals_150, primals_151, primals_153, primals_154, primals_156, primals_157, primals_159, primals_160, primals_162, primals_163, primals_165, primals_166, primals_168, primals_169, primals_171, primals_172, primals_174, primals_175, primals_177, primals_178, primals_180, primals_181, primals_183, primals_184, primals_186, primals_187, primals_189, primals_190, primals_192, primals_193, primals_195, primals_196, primals_198, primals_199, primals_201, primals_202, primals_204, primals_205, primals_207, primals_208, primals_210, primals_211, primals_213, primals_214, primals_216, primals_217, primals_219, primals_220, primals_222, primals_223, primals_225, primals_226, primals_228, primals_229, primals_231, primals_232, primals_234, primals_235, primals_237, primals_238, primals_240, primals_241, primals_243, primals_244, primals_246, primals_247, primals_249, primals_250, primals_252, primals_253, primals_255, primals_256, primals_258, primals_259, primals_261, primals_262, primals_264, primals_265, primals_267, primals_268, primals_270, primals_271, primals_273, primals_274, primals_276, primals_277, primals_279, primals_280, primals_282, primals_283, primals_285, primals_286, primals_288, primals_289, primals_291, primals_292, primals_294, primals_295, primals_297, primals_298, primals_300, primals_301, primals_303, primals_304, primals_306, primals_307, primals_309, primals_310, primals_312, primals_313, primals_315, primals_316, primals_318, primals_319, primals_321, primals_322, primals_324, primals_325, primals_327, primals_328, primals_330, primals_331, primals_333, primals_334, primals_336, primals_337, primals_339, primals_340, primals_342, primals_343, primals_345, primals_346, primals_348, primals_349, primals_351, primals_352, primals_354, primals_355, primals_357, primals_358, primals_360, primals_361, primals_365, primals_366, primals_369, primals_371, primals_372, primals_374, primals_375, primals_377, primals_378, primals_380, primals_381, primals_383, primals_384, primals_386, primals_387, primals_389, primals_390, primals_392, primals_393, primals_395, primals_396, primals_398, primals_399, primals_401, primals_402, primals_404, primals_405, primals_407, primals_408, primals_410, primals_411, primals_413, primals_414, primals_416, primals_417, primals_419, primals_420, primals_422, primals_423, primals_425, primals_426, primals_428, primals_429, primals_431, primals_432, primals_434, primals_435, primals_437, primals_438, primals_440, primals_441, primals_443, primals_444, primals_446, primals_447, primals_449, primals_450, primals_452, primals_453, primals_455, primals_456, primals_458, primals_459, primals_461, primals_462, primals_464, primals_465, primals_467, primals_468, primals_470, primals_471, primals_473, primals_474, primals_476, primals_477, primals_479, primals_480, primals_482, primals_483, primals_485, primals_486, primals_488, primals_489, primals_491, primals_492, primals_494, primals_495, primals_497, primals_498, primals_500, primals_501, primals_503, primals_504, primals_506, primals_507, primals_509, primals_510, primals_512, primals_513, primals_515, primals_516, primals_518, primals_519, primals_521, primals_522, primals_524, primals_525, primals_527, primals_528, primals_530, primals_531, primals_533, primals_534, primals_536, primals_537, primals_539, primals_540, primals_542, primals_543, primals_545, primals_546, primals_548, primals_549, primals_551, primals_552, primals_554, primals_555, primals_557, primals_558, primals_560, primals_561, primals_563, primals_564, primals_566, primals_567, primals_569, primals_570, primals_572, primals_573, primals_575, primals_576, primals_578, primals_579, primals_581, primals_582, primals_584, primals_585, primals_587, primals_588, primals_590, primals_591, primals_593, primals_594, primals_596, primals_597, primals_599, primals_600, primals_602, primals_603, primals_605, primals_606, primals_608, primals_609, primals_611, primals_612, primals_614, primals_615, primals_617, primals_618, primals_620, primals_621, primals_623, primals_624, primals_626, primals_627, primals_629, primals_630, primals_632, primals_633, primals_635, primals_636, primals_638, primals_639, primals_641, primals_642, primals_644, primals_645, primals_647, primals_648, primals_650, primals_651, primals_653, primals_654, primals_656, primals_657, primals_659, primals_660, primals_662, primals_663, primals_665, primals_666, primals_668, primals_669, primals_671, primals_672, primals_674, primals_675, primals_677, primals_678, primals_680, primals_681, primals_683, primals_684, primals_686, primals_687, primals_689, primals_690, primals_692, primals_693, primals_695, primals_696, primals_698, primals_699, primals_701, primals_702, primals_704, primals_705, primals_707, primals_708, primals_710, primals_711, primals_713, primals_714, primals_716, primals_717, primals_719, primals_720, primals_722, primals_723, primals_725, primals_726, primals_728, convolution, relu, getitem_1, relu_1, convolution_1, relu_2, cat, relu_3, convolution_3, relu_4, cat_1, relu_5, convolution_5, relu_6, cat_2, relu_7, convolution_7, relu_8, cat_3, relu_9, convolution_9, relu_10, cat_4, relu_11, convolution_11, relu_12, cat_5, relu_13, convolution_13, avg_pool2d, relu_14, convolution_14, relu_15, cat_6, relu_16, convolution_16, relu_17, cat_7, relu_18, convolution_18, relu_19, cat_8, relu_20, convolution_20, relu_21, cat_9, relu_22, convolution_22, relu_23, cat_10, relu_24, convolution_24, relu_25, cat_11, relu_26, convolution_26, relu_27, cat_12, relu_28, convolution_28, relu_29, cat_13, relu_30, convolution_30, relu_31, cat_14, relu_32, convolution_32, relu_33, cat_15, relu_34, convolution_34, relu_35, cat_16, relu_36, convolution_36, relu_37, cat_17, relu_38, convolution_38, avg_pool2d_1, relu_39, convolution_39, relu_40, cat_18, relu_41, convolution_41, relu_42, cat_19, relu_43, convolution_43, relu_44, cat_20, relu_45, convolution_45, relu_46, cat_21, relu_47, convolution_47, relu_48, cat_22, relu_49, convolution_49, relu_50, cat_23, relu_51, convolution_51, relu_52, cat_24, relu_53, convolution_53, relu_54, cat_25, relu_55, convolution_55, relu_56, cat_26, relu_57, convolution_57, relu_58, cat_27, relu_59, convolution_59, relu_60, cat_28, relu_61, convolution_61, relu_62, cat_29, relu_63, convolution_63, relu_64, cat_30, relu_65, convolution_65, relu_66, cat_31, relu_67, convolution_67, relu_68, cat_32, relu_69, convolution_69, relu_70, cat_33, relu_71, convolution_71, relu_72, cat_34, relu_73, convolution_73, relu_74, cat_35, relu_75, convolution_75, relu_76, cat_36, relu_77, convolution_77, relu_78, cat_37, relu_79, convolution_79, relu_80, cat_38, relu_81, convolution_81, relu_82, cat_39, relu_83, convolution_83, relu_84, cat_40, relu_85, convolution_85, relu_86, cat_41, relu_87, convolution_87, avg_pool2d_2, relu_88, convolution_88, relu_89, cat_42, relu_90, convolution_90, relu_91, cat_43, relu_92, convolution_92, relu_93, cat_44, relu_94, convolution_94, relu_95, cat_45, relu_96, convolution_96, relu_97, cat_46, relu_98, convolution_98, relu_99, cat_47, relu_100, convolution_100, relu_101, cat_48, relu_102, convolution_102, relu_103, cat_49, relu_104, convolution_104, relu_105, cat_50, relu_106, convolution_106, relu_107, cat_51, relu_108, convolution_108, relu_109, cat_52, relu_110, convolution_110, relu_111, cat_53, relu_112, convolution_112, relu_113, cat_54, relu_114, convolution_114, relu_115, cat_55, relu_116, convolution_116, relu_117, cat_56, relu_118, convolution_118, relu_119, cat_57, view, permute_1, le, sub_240, tangents_1 = args
    args.clear()
    assert_size_stride(primals_1, (64, 3, 7, 7), (147, 1, 21, 3))
    assert_size_stride(primals_2, (64, ), (1, ))
    assert_size_stride(primals_4, (64, ), (1, ))
    assert_size_stride(primals_6, (128, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(primals_7, (128, ), (1, ))
    assert_size_stride(primals_9, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_10, (96, ), (1, ))
    assert_size_stride(primals_12, (128, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(primals_13, (128, ), (1, ))
    assert_size_stride(primals_15, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_16, (128, ), (1, ))
    assert_size_stride(primals_18, (128, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_19, (128, ), (1, ))
    assert_size_stride(primals_21, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_22, (160, ), (1, ))
    assert_size_stride(primals_24, (128, 160, 1, 1), (160, 1, 1, 1))
    assert_size_stride(primals_25, (128, ), (1, ))
    assert_size_stride(primals_27, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_28, (192, ), (1, ))
    assert_size_stride(primals_30, (128, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_31, (128, ), (1, ))
    assert_size_stride(primals_33, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_34, (224, ), (1, ))
    assert_size_stride(primals_36, (128, 224, 1, 1), (224, 1, 1, 1))
    assert_size_stride(primals_37, (128, ), (1, ))
    assert_size_stride(primals_39, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_40, (256, ), (1, ))
    assert_size_stride(primals_42, (128, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(primals_43, (128, ), (1, ))
    assert_size_stride(primals_45, (128, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_46, (128, ), (1, ))
    assert_size_stride(primals_48, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_49, (160, ), (1, ))
    assert_size_stride(primals_51, (128, 160, 1, 1), (160, 1, 1, 1))
    assert_size_stride(primals_52, (128, ), (1, ))
    assert_size_stride(primals_54, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_55, (192, ), (1, ))
    assert_size_stride(primals_57, (128, 192, 1, 1), (192, 1, 1, 1))
    assert_size_stride(primals_58, (128, ), (1, ))
    assert_size_stride(primals_60, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_61, (224, ), (1, ))
    assert_size_stride(primals_63, (128, 224, 1, 1), (224, 1, 1, 1))
    assert_size_stride(primals_64, (128, ), (1, ))
    assert_size_stride(primals_66, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_67, (256, ), (1, ))
    assert_size_stride(primals_69, (128, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(primals_70, (128, ), (1, ))
    assert_size_stride(primals_72, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_73, (288, ), (1, ))
    assert_size_stride(primals_75, (128, 288, 1, 1), (288, 1, 1, 1))
    assert_size_stride(primals_76, (128, ), (1, ))
    assert_size_stride(primals_78, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_79, (320, ), (1, ))
    assert_size_stride(primals_81, (128, 320, 1, 1), (320, 1, 1, 1))
    assert_size_stride(primals_82, (128, ), (1, ))
    assert_size_stride(primals_84, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_85, (352, ), (1, ))
    assert_size_stride(primals_87, (128, 352, 1, 1), (352, 1, 1, 1))
    assert_size_stride(primals_88, (128, ), (1, ))
    assert_size_stride(primals_90, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_91, (384, ), (1, ))
    assert_size_stride(primals_93, (128, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_94, (128, ), (1, ))
    assert_size_stride(primals_96, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_97, (416, ), (1, ))
    assert_size_stride(primals_99, (128, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(primals_100, (128, ), (1, ))
    assert_size_stride(primals_102, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_103, (448, ), (1, ))
    assert_size_stride(primals_105, (128, 448, 1, 1), (448, 1, 1, 1))
    assert_size_stride(primals_106, (128, ), (1, ))
    assert_size_stride(primals_108, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_109, (480, ), (1, ))
    assert_size_stride(primals_111, (128, 480, 1, 1), (480, 1, 1, 1))
    assert_size_stride(primals_112, (128, ), (1, ))
    assert_size_stride(primals_114, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_115, (512, ), (1, ))
    assert_size_stride(primals_117, (256, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(primals_118, (256, ), (1, ))
    assert_size_stride(primals_120, (128, 256, 1, 1), (256, 1, 1, 1))
    assert_size_stride(primals_121, (128, ), (1, ))
    assert_size_stride(primals_123, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_124, (288, ), (1, ))
    assert_size_stride(primals_126, (128, 288, 1, 1), (288, 1, 1, 1))
    assert_size_stride(primals_127, (128, ), (1, ))
    assert_size_stride(primals_129, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_130, (320, ), (1, ))
    assert_size_stride(primals_132, (128, 320, 1, 1), (320, 1, 1, 1))
    assert_size_stride(primals_133, (128, ), (1, ))
    assert_size_stride(primals_135, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_136, (352, ), (1, ))
    assert_size_stride(primals_138, (128, 352, 1, 1), (352, 1, 1, 1))
    assert_size_stride(primals_139, (128, ), (1, ))
    assert_size_stride(primals_141, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_142, (384, ), (1, ))
    assert_size_stride(primals_144, (128, 384, 1, 1), (384, 1, 1, 1))
    assert_size_stride(primals_145, (128, ), (1, ))
    assert_size_stride(primals_147, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_148, (416, ), (1, ))
    assert_size_stride(primals_150, (128, 416, 1, 1), (416, 1, 1, 1))
    assert_size_stride(primals_151, (128, ), (1, ))
    assert_size_stride(primals_153, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_154, (448, ), (1, ))
    assert_size_stride(primals_156, (128, 448, 1, 1), (448, 1, 1, 1))
    assert_size_stride(primals_157, (128, ), (1, ))
    assert_size_stride(primals_159, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_160, (480, ), (1, ))
    assert_size_stride(primals_162, (128, 480, 1, 1), (480, 1, 1, 1))
    assert_size_stride(primals_163, (128, ), (1, ))
    assert_size_stride(primals_165, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_166, (512, ), (1, ))
    assert_size_stride(primals_168, (128, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(primals_169, (128, ), (1, ))
    assert_size_stride(primals_171, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_172, (544, ), (1, ))
    assert_size_stride(primals_174, (128, 544, 1, 1), (544, 1, 1, 1))
    assert_size_stride(primals_175, (128, ), (1, ))
    assert_size_stride(primals_177, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_178, (576, ), (1, ))
    assert_size_stride(primals_180, (128, 576, 1, 1), (576, 1, 1, 1))
    assert_size_stride(primals_181, (128, ), (1, ))
    assert_size_stride(primals_183, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_184, (608, ), (1, ))
    assert_size_stride(primals_186, (128, 608, 1, 1), (608, 1, 1, 1))
    assert_size_stride(primals_187, (128, ), (1, ))
    assert_size_stride(primals_189, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_190, (640, ), (1, ))
    assert_size_stride(primals_192, (128, 640, 1, 1), (640, 1, 1, 1))
    assert_size_stride(primals_193, (128, ), (1, ))
    assert_size_stride(primals_195, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_196, (672, ), (1, ))
    assert_size_stride(primals_198, (128, 672, 1, 1), (672, 1, 1, 1))
    assert_size_stride(primals_199, (128, ), (1, ))
    assert_size_stride(primals_201, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_202, (704, ), (1, ))
    assert_size_stride(primals_204, (128, 704, 1, 1), (704, 1, 1, 1))
    assert_size_stride(primals_205, (128, ), (1, ))
    assert_size_stride(primals_207, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_208, (736, ), (1, ))
    assert_size_stride(primals_210, (128, 736, 1, 1), (736, 1, 1, 1))
    assert_size_stride(primals_211, (128, ), (1, ))
    assert_size_stride(primals_213, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_214, (768, ), (1, ))
    assert_size_stride(primals_216, (128, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_217, (128, ), (1, ))
    assert_size_stride(primals_219, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_220, (800, ), (1, ))
    assert_size_stride(primals_222, (128, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_223, (128, ), (1, ))
    assert_size_stride(primals_225, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_226, (832, ), (1, ))
    assert_size_stride(primals_228, (128, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(primals_229, (128, ), (1, ))
    assert_size_stride(primals_231, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_232, (864, ), (1, ))
    assert_size_stride(primals_234, (128, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_235, (128, ), (1, ))
    assert_size_stride(primals_237, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_238, (896, ), (1, ))
    assert_size_stride(primals_240, (128, 896, 1, 1), (896, 1, 1, 1))
    assert_size_stride(primals_241, (128, ), (1, ))
    assert_size_stride(primals_243, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_244, (928, ), (1, ))
    assert_size_stride(primals_246, (128, 928, 1, 1), (928, 1, 1, 1))
    assert_size_stride(primals_247, (128, ), (1, ))
    assert_size_stride(primals_249, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_250, (960, ), (1, ))
    assert_size_stride(primals_252, (128, 960, 1, 1), (960, 1, 1, 1))
    assert_size_stride(primals_253, (128, ), (1, ))
    assert_size_stride(primals_255, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_256, (992, ), (1, ))
    assert_size_stride(primals_258, (128, 992, 1, 1), (992, 1, 1, 1))
    assert_size_stride(primals_259, (128, ), (1, ))
    assert_size_stride(primals_261, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_262, (1024, ), (1, ))
    assert_size_stride(primals_264, (512, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(primals_265, (512, ), (1, ))
    assert_size_stride(primals_267, (128, 512, 1, 1), (512, 1, 1, 1))
    assert_size_stride(primals_268, (128, ), (1, ))
    assert_size_stride(primals_270, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_271, (544, ), (1, ))
    assert_size_stride(primals_273, (128, 544, 1, 1), (544, 1, 1, 1))
    assert_size_stride(primals_274, (128, ), (1, ))
    assert_size_stride(primals_276, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_277, (576, ), (1, ))
    assert_size_stride(primals_279, (128, 576, 1, 1), (576, 1, 1, 1))
    assert_size_stride(primals_280, (128, ), (1, ))
    assert_size_stride(primals_282, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_283, (608, ), (1, ))
    assert_size_stride(primals_285, (128, 608, 1, 1), (608, 1, 1, 1))
    assert_size_stride(primals_286, (128, ), (1, ))
    assert_size_stride(primals_288, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_289, (640, ), (1, ))
    assert_size_stride(primals_291, (128, 640, 1, 1), (640, 1, 1, 1))
    assert_size_stride(primals_292, (128, ), (1, ))
    assert_size_stride(primals_294, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_295, (672, ), (1, ))
    assert_size_stride(primals_297, (128, 672, 1, 1), (672, 1, 1, 1))
    assert_size_stride(primals_298, (128, ), (1, ))
    assert_size_stride(primals_300, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_301, (704, ), (1, ))
    assert_size_stride(primals_303, (128, 704, 1, 1), (704, 1, 1, 1))
    assert_size_stride(primals_304, (128, ), (1, ))
    assert_size_stride(primals_306, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_307, (736, ), (1, ))
    assert_size_stride(primals_309, (128, 736, 1, 1), (736, 1, 1, 1))
    assert_size_stride(primals_310, (128, ), (1, ))
    assert_size_stride(primals_312, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_313, (768, ), (1, ))
    assert_size_stride(primals_315, (128, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_316, (128, ), (1, ))
    assert_size_stride(primals_318, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_319, (800, ), (1, ))
    assert_size_stride(primals_321, (128, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_322, (128, ), (1, ))
    assert_size_stride(primals_324, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_325, (832, ), (1, ))
    assert_size_stride(primals_327, (128, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(primals_328, (128, ), (1, ))
    assert_size_stride(primals_330, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_331, (864, ), (1, ))
    assert_size_stride(primals_333, (128, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(primals_334, (128, ), (1, ))
    assert_size_stride(primals_336, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_337, (896, ), (1, ))
    assert_size_stride(primals_339, (128, 896, 1, 1), (896, 1, 1, 1))
    assert_size_stride(primals_340, (128, ), (1, ))
    assert_size_stride(primals_342, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_343, (928, ), (1, ))
    assert_size_stride(primals_345, (128, 928, 1, 1), (928, 1, 1, 1))
    assert_size_stride(primals_346, (128, ), (1, ))
    assert_size_stride(primals_348, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_349, (960, ), (1, ))
    assert_size_stride(primals_351, (128, 960, 1, 1), (960, 1, 1, 1))
    assert_size_stride(primals_352, (128, ), (1, ))
    assert_size_stride(primals_354, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_355, (992, ), (1, ))
    assert_size_stride(primals_357, (128, 992, 1, 1), (992, 1, 1, 1))
    assert_size_stride(primals_358, (128, ), (1, ))
    assert_size_stride(primals_360, (32, 128, 3, 3), (1152, 1, 384, 128))
    assert_size_stride(primals_361, (1024, ), (1, ))
    assert_size_stride(primals_365, (64, ), (1, ))
    assert_size_stride(primals_366, (64, ), (1, ))
    assert_size_stride(primals_369, (64, ), (1, ))
    assert_size_stride(primals_371, (128, ), (1, ))
    assert_size_stride(primals_372, (128, ), (1, ))
    assert_size_stride(primals_374, (96, ), (1, ))
    assert_size_stride(primals_375, (96, ), (1, ))
    assert_size_stride(primals_377, (128, ), (1, ))
    assert_size_stride(primals_378, (128, ), (1, ))
    assert_size_stride(primals_380, (128, ), (1, ))
    assert_size_stride(primals_381, (128, ), (1, ))
    assert_size_stride(primals_383, (128, ), (1, ))
    assert_size_stride(primals_384, (128, ), (1, ))
    assert_size_stride(primals_386, (160, ), (1, ))
    assert_size_stride(primals_387, (160, ), (1, ))
    assert_size_stride(primals_389, (128, ), (1, ))
    assert_size_stride(primals_390, (128, ), (1, ))
    assert_size_stride(primals_392, (192, ), (1, ))
    assert_size_stride(primals_393, (192, ), (1, ))
    assert_size_stride(primals_395, (128, ), (1, ))
    assert_size_stride(primals_396, (128, ), (1, ))
    assert_size_stride(primals_398, (224, ), (1, ))
    assert_size_stride(primals_399, (224, ), (1, ))
    assert_size_stride(primals_401, (128, ), (1, ))
    assert_size_stride(primals_402, (128, ), (1, ))
    assert_size_stride(primals_404, (256, ), (1, ))
    assert_size_stride(primals_405, (256, ), (1, ))
    assert_size_stride(primals_407, (128, ), (1, ))
    assert_size_stride(primals_408, (128, ), (1, ))
    assert_size_stride(primals_410, (128, ), (1, ))
    assert_size_stride(primals_411, (128, ), (1, ))
    assert_size_stride(primals_413, (160, ), (1, ))
    assert_size_stride(primals_414, (160, ), (1, ))
    assert_size_stride(primals_416, (128, ), (1, ))
    assert_size_stride(primals_417, (128, ), (1, ))
    assert_size_stride(primals_419, (192, ), (1, ))
    assert_size_stride(primals_420, (192, ), (1, ))
    assert_size_stride(primals_422, (128, ), (1, ))
    assert_size_stride(primals_423, (128, ), (1, ))
    assert_size_stride(primals_425, (224, ), (1, ))
    assert_size_stride(primals_426, (224, ), (1, ))
    assert_size_stride(primals_428, (128, ), (1, ))
    assert_size_stride(primals_429, (128, ), (1, ))
    assert_size_stride(primals_431, (256, ), (1, ))
    assert_size_stride(primals_432, (256, ), (1, ))
    assert_size_stride(primals_434, (128, ), (1, ))
    assert_size_stride(primals_435, (128, ), (1, ))
    assert_size_stride(primals_437, (288, ), (1, ))
    assert_size_stride(primals_438, (288, ), (1, ))
    assert_size_stride(primals_440, (128, ), (1, ))
    assert_size_stride(primals_441, (128, ), (1, ))
    assert_size_stride(primals_443, (320, ), (1, ))
    assert_size_stride(primals_444, (320, ), (1, ))
    assert_size_stride(primals_446, (128, ), (1, ))
    assert_size_stride(primals_447, (128, ), (1, ))
    assert_size_stride(primals_449, (352, ), (1, ))
    assert_size_stride(primals_450, (352, ), (1, ))
    assert_size_stride(primals_452, (128, ), (1, ))
    assert_size_stride(primals_453, (128, ), (1, ))
    assert_size_stride(primals_455, (384, ), (1, ))
    assert_size_stride(primals_456, (384, ), (1, ))
    assert_size_stride(primals_458, (128, ), (1, ))
    assert_size_stride(primals_459, (128, ), (1, ))
    assert_size_stride(primals_461, (416, ), (1, ))
    assert_size_stride(primals_462, (416, ), (1, ))
    assert_size_stride(primals_464, (128, ), (1, ))
    assert_size_stride(primals_465, (128, ), (1, ))
    assert_size_stride(primals_467, (448, ), (1, ))
    assert_size_stride(primals_468, (448, ), (1, ))
    assert_size_stride(primals_470, (128, ), (1, ))
    assert_size_stride(primals_471, (128, ), (1, ))
    assert_size_stride(primals_473, (480, ), (1, ))
    assert_size_stride(primals_474, (480, ), (1, ))
    assert_size_stride(primals_476, (128, ), (1, ))
    assert_size_stride(primals_477, (128, ), (1, ))
    assert_size_stride(primals_479, (512, ), (1, ))
    assert_size_stride(primals_480, (512, ), (1, ))
    assert_size_stride(primals_482, (256, ), (1, ))
    assert_size_stride(primals_483, (256, ), (1, ))
    assert_size_stride(primals_485, (128, ), (1, ))
    assert_size_stride(primals_486, (128, ), (1, ))
    assert_size_stride(primals_488, (288, ), (1, ))
    assert_size_stride(primals_489, (288, ), (1, ))
    assert_size_stride(primals_491, (128, ), (1, ))
    assert_size_stride(primals_492, (128, ), (1, ))
    assert_size_stride(primals_494, (320, ), (1, ))
    assert_size_stride(primals_495, (320, ), (1, ))
    assert_size_stride(primals_497, (128, ), (1, ))
    assert_size_stride(primals_498, (128, ), (1, ))
    assert_size_stride(primals_500, (352, ), (1, ))
    assert_size_stride(primals_501, (352, ), (1, ))
    assert_size_stride(primals_503, (128, ), (1, ))
    assert_size_stride(primals_504, (128, ), (1, ))
    assert_size_stride(primals_506, (384, ), (1, ))
    assert_size_stride(primals_507, (384, ), (1, ))
    assert_size_stride(primals_509, (128, ), (1, ))
    assert_size_stride(primals_510, (128, ), (1, ))
    assert_size_stride(primals_512, (416, ), (1, ))
    assert_size_stride(primals_513, (416, ), (1, ))
    assert_size_stride(primals_515, (128, ), (1, ))
    assert_size_stride(primals_516, (128, ), (1, ))
    assert_size_stride(primals_518, (448, ), (1, ))
    assert_size_stride(primals_519, (448, ), (1, ))
    assert_size_stride(primals_521, (128, ), (1, ))
    assert_size_stride(primals_522, (128, ), (1, ))
    assert_size_stride(primals_524, (480, ), (1, ))
    assert_size_stride(primals_525, (480, ), (1, ))
    assert_size_stride(primals_527, (128, ), (1, ))
    assert_size_stride(primals_528, (128, ), (1, ))
    assert_size_stride(primals_530, (512, ), (1, ))
    assert_size_stride(primals_531, (512, ), (1, ))
    assert_size_stride(primals_533, (128, ), (1, ))
    assert_size_stride(primals_534, (128, ), (1, ))
    assert_size_stride(primals_536, (544, ), (1, ))
    assert_size_stride(primals_537, (544, ), (1, ))
    assert_size_stride(primals_539, (128, ), (1, ))
    assert_size_stride(primals_540, (128, ), (1, ))
    assert_size_stride(primals_542, (576, ), (1, ))
    assert_size_stride(primals_543, (576, ), (1, ))
    assert_size_stride(primals_545, (128, ), (1, ))
    assert_size_stride(primals_546, (128, ), (1, ))
    assert_size_stride(primals_548, (608, ), (1, ))
    assert_size_stride(primals_549, (608, ), (1, ))
    assert_size_stride(primals_551, (128, ), (1, ))
    assert_size_stride(primals_552, (128, ), (1, ))
    assert_size_stride(primals_554, (640, ), (1, ))
    assert_size_stride(primals_555, (640, ), (1, ))
    assert_size_stride(primals_557, (128, ), (1, ))
    assert_size_stride(primals_558, (128, ), (1, ))
    assert_size_stride(primals_560, (672, ), (1, ))
    assert_size_stride(primals_561, (672, ), (1, ))
    assert_size_stride(primals_563, (128, ), (1, ))
    assert_size_stride(primals_564, (128, ), (1, ))
    assert_size_stride(primals_566, (704, ), (1, ))
    assert_size_stride(primals_567, (704, ), (1, ))
    assert_size_stride(primals_569, (128, ), (1, ))
    assert_size_stride(primals_570, (128, ), (1, ))
    assert_size_stride(primals_572, (736, ), (1, ))
    assert_size_stride(primals_573, (736, ), (1, ))
    assert_size_stride(primals_575, (128, ), (1, ))
    assert_size_stride(primals_576, (128, ), (1, ))
    assert_size_stride(primals_578, (768, ), (1, ))
    assert_size_stride(primals_579, (768, ), (1, ))
    assert_size_stride(primals_581, (128, ), (1, ))
    assert_size_stride(primals_582, (128, ), (1, ))
    assert_size_stride(primals_584, (800, ), (1, ))
    assert_size_stride(primals_585, (800, ), (1, ))
    assert_size_stride(primals_587, (128, ), (1, ))
    assert_size_stride(primals_588, (128, ), (1, ))
    assert_size_stride(primals_590, (832, ), (1, ))
    assert_size_stride(primals_591, (832, ), (1, ))
    assert_size_stride(primals_593, (128, ), (1, ))
    assert_size_stride(primals_594, (128, ), (1, ))
    assert_size_stride(primals_596, (864, ), (1, ))
    assert_size_stride(primals_597, (864, ), (1, ))
    assert_size_stride(primals_599, (128, ), (1, ))
    assert_size_stride(primals_600, (128, ), (1, ))
    assert_size_stride(primals_602, (896, ), (1, ))
    assert_size_stride(primals_603, (896, ), (1, ))
    assert_size_stride(primals_605, (128, ), (1, ))
    assert_size_stride(primals_606, (128, ), (1, ))
    assert_size_stride(primals_608, (928, ), (1, ))
    assert_size_stride(primals_609, (928, ), (1, ))
    assert_size_stride(primals_611, (128, ), (1, ))
    assert_size_stride(primals_612, (128, ), (1, ))
    assert_size_stride(primals_614, (960, ), (1, ))
    assert_size_stride(primals_615, (960, ), (1, ))
    assert_size_stride(primals_617, (128, ), (1, ))
    assert_size_stride(primals_618, (128, ), (1, ))
    assert_size_stride(primals_620, (992, ), (1, ))
    assert_size_stride(primals_621, (992, ), (1, ))
    assert_size_stride(primals_623, (128, ), (1, ))
    assert_size_stride(primals_624, (128, ), (1, ))
    assert_size_stride(primals_626, (1024, ), (1, ))
    assert_size_stride(primals_627, (1024, ), (1, ))
    assert_size_stride(primals_629, (512, ), (1, ))
    assert_size_stride(primals_630, (512, ), (1, ))
    assert_size_stride(primals_632, (128, ), (1, ))
    assert_size_stride(primals_633, (128, ), (1, ))
    assert_size_stride(primals_635, (544, ), (1, ))
    assert_size_stride(primals_636, (544, ), (1, ))
    assert_size_stride(primals_638, (128, ), (1, ))
    assert_size_stride(primals_639, (128, ), (1, ))
    assert_size_stride(primals_641, (576, ), (1, ))
    assert_size_stride(primals_642, (576, ), (1, ))
    assert_size_stride(primals_644, (128, ), (1, ))
    assert_size_stride(primals_645, (128, ), (1, ))
    assert_size_stride(primals_647, (608, ), (1, ))
    assert_size_stride(primals_648, (608, ), (1, ))
    assert_size_stride(primals_650, (128, ), (1, ))
    assert_size_stride(primals_651, (128, ), (1, ))
    assert_size_stride(primals_653, (640, ), (1, ))
    assert_size_stride(primals_654, (640, ), (1, ))
    assert_size_stride(primals_656, (128, ), (1, ))
    assert_size_stride(primals_657, (128, ), (1, ))
    assert_size_stride(primals_659, (672, ), (1, ))
    assert_size_stride(primals_660, (672, ), (1, ))
    assert_size_stride(primals_662, (128, ), (1, ))
    assert_size_stride(primals_663, (128, ), (1, ))
    assert_size_stride(primals_665, (704, ), (1, ))
    assert_size_stride(primals_666, (704, ), (1, ))
    assert_size_stride(primals_668, (128, ), (1, ))
    assert_size_stride(primals_669, (128, ), (1, ))
    assert_size_stride(primals_671, (736, ), (1, ))
    assert_size_stride(primals_672, (736, ), (1, ))
    assert_size_stride(primals_674, (128, ), (1, ))
    assert_size_stride(primals_675, (128, ), (1, ))
    assert_size_stride(primals_677, (768, ), (1, ))
    assert_size_stride(primals_678, (768, ), (1, ))
    assert_size_stride(primals_680, (128, ), (1, ))
    assert_size_stride(primals_681, (128, ), (1, ))
    assert_size_stride(primals_683, (800, ), (1, ))
    assert_size_stride(primals_684, (800, ), (1, ))
    assert_size_stride(primals_686, (128, ), (1, ))
    assert_size_stride(primals_687, (128, ), (1, ))
    assert_size_stride(primals_689, (832, ), (1, ))
    assert_size_stride(primals_690, (832, ), (1, ))
    assert_size_stride(primals_692, (128, ), (1, ))
    assert_size_stride(primals_693, (128, ), (1, ))
    assert_size_stride(primals_695, (864, ), (1, ))
    assert_size_stride(primals_696, (864, ), (1, ))
    assert_size_stride(primals_698, (128, ), (1, ))
    assert_size_stride(primals_699, (128, ), (1, ))
    assert_size_stride(primals_701, (896, ), (1, ))
    assert_size_stride(primals_702, (896, ), (1, ))
    assert_size_stride(primals_704, (128, ), (1, ))
    assert_size_stride(primals_705, (128, ), (1, ))
    assert_size_stride(primals_707, (928, ), (1, ))
    assert_size_stride(primals_708, (928, ), (1, ))
    assert_size_stride(primals_710, (128, ), (1, ))
    assert_size_stride(primals_711, (128, ), (1, ))
    assert_size_stride(primals_713, (960, ), (1, ))
    assert_size_stride(primals_714, (960, ), (1, ))
    assert_size_stride(primals_716, (128, ), (1, ))
    assert_size_stride(primals_717, (128, ), (1, ))
    assert_size_stride(primals_719, (992, ), (1, ))
    assert_size_stride(primals_720, (992, ), (1, ))
    assert_size_stride(primals_722, (128, ), (1, ))
    assert_size_stride(primals_723, (128, ), (1, ))
    assert_size_stride(primals_725, (1024, ), (1, ))
    assert_size_stride(primals_726, (1024, ), (1, ))
    assert_size_stride(primals_728, (4, 3, 224, 224), (150528, 1, 672, 3))
    assert_size_stride(convolution, (4, 64, 112, 112), (802816, 1, 7168, 64))
    assert_size_stride(relu, (4, 64, 112, 112), (802816, 1, 7168, 64))
    assert_size_stride(getitem_1, (4, 64, 56, 56), (200704, 1, 3584, 64))
    assert_size_stride(relu_1, (4, 64, 56, 56), (200704, 1, 3584, 64))
    assert_size_stride(convolution_1, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_2, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat, (4, 96, 56, 56), (301056, 1, 5376, 96))
    assert_size_stride(relu_3, (4, 96, 56, 56), (301056, 1, 5376, 96))
    assert_size_stride(convolution_3, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_4, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat_1, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_5, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(convolution_5, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_6, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat_2, (4, 160, 56, 56), (501760, 1, 8960, 160))
    assert_size_stride(relu_7, (4, 160, 56, 56), (501760, 1, 8960, 160))
    assert_size_stride(convolution_7, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_8, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat_3, (4, 192, 56, 56), (602112, 1, 10752, 192))
    assert_size_stride(relu_9, (4, 192, 56, 56), (602112, 1, 10752, 192))
    assert_size_stride(convolution_9, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_10, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat_4, (4, 224, 56, 56), (702464, 1, 12544, 224))
    assert_size_stride(relu_11, (4, 224, 56, 56), (702464, 1, 12544, 224))
    assert_size_stride(convolution_11, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(relu_12, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(cat_5, (4, 256, 56, 56), (802816, 1, 14336, 256))
    assert_size_stride(relu_13, (4, 256, 56, 56), (802816, 1, 14336, 256))
    assert_size_stride(convolution_13, (4, 128, 56, 56), (401408, 1, 7168, 128))
    assert_size_stride(avg_pool2d, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_14, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(convolution_14, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_15, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_6, (4, 160, 28, 28), (125440, 1, 4480, 160))
    assert_size_stride(relu_16, (4, 160, 28, 28), (125440, 1, 4480, 160))
    assert_size_stride(convolution_16, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_17, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_7, (4, 192, 28, 28), (150528, 1, 5376, 192))
    assert_size_stride(relu_18, (4, 192, 28, 28), (150528, 1, 5376, 192))
    assert_size_stride(convolution_18, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_19, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_8, (4, 224, 28, 28), (175616, 1, 6272, 224))
    assert_size_stride(relu_20, (4, 224, 28, 28), (175616, 1, 6272, 224))
    assert_size_stride(convolution_20, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_21, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_9, (4, 256, 28, 28), (200704, 1, 7168, 256))
    assert_size_stride(relu_22, (4, 256, 28, 28), (200704, 1, 7168, 256))
    assert_size_stride(convolution_22, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_23, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_10, (4, 288, 28, 28), (225792, 1, 8064, 288))
    assert_size_stride(relu_24, (4, 288, 28, 28), (225792, 1, 8064, 288))
    assert_size_stride(convolution_24, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_25, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_11, (4, 320, 28, 28), (250880, 1, 8960, 320))
    assert_size_stride(relu_26, (4, 320, 28, 28), (250880, 1, 8960, 320))
    assert_size_stride(convolution_26, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_27, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_12, (4, 352, 28, 28), (275968, 1, 9856, 352))
    assert_size_stride(relu_28, (4, 352, 28, 28), (275968, 1, 9856, 352))
    assert_size_stride(convolution_28, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_29, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_13, (4, 384, 28, 28), (301056, 1, 10752, 384))
    assert_size_stride(relu_30, (4, 384, 28, 28), (301056, 1, 10752, 384))
    assert_size_stride(convolution_30, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_31, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_14, (4, 416, 28, 28), (326144, 1, 11648, 416))
    assert_size_stride(relu_32, (4, 416, 28, 28), (326144, 1, 11648, 416))
    assert_size_stride(convolution_32, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_33, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_15, (4, 448, 28, 28), (351232, 1, 12544, 448))
    assert_size_stride(relu_34, (4, 448, 28, 28), (351232, 1, 12544, 448))
    assert_size_stride(convolution_34, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_35, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_16, (4, 480, 28, 28), (376320, 1, 13440, 480))
    assert_size_stride(relu_36, (4, 480, 28, 28), (376320, 1, 13440, 480))
    assert_size_stride(convolution_36, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(relu_37, (4, 128, 28, 28), (100352, 1, 3584, 128))
    assert_size_stride(cat_17, (4, 512, 28, 28), (401408, 1, 14336, 512))
    assert_size_stride(relu_38, (4, 512, 28, 28), (401408, 1, 14336, 512))
    assert_size_stride(convolution_38, (4, 256, 28, 28), (200704, 1, 7168, 256))
    assert_size_stride(avg_pool2d_1, (4, 256, 14, 14), (50176, 1, 3584, 256))
    assert_size_stride(relu_39, (4, 256, 14, 14), (50176, 1, 3584, 256))
    assert_size_stride(convolution_39, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_40, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_18, (4, 288, 14, 14), (56448, 1, 4032, 288))
    assert_size_stride(relu_41, (4, 288, 14, 14), (56448, 1, 4032, 288))
    assert_size_stride(convolution_41, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_42, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_19, (4, 320, 14, 14), (62720, 1, 4480, 320))
    assert_size_stride(relu_43, (4, 320, 14, 14), (62720, 1, 4480, 320))
    assert_size_stride(convolution_43, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_44, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_20, (4, 352, 14, 14), (68992, 1, 4928, 352))
    assert_size_stride(relu_45, (4, 352, 14, 14), (68992, 1, 4928, 352))
    assert_size_stride(convolution_45, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_46, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_21, (4, 384, 14, 14), (75264, 1, 5376, 384))
    assert_size_stride(relu_47, (4, 384, 14, 14), (75264, 1, 5376, 384))
    assert_size_stride(convolution_47, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_48, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_22, (4, 416, 14, 14), (81536, 1, 5824, 416))
    assert_size_stride(relu_49, (4, 416, 14, 14), (81536, 1, 5824, 416))
    assert_size_stride(convolution_49, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_50, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_23, (4, 448, 14, 14), (87808, 1, 6272, 448))
    assert_size_stride(relu_51, (4, 448, 14, 14), (87808, 1, 6272, 448))
    assert_size_stride(convolution_51, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_52, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_24, (4, 480, 14, 14), (94080, 1, 6720, 480))
    assert_size_stride(relu_53, (4, 480, 14, 14), (94080, 1, 6720, 480))
    assert_size_stride(convolution_53, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_54, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_25, (4, 512, 14, 14), (100352, 1, 7168, 512))
    assert_size_stride(relu_55, (4, 512, 14, 14), (100352, 1, 7168, 512))
    assert_size_stride(convolution_55, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_56, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_26, (4, 544, 14, 14), (106624, 1, 7616, 544))
    assert_size_stride(relu_57, (4, 544, 14, 14), (106624, 1, 7616, 544))
    assert_size_stride(convolution_57, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_58, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_27, (4, 576, 14, 14), (112896, 1, 8064, 576))
    assert_size_stride(relu_59, (4, 576, 14, 14), (112896, 1, 8064, 576))
    assert_size_stride(convolution_59, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_60, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_28, (4, 608, 14, 14), (119168, 1, 8512, 608))
    assert_size_stride(relu_61, (4, 608, 14, 14), (119168, 1, 8512, 608))
    assert_size_stride(convolution_61, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_62, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_29, (4, 640, 14, 14), (125440, 1, 8960, 640))
    assert_size_stride(relu_63, (4, 640, 14, 14), (125440, 1, 8960, 640))
    assert_size_stride(convolution_63, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_64, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_30, (4, 672, 14, 14), (131712, 1, 9408, 672))
    assert_size_stride(relu_65, (4, 672, 14, 14), (131712, 1, 9408, 672))
    assert_size_stride(convolution_65, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_66, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_31, (4, 704, 14, 14), (137984, 1, 9856, 704))
    assert_size_stride(relu_67, (4, 704, 14, 14), (137984, 1, 9856, 704))
    assert_size_stride(convolution_67, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_68, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_32, (4, 736, 14, 14), (144256, 1, 10304, 736))
    assert_size_stride(relu_69, (4, 736, 14, 14), (144256, 1, 10304, 736))
    assert_size_stride(convolution_69, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_70, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_33, (4, 768, 14, 14), (150528, 1, 10752, 768))
    assert_size_stride(relu_71, (4, 768, 14, 14), (150528, 1, 10752, 768))
    assert_size_stride(convolution_71, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_72, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_34, (4, 800, 14, 14), (156800, 1, 11200, 800))
    assert_size_stride(relu_73, (4, 800, 14, 14), (156800, 1, 11200, 800))
    assert_size_stride(convolution_73, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_74, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_35, (4, 832, 14, 14), (163072, 1, 11648, 832))
    assert_size_stride(relu_75, (4, 832, 14, 14), (163072, 1, 11648, 832))
    assert_size_stride(convolution_75, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_76, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_36, (4, 864, 14, 14), (169344, 1, 12096, 864))
    assert_size_stride(relu_77, (4, 864, 14, 14), (169344, 1, 12096, 864))
    assert_size_stride(convolution_77, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_78, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_37, (4, 896, 14, 14), (175616, 1, 12544, 896))
    assert_size_stride(relu_79, (4, 896, 14, 14), (175616, 1, 12544, 896))
    assert_size_stride(convolution_79, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_80, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_38, (4, 928, 14, 14), (181888, 1, 12992, 928))
    assert_size_stride(relu_81, (4, 928, 14, 14), (181888, 1, 12992, 928))
    assert_size_stride(convolution_81, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_82, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_39, (4, 960, 14, 14), (188160, 1, 13440, 960))
    assert_size_stride(relu_83, (4, 960, 14, 14), (188160, 1, 13440, 960))
    assert_size_stride(convolution_83, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_84, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_40, (4, 992, 14, 14), (194432, 1, 13888, 992))
    assert_size_stride(relu_85, (4, 992, 14, 14), (194432, 1, 13888, 992))
    assert_size_stride(convolution_85, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(relu_86, (4, 128, 14, 14), (25088, 1, 1792, 128))
    assert_size_stride(cat_41, (4, 1024, 14, 14), (200704, 1, 14336, 1024))
    assert_size_stride(relu_87, (4, 1024, 14, 14), (200704, 1, 14336, 1024))
    assert_size_stride(convolution_87, (4, 512, 14, 14), (100352, 1, 7168, 512))
    assert_size_stride(avg_pool2d_2, (4, 512, 7, 7), (25088, 1, 3584, 512))
    assert_size_stride(relu_88, (4, 512, 7, 7), (25088, 1, 3584, 512))
    assert_size_stride(convolution_88, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_89, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_42, (4, 544, 7, 7), (26656, 1, 3808, 544))
    assert_size_stride(relu_90, (4, 544, 7, 7), (26656, 1, 3808, 544))
    assert_size_stride(convolution_90, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_91, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_43, (4, 576, 7, 7), (28224, 1, 4032, 576))
    assert_size_stride(relu_92, (4, 576, 7, 7), (28224, 1, 4032, 576))
    assert_size_stride(convolution_92, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_93, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_44, (4, 608, 7, 7), (29792, 1, 4256, 608))
    assert_size_stride(relu_94, (4, 608, 7, 7), (29792, 1, 4256, 608))
    assert_size_stride(convolution_94, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_95, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_45, (4, 640, 7, 7), (31360, 1, 4480, 640))
    assert_size_stride(relu_96, (4, 640, 7, 7), (31360, 1, 4480, 640))
    assert_size_stride(convolution_96, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_97, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_46, (4, 672, 7, 7), (32928, 1, 4704, 672))
    assert_size_stride(relu_98, (4, 672, 7, 7), (32928, 1, 4704, 672))
    assert_size_stride(convolution_98, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_99, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_47, (4, 704, 7, 7), (34496, 1, 4928, 704))
    assert_size_stride(relu_100, (4, 704, 7, 7), (34496, 1, 4928, 704))
    assert_size_stride(convolution_100, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_101, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_48, (4, 736, 7, 7), (36064, 1, 5152, 736))
    assert_size_stride(relu_102, (4, 736, 7, 7), (36064, 1, 5152, 736))
    assert_size_stride(convolution_102, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_103, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_49, (4, 768, 7, 7), (37632, 1, 5376, 768))
    assert_size_stride(relu_104, (4, 768, 7, 7), (37632, 1, 5376, 768))
    assert_size_stride(convolution_104, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_105, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_50, (4, 800, 7, 7), (39200, 1, 5600, 800))
    assert_size_stride(relu_106, (4, 800, 7, 7), (39200, 1, 5600, 800))
    assert_size_stride(convolution_106, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_107, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_51, (4, 832, 7, 7), (40768, 1, 5824, 832))
    assert_size_stride(relu_108, (4, 832, 7, 7), (40768, 1, 5824, 832))
    assert_size_stride(convolution_108, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_109, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_52, (4, 864, 7, 7), (42336, 1, 6048, 864))
    assert_size_stride(relu_110, (4, 864, 7, 7), (42336, 1, 6048, 864))
    assert_size_stride(convolution_110, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_111, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_53, (4, 896, 7, 7), (43904, 1, 6272, 896))
    assert_size_stride(relu_112, (4, 896, 7, 7), (43904, 1, 6272, 896))
    assert_size_stride(convolution_112, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_113, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_54, (4, 928, 7, 7), (45472, 1, 6496, 928))
    assert_size_stride(relu_114, (4, 928, 7, 7), (45472, 1, 6496, 928))
    assert_size_stride(convolution_114, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_115, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_55, (4, 960, 7, 7), (47040, 1, 6720, 960))
    assert_size_stride(relu_116, (4, 960, 7, 7), (47040, 1, 6720, 960))
    assert_size_stride(convolution_116, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_117, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_56, (4, 992, 7, 7), (48608, 1, 6944, 992))
    assert_size_stride(relu_118, (4, 992, 7, 7), (48608, 1, 6944, 992))
    assert_size_stride(convolution_118, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(relu_119, (4, 128, 7, 7), (6272, 1, 896, 128))
    assert_size_stride(cat_57, (4, 1024, 7, 7), (50176, 1, 7168, 1024))
    assert_size_stride(view, (4, 1024), (1024, 1))
    assert_size_stride(permute_1, (1000, 1024), (1024, 1))
    assert_size_stride(le, (4, 1024, 7, 7), (50176, 1, 7168, 1024))
    assert_size_stride(sub_240, (4, 64, 56, 56), (200704, 1, 3584, 64))
    assert_size_stride(tangents_1, (4, 1000), (1000, 1))
    buf0 = empty((4, 1024), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: [aten.mm]
    extern_kernels.mm(tangents_1, permute_1, out=buf0)
    del permute_1
    buf1 = empty((1000, 1024), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: [aten.mm]
    extern_kernels.mm(reinterpret_tensor(tangents_1, (1000, 4), (1, 1000), 0), view, out=buf1)
    del view
    buf2 = empty((1000, ), device='cpu', dtype=torch.float32)
    buf3 = empty((1024, ), device='cpu', dtype=torch.float32)
    buf4 = empty((1024, ), device='cpu', dtype=torch.float32)
    buf5 = buf4; del buf4  # reuse
    buf6 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    cpp_fused_convolution_backward_div_native_batch_norm_backward_sum_threshold_backward_view_0(c_void_p(buf5.data_ptr()), c_void_p(tangents_1.data_ptr()), c_void_p(le.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(cat_57.data_ptr()), c_void_p(primals_725.data_ptr()), c_void_p(primals_726.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(buf2.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(buf6.data_ptr()))
    del cat_57
    del primals_725
    del tangents_1
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf7 = aten.convolution_backward(buf6, relu_119, primals_360, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_360
    buf8 = buf7[0]
    buf9 = buf7[1]
    del buf7
    buf10 = empty((128, ), device='cpu', dtype=torch.float32)
    buf11 = empty((128, ), device='cpu', dtype=torch.float32)
    buf12 = buf11; del buf11  # reuse
    buf13 = buf8; del buf8  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_1(c_void_p(buf12.data_ptr()), c_void_p(buf13.data_ptr()), c_void_p(relu_119.data_ptr()), c_void_p(convolution_118.data_ptr()), c_void_p(primals_722.data_ptr()), c_void_p(primals_723.data_ptr()), c_void_p(primals_358.data_ptr()), c_void_p(buf10.data_ptr()))
    del convolution_118
    del primals_358
    del primals_722
    del primals_723
    del relu_119
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf14 = aten.convolution_backward(buf13, relu_118, primals_357, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf13
    del primals_357
    buf15 = buf14[0]
    buf16 = buf14[1]
    del buf14
    buf17 = empty((992, ), device='cpu', dtype=torch.float32)
    buf18 = empty((992, ), device='cpu', dtype=torch.float32)
    buf19 = buf18; del buf18  # reuse
    buf20 = buf6; del buf6  # reuse
    cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_2(c_void_p(buf19.data_ptr()), c_void_p(relu_118.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(cat_56.data_ptr()), c_void_p(primals_719.data_ptr()), c_void_p(primals_720.data_ptr()), c_void_p(le.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(primals_726.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(buf17.data_ptr()), c_void_p(buf20.data_ptr()))
    del cat_56
    del primals_719
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf21 = aten.convolution_backward(buf20, relu_117, primals_354, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_354
    buf22 = buf21[0]
    buf23 = buf21[1]
    del buf21
    buf24 = empty((128, ), device='cpu', dtype=torch.float32)
    buf25 = empty((128, ), device='cpu', dtype=torch.float32)
    buf26 = buf25; del buf25  # reuse
    buf27 = buf22; del buf22  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_3(c_void_p(buf26.data_ptr()), c_void_p(buf27.data_ptr()), c_void_p(relu_117.data_ptr()), c_void_p(convolution_116.data_ptr()), c_void_p(primals_716.data_ptr()), c_void_p(primals_717.data_ptr()), c_void_p(primals_352.data_ptr()), c_void_p(buf24.data_ptr()))
    del convolution_116
    del primals_352
    del primals_716
    del primals_717
    del relu_117
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf28 = aten.convolution_backward(buf27, relu_116, primals_351, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf27
    del primals_351
    buf29 = buf28[0]
    buf30 = buf28[1]
    del buf28
    buf31 = empty((960, ), device='cpu', dtype=torch.float32)
    buf32 = empty((960, ), device='cpu', dtype=torch.float32)
    buf33 = buf32; del buf32  # reuse
    buf34 = empty_strided((4, 512, 7, 7), (25088, 1, 3584, 512), device='cpu', dtype=torch.float32)
    buf35 = buf20; del buf20  # reuse
    buf36 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf37 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf38 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf39 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf40 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf41 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf42 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf43 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf44 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf45 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf46 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf47 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    buf48 = empty_strided((4, 32, 7, 7), (1568, 1, 224, 32), device='cpu', dtype=torch.float32)
    cpp_fused_add_native_batch_norm_backward_threshold_backward_4(c_void_p(buf33.data_ptr()), c_void_p(relu_116.data_ptr()), c_void_p(buf29.data_ptr()), c_void_p(cat_55.data_ptr()), c_void_p(primals_713.data_ptr()), c_void_p(primals_714.data_ptr()), c_void_p(le.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(primals_726.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(relu_118.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(primals_720.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(buf31.data_ptr()), c_void_p(buf34.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(buf36.data_ptr()), c_void_p(buf37.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf39.data_ptr()), c_void_p(buf40.data_ptr()), c_void_p(buf41.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(buf43.data_ptr()), c_void_p(buf44.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(buf47.data_ptr()), c_void_p(buf48.data_ptr()))
    del buf0
    del buf15
    del buf29
    del cat_55
    del le
    del primals_349
    del primals_355
    del primals_361
    del primals_713
    del primals_714
    del primals_720
    del primals_726
    del relu_116
    del relu_118
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf49 = aten.convolution_backward(buf48, relu_115, primals_348, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf48
    del primals_348
    buf50 = buf49[0]
    buf51 = buf49[1]
    del buf49
    buf52 = empty((128, ), device='cpu', dtype=torch.float32)
    buf53 = empty((128, ), device='cpu', dtype=torch.float32)
    buf54 = buf53; del buf53  # reuse
    buf55 = buf50; del buf50  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_5(c_void_p(buf54.data_ptr()), c_void_p(buf55.data_ptr()), c_void_p(relu_115.data_ptr()), c_void_p(convolution_114.data_ptr()), c_void_p(primals_710.data_ptr()), c_void_p(primals_711.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(buf52.data_ptr()))
    del convolution_114
    del primals_346
    del primals_710
    del primals_711
    del relu_115
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf56 = aten.convolution_backward(buf55, relu_114, primals_345, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf55
    del primals_345
    buf57 = buf56[0]
    buf58 = buf56[1]
    del buf56
    buf59 = empty((928, ), device='cpu', dtype=torch.float32)
    buf60 = empty((928, ), device='cpu', dtype=torch.float32)
    buf61 = buf60; del buf60  # reuse
    buf62 = buf47; del buf47  # reuse
    cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_6(c_void_p(buf61.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(cat_54.data_ptr()), c_void_p(primals_707.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(buf59.data_ptr()))
    del cat_54
    del primals_707
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf63 = aten.convolution_backward(buf62, relu_113, primals_342, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf62
    del primals_342
    buf64 = buf63[0]
    buf65 = buf63[1]
    del buf63
    buf66 = empty((128, ), device='cpu', dtype=torch.float32)
    buf67 = empty((128, ), device='cpu', dtype=torch.float32)
    buf68 = buf67; del buf67  # reuse
    buf69 = buf64; del buf64  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_7(c_void_p(buf68.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(relu_113.data_ptr()), c_void_p(convolution_112.data_ptr()), c_void_p(primals_704.data_ptr()), c_void_p(primals_705.data_ptr()), c_void_p(primals_340.data_ptr()), c_void_p(buf66.data_ptr()))
    del convolution_112
    del primals_340
    del primals_704
    del primals_705
    del relu_113
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf70 = aten.convolution_backward(buf69, relu_112, primals_339, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_339
    buf71 = buf70[0]
    buf72 = buf70[1]
    del buf70
    buf73 = empty((896, ), device='cpu', dtype=torch.float32)
    buf74 = empty((896, ), device='cpu', dtype=torch.float32)
    buf75 = buf74; del buf74  # reuse
    buf88 = buf46; del buf46  # reuse
    cpp_fused_add_native_batch_norm_backward_threshold_backward_8(c_void_p(buf75.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(cat_53.data_ptr()), c_void_p(primals_701.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(buf73.data_ptr()))
    del cat_53
    del primals_701
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf89 = aten.convolution_backward(buf88, relu_111, primals_336, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf88
    del primals_336
    buf90 = buf89[0]
    buf95 = buf69; del buf69  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_9(c_void_p(relu_111.data_ptr()), c_void_p(buf90.data_ptr()), c_void_p(primals_699.data_ptr()), c_void_p(primals_334.data_ptr()), c_void_p(buf95.data_ptr()))
    del primals_334
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf96 = aten.convolution_backward(buf95, relu_110, primals_333, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_333
    buf97 = buf96[0]
    buf87 = buf45; del buf45  # reuse
    buf102 = buf87; del buf87  # reuse
    cpp_fused_add_convolution_backward_10(c_void_p(buf102.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf103 = aten.convolution_backward(buf102, relu_109, primals_330, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf102
    del primals_330
    buf104 = buf103[0]
    buf109 = buf95; del buf95  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_11(c_void_p(relu_109.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(primals_693.data_ptr()), c_void_p(primals_328.data_ptr()), c_void_p(buf109.data_ptr()))
    del primals_328
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf110 = aten.convolution_backward(buf109, relu_108, primals_327, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_327
    buf111 = buf110[0]
    buf86 = buf44; del buf44  # reuse
    buf126 = buf86; del buf86  # reuse
    cpp_fused_add_12(c_void_p(buf126.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf127 = aten.convolution_backward(buf126, relu_107, primals_324, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf126
    del primals_324
    buf128 = buf127[0]
    buf133 = buf109; del buf109  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_13(c_void_p(relu_107.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(primals_687.data_ptr()), c_void_p(primals_322.data_ptr()), c_void_p(buf133.data_ptr()))
    del primals_322
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf134 = aten.convolution_backward(buf133, relu_106, primals_321, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_321
    buf135 = buf134[0]
    buf85 = buf43; del buf43  # reuse
    buf125 = buf85; del buf85  # reuse
    buf140 = buf125; del buf125  # reuse
    cpp_fused_add_convolution_backward_14(c_void_p(buf140.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf141 = aten.convolution_backward(buf140, relu_105, primals_318, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf140
    del primals_318
    buf142 = buf141[0]
    buf147 = buf133; del buf133  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_15(c_void_p(relu_105.data_ptr()), c_void_p(buf142.data_ptr()), c_void_p(primals_681.data_ptr()), c_void_p(primals_316.data_ptr()), c_void_p(buf147.data_ptr()))
    del primals_316
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf148 = aten.convolution_backward(buf147, relu_104, primals_315, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_315
    buf149 = buf148[0]
    buf84 = buf42; del buf42  # reuse
    buf124 = buf84; del buf84  # reuse
    buf162 = buf124; del buf124  # reuse
    cpp_fused_add_16(c_void_p(buf162.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf163 = aten.convolution_backward(buf162, relu_103, primals_312, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf162
    del primals_312
    buf164 = buf163[0]
    buf169 = buf147; del buf147  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_17(c_void_p(relu_103.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(primals_675.data_ptr()), c_void_p(primals_310.data_ptr()), c_void_p(buf169.data_ptr()))
    del primals_310
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf170 = aten.convolution_backward(buf169, relu_102, primals_309, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_309
    buf171 = buf170[0]
    buf83 = buf41; del buf41  # reuse
    buf123 = buf83; del buf83  # reuse
    buf161 = buf123; del buf123  # reuse
    buf176 = buf161; del buf161  # reuse
    cpp_fused_add_convolution_backward_18(c_void_p(buf176.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf177 = aten.convolution_backward(buf176, relu_101, primals_306, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf176
    del primals_306
    buf178 = buf177[0]
    buf183 = buf169; del buf169  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_19(c_void_p(relu_101.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(primals_669.data_ptr()), c_void_p(primals_304.data_ptr()), c_void_p(buf183.data_ptr()))
    del primals_304
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf184 = aten.convolution_backward(buf183, relu_100, primals_303, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_303
    buf185 = buf184[0]
    buf82 = buf40; del buf40  # reuse
    buf122 = buf82; del buf82  # reuse
    buf160 = buf122; del buf122  # reuse
    buf196 = buf160; del buf160  # reuse
    cpp_fused_add_20(c_void_p(buf196.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf197 = aten.convolution_backward(buf196, relu_99, primals_300, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf196
    del primals_300
    buf198 = buf197[0]
    buf203 = buf183; del buf183  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_21(c_void_p(relu_99.data_ptr()), c_void_p(buf198.data_ptr()), c_void_p(primals_663.data_ptr()), c_void_p(primals_298.data_ptr()), c_void_p(buf203.data_ptr()))
    del primals_298
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf204 = aten.convolution_backward(buf203, relu_98, primals_297, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_297
    buf205 = buf204[0]
    buf81 = buf39; del buf39  # reuse
    buf121 = buf81; del buf81  # reuse
    buf159 = buf121; del buf121  # reuse
    buf195 = buf159; del buf159  # reuse
    buf210 = buf195; del buf195  # reuse
    cpp_fused_add_convolution_backward_22(c_void_p(buf210.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf211 = aten.convolution_backward(buf210, relu_97, primals_294, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf210
    del primals_294
    buf212 = buf211[0]
    buf217 = buf203; del buf203  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_23(c_void_p(relu_97.data_ptr()), c_void_p(buf212.data_ptr()), c_void_p(primals_657.data_ptr()), c_void_p(primals_292.data_ptr()), c_void_p(buf217.data_ptr()))
    del primals_292
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf218 = aten.convolution_backward(buf217, relu_96, primals_291, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_291
    buf219 = buf218[0]
    buf80 = buf38; del buf38  # reuse
    buf120 = buf80; del buf80  # reuse
    buf158 = buf120; del buf120  # reuse
    buf194 = buf158; del buf158  # reuse
    buf228 = buf194; del buf194  # reuse
    cpp_fused_add_24(c_void_p(buf228.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_289.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf229 = aten.convolution_backward(buf228, relu_95, primals_288, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf228
    del primals_288
    buf230 = buf229[0]
    buf235 = buf217; del buf217  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_25(c_void_p(relu_95.data_ptr()), c_void_p(buf230.data_ptr()), c_void_p(primals_651.data_ptr()), c_void_p(primals_286.data_ptr()), c_void_p(buf235.data_ptr()))
    del primals_286
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf236 = aten.convolution_backward(buf235, relu_94, primals_285, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_285
    buf237 = buf236[0]
    buf79 = buf37; del buf37  # reuse
    buf119 = buf79; del buf79  # reuse
    buf157 = buf119; del buf119  # reuse
    buf193 = buf157; del buf157  # reuse
    buf227 = buf193; del buf193  # reuse
    buf242 = buf227; del buf227  # reuse
    cpp_fused_add_convolution_backward_26(c_void_p(buf242.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(relu_94.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_283.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf243 = aten.convolution_backward(buf242, relu_93, primals_282, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf242
    del primals_282
    buf244 = buf243[0]
    buf249 = buf235; del buf235  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_27(c_void_p(relu_93.data_ptr()), c_void_p(buf244.data_ptr()), c_void_p(primals_645.data_ptr()), c_void_p(primals_280.data_ptr()), c_void_p(buf249.data_ptr()))
    del primals_280
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf250 = aten.convolution_backward(buf249, relu_92, primals_279, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_279
    buf251 = buf250[0]
    buf78 = buf36; del buf36  # reuse
    buf118 = buf78; del buf78  # reuse
    buf156 = buf118; del buf118  # reuse
    buf192 = buf156; del buf156  # reuse
    buf226 = buf192; del buf192  # reuse
    buf258 = buf226; del buf226  # reuse
    cpp_fused_add_28(c_void_p(buf258.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(relu_94.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_283.data_ptr()), c_void_p(relu_92.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_277.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf259 = aten.convolution_backward(buf258, relu_91, primals_276, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf258
    del primals_276
    buf260 = buf259[0]
    buf265 = buf249; del buf249  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_29(c_void_p(relu_91.data_ptr()), c_void_p(buf260.data_ptr()), c_void_p(primals_639.data_ptr()), c_void_p(primals_274.data_ptr()), c_void_p(buf265.data_ptr()))
    del primals_274
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf266 = aten.convolution_backward(buf265, relu_90, primals_273, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_273
    buf267 = buf266[0]
    buf77 = buf35; del buf35  # reuse
    buf117 = buf77; del buf77  # reuse
    buf155 = buf117; del buf117  # reuse
    buf191 = buf155; del buf155  # reuse
    buf225 = buf191; del buf191  # reuse
    buf257 = buf225; del buf225  # reuse
    buf272 = buf257; del buf257  # reuse
    cpp_fused_add_convolution_backward_30(c_void_p(buf272.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(relu_94.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_283.data_ptr()), c_void_p(relu_92.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_277.data_ptr()), c_void_p(relu_90.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(primals_636.data_ptr()), c_void_p(primals_271.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf273 = aten.convolution_backward(buf272, relu_89, primals_270, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf272
    del primals_270
    buf274 = buf273[0]
    buf279 = buf265; del buf265  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_31(c_void_p(relu_89.data_ptr()), c_void_p(buf274.data_ptr()), c_void_p(primals_633.data_ptr()), c_void_p(primals_268.data_ptr()), c_void_p(buf279.data_ptr()))
    del primals_268
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf280 = aten.convolution_backward(buf279, relu_88, primals_267, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf279
    del primals_267
    buf281 = buf280[0]
    buf76 = buf34; del buf34  # reuse
    buf116 = buf76; del buf76  # reuse
    buf154 = buf116; del buf116  # reuse
    buf190 = buf154; del buf154  # reuse
    buf224 = buf190; del buf190  # reuse
    buf256 = buf224; del buf224  # reuse
    buf286 = buf256; del buf256  # reuse
    cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_32(c_void_p(buf286.data_ptr()), c_void_p(relu_114.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(primals_708.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(relu_112.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(primals_702.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(relu_94.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_283.data_ptr()), c_void_p(relu_92.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_277.data_ptr()), c_void_p(relu_90.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(primals_636.data_ptr()), c_void_p(primals_271.data_ptr()), c_void_p(relu_88.data_ptr()), c_void_p(buf281.data_ptr()), c_void_p(primals_630.data_ptr()), c_void_p(primals_265.data_ptr()))
    del buf57
    del buf71
    del primals_265
    del primals_271
    del primals_277
    del primals_283
    del primals_289
    del primals_295
    del primals_301
    del primals_307
    del primals_313
    del primals_319
    del primals_325
    del primals_331
    del primals_337
    del primals_343
    del primals_702
    del primals_708
    del relu_112
    del relu_114
    buf91 = buf89[1]
    del buf89
    buf92 = empty((128, ), device='cpu', dtype=torch.float32)
    buf93 = empty((128, ), device='cpu', dtype=torch.float32)
    buf94 = buf93; del buf93  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_33(c_void_p(buf94.data_ptr()), c_void_p(relu_111.data_ptr()), c_void_p(buf90.data_ptr()), c_void_p(convolution_110.data_ptr()), c_void_p(primals_698.data_ptr()), c_void_p(primals_699.data_ptr()), c_void_p(buf92.data_ptr()))
    del buf90
    del convolution_110
    del primals_698
    del primals_699
    del relu_111
    buf98 = buf96[1]
    del buf96
    buf99 = empty((864, ), device='cpu', dtype=torch.float32)
    buf100 = empty((864, ), device='cpu', dtype=torch.float32)
    buf101 = buf100; del buf100  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_34(c_void_p(buf101.data_ptr()), c_void_p(relu_110.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(cat_52.data_ptr()), c_void_p(primals_695.data_ptr()), c_void_p(primals_696.data_ptr()), c_void_p(buf99.data_ptr()))
    del buf97
    del cat_52
    del primals_695
    del primals_696
    del relu_110
    buf105 = buf103[1]
    del buf103
    buf106 = empty((128, ), device='cpu', dtype=torch.float32)
    buf107 = empty((128, ), device='cpu', dtype=torch.float32)
    buf108 = buf107; del buf107  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_35(c_void_p(buf108.data_ptr()), c_void_p(relu_109.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(convolution_108.data_ptr()), c_void_p(primals_692.data_ptr()), c_void_p(primals_693.data_ptr()), c_void_p(buf106.data_ptr()))
    del buf104
    del convolution_108
    del primals_692
    del primals_693
    del relu_109
    buf112 = buf110[1]
    del buf110
    buf113 = empty((832, ), device='cpu', dtype=torch.float32)
    buf114 = empty((832, ), device='cpu', dtype=torch.float32)
    buf115 = buf114; del buf114  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_36(c_void_p(buf115.data_ptr()), c_void_p(relu_108.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(cat_51.data_ptr()), c_void_p(primals_689.data_ptr()), c_void_p(primals_690.data_ptr()), c_void_p(buf113.data_ptr()))
    del buf111
    del cat_51
    del primals_689
    del primals_690
    del relu_108
    buf129 = buf127[1]
    del buf127
    buf130 = empty((128, ), device='cpu', dtype=torch.float32)
    buf131 = empty((128, ), device='cpu', dtype=torch.float32)
    buf132 = buf131; del buf131  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_37(c_void_p(buf132.data_ptr()), c_void_p(relu_107.data_ptr()), c_void_p(buf128.data_ptr()), c_void_p(convolution_106.data_ptr()), c_void_p(primals_686.data_ptr()), c_void_p(primals_687.data_ptr()), c_void_p(buf130.data_ptr()))
    del buf128
    del convolution_106
    del primals_686
    del primals_687
    del relu_107
    buf136 = buf134[1]
    del buf134
    buf137 = empty((800, ), device='cpu', dtype=torch.float32)
    buf138 = empty((800, ), device='cpu', dtype=torch.float32)
    buf139 = buf138; del buf138  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_38(c_void_p(buf139.data_ptr()), c_void_p(relu_106.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(cat_50.data_ptr()), c_void_p(primals_683.data_ptr()), c_void_p(primals_684.data_ptr()), c_void_p(buf137.data_ptr()))
    del buf135
    del cat_50
    del primals_683
    del primals_684
    del relu_106
    buf143 = buf141[1]
    del buf141
    buf144 = empty((128, ), device='cpu', dtype=torch.float32)
    buf145 = empty((128, ), device='cpu', dtype=torch.float32)
    buf146 = buf145; del buf145  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_39(c_void_p(buf146.data_ptr()), c_void_p(relu_105.data_ptr()), c_void_p(buf142.data_ptr()), c_void_p(convolution_104.data_ptr()), c_void_p(primals_680.data_ptr()), c_void_p(primals_681.data_ptr()), c_void_p(buf144.data_ptr()))
    del buf142
    del convolution_104
    del primals_680
    del primals_681
    del relu_105
    buf150 = buf148[1]
    del buf148
    buf151 = empty((768, ), device='cpu', dtype=torch.float32)
    buf152 = empty((768, ), device='cpu', dtype=torch.float32)
    buf153 = buf152; del buf152  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_40(c_void_p(buf153.data_ptr()), c_void_p(relu_104.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(cat_49.data_ptr()), c_void_p(primals_677.data_ptr()), c_void_p(primals_678.data_ptr()), c_void_p(buf151.data_ptr()))
    del buf149
    del cat_49
    del primals_677
    del primals_678
    del relu_104
    buf165 = buf163[1]
    del buf163
    buf166 = empty((128, ), device='cpu', dtype=torch.float32)
    buf167 = empty((128, ), device='cpu', dtype=torch.float32)
    buf168 = buf167; del buf167  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_41(c_void_p(buf168.data_ptr()), c_void_p(relu_103.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(convolution_102.data_ptr()), c_void_p(primals_674.data_ptr()), c_void_p(primals_675.data_ptr()), c_void_p(buf166.data_ptr()))
    del buf164
    del convolution_102
    del primals_674
    del primals_675
    del relu_103
    buf172 = buf170[1]
    del buf170
    buf173 = empty((736, ), device='cpu', dtype=torch.float32)
    buf174 = empty((736, ), device='cpu', dtype=torch.float32)
    buf175 = buf174; del buf174  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_42(c_void_p(buf175.data_ptr()), c_void_p(relu_102.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(cat_48.data_ptr()), c_void_p(primals_671.data_ptr()), c_void_p(primals_672.data_ptr()), c_void_p(buf173.data_ptr()))
    del buf171
    del cat_48
    del primals_671
    del primals_672
    del relu_102
    buf179 = buf177[1]
    del buf177
    buf180 = empty((128, ), device='cpu', dtype=torch.float32)
    buf181 = empty((128, ), device='cpu', dtype=torch.float32)
    buf182 = buf181; del buf181  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_43(c_void_p(buf182.data_ptr()), c_void_p(relu_101.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(convolution_100.data_ptr()), c_void_p(primals_668.data_ptr()), c_void_p(primals_669.data_ptr()), c_void_p(buf180.data_ptr()))
    del buf178
    del convolution_100
    del primals_668
    del primals_669
    del relu_101
    buf186 = buf184[1]
    del buf184
    buf187 = empty((704, ), device='cpu', dtype=torch.float32)
    buf188 = empty((704, ), device='cpu', dtype=torch.float32)
    buf189 = buf188; del buf188  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_44(c_void_p(buf189.data_ptr()), c_void_p(relu_100.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(cat_47.data_ptr()), c_void_p(primals_665.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(buf187.data_ptr()))
    del buf185
    del cat_47
    del primals_665
    del primals_666
    del relu_100
    buf199 = buf197[1]
    del buf197
    buf200 = empty((128, ), device='cpu', dtype=torch.float32)
    buf201 = empty((128, ), device='cpu', dtype=torch.float32)
    buf202 = buf201; del buf201  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_45(c_void_p(buf202.data_ptr()), c_void_p(relu_99.data_ptr()), c_void_p(buf198.data_ptr()), c_void_p(convolution_98.data_ptr()), c_void_p(primals_662.data_ptr()), c_void_p(primals_663.data_ptr()), c_void_p(buf200.data_ptr()))
    del buf198
    del convolution_98
    del primals_662
    del primals_663
    del relu_99
    buf206 = buf204[1]
    del buf204
    buf207 = empty((672, ), device='cpu', dtype=torch.float32)
    buf208 = empty((672, ), device='cpu', dtype=torch.float32)
    buf209 = buf208; del buf208  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_46(c_void_p(buf209.data_ptr()), c_void_p(relu_98.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(cat_46.data_ptr()), c_void_p(primals_659.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(buf207.data_ptr()))
    del buf205
    del cat_46
    del primals_659
    del primals_660
    del relu_98
    buf213 = buf211[1]
    del buf211
    buf214 = empty((128, ), device='cpu', dtype=torch.float32)
    buf215 = empty((128, ), device='cpu', dtype=torch.float32)
    buf216 = buf215; del buf215  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_47(c_void_p(buf216.data_ptr()), c_void_p(relu_97.data_ptr()), c_void_p(buf212.data_ptr()), c_void_p(convolution_96.data_ptr()), c_void_p(primals_656.data_ptr()), c_void_p(primals_657.data_ptr()), c_void_p(buf214.data_ptr()))
    del buf212
    del convolution_96
    del primals_656
    del primals_657
    del relu_97
    buf220 = buf218[1]
    del buf218
    buf221 = empty((640, ), device='cpu', dtype=torch.float32)
    buf222 = empty((640, ), device='cpu', dtype=torch.float32)
    buf223 = buf222; del buf222  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_48(c_void_p(buf223.data_ptr()), c_void_p(relu_96.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(cat_45.data_ptr()), c_void_p(primals_653.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(buf221.data_ptr()))
    del buf219
    del cat_45
    del primals_653
    del primals_654
    del relu_96
    buf231 = buf229[1]
    del buf229
    buf232 = empty((128, ), device='cpu', dtype=torch.float32)
    buf233 = empty((128, ), device='cpu', dtype=torch.float32)
    buf234 = buf233; del buf233  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_49(c_void_p(buf234.data_ptr()), c_void_p(relu_95.data_ptr()), c_void_p(buf230.data_ptr()), c_void_p(convolution_94.data_ptr()), c_void_p(primals_650.data_ptr()), c_void_p(primals_651.data_ptr()), c_void_p(buf232.data_ptr()))
    del buf230
    del convolution_94
    del primals_650
    del primals_651
    del relu_95
    buf238 = buf236[1]
    del buf236
    buf239 = empty((608, ), device='cpu', dtype=torch.float32)
    buf240 = empty((608, ), device='cpu', dtype=torch.float32)
    buf241 = buf240; del buf240  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_50(c_void_p(buf241.data_ptr()), c_void_p(relu_94.data_ptr()), c_void_p(buf237.data_ptr()), c_void_p(cat_44.data_ptr()), c_void_p(primals_647.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(buf239.data_ptr()))
    del buf237
    del cat_44
    del primals_647
    del primals_648
    del relu_94
    buf245 = buf243[1]
    del buf243
    buf246 = empty((128, ), device='cpu', dtype=torch.float32)
    buf247 = empty((128, ), device='cpu', dtype=torch.float32)
    buf248 = buf247; del buf247  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_51(c_void_p(buf248.data_ptr()), c_void_p(relu_93.data_ptr()), c_void_p(buf244.data_ptr()), c_void_p(convolution_92.data_ptr()), c_void_p(primals_644.data_ptr()), c_void_p(primals_645.data_ptr()), c_void_p(buf246.data_ptr()))
    del buf244
    del convolution_92
    del primals_644
    del primals_645
    del relu_93
    buf252 = buf250[1]
    del buf250
    buf253 = empty((576, ), device='cpu', dtype=torch.float32)
    buf254 = empty((576, ), device='cpu', dtype=torch.float32)
    buf255 = buf254; del buf254  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_52(c_void_p(buf255.data_ptr()), c_void_p(relu_92.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(cat_43.data_ptr()), c_void_p(primals_641.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(buf253.data_ptr()))
    del buf251
    del cat_43
    del primals_641
    del primals_642
    del relu_92
    buf261 = buf259[1]
    del buf259
    buf262 = empty((128, ), device='cpu', dtype=torch.float32)
    buf263 = empty((128, ), device='cpu', dtype=torch.float32)
    buf264 = buf263; del buf263  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_53(c_void_p(buf264.data_ptr()), c_void_p(relu_91.data_ptr()), c_void_p(buf260.data_ptr()), c_void_p(convolution_90.data_ptr()), c_void_p(primals_638.data_ptr()), c_void_p(primals_639.data_ptr()), c_void_p(buf262.data_ptr()))
    del buf260
    del convolution_90
    del primals_638
    del primals_639
    del relu_91
    buf268 = buf266[1]
    del buf266
    buf269 = empty((544, ), device='cpu', dtype=torch.float32)
    buf270 = empty((544, ), device='cpu', dtype=torch.float32)
    buf271 = buf270; del buf270  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_54(c_void_p(buf271.data_ptr()), c_void_p(relu_90.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(cat_42.data_ptr()), c_void_p(primals_635.data_ptr()), c_void_p(primals_636.data_ptr()), c_void_p(buf269.data_ptr()))
    del buf267
    del cat_42
    del primals_635
    del primals_636
    del relu_90
    buf275 = buf273[1]
    del buf273
    buf276 = empty((128, ), device='cpu', dtype=torch.float32)
    buf277 = empty((128, ), device='cpu', dtype=torch.float32)
    buf278 = buf277; del buf277  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_55(c_void_p(buf278.data_ptr()), c_void_p(relu_89.data_ptr()), c_void_p(buf274.data_ptr()), c_void_p(convolution_88.data_ptr()), c_void_p(primals_632.data_ptr()), c_void_p(primals_633.data_ptr()), c_void_p(buf276.data_ptr()))
    del convolution_88
    del primals_632
    del primals_633
    del relu_89
    buf282 = buf280[1]
    del buf280
    buf283 = empty((512, ), device='cpu', dtype=torch.float32)
    buf284 = empty((512, ), device='cpu', dtype=torch.float32)
    buf285 = buf284; del buf284  # reuse
    buf287 = empty_strided((4, 512, 14, 14), (100352, 1, 7168, 512), device='cpu', dtype=torch.float32)
    cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_56(c_void_p(buf285.data_ptr()), c_void_p(relu_88.data_ptr()), c_void_p(buf281.data_ptr()), c_void_p(avg_pool2d_2.data_ptr()), c_void_p(primals_629.data_ptr()), c_void_p(primals_630.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(buf283.data_ptr()), c_void_p(buf287.data_ptr()))
    del avg_pool2d_2
    del buf281
    del buf286
    del primals_629
    del primals_630
    del relu_88
    # Source Nodes: [], Original ATen: [aten.avg_pool2d_backward, aten.convolution_backward]
    buf288 = aten.convolution_backward(buf287, relu_87, primals_264, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf287
    del primals_264
    buf289 = buf288[0]
    buf290 = buf288[1]
    del buf288
    buf291 = empty((1024, ), device='cpu', dtype=torch.float32)
    buf292 = empty((1024, ), device='cpu', dtype=torch.float32)
    buf293 = buf292; del buf292  # reuse
    buf294 = reinterpret_tensor(buf274, (4, 32, 14, 14), (6272, 1, 448, 32), 0); del buf274  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_57(c_void_p(buf293.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(cat_41.data_ptr()), c_void_p(primals_626.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(buf291.data_ptr()), c_void_p(buf294.data_ptr()))
    del cat_41
    del primals_626
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf295 = aten.convolution_backward(buf294, relu_86, primals_261, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_261
    buf296 = buf295[0]
    buf297 = buf295[1]
    del buf295
    buf298 = empty((128, ), device='cpu', dtype=torch.float32)
    buf299 = empty((128, ), device='cpu', dtype=torch.float32)
    buf300 = buf299; del buf299  # reuse
    buf301 = buf296; del buf296  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_58(c_void_p(buf300.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(relu_86.data_ptr()), c_void_p(convolution_85.data_ptr()), c_void_p(primals_623.data_ptr()), c_void_p(primals_624.data_ptr()), c_void_p(primals_259.data_ptr()), c_void_p(buf298.data_ptr()))
    del convolution_85
    del primals_259
    del primals_623
    del primals_624
    del relu_86
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf302 = aten.convolution_backward(buf301, relu_85, primals_258, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf301
    del primals_258
    buf303 = buf302[0]
    buf304 = buf302[1]
    del buf302
    buf305 = empty((992, ), device='cpu', dtype=torch.float32)
    buf306 = empty((992, ), device='cpu', dtype=torch.float32)
    buf307 = buf306; del buf306  # reuse
    buf308 = buf294; del buf294  # reuse
    cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_59(c_void_p(buf307.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(cat_40.data_ptr()), c_void_p(primals_620.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(buf308.data_ptr()))
    del cat_40
    del primals_620
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf309 = aten.convolution_backward(buf308, relu_84, primals_255, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_255
    buf310 = buf309[0]
    buf311 = buf309[1]
    del buf309
    buf312 = empty((128, ), device='cpu', dtype=torch.float32)
    buf313 = empty((128, ), device='cpu', dtype=torch.float32)
    buf314 = buf313; del buf313  # reuse
    buf315 = buf310; del buf310  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_60(c_void_p(buf314.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(relu_84.data_ptr()), c_void_p(convolution_83.data_ptr()), c_void_p(primals_617.data_ptr()), c_void_p(primals_618.data_ptr()), c_void_p(primals_253.data_ptr()), c_void_p(buf312.data_ptr()))
    del convolution_83
    del primals_253
    del primals_617
    del primals_618
    del relu_84
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf316 = aten.convolution_backward(buf315, relu_83, primals_252, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_252
    buf317 = buf316[0]
    buf318 = buf316[1]
    del buf316
    buf319 = empty((960, ), device='cpu', dtype=torch.float32)
    buf320 = empty((960, ), device='cpu', dtype=torch.float32)
    buf321 = buf320; del buf320  # reuse
    buf344 = buf308; del buf308  # reuse
    cpp_fused_add_native_batch_norm_backward_threshold_backward_61(c_void_p(buf321.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(cat_39.data_ptr()), c_void_p(primals_614.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf344.data_ptr()))
    del cat_39
    del primals_614
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf345 = aten.convolution_backward(buf344, relu_82, primals_249, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_249
    buf346 = buf345[0]
    buf351 = buf315; del buf315  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_62(c_void_p(relu_82.data_ptr()), c_void_p(buf346.data_ptr()), c_void_p(primals_612.data_ptr()), c_void_p(primals_247.data_ptr()), c_void_p(buf351.data_ptr()))
    del primals_247
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf352 = aten.convolution_backward(buf351, relu_81, primals_246, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_246
    buf353 = buf352[0]
    buf343 = buf344; del buf344  # reuse
    buf358 = buf343; del buf343  # reuse
    cpp_fused_add_convolution_backward_63(c_void_p(buf358.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf359 = aten.convolution_backward(buf358, relu_80, primals_243, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_243
    buf360 = buf359[0]
    buf365 = buf351; del buf351  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_64(c_void_p(relu_80.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(primals_606.data_ptr()), c_void_p(primals_241.data_ptr()), c_void_p(buf365.data_ptr()))
    del primals_241
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf366 = aten.convolution_backward(buf365, relu_79, primals_240, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_240
    buf367 = buf366[0]
    buf342 = buf358; del buf358  # reuse
    buf392 = buf342; del buf342  # reuse
    cpp_fused_add_65(c_void_p(buf392.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf393 = aten.convolution_backward(buf392, relu_78, primals_237, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_237
    buf394 = buf393[0]
    buf399 = buf365; del buf365  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_66(c_void_p(relu_78.data_ptr()), c_void_p(buf394.data_ptr()), c_void_p(primals_600.data_ptr()), c_void_p(primals_235.data_ptr()), c_void_p(buf399.data_ptr()))
    del primals_235
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf400 = aten.convolution_backward(buf399, relu_77, primals_234, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_234
    buf401 = buf400[0]
    buf341 = buf392; del buf392  # reuse
    buf391 = buf341; del buf341  # reuse
    buf406 = buf391; del buf391  # reuse
    cpp_fused_add_convolution_backward_67(c_void_p(buf406.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf407 = aten.convolution_backward(buf406, relu_76, primals_231, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_231
    buf408 = buf407[0]
    buf413 = buf399; del buf399  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_68(c_void_p(relu_76.data_ptr()), c_void_p(buf408.data_ptr()), c_void_p(primals_594.data_ptr()), c_void_p(primals_229.data_ptr()), c_void_p(buf413.data_ptr()))
    del primals_229
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf414 = aten.convolution_backward(buf413, relu_75, primals_228, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_228
    buf415 = buf414[0]
    buf340 = buf406; del buf406  # reuse
    buf390 = buf340; del buf340  # reuse
    buf438 = buf390; del buf390  # reuse
    cpp_fused_add_69(c_void_p(buf438.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf439 = aten.convolution_backward(buf438, relu_74, primals_225, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_225
    buf440 = buf439[0]
    buf445 = buf413; del buf413  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_70(c_void_p(relu_74.data_ptr()), c_void_p(buf440.data_ptr()), c_void_p(primals_588.data_ptr()), c_void_p(primals_223.data_ptr()), c_void_p(buf445.data_ptr()))
    del primals_223
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf446 = aten.convolution_backward(buf445, relu_73, primals_222, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_222
    buf447 = buf446[0]
    buf339 = buf438; del buf438  # reuse
    buf389 = buf339; del buf339  # reuse
    buf437 = buf389; del buf389  # reuse
    buf452 = buf437; del buf437  # reuse
    cpp_fused_add_convolution_backward_71(c_void_p(buf452.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf453 = aten.convolution_backward(buf452, relu_72, primals_219, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_219
    buf454 = buf453[0]
    buf459 = buf445; del buf445  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_72(c_void_p(relu_72.data_ptr()), c_void_p(buf454.data_ptr()), c_void_p(primals_582.data_ptr()), c_void_p(primals_217.data_ptr()), c_void_p(buf459.data_ptr()))
    del primals_217
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf460 = aten.convolution_backward(buf459, relu_71, primals_216, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_216
    buf461 = buf460[0]
    buf338 = buf452; del buf452  # reuse
    buf388 = buf338; del buf338  # reuse
    buf436 = buf388; del buf388  # reuse
    buf482 = buf436; del buf436  # reuse
    cpp_fused_add_73(c_void_p(buf482.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf483 = aten.convolution_backward(buf482, relu_70, primals_213, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_213
    buf484 = buf483[0]
    buf489 = buf459; del buf459  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_74(c_void_p(relu_70.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(primals_576.data_ptr()), c_void_p(primals_211.data_ptr()), c_void_p(buf489.data_ptr()))
    del primals_211
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf490 = aten.convolution_backward(buf489, relu_69, primals_210, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_210
    buf491 = buf490[0]
    buf337 = buf482; del buf482  # reuse
    buf387 = buf337; del buf337  # reuse
    buf435 = buf387; del buf387  # reuse
    buf481 = buf435; del buf435  # reuse
    buf496 = buf481; del buf481  # reuse
    cpp_fused_add_convolution_backward_75(c_void_p(buf496.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf497 = aten.convolution_backward(buf496, relu_68, primals_207, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_207
    buf498 = buf497[0]
    buf503 = buf489; del buf489  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_76(c_void_p(relu_68.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(primals_570.data_ptr()), c_void_p(primals_205.data_ptr()), c_void_p(buf503.data_ptr()))
    del primals_205
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf504 = aten.convolution_backward(buf503, relu_67, primals_204, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_204
    buf505 = buf504[0]
    buf336 = buf496; del buf496  # reuse
    buf386 = buf336; del buf336  # reuse
    buf434 = buf386; del buf386  # reuse
    buf480 = buf434; del buf434  # reuse
    buf524 = buf480; del buf480  # reuse
    cpp_fused_add_77(c_void_p(buf524.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf525 = aten.convolution_backward(buf524, relu_66, primals_201, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_201
    buf526 = buf525[0]
    buf531 = buf503; del buf503  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_78(c_void_p(relu_66.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(primals_564.data_ptr()), c_void_p(primals_199.data_ptr()), c_void_p(buf531.data_ptr()))
    del primals_199
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf532 = aten.convolution_backward(buf531, relu_65, primals_198, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_198
    buf533 = buf532[0]
    buf335 = buf524; del buf524  # reuse
    buf385 = buf335; del buf335  # reuse
    buf433 = buf385; del buf385  # reuse
    buf479 = buf433; del buf433  # reuse
    buf523 = buf479; del buf479  # reuse
    buf538 = buf523; del buf523  # reuse
    cpp_fused_add_convolution_backward_79(c_void_p(buf538.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf539 = aten.convolution_backward(buf538, relu_64, primals_195, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_195
    buf540 = buf539[0]
    buf545 = buf531; del buf531  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_80(c_void_p(relu_64.data_ptr()), c_void_p(buf540.data_ptr()), c_void_p(primals_558.data_ptr()), c_void_p(primals_193.data_ptr()), c_void_p(buf545.data_ptr()))
    del primals_193
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf546 = aten.convolution_backward(buf545, relu_63, primals_192, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_192
    buf547 = buf546[0]
    buf334 = buf538; del buf538  # reuse
    buf384 = buf334; del buf334  # reuse
    buf432 = buf384; del buf384  # reuse
    buf478 = buf432; del buf432  # reuse
    buf522 = buf478; del buf478  # reuse
    buf564 = buf522; del buf522  # reuse
    cpp_fused_add_81(c_void_p(buf564.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf565 = aten.convolution_backward(buf564, relu_62, primals_189, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_189
    buf566 = buf565[0]
    buf571 = buf545; del buf545  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_82(c_void_p(relu_62.data_ptr()), c_void_p(buf566.data_ptr()), c_void_p(primals_552.data_ptr()), c_void_p(primals_187.data_ptr()), c_void_p(buf571.data_ptr()))
    del primals_187
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf572 = aten.convolution_backward(buf571, relu_61, primals_186, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_186
    buf573 = buf572[0]
    buf333 = buf564; del buf564  # reuse
    buf383 = buf333; del buf333  # reuse
    buf431 = buf383; del buf383  # reuse
    buf477 = buf431; del buf431  # reuse
    buf521 = buf477; del buf477  # reuse
    buf563 = buf521; del buf521  # reuse
    buf578 = buf563; del buf563  # reuse
    cpp_fused_add_convolution_backward_83(c_void_p(buf578.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf579 = aten.convolution_backward(buf578, relu_60, primals_183, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_183
    buf580 = buf579[0]
    buf585 = buf571; del buf571  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_84(c_void_p(relu_60.data_ptr()), c_void_p(buf580.data_ptr()), c_void_p(primals_546.data_ptr()), c_void_p(primals_181.data_ptr()), c_void_p(buf585.data_ptr()))
    del primals_181
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf586 = aten.convolution_backward(buf585, relu_59, primals_180, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_180
    buf587 = buf586[0]
    buf332 = buf578; del buf578  # reuse
    buf382 = buf332; del buf332  # reuse
    buf430 = buf382; del buf382  # reuse
    buf476 = buf430; del buf430  # reuse
    buf520 = buf476; del buf476  # reuse
    buf562 = buf520; del buf520  # reuse
    buf602 = buf562; del buf562  # reuse
    cpp_fused_add_85(c_void_p(buf602.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf603 = aten.convolution_backward(buf602, relu_58, primals_177, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_177
    buf604 = buf603[0]
    buf609 = buf585; del buf585  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_86(c_void_p(relu_58.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(primals_540.data_ptr()), c_void_p(primals_175.data_ptr()), c_void_p(buf609.data_ptr()))
    del primals_175
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf610 = aten.convolution_backward(buf609, relu_57, primals_174, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_174
    buf611 = buf610[0]
    buf331 = buf602; del buf602  # reuse
    buf381 = buf331; del buf331  # reuse
    buf429 = buf381; del buf381  # reuse
    buf475 = buf429; del buf429  # reuse
    buf519 = buf475; del buf475  # reuse
    buf561 = buf519; del buf519  # reuse
    buf601 = buf561; del buf561  # reuse
    buf616 = buf601; del buf601  # reuse
    cpp_fused_add_convolution_backward_87(c_void_p(buf616.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf617 = aten.convolution_backward(buf616, relu_56, primals_171, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_171
    buf618 = buf617[0]
    buf623 = buf609; del buf609  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_88(c_void_p(relu_56.data_ptr()), c_void_p(buf618.data_ptr()), c_void_p(primals_534.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(buf623.data_ptr()))
    del primals_169
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf624 = aten.convolution_backward(buf623, relu_55, primals_168, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_168
    buf625 = buf624[0]
    buf330 = buf616; del buf616  # reuse
    buf380 = buf330; del buf330  # reuse
    buf428 = buf380; del buf380  # reuse
    buf474 = buf428; del buf428  # reuse
    buf518 = buf474; del buf474  # reuse
    buf560 = buf518; del buf518  # reuse
    buf600 = buf560; del buf560  # reuse
    buf638 = buf600; del buf600  # reuse
    cpp_fused_add_89(c_void_p(buf638.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf639 = aten.convolution_backward(buf638, relu_54, primals_165, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_165
    buf640 = buf639[0]
    buf645 = buf623; del buf623  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_90(c_void_p(relu_54.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(primals_528.data_ptr()), c_void_p(primals_163.data_ptr()), c_void_p(buf645.data_ptr()))
    del primals_163
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf646 = aten.convolution_backward(buf645, relu_53, primals_162, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_162
    buf647 = buf646[0]
    buf329 = buf638; del buf638  # reuse
    buf379 = buf329; del buf329  # reuse
    buf427 = buf379; del buf379  # reuse
    buf473 = buf427; del buf427  # reuse
    buf517 = buf473; del buf473  # reuse
    buf559 = buf517; del buf517  # reuse
    buf599 = buf559; del buf559  # reuse
    buf637 = buf599; del buf599  # reuse
    buf652 = buf637; del buf637  # reuse
    cpp_fused_add_convolution_backward_91(c_void_p(buf652.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf653 = aten.convolution_backward(buf652, relu_52, primals_159, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_159
    buf654 = buf653[0]
    buf659 = buf645; del buf645  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_92(c_void_p(relu_52.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(primals_522.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(buf659.data_ptr()))
    del primals_157
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf660 = aten.convolution_backward(buf659, relu_51, primals_156, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_156
    buf661 = buf660[0]
    buf328 = buf652; del buf652  # reuse
    buf378 = buf328; del buf328  # reuse
    buf426 = buf378; del buf378  # reuse
    buf472 = buf426; del buf426  # reuse
    buf516 = buf472; del buf472  # reuse
    buf558 = buf516; del buf516  # reuse
    buf598 = buf558; del buf558  # reuse
    buf636 = buf598; del buf598  # reuse
    buf672 = buf636; del buf636  # reuse
    cpp_fused_add_93(c_void_p(buf672.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf673 = aten.convolution_backward(buf672, relu_50, primals_153, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_153
    buf674 = buf673[0]
    buf679 = buf659; del buf659  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_94(c_void_p(relu_50.data_ptr()), c_void_p(buf674.data_ptr()), c_void_p(primals_516.data_ptr()), c_void_p(primals_151.data_ptr()), c_void_p(buf679.data_ptr()))
    del primals_151
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf680 = aten.convolution_backward(buf679, relu_49, primals_150, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_150
    buf681 = buf680[0]
    buf327 = buf672; del buf672  # reuse
    buf377 = buf327; del buf327  # reuse
    buf425 = buf377; del buf377  # reuse
    buf471 = buf425; del buf425  # reuse
    buf515 = buf471; del buf471  # reuse
    buf557 = buf515; del buf515  # reuse
    buf597 = buf557; del buf557  # reuse
    buf635 = buf597; del buf597  # reuse
    buf671 = buf635; del buf635  # reuse
    buf686 = buf671; del buf671  # reuse
    cpp_fused_add_convolution_backward_95(c_void_p(buf686.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf687 = aten.convolution_backward(buf686, relu_48, primals_147, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_147
    buf688 = buf687[0]
    buf693 = buf679; del buf679  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_96(c_void_p(relu_48.data_ptr()), c_void_p(buf688.data_ptr()), c_void_p(primals_510.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(buf693.data_ptr()))
    del primals_145
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf694 = aten.convolution_backward(buf693, relu_47, primals_144, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_144
    buf695 = buf694[0]
    buf326 = buf686; del buf686  # reuse
    buf376 = buf326; del buf326  # reuse
    buf424 = buf376; del buf376  # reuse
    buf470 = buf424; del buf424  # reuse
    buf514 = buf470; del buf470  # reuse
    buf556 = buf514; del buf514  # reuse
    buf596 = buf556; del buf556  # reuse
    buf634 = buf596; del buf596  # reuse
    buf670 = buf634; del buf634  # reuse
    buf704 = buf670; del buf670  # reuse
    cpp_fused_add_97(c_void_p(buf704.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_142.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf705 = aten.convolution_backward(buf704, relu_46, primals_141, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_141
    buf706 = buf705[0]
    buf711 = buf693; del buf693  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_98(c_void_p(relu_46.data_ptr()), c_void_p(buf706.data_ptr()), c_void_p(primals_504.data_ptr()), c_void_p(primals_139.data_ptr()), c_void_p(buf711.data_ptr()))
    del primals_139
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf712 = aten.convolution_backward(buf711, relu_45, primals_138, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_138
    buf713 = buf712[0]
    buf325 = buf704; del buf704  # reuse
    buf375 = buf325; del buf325  # reuse
    buf423 = buf375; del buf375  # reuse
    buf469 = buf423; del buf423  # reuse
    buf513 = buf469; del buf469  # reuse
    buf555 = buf513; del buf513  # reuse
    buf595 = buf555; del buf555  # reuse
    buf633 = buf595; del buf595  # reuse
    buf669 = buf633; del buf633  # reuse
    buf703 = buf669; del buf669  # reuse
    buf718 = buf703; del buf703  # reuse
    cpp_fused_add_convolution_backward_99(c_void_p(buf718.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(relu_45.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_136.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf719 = aten.convolution_backward(buf718, relu_44, primals_135, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_135
    buf720 = buf719[0]
    buf725 = buf711; del buf711  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_100(c_void_p(relu_44.data_ptr()), c_void_p(buf720.data_ptr()), c_void_p(primals_498.data_ptr()), c_void_p(primals_133.data_ptr()), c_void_p(buf725.data_ptr()))
    del primals_133
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf726 = aten.convolution_backward(buf725, relu_43, primals_132, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_132
    buf727 = buf726[0]
    buf324 = buf718; del buf718  # reuse
    buf374 = buf324; del buf324  # reuse
    buf422 = buf374; del buf374  # reuse
    buf468 = buf422; del buf422  # reuse
    buf512 = buf468; del buf468  # reuse
    buf554 = buf512; del buf512  # reuse
    buf594 = buf554; del buf554  # reuse
    buf632 = buf594; del buf594  # reuse
    buf668 = buf632; del buf632  # reuse
    buf702 = buf668; del buf668  # reuse
    buf734 = buf702; del buf702  # reuse
    cpp_fused_add_101(c_void_p(buf734.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(relu_45.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(relu_43.data_ptr()), c_void_p(buf727.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(primals_130.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf735 = aten.convolution_backward(buf734, relu_42, primals_129, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_129
    buf736 = buf735[0]
    buf741 = buf725; del buf725  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_102(c_void_p(relu_42.data_ptr()), c_void_p(buf736.data_ptr()), c_void_p(primals_492.data_ptr()), c_void_p(primals_127.data_ptr()), c_void_p(buf741.data_ptr()))
    del primals_127
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf742 = aten.convolution_backward(buf741, relu_41, primals_126, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_126
    buf743 = buf742[0]
    buf323 = buf734; del buf734  # reuse
    buf373 = buf323; del buf323  # reuse
    buf421 = buf373; del buf373  # reuse
    buf467 = buf421; del buf421  # reuse
    buf511 = buf467; del buf467  # reuse
    buf553 = buf511; del buf511  # reuse
    buf593 = buf553; del buf553  # reuse
    buf631 = buf593; del buf593  # reuse
    buf667 = buf631; del buf631  # reuse
    buf701 = buf667; del buf667  # reuse
    buf733 = buf701; del buf701  # reuse
    buf748 = buf733; del buf733  # reuse
    cpp_fused_add_convolution_backward_103(c_void_p(buf748.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(relu_45.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(relu_43.data_ptr()), c_void_p(buf727.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(relu_41.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(primals_489.data_ptr()), c_void_p(primals_124.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf749 = aten.convolution_backward(buf748, relu_40, primals_123, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf748
    del primals_123
    buf750 = buf749[0]
    buf755 = buf741; del buf741  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_104(c_void_p(relu_40.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(primals_486.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(buf755.data_ptr()))
    del primals_121
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf756 = aten.convolution_backward(buf755, relu_39, primals_120, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf755
    del primals_120
    buf757 = buf756[0]
    buf322 = empty_strided((4, 256, 14, 14), (50176, 1, 3584, 256), device='cpu', dtype=torch.float32)
    buf372 = buf322; del buf322  # reuse
    buf420 = buf372; del buf372  # reuse
    buf466 = buf420; del buf420  # reuse
    buf510 = buf466; del buf466  # reuse
    buf552 = buf510; del buf510  # reuse
    buf592 = buf552; del buf552  # reuse
    buf630 = buf592; del buf592  # reuse
    buf666 = buf630; del buf630  # reuse
    buf700 = buf666; del buf666  # reuse
    buf732 = buf700; del buf700  # reuse
    buf762 = buf732; del buf732  # reuse
    cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_105(c_void_p(buf762.data_ptr()), c_void_p(relu_87.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(relu_85.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(relu_83.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(relu_45.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(relu_43.data_ptr()), c_void_p(buf727.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(relu_41.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(primals_489.data_ptr()), c_void_p(primals_124.data_ptr()), c_void_p(relu_39.data_ptr()), c_void_p(buf757.data_ptr()), c_void_p(primals_483.data_ptr()), c_void_p(primals_118.data_ptr()))
    del buf303
    del buf317
    del primals_118
    del primals_124
    del primals_130
    del primals_136
    del primals_142
    del primals_148
    del primals_154
    del primals_160
    del primals_166
    del primals_172
    del primals_178
    del primals_184
    del primals_190
    del primals_196
    del primals_202
    del primals_208
    del primals_214
    del primals_220
    del primals_226
    del primals_232
    del primals_238
    del primals_244
    del primals_250
    del primals_256
    del primals_262
    del primals_615
    del primals_621
    del primals_627
    del relu_83
    del relu_85
    del relu_87
    buf347 = buf345[1]
    del buf345
    buf348 = empty((128, ), device='cpu', dtype=torch.float32)
    buf349 = empty((128, ), device='cpu', dtype=torch.float32)
    buf350 = buf349; del buf349  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_106(c_void_p(buf350.data_ptr()), c_void_p(relu_82.data_ptr()), c_void_p(buf346.data_ptr()), c_void_p(convolution_81.data_ptr()), c_void_p(primals_611.data_ptr()), c_void_p(primals_612.data_ptr()), c_void_p(buf348.data_ptr()))
    del buf346
    del convolution_81
    del primals_611
    del primals_612
    del relu_82
    buf354 = buf352[1]
    del buf352
    buf355 = empty((928, ), device='cpu', dtype=torch.float32)
    buf356 = empty((928, ), device='cpu', dtype=torch.float32)
    buf357 = buf356; del buf356  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_107(c_void_p(buf357.data_ptr()), c_void_p(relu_81.data_ptr()), c_void_p(buf353.data_ptr()), c_void_p(cat_38.data_ptr()), c_void_p(primals_608.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(buf355.data_ptr()))
    del buf353
    del cat_38
    del primals_608
    del primals_609
    del relu_81
    buf361 = buf359[1]
    del buf359
    buf362 = empty((128, ), device='cpu', dtype=torch.float32)
    buf363 = empty((128, ), device='cpu', dtype=torch.float32)
    buf364 = buf363; del buf363  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_108(c_void_p(buf364.data_ptr()), c_void_p(relu_80.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(convolution_79.data_ptr()), c_void_p(primals_605.data_ptr()), c_void_p(primals_606.data_ptr()), c_void_p(buf362.data_ptr()))
    del buf360
    del convolution_79
    del primals_605
    del primals_606
    del relu_80
    buf368 = buf366[1]
    del buf366
    buf369 = empty((896, ), device='cpu', dtype=torch.float32)
    buf370 = empty((896, ), device='cpu', dtype=torch.float32)
    buf371 = buf370; del buf370  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_109(c_void_p(buf371.data_ptr()), c_void_p(relu_79.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(cat_37.data_ptr()), c_void_p(primals_602.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(buf369.data_ptr()))
    del buf367
    del cat_37
    del primals_602
    del primals_603
    del relu_79
    buf395 = buf393[1]
    del buf393
    buf396 = empty((128, ), device='cpu', dtype=torch.float32)
    buf397 = empty((128, ), device='cpu', dtype=torch.float32)
    buf398 = buf397; del buf397  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_110(c_void_p(buf398.data_ptr()), c_void_p(relu_78.data_ptr()), c_void_p(buf394.data_ptr()), c_void_p(convolution_77.data_ptr()), c_void_p(primals_599.data_ptr()), c_void_p(primals_600.data_ptr()), c_void_p(buf396.data_ptr()))
    del buf394
    del convolution_77
    del primals_599
    del primals_600
    del relu_78
    buf402 = buf400[1]
    del buf400
    buf403 = empty((864, ), device='cpu', dtype=torch.float32)
    buf404 = empty((864, ), device='cpu', dtype=torch.float32)
    buf405 = buf404; del buf404  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_111(c_void_p(buf405.data_ptr()), c_void_p(relu_77.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(cat_36.data_ptr()), c_void_p(primals_596.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(buf403.data_ptr()))
    del buf401
    del cat_36
    del primals_596
    del primals_597
    del relu_77
    buf409 = buf407[1]
    del buf407
    buf410 = empty((128, ), device='cpu', dtype=torch.float32)
    buf411 = empty((128, ), device='cpu', dtype=torch.float32)
    buf412 = buf411; del buf411  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_112(c_void_p(buf412.data_ptr()), c_void_p(relu_76.data_ptr()), c_void_p(buf408.data_ptr()), c_void_p(convolution_75.data_ptr()), c_void_p(primals_593.data_ptr()), c_void_p(primals_594.data_ptr()), c_void_p(buf410.data_ptr()))
    del buf408
    del convolution_75
    del primals_593
    del primals_594
    del relu_76
    buf416 = buf414[1]
    del buf414
    buf417 = empty((832, ), device='cpu', dtype=torch.float32)
    buf418 = empty((832, ), device='cpu', dtype=torch.float32)
    buf419 = buf418; del buf418  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_113(c_void_p(buf419.data_ptr()), c_void_p(relu_75.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(cat_35.data_ptr()), c_void_p(primals_590.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(buf417.data_ptr()))
    del buf415
    del cat_35
    del primals_590
    del primals_591
    del relu_75
    buf441 = buf439[1]
    del buf439
    buf442 = empty((128, ), device='cpu', dtype=torch.float32)
    buf443 = empty((128, ), device='cpu', dtype=torch.float32)
    buf444 = buf443; del buf443  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_114(c_void_p(buf444.data_ptr()), c_void_p(relu_74.data_ptr()), c_void_p(buf440.data_ptr()), c_void_p(convolution_73.data_ptr()), c_void_p(primals_587.data_ptr()), c_void_p(primals_588.data_ptr()), c_void_p(buf442.data_ptr()))
    del buf440
    del convolution_73
    del primals_587
    del primals_588
    del relu_74
    buf448 = buf446[1]
    del buf446
    buf449 = empty((800, ), device='cpu', dtype=torch.float32)
    buf450 = empty((800, ), device='cpu', dtype=torch.float32)
    buf451 = buf450; del buf450  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_115(c_void_p(buf451.data_ptr()), c_void_p(relu_73.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(cat_34.data_ptr()), c_void_p(primals_584.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(buf449.data_ptr()))
    del buf447
    del cat_34
    del primals_584
    del primals_585
    del relu_73
    buf455 = buf453[1]
    del buf453
    buf456 = empty((128, ), device='cpu', dtype=torch.float32)
    buf457 = empty((128, ), device='cpu', dtype=torch.float32)
    buf458 = buf457; del buf457  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_116(c_void_p(buf458.data_ptr()), c_void_p(relu_72.data_ptr()), c_void_p(buf454.data_ptr()), c_void_p(convolution_71.data_ptr()), c_void_p(primals_581.data_ptr()), c_void_p(primals_582.data_ptr()), c_void_p(buf456.data_ptr()))
    del buf454
    del convolution_71
    del primals_581
    del primals_582
    del relu_72
    buf462 = buf460[1]
    del buf460
    buf463 = empty((768, ), device='cpu', dtype=torch.float32)
    buf464 = empty((768, ), device='cpu', dtype=torch.float32)
    buf465 = buf464; del buf464  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_117(c_void_p(buf465.data_ptr()), c_void_p(relu_71.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(cat_33.data_ptr()), c_void_p(primals_578.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(buf463.data_ptr()))
    del buf461
    del cat_33
    del primals_578
    del primals_579
    del relu_71
    buf485 = buf483[1]
    del buf483
    buf486 = empty((128, ), device='cpu', dtype=torch.float32)
    buf487 = empty((128, ), device='cpu', dtype=torch.float32)
    buf488 = buf487; del buf487  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_118(c_void_p(buf488.data_ptr()), c_void_p(relu_70.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(convolution_69.data_ptr()), c_void_p(primals_575.data_ptr()), c_void_p(primals_576.data_ptr()), c_void_p(buf486.data_ptr()))
    del buf484
    del convolution_69
    del primals_575
    del primals_576
    del relu_70
    buf492 = buf490[1]
    del buf490
    buf493 = empty((736, ), device='cpu', dtype=torch.float32)
    buf494 = empty((736, ), device='cpu', dtype=torch.float32)
    buf495 = buf494; del buf494  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_119(c_void_p(buf495.data_ptr()), c_void_p(relu_69.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(cat_32.data_ptr()), c_void_p(primals_572.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(buf493.data_ptr()))
    del buf491
    del cat_32
    del primals_572
    del primals_573
    del relu_69
    buf499 = buf497[1]
    del buf497
    buf500 = empty((128, ), device='cpu', dtype=torch.float32)
    buf501 = empty((128, ), device='cpu', dtype=torch.float32)
    buf502 = buf501; del buf501  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_120(c_void_p(buf502.data_ptr()), c_void_p(relu_68.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(convolution_67.data_ptr()), c_void_p(primals_569.data_ptr()), c_void_p(primals_570.data_ptr()), c_void_p(buf500.data_ptr()))
    del buf498
    del convolution_67
    del primals_569
    del primals_570
    del relu_68
    buf506 = buf504[1]
    del buf504
    buf507 = empty((704, ), device='cpu', dtype=torch.float32)
    buf508 = empty((704, ), device='cpu', dtype=torch.float32)
    buf509 = buf508; del buf508  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_121(c_void_p(buf509.data_ptr()), c_void_p(relu_67.data_ptr()), c_void_p(buf505.data_ptr()), c_void_p(cat_31.data_ptr()), c_void_p(primals_566.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(buf507.data_ptr()))
    del buf505
    del cat_31
    del primals_566
    del primals_567
    del relu_67
    buf527 = buf525[1]
    del buf525
    buf528 = empty((128, ), device='cpu', dtype=torch.float32)
    buf529 = empty((128, ), device='cpu', dtype=torch.float32)
    buf530 = buf529; del buf529  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_122(c_void_p(buf530.data_ptr()), c_void_p(relu_66.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(convolution_65.data_ptr()), c_void_p(primals_563.data_ptr()), c_void_p(primals_564.data_ptr()), c_void_p(buf528.data_ptr()))
    del buf526
    del convolution_65
    del primals_563
    del primals_564
    del relu_66
    buf534 = buf532[1]
    del buf532
    buf535 = empty((672, ), device='cpu', dtype=torch.float32)
    buf536 = empty((672, ), device='cpu', dtype=torch.float32)
    buf537 = buf536; del buf536  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_123(c_void_p(buf537.data_ptr()), c_void_p(relu_65.data_ptr()), c_void_p(buf533.data_ptr()), c_void_p(cat_30.data_ptr()), c_void_p(primals_560.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(buf535.data_ptr()))
    del buf533
    del cat_30
    del primals_560
    del primals_561
    del relu_65
    buf541 = buf539[1]
    del buf539
    buf542 = empty((128, ), device='cpu', dtype=torch.float32)
    buf543 = empty((128, ), device='cpu', dtype=torch.float32)
    buf544 = buf543; del buf543  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_124(c_void_p(buf544.data_ptr()), c_void_p(relu_64.data_ptr()), c_void_p(buf540.data_ptr()), c_void_p(convolution_63.data_ptr()), c_void_p(primals_557.data_ptr()), c_void_p(primals_558.data_ptr()), c_void_p(buf542.data_ptr()))
    del buf540
    del convolution_63
    del primals_557
    del primals_558
    del relu_64
    buf548 = buf546[1]
    del buf546
    buf549 = empty((640, ), device='cpu', dtype=torch.float32)
    buf550 = empty((640, ), device='cpu', dtype=torch.float32)
    buf551 = buf550; del buf550  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_125(c_void_p(buf551.data_ptr()), c_void_p(relu_63.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(cat_29.data_ptr()), c_void_p(primals_554.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(buf549.data_ptr()))
    del buf547
    del cat_29
    del primals_554
    del primals_555
    del relu_63
    buf567 = buf565[1]
    del buf565
    buf568 = empty((128, ), device='cpu', dtype=torch.float32)
    buf569 = empty((128, ), device='cpu', dtype=torch.float32)
    buf570 = buf569; del buf569  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_126(c_void_p(buf570.data_ptr()), c_void_p(relu_62.data_ptr()), c_void_p(buf566.data_ptr()), c_void_p(convolution_61.data_ptr()), c_void_p(primals_551.data_ptr()), c_void_p(primals_552.data_ptr()), c_void_p(buf568.data_ptr()))
    del buf566
    del convolution_61
    del primals_551
    del primals_552
    del relu_62
    buf574 = buf572[1]
    del buf572
    buf575 = empty((608, ), device='cpu', dtype=torch.float32)
    buf576 = empty((608, ), device='cpu', dtype=torch.float32)
    buf577 = buf576; del buf576  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_127(c_void_p(buf577.data_ptr()), c_void_p(relu_61.data_ptr()), c_void_p(buf573.data_ptr()), c_void_p(cat_28.data_ptr()), c_void_p(primals_548.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(buf575.data_ptr()))
    del buf573
    del cat_28
    del primals_548
    del primals_549
    del relu_61
    buf581 = buf579[1]
    del buf579
    buf582 = empty((128, ), device='cpu', dtype=torch.float32)
    buf583 = empty((128, ), device='cpu', dtype=torch.float32)
    buf584 = buf583; del buf583  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_128(c_void_p(buf584.data_ptr()), c_void_p(relu_60.data_ptr()), c_void_p(buf580.data_ptr()), c_void_p(convolution_59.data_ptr()), c_void_p(primals_545.data_ptr()), c_void_p(primals_546.data_ptr()), c_void_p(buf582.data_ptr()))
    del buf580
    del convolution_59
    del primals_545
    del primals_546
    del relu_60
    buf588 = buf586[1]
    del buf586
    buf589 = empty((576, ), device='cpu', dtype=torch.float32)
    buf590 = empty((576, ), device='cpu', dtype=torch.float32)
    buf591 = buf590; del buf590  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_129(c_void_p(buf591.data_ptr()), c_void_p(relu_59.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(cat_27.data_ptr()), c_void_p(primals_542.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(buf589.data_ptr()))
    del buf587
    del cat_27
    del primals_542
    del primals_543
    del relu_59
    buf605 = buf603[1]
    del buf603
    buf606 = empty((128, ), device='cpu', dtype=torch.float32)
    buf607 = empty((128, ), device='cpu', dtype=torch.float32)
    buf608 = buf607; del buf607  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_130(c_void_p(buf608.data_ptr()), c_void_p(relu_58.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(convolution_57.data_ptr()), c_void_p(primals_539.data_ptr()), c_void_p(primals_540.data_ptr()), c_void_p(buf606.data_ptr()))
    del buf604
    del convolution_57
    del primals_539
    del primals_540
    del relu_58
    buf612 = buf610[1]
    del buf610
    buf613 = empty((544, ), device='cpu', dtype=torch.float32)
    buf614 = empty((544, ), device='cpu', dtype=torch.float32)
    buf615 = buf614; del buf614  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_131(c_void_p(buf615.data_ptr()), c_void_p(relu_57.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(cat_26.data_ptr()), c_void_p(primals_536.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(buf613.data_ptr()))
    del buf611
    del cat_26
    del primals_536
    del primals_537
    del relu_57
    buf619 = buf617[1]
    del buf617
    buf620 = empty((128, ), device='cpu', dtype=torch.float32)
    buf621 = empty((128, ), device='cpu', dtype=torch.float32)
    buf622 = buf621; del buf621  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_132(c_void_p(buf622.data_ptr()), c_void_p(relu_56.data_ptr()), c_void_p(buf618.data_ptr()), c_void_p(convolution_55.data_ptr()), c_void_p(primals_533.data_ptr()), c_void_p(primals_534.data_ptr()), c_void_p(buf620.data_ptr()))
    del buf618
    del convolution_55
    del primals_533
    del primals_534
    del relu_56
    buf626 = buf624[1]
    del buf624
    buf627 = empty((512, ), device='cpu', dtype=torch.float32)
    buf628 = empty((512, ), device='cpu', dtype=torch.float32)
    buf629 = buf628; del buf628  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_133(c_void_p(buf629.data_ptr()), c_void_p(relu_55.data_ptr()), c_void_p(buf625.data_ptr()), c_void_p(cat_25.data_ptr()), c_void_p(primals_530.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(buf627.data_ptr()))
    del buf625
    del cat_25
    del primals_530
    del primals_531
    del relu_55
    buf641 = buf639[1]
    del buf639
    buf642 = empty((128, ), device='cpu', dtype=torch.float32)
    buf643 = empty((128, ), device='cpu', dtype=torch.float32)
    buf644 = buf643; del buf643  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_134(c_void_p(buf644.data_ptr()), c_void_p(relu_54.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(convolution_53.data_ptr()), c_void_p(primals_527.data_ptr()), c_void_p(primals_528.data_ptr()), c_void_p(buf642.data_ptr()))
    del buf640
    del convolution_53
    del primals_527
    del primals_528
    del relu_54
    buf648 = buf646[1]
    del buf646
    buf649 = empty((480, ), device='cpu', dtype=torch.float32)
    buf650 = empty((480, ), device='cpu', dtype=torch.float32)
    buf651 = buf650; del buf650  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_135(c_void_p(buf651.data_ptr()), c_void_p(relu_53.data_ptr()), c_void_p(buf647.data_ptr()), c_void_p(cat_24.data_ptr()), c_void_p(primals_524.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(buf649.data_ptr()))
    del buf647
    del cat_24
    del primals_524
    del primals_525
    del relu_53
    buf655 = buf653[1]
    del buf653
    buf656 = empty((128, ), device='cpu', dtype=torch.float32)
    buf657 = empty((128, ), device='cpu', dtype=torch.float32)
    buf658 = buf657; del buf657  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_136(c_void_p(buf658.data_ptr()), c_void_p(relu_52.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(convolution_51.data_ptr()), c_void_p(primals_521.data_ptr()), c_void_p(primals_522.data_ptr()), c_void_p(buf656.data_ptr()))
    del buf654
    del convolution_51
    del primals_521
    del primals_522
    del relu_52
    buf662 = buf660[1]
    del buf660
    buf663 = empty((448, ), device='cpu', dtype=torch.float32)
    buf664 = empty((448, ), device='cpu', dtype=torch.float32)
    buf665 = buf664; del buf664  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_137(c_void_p(buf665.data_ptr()), c_void_p(relu_51.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(cat_23.data_ptr()), c_void_p(primals_518.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(buf663.data_ptr()))
    del buf661
    del cat_23
    del primals_518
    del primals_519
    del relu_51
    buf675 = buf673[1]
    del buf673
    buf676 = empty((128, ), device='cpu', dtype=torch.float32)
    buf677 = empty((128, ), device='cpu', dtype=torch.float32)
    buf678 = buf677; del buf677  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_138(c_void_p(buf678.data_ptr()), c_void_p(relu_50.data_ptr()), c_void_p(buf674.data_ptr()), c_void_p(convolution_49.data_ptr()), c_void_p(primals_515.data_ptr()), c_void_p(primals_516.data_ptr()), c_void_p(buf676.data_ptr()))
    del buf674
    del convolution_49
    del primals_515
    del primals_516
    del relu_50
    buf682 = buf680[1]
    del buf680
    buf683 = empty((416, ), device='cpu', dtype=torch.float32)
    buf684 = empty((416, ), device='cpu', dtype=torch.float32)
    buf685 = buf684; del buf684  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_139(c_void_p(buf685.data_ptr()), c_void_p(relu_49.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(cat_22.data_ptr()), c_void_p(primals_512.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(buf683.data_ptr()))
    del buf681
    del cat_22
    del primals_512
    del primals_513
    del relu_49
    buf689 = buf687[1]
    del buf687
    buf690 = empty((128, ), device='cpu', dtype=torch.float32)
    buf691 = empty((128, ), device='cpu', dtype=torch.float32)
    buf692 = buf691; del buf691  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_140(c_void_p(buf692.data_ptr()), c_void_p(relu_48.data_ptr()), c_void_p(buf688.data_ptr()), c_void_p(convolution_47.data_ptr()), c_void_p(primals_509.data_ptr()), c_void_p(primals_510.data_ptr()), c_void_p(buf690.data_ptr()))
    del buf688
    del convolution_47
    del primals_509
    del primals_510
    del relu_48
    buf696 = buf694[1]
    del buf694
    buf697 = empty((384, ), device='cpu', dtype=torch.float32)
    buf698 = empty((384, ), device='cpu', dtype=torch.float32)
    buf699 = buf698; del buf698  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_141(c_void_p(buf699.data_ptr()), c_void_p(relu_47.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(cat_21.data_ptr()), c_void_p(primals_506.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(buf697.data_ptr()))
    del buf695
    del cat_21
    del primals_506
    del primals_507
    del relu_47
    buf707 = buf705[1]
    del buf705
    buf708 = empty((128, ), device='cpu', dtype=torch.float32)
    buf709 = empty((128, ), device='cpu', dtype=torch.float32)
    buf710 = buf709; del buf709  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_142(c_void_p(buf710.data_ptr()), c_void_p(relu_46.data_ptr()), c_void_p(buf706.data_ptr()), c_void_p(convolution_45.data_ptr()), c_void_p(primals_503.data_ptr()), c_void_p(primals_504.data_ptr()), c_void_p(buf708.data_ptr()))
    del buf706
    del convolution_45
    del primals_503
    del primals_504
    del relu_46
    buf714 = buf712[1]
    del buf712
    buf715 = empty((352, ), device='cpu', dtype=torch.float32)
    buf716 = empty((352, ), device='cpu', dtype=torch.float32)
    buf717 = buf716; del buf716  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_143(c_void_p(buf717.data_ptr()), c_void_p(relu_45.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(cat_20.data_ptr()), c_void_p(primals_500.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(buf715.data_ptr()))
    del buf713
    del cat_20
    del primals_500
    del primals_501
    del relu_45
    buf721 = buf719[1]
    del buf719
    buf722 = empty((128, ), device='cpu', dtype=torch.float32)
    buf723 = empty((128, ), device='cpu', dtype=torch.float32)
    buf724 = buf723; del buf723  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_144(c_void_p(buf724.data_ptr()), c_void_p(relu_44.data_ptr()), c_void_p(buf720.data_ptr()), c_void_p(convolution_43.data_ptr()), c_void_p(primals_497.data_ptr()), c_void_p(primals_498.data_ptr()), c_void_p(buf722.data_ptr()))
    del buf720
    del convolution_43
    del primals_497
    del primals_498
    del relu_44
    buf728 = buf726[1]
    del buf726
    buf729 = empty((320, ), device='cpu', dtype=torch.float32)
    buf730 = empty((320, ), device='cpu', dtype=torch.float32)
    buf731 = buf730; del buf730  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_145(c_void_p(buf731.data_ptr()), c_void_p(relu_43.data_ptr()), c_void_p(buf727.data_ptr()), c_void_p(cat_19.data_ptr()), c_void_p(primals_494.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(buf729.data_ptr()))
    del buf727
    del cat_19
    del primals_494
    del primals_495
    del relu_43
    buf737 = buf735[1]
    del buf735
    buf738 = empty((128, ), device='cpu', dtype=torch.float32)
    buf739 = empty((128, ), device='cpu', dtype=torch.float32)
    buf740 = buf739; del buf739  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_146(c_void_p(buf740.data_ptr()), c_void_p(relu_42.data_ptr()), c_void_p(buf736.data_ptr()), c_void_p(convolution_41.data_ptr()), c_void_p(primals_491.data_ptr()), c_void_p(primals_492.data_ptr()), c_void_p(buf738.data_ptr()))
    del buf736
    del convolution_41
    del primals_491
    del primals_492
    del relu_42
    buf744 = buf742[1]
    del buf742
    buf745 = empty((288, ), device='cpu', dtype=torch.float32)
    buf746 = empty((288, ), device='cpu', dtype=torch.float32)
    buf747 = buf746; del buf746  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_147(c_void_p(buf747.data_ptr()), c_void_p(relu_41.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(cat_18.data_ptr()), c_void_p(primals_488.data_ptr()), c_void_p(primals_489.data_ptr()), c_void_p(buf745.data_ptr()))
    del buf743
    del cat_18
    del primals_488
    del primals_489
    del relu_41
    buf751 = buf749[1]
    del buf749
    buf752 = empty((128, ), device='cpu', dtype=torch.float32)
    buf753 = empty((128, ), device='cpu', dtype=torch.float32)
    buf754 = buf753; del buf753  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_148(c_void_p(buf754.data_ptr()), c_void_p(relu_40.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(convolution_39.data_ptr()), c_void_p(primals_485.data_ptr()), c_void_p(primals_486.data_ptr()), c_void_p(buf752.data_ptr()))
    del convolution_39
    del primals_485
    del primals_486
    del relu_40
    buf758 = buf756[1]
    del buf756
    buf759 = empty((256, ), device='cpu', dtype=torch.float32)
    buf760 = empty((256, ), device='cpu', dtype=torch.float32)
    buf761 = buf760; del buf760  # reuse
    buf763 = reinterpret_tensor(buf289, (4, 256, 28, 28), (200704, 1, 7168, 256), 0); del buf289  # reuse
    cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_149(c_void_p(buf761.data_ptr()), c_void_p(relu_39.data_ptr()), c_void_p(buf757.data_ptr()), c_void_p(avg_pool2d_1.data_ptr()), c_void_p(primals_482.data_ptr()), c_void_p(primals_483.data_ptr()), c_void_p(buf762.data_ptr()), c_void_p(buf759.data_ptr()), c_void_p(buf763.data_ptr()))
    del avg_pool2d_1
    del buf757
    del buf762
    del primals_482
    del primals_483
    del relu_39
    # Source Nodes: [], Original ATen: [aten.avg_pool2d_backward, aten.convolution_backward]
    buf764 = aten.convolution_backward(buf763, relu_38, primals_117, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf763
    del primals_117
    buf765 = buf764[0]
    buf766 = buf764[1]
    del buf764
    buf767 = empty((512, ), device='cpu', dtype=torch.float32)
    buf768 = empty((512, ), device='cpu', dtype=torch.float32)
    buf769 = buf768; del buf768  # reuse
    buf770 = reinterpret_tensor(buf750, (4, 32, 28, 28), (25088, 1, 896, 32), 0); del buf750  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_150(c_void_p(buf769.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(cat_17.data_ptr()), c_void_p(primals_479.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(buf767.data_ptr()), c_void_p(buf770.data_ptr()))
    del cat_17
    del primals_479
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf771 = aten.convolution_backward(buf770, relu_37, primals_114, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_114
    buf772 = buf771[0]
    buf773 = buf771[1]
    del buf771
    buf774 = empty((128, ), device='cpu', dtype=torch.float32)
    buf775 = empty((128, ), device='cpu', dtype=torch.float32)
    buf776 = buf775; del buf775  # reuse
    buf777 = buf772; del buf772  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_151(c_void_p(buf776.data_ptr()), c_void_p(buf777.data_ptr()), c_void_p(relu_37.data_ptr()), c_void_p(convolution_36.data_ptr()), c_void_p(primals_476.data_ptr()), c_void_p(primals_477.data_ptr()), c_void_p(primals_112.data_ptr()), c_void_p(buf774.data_ptr()))
    del convolution_36
    del primals_112
    del primals_476
    del primals_477
    del relu_37
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf778 = aten.convolution_backward(buf777, relu_36, primals_111, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf777
    del primals_111
    buf779 = buf778[0]
    buf780 = buf778[1]
    del buf778
    buf781 = empty((480, ), device='cpu', dtype=torch.float32)
    buf782 = empty((480, ), device='cpu', dtype=torch.float32)
    buf783 = buf782; del buf782  # reuse
    buf784 = buf770; del buf770  # reuse
    cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_152(c_void_p(buf783.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(cat_16.data_ptr()), c_void_p(primals_473.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(buf781.data_ptr()), c_void_p(buf784.data_ptr()))
    del cat_16
    del primals_473
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf785 = aten.convolution_backward(buf784, relu_35, primals_108, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_108
    buf786 = buf785[0]
    buf787 = buf785[1]
    del buf785
    buf788 = empty((128, ), device='cpu', dtype=torch.float32)
    buf789 = empty((128, ), device='cpu', dtype=torch.float32)
    buf790 = buf789; del buf789  # reuse
    buf791 = buf786; del buf786  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_153(c_void_p(buf790.data_ptr()), c_void_p(buf791.data_ptr()), c_void_p(relu_35.data_ptr()), c_void_p(convolution_34.data_ptr()), c_void_p(primals_470.data_ptr()), c_void_p(primals_471.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(buf788.data_ptr()))
    del convolution_34
    del primals_106
    del primals_470
    del primals_471
    del relu_35
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf792 = aten.convolution_backward(buf791, relu_34, primals_105, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_105
    buf793 = buf792[0]
    buf794 = buf792[1]
    del buf792
    buf795 = empty((448, ), device='cpu', dtype=torch.float32)
    buf796 = empty((448, ), device='cpu', dtype=torch.float32)
    buf797 = buf796; del buf796  # reuse
    buf808 = buf784; del buf784  # reuse
    cpp_fused_add_native_batch_norm_backward_threshold_backward_154(c_void_p(buf797.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(cat_15.data_ptr()), c_void_p(primals_467.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(buf808.data_ptr()))
    del cat_15
    del primals_467
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf809 = aten.convolution_backward(buf808, relu_33, primals_102, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_102
    buf810 = buf809[0]
    buf815 = buf791; del buf791  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_155(c_void_p(relu_33.data_ptr()), c_void_p(buf810.data_ptr()), c_void_p(primals_465.data_ptr()), c_void_p(primals_100.data_ptr()), c_void_p(buf815.data_ptr()))
    del primals_100
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf816 = aten.convolution_backward(buf815, relu_32, primals_99, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_99
    buf817 = buf816[0]
    buf807 = buf808; del buf808  # reuse
    buf822 = buf807; del buf807  # reuse
    cpp_fused_add_convolution_backward_156(c_void_p(buf822.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf823 = aten.convolution_backward(buf822, relu_31, primals_96, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_96
    buf824 = buf823[0]
    buf829 = buf815; del buf815  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_157(c_void_p(relu_31.data_ptr()), c_void_p(buf824.data_ptr()), c_void_p(primals_459.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(buf829.data_ptr()))
    del primals_94
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf830 = aten.convolution_backward(buf829, relu_30, primals_93, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_93
    buf831 = buf830[0]
    buf806 = buf822; del buf822  # reuse
    buf844 = buf806; del buf806  # reuse
    cpp_fused_add_158(c_void_p(buf844.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf845 = aten.convolution_backward(buf844, relu_29, primals_90, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_90
    buf846 = buf845[0]
    buf851 = buf829; del buf829  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_159(c_void_p(relu_29.data_ptr()), c_void_p(buf846.data_ptr()), c_void_p(primals_453.data_ptr()), c_void_p(primals_88.data_ptr()), c_void_p(buf851.data_ptr()))
    del primals_88
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf852 = aten.convolution_backward(buf851, relu_28, primals_87, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_87
    buf853 = buf852[0]
    buf805 = buf844; del buf844  # reuse
    buf843 = buf805; del buf805  # reuse
    buf858 = buf843; del buf843  # reuse
    cpp_fused_add_convolution_backward_160(c_void_p(buf858.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf859 = aten.convolution_backward(buf858, relu_27, primals_84, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_84
    buf860 = buf859[0]
    buf865 = buf851; del buf851  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_161(c_void_p(relu_27.data_ptr()), c_void_p(buf860.data_ptr()), c_void_p(primals_447.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(buf865.data_ptr()))
    del primals_82
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf866 = aten.convolution_backward(buf865, relu_26, primals_81, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_81
    buf867 = buf866[0]
    buf804 = buf858; del buf858  # reuse
    buf842 = buf804; del buf804  # reuse
    buf878 = buf842; del buf842  # reuse
    cpp_fused_add_162(c_void_p(buf878.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf879 = aten.convolution_backward(buf878, relu_25, primals_78, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_78
    buf880 = buf879[0]
    buf885 = buf865; del buf865  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_163(c_void_p(relu_25.data_ptr()), c_void_p(buf880.data_ptr()), c_void_p(primals_441.data_ptr()), c_void_p(primals_76.data_ptr()), c_void_p(buf885.data_ptr()))
    del primals_76
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf886 = aten.convolution_backward(buf885, relu_24, primals_75, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_75
    buf887 = buf886[0]
    buf803 = buf878; del buf878  # reuse
    buf841 = buf803; del buf803  # reuse
    buf877 = buf841; del buf841  # reuse
    buf892 = buf877; del buf877  # reuse
    cpp_fused_add_convolution_backward_164(c_void_p(buf892.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf893 = aten.convolution_backward(buf892, relu_23, primals_72, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_72
    buf894 = buf893[0]
    buf899 = buf885; del buf885  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_165(c_void_p(relu_23.data_ptr()), c_void_p(buf894.data_ptr()), c_void_p(primals_435.data_ptr()), c_void_p(primals_70.data_ptr()), c_void_p(buf899.data_ptr()))
    del primals_70
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf900 = aten.convolution_backward(buf899, relu_22, primals_69, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_69
    buf901 = buf900[0]
    buf802 = buf892; del buf892  # reuse
    buf840 = buf802; del buf802  # reuse
    buf876 = buf840; del buf840  # reuse
    buf910 = buf876; del buf876  # reuse
    cpp_fused_add_166(c_void_p(buf910.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_67.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf911 = aten.convolution_backward(buf910, relu_21, primals_66, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_66
    buf912 = buf911[0]
    buf917 = buf899; del buf899  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_167(c_void_p(relu_21.data_ptr()), c_void_p(buf912.data_ptr()), c_void_p(primals_429.data_ptr()), c_void_p(primals_64.data_ptr()), c_void_p(buf917.data_ptr()))
    del primals_64
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf918 = aten.convolution_backward(buf917, relu_20, primals_63, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_63
    buf919 = buf918[0]
    buf801 = buf910; del buf910  # reuse
    buf839 = buf801; del buf801  # reuse
    buf875 = buf839; del buf839  # reuse
    buf909 = buf875; del buf875  # reuse
    buf924 = buf909; del buf909  # reuse
    cpp_fused_add_convolution_backward_168(c_void_p(buf924.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(relu_20.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_61.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf925 = aten.convolution_backward(buf924, relu_19, primals_60, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_60
    buf926 = buf925[0]
    buf931 = buf917; del buf917  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_169(c_void_p(relu_19.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(primals_423.data_ptr()), c_void_p(primals_58.data_ptr()), c_void_p(buf931.data_ptr()))
    del primals_58
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf932 = aten.convolution_backward(buf931, relu_18, primals_57, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_57
    buf933 = buf932[0]
    buf800 = buf924; del buf924  # reuse
    buf838 = buf800; del buf800  # reuse
    buf874 = buf838; del buf838  # reuse
    buf908 = buf874; del buf874  # reuse
    buf940 = buf908; del buf908  # reuse
    cpp_fused_add_170(c_void_p(buf940.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(relu_20.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(relu_18.data_ptr()), c_void_p(buf933.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_55.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf941 = aten.convolution_backward(buf940, relu_17, primals_54, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_54
    buf942 = buf941[0]
    buf947 = buf931; del buf931  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_171(c_void_p(relu_17.data_ptr()), c_void_p(buf942.data_ptr()), c_void_p(primals_417.data_ptr()), c_void_p(primals_52.data_ptr()), c_void_p(buf947.data_ptr()))
    del primals_52
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf948 = aten.convolution_backward(buf947, relu_16, primals_51, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_51
    buf949 = buf948[0]
    buf799 = buf940; del buf940  # reuse
    buf837 = buf799; del buf799  # reuse
    buf873 = buf837; del buf837  # reuse
    buf907 = buf873; del buf873  # reuse
    buf939 = buf907; del buf907  # reuse
    buf954 = buf939; del buf939  # reuse
    cpp_fused_add_convolution_backward_172(c_void_p(buf954.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(relu_20.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(relu_18.data_ptr()), c_void_p(buf933.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_55.data_ptr()), c_void_p(relu_16.data_ptr()), c_void_p(buf949.data_ptr()), c_void_p(primals_414.data_ptr()), c_void_p(primals_49.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf955 = aten.convolution_backward(buf954, relu_15, primals_48, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf954
    del primals_48
    buf956 = buf955[0]
    buf961 = buf947; del buf947  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_173(c_void_p(relu_15.data_ptr()), c_void_p(buf956.data_ptr()), c_void_p(primals_411.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(buf961.data_ptr()))
    del primals_46
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf962 = aten.convolution_backward(buf961, relu_14, primals_45, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_45
    buf963 = buf962[0]
    buf798 = buf961; del buf961  # reuse
    buf836 = buf798; del buf798  # reuse
    buf872 = buf836; del buf836  # reuse
    buf906 = buf872; del buf872  # reuse
    buf938 = buf906; del buf906  # reuse
    buf968 = buf938; del buf938  # reuse
    cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_174(c_void_p(buf968.data_ptr()), c_void_p(relu_38.data_ptr()), c_void_p(buf765.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(relu_36.data_ptr()), c_void_p(buf779.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(relu_34.data_ptr()), c_void_p(buf793.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(relu_20.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(relu_18.data_ptr()), c_void_p(buf933.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_55.data_ptr()), c_void_p(relu_16.data_ptr()), c_void_p(buf949.data_ptr()), c_void_p(primals_414.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(relu_14.data_ptr()), c_void_p(buf963.data_ptr()), c_void_p(primals_408.data_ptr()), c_void_p(primals_43.data_ptr()))
    del buf779
    del buf793
    del primals_103
    del primals_109
    del primals_115
    del primals_43
    del primals_468
    del primals_474
    del primals_480
    del primals_49
    del primals_55
    del primals_61
    del primals_67
    del primals_73
    del primals_79
    del primals_85
    del primals_91
    del primals_97
    del relu_34
    del relu_36
    del relu_38
    buf811 = buf809[1]
    del buf809
    buf812 = empty((128, ), device='cpu', dtype=torch.float32)
    buf813 = empty((128, ), device='cpu', dtype=torch.float32)
    buf814 = buf813; del buf813  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_175(c_void_p(buf814.data_ptr()), c_void_p(relu_33.data_ptr()), c_void_p(buf810.data_ptr()), c_void_p(convolution_32.data_ptr()), c_void_p(primals_464.data_ptr()), c_void_p(primals_465.data_ptr()), c_void_p(buf812.data_ptr()))
    del buf810
    del convolution_32
    del primals_464
    del primals_465
    del relu_33
    buf818 = buf816[1]
    del buf816
    buf819 = empty((416, ), device='cpu', dtype=torch.float32)
    buf820 = empty((416, ), device='cpu', dtype=torch.float32)
    buf821 = buf820; del buf820  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_176(c_void_p(buf821.data_ptr()), c_void_p(relu_32.data_ptr()), c_void_p(buf817.data_ptr()), c_void_p(cat_14.data_ptr()), c_void_p(primals_461.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(buf819.data_ptr()))
    del buf817
    del cat_14
    del primals_461
    del primals_462
    del relu_32
    buf825 = buf823[1]
    del buf823
    buf826 = empty((128, ), device='cpu', dtype=torch.float32)
    buf827 = empty((128, ), device='cpu', dtype=torch.float32)
    buf828 = buf827; del buf827  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_177(c_void_p(buf828.data_ptr()), c_void_p(relu_31.data_ptr()), c_void_p(buf824.data_ptr()), c_void_p(convolution_30.data_ptr()), c_void_p(primals_458.data_ptr()), c_void_p(primals_459.data_ptr()), c_void_p(buf826.data_ptr()))
    del buf824
    del convolution_30
    del primals_458
    del primals_459
    del relu_31
    buf832 = buf830[1]
    del buf830
    buf833 = empty((384, ), device='cpu', dtype=torch.float32)
    buf834 = empty((384, ), device='cpu', dtype=torch.float32)
    buf835 = buf834; del buf834  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_178(c_void_p(buf835.data_ptr()), c_void_p(relu_30.data_ptr()), c_void_p(buf831.data_ptr()), c_void_p(cat_13.data_ptr()), c_void_p(primals_455.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(buf833.data_ptr()))
    del buf831
    del cat_13
    del primals_455
    del primals_456
    del relu_30
    buf847 = buf845[1]
    del buf845
    buf848 = empty((128, ), device='cpu', dtype=torch.float32)
    buf849 = empty((128, ), device='cpu', dtype=torch.float32)
    buf850 = buf849; del buf849  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_179(c_void_p(buf850.data_ptr()), c_void_p(relu_29.data_ptr()), c_void_p(buf846.data_ptr()), c_void_p(convolution_28.data_ptr()), c_void_p(primals_452.data_ptr()), c_void_p(primals_453.data_ptr()), c_void_p(buf848.data_ptr()))
    del buf846
    del convolution_28
    del primals_452
    del primals_453
    del relu_29
    buf854 = buf852[1]
    del buf852
    buf855 = empty((352, ), device='cpu', dtype=torch.float32)
    buf856 = empty((352, ), device='cpu', dtype=torch.float32)
    buf857 = buf856; del buf856  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_180(c_void_p(buf857.data_ptr()), c_void_p(relu_28.data_ptr()), c_void_p(buf853.data_ptr()), c_void_p(cat_12.data_ptr()), c_void_p(primals_449.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(buf855.data_ptr()))
    del buf853
    del cat_12
    del primals_449
    del primals_450
    del relu_28
    buf861 = buf859[1]
    del buf859
    buf862 = empty((128, ), device='cpu', dtype=torch.float32)
    buf863 = empty((128, ), device='cpu', dtype=torch.float32)
    buf864 = buf863; del buf863  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_181(c_void_p(buf864.data_ptr()), c_void_p(relu_27.data_ptr()), c_void_p(buf860.data_ptr()), c_void_p(convolution_26.data_ptr()), c_void_p(primals_446.data_ptr()), c_void_p(primals_447.data_ptr()), c_void_p(buf862.data_ptr()))
    del buf860
    del convolution_26
    del primals_446
    del primals_447
    del relu_27
    buf868 = buf866[1]
    del buf866
    buf869 = empty((320, ), device='cpu', dtype=torch.float32)
    buf870 = empty((320, ), device='cpu', dtype=torch.float32)
    buf871 = buf870; del buf870  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_182(c_void_p(buf871.data_ptr()), c_void_p(relu_26.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(cat_11.data_ptr()), c_void_p(primals_443.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(buf869.data_ptr()))
    del buf867
    del cat_11
    del primals_443
    del primals_444
    del relu_26
    buf881 = buf879[1]
    del buf879
    buf882 = empty((128, ), device='cpu', dtype=torch.float32)
    buf883 = empty((128, ), device='cpu', dtype=torch.float32)
    buf884 = buf883; del buf883  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_183(c_void_p(buf884.data_ptr()), c_void_p(relu_25.data_ptr()), c_void_p(buf880.data_ptr()), c_void_p(convolution_24.data_ptr()), c_void_p(primals_440.data_ptr()), c_void_p(primals_441.data_ptr()), c_void_p(buf882.data_ptr()))
    del buf880
    del convolution_24
    del primals_440
    del primals_441
    del relu_25
    buf888 = buf886[1]
    del buf886
    buf889 = empty((288, ), device='cpu', dtype=torch.float32)
    buf890 = empty((288, ), device='cpu', dtype=torch.float32)
    buf891 = buf890; del buf890  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_184(c_void_p(buf891.data_ptr()), c_void_p(relu_24.data_ptr()), c_void_p(buf887.data_ptr()), c_void_p(cat_10.data_ptr()), c_void_p(primals_437.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(buf889.data_ptr()))
    del buf887
    del cat_10
    del primals_437
    del primals_438
    del relu_24
    buf895 = buf893[1]
    del buf893
    buf896 = empty((128, ), device='cpu', dtype=torch.float32)
    buf897 = empty((128, ), device='cpu', dtype=torch.float32)
    buf898 = buf897; del buf897  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_185(c_void_p(buf898.data_ptr()), c_void_p(relu_23.data_ptr()), c_void_p(buf894.data_ptr()), c_void_p(convolution_22.data_ptr()), c_void_p(primals_434.data_ptr()), c_void_p(primals_435.data_ptr()), c_void_p(buf896.data_ptr()))
    del buf894
    del convolution_22
    del primals_434
    del primals_435
    del relu_23
    buf902 = buf900[1]
    del buf900
    buf903 = empty((256, ), device='cpu', dtype=torch.float32)
    buf904 = empty((256, ), device='cpu', dtype=torch.float32)
    buf905 = buf904; del buf904  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_186(c_void_p(buf905.data_ptr()), c_void_p(relu_22.data_ptr()), c_void_p(buf901.data_ptr()), c_void_p(cat_9.data_ptr()), c_void_p(primals_431.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(buf903.data_ptr()))
    del cat_9
    del primals_431
    del primals_432
    del relu_22
    buf913 = buf911[1]
    del buf911
    buf914 = empty((128, ), device='cpu', dtype=torch.float32)
    buf915 = empty((128, ), device='cpu', dtype=torch.float32)
    buf916 = buf915; del buf915  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_187(c_void_p(buf916.data_ptr()), c_void_p(relu_21.data_ptr()), c_void_p(buf912.data_ptr()), c_void_p(convolution_20.data_ptr()), c_void_p(primals_428.data_ptr()), c_void_p(primals_429.data_ptr()), c_void_p(buf914.data_ptr()))
    del buf912
    del convolution_20
    del primals_428
    del primals_429
    del relu_21
    buf920 = buf918[1]
    del buf918
    buf921 = empty((224, ), device='cpu', dtype=torch.float32)
    buf922 = empty((224, ), device='cpu', dtype=torch.float32)
    buf923 = buf922; del buf922  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_188(c_void_p(buf923.data_ptr()), c_void_p(relu_20.data_ptr()), c_void_p(buf919.data_ptr()), c_void_p(cat_8.data_ptr()), c_void_p(primals_425.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(buf921.data_ptr()))
    del buf919
    del cat_8
    del primals_425
    del primals_426
    del relu_20
    buf927 = buf925[1]
    del buf925
    buf928 = empty((128, ), device='cpu', dtype=torch.float32)
    buf929 = empty((128, ), device='cpu', dtype=torch.float32)
    buf930 = buf929; del buf929  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_189(c_void_p(buf930.data_ptr()), c_void_p(relu_19.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(convolution_18.data_ptr()), c_void_p(primals_422.data_ptr()), c_void_p(primals_423.data_ptr()), c_void_p(buf928.data_ptr()))
    del buf926
    del convolution_18
    del primals_422
    del primals_423
    del relu_19
    buf934 = buf932[1]
    del buf932
    buf935 = empty((192, ), device='cpu', dtype=torch.float32)
    buf936 = empty((192, ), device='cpu', dtype=torch.float32)
    buf937 = buf936; del buf936  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_190(c_void_p(buf937.data_ptr()), c_void_p(relu_18.data_ptr()), c_void_p(buf933.data_ptr()), c_void_p(cat_7.data_ptr()), c_void_p(primals_419.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(buf935.data_ptr()))
    del buf933
    del cat_7
    del primals_419
    del primals_420
    del relu_18
    buf943 = buf941[1]
    del buf941
    buf944 = empty((128, ), device='cpu', dtype=torch.float32)
    buf945 = empty((128, ), device='cpu', dtype=torch.float32)
    buf946 = buf945; del buf945  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_191(c_void_p(buf946.data_ptr()), c_void_p(relu_17.data_ptr()), c_void_p(buf942.data_ptr()), c_void_p(convolution_16.data_ptr()), c_void_p(primals_416.data_ptr()), c_void_p(primals_417.data_ptr()), c_void_p(buf944.data_ptr()))
    del buf942
    del convolution_16
    del primals_416
    del primals_417
    del relu_17
    buf950 = buf948[1]
    del buf948
    buf951 = empty((160, ), device='cpu', dtype=torch.float32)
    buf952 = empty((160, ), device='cpu', dtype=torch.float32)
    buf953 = buf952; del buf952  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_192(c_void_p(buf953.data_ptr()), c_void_p(relu_16.data_ptr()), c_void_p(buf949.data_ptr()), c_void_p(cat_6.data_ptr()), c_void_p(primals_413.data_ptr()), c_void_p(primals_414.data_ptr()), c_void_p(buf951.data_ptr()))
    del buf949
    del cat_6
    del primals_413
    del primals_414
    del relu_16
    buf957 = buf955[1]
    del buf955
    buf958 = empty((128, ), device='cpu', dtype=torch.float32)
    buf959 = empty((128, ), device='cpu', dtype=torch.float32)
    buf960 = buf959; del buf959  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_193(c_void_p(buf960.data_ptr()), c_void_p(relu_15.data_ptr()), c_void_p(buf956.data_ptr()), c_void_p(convolution_14.data_ptr()), c_void_p(primals_410.data_ptr()), c_void_p(primals_411.data_ptr()), c_void_p(buf958.data_ptr()))
    del buf956
    del convolution_14
    del primals_410
    del primals_411
    del relu_15
    buf964 = buf962[1]
    del buf962
    buf965 = empty((128, ), device='cpu', dtype=torch.float32)
    buf966 = empty((128, ), device='cpu', dtype=torch.float32)
    buf967 = buf966; del buf966  # reuse
    buf969 = reinterpret_tensor(buf765, (4, 128, 56, 56), (401408, 1, 7168, 128), 0); del buf765  # reuse
    cpp_fused_avg_pool2d_backward_convolution_backward_native_batch_norm_backward_threshold_backward_194(c_void_p(buf967.data_ptr()), c_void_p(relu_14.data_ptr()), c_void_p(buf963.data_ptr()), c_void_p(avg_pool2d.data_ptr()), c_void_p(primals_407.data_ptr()), c_void_p(primals_408.data_ptr()), c_void_p(buf968.data_ptr()), c_void_p(buf965.data_ptr()), c_void_p(buf969.data_ptr()))
    del avg_pool2d
    del buf963
    del primals_407
    del primals_408
    del relu_14
    # Source Nodes: [], Original ATen: [aten.avg_pool2d_backward, aten.convolution_backward]
    buf970 = aten.convolution_backward(buf969, relu_13, primals_42, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf969
    del primals_42
    buf971 = buf970[0]
    buf972 = buf970[1]
    del buf970
    buf973 = empty((256, ), device='cpu', dtype=torch.float32)
    buf974 = empty((256, ), device='cpu', dtype=torch.float32)
    buf975 = buf974; del buf974  # reuse
    buf976 = reinterpret_tensor(buf968, (4, 32, 56, 56), (100352, 1, 1792, 32), 0); del buf968  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_195(c_void_p(buf975.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(cat_5.data_ptr()), c_void_p(primals_404.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(buf973.data_ptr()), c_void_p(buf976.data_ptr()))
    del cat_5
    del primals_404
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf977 = aten.convolution_backward(buf976, relu_12, primals_39, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_39
    buf978 = buf977[0]
    buf979 = buf977[1]
    del buf977
    buf980 = empty((128, ), device='cpu', dtype=torch.float32)
    buf981 = empty((128, ), device='cpu', dtype=torch.float32)
    buf982 = buf981; del buf981  # reuse
    buf983 = buf978; del buf978  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_196(c_void_p(buf982.data_ptr()), c_void_p(buf983.data_ptr()), c_void_p(relu_12.data_ptr()), c_void_p(convolution_11.data_ptr()), c_void_p(primals_401.data_ptr()), c_void_p(primals_402.data_ptr()), c_void_p(primals_37.data_ptr()), c_void_p(buf980.data_ptr()))
    del convolution_11
    del primals_37
    del primals_401
    del primals_402
    del relu_12
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf984 = aten.convolution_backward(buf983, relu_11, primals_36, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf983
    del primals_36
    buf985 = buf984[0]
    buf986 = buf984[1]
    del buf984
    buf987 = empty((224, ), device='cpu', dtype=torch.float32)
    buf988 = empty((224, ), device='cpu', dtype=torch.float32)
    buf989 = buf988; del buf988  # reuse
    buf990 = buf976; del buf976  # reuse
    cpp_fused_add_convolution_backward_native_batch_norm_backward_threshold_backward_197(c_void_p(buf989.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(cat_4.data_ptr()), c_void_p(primals_398.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(buf987.data_ptr()), c_void_p(buf990.data_ptr()))
    del cat_4
    del primals_398
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf991 = aten.convolution_backward(buf990, relu_10, primals_33, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_33
    buf992 = buf991[0]
    buf993 = buf991[1]
    del buf991
    buf994 = empty((128, ), device='cpu', dtype=torch.float32)
    buf995 = empty((128, ), device='cpu', dtype=torch.float32)
    buf996 = buf995; del buf995  # reuse
    buf997 = buf992; del buf992  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_198(c_void_p(buf996.data_ptr()), c_void_p(buf997.data_ptr()), c_void_p(relu_10.data_ptr()), c_void_p(convolution_9.data_ptr()), c_void_p(primals_395.data_ptr()), c_void_p(primals_396.data_ptr()), c_void_p(primals_31.data_ptr()), c_void_p(buf994.data_ptr()))
    del convolution_9
    del primals_31
    del primals_395
    del primals_396
    del relu_10
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf998 = aten.convolution_backward(buf997, relu_9, primals_30, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_30
    buf999 = buf998[0]
    buf1000 = buf998[1]
    del buf998
    buf1001 = empty((192, ), device='cpu', dtype=torch.float32)
    buf1002 = empty((192, ), device='cpu', dtype=torch.float32)
    buf1003 = buf1002; del buf1002  # reuse
    buf1008 = buf990; del buf990  # reuse
    cpp_fused_add_native_batch_norm_backward_threshold_backward_199(c_void_p(buf1003.data_ptr()), c_void_p(relu_9.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(cat_3.data_ptr()), c_void_p(primals_392.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(buf1001.data_ptr()), c_void_p(buf1008.data_ptr()))
    del cat_3
    del primals_392
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf1009 = aten.convolution_backward(buf1008, relu_8, primals_27, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_27
    buf1010 = buf1009[0]
    buf1015 = buf997; del buf997  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_200(c_void_p(relu_8.data_ptr()), c_void_p(buf1010.data_ptr()), c_void_p(primals_390.data_ptr()), c_void_p(primals_25.data_ptr()), c_void_p(buf1015.data_ptr()))
    del primals_25
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf1016 = aten.convolution_backward(buf1015, relu_7, primals_24, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_24
    buf1017 = buf1016[0]
    buf1007 = buf1008; del buf1008  # reuse
    buf1022 = buf1007; del buf1007  # reuse
    cpp_fused_add_convolution_backward_201(c_void_p(buf1022.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(relu_9.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(relu_7.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_22.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf1023 = aten.convolution_backward(buf1022, relu_6, primals_21, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_21
    buf1024 = buf1023[0]
    buf1029 = buf1015; del buf1015  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_202(c_void_p(relu_6.data_ptr()), c_void_p(buf1024.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(primals_19.data_ptr()), c_void_p(buf1029.data_ptr()))
    del primals_19
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf1030 = aten.convolution_backward(buf1029, relu_5, primals_18, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_18
    buf1031 = buf1030[0]
    buf1006 = buf1022; del buf1022  # reuse
    buf1038 = buf1006; del buf1006  # reuse
    cpp_fused_add_203(c_void_p(buf1038.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(relu_9.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(relu_7.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(relu_5.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_16.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.convolution_backward]
    buf1039 = aten.convolution_backward(buf1038, relu_4, primals_15, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_15
    buf1040 = buf1039[0]
    buf1045 = buf1029; del buf1029  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_204(c_void_p(relu_4.data_ptr()), c_void_p(buf1040.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(primals_13.data_ptr()), c_void_p(buf1045.data_ptr()))
    del primals_13
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf1046 = aten.convolution_backward(buf1045, relu_3, primals_12, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del primals_12
    buf1047 = buf1046[0]
    buf1005 = buf1038; del buf1038  # reuse
    buf1037 = buf1005; del buf1005  # reuse
    buf1052 = buf1037; del buf1037  # reuse
    cpp_fused_add_convolution_backward_205(c_void_p(buf1052.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(relu_9.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(relu_7.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(relu_5.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_16.data_ptr()), c_void_p(relu_3.data_ptr()), c_void_p(buf1047.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(primals_10.data_ptr()))
    # Source Nodes: [], Original ATen: [aten.add, aten.convolution_backward]
    buf1053 = aten.convolution_backward(buf1052, relu_2, primals_9, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf1052
    del primals_9
    buf1054 = buf1053[0]
    buf1059 = buf1045; del buf1045  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_206(c_void_p(relu_2.data_ptr()), c_void_p(buf1054.data_ptr()), c_void_p(primals_372.data_ptr()), c_void_p(primals_7.data_ptr()), c_void_p(buf1059.data_ptr()))
    del primals_7
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf1060 = aten.convolution_backward(buf1059, relu_1, primals_6, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False])
    del buf1059
    del primals_6
    buf1061 = buf1060[0]
    buf1004 = reinterpret_tensor(buf901, (4, 64, 56, 56), (200704, 1, 3584, 64), 0); del buf901  # reuse
    buf1036 = buf1004; del buf1004  # reuse
    buf1066 = buf1036; del buf1036  # reuse
    cpp_fused_add_native_batch_norm_backward_slice_threshold_backward_207(c_void_p(buf1066.data_ptr()), c_void_p(relu_13.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(relu_11.data_ptr()), c_void_p(buf985.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(relu_9.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(relu_7.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(relu_5.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_16.data_ptr()), c_void_p(relu_3.data_ptr()), c_void_p(buf1047.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(primals_10.data_ptr()), c_void_p(relu_1.data_ptr()), c_void_p(buf1061.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_4.data_ptr()))
    del buf971
    del buf985
    del buf999
    del primals_10
    del primals_16
    del primals_22
    del primals_28
    del primals_34
    del primals_393
    del primals_399
    del primals_4
    del primals_40
    del primals_405
    del relu_11
    del relu_13
    del relu_9
    buf1011 = buf1009[1]
    del buf1009
    buf1012 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1013 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1014 = buf1013; del buf1013  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_208(c_void_p(buf1014.data_ptr()), c_void_p(relu_8.data_ptr()), c_void_p(buf1010.data_ptr()), c_void_p(convolution_7.data_ptr()), c_void_p(primals_389.data_ptr()), c_void_p(primals_390.data_ptr()), c_void_p(buf1012.data_ptr()))
    del buf1010
    del convolution_7
    del primals_389
    del primals_390
    del relu_8
    buf1018 = buf1016[1]
    del buf1016
    buf1019 = empty((160, ), device='cpu', dtype=torch.float32)
    buf1020 = empty((160, ), device='cpu', dtype=torch.float32)
    buf1021 = buf1020; del buf1020  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_209(c_void_p(buf1021.data_ptr()), c_void_p(relu_7.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(cat_2.data_ptr()), c_void_p(primals_386.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(buf1019.data_ptr()))
    del buf1017
    del cat_2
    del primals_386
    del primals_387
    del relu_7
    buf1025 = buf1023[1]
    del buf1023
    buf1026 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1027 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1028 = buf1027; del buf1027  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_210(c_void_p(buf1028.data_ptr()), c_void_p(relu_6.data_ptr()), c_void_p(buf1024.data_ptr()), c_void_p(convolution_5.data_ptr()), c_void_p(primals_383.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(buf1026.data_ptr()))
    del buf1024
    del convolution_5
    del primals_383
    del primals_384
    del relu_6
    buf1032 = buf1030[1]
    del buf1030
    buf1033 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1034 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1035 = buf1034; del buf1034  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_211(c_void_p(buf1035.data_ptr()), c_void_p(relu_5.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(cat_1.data_ptr()), c_void_p(primals_380.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(buf1033.data_ptr()))
    del buf1031
    del cat_1
    del primals_380
    del primals_381
    del relu_5
    buf1041 = buf1039[1]
    del buf1039
    buf1042 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1043 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1044 = buf1043; del buf1043  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_212(c_void_p(buf1044.data_ptr()), c_void_p(relu_4.data_ptr()), c_void_p(buf1040.data_ptr()), c_void_p(convolution_3.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(buf1042.data_ptr()))
    del buf1040
    del convolution_3
    del primals_377
    del primals_378
    del relu_4
    buf1048 = buf1046[1]
    del buf1046
    buf1049 = empty((96, ), device='cpu', dtype=torch.float32)
    buf1050 = empty((96, ), device='cpu', dtype=torch.float32)
    buf1051 = buf1050; del buf1050  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_213(c_void_p(buf1051.data_ptr()), c_void_p(relu_3.data_ptr()), c_void_p(buf1047.data_ptr()), c_void_p(cat.data_ptr()), c_void_p(primals_374.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(buf1049.data_ptr()))
    del buf1047
    del cat
    del primals_374
    del primals_375
    del relu_3
    buf1055 = buf1053[1]
    del buf1053
    buf1056 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1057 = empty((128, ), device='cpu', dtype=torch.float32)
    buf1058 = buf1057; del buf1057  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_214(c_void_p(buf1058.data_ptr()), c_void_p(relu_2.data_ptr()), c_void_p(buf1054.data_ptr()), c_void_p(convolution_1.data_ptr()), c_void_p(primals_371.data_ptr()), c_void_p(primals_372.data_ptr()), c_void_p(buf1056.data_ptr()))
    del buf1054
    del convolution_1
    del primals_371
    del primals_372
    del relu_2
    buf1062 = buf1060[1]
    del buf1060
    buf1063 = empty((64, ), device='cpu', dtype=torch.float32)
    buf1064 = empty((64, ), device='cpu', dtype=torch.float32)
    buf1065 = buf1064; del buf1064  # reuse
    cpp_fused_native_batch_norm_backward_threshold_backward_215(c_void_p(buf1065.data_ptr()), c_void_p(relu_1.data_ptr()), c_void_p(buf1061.data_ptr()), c_void_p(sub_240.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(buf1063.data_ptr()))
    del buf1061
    del primals_369
    del relu_1
    del sub_240
    # Source Nodes: [], Original ATen: [aten.max_pool2d_with_indices_backward]
    buf1067 = aten.max_pool2d_with_indices_backward(buf1066, relu, [3, 3], [2, 2], [1, 1], [1, 1], False, getitem_1)
    del buf1066
    del getitem_1
    buf1068 = buf1067
    del buf1067
    buf1069 = empty((64, ), device='cpu', dtype=torch.float32)
    buf1070 = empty((64, ), device='cpu', dtype=torch.float32)
    buf1071 = buf1070; del buf1070  # reuse
    buf1072 = buf1068; del buf1068  # reuse
    cpp_fused_convolution_backward_native_batch_norm_backward_threshold_backward_216(c_void_p(buf1071.data_ptr()), c_void_p(buf1072.data_ptr()), c_void_p(relu.data_ptr()), c_void_p(convolution.data_ptr()), c_void_p(primals_365.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(buf1069.data_ptr()))
    del convolution
    del primals_2
    del primals_365
    del primals_366
    del relu
    # Source Nodes: [], Original ATen: [aten.convolution_backward, aten.native_batch_norm_backward, aten.threshold_backward]
    buf1073 = aten.convolution_backward(buf1072, primals_728, primals_1, [0], [2, 2], [3, 3], [1, 1], False, [0, 0], 1, [False, True, False])
    del buf1072
    del primals_1
    del primals_728
    buf1074 = buf1073[1]
    return (buf1074, buf1071, buf1069, buf1065, buf1063, buf1062, buf1058, buf1056, buf1055, buf1051, buf1049, buf1048, buf1044, buf1042, buf1041, buf1035, buf1033, buf1032, buf1028, buf1026, buf1025, buf1021, buf1019, buf1018, buf1014, buf1012, buf1011, buf1003, buf1001, buf1000, buf996, buf994, buf993, buf989, buf987, buf986, buf982, buf980, buf979, buf975, buf973, buf972, buf967, buf965, buf964, buf960, buf958, buf957, buf953, buf951, buf950, buf946, buf944, buf943, buf937, buf935, buf934, buf930, buf928, buf927, buf923, buf921, buf920, buf916, buf914, buf913, buf905, buf903, buf902, buf898, buf896, buf895, buf891, buf889, buf888, buf884, buf882, buf881, buf871, buf869, buf868, buf864, buf862, buf861, buf857, buf855, buf854, buf850, buf848, buf847, buf835, buf833, buf832, buf828, buf826, buf825, buf821, buf819, buf818, buf814, buf812, buf811, buf797, buf795, buf794, buf790, buf788, buf787, buf783, buf781, buf780, buf776, buf774, buf773, buf769, buf767, buf766, buf761, buf759, buf758, buf754, buf752, buf751, buf747, buf745, buf744, buf740, buf738, buf737, buf731, buf729, buf728, buf724, buf722, buf721, buf717, buf715, buf714, buf710, buf708, buf707, buf699, buf697, buf696, buf692, buf690, buf689, buf685, buf683, buf682, buf678, buf676, buf675, buf665, buf663, buf662, buf658, buf656, buf655, buf651, buf649, buf648, buf644, buf642, buf641, buf629, buf627, buf626, buf622, buf620, buf619, buf615, buf613, buf612, buf608, buf606, buf605, buf591, buf589, buf588, buf584, buf582, buf581, buf577, buf575, buf574, buf570, buf568, buf567, buf551, buf549, buf548, buf544, buf542, buf541, buf537, buf535, buf534, buf530, buf528, buf527, buf509, buf507, buf506, buf502, buf500, buf499, buf495, buf493, buf492, buf488, buf486, buf485, buf465, buf463, buf462, buf458, buf456, buf455, buf451, buf449, buf448, buf444, buf442, buf441, buf419, buf417, buf416, buf412, buf410, buf409, buf405, buf403, buf402, buf398, buf396, buf395, buf371, buf369, buf368, buf364, buf362, buf361, buf357, buf355, buf354, buf350, buf348, buf347, buf321, buf319, buf318, buf314, buf312, buf311, buf307, buf305, buf304, buf300, buf298, buf297, buf293, buf291, buf290, buf285, buf283, buf282, buf278, buf276, buf275, buf271, buf269, buf268, buf264, buf262, buf261, buf255, buf253, buf252, buf248, buf246, buf245, buf241, buf239, buf238, buf234, buf232, buf231, buf223, buf221, buf220, buf216, buf214, buf213, buf209, buf207, buf206, buf202, buf200, buf199, buf189, buf187, buf186, buf182, buf180, buf179, buf175, buf173, buf172, buf168, buf166, buf165, buf153, buf151, buf150, buf146, buf144, buf143, buf139, buf137, buf136, buf132, buf130, buf129, buf115, buf113, buf112, buf108, buf106, buf105, buf101, buf99, buf98, buf94, buf92, buf91, buf75, buf73, buf72, buf68, buf66, buf65, buf61, buf59, buf58, buf54, buf52, buf51, buf33, buf31, buf30, buf26, buf24, buf23, buf19, buf17, buf16, buf12, buf10, buf9, buf5, buf3, reinterpret_tensor(buf1, (1000, 1024), (1024, 1), 0), buf2, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((64, 3, 7, 7), (147, 1, 21, 3), device='cpu', dtype=torch.float32)
    primals_2 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    primals_4 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    primals_6 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_7 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_9 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_10 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_12 = rand_strided((128, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_13 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_15 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_16 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_18 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_19 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_21 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_22 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_24 = rand_strided((128, 160, 1, 1), (160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_25 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_27 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_28 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_30 = rand_strided((128, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_31 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_33 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_34 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_36 = rand_strided((128, 224, 1, 1), (224, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_37 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_39 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_40 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_42 = rand_strided((128, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_43 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_45 = rand_strided((128, 128, 1, 1), (128, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_46 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_48 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_49 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_51 = rand_strided((128, 160, 1, 1), (160, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_52 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_54 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_55 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_57 = rand_strided((128, 192, 1, 1), (192, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_58 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_60 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_61 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_63 = rand_strided((128, 224, 1, 1), (224, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_64 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_66 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_67 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_69 = rand_strided((128, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_70 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_72 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_73 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_75 = rand_strided((128, 288, 1, 1), (288, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_76 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_78 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_79 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_81 = rand_strided((128, 320, 1, 1), (320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_82 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_84 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_85 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_87 = rand_strided((128, 352, 1, 1), (352, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_88 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_90 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_91 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_93 = rand_strided((128, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_94 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_96 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_97 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_99 = rand_strided((128, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_100 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_102 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_103 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_105 = rand_strided((128, 448, 1, 1), (448, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_106 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_108 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_109 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_111 = rand_strided((128, 480, 1, 1), (480, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_112 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_114 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_115 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_117 = rand_strided((256, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_118 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_120 = rand_strided((128, 256, 1, 1), (256, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_121 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_123 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_124 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_126 = rand_strided((128, 288, 1, 1), (288, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_127 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_129 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_130 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_132 = rand_strided((128, 320, 1, 1), (320, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_133 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_135 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_136 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_138 = rand_strided((128, 352, 1, 1), (352, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_139 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_141 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_142 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_144 = rand_strided((128, 384, 1, 1), (384, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_145 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_147 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_148 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_150 = rand_strided((128, 416, 1, 1), (416, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_151 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_153 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_154 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_156 = rand_strided((128, 448, 1, 1), (448, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_157 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_159 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_160 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_162 = rand_strided((128, 480, 1, 1), (480, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_163 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_165 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_166 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_168 = rand_strided((128, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_169 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_171 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_172 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_174 = rand_strided((128, 544, 1, 1), (544, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_175 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_177 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_178 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_180 = rand_strided((128, 576, 1, 1), (576, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_181 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_183 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_184 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_186 = rand_strided((128, 608, 1, 1), (608, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_187 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_189 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_190 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_192 = rand_strided((128, 640, 1, 1), (640, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_193 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_195 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_196 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_198 = rand_strided((128, 672, 1, 1), (672, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_199 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_201 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_202 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_204 = rand_strided((128, 704, 1, 1), (704, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_205 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_207 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_208 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_210 = rand_strided((128, 736, 1, 1), (736, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_211 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_213 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_214 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_216 = rand_strided((128, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_217 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_219 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_220 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_222 = rand_strided((128, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_223 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_225 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_226 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_228 = rand_strided((128, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_229 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_231 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_232 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_234 = rand_strided((128, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_235 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_237 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_238 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_240 = rand_strided((128, 896, 1, 1), (896, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_241 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_243 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_244 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_246 = rand_strided((128, 928, 1, 1), (928, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_247 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_249 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_250 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_252 = rand_strided((128, 960, 1, 1), (960, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_253 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_255 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_256 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_258 = rand_strided((128, 992, 1, 1), (992, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_259 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_261 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_262 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_264 = rand_strided((512, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_265 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_267 = rand_strided((128, 512, 1, 1), (512, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_268 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_270 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_271 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_273 = rand_strided((128, 544, 1, 1), (544, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_274 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_276 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_277 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_279 = rand_strided((128, 576, 1, 1), (576, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_280 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_282 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_283 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_285 = rand_strided((128, 608, 1, 1), (608, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_286 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_288 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_289 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_291 = rand_strided((128, 640, 1, 1), (640, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_292 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_294 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_295 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_297 = rand_strided((128, 672, 1, 1), (672, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_298 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_300 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_301 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_303 = rand_strided((128, 704, 1, 1), (704, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_304 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_306 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_307 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_309 = rand_strided((128, 736, 1, 1), (736, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_310 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_312 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_313 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_315 = rand_strided((128, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_316 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_318 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_319 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_321 = rand_strided((128, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_322 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_324 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_325 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_327 = rand_strided((128, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_328 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_330 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_331 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_333 = rand_strided((128, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_334 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_336 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_337 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_339 = rand_strided((128, 896, 1, 1), (896, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_340 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_342 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_343 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_345 = rand_strided((128, 928, 1, 1), (928, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_346 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_348 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_349 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_351 = rand_strided((128, 960, 1, 1), (960, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_352 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_354 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_355 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_357 = rand_strided((128, 992, 1, 1), (992, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_358 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_360 = rand_strided((32, 128, 3, 3), (1152, 1, 384, 128), device='cpu', dtype=torch.float32)
    primals_361 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_365 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    primals_366 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    primals_369 = rand_strided((64, ), (1, ), device='cpu', dtype=torch.float32)
    primals_371 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_372 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_374 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_375 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    primals_377 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_378 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_380 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_381 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_383 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_384 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_386 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_387 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_389 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_390 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_392 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_393 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_395 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_396 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_398 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_399 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_401 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_402 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_404 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_405 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_407 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_408 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_410 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_411 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_413 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_414 = rand_strided((160, ), (1, ), device='cpu', dtype=torch.float32)
    primals_416 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_417 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_419 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_420 = rand_strided((192, ), (1, ), device='cpu', dtype=torch.float32)
    primals_422 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_423 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_425 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_426 = rand_strided((224, ), (1, ), device='cpu', dtype=torch.float32)
    primals_428 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_429 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_431 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_432 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_434 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_435 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_437 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_438 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_440 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_441 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_443 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_444 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_446 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_447 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_449 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_450 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_452 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_453 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_455 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_456 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_458 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_459 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_461 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_462 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_464 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_465 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_467 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_468 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_470 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_471 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_473 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_474 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_476 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_477 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_479 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_480 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_482 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_483 = rand_strided((256, ), (1, ), device='cpu', dtype=torch.float32)
    primals_485 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_486 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_488 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_489 = rand_strided((288, ), (1, ), device='cpu', dtype=torch.float32)
    primals_491 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_492 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_494 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_495 = rand_strided((320, ), (1, ), device='cpu', dtype=torch.float32)
    primals_497 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_498 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_500 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_501 = rand_strided((352, ), (1, ), device='cpu', dtype=torch.float32)
    primals_503 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_504 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_506 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_507 = rand_strided((384, ), (1, ), device='cpu', dtype=torch.float32)
    primals_509 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_510 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_512 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_513 = rand_strided((416, ), (1, ), device='cpu', dtype=torch.float32)
    primals_515 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_516 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_518 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_519 = rand_strided((448, ), (1, ), device='cpu', dtype=torch.float32)
    primals_521 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_522 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_524 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_525 = rand_strided((480, ), (1, ), device='cpu', dtype=torch.float32)
    primals_527 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_528 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_530 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_531 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_533 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_534 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_536 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_537 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_539 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_540 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_542 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_543 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_545 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_546 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_548 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_549 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_551 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_552 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_554 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_555 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_557 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_558 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_560 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_561 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_563 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_564 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_566 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_567 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_569 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_570 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_572 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_573 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_575 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_576 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_578 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_579 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_581 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_582 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_584 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_585 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_587 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_588 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_590 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_591 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_593 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_594 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_596 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_597 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_599 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_600 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_602 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_603 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_605 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_606 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_608 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_609 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_611 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_612 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_614 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_615 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_617 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_618 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_620 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_621 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_623 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_624 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_626 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_627 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_629 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_630 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_632 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_633 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_635 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_636 = rand_strided((544, ), (1, ), device='cpu', dtype=torch.float32)
    primals_638 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_639 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_641 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_642 = rand_strided((576, ), (1, ), device='cpu', dtype=torch.float32)
    primals_644 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_645 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_647 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_648 = rand_strided((608, ), (1, ), device='cpu', dtype=torch.float32)
    primals_650 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_651 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_653 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_654 = rand_strided((640, ), (1, ), device='cpu', dtype=torch.float32)
    primals_656 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_657 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_659 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_660 = rand_strided((672, ), (1, ), device='cpu', dtype=torch.float32)
    primals_662 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_663 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_665 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_666 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_668 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_669 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_671 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_672 = rand_strided((736, ), (1, ), device='cpu', dtype=torch.float32)
    primals_674 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_675 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_677 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_678 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_680 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_681 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_683 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_684 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_686 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_687 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_689 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_690 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_692 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_693 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_695 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_696 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    primals_698 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_699 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_701 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_702 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_704 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_705 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_707 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_708 = rand_strided((928, ), (1, ), device='cpu', dtype=torch.float32)
    primals_710 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_711 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_713 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_714 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_716 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_717 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_719 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_720 = rand_strided((992, ), (1, ), device='cpu', dtype=torch.float32)
    primals_722 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_723 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_725 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_726 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_728 = rand_strided((4, 3, 224, 224), (150528, 1, 672, 3), device='cpu', dtype=torch.float32)
    convolution = rand_strided((4, 64, 112, 112), (802816, 1, 7168, 64), device='cpu', dtype=torch.float32)
    relu = rand_strided((4, 64, 112, 112), (802816, 1, 7168, 64), device='cpu', dtype=torch.float32)
    getitem_1 = rand_strided((4, 64, 56, 56), (200704, 1, 3584, 64), device='cpu', dtype=torch.int64)
    relu_1 = rand_strided((4, 64, 56, 56), (200704, 1, 3584, 64), device='cpu', dtype=torch.float32)
    convolution_1 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_2 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat = rand_strided((4, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    relu_3 = rand_strided((4, 96, 56, 56), (301056, 1, 5376, 96), device='cpu', dtype=torch.float32)
    convolution_3 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_4 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat_1 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_5 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    convolution_5 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_6 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat_2 = rand_strided((4, 160, 56, 56), (501760, 1, 8960, 160), device='cpu', dtype=torch.float32)
    relu_7 = rand_strided((4, 160, 56, 56), (501760, 1, 8960, 160), device='cpu', dtype=torch.float32)
    convolution_7 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_8 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat_3 = rand_strided((4, 192, 56, 56), (602112, 1, 10752, 192), device='cpu', dtype=torch.float32)
    relu_9 = rand_strided((4, 192, 56, 56), (602112, 1, 10752, 192), device='cpu', dtype=torch.float32)
    convolution_9 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_10 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat_4 = rand_strided((4, 224, 56, 56), (702464, 1, 12544, 224), device='cpu', dtype=torch.float32)
    relu_11 = rand_strided((4, 224, 56, 56), (702464, 1, 12544, 224), device='cpu', dtype=torch.float32)
    convolution_11 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    relu_12 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cat_5 = rand_strided((4, 256, 56, 56), (802816, 1, 14336, 256), device='cpu', dtype=torch.float32)
    relu_13 = rand_strided((4, 256, 56, 56), (802816, 1, 14336, 256), device='cpu', dtype=torch.float32)
    convolution_13 = rand_strided((4, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    avg_pool2d = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_14 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    convolution_14 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_15 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_6 = rand_strided((4, 160, 28, 28), (125440, 1, 4480, 160), device='cpu', dtype=torch.float32)
    relu_16 = rand_strided((4, 160, 28, 28), (125440, 1, 4480, 160), device='cpu', dtype=torch.float32)
    convolution_16 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_17 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_7 = rand_strided((4, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    relu_18 = rand_strided((4, 192, 28, 28), (150528, 1, 5376, 192), device='cpu', dtype=torch.float32)
    convolution_18 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_19 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_8 = rand_strided((4, 224, 28, 28), (175616, 1, 6272, 224), device='cpu', dtype=torch.float32)
    relu_20 = rand_strided((4, 224, 28, 28), (175616, 1, 6272, 224), device='cpu', dtype=torch.float32)
    convolution_20 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_21 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_9 = rand_strided((4, 256, 28, 28), (200704, 1, 7168, 256), device='cpu', dtype=torch.float32)
    relu_22 = rand_strided((4, 256, 28, 28), (200704, 1, 7168, 256), device='cpu', dtype=torch.float32)
    convolution_22 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_23 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_10 = rand_strided((4, 288, 28, 28), (225792, 1, 8064, 288), device='cpu', dtype=torch.float32)
    relu_24 = rand_strided((4, 288, 28, 28), (225792, 1, 8064, 288), device='cpu', dtype=torch.float32)
    convolution_24 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_25 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_11 = rand_strided((4, 320, 28, 28), (250880, 1, 8960, 320), device='cpu', dtype=torch.float32)
    relu_26 = rand_strided((4, 320, 28, 28), (250880, 1, 8960, 320), device='cpu', dtype=torch.float32)
    convolution_26 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_27 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_12 = rand_strided((4, 352, 28, 28), (275968, 1, 9856, 352), device='cpu', dtype=torch.float32)
    relu_28 = rand_strided((4, 352, 28, 28), (275968, 1, 9856, 352), device='cpu', dtype=torch.float32)
    convolution_28 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_29 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_13 = rand_strided((4, 384, 28, 28), (301056, 1, 10752, 384), device='cpu', dtype=torch.float32)
    relu_30 = rand_strided((4, 384, 28, 28), (301056, 1, 10752, 384), device='cpu', dtype=torch.float32)
    convolution_30 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_31 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_14 = rand_strided((4, 416, 28, 28), (326144, 1, 11648, 416), device='cpu', dtype=torch.float32)
    relu_32 = rand_strided((4, 416, 28, 28), (326144, 1, 11648, 416), device='cpu', dtype=torch.float32)
    convolution_32 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_33 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_15 = rand_strided((4, 448, 28, 28), (351232, 1, 12544, 448), device='cpu', dtype=torch.float32)
    relu_34 = rand_strided((4, 448, 28, 28), (351232, 1, 12544, 448), device='cpu', dtype=torch.float32)
    convolution_34 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_35 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_16 = rand_strided((4, 480, 28, 28), (376320, 1, 13440, 480), device='cpu', dtype=torch.float32)
    relu_36 = rand_strided((4, 480, 28, 28), (376320, 1, 13440, 480), device='cpu', dtype=torch.float32)
    convolution_36 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    relu_37 = rand_strided((4, 128, 28, 28), (100352, 1, 3584, 128), device='cpu', dtype=torch.float32)
    cat_17 = rand_strided((4, 512, 28, 28), (401408, 1, 14336, 512), device='cpu', dtype=torch.float32)
    relu_38 = rand_strided((4, 512, 28, 28), (401408, 1, 14336, 512), device='cpu', dtype=torch.float32)
    convolution_38 = rand_strided((4, 256, 28, 28), (200704, 1, 7168, 256), device='cpu', dtype=torch.float32)
    avg_pool2d_1 = rand_strided((4, 256, 14, 14), (50176, 1, 3584, 256), device='cpu', dtype=torch.float32)
    relu_39 = rand_strided((4, 256, 14, 14), (50176, 1, 3584, 256), device='cpu', dtype=torch.float32)
    convolution_39 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_40 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_18 = rand_strided((4, 288, 14, 14), (56448, 1, 4032, 288), device='cpu', dtype=torch.float32)
    relu_41 = rand_strided((4, 288, 14, 14), (56448, 1, 4032, 288), device='cpu', dtype=torch.float32)
    convolution_41 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_42 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_19 = rand_strided((4, 320, 14, 14), (62720, 1, 4480, 320), device='cpu', dtype=torch.float32)
    relu_43 = rand_strided((4, 320, 14, 14), (62720, 1, 4480, 320), device='cpu', dtype=torch.float32)
    convolution_43 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_44 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_20 = rand_strided((4, 352, 14, 14), (68992, 1, 4928, 352), device='cpu', dtype=torch.float32)
    relu_45 = rand_strided((4, 352, 14, 14), (68992, 1, 4928, 352), device='cpu', dtype=torch.float32)
    convolution_45 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_46 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_21 = rand_strided((4, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    relu_47 = rand_strided((4, 384, 14, 14), (75264, 1, 5376, 384), device='cpu', dtype=torch.float32)
    convolution_47 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_48 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_22 = rand_strided((4, 416, 14, 14), (81536, 1, 5824, 416), device='cpu', dtype=torch.float32)
    relu_49 = rand_strided((4, 416, 14, 14), (81536, 1, 5824, 416), device='cpu', dtype=torch.float32)
    convolution_49 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_50 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_23 = rand_strided((4, 448, 14, 14), (87808, 1, 6272, 448), device='cpu', dtype=torch.float32)
    relu_51 = rand_strided((4, 448, 14, 14), (87808, 1, 6272, 448), device='cpu', dtype=torch.float32)
    convolution_51 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_52 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_24 = rand_strided((4, 480, 14, 14), (94080, 1, 6720, 480), device='cpu', dtype=torch.float32)
    relu_53 = rand_strided((4, 480, 14, 14), (94080, 1, 6720, 480), device='cpu', dtype=torch.float32)
    convolution_53 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_54 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_25 = rand_strided((4, 512, 14, 14), (100352, 1, 7168, 512), device='cpu', dtype=torch.float32)
    relu_55 = rand_strided((4, 512, 14, 14), (100352, 1, 7168, 512), device='cpu', dtype=torch.float32)
    convolution_55 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_56 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_26 = rand_strided((4, 544, 14, 14), (106624, 1, 7616, 544), device='cpu', dtype=torch.float32)
    relu_57 = rand_strided((4, 544, 14, 14), (106624, 1, 7616, 544), device='cpu', dtype=torch.float32)
    convolution_57 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_58 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_27 = rand_strided((4, 576, 14, 14), (112896, 1, 8064, 576), device='cpu', dtype=torch.float32)
    relu_59 = rand_strided((4, 576, 14, 14), (112896, 1, 8064, 576), device='cpu', dtype=torch.float32)
    convolution_59 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_60 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_28 = rand_strided((4, 608, 14, 14), (119168, 1, 8512, 608), device='cpu', dtype=torch.float32)
    relu_61 = rand_strided((4, 608, 14, 14), (119168, 1, 8512, 608), device='cpu', dtype=torch.float32)
    convolution_61 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_62 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_29 = rand_strided((4, 640, 14, 14), (125440, 1, 8960, 640), device='cpu', dtype=torch.float32)
    relu_63 = rand_strided((4, 640, 14, 14), (125440, 1, 8960, 640), device='cpu', dtype=torch.float32)
    convolution_63 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_64 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_30 = rand_strided((4, 672, 14, 14), (131712, 1, 9408, 672), device='cpu', dtype=torch.float32)
    relu_65 = rand_strided((4, 672, 14, 14), (131712, 1, 9408, 672), device='cpu', dtype=torch.float32)
    convolution_65 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_66 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_31 = rand_strided((4, 704, 14, 14), (137984, 1, 9856, 704), device='cpu', dtype=torch.float32)
    relu_67 = rand_strided((4, 704, 14, 14), (137984, 1, 9856, 704), device='cpu', dtype=torch.float32)
    convolution_67 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_68 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_32 = rand_strided((4, 736, 14, 14), (144256, 1, 10304, 736), device='cpu', dtype=torch.float32)
    relu_69 = rand_strided((4, 736, 14, 14), (144256, 1, 10304, 736), device='cpu', dtype=torch.float32)
    convolution_69 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_70 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_33 = rand_strided((4, 768, 14, 14), (150528, 1, 10752, 768), device='cpu', dtype=torch.float32)
    relu_71 = rand_strided((4, 768, 14, 14), (150528, 1, 10752, 768), device='cpu', dtype=torch.float32)
    convolution_71 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_72 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_34 = rand_strided((4, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    relu_73 = rand_strided((4, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    convolution_73 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_74 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_35 = rand_strided((4, 832, 14, 14), (163072, 1, 11648, 832), device='cpu', dtype=torch.float32)
    relu_75 = rand_strided((4, 832, 14, 14), (163072, 1, 11648, 832), device='cpu', dtype=torch.float32)
    convolution_75 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_76 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_36 = rand_strided((4, 864, 14, 14), (169344, 1, 12096, 864), device='cpu', dtype=torch.float32)
    relu_77 = rand_strided((4, 864, 14, 14), (169344, 1, 12096, 864), device='cpu', dtype=torch.float32)
    convolution_77 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_78 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_37 = rand_strided((4, 896, 14, 14), (175616, 1, 12544, 896), device='cpu', dtype=torch.float32)
    relu_79 = rand_strided((4, 896, 14, 14), (175616, 1, 12544, 896), device='cpu', dtype=torch.float32)
    convolution_79 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_80 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_38 = rand_strided((4, 928, 14, 14), (181888, 1, 12992, 928), device='cpu', dtype=torch.float32)
    relu_81 = rand_strided((4, 928, 14, 14), (181888, 1, 12992, 928), device='cpu', dtype=torch.float32)
    convolution_81 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_82 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_39 = rand_strided((4, 960, 14, 14), (188160, 1, 13440, 960), device='cpu', dtype=torch.float32)
    relu_83 = rand_strided((4, 960, 14, 14), (188160, 1, 13440, 960), device='cpu', dtype=torch.float32)
    convolution_83 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_84 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_40 = rand_strided((4, 992, 14, 14), (194432, 1, 13888, 992), device='cpu', dtype=torch.float32)
    relu_85 = rand_strided((4, 992, 14, 14), (194432, 1, 13888, 992), device='cpu', dtype=torch.float32)
    convolution_85 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    relu_86 = rand_strided((4, 128, 14, 14), (25088, 1, 1792, 128), device='cpu', dtype=torch.float32)
    cat_41 = rand_strided((4, 1024, 14, 14), (200704, 1, 14336, 1024), device='cpu', dtype=torch.float32)
    relu_87 = rand_strided((4, 1024, 14, 14), (200704, 1, 14336, 1024), device='cpu', dtype=torch.float32)
    convolution_87 = rand_strided((4, 512, 14, 14), (100352, 1, 7168, 512), device='cpu', dtype=torch.float32)
    avg_pool2d_2 = rand_strided((4, 512, 7, 7), (25088, 1, 3584, 512), device='cpu', dtype=torch.float32)
    relu_88 = rand_strided((4, 512, 7, 7), (25088, 1, 3584, 512), device='cpu', dtype=torch.float32)
    convolution_88 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_89 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_42 = rand_strided((4, 544, 7, 7), (26656, 1, 3808, 544), device='cpu', dtype=torch.float32)
    relu_90 = rand_strided((4, 544, 7, 7), (26656, 1, 3808, 544), device='cpu', dtype=torch.float32)
    convolution_90 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_91 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_43 = rand_strided((4, 576, 7, 7), (28224, 1, 4032, 576), device='cpu', dtype=torch.float32)
    relu_92 = rand_strided((4, 576, 7, 7), (28224, 1, 4032, 576), device='cpu', dtype=torch.float32)
    convolution_92 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_93 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_44 = rand_strided((4, 608, 7, 7), (29792, 1, 4256, 608), device='cpu', dtype=torch.float32)
    relu_94 = rand_strided((4, 608, 7, 7), (29792, 1, 4256, 608), device='cpu', dtype=torch.float32)
    convolution_94 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_95 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_45 = rand_strided((4, 640, 7, 7), (31360, 1, 4480, 640), device='cpu', dtype=torch.float32)
    relu_96 = rand_strided((4, 640, 7, 7), (31360, 1, 4480, 640), device='cpu', dtype=torch.float32)
    convolution_96 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_97 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_46 = rand_strided((4, 672, 7, 7), (32928, 1, 4704, 672), device='cpu', dtype=torch.float32)
    relu_98 = rand_strided((4, 672, 7, 7), (32928, 1, 4704, 672), device='cpu', dtype=torch.float32)
    convolution_98 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_99 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_47 = rand_strided((4, 704, 7, 7), (34496, 1, 4928, 704), device='cpu', dtype=torch.float32)
    relu_100 = rand_strided((4, 704, 7, 7), (34496, 1, 4928, 704), device='cpu', dtype=torch.float32)
    convolution_100 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_101 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_48 = rand_strided((4, 736, 7, 7), (36064, 1, 5152, 736), device='cpu', dtype=torch.float32)
    relu_102 = rand_strided((4, 736, 7, 7), (36064, 1, 5152, 736), device='cpu', dtype=torch.float32)
    convolution_102 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_103 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_49 = rand_strided((4, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    relu_104 = rand_strided((4, 768, 7, 7), (37632, 1, 5376, 768), device='cpu', dtype=torch.float32)
    convolution_104 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_105 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_50 = rand_strided((4, 800, 7, 7), (39200, 1, 5600, 800), device='cpu', dtype=torch.float32)
    relu_106 = rand_strided((4, 800, 7, 7), (39200, 1, 5600, 800), device='cpu', dtype=torch.float32)
    convolution_106 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_107 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_51 = rand_strided((4, 832, 7, 7), (40768, 1, 5824, 832), device='cpu', dtype=torch.float32)
    relu_108 = rand_strided((4, 832, 7, 7), (40768, 1, 5824, 832), device='cpu', dtype=torch.float32)
    convolution_108 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_109 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_52 = rand_strided((4, 864, 7, 7), (42336, 1, 6048, 864), device='cpu', dtype=torch.float32)
    relu_110 = rand_strided((4, 864, 7, 7), (42336, 1, 6048, 864), device='cpu', dtype=torch.float32)
    convolution_110 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_111 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_53 = rand_strided((4, 896, 7, 7), (43904, 1, 6272, 896), device='cpu', dtype=torch.float32)
    relu_112 = rand_strided((4, 896, 7, 7), (43904, 1, 6272, 896), device='cpu', dtype=torch.float32)
    convolution_112 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_113 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_54 = rand_strided((4, 928, 7, 7), (45472, 1, 6496, 928), device='cpu', dtype=torch.float32)
    relu_114 = rand_strided((4, 928, 7, 7), (45472, 1, 6496, 928), device='cpu', dtype=torch.float32)
    convolution_114 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_115 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_55 = rand_strided((4, 960, 7, 7), (47040, 1, 6720, 960), device='cpu', dtype=torch.float32)
    relu_116 = rand_strided((4, 960, 7, 7), (47040, 1, 6720, 960), device='cpu', dtype=torch.float32)
    convolution_116 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_117 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_56 = rand_strided((4, 992, 7, 7), (48608, 1, 6944, 992), device='cpu', dtype=torch.float32)
    relu_118 = rand_strided((4, 992, 7, 7), (48608, 1, 6944, 992), device='cpu', dtype=torch.float32)
    convolution_118 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    relu_119 = rand_strided((4, 128, 7, 7), (6272, 1, 896, 128), device='cpu', dtype=torch.float32)
    cat_57 = rand_strided((4, 1024, 7, 7), (50176, 1, 7168, 1024), device='cpu', dtype=torch.float32)
    view = rand_strided((4, 1024), (1024, 1), device='cpu', dtype=torch.float32)
    permute_1 = rand_strided((1000, 1024), (1024, 1), device='cpu', dtype=torch.float32)
    le = rand_strided((4, 1024, 7, 7), (50176, 1, 7168, 1024), device='cpu', dtype=torch.bool)
    sub_240 = rand_strided((4, 64, 56, 56), (200704, 1, 3584, 64), device='cpu', dtype=torch.float32)
    tangents_1 = rand_strided((4, 1000), (1000, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([primals_1, primals_2, primals_4, primals_6, primals_7, primals_9, primals_10, primals_12, primals_13, primals_15, primals_16, primals_18, primals_19, primals_21, primals_22, primals_24, primals_25, primals_27, primals_28, primals_30, primals_31, primals_33, primals_34, primals_36, primals_37, primals_39, primals_40, primals_42, primals_43, primals_45, primals_46, primals_48, primals_49, primals_51, primals_52, primals_54, primals_55, primals_57, primals_58, primals_60, primals_61, primals_63, primals_64, primals_66, primals_67, primals_69, primals_70, primals_72, primals_73, primals_75, primals_76, primals_78, primals_79, primals_81, primals_82, primals_84, primals_85, primals_87, primals_88, primals_90, primals_91, primals_93, primals_94, primals_96, primals_97, primals_99, primals_100, primals_102, primals_103, primals_105, primals_106, primals_108, primals_109, primals_111, primals_112, primals_114, primals_115, primals_117, primals_118, primals_120, primals_121, primals_123, primals_124, primals_126, primals_127, primals_129, primals_130, primals_132, primals_133, primals_135, primals_136, primals_138, primals_139, primals_141, primals_142, primals_144, primals_145, primals_147, primals_148, primals_150, primals_151, primals_153, primals_154, primals_156, primals_157, primals_159, primals_160, primals_162, primals_163, primals_165, primals_166, primals_168, primals_169, primals_171, primals_172, primals_174, primals_175, primals_177, primals_178, primals_180, primals_181, primals_183, primals_184, primals_186, primals_187, primals_189, primals_190, primals_192, primals_193, primals_195, primals_196, primals_198, primals_199, primals_201, primals_202, primals_204, primals_205, primals_207, primals_208, primals_210, primals_211, primals_213, primals_214, primals_216, primals_217, primals_219, primals_220, primals_222, primals_223, primals_225, primals_226, primals_228, primals_229, primals_231, primals_232, primals_234, primals_235, primals_237, primals_238, primals_240, primals_241, primals_243, primals_244, primals_246, primals_247, primals_249, primals_250, primals_252, primals_253, primals_255, primals_256, primals_258, primals_259, primals_261, primals_262, primals_264, primals_265, primals_267, primals_268, primals_270, primals_271, primals_273, primals_274, primals_276, primals_277, primals_279, primals_280, primals_282, primals_283, primals_285, primals_286, primals_288, primals_289, primals_291, primals_292, primals_294, primals_295, primals_297, primals_298, primals_300, primals_301, primals_303, primals_304, primals_306, primals_307, primals_309, primals_310, primals_312, primals_313, primals_315, primals_316, primals_318, primals_319, primals_321, primals_322, primals_324, primals_325, primals_327, primals_328, primals_330, primals_331, primals_333, primals_334, primals_336, primals_337, primals_339, primals_340, primals_342, primals_343, primals_345, primals_346, primals_348, primals_349, primals_351, primals_352, primals_354, primals_355, primals_357, primals_358, primals_360, primals_361, primals_365, primals_366, primals_369, primals_371, primals_372, primals_374, primals_375, primals_377, primals_378, primals_380, primals_381, primals_383, primals_384, primals_386, primals_387, primals_389, primals_390, primals_392, primals_393, primals_395, primals_396, primals_398, primals_399, primals_401, primals_402, primals_404, primals_405, primals_407, primals_408, primals_410, primals_411, primals_413, primals_414, primals_416, primals_417, primals_419, primals_420, primals_422, primals_423, primals_425, primals_426, primals_428, primals_429, primals_431, primals_432, primals_434, primals_435, primals_437, primals_438, primals_440, primals_441, primals_443, primals_444, primals_446, primals_447, primals_449, primals_450, primals_452, primals_453, primals_455, primals_456, primals_458, primals_459, primals_461, primals_462, primals_464, primals_465, primals_467, primals_468, primals_470, primals_471, primals_473, primals_474, primals_476, primals_477, primals_479, primals_480, primals_482, primals_483, primals_485, primals_486, primals_488, primals_489, primals_491, primals_492, primals_494, primals_495, primals_497, primals_498, primals_500, primals_501, primals_503, primals_504, primals_506, primals_507, primals_509, primals_510, primals_512, primals_513, primals_515, primals_516, primals_518, primals_519, primals_521, primals_522, primals_524, primals_525, primals_527, primals_528, primals_530, primals_531, primals_533, primals_534, primals_536, primals_537, primals_539, primals_540, primals_542, primals_543, primals_545, primals_546, primals_548, primals_549, primals_551, primals_552, primals_554, primals_555, primals_557, primals_558, primals_560, primals_561, primals_563, primals_564, primals_566, primals_567, primals_569, primals_570, primals_572, primals_573, primals_575, primals_576, primals_578, primals_579, primals_581, primals_582, primals_584, primals_585, primals_587, primals_588, primals_590, primals_591, primals_593, primals_594, primals_596, primals_597, primals_599, primals_600, primals_602, primals_603, primals_605, primals_606, primals_608, primals_609, primals_611, primals_612, primals_614, primals_615, primals_617, primals_618, primals_620, primals_621, primals_623, primals_624, primals_626, primals_627, primals_629, primals_630, primals_632, primals_633, primals_635, primals_636, primals_638, primals_639, primals_641, primals_642, primals_644, primals_645, primals_647, primals_648, primals_650, primals_651, primals_653, primals_654, primals_656, primals_657, primals_659, primals_660, primals_662, primals_663, primals_665, primals_666, primals_668, primals_669, primals_671, primals_672, primals_674, primals_675, primals_677, primals_678, primals_680, primals_681, primals_683, primals_684, primals_686, primals_687, primals_689, primals_690, primals_692, primals_693, primals_695, primals_696, primals_698, primals_699, primals_701, primals_702, primals_704, primals_705, primals_707, primals_708, primals_710, primals_711, primals_713, primals_714, primals_716, primals_717, primals_719, primals_720, primals_722, primals_723, primals_725, primals_726, primals_728, convolution, relu, getitem_1, relu_1, convolution_1, relu_2, cat, relu_3, convolution_3, relu_4, cat_1, relu_5, convolution_5, relu_6, cat_2, relu_7, convolution_7, relu_8, cat_3, relu_9, convolution_9, relu_10, cat_4, relu_11, convolution_11, relu_12, cat_5, relu_13, convolution_13, avg_pool2d, relu_14, convolution_14, relu_15, cat_6, relu_16, convolution_16, relu_17, cat_7, relu_18, convolution_18, relu_19, cat_8, relu_20, convolution_20, relu_21, cat_9, relu_22, convolution_22, relu_23, cat_10, relu_24, convolution_24, relu_25, cat_11, relu_26, convolution_26, relu_27, cat_12, relu_28, convolution_28, relu_29, cat_13, relu_30, convolution_30, relu_31, cat_14, relu_32, convolution_32, relu_33, cat_15, relu_34, convolution_34, relu_35, cat_16, relu_36, convolution_36, relu_37, cat_17, relu_38, convolution_38, avg_pool2d_1, relu_39, convolution_39, relu_40, cat_18, relu_41, convolution_41, relu_42, cat_19, relu_43, convolution_43, relu_44, cat_20, relu_45, convolution_45, relu_46, cat_21, relu_47, convolution_47, relu_48, cat_22, relu_49, convolution_49, relu_50, cat_23, relu_51, convolution_51, relu_52, cat_24, relu_53, convolution_53, relu_54, cat_25, relu_55, convolution_55, relu_56, cat_26, relu_57, convolution_57, relu_58, cat_27, relu_59, convolution_59, relu_60, cat_28, relu_61, convolution_61, relu_62, cat_29, relu_63, convolution_63, relu_64, cat_30, relu_65, convolution_65, relu_66, cat_31, relu_67, convolution_67, relu_68, cat_32, relu_69, convolution_69, relu_70, cat_33, relu_71, convolution_71, relu_72, cat_34, relu_73, convolution_73, relu_74, cat_35, relu_75, convolution_75, relu_76, cat_36, relu_77, convolution_77, relu_78, cat_37, relu_79, convolution_79, relu_80, cat_38, relu_81, convolution_81, relu_82, cat_39, relu_83, convolution_83, relu_84, cat_40, relu_85, convolution_85, relu_86, cat_41, relu_87, convolution_87, avg_pool2d_2, relu_88, convolution_88, relu_89, cat_42, relu_90, convolution_90, relu_91, cat_43, relu_92, convolution_92, relu_93, cat_44, relu_94, convolution_94, relu_95, cat_45, relu_96, convolution_96, relu_97, cat_46, relu_98, convolution_98, relu_99, cat_47, relu_100, convolution_100, relu_101, cat_48, relu_102, convolution_102, relu_103, cat_49, relu_104, convolution_104, relu_105, cat_50, relu_106, convolution_106, relu_107, cat_51, relu_108, convolution_108, relu_109, cat_52, relu_110, convolution_110, relu_111, cat_53, relu_112, convolution_112, relu_113, cat_54, relu_114, convolution_114, relu_115, cat_55, relu_116, convolution_116, relu_117, cat_56, relu_118, convolution_118, relu_119, cat_57, view, permute_1, le, sub_240, tangents_1]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('densenet121', benchmark_compiled_module)
