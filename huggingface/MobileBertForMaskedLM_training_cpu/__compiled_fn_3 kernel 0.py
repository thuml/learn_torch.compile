
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_cat_view_zeros_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const long* in_ptr0,
                       const float* in_ptr1,
                       long* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = static_cast<long>(0);
            out_ptr0[static_cast<long>(x0)] = tmp0;
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(384L); x1+=static_cast<long>(1L))
            {
                auto tmp0 = c10::convert<long>(x1);
                auto tmp1 = static_cast<long>(0);
                auto tmp2 = tmp0 >= tmp1;
                auto tmp3 = static_cast<long>(128);
                auto tmp4 = tmp0 < tmp3;
                auto tmp5 = [&]
                {
                    auto tmp6 = c10::convert<long>(x0);
                    auto tmp7 = static_cast<long>(127);
                    auto tmp8 = tmp6 < tmp7;
                    auto tmp9 = [&]
                    {
                        auto tmp10 = in_ptr0[static_cast<long>(1L + x0)];
                        auto tmp11 = decltype(tmp10)(tmp10 + 30522);
                        auto tmp12 = tmp10 < 0;
                        auto tmp13 = tmp12 ? tmp11 : tmp10;
                        TORCH_CHECK((0 <= tmp13) & (tmp13 < 30522L), "index out of bounds: 0 <= tmp13 < 30522L")
                        auto tmp14 = in_ptr1[static_cast<long>(x1 + (128L*tmp13))];
                        return tmp14;
                    }
                    ;
                    auto tmp15 = tmp8 ? tmp9() : static_cast<decltype(tmp9())>(0.0);
                    return tmp15;
                }
                ;
                auto tmp16 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                auto tmp17 = tmp0 >= tmp3;
                auto tmp18 = static_cast<long>(256);
                auto tmp19 = tmp0 < tmp18;
                auto tmp20 = tmp17 & tmp19;
                auto tmp21 = [&]
                {
                    auto tmp22 = in_ptr0[static_cast<long>(x0)];
                    auto tmp23 = decltype(tmp22)(tmp22 + 30522);
                    auto tmp24 = tmp22 < 0;
                    auto tmp25 = tmp24 ? tmp23 : tmp22;
                    TORCH_CHECK((0 <= tmp25) & (tmp25 < 30522L), "index out of bounds: 0 <= tmp25 < 30522L")
                    auto tmp26 = in_ptr1[static_cast<long>((-128L) + x1 + (128L*tmp25))];
                    return tmp26;
                }
                ;
                auto tmp27 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                auto tmp28 = tmp0 >= tmp18;
                auto tmp29 = static_cast<long>(384);
                auto tmp30 = tmp0 < tmp29;
                auto tmp31 = [&]
                {
                    auto tmp32 = c10::convert<long>((-1L) + x0);
                    auto tmp33 = static_cast<long>(0);
                    auto tmp34 = tmp32 >= tmp33;
                    auto tmp35 = [&]
                    {
                        auto tmp36 = in_ptr0[static_cast<long>((-1L) + x0)];
                        auto tmp37 = decltype(tmp36)(tmp36 + 30522);
                        auto tmp38 = tmp36 < 0;
                        auto tmp39 = tmp38 ? tmp37 : tmp36;
                        TORCH_CHECK((0 <= tmp39) & (tmp39 < 30522L), "index out of bounds: 0 <= tmp39 < 30522L")
                        auto tmp40 = in_ptr1[static_cast<long>((-256L) + x1 + (128L*tmp39))];
                        return tmp40;
                    }
                    ;
                    auto tmp41 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                    return tmp41;
                }
                ;
                auto tmp42 = tmp28 ? tmp31() : static_cast<decltype(tmp31())>(0.0);
                auto tmp43 = tmp20 ? tmp27 : tmp42;
                auto tmp44 = tmp4 ? tmp16 : tmp43;
                out_ptr1[static_cast<long>(x1 + (384L*x0))] = tmp44;
            }
        }
    }
}
''')


cpp_fused_add_embedding_mul_view_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const long* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = in_ptr0[static_cast<long>(x0)];
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp2 = decltype(tmp1)(tmp1 + 512);
                auto tmp3 = tmp1 < 0;
                auto tmp4 = tmp3 ? tmp2 : tmp1;
                TORCH_CHECK((0 <= tmp4) & (tmp4 < 512L), "index out of bounds: 0 <= tmp4 < 512L")
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*tmp4)));
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp8.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp6.store(in_out_ptr0 + static_cast<long>(x1 + (512L*x0)));
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_109 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_110 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_111 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_112 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_113 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_114 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_115 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_116 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_117 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_118 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_119 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_120 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_121 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_122 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_123 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_124 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_125 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_126 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_127 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_128 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_129 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_130 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_131 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_132 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_133 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_134 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_135 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_136 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_137 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_138 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_139 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_140 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_141 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_142 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_143 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_144 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_145 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_146 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_147 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_148 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_149 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_150 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_151 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_152 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_153 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_154 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_155 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_156 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_157 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_158 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_159 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_160 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_161 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_162 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_163 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_164 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_165 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_166 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_167 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_168 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_169 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_170 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_171 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_172 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_173 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_174 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_175 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_176 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_177 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_178 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_179 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_180 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_181 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_182 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_183 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_184 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_185 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_186 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_187 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_188 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_189 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_190 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_191 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_192 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_193 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_194 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_195 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_196 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_197 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_198 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_199 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_200 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_201 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_202 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_203 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_204 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_205 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_206 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_207 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_208 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_209 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_210 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_211 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_212 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_213 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_214 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_215 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_216 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_217 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_218 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_219 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_220 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_221 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_222 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_223 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_224 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_225 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_226 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_227 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_228 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_229 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_230 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_231 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_232 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_233 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_234 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_235 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_236 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_237 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_238 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_239 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_240 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_241 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_242 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_243 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_244 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_245 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_246 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_247 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_248 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_249 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_250 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_251 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_252 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_253 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_254 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_255 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_256 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_257 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_258 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_259 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_260 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_261 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_262 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_263 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_264 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_265 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_266 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_267 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_268 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_269 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_270 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_271 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_272 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_273 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_274 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_275 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_276 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_277 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_278 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_279 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_280 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_281 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_282 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_283 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_284 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_285 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_286 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_287 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_288 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_289 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_290 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_291 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_292 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_293 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_294 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_295 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_296 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_297 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_298 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_299 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_300 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_301 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_302 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_303 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_304 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_305 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_306 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_307 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_308 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_309 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_310 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_311 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_312 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_313 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_314 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_315 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_316 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_317 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_318 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_319 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_320 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_321 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_322 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_323 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_324 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_325 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_326 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_327 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_328 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_329 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_330 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_331 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_332 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_333 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_334 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_335 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_336 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_337 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_338 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_339 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_340 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_341 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_view_342 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
            tmp1.store(out_ptr0 + static_cast<long>(x0));
        }
    }
}
''')


cpp_fused_add_mul_view_343 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_threshold_backward_view_344 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       bool* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = in_ptr0[static_cast<long>(x0)];
            auto tmp1 = tmp0 * (tmp0>0);
            auto tmp2 = static_cast<float>(0.0);
            auto tmp3 = tmp1 <= tmp2;
            out_ptr0[static_cast<long>(x0)] = tmp1;
            out_ptr1[static_cast<long>(x0)] = tmp3;
        }
    }
}
''')


cpp_fused_add_mul_view_345 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_346 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_347 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp2 = tmp0 * tmp1;
                auto tmp4 = tmp2 + tmp3;
                tmp4.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_348 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    auto tmp1 = static_cast<float>(0.42044820762685725);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    tmp3.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                float tmp0[8*8] __attribute__ ((aligned (8)));
                at::vec::transpose_mxn<float,8,8>(in_ptr1 + static_cast<long>(x0 + (128L*x1)), static_cast<long>(128L), tmp0, 8);
                for (long x0_inner = 0; x0_inner < 8; x0_inner++)
                {
                    auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x0_inner));
                    auto tmp2 = static_cast<float>(0.42044820762685725);
                    auto tmp3 = at::vec::Vectorized<float>(tmp2);
                    auto tmp4 = tmp1 * tmp3;
                    tmp4.store(out_ptr1 + static_cast<long>(x1 + (128L*x0) + (128L*x0_inner)));
                }
            }
        }
    }
}
''')


cpp_fused_349 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* out_ptr0,
                       float* out_ptr1)
{
    auto in_ptr0 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                float tmp_acc0 = -std::numeric_limits<float>::infinity();
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp0);
                }
                tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                float tmp_acc0 = 0;
                at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp4 = tmp3.exp();
                    tmp4.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    tmp_acc0_vec = tmp_acc0_vec + tmp4;
                }
                tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = out_ptr1[static_cast<long>(x0)];
                auto tmp2 = at::vec::Vectorized<float>(tmp1);
                auto tmp3 = tmp0 / tmp2;
                tmp3.store(in_out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_350 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(1L))
            {
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (32L*x0) + (128L*x1)));
                    tmp0.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (4096L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_view_351 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(4L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(32L); x2+=static_cast<long>(8L))
                {
                    float tmp0[8*8] __attribute__ ((aligned (8)));
                    at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (128L*x2) + (4096L*x0)), static_cast<long>(128L), tmp0, 8);
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                        tmp1.store(out_ptr0 + static_cast<long>(x2 + (32L*x1) + (32L*x1_inner) + (4096L*x0)));
                    }
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr1[static_cast<long>((32L*x0) + (4096L*(c10::div_floor_integer((x1 + x1_inner), 32L))) + (static_cast<long>((x1 + x1_inner)) % static_cast<long>(32L)))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                tmp0.store(out_ptr1 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_352 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp3 = tmp1 * tmp2;
                auto tmp5 = tmp3 + tmp4;
                auto tmp6 = tmp0 + tmp5;
                auto tmp8 = tmp6 * tmp7;
                auto tmp10 = tmp8 + tmp9;
                tmp10.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_threshold_backward_view_353 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       bool* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = in_ptr0[static_cast<long>(x0)];
            auto tmp1 = tmp0 * (tmp0>0);
            auto tmp2 = static_cast<float>(0.0);
            auto tmp3 = tmp1 <= tmp2;
            out_ptr0[static_cast<long>(x0)] = tmp1;
            out_ptr1[static_cast<long>(x0)] = tmp3;
        }
    }
}
''')


cpp_fused_add_mul_view_354 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_threshold_backward_view_355 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       bool* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = in_ptr0[static_cast<long>(x0)];
            auto tmp1 = tmp0 * (tmp0>0);
            auto tmp2 = static_cast<float>(0.0);
            auto tmp3 = tmp1 <= tmp2;
            out_ptr0[static_cast<long>(x0)] = tmp1;
            out_ptr1[static_cast<long>(x0)] = tmp3;
        }
    }
}
''')


cpp_fused_add_mul_356 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_threshold_backward_view_357 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       bool* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = in_ptr0[static_cast<long>(x0)];
            auto tmp1 = tmp0 * (tmp0>0);
            auto tmp2 = static_cast<float>(0.0);
            auto tmp3 = tmp1 <= tmp2;
            out_ptr0[static_cast<long>(x0)] = tmp1;
            out_ptr1[static_cast<long>(x0)] = tmp3;
        }
    }
}
''')


cpp_fused_add_mul_view_358 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp2 = tmp0 + tmp1;
                auto tmp4 = tmp2 * tmp3;
                auto tmp6 = tmp4 + tmp5;
                tmp6.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_relu_threshold_backward_view_359 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       bool* out_ptr1)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
        {
            auto tmp0 = in_ptr0[static_cast<long>(x0)];
            auto tmp1 = tmp0 * (tmp0>0);
            auto tmp2 = static_cast<float>(0.0);
            auto tmp3 = tmp1 <= tmp2;
            out_ptr0[static_cast<long>(x0)] = tmp1;
            out_ptr1[static_cast<long>(x0)] = tmp3;
        }
    }
}
''')


cpp_fused_add_mul_view_360 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (128L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (128L*x0)));
            }
        }
    }
}
''')


cpp_fused_add_mul_view_361 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (512L*x0)));
                auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1 + (512L*x0)));
                auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                auto tmp9 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                auto tmp11 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                auto tmp3 = tmp1 + tmp2;
                auto tmp5 = tmp3 * tmp4;
                auto tmp7 = tmp5 + tmp6;
                auto tmp8 = tmp0 + tmp7;
                auto tmp10 = tmp8 * tmp9;
                auto tmp12 = tmp10 + tmp11;
                tmp12.store(out_ptr0 + static_cast<long>(x1 + (512L*x0)));
            }
        }
    }
}
''')


cpp_fused_cat_native_layer_norm_relu_362 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr2,
                       float* out_ptr3)
{
    auto out_ptr1 = in_out_ptr0;
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            {
                #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                Welford<float> tmp_acc0 = Welford<float>();
                Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                    auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                    tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp1);
                }
                tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));
                out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);
                out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);
            }
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(512.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1e-12);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 + tmp5;
            auto tmp7 = tmp6.rsqrt();
            tmp7.store(in_out_ptr0 + static_cast<long>(x0));
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(512L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(30522L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x0);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(128);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr1[static_cast<long>(x0 + (128L*x1))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(512);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr2[static_cast<long>((-3906816L) + x1 + (30522L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    out_ptr2[static_cast<long>(x1 + (30522L*x0))] = tmp14;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
                {
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(512L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (512L*x0)));
                        auto tmp2 = out_ptr0[static_cast<long>(x0)];
                        auto tmp5 = in_out_ptr0[static_cast<long>(x0)];
                        auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp10 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        auto tmp3 = at::vec::Vectorized<float>(tmp2);
                        auto tmp4 = tmp1 - tmp3;
                        auto tmp6 = at::vec::Vectorized<float>(tmp5);
                        auto tmp7 = tmp4 * tmp6;
                        auto tmp9 = tmp7 * tmp8;
                        auto tmp11 = tmp9 + tmp10;
                        tmp11.store(out_ptr3 + static_cast<long>(x1 + (512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__log_softmax_nll_loss_forward_relu_threshold_backward_view_363 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       const float* in_ptr0,
                       const long* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const float* in_ptr92,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       long* out_ptr3,
                       float* out_ptr5,
                       bool* out_ptr6,
                       bool* out_ptr7,
                       bool* out_ptr8,
                       bool* out_ptr9,
                       bool* out_ptr10,
                       bool* out_ptr11,
                       bool* out_ptr12,
                       bool* out_ptr13,
                       bool* out_ptr14,
                       bool* out_ptr15,
                       bool* out_ptr16,
                       bool* out_ptr17,
                       bool* out_ptr18,
                       bool* out_ptr19,
                       bool* out_ptr20,
                       bool* out_ptr21,
                       bool* out_ptr22,
                       bool* out_ptr23,
                       bool* out_ptr24,
                       bool* out_ptr25,
                       bool* out_ptr26,
                       bool* out_ptr27,
                       bool* out_ptr28,
                       bool* out_ptr29,
                       bool* out_ptr30,
                       bool* out_ptr31,
                       bool* out_ptr32,
                       bool* out_ptr33,
                       bool* out_ptr34,
                       bool* out_ptr35,
                       bool* out_ptr36,
                       bool* out_ptr37,
                       bool* out_ptr38,
                       bool* out_ptr39,
                       bool* out_ptr40,
                       bool* out_ptr41,
                       bool* out_ptr42,
                       bool* out_ptr43,
                       bool* out_ptr44,
                       bool* out_ptr45,
                       bool* out_ptr46,
                       bool* out_ptr47,
                       bool* out_ptr48,
                       bool* out_ptr49,
                       bool* out_ptr50,
                       bool* out_ptr51,
                       bool* out_ptr52,
                       bool* out_ptr53,
                       bool* out_ptr54,
                       bool* out_ptr55,
                       bool* out_ptr56,
                       bool* out_ptr57,
                       bool* out_ptr58,
                       bool* out_ptr59,
                       bool* out_ptr60,
                       bool* out_ptr61,
                       bool* out_ptr62,
                       bool* out_ptr63,
                       bool* out_ptr64,
                       bool* out_ptr65,
                       bool* out_ptr66,
                       bool* out_ptr67,
                       bool* out_ptr68,
                       bool* out_ptr69,
                       bool* out_ptr70,
                       bool* out_ptr71,
                       bool* out_ptr72,
                       bool* out_ptr73,
                       bool* out_ptr74,
                       bool* out_ptr75,
                       bool* out_ptr76,
                       bool* out_ptr77,
                       bool* out_ptr78,
                       bool* out_ptr79,
                       bool* out_ptr80,
                       bool* out_ptr81,
                       bool* out_ptr82,
                       bool* out_ptr83,
                       bool* out_ptr84,
                       bool* out_ptr85,
                       bool* out_ptr86,
                       bool* out_ptr87,
                       bool* out_ptr88,
                       bool* out_ptr89,
                       bool* out_ptr90,
                       bool* out_ptr91,
                       bool* out_ptr92,
                       bool* out_ptr93,
                       bool* out_ptr94,
                       bool* out_ptr95,
                       bool* out_ptr96)
{
    auto out_ptr4 = in_out_ptr1;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(max:at::vec::Vectorized<float>:omp_out = at::vec::maximum(omp_out, omp_in)) initializer(omp_priv={at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity())})
                    float tmp_acc0 = -std::numeric_limits<float>::infinity();
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity());
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(30520L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (30522L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                        auto tmp2 = tmp0 + tmp1;
                        tmp2.store(in_out_ptr0 + static_cast<long>(x1 + (30522L*x0)));
                        tmp_acc0_vec = at::vec::maximum(tmp_acc0_vec, tmp2);
                    }
                    #pragma omp simd simdlen(4)  reduction(max:tmp_acc0)
                    for(long x1=static_cast<long>(30520L); x1<static_cast<long>(30522L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (30522L*x0))];
                        auto tmp1 = in_ptr0[static_cast<long>(x1)];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        in_out_ptr0[static_cast<long>(x1 + (30522L*x0))] = tmp2;
                        tmp_acc0 = max_propagate_nan(tmp_acc0, tmp2);
                    }
                    tmp_acc0 = max_propagate_nan(tmp_acc0, at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return at::vec::maximum(x, y); }, tmp_acc0_vec));
                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(30520L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (30522L*x0)));
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp4 = tmp3.exp();
                        tmp_acc0_vec = tmp_acc0_vec + tmp4;
                    }
                    #pragma omp simd simdlen(4)  reduction(+:tmp_acc0)
                    for(long x1=static_cast<long>(30520L); x1<static_cast<long>(30522L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (30522L*x0))];
                        auto tmp1 = out_ptr0[static_cast<long>(x0)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp3 = std::exp(tmp2);
                        tmp_acc0 = tmp_acc0 + tmp3;
                    }
                    tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(30520L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (30522L*x0)));
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp4 = out_ptr1[static_cast<long>(x0)];
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 - tmp2;
                    auto tmp5 = std::log(tmp4);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp3 - tmp6;
                    tmp7.store(out_ptr2 + static_cast<long>(x1 + (30522L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(30520L); x1<static_cast<long>(30522L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (30522L*x0))];
                    auto tmp1 = out_ptr0[static_cast<long>(x0)];
                    auto tmp3 = out_ptr1[static_cast<long>(x0)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = std::log(tmp3);
                    auto tmp5 = decltype(tmp2)(tmp2 - tmp4);
                    out_ptr2[static_cast<long>(x1 + (30522L*x0))] = tmp5;
                }
            }
        }
        #pragma omp single
        {
            {
                {
                    long tmp_acc0 = 0;
                    float tmp_acc1 = 0;
                    for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr1[static_cast<long>(x0)];
                        auto tmp1 = static_cast<long>(-100);
                        auto tmp2 = tmp0 != tmp1;
                        auto tmp3 = c10::convert<long>(tmp2);
                        auto tmp4 = static_cast<long>(0);
                        auto tmp5 = tmp2 ? tmp0 : tmp4;
                        auto tmp6 = decltype(tmp5)(tmp5 + 30522);
                        auto tmp7 = tmp5 < 0;
                        auto tmp8 = tmp7 ? tmp6 : tmp5;
                        TORCH_CHECK((0 <= tmp8) & (tmp8 < 30522L), "index out of bounds: 0 <= tmp8 < 30522L")
                        auto tmp9 = out_ptr2[static_cast<long>(tmp8 + (30522L*x0))];
                        auto tmp10 = decltype(tmp9)(-tmp9);
                        auto tmp11 = static_cast<float>(0.0);
                        auto tmp12 = tmp2 ? tmp10 : tmp11;
                        tmp_acc0 = tmp_acc0 + tmp3;
                        tmp_acc1 = tmp_acc1 + tmp12;
                    }
                    out_ptr3[static_cast<long>(0L)] = tmp_acc0;
                    out_ptr4[static_cast<long>(0L)] = tmp_acc1;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = out_ptr3[static_cast<long>(0L)];
                auto tmp2 = out_ptr4[static_cast<long>(0L)];
                auto tmp1 = c10::convert<float>(tmp0);
                auto tmp3 = tmp2 / tmp1;
                out_ptr5[static_cast<long>(0L)] = tmp1;
                in_out_ptr1[static_cast<long>(0L)] = tmp3;
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr2[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr6[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr3[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr7[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr4[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr8[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr5[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr9[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr6[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr10[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr7[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr11[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr8[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr12[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr9[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr13[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr10[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr14[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr11[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr15[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr12[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr16[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr13[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr17[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr14[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr18[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr15[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr19[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr16[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr20[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr17[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr21[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr18[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr22[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr19[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr23[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr20[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr24[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr21[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr25[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr22[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr26[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr23[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr27[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr24[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr28[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr25[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr29[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr26[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr30[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr27[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr31[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr28[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr32[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr29[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr33[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr30[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr34[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr31[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr35[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr32[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr36[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr33[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr37[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr34[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr38[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr35[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr39[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr36[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr40[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr37[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr41[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr38[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr42[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr39[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr43[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr40[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr44[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr41[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr45[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr42[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr46[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr43[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr47[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr44[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr48[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr45[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr49[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr46[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr50[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr47[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr51[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr48[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr52[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr49[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr53[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr50[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr54[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr51[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr55[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr52[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr56[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr53[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr57[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr54[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr58[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr55[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr59[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr56[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr60[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr57[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr61[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr58[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr62[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr59[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr63[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr60[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr64[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr61[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr65[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr62[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr66[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr63[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr67[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr64[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr68[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr65[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr69[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr66[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr70[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr67[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr71[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr68[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr72[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr69[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr73[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr70[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr74[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr71[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr75[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr72[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr76[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr73[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr77[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr74[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr78[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr75[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr79[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr76[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr80[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr77[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr81[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr78[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr82[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr79[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr83[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr80[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr84[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr81[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr85[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr82[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr86[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr83[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr87[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr84[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr88[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr85[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr89[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr86[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr90[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr87[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr91[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr88[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr92[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr89[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr93[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr90[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr94[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr91[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr95[static_cast<long>(x0)] = tmp3;
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(65536L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr92[static_cast<long>(x0)];
                    auto tmp1 = tmp0 * (tmp0>0);
                    auto tmp2 = static_cast<float>(0.0);
                    auto tmp3 = tmp1 <= tmp2;
                    out_ptr96[static_cast<long>(x0)] = tmp3;
                }
            }
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121 = args
    args.clear()
    assert_size_stride(primals_1, (512, ), (1, ))
    assert_size_stride(primals_2, (512, ), (1, ))
    assert_size_stride(primals_3, (128, ), (1, ))
    assert_size_stride(primals_4, (128, ), (1, ))
    assert_size_stride(primals_5, (128, ), (1, ))
    assert_size_stride(primals_6, (128, ), (1, ))
    assert_size_stride(primals_7, (128, ), (1, ))
    assert_size_stride(primals_8, (128, ), (1, ))
    assert_size_stride(primals_9, (128, ), (1, ))
    assert_size_stride(primals_10, (128, ), (1, ))
    assert_size_stride(primals_11, (128, ), (1, ))
    assert_size_stride(primals_12, (128, ), (1, ))
    assert_size_stride(primals_13, (128, ), (1, ))
    assert_size_stride(primals_14, (128, ), (1, ))
    assert_size_stride(primals_15, (128, ), (1, ))
    assert_size_stride(primals_16, (128, ), (1, ))
    assert_size_stride(primals_17, (512, ), (1, ))
    assert_size_stride(primals_18, (512, ), (1, ))
    assert_size_stride(primals_19, (128, ), (1, ))
    assert_size_stride(primals_20, (128, ), (1, ))
    assert_size_stride(primals_21, (128, ), (1, ))
    assert_size_stride(primals_22, (128, ), (1, ))
    assert_size_stride(primals_23, (128, ), (1, ))
    assert_size_stride(primals_24, (128, ), (1, ))
    assert_size_stride(primals_25, (128, ), (1, ))
    assert_size_stride(primals_26, (128, ), (1, ))
    assert_size_stride(primals_27, (128, ), (1, ))
    assert_size_stride(primals_28, (128, ), (1, ))
    assert_size_stride(primals_29, (128, ), (1, ))
    assert_size_stride(primals_30, (128, ), (1, ))
    assert_size_stride(primals_31, (128, ), (1, ))
    assert_size_stride(primals_32, (128, ), (1, ))
    assert_size_stride(primals_33, (512, ), (1, ))
    assert_size_stride(primals_34, (512, ), (1, ))
    assert_size_stride(primals_35, (128, ), (1, ))
    assert_size_stride(primals_36, (128, ), (1, ))
    assert_size_stride(primals_37, (128, ), (1, ))
    assert_size_stride(primals_38, (128, ), (1, ))
    assert_size_stride(primals_39, (128, ), (1, ))
    assert_size_stride(primals_40, (128, ), (1, ))
    assert_size_stride(primals_41, (128, ), (1, ))
    assert_size_stride(primals_42, (128, ), (1, ))
    assert_size_stride(primals_43, (128, ), (1, ))
    assert_size_stride(primals_44, (128, ), (1, ))
    assert_size_stride(primals_45, (128, ), (1, ))
    assert_size_stride(primals_46, (128, ), (1, ))
    assert_size_stride(primals_47, (128, ), (1, ))
    assert_size_stride(primals_48, (128, ), (1, ))
    assert_size_stride(primals_49, (512, ), (1, ))
    assert_size_stride(primals_50, (512, ), (1, ))
    assert_size_stride(primals_51, (128, ), (1, ))
    assert_size_stride(primals_52, (128, ), (1, ))
    assert_size_stride(primals_53, (128, ), (1, ))
    assert_size_stride(primals_54, (128, ), (1, ))
    assert_size_stride(primals_55, (128, ), (1, ))
    assert_size_stride(primals_56, (128, ), (1, ))
    assert_size_stride(primals_57, (128, ), (1, ))
    assert_size_stride(primals_58, (128, ), (1, ))
    assert_size_stride(primals_59, (128, ), (1, ))
    assert_size_stride(primals_60, (128, ), (1, ))
    assert_size_stride(primals_61, (128, ), (1, ))
    assert_size_stride(primals_62, (128, ), (1, ))
    assert_size_stride(primals_63, (128, ), (1, ))
    assert_size_stride(primals_64, (128, ), (1, ))
    assert_size_stride(primals_65, (512, ), (1, ))
    assert_size_stride(primals_66, (512, ), (1, ))
    assert_size_stride(primals_67, (128, ), (1, ))
    assert_size_stride(primals_68, (128, ), (1, ))
    assert_size_stride(primals_69, (128, ), (1, ))
    assert_size_stride(primals_70, (128, ), (1, ))
    assert_size_stride(primals_71, (128, ), (1, ))
    assert_size_stride(primals_72, (128, ), (1, ))
    assert_size_stride(primals_73, (128, ), (1, ))
    assert_size_stride(primals_74, (128, ), (1, ))
    assert_size_stride(primals_75, (128, ), (1, ))
    assert_size_stride(primals_76, (128, ), (1, ))
    assert_size_stride(primals_77, (128, ), (1, ))
    assert_size_stride(primals_78, (128, ), (1, ))
    assert_size_stride(primals_79, (128, ), (1, ))
    assert_size_stride(primals_80, (128, ), (1, ))
    assert_size_stride(primals_81, (512, ), (1, ))
    assert_size_stride(primals_82, (512, ), (1, ))
    assert_size_stride(primals_83, (128, ), (1, ))
    assert_size_stride(primals_84, (128, ), (1, ))
    assert_size_stride(primals_85, (128, ), (1, ))
    assert_size_stride(primals_86, (128, ), (1, ))
    assert_size_stride(primals_87, (128, ), (1, ))
    assert_size_stride(primals_88, (128, ), (1, ))
    assert_size_stride(primals_89, (128, ), (1, ))
    assert_size_stride(primals_90, (128, ), (1, ))
    assert_size_stride(primals_91, (128, ), (1, ))
    assert_size_stride(primals_92, (128, ), (1, ))
    assert_size_stride(primals_93, (128, ), (1, ))
    assert_size_stride(primals_94, (128, ), (1, ))
    assert_size_stride(primals_95, (128, ), (1, ))
    assert_size_stride(primals_96, (128, ), (1, ))
    assert_size_stride(primals_97, (512, ), (1, ))
    assert_size_stride(primals_98, (512, ), (1, ))
    assert_size_stride(primals_99, (128, ), (1, ))
    assert_size_stride(primals_100, (128, ), (1, ))
    assert_size_stride(primals_101, (128, ), (1, ))
    assert_size_stride(primals_102, (128, ), (1, ))
    assert_size_stride(primals_103, (128, ), (1, ))
    assert_size_stride(primals_104, (128, ), (1, ))
    assert_size_stride(primals_105, (128, ), (1, ))
    assert_size_stride(primals_106, (128, ), (1, ))
    assert_size_stride(primals_107, (128, ), (1, ))
    assert_size_stride(primals_108, (128, ), (1, ))
    assert_size_stride(primals_109, (128, ), (1, ))
    assert_size_stride(primals_110, (128, ), (1, ))
    assert_size_stride(primals_111, (128, ), (1, ))
    assert_size_stride(primals_112, (128, ), (1, ))
    assert_size_stride(primals_113, (512, ), (1, ))
    assert_size_stride(primals_114, (512, ), (1, ))
    assert_size_stride(primals_115, (128, ), (1, ))
    assert_size_stride(primals_116, (128, ), (1, ))
    assert_size_stride(primals_117, (128, ), (1, ))
    assert_size_stride(primals_118, (128, ), (1, ))
    assert_size_stride(primals_119, (128, ), (1, ))
    assert_size_stride(primals_120, (128, ), (1, ))
    assert_size_stride(primals_121, (128, ), (1, ))
    assert_size_stride(primals_122, (128, ), (1, ))
    assert_size_stride(primals_123, (128, ), (1, ))
    assert_size_stride(primals_124, (128, ), (1, ))
    assert_size_stride(primals_125, (128, ), (1, ))
    assert_size_stride(primals_126, (128, ), (1, ))
    assert_size_stride(primals_127, (128, ), (1, ))
    assert_size_stride(primals_128, (128, ), (1, ))
    assert_size_stride(primals_129, (512, ), (1, ))
    assert_size_stride(primals_130, (512, ), (1, ))
    assert_size_stride(primals_131, (128, ), (1, ))
    assert_size_stride(primals_132, (128, ), (1, ))
    assert_size_stride(primals_133, (128, ), (1, ))
    assert_size_stride(primals_134, (128, ), (1, ))
    assert_size_stride(primals_135, (128, ), (1, ))
    assert_size_stride(primals_136, (128, ), (1, ))
    assert_size_stride(primals_137, (128, ), (1, ))
    assert_size_stride(primals_138, (128, ), (1, ))
    assert_size_stride(primals_139, (128, ), (1, ))
    assert_size_stride(primals_140, (128, ), (1, ))
    assert_size_stride(primals_141, (128, ), (1, ))
    assert_size_stride(primals_142, (128, ), (1, ))
    assert_size_stride(primals_143, (128, ), (1, ))
    assert_size_stride(primals_144, (128, ), (1, ))
    assert_size_stride(primals_145, (512, ), (1, ))
    assert_size_stride(primals_146, (512, ), (1, ))
    assert_size_stride(primals_147, (128, ), (1, ))
    assert_size_stride(primals_148, (128, ), (1, ))
    assert_size_stride(primals_149, (128, ), (1, ))
    assert_size_stride(primals_150, (128, ), (1, ))
    assert_size_stride(primals_151, (128, ), (1, ))
    assert_size_stride(primals_152, (128, ), (1, ))
    assert_size_stride(primals_153, (128, ), (1, ))
    assert_size_stride(primals_154, (128, ), (1, ))
    assert_size_stride(primals_155, (128, ), (1, ))
    assert_size_stride(primals_156, (128, ), (1, ))
    assert_size_stride(primals_157, (128, ), (1, ))
    assert_size_stride(primals_158, (128, ), (1, ))
    assert_size_stride(primals_159, (128, ), (1, ))
    assert_size_stride(primals_160, (128, ), (1, ))
    assert_size_stride(primals_161, (512, ), (1, ))
    assert_size_stride(primals_162, (512, ), (1, ))
    assert_size_stride(primals_163, (128, ), (1, ))
    assert_size_stride(primals_164, (128, ), (1, ))
    assert_size_stride(primals_165, (128, ), (1, ))
    assert_size_stride(primals_166, (128, ), (1, ))
    assert_size_stride(primals_167, (128, ), (1, ))
    assert_size_stride(primals_168, (128, ), (1, ))
    assert_size_stride(primals_169, (128, ), (1, ))
    assert_size_stride(primals_170, (128, ), (1, ))
    assert_size_stride(primals_171, (128, ), (1, ))
    assert_size_stride(primals_172, (128, ), (1, ))
    assert_size_stride(primals_173, (128, ), (1, ))
    assert_size_stride(primals_174, (128, ), (1, ))
    assert_size_stride(primals_175, (128, ), (1, ))
    assert_size_stride(primals_176, (128, ), (1, ))
    assert_size_stride(primals_177, (512, ), (1, ))
    assert_size_stride(primals_178, (512, ), (1, ))
    assert_size_stride(primals_179, (128, ), (1, ))
    assert_size_stride(primals_180, (128, ), (1, ))
    assert_size_stride(primals_181, (128, ), (1, ))
    assert_size_stride(primals_182, (128, ), (1, ))
    assert_size_stride(primals_183, (128, ), (1, ))
    assert_size_stride(primals_184, (128, ), (1, ))
    assert_size_stride(primals_185, (128, ), (1, ))
    assert_size_stride(primals_186, (128, ), (1, ))
    assert_size_stride(primals_187, (128, ), (1, ))
    assert_size_stride(primals_188, (128, ), (1, ))
    assert_size_stride(primals_189, (128, ), (1, ))
    assert_size_stride(primals_190, (128, ), (1, ))
    assert_size_stride(primals_191, (128, ), (1, ))
    assert_size_stride(primals_192, (128, ), (1, ))
    assert_size_stride(primals_193, (512, ), (1, ))
    assert_size_stride(primals_194, (512, ), (1, ))
    assert_size_stride(primals_195, (128, ), (1, ))
    assert_size_stride(primals_196, (128, ), (1, ))
    assert_size_stride(primals_197, (128, ), (1, ))
    assert_size_stride(primals_198, (128, ), (1, ))
    assert_size_stride(primals_199, (128, ), (1, ))
    assert_size_stride(primals_200, (128, ), (1, ))
    assert_size_stride(primals_201, (128, ), (1, ))
    assert_size_stride(primals_202, (128, ), (1, ))
    assert_size_stride(primals_203, (128, ), (1, ))
    assert_size_stride(primals_204, (128, ), (1, ))
    assert_size_stride(primals_205, (128, ), (1, ))
    assert_size_stride(primals_206, (128, ), (1, ))
    assert_size_stride(primals_207, (128, ), (1, ))
    assert_size_stride(primals_208, (128, ), (1, ))
    assert_size_stride(primals_209, (512, ), (1, ))
    assert_size_stride(primals_210, (512, ), (1, ))
    assert_size_stride(primals_211, (128, ), (1, ))
    assert_size_stride(primals_212, (128, ), (1, ))
    assert_size_stride(primals_213, (128, ), (1, ))
    assert_size_stride(primals_214, (128, ), (1, ))
    assert_size_stride(primals_215, (128, ), (1, ))
    assert_size_stride(primals_216, (128, ), (1, ))
    assert_size_stride(primals_217, (128, ), (1, ))
    assert_size_stride(primals_218, (128, ), (1, ))
    assert_size_stride(primals_219, (128, ), (1, ))
    assert_size_stride(primals_220, (128, ), (1, ))
    assert_size_stride(primals_221, (128, ), (1, ))
    assert_size_stride(primals_222, (128, ), (1, ))
    assert_size_stride(primals_223, (128, ), (1, ))
    assert_size_stride(primals_224, (128, ), (1, ))
    assert_size_stride(primals_225, (512, ), (1, ))
    assert_size_stride(primals_226, (512, ), (1, ))
    assert_size_stride(primals_227, (128, ), (1, ))
    assert_size_stride(primals_228, (128, ), (1, ))
    assert_size_stride(primals_229, (128, ), (1, ))
    assert_size_stride(primals_230, (128, ), (1, ))
    assert_size_stride(primals_231, (128, ), (1, ))
    assert_size_stride(primals_232, (128, ), (1, ))
    assert_size_stride(primals_233, (128, ), (1, ))
    assert_size_stride(primals_234, (128, ), (1, ))
    assert_size_stride(primals_235, (128, ), (1, ))
    assert_size_stride(primals_236, (128, ), (1, ))
    assert_size_stride(primals_237, (128, ), (1, ))
    assert_size_stride(primals_238, (128, ), (1, ))
    assert_size_stride(primals_239, (128, ), (1, ))
    assert_size_stride(primals_240, (128, ), (1, ))
    assert_size_stride(primals_241, (512, ), (1, ))
    assert_size_stride(primals_242, (512, ), (1, ))
    assert_size_stride(primals_243, (128, ), (1, ))
    assert_size_stride(primals_244, (128, ), (1, ))
    assert_size_stride(primals_245, (128, ), (1, ))
    assert_size_stride(primals_246, (128, ), (1, ))
    assert_size_stride(primals_247, (128, ), (1, ))
    assert_size_stride(primals_248, (128, ), (1, ))
    assert_size_stride(primals_249, (128, ), (1, ))
    assert_size_stride(primals_250, (128, ), (1, ))
    assert_size_stride(primals_251, (128, ), (1, ))
    assert_size_stride(primals_252, (128, ), (1, ))
    assert_size_stride(primals_253, (128, ), (1, ))
    assert_size_stride(primals_254, (128, ), (1, ))
    assert_size_stride(primals_255, (128, ), (1, ))
    assert_size_stride(primals_256, (128, ), (1, ))
    assert_size_stride(primals_257, (512, ), (1, ))
    assert_size_stride(primals_258, (512, ), (1, ))
    assert_size_stride(primals_259, (128, ), (1, ))
    assert_size_stride(primals_260, (128, ), (1, ))
    assert_size_stride(primals_261, (128, ), (1, ))
    assert_size_stride(primals_262, (128, ), (1, ))
    assert_size_stride(primals_263, (128, ), (1, ))
    assert_size_stride(primals_264, (128, ), (1, ))
    assert_size_stride(primals_265, (128, ), (1, ))
    assert_size_stride(primals_266, (128, ), (1, ))
    assert_size_stride(primals_267, (128, ), (1, ))
    assert_size_stride(primals_268, (128, ), (1, ))
    assert_size_stride(primals_269, (128, ), (1, ))
    assert_size_stride(primals_270, (128, ), (1, ))
    assert_size_stride(primals_271, (128, ), (1, ))
    assert_size_stride(primals_272, (128, ), (1, ))
    assert_size_stride(primals_273, (512, ), (1, ))
    assert_size_stride(primals_274, (512, ), (1, ))
    assert_size_stride(primals_275, (128, ), (1, ))
    assert_size_stride(primals_276, (128, ), (1, ))
    assert_size_stride(primals_277, (128, ), (1, ))
    assert_size_stride(primals_278, (128, ), (1, ))
    assert_size_stride(primals_279, (128, ), (1, ))
    assert_size_stride(primals_280, (128, ), (1, ))
    assert_size_stride(primals_281, (128, ), (1, ))
    assert_size_stride(primals_282, (128, ), (1, ))
    assert_size_stride(primals_283, (128, ), (1, ))
    assert_size_stride(primals_284, (128, ), (1, ))
    assert_size_stride(primals_285, (128, ), (1, ))
    assert_size_stride(primals_286, (128, ), (1, ))
    assert_size_stride(primals_287, (128, ), (1, ))
    assert_size_stride(primals_288, (128, ), (1, ))
    assert_size_stride(primals_289, (512, ), (1, ))
    assert_size_stride(primals_290, (512, ), (1, ))
    assert_size_stride(primals_291, (128, ), (1, ))
    assert_size_stride(primals_292, (128, ), (1, ))
    assert_size_stride(primals_293, (128, ), (1, ))
    assert_size_stride(primals_294, (128, ), (1, ))
    assert_size_stride(primals_295, (128, ), (1, ))
    assert_size_stride(primals_296, (128, ), (1, ))
    assert_size_stride(primals_297, (128, ), (1, ))
    assert_size_stride(primals_298, (128, ), (1, ))
    assert_size_stride(primals_299, (128, ), (1, ))
    assert_size_stride(primals_300, (128, ), (1, ))
    assert_size_stride(primals_301, (128, ), (1, ))
    assert_size_stride(primals_302, (128, ), (1, ))
    assert_size_stride(primals_303, (128, ), (1, ))
    assert_size_stride(primals_304, (128, ), (1, ))
    assert_size_stride(primals_305, (512, ), (1, ))
    assert_size_stride(primals_306, (512, ), (1, ))
    assert_size_stride(primals_307, (128, ), (1, ))
    assert_size_stride(primals_308, (128, ), (1, ))
    assert_size_stride(primals_309, (128, ), (1, ))
    assert_size_stride(primals_310, (128, ), (1, ))
    assert_size_stride(primals_311, (128, ), (1, ))
    assert_size_stride(primals_312, (128, ), (1, ))
    assert_size_stride(primals_313, (128, ), (1, ))
    assert_size_stride(primals_314, (128, ), (1, ))
    assert_size_stride(primals_315, (128, ), (1, ))
    assert_size_stride(primals_316, (128, ), (1, ))
    assert_size_stride(primals_317, (128, ), (1, ))
    assert_size_stride(primals_318, (128, ), (1, ))
    assert_size_stride(primals_319, (128, ), (1, ))
    assert_size_stride(primals_320, (128, ), (1, ))
    assert_size_stride(primals_321, (512, ), (1, ))
    assert_size_stride(primals_322, (512, ), (1, ))
    assert_size_stride(primals_323, (128, ), (1, ))
    assert_size_stride(primals_324, (128, ), (1, ))
    assert_size_stride(primals_325, (128, ), (1, ))
    assert_size_stride(primals_326, (128, ), (1, ))
    assert_size_stride(primals_327, (128, ), (1, ))
    assert_size_stride(primals_328, (128, ), (1, ))
    assert_size_stride(primals_329, (128, ), (1, ))
    assert_size_stride(primals_330, (128, ), (1, ))
    assert_size_stride(primals_331, (128, ), (1, ))
    assert_size_stride(primals_332, (128, ), (1, ))
    assert_size_stride(primals_333, (128, ), (1, ))
    assert_size_stride(primals_334, (128, ), (1, ))
    assert_size_stride(primals_335, (128, ), (1, ))
    assert_size_stride(primals_336, (128, ), (1, ))
    assert_size_stride(primals_337, (512, ), (1, ))
    assert_size_stride(primals_338, (512, ), (1, ))
    assert_size_stride(primals_339, (128, ), (1, ))
    assert_size_stride(primals_340, (128, ), (1, ))
    assert_size_stride(primals_341, (128, ), (1, ))
    assert_size_stride(primals_342, (128, ), (1, ))
    assert_size_stride(primals_343, (128, ), (1, ))
    assert_size_stride(primals_344, (128, ), (1, ))
    assert_size_stride(primals_345, (128, ), (1, ))
    assert_size_stride(primals_346, (128, ), (1, ))
    assert_size_stride(primals_347, (128, ), (1, ))
    assert_size_stride(primals_348, (128, ), (1, ))
    assert_size_stride(primals_349, (128, ), (1, ))
    assert_size_stride(primals_350, (128, ), (1, ))
    assert_size_stride(primals_351, (128, ), (1, ))
    assert_size_stride(primals_352, (128, ), (1, ))
    assert_size_stride(primals_353, (512, ), (1, ))
    assert_size_stride(primals_354, (512, ), (1, ))
    assert_size_stride(primals_355, (128, ), (1, ))
    assert_size_stride(primals_356, (128, ), (1, ))
    assert_size_stride(primals_357, (128, ), (1, ))
    assert_size_stride(primals_358, (128, ), (1, ))
    assert_size_stride(primals_359, (128, ), (1, ))
    assert_size_stride(primals_360, (128, ), (1, ))
    assert_size_stride(primals_361, (128, ), (1, ))
    assert_size_stride(primals_362, (128, ), (1, ))
    assert_size_stride(primals_363, (128, ), (1, ))
    assert_size_stride(primals_364, (128, ), (1, ))
    assert_size_stride(primals_365, (128, ), (1, ))
    assert_size_stride(primals_366, (128, ), (1, ))
    assert_size_stride(primals_367, (128, ), (1, ))
    assert_size_stride(primals_368, (128, ), (1, ))
    assert_size_stride(primals_369, (512, ), (1, ))
    assert_size_stride(primals_370, (512, ), (1, ))
    assert_size_stride(primals_371, (128, ), (1, ))
    assert_size_stride(primals_372, (128, ), (1, ))
    assert_size_stride(primals_373, (128, ), (1, ))
    assert_size_stride(primals_374, (128, ), (1, ))
    assert_size_stride(primals_375, (128, ), (1, ))
    assert_size_stride(primals_376, (128, ), (1, ))
    assert_size_stride(primals_377, (128, ), (1, ))
    assert_size_stride(primals_378, (128, ), (1, ))
    assert_size_stride(primals_379, (128, ), (1, ))
    assert_size_stride(primals_380, (128, ), (1, ))
    assert_size_stride(primals_381, (128, ), (1, ))
    assert_size_stride(primals_382, (128, ), (1, ))
    assert_size_stride(primals_383, (128, ), (1, ))
    assert_size_stride(primals_384, (128, ), (1, ))
    assert_size_stride(primals_385, (512, ), (1, ))
    assert_size_stride(primals_386, (512, ), (1, ))
    assert_size_stride(primals_387, (30522, 128), (128, 1))
    assert_size_stride(primals_388, (384, 30522), (30522, 1))
    assert_size_stride(primals_389, (30522, ), (1, ))
    assert_size_stride(primals_390, (30522, 128), (128, 1))
    assert_size_stride(primals_391, (512, 384), (384, 1))
    assert_size_stride(primals_392, (512, ), (1, ))
    assert_size_stride(primals_393, (512, 512), (512, 1))
    assert_size_stride(primals_394, (2, 512), (512, 1))
    assert_size_stride(primals_395, (128, 512), (512, 1))
    assert_size_stride(primals_396, (128, ), (1, ))
    assert_size_stride(primals_397, (128, 512), (512, 1))
    assert_size_stride(primals_398, (128, ), (1, ))
    assert_size_stride(primals_399, (128, 128), (128, 1))
    assert_size_stride(primals_400, (128, ), (1, ))
    assert_size_stride(primals_401, (128, 128), (128, 1))
    assert_size_stride(primals_402, (128, ), (1, ))
    assert_size_stride(primals_403, (128, 512), (512, 1))
    assert_size_stride(primals_404, (128, ), (1, ))
    assert_size_stride(primals_405, (128, 128), (128, 1))
    assert_size_stride(primals_406, (128, ), (1, ))
    assert_size_stride(primals_407, (512, 128), (128, 1))
    assert_size_stride(primals_408, (512, ), (1, ))
    assert_size_stride(primals_409, (128, 512), (512, 1))
    assert_size_stride(primals_410, (128, ), (1, ))
    assert_size_stride(primals_411, (512, 128), (128, 1))
    assert_size_stride(primals_412, (512, ), (1, ))
    assert_size_stride(primals_413, (128, 512), (512, 1))
    assert_size_stride(primals_414, (128, ), (1, ))
    assert_size_stride(primals_415, (512, 128), (128, 1))
    assert_size_stride(primals_416, (512, ), (1, ))
    assert_size_stride(primals_417, (128, 512), (512, 1))
    assert_size_stride(primals_418, (128, ), (1, ))
    assert_size_stride(primals_419, (512, 128), (128, 1))
    assert_size_stride(primals_420, (512, ), (1, ))
    assert_size_stride(primals_421, (128, 512), (512, 1))
    assert_size_stride(primals_422, (128, ), (1, ))
    assert_size_stride(primals_423, (512, 128), (128, 1))
    assert_size_stride(primals_424, (512, ), (1, ))
    assert_size_stride(primals_425, (128, 512), (512, 1))
    assert_size_stride(primals_426, (128, ), (1, ))
    assert_size_stride(primals_427, (128, 512), (512, 1))
    assert_size_stride(primals_428, (128, ), (1, ))
    assert_size_stride(primals_429, (128, 128), (128, 1))
    assert_size_stride(primals_430, (128, ), (1, ))
    assert_size_stride(primals_431, (128, 128), (128, 1))
    assert_size_stride(primals_432, (128, ), (1, ))
    assert_size_stride(primals_433, (128, 512), (512, 1))
    assert_size_stride(primals_434, (128, ), (1, ))
    assert_size_stride(primals_435, (128, 128), (128, 1))
    assert_size_stride(primals_436, (128, ), (1, ))
    assert_size_stride(primals_437, (512, 128), (128, 1))
    assert_size_stride(primals_438, (512, ), (1, ))
    assert_size_stride(primals_439, (128, 512), (512, 1))
    assert_size_stride(primals_440, (128, ), (1, ))
    assert_size_stride(primals_441, (512, 128), (128, 1))
    assert_size_stride(primals_442, (512, ), (1, ))
    assert_size_stride(primals_443, (128, 512), (512, 1))
    assert_size_stride(primals_444, (128, ), (1, ))
    assert_size_stride(primals_445, (512, 128), (128, 1))
    assert_size_stride(primals_446, (512, ), (1, ))
    assert_size_stride(primals_447, (128, 512), (512, 1))
    assert_size_stride(primals_448, (128, ), (1, ))
    assert_size_stride(primals_449, (512, 128), (128, 1))
    assert_size_stride(primals_450, (512, ), (1, ))
    assert_size_stride(primals_451, (128, 512), (512, 1))
    assert_size_stride(primals_452, (128, ), (1, ))
    assert_size_stride(primals_453, (512, 128), (128, 1))
    assert_size_stride(primals_454, (512, ), (1, ))
    assert_size_stride(primals_455, (128, 512), (512, 1))
    assert_size_stride(primals_456, (128, ), (1, ))
    assert_size_stride(primals_457, (128, 512), (512, 1))
    assert_size_stride(primals_458, (128, ), (1, ))
    assert_size_stride(primals_459, (128, 128), (128, 1))
    assert_size_stride(primals_460, (128, ), (1, ))
    assert_size_stride(primals_461, (128, 128), (128, 1))
    assert_size_stride(primals_462, (128, ), (1, ))
    assert_size_stride(primals_463, (128, 512), (512, 1))
    assert_size_stride(primals_464, (128, ), (1, ))
    assert_size_stride(primals_465, (128, 128), (128, 1))
    assert_size_stride(primals_466, (128, ), (1, ))
    assert_size_stride(primals_467, (512, 128), (128, 1))
    assert_size_stride(primals_468, (512, ), (1, ))
    assert_size_stride(primals_469, (128, 512), (512, 1))
    assert_size_stride(primals_470, (128, ), (1, ))
    assert_size_stride(primals_471, (512, 128), (128, 1))
    assert_size_stride(primals_472, (512, ), (1, ))
    assert_size_stride(primals_473, (128, 512), (512, 1))
    assert_size_stride(primals_474, (128, ), (1, ))
    assert_size_stride(primals_475, (512, 128), (128, 1))
    assert_size_stride(primals_476, (512, ), (1, ))
    assert_size_stride(primals_477, (128, 512), (512, 1))
    assert_size_stride(primals_478, (128, ), (1, ))
    assert_size_stride(primals_479, (512, 128), (128, 1))
    assert_size_stride(primals_480, (512, ), (1, ))
    assert_size_stride(primals_481, (128, 512), (512, 1))
    assert_size_stride(primals_482, (128, ), (1, ))
    assert_size_stride(primals_483, (512, 128), (128, 1))
    assert_size_stride(primals_484, (512, ), (1, ))
    assert_size_stride(primals_485, (128, 512), (512, 1))
    assert_size_stride(primals_486, (128, ), (1, ))
    assert_size_stride(primals_487, (128, 512), (512, 1))
    assert_size_stride(primals_488, (128, ), (1, ))
    assert_size_stride(primals_489, (128, 128), (128, 1))
    assert_size_stride(primals_490, (128, ), (1, ))
    assert_size_stride(primals_491, (128, 128), (128, 1))
    assert_size_stride(primals_492, (128, ), (1, ))
    assert_size_stride(primals_493, (128, 512), (512, 1))
    assert_size_stride(primals_494, (128, ), (1, ))
    assert_size_stride(primals_495, (128, 128), (128, 1))
    assert_size_stride(primals_496, (128, ), (1, ))
    assert_size_stride(primals_497, (512, 128), (128, 1))
    assert_size_stride(primals_498, (512, ), (1, ))
    assert_size_stride(primals_499, (128, 512), (512, 1))
    assert_size_stride(primals_500, (128, ), (1, ))
    assert_size_stride(primals_501, (512, 128), (128, 1))
    assert_size_stride(primals_502, (512, ), (1, ))
    assert_size_stride(primals_503, (128, 512), (512, 1))
    assert_size_stride(primals_504, (128, ), (1, ))
    assert_size_stride(primals_505, (512, 128), (128, 1))
    assert_size_stride(primals_506, (512, ), (1, ))
    assert_size_stride(primals_507, (128, 512), (512, 1))
    assert_size_stride(primals_508, (128, ), (1, ))
    assert_size_stride(primals_509, (512, 128), (128, 1))
    assert_size_stride(primals_510, (512, ), (1, ))
    assert_size_stride(primals_511, (128, 512), (512, 1))
    assert_size_stride(primals_512, (128, ), (1, ))
    assert_size_stride(primals_513, (512, 128), (128, 1))
    assert_size_stride(primals_514, (512, ), (1, ))
    assert_size_stride(primals_515, (128, 512), (512, 1))
    assert_size_stride(primals_516, (128, ), (1, ))
    assert_size_stride(primals_517, (128, 512), (512, 1))
    assert_size_stride(primals_518, (128, ), (1, ))
    assert_size_stride(primals_519, (128, 128), (128, 1))
    assert_size_stride(primals_520, (128, ), (1, ))
    assert_size_stride(primals_521, (128, 128), (128, 1))
    assert_size_stride(primals_522, (128, ), (1, ))
    assert_size_stride(primals_523, (128, 512), (512, 1))
    assert_size_stride(primals_524, (128, ), (1, ))
    assert_size_stride(primals_525, (128, 128), (128, 1))
    assert_size_stride(primals_526, (128, ), (1, ))
    assert_size_stride(primals_527, (512, 128), (128, 1))
    assert_size_stride(primals_528, (512, ), (1, ))
    assert_size_stride(primals_529, (128, 512), (512, 1))
    assert_size_stride(primals_530, (128, ), (1, ))
    assert_size_stride(primals_531, (512, 128), (128, 1))
    assert_size_stride(primals_532, (512, ), (1, ))
    assert_size_stride(primals_533, (128, 512), (512, 1))
    assert_size_stride(primals_534, (128, ), (1, ))
    assert_size_stride(primals_535, (512, 128), (128, 1))
    assert_size_stride(primals_536, (512, ), (1, ))
    assert_size_stride(primals_537, (128, 512), (512, 1))
    assert_size_stride(primals_538, (128, ), (1, ))
    assert_size_stride(primals_539, (512, 128), (128, 1))
    assert_size_stride(primals_540, (512, ), (1, ))
    assert_size_stride(primals_541, (128, 512), (512, 1))
    assert_size_stride(primals_542, (128, ), (1, ))
    assert_size_stride(primals_543, (512, 128), (128, 1))
    assert_size_stride(primals_544, (512, ), (1, ))
    assert_size_stride(primals_545, (128, 512), (512, 1))
    assert_size_stride(primals_546, (128, ), (1, ))
    assert_size_stride(primals_547, (128, 512), (512, 1))
    assert_size_stride(primals_548, (128, ), (1, ))
    assert_size_stride(primals_549, (128, 128), (128, 1))
    assert_size_stride(primals_550, (128, ), (1, ))
    assert_size_stride(primals_551, (128, 128), (128, 1))
    assert_size_stride(primals_552, (128, ), (1, ))
    assert_size_stride(primals_553, (128, 512), (512, 1))
    assert_size_stride(primals_554, (128, ), (1, ))
    assert_size_stride(primals_555, (128, 128), (128, 1))
    assert_size_stride(primals_556, (128, ), (1, ))
    assert_size_stride(primals_557, (512, 128), (128, 1))
    assert_size_stride(primals_558, (512, ), (1, ))
    assert_size_stride(primals_559, (128, 512), (512, 1))
    assert_size_stride(primals_560, (128, ), (1, ))
    assert_size_stride(primals_561, (512, 128), (128, 1))
    assert_size_stride(primals_562, (512, ), (1, ))
    assert_size_stride(primals_563, (128, 512), (512, 1))
    assert_size_stride(primals_564, (128, ), (1, ))
    assert_size_stride(primals_565, (512, 128), (128, 1))
    assert_size_stride(primals_566, (512, ), (1, ))
    assert_size_stride(primals_567, (128, 512), (512, 1))
    assert_size_stride(primals_568, (128, ), (1, ))
    assert_size_stride(primals_569, (512, 128), (128, 1))
    assert_size_stride(primals_570, (512, ), (1, ))
    assert_size_stride(primals_571, (128, 512), (512, 1))
    assert_size_stride(primals_572, (128, ), (1, ))
    assert_size_stride(primals_573, (512, 128), (128, 1))
    assert_size_stride(primals_574, (512, ), (1, ))
    assert_size_stride(primals_575, (128, 512), (512, 1))
    assert_size_stride(primals_576, (128, ), (1, ))
    assert_size_stride(primals_577, (128, 512), (512, 1))
    assert_size_stride(primals_578, (128, ), (1, ))
    assert_size_stride(primals_579, (128, 128), (128, 1))
    assert_size_stride(primals_580, (128, ), (1, ))
    assert_size_stride(primals_581, (128, 128), (128, 1))
    assert_size_stride(primals_582, (128, ), (1, ))
    assert_size_stride(primals_583, (128, 512), (512, 1))
    assert_size_stride(primals_584, (128, ), (1, ))
    assert_size_stride(primals_585, (128, 128), (128, 1))
    assert_size_stride(primals_586, (128, ), (1, ))
    assert_size_stride(primals_587, (512, 128), (128, 1))
    assert_size_stride(primals_588, (512, ), (1, ))
    assert_size_stride(primals_589, (128, 512), (512, 1))
    assert_size_stride(primals_590, (128, ), (1, ))
    assert_size_stride(primals_591, (512, 128), (128, 1))
    assert_size_stride(primals_592, (512, ), (1, ))
    assert_size_stride(primals_593, (128, 512), (512, 1))
    assert_size_stride(primals_594, (128, ), (1, ))
    assert_size_stride(primals_595, (512, 128), (128, 1))
    assert_size_stride(primals_596, (512, ), (1, ))
    assert_size_stride(primals_597, (128, 512), (512, 1))
    assert_size_stride(primals_598, (128, ), (1, ))
    assert_size_stride(primals_599, (512, 128), (128, 1))
    assert_size_stride(primals_600, (512, ), (1, ))
    assert_size_stride(primals_601, (128, 512), (512, 1))
    assert_size_stride(primals_602, (128, ), (1, ))
    assert_size_stride(primals_603, (512, 128), (128, 1))
    assert_size_stride(primals_604, (512, ), (1, ))
    assert_size_stride(primals_605, (128, 512), (512, 1))
    assert_size_stride(primals_606, (128, ), (1, ))
    assert_size_stride(primals_607, (128, 512), (512, 1))
    assert_size_stride(primals_608, (128, ), (1, ))
    assert_size_stride(primals_609, (128, 128), (128, 1))
    assert_size_stride(primals_610, (128, ), (1, ))
    assert_size_stride(primals_611, (128, 128), (128, 1))
    assert_size_stride(primals_612, (128, ), (1, ))
    assert_size_stride(primals_613, (128, 512), (512, 1))
    assert_size_stride(primals_614, (128, ), (1, ))
    assert_size_stride(primals_615, (128, 128), (128, 1))
    assert_size_stride(primals_616, (128, ), (1, ))
    assert_size_stride(primals_617, (512, 128), (128, 1))
    assert_size_stride(primals_618, (512, ), (1, ))
    assert_size_stride(primals_619, (128, 512), (512, 1))
    assert_size_stride(primals_620, (128, ), (1, ))
    assert_size_stride(primals_621, (512, 128), (128, 1))
    assert_size_stride(primals_622, (512, ), (1, ))
    assert_size_stride(primals_623, (128, 512), (512, 1))
    assert_size_stride(primals_624, (128, ), (1, ))
    assert_size_stride(primals_625, (512, 128), (128, 1))
    assert_size_stride(primals_626, (512, ), (1, ))
    assert_size_stride(primals_627, (128, 512), (512, 1))
    assert_size_stride(primals_628, (128, ), (1, ))
    assert_size_stride(primals_629, (512, 128), (128, 1))
    assert_size_stride(primals_630, (512, ), (1, ))
    assert_size_stride(primals_631, (128, 512), (512, 1))
    assert_size_stride(primals_632, (128, ), (1, ))
    assert_size_stride(primals_633, (512, 128), (128, 1))
    assert_size_stride(primals_634, (512, ), (1, ))
    assert_size_stride(primals_635, (128, 512), (512, 1))
    assert_size_stride(primals_636, (128, ), (1, ))
    assert_size_stride(primals_637, (128, 512), (512, 1))
    assert_size_stride(primals_638, (128, ), (1, ))
    assert_size_stride(primals_639, (128, 128), (128, 1))
    assert_size_stride(primals_640, (128, ), (1, ))
    assert_size_stride(primals_641, (128, 128), (128, 1))
    assert_size_stride(primals_642, (128, ), (1, ))
    assert_size_stride(primals_643, (128, 512), (512, 1))
    assert_size_stride(primals_644, (128, ), (1, ))
    assert_size_stride(primals_645, (128, 128), (128, 1))
    assert_size_stride(primals_646, (128, ), (1, ))
    assert_size_stride(primals_647, (512, 128), (128, 1))
    assert_size_stride(primals_648, (512, ), (1, ))
    assert_size_stride(primals_649, (128, 512), (512, 1))
    assert_size_stride(primals_650, (128, ), (1, ))
    assert_size_stride(primals_651, (512, 128), (128, 1))
    assert_size_stride(primals_652, (512, ), (1, ))
    assert_size_stride(primals_653, (128, 512), (512, 1))
    assert_size_stride(primals_654, (128, ), (1, ))
    assert_size_stride(primals_655, (512, 128), (128, 1))
    assert_size_stride(primals_656, (512, ), (1, ))
    assert_size_stride(primals_657, (128, 512), (512, 1))
    assert_size_stride(primals_658, (128, ), (1, ))
    assert_size_stride(primals_659, (512, 128), (128, 1))
    assert_size_stride(primals_660, (512, ), (1, ))
    assert_size_stride(primals_661, (128, 512), (512, 1))
    assert_size_stride(primals_662, (128, ), (1, ))
    assert_size_stride(primals_663, (512, 128), (128, 1))
    assert_size_stride(primals_664, (512, ), (1, ))
    assert_size_stride(primals_665, (128, 512), (512, 1))
    assert_size_stride(primals_666, (128, ), (1, ))
    assert_size_stride(primals_667, (128, 512), (512, 1))
    assert_size_stride(primals_668, (128, ), (1, ))
    assert_size_stride(primals_669, (128, 128), (128, 1))
    assert_size_stride(primals_670, (128, ), (1, ))
    assert_size_stride(primals_671, (128, 128), (128, 1))
    assert_size_stride(primals_672, (128, ), (1, ))
    assert_size_stride(primals_673, (128, 512), (512, 1))
    assert_size_stride(primals_674, (128, ), (1, ))
    assert_size_stride(primals_675, (128, 128), (128, 1))
    assert_size_stride(primals_676, (128, ), (1, ))
    assert_size_stride(primals_677, (512, 128), (128, 1))
    assert_size_stride(primals_678, (512, ), (1, ))
    assert_size_stride(primals_679, (128, 512), (512, 1))
    assert_size_stride(primals_680, (128, ), (1, ))
    assert_size_stride(primals_681, (512, 128), (128, 1))
    assert_size_stride(primals_682, (512, ), (1, ))
    assert_size_stride(primals_683, (128, 512), (512, 1))
    assert_size_stride(primals_684, (128, ), (1, ))
    assert_size_stride(primals_685, (512, 128), (128, 1))
    assert_size_stride(primals_686, (512, ), (1, ))
    assert_size_stride(primals_687, (128, 512), (512, 1))
    assert_size_stride(primals_688, (128, ), (1, ))
    assert_size_stride(primals_689, (512, 128), (128, 1))
    assert_size_stride(primals_690, (512, ), (1, ))
    assert_size_stride(primals_691, (128, 512), (512, 1))
    assert_size_stride(primals_692, (128, ), (1, ))
    assert_size_stride(primals_693, (512, 128), (128, 1))
    assert_size_stride(primals_694, (512, ), (1, ))
    assert_size_stride(primals_695, (128, 512), (512, 1))
    assert_size_stride(primals_696, (128, ), (1, ))
    assert_size_stride(primals_697, (128, 512), (512, 1))
    assert_size_stride(primals_698, (128, ), (1, ))
    assert_size_stride(primals_699, (128, 128), (128, 1))
    assert_size_stride(primals_700, (128, ), (1, ))
    assert_size_stride(primals_701, (128, 128), (128, 1))
    assert_size_stride(primals_702, (128, ), (1, ))
    assert_size_stride(primals_703, (128, 512), (512, 1))
    assert_size_stride(primals_704, (128, ), (1, ))
    assert_size_stride(primals_705, (128, 128), (128, 1))
    assert_size_stride(primals_706, (128, ), (1, ))
    assert_size_stride(primals_707, (512, 128), (128, 1))
    assert_size_stride(primals_708, (512, ), (1, ))
    assert_size_stride(primals_709, (128, 512), (512, 1))
    assert_size_stride(primals_710, (128, ), (1, ))
    assert_size_stride(primals_711, (512, 128), (128, 1))
    assert_size_stride(primals_712, (512, ), (1, ))
    assert_size_stride(primals_713, (128, 512), (512, 1))
    assert_size_stride(primals_714, (128, ), (1, ))
    assert_size_stride(primals_715, (512, 128), (128, 1))
    assert_size_stride(primals_716, (512, ), (1, ))
    assert_size_stride(primals_717, (128, 512), (512, 1))
    assert_size_stride(primals_718, (128, ), (1, ))
    assert_size_stride(primals_719, (512, 128), (128, 1))
    assert_size_stride(primals_720, (512, ), (1, ))
    assert_size_stride(primals_721, (128, 512), (512, 1))
    assert_size_stride(primals_722, (128, ), (1, ))
    assert_size_stride(primals_723, (512, 128), (128, 1))
    assert_size_stride(primals_724, (512, ), (1, ))
    assert_size_stride(primals_725, (128, 512), (512, 1))
    assert_size_stride(primals_726, (128, ), (1, ))
    assert_size_stride(primals_727, (128, 512), (512, 1))
    assert_size_stride(primals_728, (128, ), (1, ))
    assert_size_stride(primals_729, (128, 128), (128, 1))
    assert_size_stride(primals_730, (128, ), (1, ))
    assert_size_stride(primals_731, (128, 128), (128, 1))
    assert_size_stride(primals_732, (128, ), (1, ))
    assert_size_stride(primals_733, (128, 512), (512, 1))
    assert_size_stride(primals_734, (128, ), (1, ))
    assert_size_stride(primals_735, (128, 128), (128, 1))
    assert_size_stride(primals_736, (128, ), (1, ))
    assert_size_stride(primals_737, (512, 128), (128, 1))
    assert_size_stride(primals_738, (512, ), (1, ))
    assert_size_stride(primals_739, (128, 512), (512, 1))
    assert_size_stride(primals_740, (128, ), (1, ))
    assert_size_stride(primals_741, (512, 128), (128, 1))
    assert_size_stride(primals_742, (512, ), (1, ))
    assert_size_stride(primals_743, (128, 512), (512, 1))
    assert_size_stride(primals_744, (128, ), (1, ))
    assert_size_stride(primals_745, (512, 128), (128, 1))
    assert_size_stride(primals_746, (512, ), (1, ))
    assert_size_stride(primals_747, (128, 512), (512, 1))
    assert_size_stride(primals_748, (128, ), (1, ))
    assert_size_stride(primals_749, (512, 128), (128, 1))
    assert_size_stride(primals_750, (512, ), (1, ))
    assert_size_stride(primals_751, (128, 512), (512, 1))
    assert_size_stride(primals_752, (128, ), (1, ))
    assert_size_stride(primals_753, (512, 128), (128, 1))
    assert_size_stride(primals_754, (512, ), (1, ))
    assert_size_stride(primals_755, (128, 512), (512, 1))
    assert_size_stride(primals_756, (128, ), (1, ))
    assert_size_stride(primals_757, (128, 512), (512, 1))
    assert_size_stride(primals_758, (128, ), (1, ))
    assert_size_stride(primals_759, (128, 128), (128, 1))
    assert_size_stride(primals_760, (128, ), (1, ))
    assert_size_stride(primals_761, (128, 128), (128, 1))
    assert_size_stride(primals_762, (128, ), (1, ))
    assert_size_stride(primals_763, (128, 512), (512, 1))
    assert_size_stride(primals_764, (128, ), (1, ))
    assert_size_stride(primals_765, (128, 128), (128, 1))
    assert_size_stride(primals_766, (128, ), (1, ))
    assert_size_stride(primals_767, (512, 128), (128, 1))
    assert_size_stride(primals_768, (512, ), (1, ))
    assert_size_stride(primals_769, (128, 512), (512, 1))
    assert_size_stride(primals_770, (128, ), (1, ))
    assert_size_stride(primals_771, (512, 128), (128, 1))
    assert_size_stride(primals_772, (512, ), (1, ))
    assert_size_stride(primals_773, (128, 512), (512, 1))
    assert_size_stride(primals_774, (128, ), (1, ))
    assert_size_stride(primals_775, (512, 128), (128, 1))
    assert_size_stride(primals_776, (512, ), (1, ))
    assert_size_stride(primals_777, (128, 512), (512, 1))
    assert_size_stride(primals_778, (128, ), (1, ))
    assert_size_stride(primals_779, (512, 128), (128, 1))
    assert_size_stride(primals_780, (512, ), (1, ))
    assert_size_stride(primals_781, (128, 512), (512, 1))
    assert_size_stride(primals_782, (128, ), (1, ))
    assert_size_stride(primals_783, (512, 128), (128, 1))
    assert_size_stride(primals_784, (512, ), (1, ))
    assert_size_stride(primals_785, (128, 512), (512, 1))
    assert_size_stride(primals_786, (128, ), (1, ))
    assert_size_stride(primals_787, (128, 512), (512, 1))
    assert_size_stride(primals_788, (128, ), (1, ))
    assert_size_stride(primals_789, (128, 128), (128, 1))
    assert_size_stride(primals_790, (128, ), (1, ))
    assert_size_stride(primals_791, (128, 128), (128, 1))
    assert_size_stride(primals_792, (128, ), (1, ))
    assert_size_stride(primals_793, (128, 512), (512, 1))
    assert_size_stride(primals_794, (128, ), (1, ))
    assert_size_stride(primals_795, (128, 128), (128, 1))
    assert_size_stride(primals_796, (128, ), (1, ))
    assert_size_stride(primals_797, (512, 128), (128, 1))
    assert_size_stride(primals_798, (512, ), (1, ))
    assert_size_stride(primals_799, (128, 512), (512, 1))
    assert_size_stride(primals_800, (128, ), (1, ))
    assert_size_stride(primals_801, (512, 128), (128, 1))
    assert_size_stride(primals_802, (512, ), (1, ))
    assert_size_stride(primals_803, (128, 512), (512, 1))
    assert_size_stride(primals_804, (128, ), (1, ))
    assert_size_stride(primals_805, (512, 128), (128, 1))
    assert_size_stride(primals_806, (512, ), (1, ))
    assert_size_stride(primals_807, (128, 512), (512, 1))
    assert_size_stride(primals_808, (128, ), (1, ))
    assert_size_stride(primals_809, (512, 128), (128, 1))
    assert_size_stride(primals_810, (512, ), (1, ))
    assert_size_stride(primals_811, (128, 512), (512, 1))
    assert_size_stride(primals_812, (128, ), (1, ))
    assert_size_stride(primals_813, (512, 128), (128, 1))
    assert_size_stride(primals_814, (512, ), (1, ))
    assert_size_stride(primals_815, (128, 512), (512, 1))
    assert_size_stride(primals_816, (128, ), (1, ))
    assert_size_stride(primals_817, (128, 512), (512, 1))
    assert_size_stride(primals_818, (128, ), (1, ))
    assert_size_stride(primals_819, (128, 128), (128, 1))
    assert_size_stride(primals_820, (128, ), (1, ))
    assert_size_stride(primals_821, (128, 128), (128, 1))
    assert_size_stride(primals_822, (128, ), (1, ))
    assert_size_stride(primals_823, (128, 512), (512, 1))
    assert_size_stride(primals_824, (128, ), (1, ))
    assert_size_stride(primals_825, (128, 128), (128, 1))
    assert_size_stride(primals_826, (128, ), (1, ))
    assert_size_stride(primals_827, (512, 128), (128, 1))
    assert_size_stride(primals_828, (512, ), (1, ))
    assert_size_stride(primals_829, (128, 512), (512, 1))
    assert_size_stride(primals_830, (128, ), (1, ))
    assert_size_stride(primals_831, (512, 128), (128, 1))
    assert_size_stride(primals_832, (512, ), (1, ))
    assert_size_stride(primals_833, (128, 512), (512, 1))
    assert_size_stride(primals_834, (128, ), (1, ))
    assert_size_stride(primals_835, (512, 128), (128, 1))
    assert_size_stride(primals_836, (512, ), (1, ))
    assert_size_stride(primals_837, (128, 512), (512, 1))
    assert_size_stride(primals_838, (128, ), (1, ))
    assert_size_stride(primals_839, (512, 128), (128, 1))
    assert_size_stride(primals_840, (512, ), (1, ))
    assert_size_stride(primals_841, (128, 512), (512, 1))
    assert_size_stride(primals_842, (128, ), (1, ))
    assert_size_stride(primals_843, (512, 128), (128, 1))
    assert_size_stride(primals_844, (512, ), (1, ))
    assert_size_stride(primals_845, (128, 512), (512, 1))
    assert_size_stride(primals_846, (128, ), (1, ))
    assert_size_stride(primals_847, (128, 512), (512, 1))
    assert_size_stride(primals_848, (128, ), (1, ))
    assert_size_stride(primals_849, (128, 128), (128, 1))
    assert_size_stride(primals_850, (128, ), (1, ))
    assert_size_stride(primals_851, (128, 128), (128, 1))
    assert_size_stride(primals_852, (128, ), (1, ))
    assert_size_stride(primals_853, (128, 512), (512, 1))
    assert_size_stride(primals_854, (128, ), (1, ))
    assert_size_stride(primals_855, (128, 128), (128, 1))
    assert_size_stride(primals_856, (128, ), (1, ))
    assert_size_stride(primals_857, (512, 128), (128, 1))
    assert_size_stride(primals_858, (512, ), (1, ))
    assert_size_stride(primals_859, (128, 512), (512, 1))
    assert_size_stride(primals_860, (128, ), (1, ))
    assert_size_stride(primals_861, (512, 128), (128, 1))
    assert_size_stride(primals_862, (512, ), (1, ))
    assert_size_stride(primals_863, (128, 512), (512, 1))
    assert_size_stride(primals_864, (128, ), (1, ))
    assert_size_stride(primals_865, (512, 128), (128, 1))
    assert_size_stride(primals_866, (512, ), (1, ))
    assert_size_stride(primals_867, (128, 512), (512, 1))
    assert_size_stride(primals_868, (128, ), (1, ))
    assert_size_stride(primals_869, (512, 128), (128, 1))
    assert_size_stride(primals_870, (512, ), (1, ))
    assert_size_stride(primals_871, (128, 512), (512, 1))
    assert_size_stride(primals_872, (128, ), (1, ))
    assert_size_stride(primals_873, (512, 128), (128, 1))
    assert_size_stride(primals_874, (512, ), (1, ))
    assert_size_stride(primals_875, (128, 512), (512, 1))
    assert_size_stride(primals_876, (128, ), (1, ))
    assert_size_stride(primals_877, (128, 512), (512, 1))
    assert_size_stride(primals_878, (128, ), (1, ))
    assert_size_stride(primals_879, (128, 128), (128, 1))
    assert_size_stride(primals_880, (128, ), (1, ))
    assert_size_stride(primals_881, (128, 128), (128, 1))
    assert_size_stride(primals_882, (128, ), (1, ))
    assert_size_stride(primals_883, (128, 512), (512, 1))
    assert_size_stride(primals_884, (128, ), (1, ))
    assert_size_stride(primals_885, (128, 128), (128, 1))
    assert_size_stride(primals_886, (128, ), (1, ))
    assert_size_stride(primals_887, (512, 128), (128, 1))
    assert_size_stride(primals_888, (512, ), (1, ))
    assert_size_stride(primals_889, (128, 512), (512, 1))
    assert_size_stride(primals_890, (128, ), (1, ))
    assert_size_stride(primals_891, (512, 128), (128, 1))
    assert_size_stride(primals_892, (512, ), (1, ))
    assert_size_stride(primals_893, (128, 512), (512, 1))
    assert_size_stride(primals_894, (128, ), (1, ))
    assert_size_stride(primals_895, (512, 128), (128, 1))
    assert_size_stride(primals_896, (512, ), (1, ))
    assert_size_stride(primals_897, (128, 512), (512, 1))
    assert_size_stride(primals_898, (128, ), (1, ))
    assert_size_stride(primals_899, (512, 128), (128, 1))
    assert_size_stride(primals_900, (512, ), (1, ))
    assert_size_stride(primals_901, (128, 512), (512, 1))
    assert_size_stride(primals_902, (128, ), (1, ))
    assert_size_stride(primals_903, (512, 128), (128, 1))
    assert_size_stride(primals_904, (512, ), (1, ))
    assert_size_stride(primals_905, (128, 512), (512, 1))
    assert_size_stride(primals_906, (128, ), (1, ))
    assert_size_stride(primals_907, (128, 512), (512, 1))
    assert_size_stride(primals_908, (128, ), (1, ))
    assert_size_stride(primals_909, (128, 128), (128, 1))
    assert_size_stride(primals_910, (128, ), (1, ))
    assert_size_stride(primals_911, (128, 128), (128, 1))
    assert_size_stride(primals_912, (128, ), (1, ))
    assert_size_stride(primals_913, (128, 512), (512, 1))
    assert_size_stride(primals_914, (128, ), (1, ))
    assert_size_stride(primals_915, (128, 128), (128, 1))
    assert_size_stride(primals_916, (128, ), (1, ))
    assert_size_stride(primals_917, (512, 128), (128, 1))
    assert_size_stride(primals_918, (512, ), (1, ))
    assert_size_stride(primals_919, (128, 512), (512, 1))
    assert_size_stride(primals_920, (128, ), (1, ))
    assert_size_stride(primals_921, (512, 128), (128, 1))
    assert_size_stride(primals_922, (512, ), (1, ))
    assert_size_stride(primals_923, (128, 512), (512, 1))
    assert_size_stride(primals_924, (128, ), (1, ))
    assert_size_stride(primals_925, (512, 128), (128, 1))
    assert_size_stride(primals_926, (512, ), (1, ))
    assert_size_stride(primals_927, (128, 512), (512, 1))
    assert_size_stride(primals_928, (128, ), (1, ))
    assert_size_stride(primals_929, (512, 128), (128, 1))
    assert_size_stride(primals_930, (512, ), (1, ))
    assert_size_stride(primals_931, (128, 512), (512, 1))
    assert_size_stride(primals_932, (128, ), (1, ))
    assert_size_stride(primals_933, (512, 128), (128, 1))
    assert_size_stride(primals_934, (512, ), (1, ))
    assert_size_stride(primals_935, (128, 512), (512, 1))
    assert_size_stride(primals_936, (128, ), (1, ))
    assert_size_stride(primals_937, (128, 512), (512, 1))
    assert_size_stride(primals_938, (128, ), (1, ))
    assert_size_stride(primals_939, (128, 128), (128, 1))
    assert_size_stride(primals_940, (128, ), (1, ))
    assert_size_stride(primals_941, (128, 128), (128, 1))
    assert_size_stride(primals_942, (128, ), (1, ))
    assert_size_stride(primals_943, (128, 512), (512, 1))
    assert_size_stride(primals_944, (128, ), (1, ))
    assert_size_stride(primals_945, (128, 128), (128, 1))
    assert_size_stride(primals_946, (128, ), (1, ))
    assert_size_stride(primals_947, (512, 128), (128, 1))
    assert_size_stride(primals_948, (512, ), (1, ))
    assert_size_stride(primals_949, (128, 512), (512, 1))
    assert_size_stride(primals_950, (128, ), (1, ))
    assert_size_stride(primals_951, (512, 128), (128, 1))
    assert_size_stride(primals_952, (512, ), (1, ))
    assert_size_stride(primals_953, (128, 512), (512, 1))
    assert_size_stride(primals_954, (128, ), (1, ))
    assert_size_stride(primals_955, (512, 128), (128, 1))
    assert_size_stride(primals_956, (512, ), (1, ))
    assert_size_stride(primals_957, (128, 512), (512, 1))
    assert_size_stride(primals_958, (128, ), (1, ))
    assert_size_stride(primals_959, (512, 128), (128, 1))
    assert_size_stride(primals_960, (512, ), (1, ))
    assert_size_stride(primals_961, (128, 512), (512, 1))
    assert_size_stride(primals_962, (128, ), (1, ))
    assert_size_stride(primals_963, (512, 128), (128, 1))
    assert_size_stride(primals_964, (512, ), (1, ))
    assert_size_stride(primals_965, (128, 512), (512, 1))
    assert_size_stride(primals_966, (128, ), (1, ))
    assert_size_stride(primals_967, (128, 512), (512, 1))
    assert_size_stride(primals_968, (128, ), (1, ))
    assert_size_stride(primals_969, (128, 128), (128, 1))
    assert_size_stride(primals_970, (128, ), (1, ))
    assert_size_stride(primals_971, (128, 128), (128, 1))
    assert_size_stride(primals_972, (128, ), (1, ))
    assert_size_stride(primals_973, (128, 512), (512, 1))
    assert_size_stride(primals_974, (128, ), (1, ))
    assert_size_stride(primals_975, (128, 128), (128, 1))
    assert_size_stride(primals_976, (128, ), (1, ))
    assert_size_stride(primals_977, (512, 128), (128, 1))
    assert_size_stride(primals_978, (512, ), (1, ))
    assert_size_stride(primals_979, (128, 512), (512, 1))
    assert_size_stride(primals_980, (128, ), (1, ))
    assert_size_stride(primals_981, (512, 128), (128, 1))
    assert_size_stride(primals_982, (512, ), (1, ))
    assert_size_stride(primals_983, (128, 512), (512, 1))
    assert_size_stride(primals_984, (128, ), (1, ))
    assert_size_stride(primals_985, (512, 128), (128, 1))
    assert_size_stride(primals_986, (512, ), (1, ))
    assert_size_stride(primals_987, (128, 512), (512, 1))
    assert_size_stride(primals_988, (128, ), (1, ))
    assert_size_stride(primals_989, (512, 128), (128, 1))
    assert_size_stride(primals_990, (512, ), (1, ))
    assert_size_stride(primals_991, (128, 512), (512, 1))
    assert_size_stride(primals_992, (128, ), (1, ))
    assert_size_stride(primals_993, (512, 128), (128, 1))
    assert_size_stride(primals_994, (512, ), (1, ))
    assert_size_stride(primals_995, (128, 512), (512, 1))
    assert_size_stride(primals_996, (128, ), (1, ))
    assert_size_stride(primals_997, (128, 512), (512, 1))
    assert_size_stride(primals_998, (128, ), (1, ))
    assert_size_stride(primals_999, (128, 128), (128, 1))
    assert_size_stride(primals_1000, (128, ), (1, ))
    assert_size_stride(primals_1001, (128, 128), (128, 1))
    assert_size_stride(primals_1002, (128, ), (1, ))
    assert_size_stride(primals_1003, (128, 512), (512, 1))
    assert_size_stride(primals_1004, (128, ), (1, ))
    assert_size_stride(primals_1005, (128, 128), (128, 1))
    assert_size_stride(primals_1006, (128, ), (1, ))
    assert_size_stride(primals_1007, (512, 128), (128, 1))
    assert_size_stride(primals_1008, (512, ), (1, ))
    assert_size_stride(primals_1009, (128, 512), (512, 1))
    assert_size_stride(primals_1010, (128, ), (1, ))
    assert_size_stride(primals_1011, (512, 128), (128, 1))
    assert_size_stride(primals_1012, (512, ), (1, ))
    assert_size_stride(primals_1013, (128, 512), (512, 1))
    assert_size_stride(primals_1014, (128, ), (1, ))
    assert_size_stride(primals_1015, (512, 128), (128, 1))
    assert_size_stride(primals_1016, (512, ), (1, ))
    assert_size_stride(primals_1017, (128, 512), (512, 1))
    assert_size_stride(primals_1018, (128, ), (1, ))
    assert_size_stride(primals_1019, (512, 128), (128, 1))
    assert_size_stride(primals_1020, (512, ), (1, ))
    assert_size_stride(primals_1021, (128, 512), (512, 1))
    assert_size_stride(primals_1022, (128, ), (1, ))
    assert_size_stride(primals_1023, (512, 128), (128, 1))
    assert_size_stride(primals_1024, (512, ), (1, ))
    assert_size_stride(primals_1025, (128, 512), (512, 1))
    assert_size_stride(primals_1026, (128, ), (1, ))
    assert_size_stride(primals_1027, (128, 512), (512, 1))
    assert_size_stride(primals_1028, (128, ), (1, ))
    assert_size_stride(primals_1029, (128, 128), (128, 1))
    assert_size_stride(primals_1030, (128, ), (1, ))
    assert_size_stride(primals_1031, (128, 128), (128, 1))
    assert_size_stride(primals_1032, (128, ), (1, ))
    assert_size_stride(primals_1033, (128, 512), (512, 1))
    assert_size_stride(primals_1034, (128, ), (1, ))
    assert_size_stride(primals_1035, (128, 128), (128, 1))
    assert_size_stride(primals_1036, (128, ), (1, ))
    assert_size_stride(primals_1037, (512, 128), (128, 1))
    assert_size_stride(primals_1038, (512, ), (1, ))
    assert_size_stride(primals_1039, (128, 512), (512, 1))
    assert_size_stride(primals_1040, (128, ), (1, ))
    assert_size_stride(primals_1041, (512, 128), (128, 1))
    assert_size_stride(primals_1042, (512, ), (1, ))
    assert_size_stride(primals_1043, (128, 512), (512, 1))
    assert_size_stride(primals_1044, (128, ), (1, ))
    assert_size_stride(primals_1045, (512, 128), (128, 1))
    assert_size_stride(primals_1046, (512, ), (1, ))
    assert_size_stride(primals_1047, (128, 512), (512, 1))
    assert_size_stride(primals_1048, (128, ), (1, ))
    assert_size_stride(primals_1049, (512, 128), (128, 1))
    assert_size_stride(primals_1050, (512, ), (1, ))
    assert_size_stride(primals_1051, (128, 512), (512, 1))
    assert_size_stride(primals_1052, (128, ), (1, ))
    assert_size_stride(primals_1053, (512, 128), (128, 1))
    assert_size_stride(primals_1054, (512, ), (1, ))
    assert_size_stride(primals_1055, (128, 512), (512, 1))
    assert_size_stride(primals_1056, (128, ), (1, ))
    assert_size_stride(primals_1057, (128, 512), (512, 1))
    assert_size_stride(primals_1058, (128, ), (1, ))
    assert_size_stride(primals_1059, (128, 128), (128, 1))
    assert_size_stride(primals_1060, (128, ), (1, ))
    assert_size_stride(primals_1061, (128, 128), (128, 1))
    assert_size_stride(primals_1062, (128, ), (1, ))
    assert_size_stride(primals_1063, (128, 512), (512, 1))
    assert_size_stride(primals_1064, (128, ), (1, ))
    assert_size_stride(primals_1065, (128, 128), (128, 1))
    assert_size_stride(primals_1066, (128, ), (1, ))
    assert_size_stride(primals_1067, (512, 128), (128, 1))
    assert_size_stride(primals_1068, (512, ), (1, ))
    assert_size_stride(primals_1069, (128, 512), (512, 1))
    assert_size_stride(primals_1070, (128, ), (1, ))
    assert_size_stride(primals_1071, (512, 128), (128, 1))
    assert_size_stride(primals_1072, (512, ), (1, ))
    assert_size_stride(primals_1073, (128, 512), (512, 1))
    assert_size_stride(primals_1074, (128, ), (1, ))
    assert_size_stride(primals_1075, (512, 128), (128, 1))
    assert_size_stride(primals_1076, (512, ), (1, ))
    assert_size_stride(primals_1077, (128, 512), (512, 1))
    assert_size_stride(primals_1078, (128, ), (1, ))
    assert_size_stride(primals_1079, (512, 128), (128, 1))
    assert_size_stride(primals_1080, (512, ), (1, ))
    assert_size_stride(primals_1081, (128, 512), (512, 1))
    assert_size_stride(primals_1082, (128, ), (1, ))
    assert_size_stride(primals_1083, (512, 128), (128, 1))
    assert_size_stride(primals_1084, (512, ), (1, ))
    assert_size_stride(primals_1085, (128, 512), (512, 1))
    assert_size_stride(primals_1086, (128, ), (1, ))
    assert_size_stride(primals_1087, (128, 512), (512, 1))
    assert_size_stride(primals_1088, (128, ), (1, ))
    assert_size_stride(primals_1089, (128, 128), (128, 1))
    assert_size_stride(primals_1090, (128, ), (1, ))
    assert_size_stride(primals_1091, (128, 128), (128, 1))
    assert_size_stride(primals_1092, (128, ), (1, ))
    assert_size_stride(primals_1093, (128, 512), (512, 1))
    assert_size_stride(primals_1094, (128, ), (1, ))
    assert_size_stride(primals_1095, (128, 128), (128, 1))
    assert_size_stride(primals_1096, (128, ), (1, ))
    assert_size_stride(primals_1097, (512, 128), (128, 1))
    assert_size_stride(primals_1098, (512, ), (1, ))
    assert_size_stride(primals_1099, (128, 512), (512, 1))
    assert_size_stride(primals_1100, (128, ), (1, ))
    assert_size_stride(primals_1101, (512, 128), (128, 1))
    assert_size_stride(primals_1102, (512, ), (1, ))
    assert_size_stride(primals_1103, (128, 512), (512, 1))
    assert_size_stride(primals_1104, (128, ), (1, ))
    assert_size_stride(primals_1105, (512, 128), (128, 1))
    assert_size_stride(primals_1106, (512, ), (1, ))
    assert_size_stride(primals_1107, (128, 512), (512, 1))
    assert_size_stride(primals_1108, (128, ), (1, ))
    assert_size_stride(primals_1109, (512, 128), (128, 1))
    assert_size_stride(primals_1110, (512, ), (1, ))
    assert_size_stride(primals_1111, (128, 512), (512, 1))
    assert_size_stride(primals_1112, (128, ), (1, ))
    assert_size_stride(primals_1113, (512, 128), (128, 1))
    assert_size_stride(primals_1114, (512, ), (1, ))
    assert_size_stride(primals_1115, (512, 512), (512, 1))
    assert_size_stride(primals_1116, (512, ), (1, ))
    assert_size_stride(primals_1117, (512, ), (1, ))
    assert_size_stride(primals_1118, (512, ), (1, ))
    assert_size_stride(primals_1119, (1, 512), (512, 1))
    assert_size_stride(primals_1120, (1, 128), (128, 1))
    assert_size_stride(primals_1121, (1, 128), (128, 1))
    buf0 = empty((1, 128), device='cpu', dtype=torch.int64)
    buf1 = empty((128, 384), device='cpu', dtype=torch.float32)
    cpp_fused_cat_view_zeros_0(c_void_p(primals_1120.data_ptr()), c_void_p(primals_390.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()))
    del primals_390
    buf2 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [inputs_embeds_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_392, buf1, reinterpret_tensor(primals_391, (384, 512), (1, 384), 0), alpha=1, beta=1, out=buf2)
    del primals_392
    buf3 = reinterpret_tensor(buf2, (1, 128, 512), (65536, 512, 1), 0); del buf2  # reuse
    buf4 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_embedding_mul_view_1(c_void_p(buf3.data_ptr()), c_void_p(primals_1119.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_394.data_ptr()), c_void_p(primals_1.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(buf4.data_ptr()))
    del primals_393
    del primals_394
    buf5 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_396, buf4, reinterpret_tensor(primals_395, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf5)
    del primals_396
    buf6 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_398, buf4, reinterpret_tensor(primals_397, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf6)
    del primals_398
    buf7 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_2(c_void_p(buf6.data_ptr()), c_void_p(primals_5.data_ptr()), c_void_p(primals_6.data_ptr()), c_void_p(buf7.data_ptr()))
    del primals_6
    buf8 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_400, buf7, reinterpret_tensor(primals_399, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf8)
    del primals_400
    buf9 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_402, buf7, reinterpret_tensor(primals_401, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf9)
    del primals_402
    buf10 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_404, buf4, reinterpret_tensor(primals_403, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf10)
    del primals_404
    buf11 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf12 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_3(c_void_p(buf8.data_ptr()), c_void_p(buf9.data_ptr()), c_void_p(buf11.data_ptr()), c_void_p(buf12.data_ptr()))
    buf13 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf11, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf12, (4, 32, 128), (4096, 128, 1), 0), out=buf13)
    buf14 = empty_strided((1, 4, 128, 1), (512, 128, 1, 512), device='cpu', dtype=torch.float32)
    buf15 = reinterpret_tensor(buf13, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf13  # reuse
    buf16 = empty_strided((1, 4, 128, 1), (512, 128, 1, 512), device='cpu', dtype=torch.float32)
    buf17 = buf15; del buf15  # reuse
    cpp_fused_4(c_void_p(buf17.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf16.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf18 = aten.native_dropout(buf17, 0.1, True)
    buf19 = buf18[0]
    buf20 = buf18[1]
    del buf18
    buf21 = reinterpret_tensor(buf9, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf9  # reuse
    cpp_fused_5(c_void_p(buf10.data_ptr()), c_void_p(buf21.data_ptr()))
    buf22 = reinterpret_tensor(buf10, (4, 128, 32), (4096, 32, 1), 0); del buf10  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf19, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf21, (4, 128, 32), (4096, 32, 1), 0), out=buf22)
    buf23 = reinterpret_tensor(buf8, (4, 128, 32), (4096, 32, 1), 0); del buf8  # reuse
    buf24 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_6(c_void_p(buf12.data_ptr()), c_void_p(buf22.data_ptr()), c_void_p(buf23.data_ptr()), c_void_p(buf24.data_ptr()))
    buf25 = reinterpret_tensor(buf22, (128, 128), (128, 1), 0); del buf22  # reuse
    # Source Nodes: [layer_outputs], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_406, buf24, reinterpret_tensor(primals_405, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf25)
    del primals_406
    buf26 = reinterpret_tensor(buf12, (1, 128, 128), (16384, 128, 1), 0); del buf12  # reuse
    cpp_fused_add_mul_7(c_void_p(buf25.data_ptr()), c_void_p(buf5.data_ptr()), c_void_p(primals_3.data_ptr()), c_void_p(primals_4.data_ptr()), c_void_p(primals_7.data_ptr()), c_void_p(primals_8.data_ptr()), c_void_p(buf26.data_ptr()))
    buf27 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_408, reinterpret_tensor(buf26, (128, 128), (128, 1), 0), reinterpret_tensor(primals_407, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf27)
    del primals_408
    buf28 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_8(c_void_p(buf27.data_ptr()), c_void_p(buf28.data_ptr()))
    buf29 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_410, buf28, reinterpret_tensor(primals_409, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf29)
    del primals_410
    buf30 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_9(c_void_p(buf29.data_ptr()), c_void_p(buf26.data_ptr()), c_void_p(primals_9.data_ptr()), c_void_p(primals_10.data_ptr()), c_void_p(buf30.data_ptr()))
    buf31 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_412, buf30, reinterpret_tensor(primals_411, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf31)
    del primals_412
    buf32 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_10(c_void_p(buf31.data_ptr()), c_void_p(buf32.data_ptr()))
    buf33 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_5], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_414, buf32, reinterpret_tensor(primals_413, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf33)
    del primals_414
    buf34 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_11(c_void_p(buf33.data_ptr()), c_void_p(buf29.data_ptr()), c_void_p(buf26.data_ptr()), c_void_p(primals_9.data_ptr()), c_void_p(primals_10.data_ptr()), c_void_p(primals_11.data_ptr()), c_void_p(primals_12.data_ptr()), c_void_p(buf34.data_ptr()))
    buf35 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_4], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_416, reinterpret_tensor(buf34, (128, 128), (128, 1), 0), reinterpret_tensor(primals_415, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf35)
    del primals_416
    buf36 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_12(c_void_p(buf35.data_ptr()), c_void_p(buf36.data_ptr()))
    buf37 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_8], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_418, buf36, reinterpret_tensor(primals_417, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf37)
    del primals_418
    buf38 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_13(c_void_p(buf37.data_ptr()), c_void_p(buf34.data_ptr()), c_void_p(primals_13.data_ptr()), c_void_p(primals_14.data_ptr()), c_void_p(buf38.data_ptr()))
    buf39 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_6], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_420, buf38, reinterpret_tensor(primals_419, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf39)
    del primals_420
    buf40 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_14(c_void_p(buf39.data_ptr()), c_void_p(buf40.data_ptr()))
    buf41 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_422, buf40, reinterpret_tensor(primals_421, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf41)
    del primals_422
    buf42 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_15(c_void_p(buf41.data_ptr()), c_void_p(buf37.data_ptr()), c_void_p(buf34.data_ptr()), c_void_p(primals_13.data_ptr()), c_void_p(primals_14.data_ptr()), c_void_p(primals_15.data_ptr()), c_void_p(primals_16.data_ptr()), c_void_p(buf42.data_ptr()))
    del primals_16
    buf43 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_11], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_424, buf42, reinterpret_tensor(primals_423, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf43)
    del primals_424
    buf44 = reinterpret_tensor(buf43, (1, 128, 512), (65536, 512, 1), 0); del buf43  # reuse
    buf45 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_16(c_void_p(buf44.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(primals_1.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(primals_17.data_ptr()), c_void_p(primals_18.data_ptr()), c_void_p(buf45.data_ptr()))
    del primals_2
    buf46 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_5], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_426, buf45, reinterpret_tensor(primals_425, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf46)
    del primals_426
    buf47 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_7], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_428, buf45, reinterpret_tensor(primals_427, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf47)
    del primals_428
    buf48 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_17(c_void_p(buf47.data_ptr()), c_void_p(primals_21.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(buf48.data_ptr()))
    del primals_22
    buf49 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_1], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_430, buf48, reinterpret_tensor(primals_429, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf49)
    del primals_430
    buf50 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_1], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_432, buf48, reinterpret_tensor(primals_431, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf50)
    del primals_432
    buf51 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_1], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_434, buf45, reinterpret_tensor(primals_433, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf51)
    del primals_434
    buf52 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf53 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_18(c_void_p(buf49.data_ptr()), c_void_p(buf50.data_ptr()), c_void_p(buf52.data_ptr()), c_void_p(buf53.data_ptr()))
    buf54 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf52, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf53, (4, 32, 128), (4096, 128, 1), 0), out=buf54)
    buf55 = buf16; del buf16  # reuse
    buf56 = reinterpret_tensor(buf54, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf54  # reuse
    buf57 = buf14; del buf14  # reuse
    buf58 = buf56; del buf56  # reuse
    cpp_fused_19(c_void_p(buf58.data_ptr()), c_void_p(buf55.data_ptr()), c_void_p(buf57.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf59 = aten.native_dropout(buf58, 0.1, True)
    buf60 = buf59[0]
    buf61 = buf59[1]
    del buf59
    buf62 = reinterpret_tensor(buf50, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf50  # reuse
    cpp_fused_20(c_void_p(buf51.data_ptr()), c_void_p(buf62.data_ptr()))
    buf63 = reinterpret_tensor(buf51, (4, 128, 32), (4096, 32, 1), 0); del buf51  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf60, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf62, (4, 128, 32), (4096, 32, 1), 0), out=buf63)
    buf64 = reinterpret_tensor(buf49, (4, 128, 32), (4096, 32, 1), 0); del buf49  # reuse
    buf65 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_21(c_void_p(buf53.data_ptr()), c_void_p(buf63.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf65.data_ptr()))
    buf66 = reinterpret_tensor(buf63, (128, 128), (128, 1), 0); del buf63  # reuse
    # Source Nodes: [layer_outputs_14], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_436, buf65, reinterpret_tensor(primals_435, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf66)
    del primals_436
    buf67 = reinterpret_tensor(buf53, (1, 128, 128), (16384, 128, 1), 0); del buf53  # reuse
    cpp_fused_add_mul_22(c_void_p(buf66.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(primals_19.data_ptr()), c_void_p(primals_20.data_ptr()), c_void_p(primals_23.data_ptr()), c_void_p(primals_24.data_ptr()), c_void_p(buf67.data_ptr()))
    buf68 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_9], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_438, reinterpret_tensor(buf67, (128, 128), (128, 1), 0), reinterpret_tensor(primals_437, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf68)
    del primals_438
    buf69 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_23(c_void_p(buf68.data_ptr()), c_void_p(buf69.data_ptr()))
    buf70 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_16], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_440, buf69, reinterpret_tensor(primals_439, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf70)
    del primals_440
    buf71 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_24(c_void_p(buf70.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(primals_25.data_ptr()), c_void_p(primals_26.data_ptr()), c_void_p(buf71.data_ptr()))
    buf72 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_11], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_442, buf71, reinterpret_tensor(primals_441, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf72)
    del primals_442
    buf73 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_25(c_void_p(buf72.data_ptr()), c_void_p(buf73.data_ptr()))
    buf74 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_19], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_444, buf73, reinterpret_tensor(primals_443, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf74)
    del primals_444
    buf75 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_26(c_void_p(buf74.data_ptr()), c_void_p(buf70.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(primals_25.data_ptr()), c_void_p(primals_26.data_ptr()), c_void_p(primals_27.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(buf75.data_ptr()))
    buf76 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_13], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_446, reinterpret_tensor(buf75, (128, 128), (128, 1), 0), reinterpret_tensor(primals_445, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf76)
    del primals_446
    buf77 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_27(c_void_p(buf76.data_ptr()), c_void_p(buf77.data_ptr()))
    buf78 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_448, buf77, reinterpret_tensor(primals_447, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf78)
    del primals_448
    buf79 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_28(c_void_p(buf78.data_ptr()), c_void_p(buf75.data_ptr()), c_void_p(primals_29.data_ptr()), c_void_p(primals_30.data_ptr()), c_void_p(buf79.data_ptr()))
    buf80 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_15], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_450, buf79, reinterpret_tensor(primals_449, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf80)
    del primals_450
    buf81 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_29(c_void_p(buf80.data_ptr()), c_void_p(buf81.data_ptr()))
    buf82 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_4], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_452, buf81, reinterpret_tensor(primals_451, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf82)
    del primals_452
    buf83 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_30(c_void_p(buf82.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(buf75.data_ptr()), c_void_p(primals_29.data_ptr()), c_void_p(primals_30.data_ptr()), c_void_p(primals_31.data_ptr()), c_void_p(primals_32.data_ptr()), c_void_p(buf83.data_ptr()))
    del primals_32
    buf84 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_25], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_454, buf83, reinterpret_tensor(primals_453, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf84)
    del primals_454
    buf85 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_31(c_void_p(buf84.data_ptr()), c_void_p(buf44.data_ptr()), c_void_p(primals_17.data_ptr()), c_void_p(primals_18.data_ptr()), c_void_p(primals_33.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(buf85.data_ptr()))
    buf86 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_10], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_456, reinterpret_tensor(buf85, (128, 512), (512, 1), 0), reinterpret_tensor(primals_455, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf86)
    del primals_456
    buf87 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_458, reinterpret_tensor(buf85, (128, 512), (512, 1), 0), reinterpret_tensor(primals_457, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf87)
    del primals_458
    buf88 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_32(c_void_p(buf87.data_ptr()), c_void_p(primals_37.data_ptr()), c_void_p(primals_38.data_ptr()), c_void_p(buf88.data_ptr()))
    del primals_38
    buf89 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_460, buf88, reinterpret_tensor(primals_459, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf89)
    del primals_460
    buf90 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_462, buf88, reinterpret_tensor(primals_461, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf90)
    del primals_462
    buf91 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_2], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_464, reinterpret_tensor(buf85, (128, 512), (512, 1), 0), reinterpret_tensor(primals_463, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf91)
    del primals_464
    buf92 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf93 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_33(c_void_p(buf89.data_ptr()), c_void_p(buf90.data_ptr()), c_void_p(buf92.data_ptr()), c_void_p(buf93.data_ptr()))
    buf94 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf92, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf93, (4, 32, 128), (4096, 128, 1), 0), out=buf94)
    buf95 = buf57; del buf57  # reuse
    buf96 = reinterpret_tensor(buf94, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf94  # reuse
    buf97 = buf55; del buf55  # reuse
    buf98 = buf96; del buf96  # reuse
    cpp_fused_34(c_void_p(buf98.data_ptr()), c_void_p(buf95.data_ptr()), c_void_p(buf97.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf99 = aten.native_dropout(buf98, 0.1, True)
    buf100 = buf99[0]
    buf101 = buf99[1]
    del buf99
    buf102 = reinterpret_tensor(buf90, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf90  # reuse
    cpp_fused_35(c_void_p(buf91.data_ptr()), c_void_p(buf102.data_ptr()))
    buf103 = reinterpret_tensor(buf91, (4, 128, 32), (4096, 32, 1), 0); del buf91  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf100, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf102, (4, 128, 32), (4096, 32, 1), 0), out=buf103)
    buf104 = reinterpret_tensor(buf89, (4, 128, 32), (4096, 32, 1), 0); del buf89  # reuse
    buf105 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_36(c_void_p(buf93.data_ptr()), c_void_p(buf103.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(buf105.data_ptr()))
    buf106 = reinterpret_tensor(buf93, (128, 128), (128, 1), 0); del buf93  # reuse
    # Source Nodes: [layer_outputs_28], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_466, buf105, reinterpret_tensor(primals_465, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf106)
    del primals_466
    buf107 = reinterpret_tensor(buf103, (1, 128, 128), (16384, 128, 1), 0); del buf103  # reuse
    cpp_fused_add_mul_37(c_void_p(buf106.data_ptr()), c_void_p(buf86.data_ptr()), c_void_p(primals_35.data_ptr()), c_void_p(primals_36.data_ptr()), c_void_p(primals_39.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(buf107.data_ptr()))
    buf108 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_18], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_468, reinterpret_tensor(buf107, (128, 128), (128, 1), 0), reinterpret_tensor(primals_467, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf108)
    del primals_468
    buf109 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_38(c_void_p(buf108.data_ptr()), c_void_p(buf109.data_ptr()))
    buf110 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_30], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_470, buf109, reinterpret_tensor(primals_469, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf110)
    del primals_470
    buf111 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_39(c_void_p(buf110.data_ptr()), c_void_p(buf107.data_ptr()), c_void_p(primals_41.data_ptr()), c_void_p(primals_42.data_ptr()), c_void_p(buf111.data_ptr()))
    buf112 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_472, buf111, reinterpret_tensor(primals_471, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf112)
    del primals_472
    buf113 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_40(c_void_p(buf112.data_ptr()), c_void_p(buf113.data_ptr()))
    buf114 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_33], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_474, buf113, reinterpret_tensor(primals_473, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf114)
    del primals_474
    buf115 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_41(c_void_p(buf114.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(buf107.data_ptr()), c_void_p(primals_41.data_ptr()), c_void_p(primals_42.data_ptr()), c_void_p(primals_43.data_ptr()), c_void_p(primals_44.data_ptr()), c_void_p(buf115.data_ptr()))
    buf116 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_476, reinterpret_tensor(buf115, (128, 128), (128, 1), 0), reinterpret_tensor(primals_475, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf116)
    del primals_476
    buf117 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_42(c_void_p(buf116.data_ptr()), c_void_p(buf117.data_ptr()))
    buf118 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_36], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_478, buf117, reinterpret_tensor(primals_477, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf118)
    del primals_478
    buf119 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_43(c_void_p(buf118.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(primals_45.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(buf119.data_ptr()))
    buf120 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_24], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_480, buf119, reinterpret_tensor(primals_479, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf120)
    del primals_480
    buf121 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_44(c_void_p(buf120.data_ptr()), c_void_p(buf121.data_ptr()))
    buf122 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_8], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_482, buf121, reinterpret_tensor(primals_481, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf122)
    del primals_482
    buf123 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_45(c_void_p(buf122.data_ptr()), c_void_p(buf118.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(primals_45.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(primals_47.data_ptr()), c_void_p(primals_48.data_ptr()), c_void_p(buf123.data_ptr()))
    del primals_48
    buf124 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_39], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_484, buf123, reinterpret_tensor(primals_483, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf124)
    del primals_484
    buf125 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_46(c_void_p(buf124.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(primals_50.data_ptr()), c_void_p(buf125.data_ptr()))
    buf126 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_15], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_486, buf125, reinterpret_tensor(primals_485, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf126)
    del primals_486
    buf127 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_17], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_488, buf125, reinterpret_tensor(primals_487, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf127)
    del primals_488
    buf128 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_47(c_void_p(buf127.data_ptr()), c_void_p(primals_53.data_ptr()), c_void_p(primals_54.data_ptr()), c_void_p(buf128.data_ptr()))
    del primals_54
    buf129 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_3], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_490, buf128, reinterpret_tensor(primals_489, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf129)
    del primals_490
    buf130 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_3], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_492, buf128, reinterpret_tensor(primals_491, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf130)
    del primals_492
    buf131 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_3], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_494, buf125, reinterpret_tensor(primals_493, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf131)
    del primals_494
    buf132 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf133 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_48(c_void_p(buf129.data_ptr()), c_void_p(buf130.data_ptr()), c_void_p(buf132.data_ptr()), c_void_p(buf133.data_ptr()))
    buf134 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf132, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf133, (4, 32, 128), (4096, 128, 1), 0), out=buf134)
    buf135 = buf97; del buf97  # reuse
    buf136 = reinterpret_tensor(buf134, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf134  # reuse
    buf137 = buf95; del buf95  # reuse
    buf138 = buf136; del buf136  # reuse
    cpp_fused_49(c_void_p(buf138.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(buf137.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf139 = aten.native_dropout(buf138, 0.1, True)
    buf140 = buf139[0]
    buf141 = buf139[1]
    del buf139
    buf142 = reinterpret_tensor(buf130, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf130  # reuse
    cpp_fused_50(c_void_p(buf131.data_ptr()), c_void_p(buf142.data_ptr()))
    buf143 = reinterpret_tensor(buf131, (4, 128, 32), (4096, 32, 1), 0); del buf131  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf140, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf142, (4, 128, 32), (4096, 32, 1), 0), out=buf143)
    buf144 = reinterpret_tensor(buf129, (4, 128, 32), (4096, 32, 1), 0); del buf129  # reuse
    buf145 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_51(c_void_p(buf133.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(buf144.data_ptr()), c_void_p(buf145.data_ptr()))
    buf146 = reinterpret_tensor(buf143, (128, 128), (128, 1), 0); del buf143  # reuse
    # Source Nodes: [layer_outputs_42], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_496, buf145, reinterpret_tensor(primals_495, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf146)
    del primals_496
    buf147 = reinterpret_tensor(buf133, (1, 128, 128), (16384, 128, 1), 0); del buf133  # reuse
    cpp_fused_add_mul_52(c_void_p(buf146.data_ptr()), c_void_p(buf126.data_ptr()), c_void_p(primals_51.data_ptr()), c_void_p(primals_52.data_ptr()), c_void_p(primals_55.data_ptr()), c_void_p(primals_56.data_ptr()), c_void_p(buf147.data_ptr()))
    buf148 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_27], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_498, reinterpret_tensor(buf147, (128, 128), (128, 1), 0), reinterpret_tensor(primals_497, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf148)
    del primals_498
    buf149 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_53(c_void_p(buf148.data_ptr()), c_void_p(buf149.data_ptr()))
    buf150 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_44], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_500, buf149, reinterpret_tensor(primals_499, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf150)
    del primals_500
    buf151 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_54(c_void_p(buf150.data_ptr()), c_void_p(buf147.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(primals_58.data_ptr()), c_void_p(buf151.data_ptr()))
    buf152 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_29], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_502, buf151, reinterpret_tensor(primals_501, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf152)
    del primals_502
    buf153 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_55(c_void_p(buf152.data_ptr()), c_void_p(buf153.data_ptr()))
    buf154 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_47], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_504, buf153, reinterpret_tensor(primals_503, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf154)
    del primals_504
    buf155 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_56(c_void_p(buf154.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf147.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(primals_58.data_ptr()), c_void_p(primals_59.data_ptr()), c_void_p(primals_60.data_ptr()), c_void_p(buf155.data_ptr()))
    buf156 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_31], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_506, reinterpret_tensor(buf155, (128, 128), (128, 1), 0), reinterpret_tensor(primals_505, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf156)
    del primals_506
    buf157 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_57(c_void_p(buf156.data_ptr()), c_void_p(buf157.data_ptr()))
    buf158 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_50], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_508, buf157, reinterpret_tensor(primals_507, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf158)
    del primals_508
    buf159 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_58(c_void_p(buf158.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(primals_62.data_ptr()), c_void_p(buf159.data_ptr()))
    buf160 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_33], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_510, buf159, reinterpret_tensor(primals_509, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf160)
    del primals_510
    buf161 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_59(c_void_p(buf160.data_ptr()), c_void_p(buf161.data_ptr()))
    buf162 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_512, buf161, reinterpret_tensor(primals_511, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf162)
    del primals_512
    buf163 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_60(c_void_p(buf162.data_ptr()), c_void_p(buf158.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(primals_62.data_ptr()), c_void_p(primals_63.data_ptr()), c_void_p(primals_64.data_ptr()), c_void_p(buf163.data_ptr()))
    del primals_64
    buf164 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_53], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_514, buf163, reinterpret_tensor(primals_513, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf164)
    del primals_514
    buf165 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_61(c_void_p(buf164.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(primals_50.data_ptr()), c_void_p(primals_65.data_ptr()), c_void_p(primals_66.data_ptr()), c_void_p(buf165.data_ptr()))
    buf166 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_516, reinterpret_tensor(buf165, (128, 512), (512, 1), 0), reinterpret_tensor(primals_515, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf166)
    del primals_516
    buf167 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_518, reinterpret_tensor(buf165, (128, 512), (512, 1), 0), reinterpret_tensor(primals_517, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf167)
    del primals_518
    buf168 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_62(c_void_p(buf167.data_ptr()), c_void_p(primals_69.data_ptr()), c_void_p(primals_70.data_ptr()), c_void_p(buf168.data_ptr()))
    del primals_70
    buf169 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_4], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_520, buf168, reinterpret_tensor(primals_519, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf169)
    del primals_520
    buf170 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_4], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_522, buf168, reinterpret_tensor(primals_521, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf170)
    del primals_522
    buf171 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_4], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_524, reinterpret_tensor(buf165, (128, 512), (512, 1), 0), reinterpret_tensor(primals_523, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf171)
    del primals_524
    buf172 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf173 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_63(c_void_p(buf169.data_ptr()), c_void_p(buf170.data_ptr()), c_void_p(buf172.data_ptr()), c_void_p(buf173.data_ptr()))
    buf174 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf172, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf173, (4, 32, 128), (4096, 128, 1), 0), out=buf174)
    buf175 = buf137; del buf137  # reuse
    buf176 = reinterpret_tensor(buf174, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf174  # reuse
    buf177 = buf135; del buf135  # reuse
    buf178 = buf176; del buf176  # reuse
    cpp_fused_64(c_void_p(buf178.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(buf177.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf179 = aten.native_dropout(buf178, 0.1, True)
    buf180 = buf179[0]
    buf181 = buf179[1]
    del buf179
    buf182 = reinterpret_tensor(buf170, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf170  # reuse
    cpp_fused_65(c_void_p(buf171.data_ptr()), c_void_p(buf182.data_ptr()))
    buf183 = reinterpret_tensor(buf171, (4, 128, 32), (4096, 32, 1), 0); del buf171  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf180, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf182, (4, 128, 32), (4096, 32, 1), 0), out=buf183)
    buf184 = reinterpret_tensor(buf169, (4, 128, 32), (4096, 32, 1), 0); del buf169  # reuse
    buf185 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_66(c_void_p(buf173.data_ptr()), c_void_p(buf183.data_ptr()), c_void_p(buf184.data_ptr()), c_void_p(buf185.data_ptr()))
    buf186 = reinterpret_tensor(buf183, (128, 128), (128, 1), 0); del buf183  # reuse
    # Source Nodes: [layer_outputs_56], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_526, buf185, reinterpret_tensor(primals_525, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf186)
    del primals_526
    buf187 = reinterpret_tensor(buf173, (1, 128, 128), (16384, 128, 1), 0); del buf173  # reuse
    cpp_fused_add_mul_67(c_void_p(buf186.data_ptr()), c_void_p(buf166.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(primals_68.data_ptr()), c_void_p(primals_71.data_ptr()), c_void_p(primals_72.data_ptr()), c_void_p(buf187.data_ptr()))
    buf188 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_36], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_528, reinterpret_tensor(buf187, (128, 128), (128, 1), 0), reinterpret_tensor(primals_527, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf188)
    del primals_528
    buf189 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_68(c_void_p(buf188.data_ptr()), c_void_p(buf189.data_ptr()))
    buf190 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_58], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_530, buf189, reinterpret_tensor(primals_529, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf190)
    del primals_530
    buf191 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_69(c_void_p(buf190.data_ptr()), c_void_p(buf187.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(primals_74.data_ptr()), c_void_p(buf191.data_ptr()))
    buf192 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_38], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_532, buf191, reinterpret_tensor(primals_531, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf192)
    del primals_532
    buf193 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_70(c_void_p(buf192.data_ptr()), c_void_p(buf193.data_ptr()))
    buf194 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_61], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_534, buf193, reinterpret_tensor(primals_533, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf194)
    del primals_534
    buf195 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_71(c_void_p(buf194.data_ptr()), c_void_p(buf190.data_ptr()), c_void_p(buf187.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(primals_74.data_ptr()), c_void_p(primals_75.data_ptr()), c_void_p(primals_76.data_ptr()), c_void_p(buf195.data_ptr()))
    buf196 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_40], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_536, reinterpret_tensor(buf195, (128, 128), (128, 1), 0), reinterpret_tensor(primals_535, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf196)
    del primals_536
    buf197 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_72(c_void_p(buf196.data_ptr()), c_void_p(buf197.data_ptr()))
    buf198 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_64], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_538, buf197, reinterpret_tensor(primals_537, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf198)
    del primals_538
    buf199 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_73(c_void_p(buf198.data_ptr()), c_void_p(buf195.data_ptr()), c_void_p(primals_77.data_ptr()), c_void_p(primals_78.data_ptr()), c_void_p(buf199.data_ptr()))
    buf200 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_42], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_540, buf199, reinterpret_tensor(primals_539, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf200)
    del primals_540
    buf201 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_74(c_void_p(buf200.data_ptr()), c_void_p(buf201.data_ptr()))
    buf202 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_16], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_542, buf201, reinterpret_tensor(primals_541, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf202)
    del primals_542
    buf203 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_75(c_void_p(buf202.data_ptr()), c_void_p(buf198.data_ptr()), c_void_p(buf195.data_ptr()), c_void_p(primals_77.data_ptr()), c_void_p(primals_78.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(primals_80.data_ptr()), c_void_p(buf203.data_ptr()))
    del primals_80
    buf204 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_67], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_544, buf203, reinterpret_tensor(primals_543, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf204)
    del primals_544
    buf205 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_76(c_void_p(buf204.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(buf205.data_ptr()))
    buf206 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_25], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_546, buf205, reinterpret_tensor(primals_545, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf206)
    del primals_546
    buf207 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_27], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_548, buf205, reinterpret_tensor(primals_547, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf207)
    del primals_548
    buf208 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_77(c_void_p(buf207.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(primals_86.data_ptr()), c_void_p(buf208.data_ptr()))
    del primals_86
    buf209 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_5], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_550, buf208, reinterpret_tensor(primals_549, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf209)
    del primals_550
    buf210 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_5], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_552, buf208, reinterpret_tensor(primals_551, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf210)
    del primals_552
    buf211 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_5], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_554, buf205, reinterpret_tensor(primals_553, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf211)
    del primals_554
    buf212 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf213 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_78(c_void_p(buf209.data_ptr()), c_void_p(buf210.data_ptr()), c_void_p(buf212.data_ptr()), c_void_p(buf213.data_ptr()))
    buf214 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf212, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf213, (4, 32, 128), (4096, 128, 1), 0), out=buf214)
    buf215 = buf177; del buf177  # reuse
    buf216 = reinterpret_tensor(buf214, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf214  # reuse
    buf217 = buf175; del buf175  # reuse
    buf218 = buf216; del buf216  # reuse
    cpp_fused_79(c_void_p(buf218.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(buf217.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf219 = aten.native_dropout(buf218, 0.1, True)
    buf220 = buf219[0]
    buf221 = buf219[1]
    del buf219
    buf222 = reinterpret_tensor(buf210, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf210  # reuse
    cpp_fused_80(c_void_p(buf211.data_ptr()), c_void_p(buf222.data_ptr()))
    buf223 = reinterpret_tensor(buf211, (4, 128, 32), (4096, 32, 1), 0); del buf211  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf220, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf222, (4, 128, 32), (4096, 32, 1), 0), out=buf223)
    buf224 = reinterpret_tensor(buf209, (4, 128, 32), (4096, 32, 1), 0); del buf209  # reuse
    buf225 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_81(c_void_p(buf213.data_ptr()), c_void_p(buf223.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf225.data_ptr()))
    buf226 = reinterpret_tensor(buf223, (128, 128), (128, 1), 0); del buf223  # reuse
    # Source Nodes: [layer_outputs_70], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_556, buf225, reinterpret_tensor(primals_555, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf226)
    del primals_556
    buf227 = reinterpret_tensor(buf213, (1, 128, 128), (16384, 128, 1), 0); del buf213  # reuse
    cpp_fused_add_mul_82(c_void_p(buf226.data_ptr()), c_void_p(buf206.data_ptr()), c_void_p(primals_83.data_ptr()), c_void_p(primals_84.data_ptr()), c_void_p(primals_87.data_ptr()), c_void_p(primals_88.data_ptr()), c_void_p(buf227.data_ptr()))
    buf228 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_45], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_558, reinterpret_tensor(buf227, (128, 128), (128, 1), 0), reinterpret_tensor(primals_557, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf228)
    del primals_558
    buf229 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_83(c_void_p(buf228.data_ptr()), c_void_p(buf229.data_ptr()))
    buf230 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_72], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_560, buf229, reinterpret_tensor(primals_559, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf230)
    del primals_560
    buf231 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_84(c_void_p(buf230.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(primals_89.data_ptr()), c_void_p(primals_90.data_ptr()), c_void_p(buf231.data_ptr()))
    buf232 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_47], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_562, buf231, reinterpret_tensor(primals_561, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf232)
    del primals_562
    buf233 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_85(c_void_p(buf232.data_ptr()), c_void_p(buf233.data_ptr()))
    buf234 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_75], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_564, buf233, reinterpret_tensor(primals_563, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf234)
    del primals_564
    buf235 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_86(c_void_p(buf234.data_ptr()), c_void_p(buf230.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(primals_89.data_ptr()), c_void_p(primals_90.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(primals_92.data_ptr()), c_void_p(buf235.data_ptr()))
    buf236 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_49], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_566, reinterpret_tensor(buf235, (128, 128), (128, 1), 0), reinterpret_tensor(primals_565, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf236)
    del primals_566
    buf237 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_87(c_void_p(buf236.data_ptr()), c_void_p(buf237.data_ptr()))
    buf238 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_78], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_568, buf237, reinterpret_tensor(primals_567, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf238)
    del primals_568
    buf239 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_88(c_void_p(buf238.data_ptr()), c_void_p(buf235.data_ptr()), c_void_p(primals_93.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(buf239.data_ptr()))
    buf240 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_51], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_570, buf239, reinterpret_tensor(primals_569, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf240)
    del primals_570
    buf241 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_89(c_void_p(buf240.data_ptr()), c_void_p(buf241.data_ptr()))
    buf242 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_572, buf241, reinterpret_tensor(primals_571, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf242)
    del primals_572
    buf243 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_90(c_void_p(buf242.data_ptr()), c_void_p(buf238.data_ptr()), c_void_p(buf235.data_ptr()), c_void_p(primals_93.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(primals_95.data_ptr()), c_void_p(primals_96.data_ptr()), c_void_p(buf243.data_ptr()))
    del primals_96
    buf244 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_81], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_574, buf243, reinterpret_tensor(primals_573, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf244)
    del primals_574
    buf245 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_91(c_void_p(buf244.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(primals_98.data_ptr()), c_void_p(buf245.data_ptr()))
    buf246 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_30], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_576, reinterpret_tensor(buf245, (128, 512), (512, 1), 0), reinterpret_tensor(primals_575, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf246)
    del primals_576
    buf247 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_32], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_578, reinterpret_tensor(buf245, (128, 512), (512, 1), 0), reinterpret_tensor(primals_577, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf247)
    del primals_578
    buf248 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_92(c_void_p(buf247.data_ptr()), c_void_p(primals_101.data_ptr()), c_void_p(primals_102.data_ptr()), c_void_p(buf248.data_ptr()))
    del primals_102
    buf249 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_6], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_580, buf248, reinterpret_tensor(primals_579, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf249)
    del primals_580
    buf250 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_6], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_582, buf248, reinterpret_tensor(primals_581, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf250)
    del primals_582
    buf251 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_6], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_584, reinterpret_tensor(buf245, (128, 512), (512, 1), 0), reinterpret_tensor(primals_583, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf251)
    del primals_584
    buf252 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf253 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_93(c_void_p(buf249.data_ptr()), c_void_p(buf250.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf253.data_ptr()))
    buf254 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf252, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf253, (4, 32, 128), (4096, 128, 1), 0), out=buf254)
    buf255 = buf217; del buf217  # reuse
    buf256 = reinterpret_tensor(buf254, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf254  # reuse
    buf257 = buf215; del buf215  # reuse
    buf258 = buf256; del buf256  # reuse
    cpp_fused_94(c_void_p(buf258.data_ptr()), c_void_p(buf255.data_ptr()), c_void_p(buf257.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf259 = aten.native_dropout(buf258, 0.1, True)
    buf260 = buf259[0]
    buf261 = buf259[1]
    del buf259
    buf262 = reinterpret_tensor(buf250, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf250  # reuse
    cpp_fused_95(c_void_p(buf251.data_ptr()), c_void_p(buf262.data_ptr()))
    buf263 = reinterpret_tensor(buf251, (4, 128, 32), (4096, 32, 1), 0); del buf251  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf260, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf262, (4, 128, 32), (4096, 32, 1), 0), out=buf263)
    buf264 = reinterpret_tensor(buf249, (4, 128, 32), (4096, 32, 1), 0); del buf249  # reuse
    buf265 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_96(c_void_p(buf253.data_ptr()), c_void_p(buf263.data_ptr()), c_void_p(buf264.data_ptr()), c_void_p(buf265.data_ptr()))
    buf266 = reinterpret_tensor(buf263, (128, 128), (128, 1), 0); del buf263  # reuse
    # Source Nodes: [layer_outputs_84], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_586, buf265, reinterpret_tensor(primals_585, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf266)
    del primals_586
    buf267 = reinterpret_tensor(buf253, (1, 128, 128), (16384, 128, 1), 0); del buf253  # reuse
    cpp_fused_add_mul_97(c_void_p(buf266.data_ptr()), c_void_p(buf246.data_ptr()), c_void_p(primals_99.data_ptr()), c_void_p(primals_100.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(primals_104.data_ptr()), c_void_p(buf267.data_ptr()))
    buf268 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_54], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_588, reinterpret_tensor(buf267, (128, 128), (128, 1), 0), reinterpret_tensor(primals_587, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf268)
    del primals_588
    buf269 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_98(c_void_p(buf268.data_ptr()), c_void_p(buf269.data_ptr()))
    buf270 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_86], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_590, buf269, reinterpret_tensor(primals_589, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf270)
    del primals_590
    buf271 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_99(c_void_p(buf270.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(buf271.data_ptr()))
    buf272 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_56], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_592, buf271, reinterpret_tensor(primals_591, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf272)
    del primals_592
    buf273 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_100(c_void_p(buf272.data_ptr()), c_void_p(buf273.data_ptr()))
    buf274 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_89], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_594, buf273, reinterpret_tensor(primals_593, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf274)
    del primals_594
    buf275 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_101(c_void_p(buf274.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(primals_107.data_ptr()), c_void_p(primals_108.data_ptr()), c_void_p(buf275.data_ptr()))
    buf276 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_58], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_596, reinterpret_tensor(buf275, (128, 128), (128, 1), 0), reinterpret_tensor(primals_595, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf276)
    del primals_596
    buf277 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_102(c_void_p(buf276.data_ptr()), c_void_p(buf277.data_ptr()))
    buf278 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_92], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_598, buf277, reinterpret_tensor(primals_597, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf278)
    del primals_598
    buf279 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_103(c_void_p(buf278.data_ptr()), c_void_p(buf275.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(primals_110.data_ptr()), c_void_p(buf279.data_ptr()))
    buf280 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_60], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_600, buf279, reinterpret_tensor(primals_599, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf280)
    del primals_600
    buf281 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_104(c_void_p(buf280.data_ptr()), c_void_p(buf281.data_ptr()))
    buf282 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_24], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_602, buf281, reinterpret_tensor(primals_601, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf282)
    del primals_602
    buf283 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_105(c_void_p(buf282.data_ptr()), c_void_p(buf278.data_ptr()), c_void_p(buf275.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(primals_110.data_ptr()), c_void_p(primals_111.data_ptr()), c_void_p(primals_112.data_ptr()), c_void_p(buf283.data_ptr()))
    del primals_112
    buf284 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_95], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_604, buf283, reinterpret_tensor(primals_603, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf284)
    del primals_604
    buf285 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_106(c_void_p(buf284.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(primals_113.data_ptr()), c_void_p(primals_114.data_ptr()), c_void_p(buf285.data_ptr()))
    buf286 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_35], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_606, buf285, reinterpret_tensor(primals_605, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf286)
    del primals_606
    buf287 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_37], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_608, buf285, reinterpret_tensor(primals_607, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf287)
    del primals_608
    buf288 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_107(c_void_p(buf287.data_ptr()), c_void_p(primals_117.data_ptr()), c_void_p(primals_118.data_ptr()), c_void_p(buf288.data_ptr()))
    del primals_118
    buf289 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_7], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_610, buf288, reinterpret_tensor(primals_609, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf289)
    del primals_610
    buf290 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_7], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_612, buf288, reinterpret_tensor(primals_611, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf290)
    del primals_612
    buf291 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_7], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_614, buf285, reinterpret_tensor(primals_613, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf291)
    del primals_614
    buf292 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf293 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_108(c_void_p(buf289.data_ptr()), c_void_p(buf290.data_ptr()), c_void_p(buf292.data_ptr()), c_void_p(buf293.data_ptr()))
    buf294 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf292, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf293, (4, 32, 128), (4096, 128, 1), 0), out=buf294)
    buf295 = buf257; del buf257  # reuse
    buf296 = reinterpret_tensor(buf294, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf294  # reuse
    buf297 = buf255; del buf255  # reuse
    buf298 = buf296; del buf296  # reuse
    cpp_fused_109(c_void_p(buf298.data_ptr()), c_void_p(buf295.data_ptr()), c_void_p(buf297.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf299 = aten.native_dropout(buf298, 0.1, True)
    buf300 = buf299[0]
    buf301 = buf299[1]
    del buf299
    buf302 = reinterpret_tensor(buf290, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf290  # reuse
    cpp_fused_110(c_void_p(buf291.data_ptr()), c_void_p(buf302.data_ptr()))
    buf303 = reinterpret_tensor(buf291, (4, 128, 32), (4096, 32, 1), 0); del buf291  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf300, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf302, (4, 128, 32), (4096, 32, 1), 0), out=buf303)
    buf304 = reinterpret_tensor(buf289, (4, 128, 32), (4096, 32, 1), 0); del buf289  # reuse
    buf305 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_111(c_void_p(buf293.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(buf304.data_ptr()), c_void_p(buf305.data_ptr()))
    buf306 = reinterpret_tensor(buf303, (128, 128), (128, 1), 0); del buf303  # reuse
    # Source Nodes: [layer_outputs_98], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_616, buf305, reinterpret_tensor(primals_615, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf306)
    del primals_616
    buf307 = reinterpret_tensor(buf293, (1, 128, 128), (16384, 128, 1), 0); del buf293  # reuse
    cpp_fused_add_mul_112(c_void_p(buf306.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(primals_116.data_ptr()), c_void_p(primals_119.data_ptr()), c_void_p(primals_120.data_ptr()), c_void_p(buf307.data_ptr()))
    buf308 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_63], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_618, reinterpret_tensor(buf307, (128, 128), (128, 1), 0), reinterpret_tensor(primals_617, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf308)
    del primals_618
    buf309 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_113(c_void_p(buf308.data_ptr()), c_void_p(buf309.data_ptr()))
    buf310 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_100], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_620, buf309, reinterpret_tensor(primals_619, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf310)
    del primals_620
    buf311 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_114(c_void_p(buf310.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(primals_122.data_ptr()), c_void_p(buf311.data_ptr()))
    buf312 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_65], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_622, buf311, reinterpret_tensor(primals_621, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf312)
    del primals_622
    buf313 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_115(c_void_p(buf312.data_ptr()), c_void_p(buf313.data_ptr()))
    buf314 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_103], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_624, buf313, reinterpret_tensor(primals_623, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf314)
    del primals_624
    buf315 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_116(c_void_p(buf314.data_ptr()), c_void_p(buf310.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(primals_122.data_ptr()), c_void_p(primals_123.data_ptr()), c_void_p(primals_124.data_ptr()), c_void_p(buf315.data_ptr()))
    buf316 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_67], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_626, reinterpret_tensor(buf315, (128, 128), (128, 1), 0), reinterpret_tensor(primals_625, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf316)
    del primals_626
    buf317 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_117(c_void_p(buf316.data_ptr()), c_void_p(buf317.data_ptr()))
    buf318 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_106], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_628, buf317, reinterpret_tensor(primals_627, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf318)
    del primals_628
    buf319 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_118(c_void_p(buf318.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(primals_125.data_ptr()), c_void_p(primals_126.data_ptr()), c_void_p(buf319.data_ptr()))
    buf320 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_69], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_630, buf319, reinterpret_tensor(primals_629, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf320)
    del primals_630
    buf321 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_119(c_void_p(buf320.data_ptr()), c_void_p(buf321.data_ptr()))
    buf322 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_28], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_632, buf321, reinterpret_tensor(primals_631, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf322)
    del primals_632
    buf323 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_120(c_void_p(buf322.data_ptr()), c_void_p(buf318.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(primals_125.data_ptr()), c_void_p(primals_126.data_ptr()), c_void_p(primals_127.data_ptr()), c_void_p(primals_128.data_ptr()), c_void_p(buf323.data_ptr()))
    del primals_128
    buf324 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_109], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_634, buf323, reinterpret_tensor(primals_633, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf324)
    del primals_634
    buf325 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_121(c_void_p(buf324.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(primals_113.data_ptr()), c_void_p(primals_114.data_ptr()), c_void_p(primals_129.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(buf325.data_ptr()))
    buf326 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_40], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_636, reinterpret_tensor(buf325, (128, 512), (512, 1), 0), reinterpret_tensor(primals_635, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf326)
    del primals_636
    buf327 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_42], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_638, reinterpret_tensor(buf325, (128, 512), (512, 1), 0), reinterpret_tensor(primals_637, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf327)
    del primals_638
    buf328 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_122(c_void_p(buf327.data_ptr()), c_void_p(primals_133.data_ptr()), c_void_p(primals_134.data_ptr()), c_void_p(buf328.data_ptr()))
    del primals_134
    buf329 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_8], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_640, buf328, reinterpret_tensor(primals_639, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf329)
    del primals_640
    buf330 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_8], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_642, buf328, reinterpret_tensor(primals_641, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf330)
    del primals_642
    buf331 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_8], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_644, reinterpret_tensor(buf325, (128, 512), (512, 1), 0), reinterpret_tensor(primals_643, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf331)
    del primals_644
    buf332 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf333 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_123(c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(buf332.data_ptr()), c_void_p(buf333.data_ptr()))
    buf334 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf332, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf333, (4, 32, 128), (4096, 128, 1), 0), out=buf334)
    buf335 = buf297; del buf297  # reuse
    buf336 = reinterpret_tensor(buf334, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf334  # reuse
    buf337 = buf295; del buf295  # reuse
    buf338 = buf336; del buf336  # reuse
    cpp_fused_124(c_void_p(buf338.data_ptr()), c_void_p(buf335.data_ptr()), c_void_p(buf337.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf339 = aten.native_dropout(buf338, 0.1, True)
    buf340 = buf339[0]
    buf341 = buf339[1]
    del buf339
    buf342 = reinterpret_tensor(buf330, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf330  # reuse
    cpp_fused_125(c_void_p(buf331.data_ptr()), c_void_p(buf342.data_ptr()))
    buf343 = reinterpret_tensor(buf331, (4, 128, 32), (4096, 32, 1), 0); del buf331  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf340, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf342, (4, 128, 32), (4096, 32, 1), 0), out=buf343)
    buf344 = reinterpret_tensor(buf329, (4, 128, 32), (4096, 32, 1), 0); del buf329  # reuse
    buf345 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_126(c_void_p(buf333.data_ptr()), c_void_p(buf343.data_ptr()), c_void_p(buf344.data_ptr()), c_void_p(buf345.data_ptr()))
    buf346 = reinterpret_tensor(buf343, (128, 128), (128, 1), 0); del buf343  # reuse
    # Source Nodes: [layer_outputs_112], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_646, buf345, reinterpret_tensor(primals_645, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf346)
    del primals_646
    buf347 = reinterpret_tensor(buf333, (1, 128, 128), (16384, 128, 1), 0); del buf333  # reuse
    cpp_fused_add_mul_127(c_void_p(buf346.data_ptr()), c_void_p(buf326.data_ptr()), c_void_p(primals_131.data_ptr()), c_void_p(primals_132.data_ptr()), c_void_p(primals_135.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(buf347.data_ptr()))
    buf348 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_72], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_648, reinterpret_tensor(buf347, (128, 128), (128, 1), 0), reinterpret_tensor(primals_647, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf348)
    del primals_648
    buf349 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_128(c_void_p(buf348.data_ptr()), c_void_p(buf349.data_ptr()))
    buf350 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_114], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_650, buf349, reinterpret_tensor(primals_649, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf350)
    del primals_650
    buf351 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_129(c_void_p(buf350.data_ptr()), c_void_p(buf347.data_ptr()), c_void_p(primals_137.data_ptr()), c_void_p(primals_138.data_ptr()), c_void_p(buf351.data_ptr()))
    buf352 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_74], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_652, buf351, reinterpret_tensor(primals_651, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf352)
    del primals_652
    buf353 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_130(c_void_p(buf352.data_ptr()), c_void_p(buf353.data_ptr()))
    buf354 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_117], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_654, buf353, reinterpret_tensor(primals_653, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf354)
    del primals_654
    buf355 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_131(c_void_p(buf354.data_ptr()), c_void_p(buf350.data_ptr()), c_void_p(buf347.data_ptr()), c_void_p(primals_137.data_ptr()), c_void_p(primals_138.data_ptr()), c_void_p(primals_139.data_ptr()), c_void_p(primals_140.data_ptr()), c_void_p(buf355.data_ptr()))
    buf356 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_76], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_656, reinterpret_tensor(buf355, (128, 128), (128, 1), 0), reinterpret_tensor(primals_655, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf356)
    del primals_656
    buf357 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_132(c_void_p(buf356.data_ptr()), c_void_p(buf357.data_ptr()))
    buf358 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_120], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_658, buf357, reinterpret_tensor(primals_657, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf358)
    del primals_658
    buf359 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_133(c_void_p(buf358.data_ptr()), c_void_p(buf355.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(buf359.data_ptr()))
    buf360 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_78], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_660, buf359, reinterpret_tensor(primals_659, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf360)
    del primals_660
    buf361 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_134(c_void_p(buf360.data_ptr()), c_void_p(buf361.data_ptr()))
    buf362 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_32], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_662, buf361, reinterpret_tensor(primals_661, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf362)
    del primals_662
    buf363 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_135(c_void_p(buf362.data_ptr()), c_void_p(buf358.data_ptr()), c_void_p(buf355.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(primals_143.data_ptr()), c_void_p(primals_144.data_ptr()), c_void_p(buf363.data_ptr()))
    del primals_144
    buf364 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_123], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_664, buf363, reinterpret_tensor(primals_663, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf364)
    del primals_664
    buf365 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_136(c_void_p(buf364.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(primals_146.data_ptr()), c_void_p(buf365.data_ptr()))
    buf366 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_45], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_666, buf365, reinterpret_tensor(primals_665, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf366)
    del primals_666
    buf367 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_47], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_668, buf365, reinterpret_tensor(primals_667, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf367)
    del primals_668
    buf368 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_137(c_void_p(buf367.data_ptr()), c_void_p(primals_149.data_ptr()), c_void_p(primals_150.data_ptr()), c_void_p(buf368.data_ptr()))
    del primals_150
    buf369 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_9], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_670, buf368, reinterpret_tensor(primals_669, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf369)
    del primals_670
    buf370 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_9], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_672, buf368, reinterpret_tensor(primals_671, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf370)
    del primals_672
    buf371 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_9], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_674, buf365, reinterpret_tensor(primals_673, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf371)
    del primals_674
    buf372 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf373 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_138(c_void_p(buf369.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(buf372.data_ptr()), c_void_p(buf373.data_ptr()))
    buf374 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf372, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf373, (4, 32, 128), (4096, 128, 1), 0), out=buf374)
    buf375 = buf337; del buf337  # reuse
    buf376 = reinterpret_tensor(buf374, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf374  # reuse
    buf377 = buf335; del buf335  # reuse
    buf378 = buf376; del buf376  # reuse
    cpp_fused_139(c_void_p(buf378.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(buf377.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf379 = aten.native_dropout(buf378, 0.1, True)
    buf380 = buf379[0]
    buf381 = buf379[1]
    del buf379
    buf382 = reinterpret_tensor(buf370, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf370  # reuse
    cpp_fused_140(c_void_p(buf371.data_ptr()), c_void_p(buf382.data_ptr()))
    buf383 = reinterpret_tensor(buf371, (4, 128, 32), (4096, 32, 1), 0); del buf371  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf380, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf382, (4, 128, 32), (4096, 32, 1), 0), out=buf383)
    buf384 = reinterpret_tensor(buf369, (4, 128, 32), (4096, 32, 1), 0); del buf369  # reuse
    buf385 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_141(c_void_p(buf373.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf385.data_ptr()))
    buf386 = reinterpret_tensor(buf383, (128, 128), (128, 1), 0); del buf383  # reuse
    # Source Nodes: [layer_outputs_126], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_676, buf385, reinterpret_tensor(primals_675, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf386)
    del primals_676
    buf387 = reinterpret_tensor(buf373, (1, 128, 128), (16384, 128, 1), 0); del buf373  # reuse
    cpp_fused_add_mul_142(c_void_p(buf386.data_ptr()), c_void_p(buf366.data_ptr()), c_void_p(primals_147.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(primals_151.data_ptr()), c_void_p(primals_152.data_ptr()), c_void_p(buf387.data_ptr()))
    buf388 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_81], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_678, reinterpret_tensor(buf387, (128, 128), (128, 1), 0), reinterpret_tensor(primals_677, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf388)
    del primals_678
    buf389 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_143(c_void_p(buf388.data_ptr()), c_void_p(buf389.data_ptr()))
    buf390 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_128], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_680, buf389, reinterpret_tensor(primals_679, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf390)
    del primals_680
    buf391 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_144(c_void_p(buf390.data_ptr()), c_void_p(buf387.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(buf391.data_ptr()))
    buf392 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_83], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_682, buf391, reinterpret_tensor(primals_681, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf392)
    del primals_682
    buf393 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_145(c_void_p(buf392.data_ptr()), c_void_p(buf393.data_ptr()))
    buf394 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_131], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_684, buf393, reinterpret_tensor(primals_683, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf394)
    del primals_684
    buf395 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_146(c_void_p(buf394.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(buf387.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(primals_155.data_ptr()), c_void_p(primals_156.data_ptr()), c_void_p(buf395.data_ptr()))
    buf396 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_85], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_686, reinterpret_tensor(buf395, (128, 128), (128, 1), 0), reinterpret_tensor(primals_685, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf396)
    del primals_686
    buf397 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_147(c_void_p(buf396.data_ptr()), c_void_p(buf397.data_ptr()))
    buf398 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_134], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_688, buf397, reinterpret_tensor(primals_687, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf398)
    del primals_688
    buf399 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_148(c_void_p(buf398.data_ptr()), c_void_p(buf395.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(primals_158.data_ptr()), c_void_p(buf399.data_ptr()))
    buf400 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_87], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_690, buf399, reinterpret_tensor(primals_689, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf400)
    del primals_690
    buf401 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_149(c_void_p(buf400.data_ptr()), c_void_p(buf401.data_ptr()))
    buf402 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_36], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_692, buf401, reinterpret_tensor(primals_691, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf402)
    del primals_692
    buf403 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_150(c_void_p(buf402.data_ptr()), c_void_p(buf398.data_ptr()), c_void_p(buf395.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(primals_158.data_ptr()), c_void_p(primals_159.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(buf403.data_ptr()))
    del primals_160
    buf404 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_137], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_694, buf403, reinterpret_tensor(primals_693, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf404)
    del primals_694
    buf405 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_151(c_void_p(buf404.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(primals_146.data_ptr()), c_void_p(primals_161.data_ptr()), c_void_p(primals_162.data_ptr()), c_void_p(buf405.data_ptr()))
    buf406 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_50], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_696, reinterpret_tensor(buf405, (128, 512), (512, 1), 0), reinterpret_tensor(primals_695, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf406)
    del primals_696
    buf407 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_52], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_698, reinterpret_tensor(buf405, (128, 512), (512, 1), 0), reinterpret_tensor(primals_697, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf407)
    del primals_698
    buf408 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_152(c_void_p(buf407.data_ptr()), c_void_p(primals_165.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(buf408.data_ptr()))
    del primals_166
    buf409 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_10], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_700, buf408, reinterpret_tensor(primals_699, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf409)
    del primals_700
    buf410 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_10], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_702, buf408, reinterpret_tensor(primals_701, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf410)
    del primals_702
    buf411 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_10], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_704, reinterpret_tensor(buf405, (128, 512), (512, 1), 0), reinterpret_tensor(primals_703, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf411)
    del primals_704
    buf412 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf413 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_153(c_void_p(buf409.data_ptr()), c_void_p(buf410.data_ptr()), c_void_p(buf412.data_ptr()), c_void_p(buf413.data_ptr()))
    buf414 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf412, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf413, (4, 32, 128), (4096, 128, 1), 0), out=buf414)
    buf415 = buf377; del buf377  # reuse
    buf416 = reinterpret_tensor(buf414, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf414  # reuse
    buf417 = buf375; del buf375  # reuse
    buf418 = buf416; del buf416  # reuse
    cpp_fused_154(c_void_p(buf418.data_ptr()), c_void_p(buf415.data_ptr()), c_void_p(buf417.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf419 = aten.native_dropout(buf418, 0.1, True)
    buf420 = buf419[0]
    buf421 = buf419[1]
    del buf419
    buf422 = reinterpret_tensor(buf410, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf410  # reuse
    cpp_fused_155(c_void_p(buf411.data_ptr()), c_void_p(buf422.data_ptr()))
    buf423 = reinterpret_tensor(buf411, (4, 128, 32), (4096, 32, 1), 0); del buf411  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf420, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf422, (4, 128, 32), (4096, 32, 1), 0), out=buf423)
    buf424 = reinterpret_tensor(buf409, (4, 128, 32), (4096, 32, 1), 0); del buf409  # reuse
    buf425 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_156(c_void_p(buf413.data_ptr()), c_void_p(buf423.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(buf425.data_ptr()))
    buf426 = reinterpret_tensor(buf423, (128, 128), (128, 1), 0); del buf423  # reuse
    # Source Nodes: [layer_outputs_140], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_706, buf425, reinterpret_tensor(primals_705, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf426)
    del primals_706
    buf427 = reinterpret_tensor(buf413, (1, 128, 128), (16384, 128, 1), 0); del buf413  # reuse
    cpp_fused_add_mul_157(c_void_p(buf426.data_ptr()), c_void_p(buf406.data_ptr()), c_void_p(primals_163.data_ptr()), c_void_p(primals_164.data_ptr()), c_void_p(primals_167.data_ptr()), c_void_p(primals_168.data_ptr()), c_void_p(buf427.data_ptr()))
    buf428 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_90], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_708, reinterpret_tensor(buf427, (128, 128), (128, 1), 0), reinterpret_tensor(primals_707, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf428)
    del primals_708
    buf429 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_158(c_void_p(buf428.data_ptr()), c_void_p(buf429.data_ptr()))
    buf430 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_142], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_710, buf429, reinterpret_tensor(primals_709, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf430)
    del primals_710
    buf431 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_159(c_void_p(buf430.data_ptr()), c_void_p(buf427.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(primals_170.data_ptr()), c_void_p(buf431.data_ptr()))
    buf432 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_92], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_712, buf431, reinterpret_tensor(primals_711, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf432)
    del primals_712
    buf433 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_160(c_void_p(buf432.data_ptr()), c_void_p(buf433.data_ptr()))
    buf434 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_145], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_714, buf433, reinterpret_tensor(primals_713, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf434)
    del primals_714
    buf435 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_161(c_void_p(buf434.data_ptr()), c_void_p(buf430.data_ptr()), c_void_p(buf427.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(primals_170.data_ptr()), c_void_p(primals_171.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(buf435.data_ptr()))
    buf436 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_94], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_716, reinterpret_tensor(buf435, (128, 128), (128, 1), 0), reinterpret_tensor(primals_715, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf436)
    del primals_716
    buf437 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_162(c_void_p(buf436.data_ptr()), c_void_p(buf437.data_ptr()))
    buf438 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_148], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_718, buf437, reinterpret_tensor(primals_717, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf438)
    del primals_718
    buf439 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_163(c_void_p(buf438.data_ptr()), c_void_p(buf435.data_ptr()), c_void_p(primals_173.data_ptr()), c_void_p(primals_174.data_ptr()), c_void_p(buf439.data_ptr()))
    buf440 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_96], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_720, buf439, reinterpret_tensor(primals_719, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf440)
    del primals_720
    buf441 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_164(c_void_p(buf440.data_ptr()), c_void_p(buf441.data_ptr()))
    buf442 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_40], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_722, buf441, reinterpret_tensor(primals_721, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf442)
    del primals_722
    buf443 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_165(c_void_p(buf442.data_ptr()), c_void_p(buf438.data_ptr()), c_void_p(buf435.data_ptr()), c_void_p(primals_173.data_ptr()), c_void_p(primals_174.data_ptr()), c_void_p(primals_175.data_ptr()), c_void_p(primals_176.data_ptr()), c_void_p(buf443.data_ptr()))
    del primals_176
    buf444 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_151], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_724, buf443, reinterpret_tensor(primals_723, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf444)
    del primals_724
    buf445 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_166(c_void_p(buf444.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(buf445.data_ptr()))
    buf446 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_55], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_726, buf445, reinterpret_tensor(primals_725, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf446)
    del primals_726
    buf447 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_57], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_728, buf445, reinterpret_tensor(primals_727, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf447)
    del primals_728
    buf448 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_167(c_void_p(buf447.data_ptr()), c_void_p(primals_181.data_ptr()), c_void_p(primals_182.data_ptr()), c_void_p(buf448.data_ptr()))
    del primals_182
    buf449 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_11], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_730, buf448, reinterpret_tensor(primals_729, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf449)
    del primals_730
    buf450 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_11], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_732, buf448, reinterpret_tensor(primals_731, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf450)
    del primals_732
    buf451 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_11], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_734, buf445, reinterpret_tensor(primals_733, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf451)
    del primals_734
    buf452 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf453 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_168(c_void_p(buf449.data_ptr()), c_void_p(buf450.data_ptr()), c_void_p(buf452.data_ptr()), c_void_p(buf453.data_ptr()))
    buf454 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf452, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf453, (4, 32, 128), (4096, 128, 1), 0), out=buf454)
    buf455 = buf417; del buf417  # reuse
    buf456 = reinterpret_tensor(buf454, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf454  # reuse
    buf457 = buf415; del buf415  # reuse
    buf458 = buf456; del buf456  # reuse
    cpp_fused_169(c_void_p(buf458.data_ptr()), c_void_p(buf455.data_ptr()), c_void_p(buf457.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf459 = aten.native_dropout(buf458, 0.1, True)
    buf460 = buf459[0]
    buf461 = buf459[1]
    del buf459
    buf462 = reinterpret_tensor(buf450, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf450  # reuse
    cpp_fused_170(c_void_p(buf451.data_ptr()), c_void_p(buf462.data_ptr()))
    buf463 = reinterpret_tensor(buf451, (4, 128, 32), (4096, 32, 1), 0); del buf451  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf460, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf462, (4, 128, 32), (4096, 32, 1), 0), out=buf463)
    buf464 = reinterpret_tensor(buf449, (4, 128, 32), (4096, 32, 1), 0); del buf449  # reuse
    buf465 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_171(c_void_p(buf453.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf464.data_ptr()), c_void_p(buf465.data_ptr()))
    buf466 = reinterpret_tensor(buf463, (128, 128), (128, 1), 0); del buf463  # reuse
    # Source Nodes: [layer_outputs_154], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_736, buf465, reinterpret_tensor(primals_735, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf466)
    del primals_736
    buf467 = reinterpret_tensor(buf453, (1, 128, 128), (16384, 128, 1), 0); del buf453  # reuse
    cpp_fused_add_mul_172(c_void_p(buf466.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(primals_179.data_ptr()), c_void_p(primals_180.data_ptr()), c_void_p(primals_183.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(buf467.data_ptr()))
    buf468 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_99], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_738, reinterpret_tensor(buf467, (128, 128), (128, 1), 0), reinterpret_tensor(primals_737, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf468)
    del primals_738
    buf469 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_173(c_void_p(buf468.data_ptr()), c_void_p(buf469.data_ptr()))
    buf470 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_156], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_740, buf469, reinterpret_tensor(primals_739, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf470)
    del primals_740
    buf471 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_174(c_void_p(buf470.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(primals_185.data_ptr()), c_void_p(primals_186.data_ptr()), c_void_p(buf471.data_ptr()))
    buf472 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_101], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_742, buf471, reinterpret_tensor(primals_741, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf472)
    del primals_742
    buf473 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_175(c_void_p(buf472.data_ptr()), c_void_p(buf473.data_ptr()))
    buf474 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_159], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_744, buf473, reinterpret_tensor(primals_743, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf474)
    del primals_744
    buf475 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_176(c_void_p(buf474.data_ptr()), c_void_p(buf470.data_ptr()), c_void_p(buf467.data_ptr()), c_void_p(primals_185.data_ptr()), c_void_p(primals_186.data_ptr()), c_void_p(primals_187.data_ptr()), c_void_p(primals_188.data_ptr()), c_void_p(buf475.data_ptr()))
    buf476 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_103], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_746, reinterpret_tensor(buf475, (128, 128), (128, 1), 0), reinterpret_tensor(primals_745, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf476)
    del primals_746
    buf477 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_177(c_void_p(buf476.data_ptr()), c_void_p(buf477.data_ptr()))
    buf478 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_162], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_748, buf477, reinterpret_tensor(primals_747, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf478)
    del primals_748
    buf479 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_178(c_void_p(buf478.data_ptr()), c_void_p(buf475.data_ptr()), c_void_p(primals_189.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(buf479.data_ptr()))
    buf480 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_105], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_750, buf479, reinterpret_tensor(primals_749, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf480)
    del primals_750
    buf481 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_179(c_void_p(buf480.data_ptr()), c_void_p(buf481.data_ptr()))
    buf482 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_44], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_752, buf481, reinterpret_tensor(primals_751, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf482)
    del primals_752
    buf483 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_180(c_void_p(buf482.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf475.data_ptr()), c_void_p(primals_189.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(primals_191.data_ptr()), c_void_p(primals_192.data_ptr()), c_void_p(buf483.data_ptr()))
    del primals_192
    buf484 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_165], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_754, buf483, reinterpret_tensor(primals_753, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf484)
    del primals_754
    buf485 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_181(c_void_p(buf484.data_ptr()), c_void_p(buf444.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(primals_193.data_ptr()), c_void_p(primals_194.data_ptr()), c_void_p(buf485.data_ptr()))
    buf486 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_60], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_756, reinterpret_tensor(buf485, (128, 512), (512, 1), 0), reinterpret_tensor(primals_755, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf486)
    del primals_756
    buf487 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_62], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_758, reinterpret_tensor(buf485, (128, 512), (512, 1), 0), reinterpret_tensor(primals_757, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf487)
    del primals_758
    buf488 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_182(c_void_p(buf487.data_ptr()), c_void_p(primals_197.data_ptr()), c_void_p(primals_198.data_ptr()), c_void_p(buf488.data_ptr()))
    del primals_198
    buf489 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_760, buf488, reinterpret_tensor(primals_759, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf489)
    del primals_760
    buf490 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_762, buf488, reinterpret_tensor(primals_761, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf490)
    del primals_762
    buf491 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_12], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_764, reinterpret_tensor(buf485, (128, 512), (512, 1), 0), reinterpret_tensor(primals_763, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf491)
    del primals_764
    buf492 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf493 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_183(c_void_p(buf489.data_ptr()), c_void_p(buf490.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(buf493.data_ptr()))
    buf494 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf492, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf493, (4, 32, 128), (4096, 128, 1), 0), out=buf494)
    buf495 = buf457; del buf457  # reuse
    buf496 = reinterpret_tensor(buf494, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf494  # reuse
    buf497 = buf455; del buf455  # reuse
    buf498 = buf496; del buf496  # reuse
    cpp_fused_184(c_void_p(buf498.data_ptr()), c_void_p(buf495.data_ptr()), c_void_p(buf497.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf499 = aten.native_dropout(buf498, 0.1, True)
    buf500 = buf499[0]
    buf501 = buf499[1]
    del buf499
    buf502 = reinterpret_tensor(buf490, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf490  # reuse
    cpp_fused_185(c_void_p(buf491.data_ptr()), c_void_p(buf502.data_ptr()))
    buf503 = reinterpret_tensor(buf491, (4, 128, 32), (4096, 32, 1), 0); del buf491  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf500, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf502, (4, 128, 32), (4096, 32, 1), 0), out=buf503)
    buf504 = reinterpret_tensor(buf489, (4, 128, 32), (4096, 32, 1), 0); del buf489  # reuse
    buf505 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_186(c_void_p(buf493.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(buf504.data_ptr()), c_void_p(buf505.data_ptr()))
    buf506 = reinterpret_tensor(buf503, (128, 128), (128, 1), 0); del buf503  # reuse
    # Source Nodes: [layer_outputs_168], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_766, buf505, reinterpret_tensor(primals_765, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf506)
    del primals_766
    buf507 = reinterpret_tensor(buf493, (1, 128, 128), (16384, 128, 1), 0); del buf493  # reuse
    cpp_fused_add_mul_187(c_void_p(buf506.data_ptr()), c_void_p(buf486.data_ptr()), c_void_p(primals_195.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(primals_199.data_ptr()), c_void_p(primals_200.data_ptr()), c_void_p(buf507.data_ptr()))
    buf508 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_108], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_768, reinterpret_tensor(buf507, (128, 128), (128, 1), 0), reinterpret_tensor(primals_767, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf508)
    del primals_768
    buf509 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_188(c_void_p(buf508.data_ptr()), c_void_p(buf509.data_ptr()))
    buf510 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_170], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_770, buf509, reinterpret_tensor(primals_769, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf510)
    del primals_770
    buf511 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_189(c_void_p(buf510.data_ptr()), c_void_p(buf507.data_ptr()), c_void_p(primals_201.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(buf511.data_ptr()))
    buf512 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_110], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_772, buf511, reinterpret_tensor(primals_771, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf512)
    del primals_772
    buf513 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_190(c_void_p(buf512.data_ptr()), c_void_p(buf513.data_ptr()))
    buf514 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_173], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_774, buf513, reinterpret_tensor(primals_773, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf514)
    del primals_774
    buf515 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_191(c_void_p(buf514.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf507.data_ptr()), c_void_p(primals_201.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(primals_203.data_ptr()), c_void_p(primals_204.data_ptr()), c_void_p(buf515.data_ptr()))
    buf516 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_112], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_776, reinterpret_tensor(buf515, (128, 128), (128, 1), 0), reinterpret_tensor(primals_775, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf516)
    del primals_776
    buf517 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_192(c_void_p(buf516.data_ptr()), c_void_p(buf517.data_ptr()))
    buf518 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_176], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_778, buf517, reinterpret_tensor(primals_777, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf518)
    del primals_778
    buf519 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_193(c_void_p(buf518.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(primals_205.data_ptr()), c_void_p(primals_206.data_ptr()), c_void_p(buf519.data_ptr()))
    buf520 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_114], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_780, buf519, reinterpret_tensor(primals_779, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf520)
    del primals_780
    buf521 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_194(c_void_p(buf520.data_ptr()), c_void_p(buf521.data_ptr()))
    buf522 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_48], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_782, buf521, reinterpret_tensor(primals_781, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf522)
    del primals_782
    buf523 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_195(c_void_p(buf522.data_ptr()), c_void_p(buf518.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(primals_205.data_ptr()), c_void_p(primals_206.data_ptr()), c_void_p(primals_207.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(buf523.data_ptr()))
    del primals_208
    buf524 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_179], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_784, buf523, reinterpret_tensor(primals_783, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf524)
    del primals_784
    buf525 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_196(c_void_p(buf524.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(primals_209.data_ptr()), c_void_p(primals_210.data_ptr()), c_void_p(buf525.data_ptr()))
    buf526 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_65], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_786, buf525, reinterpret_tensor(primals_785, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf526)
    del primals_786
    buf527 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_67], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_788, buf525, reinterpret_tensor(primals_787, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf527)
    del primals_788
    buf528 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_197(c_void_p(buf527.data_ptr()), c_void_p(primals_213.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(buf528.data_ptr()))
    del primals_214
    buf529 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_13], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_790, buf528, reinterpret_tensor(primals_789, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf529)
    del primals_790
    buf530 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_13], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_792, buf528, reinterpret_tensor(primals_791, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf530)
    del primals_792
    buf531 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_13], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_794, buf525, reinterpret_tensor(primals_793, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf531)
    del primals_794
    buf532 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf533 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_198(c_void_p(buf529.data_ptr()), c_void_p(buf530.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf533.data_ptr()))
    buf534 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf532, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf533, (4, 32, 128), (4096, 128, 1), 0), out=buf534)
    buf535 = buf497; del buf497  # reuse
    buf536 = reinterpret_tensor(buf534, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf534  # reuse
    buf537 = buf495; del buf495  # reuse
    buf538 = buf536; del buf536  # reuse
    cpp_fused_199(c_void_p(buf538.data_ptr()), c_void_p(buf535.data_ptr()), c_void_p(buf537.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf539 = aten.native_dropout(buf538, 0.1, True)
    buf540 = buf539[0]
    buf541 = buf539[1]
    del buf539
    buf542 = reinterpret_tensor(buf530, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf530  # reuse
    cpp_fused_200(c_void_p(buf531.data_ptr()), c_void_p(buf542.data_ptr()))
    buf543 = reinterpret_tensor(buf531, (4, 128, 32), (4096, 32, 1), 0); del buf531  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf540, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf542, (4, 128, 32), (4096, 32, 1), 0), out=buf543)
    buf544 = reinterpret_tensor(buf529, (4, 128, 32), (4096, 32, 1), 0); del buf529  # reuse
    buf545 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_201(c_void_p(buf533.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(buf545.data_ptr()))
    buf546 = reinterpret_tensor(buf543, (128, 128), (128, 1), 0); del buf543  # reuse
    # Source Nodes: [layer_outputs_182], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_796, buf545, reinterpret_tensor(primals_795, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf546)
    del primals_796
    buf547 = reinterpret_tensor(buf533, (1, 128, 128), (16384, 128, 1), 0); del buf533  # reuse
    cpp_fused_add_mul_202(c_void_p(buf546.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(primals_211.data_ptr()), c_void_p(primals_212.data_ptr()), c_void_p(primals_215.data_ptr()), c_void_p(primals_216.data_ptr()), c_void_p(buf547.data_ptr()))
    buf548 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_117], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_798, reinterpret_tensor(buf547, (128, 128), (128, 1), 0), reinterpret_tensor(primals_797, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf548)
    del primals_798
    buf549 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_203(c_void_p(buf548.data_ptr()), c_void_p(buf549.data_ptr()))
    buf550 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_184], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_800, buf549, reinterpret_tensor(primals_799, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf550)
    del primals_800
    buf551 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_204(c_void_p(buf550.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_217.data_ptr()), c_void_p(primals_218.data_ptr()), c_void_p(buf551.data_ptr()))
    buf552 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_119], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_802, buf551, reinterpret_tensor(primals_801, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf552)
    del primals_802
    buf553 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_205(c_void_p(buf552.data_ptr()), c_void_p(buf553.data_ptr()))
    buf554 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_187], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_804, buf553, reinterpret_tensor(primals_803, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf554)
    del primals_804
    buf555 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_206(c_void_p(buf554.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(primals_217.data_ptr()), c_void_p(primals_218.data_ptr()), c_void_p(primals_219.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(buf555.data_ptr()))
    buf556 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_121], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_806, reinterpret_tensor(buf555, (128, 128), (128, 1), 0), reinterpret_tensor(primals_805, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf556)
    del primals_806
    buf557 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_207(c_void_p(buf556.data_ptr()), c_void_p(buf557.data_ptr()))
    buf558 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_190], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_808, buf557, reinterpret_tensor(primals_807, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf558)
    del primals_808
    buf559 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_208(c_void_p(buf558.data_ptr()), c_void_p(buf555.data_ptr()), c_void_p(primals_221.data_ptr()), c_void_p(primals_222.data_ptr()), c_void_p(buf559.data_ptr()))
    buf560 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_123], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_810, buf559, reinterpret_tensor(primals_809, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf560)
    del primals_810
    buf561 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_209(c_void_p(buf560.data_ptr()), c_void_p(buf561.data_ptr()))
    buf562 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_52], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_812, buf561, reinterpret_tensor(primals_811, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf562)
    del primals_812
    buf563 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_210(c_void_p(buf562.data_ptr()), c_void_p(buf558.data_ptr()), c_void_p(buf555.data_ptr()), c_void_p(primals_221.data_ptr()), c_void_p(primals_222.data_ptr()), c_void_p(primals_223.data_ptr()), c_void_p(primals_224.data_ptr()), c_void_p(buf563.data_ptr()))
    del primals_224
    buf564 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_193], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_814, buf563, reinterpret_tensor(primals_813, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf564)
    del primals_814
    buf565 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_211(c_void_p(buf564.data_ptr()), c_void_p(buf524.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(primals_209.data_ptr()), c_void_p(primals_210.data_ptr()), c_void_p(primals_225.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(buf565.data_ptr()))
    buf566 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_70], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_816, reinterpret_tensor(buf565, (128, 512), (512, 1), 0), reinterpret_tensor(primals_815, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf566)
    del primals_816
    buf567 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_72], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_818, reinterpret_tensor(buf565, (128, 512), (512, 1), 0), reinterpret_tensor(primals_817, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf567)
    del primals_818
    buf568 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_212(c_void_p(buf567.data_ptr()), c_void_p(primals_229.data_ptr()), c_void_p(primals_230.data_ptr()), c_void_p(buf568.data_ptr()))
    del primals_230
    buf569 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_14], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_820, buf568, reinterpret_tensor(primals_819, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf569)
    del primals_820
    buf570 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_14], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_822, buf568, reinterpret_tensor(primals_821, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf570)
    del primals_822
    buf571 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_14], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_824, reinterpret_tensor(buf565, (128, 512), (512, 1), 0), reinterpret_tensor(primals_823, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf571)
    del primals_824
    buf572 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf573 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_213(c_void_p(buf569.data_ptr()), c_void_p(buf570.data_ptr()), c_void_p(buf572.data_ptr()), c_void_p(buf573.data_ptr()))
    buf574 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf572, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf573, (4, 32, 128), (4096, 128, 1), 0), out=buf574)
    buf575 = buf537; del buf537  # reuse
    buf576 = reinterpret_tensor(buf574, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf574  # reuse
    buf577 = buf535; del buf535  # reuse
    buf578 = buf576; del buf576  # reuse
    cpp_fused_214(c_void_p(buf578.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(buf577.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf579 = aten.native_dropout(buf578, 0.1, True)
    buf580 = buf579[0]
    buf581 = buf579[1]
    del buf579
    buf582 = reinterpret_tensor(buf570, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf570  # reuse
    cpp_fused_215(c_void_p(buf571.data_ptr()), c_void_p(buf582.data_ptr()))
    buf583 = reinterpret_tensor(buf571, (4, 128, 32), (4096, 32, 1), 0); del buf571  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf580, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf582, (4, 128, 32), (4096, 32, 1), 0), out=buf583)
    buf584 = reinterpret_tensor(buf569, (4, 128, 32), (4096, 32, 1), 0); del buf569  # reuse
    buf585 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_216(c_void_p(buf573.data_ptr()), c_void_p(buf583.data_ptr()), c_void_p(buf584.data_ptr()), c_void_p(buf585.data_ptr()))
    buf586 = reinterpret_tensor(buf583, (128, 128), (128, 1), 0); del buf583  # reuse
    # Source Nodes: [layer_outputs_196], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_826, buf585, reinterpret_tensor(primals_825, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf586)
    del primals_826
    buf587 = reinterpret_tensor(buf573, (1, 128, 128), (16384, 128, 1), 0); del buf573  # reuse
    cpp_fused_add_mul_217(c_void_p(buf586.data_ptr()), c_void_p(buf566.data_ptr()), c_void_p(primals_227.data_ptr()), c_void_p(primals_228.data_ptr()), c_void_p(primals_231.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(buf587.data_ptr()))
    buf588 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_126], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_828, reinterpret_tensor(buf587, (128, 128), (128, 1), 0), reinterpret_tensor(primals_827, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf588)
    del primals_828
    buf589 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_218(c_void_p(buf588.data_ptr()), c_void_p(buf589.data_ptr()))
    buf590 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_198], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_830, buf589, reinterpret_tensor(primals_829, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf590)
    del primals_830
    buf591 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_219(c_void_p(buf590.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_233.data_ptr()), c_void_p(primals_234.data_ptr()), c_void_p(buf591.data_ptr()))
    buf592 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_128], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_832, buf591, reinterpret_tensor(primals_831, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf592)
    del primals_832
    buf593 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_220(c_void_p(buf592.data_ptr()), c_void_p(buf593.data_ptr()))
    buf594 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_201], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_834, buf593, reinterpret_tensor(primals_833, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf594)
    del primals_834
    buf595 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_221(c_void_p(buf594.data_ptr()), c_void_p(buf590.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(primals_233.data_ptr()), c_void_p(primals_234.data_ptr()), c_void_p(primals_235.data_ptr()), c_void_p(primals_236.data_ptr()), c_void_p(buf595.data_ptr()))
    buf596 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_130], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_836, reinterpret_tensor(buf595, (128, 128), (128, 1), 0), reinterpret_tensor(primals_835, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf596)
    del primals_836
    buf597 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_222(c_void_p(buf596.data_ptr()), c_void_p(buf597.data_ptr()))
    buf598 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_204], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_838, buf597, reinterpret_tensor(primals_837, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf598)
    del primals_838
    buf599 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_223(c_void_p(buf598.data_ptr()), c_void_p(buf595.data_ptr()), c_void_p(primals_237.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(buf599.data_ptr()))
    buf600 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_132], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_840, buf599, reinterpret_tensor(primals_839, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf600)
    del primals_840
    buf601 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_224(c_void_p(buf600.data_ptr()), c_void_p(buf601.data_ptr()))
    buf602 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_56], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_842, buf601, reinterpret_tensor(primals_841, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf602)
    del primals_842
    buf603 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_225(c_void_p(buf602.data_ptr()), c_void_p(buf598.data_ptr()), c_void_p(buf595.data_ptr()), c_void_p(primals_237.data_ptr()), c_void_p(primals_238.data_ptr()), c_void_p(primals_239.data_ptr()), c_void_p(primals_240.data_ptr()), c_void_p(buf603.data_ptr()))
    del primals_240
    buf604 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_207], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_844, buf603, reinterpret_tensor(primals_843, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf604)
    del primals_844
    buf605 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_226(c_void_p(buf604.data_ptr()), c_void_p(buf565.data_ptr()), c_void_p(primals_241.data_ptr()), c_void_p(primals_242.data_ptr()), c_void_p(buf605.data_ptr()))
    buf606 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_75], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_846, buf605, reinterpret_tensor(primals_845, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf606)
    del primals_846
    buf607 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_77], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_848, buf605, reinterpret_tensor(primals_847, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf607)
    del primals_848
    buf608 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_227(c_void_p(buf607.data_ptr()), c_void_p(primals_245.data_ptr()), c_void_p(primals_246.data_ptr()), c_void_p(buf608.data_ptr()))
    del primals_246
    buf609 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_15], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_850, buf608, reinterpret_tensor(primals_849, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf609)
    del primals_850
    buf610 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_15], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_852, buf608, reinterpret_tensor(primals_851, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf610)
    del primals_852
    buf611 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_15], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_854, buf605, reinterpret_tensor(primals_853, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf611)
    del primals_854
    buf612 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf613 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_228(c_void_p(buf609.data_ptr()), c_void_p(buf610.data_ptr()), c_void_p(buf612.data_ptr()), c_void_p(buf613.data_ptr()))
    buf614 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf612, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf613, (4, 32, 128), (4096, 128, 1), 0), out=buf614)
    buf615 = buf577; del buf577  # reuse
    buf616 = reinterpret_tensor(buf614, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf614  # reuse
    buf617 = buf575; del buf575  # reuse
    buf618 = buf616; del buf616  # reuse
    cpp_fused_229(c_void_p(buf618.data_ptr()), c_void_p(buf615.data_ptr()), c_void_p(buf617.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf619 = aten.native_dropout(buf618, 0.1, True)
    buf620 = buf619[0]
    buf621 = buf619[1]
    del buf619
    buf622 = reinterpret_tensor(buf610, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf610  # reuse
    cpp_fused_230(c_void_p(buf611.data_ptr()), c_void_p(buf622.data_ptr()))
    buf623 = reinterpret_tensor(buf611, (4, 128, 32), (4096, 32, 1), 0); del buf611  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf620, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf622, (4, 128, 32), (4096, 32, 1), 0), out=buf623)
    buf624 = reinterpret_tensor(buf609, (4, 128, 32), (4096, 32, 1), 0); del buf609  # reuse
    buf625 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_231(c_void_p(buf613.data_ptr()), c_void_p(buf623.data_ptr()), c_void_p(buf624.data_ptr()), c_void_p(buf625.data_ptr()))
    buf626 = reinterpret_tensor(buf623, (128, 128), (128, 1), 0); del buf623  # reuse
    # Source Nodes: [layer_outputs_210], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_856, buf625, reinterpret_tensor(primals_855, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf626)
    del primals_856
    buf627 = reinterpret_tensor(buf613, (1, 128, 128), (16384, 128, 1), 0); del buf613  # reuse
    cpp_fused_add_mul_232(c_void_p(buf626.data_ptr()), c_void_p(buf606.data_ptr()), c_void_p(primals_243.data_ptr()), c_void_p(primals_244.data_ptr()), c_void_p(primals_247.data_ptr()), c_void_p(primals_248.data_ptr()), c_void_p(buf627.data_ptr()))
    buf628 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_135], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_858, reinterpret_tensor(buf627, (128, 128), (128, 1), 0), reinterpret_tensor(primals_857, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf628)
    del primals_858
    buf629 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_233(c_void_p(buf628.data_ptr()), c_void_p(buf629.data_ptr()))
    buf630 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_212], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_860, buf629, reinterpret_tensor(primals_859, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf630)
    del primals_860
    buf631 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_234(c_void_p(buf630.data_ptr()), c_void_p(buf627.data_ptr()), c_void_p(primals_249.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(buf631.data_ptr()))
    buf632 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_137], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_862, buf631, reinterpret_tensor(primals_861, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf632)
    del primals_862
    buf633 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_235(c_void_p(buf632.data_ptr()), c_void_p(buf633.data_ptr()))
    buf634 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_215], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_864, buf633, reinterpret_tensor(primals_863, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf634)
    del primals_864
    buf635 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_236(c_void_p(buf634.data_ptr()), c_void_p(buf630.data_ptr()), c_void_p(buf627.data_ptr()), c_void_p(primals_249.data_ptr()), c_void_p(primals_250.data_ptr()), c_void_p(primals_251.data_ptr()), c_void_p(primals_252.data_ptr()), c_void_p(buf635.data_ptr()))
    buf636 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_139], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_866, reinterpret_tensor(buf635, (128, 128), (128, 1), 0), reinterpret_tensor(primals_865, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf636)
    del primals_866
    buf637 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_237(c_void_p(buf636.data_ptr()), c_void_p(buf637.data_ptr()))
    buf638 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_218], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_868, buf637, reinterpret_tensor(primals_867, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf638)
    del primals_868
    buf639 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_238(c_void_p(buf638.data_ptr()), c_void_p(buf635.data_ptr()), c_void_p(primals_253.data_ptr()), c_void_p(primals_254.data_ptr()), c_void_p(buf639.data_ptr()))
    buf640 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_141], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_870, buf639, reinterpret_tensor(primals_869, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf640)
    del primals_870
    buf641 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_239(c_void_p(buf640.data_ptr()), c_void_p(buf641.data_ptr()))
    buf642 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_60], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_872, buf641, reinterpret_tensor(primals_871, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf642)
    del primals_872
    buf643 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_240(c_void_p(buf642.data_ptr()), c_void_p(buf638.data_ptr()), c_void_p(buf635.data_ptr()), c_void_p(primals_253.data_ptr()), c_void_p(primals_254.data_ptr()), c_void_p(primals_255.data_ptr()), c_void_p(primals_256.data_ptr()), c_void_p(buf643.data_ptr()))
    del primals_256
    buf644 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_221], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_874, buf643, reinterpret_tensor(primals_873, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf644)
    del primals_874
    buf645 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_241(c_void_p(buf644.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(buf565.data_ptr()), c_void_p(primals_241.data_ptr()), c_void_p(primals_242.data_ptr()), c_void_p(primals_257.data_ptr()), c_void_p(primals_258.data_ptr()), c_void_p(buf645.data_ptr()))
    buf646 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_80], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_876, reinterpret_tensor(buf645, (128, 512), (512, 1), 0), reinterpret_tensor(primals_875, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf646)
    del primals_876
    buf647 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_82], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_878, reinterpret_tensor(buf645, (128, 512), (512, 1), 0), reinterpret_tensor(primals_877, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf647)
    del primals_878
    buf648 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_242(c_void_p(buf647.data_ptr()), c_void_p(primals_261.data_ptr()), c_void_p(primals_262.data_ptr()), c_void_p(buf648.data_ptr()))
    del primals_262
    buf649 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_16], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_880, buf648, reinterpret_tensor(primals_879, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf649)
    del primals_880
    buf650 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_16], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_882, buf648, reinterpret_tensor(primals_881, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf650)
    del primals_882
    buf651 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_16], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_884, reinterpret_tensor(buf645, (128, 512), (512, 1), 0), reinterpret_tensor(primals_883, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf651)
    del primals_884
    buf652 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf653 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_243(c_void_p(buf649.data_ptr()), c_void_p(buf650.data_ptr()), c_void_p(buf652.data_ptr()), c_void_p(buf653.data_ptr()))
    buf654 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf652, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf653, (4, 32, 128), (4096, 128, 1), 0), out=buf654)
    buf655 = buf617; del buf617  # reuse
    buf656 = reinterpret_tensor(buf654, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf654  # reuse
    buf657 = buf615; del buf615  # reuse
    buf658 = buf656; del buf656  # reuse
    cpp_fused_244(c_void_p(buf658.data_ptr()), c_void_p(buf655.data_ptr()), c_void_p(buf657.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf659 = aten.native_dropout(buf658, 0.1, True)
    buf660 = buf659[0]
    buf661 = buf659[1]
    del buf659
    buf662 = reinterpret_tensor(buf650, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf650  # reuse
    cpp_fused_245(c_void_p(buf651.data_ptr()), c_void_p(buf662.data_ptr()))
    buf663 = reinterpret_tensor(buf651, (4, 128, 32), (4096, 32, 1), 0); del buf651  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf660, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf662, (4, 128, 32), (4096, 32, 1), 0), out=buf663)
    buf664 = reinterpret_tensor(buf649, (4, 128, 32), (4096, 32, 1), 0); del buf649  # reuse
    buf665 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_246(c_void_p(buf653.data_ptr()), c_void_p(buf663.data_ptr()), c_void_p(buf664.data_ptr()), c_void_p(buf665.data_ptr()))
    buf666 = reinterpret_tensor(buf663, (128, 128), (128, 1), 0); del buf663  # reuse
    # Source Nodes: [layer_outputs_224], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_886, buf665, reinterpret_tensor(primals_885, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf666)
    del primals_886
    buf667 = reinterpret_tensor(buf653, (1, 128, 128), (16384, 128, 1), 0); del buf653  # reuse
    cpp_fused_add_mul_247(c_void_p(buf666.data_ptr()), c_void_p(buf646.data_ptr()), c_void_p(primals_259.data_ptr()), c_void_p(primals_260.data_ptr()), c_void_p(primals_263.data_ptr()), c_void_p(primals_264.data_ptr()), c_void_p(buf667.data_ptr()))
    buf668 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_144], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_888, reinterpret_tensor(buf667, (128, 128), (128, 1), 0), reinterpret_tensor(primals_887, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf668)
    del primals_888
    buf669 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_248(c_void_p(buf668.data_ptr()), c_void_p(buf669.data_ptr()))
    buf670 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_226], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_890, buf669, reinterpret_tensor(primals_889, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf670)
    del primals_890
    buf671 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_249(c_void_p(buf670.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(primals_265.data_ptr()), c_void_p(primals_266.data_ptr()), c_void_p(buf671.data_ptr()))
    buf672 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_146], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_892, buf671, reinterpret_tensor(primals_891, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf672)
    del primals_892
    buf673 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_250(c_void_p(buf672.data_ptr()), c_void_p(buf673.data_ptr()))
    buf674 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_229], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_894, buf673, reinterpret_tensor(primals_893, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf674)
    del primals_894
    buf675 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_251(c_void_p(buf674.data_ptr()), c_void_p(buf670.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(primals_265.data_ptr()), c_void_p(primals_266.data_ptr()), c_void_p(primals_267.data_ptr()), c_void_p(primals_268.data_ptr()), c_void_p(buf675.data_ptr()))
    buf676 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_148], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_896, reinterpret_tensor(buf675, (128, 128), (128, 1), 0), reinterpret_tensor(primals_895, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf676)
    del primals_896
    buf677 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_252(c_void_p(buf676.data_ptr()), c_void_p(buf677.data_ptr()))
    buf678 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_232], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_898, buf677, reinterpret_tensor(primals_897, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf678)
    del primals_898
    buf679 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_253(c_void_p(buf678.data_ptr()), c_void_p(buf675.data_ptr()), c_void_p(primals_269.data_ptr()), c_void_p(primals_270.data_ptr()), c_void_p(buf679.data_ptr()))
    buf680 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_150], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_900, buf679, reinterpret_tensor(primals_899, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf680)
    del primals_900
    buf681 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_254(c_void_p(buf680.data_ptr()), c_void_p(buf681.data_ptr()))
    buf682 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_64], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_902, buf681, reinterpret_tensor(primals_901, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf682)
    del primals_902
    buf683 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_255(c_void_p(buf682.data_ptr()), c_void_p(buf678.data_ptr()), c_void_p(buf675.data_ptr()), c_void_p(primals_269.data_ptr()), c_void_p(primals_270.data_ptr()), c_void_p(primals_271.data_ptr()), c_void_p(primals_272.data_ptr()), c_void_p(buf683.data_ptr()))
    del primals_272
    buf684 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_235], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_904, buf683, reinterpret_tensor(primals_903, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf684)
    del primals_904
    buf685 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_256(c_void_p(buf684.data_ptr()), c_void_p(buf645.data_ptr()), c_void_p(primals_273.data_ptr()), c_void_p(primals_274.data_ptr()), c_void_p(buf685.data_ptr()))
    buf686 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_85], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_906, buf685, reinterpret_tensor(primals_905, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf686)
    del primals_906
    buf687 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_87], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_908, buf685, reinterpret_tensor(primals_907, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf687)
    del primals_908
    buf688 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_257(c_void_p(buf687.data_ptr()), c_void_p(primals_277.data_ptr()), c_void_p(primals_278.data_ptr()), c_void_p(buf688.data_ptr()))
    del primals_278
    buf689 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_17], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_910, buf688, reinterpret_tensor(primals_909, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf689)
    del primals_910
    buf690 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_17], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_912, buf688, reinterpret_tensor(primals_911, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf690)
    del primals_912
    buf691 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_17], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_914, buf685, reinterpret_tensor(primals_913, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf691)
    del primals_914
    buf692 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf693 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_258(c_void_p(buf689.data_ptr()), c_void_p(buf690.data_ptr()), c_void_p(buf692.data_ptr()), c_void_p(buf693.data_ptr()))
    buf694 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf692, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf693, (4, 32, 128), (4096, 128, 1), 0), out=buf694)
    buf695 = buf657; del buf657  # reuse
    buf696 = reinterpret_tensor(buf694, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf694  # reuse
    buf697 = buf655; del buf655  # reuse
    buf698 = buf696; del buf696  # reuse
    cpp_fused_259(c_void_p(buf698.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(buf697.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf699 = aten.native_dropout(buf698, 0.1, True)
    buf700 = buf699[0]
    buf701 = buf699[1]
    del buf699
    buf702 = reinterpret_tensor(buf690, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf690  # reuse
    cpp_fused_260(c_void_p(buf691.data_ptr()), c_void_p(buf702.data_ptr()))
    buf703 = reinterpret_tensor(buf691, (4, 128, 32), (4096, 32, 1), 0); del buf691  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf700, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf702, (4, 128, 32), (4096, 32, 1), 0), out=buf703)
    buf704 = reinterpret_tensor(buf689, (4, 128, 32), (4096, 32, 1), 0); del buf689  # reuse
    buf705 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_261(c_void_p(buf693.data_ptr()), c_void_p(buf703.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(buf705.data_ptr()))
    buf706 = reinterpret_tensor(buf703, (128, 128), (128, 1), 0); del buf703  # reuse
    # Source Nodes: [layer_outputs_238], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_916, buf705, reinterpret_tensor(primals_915, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf706)
    del primals_916
    buf707 = reinterpret_tensor(buf693, (1, 128, 128), (16384, 128, 1), 0); del buf693  # reuse
    cpp_fused_add_mul_262(c_void_p(buf706.data_ptr()), c_void_p(buf686.data_ptr()), c_void_p(primals_275.data_ptr()), c_void_p(primals_276.data_ptr()), c_void_p(primals_279.data_ptr()), c_void_p(primals_280.data_ptr()), c_void_p(buf707.data_ptr()))
    buf708 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_153], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_918, reinterpret_tensor(buf707, (128, 128), (128, 1), 0), reinterpret_tensor(primals_917, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf708)
    del primals_918
    buf709 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_263(c_void_p(buf708.data_ptr()), c_void_p(buf709.data_ptr()))
    buf710 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_240], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_920, buf709, reinterpret_tensor(primals_919, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf710)
    del primals_920
    buf711 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_264(c_void_p(buf710.data_ptr()), c_void_p(buf707.data_ptr()), c_void_p(primals_281.data_ptr()), c_void_p(primals_282.data_ptr()), c_void_p(buf711.data_ptr()))
    buf712 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_155], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_922, buf711, reinterpret_tensor(primals_921, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf712)
    del primals_922
    buf713 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_265(c_void_p(buf712.data_ptr()), c_void_p(buf713.data_ptr()))
    buf714 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_243], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_924, buf713, reinterpret_tensor(primals_923, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf714)
    del primals_924
    buf715 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_266(c_void_p(buf714.data_ptr()), c_void_p(buf710.data_ptr()), c_void_p(buf707.data_ptr()), c_void_p(primals_281.data_ptr()), c_void_p(primals_282.data_ptr()), c_void_p(primals_283.data_ptr()), c_void_p(primals_284.data_ptr()), c_void_p(buf715.data_ptr()))
    buf716 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_157], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_926, reinterpret_tensor(buf715, (128, 128), (128, 1), 0), reinterpret_tensor(primals_925, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf716)
    del primals_926
    buf717 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_267(c_void_p(buf716.data_ptr()), c_void_p(buf717.data_ptr()))
    buf718 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_246], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_928, buf717, reinterpret_tensor(primals_927, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf718)
    del primals_928
    buf719 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_268(c_void_p(buf718.data_ptr()), c_void_p(buf715.data_ptr()), c_void_p(primals_285.data_ptr()), c_void_p(primals_286.data_ptr()), c_void_p(buf719.data_ptr()))
    buf720 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_159], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_930, buf719, reinterpret_tensor(primals_929, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf720)
    del primals_930
    buf721 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_269(c_void_p(buf720.data_ptr()), c_void_p(buf721.data_ptr()))
    buf722 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_68], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_932, buf721, reinterpret_tensor(primals_931, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf722)
    del primals_932
    buf723 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_270(c_void_p(buf722.data_ptr()), c_void_p(buf718.data_ptr()), c_void_p(buf715.data_ptr()), c_void_p(primals_285.data_ptr()), c_void_p(primals_286.data_ptr()), c_void_p(primals_287.data_ptr()), c_void_p(primals_288.data_ptr()), c_void_p(buf723.data_ptr()))
    del primals_288
    buf724 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_249], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_934, buf723, reinterpret_tensor(primals_933, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf724)
    del primals_934
    buf725 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_271(c_void_p(buf724.data_ptr()), c_void_p(buf684.data_ptr()), c_void_p(buf645.data_ptr()), c_void_p(primals_273.data_ptr()), c_void_p(primals_274.data_ptr()), c_void_p(primals_289.data_ptr()), c_void_p(primals_290.data_ptr()), c_void_p(buf725.data_ptr()))
    buf726 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_90], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_936, reinterpret_tensor(buf725, (128, 512), (512, 1), 0), reinterpret_tensor(primals_935, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf726)
    del primals_936
    buf727 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_92], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_938, reinterpret_tensor(buf725, (128, 512), (512, 1), 0), reinterpret_tensor(primals_937, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf727)
    del primals_938
    buf728 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_272(c_void_p(buf727.data_ptr()), c_void_p(primals_293.data_ptr()), c_void_p(primals_294.data_ptr()), c_void_p(buf728.data_ptr()))
    del primals_294
    buf729 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_18], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_940, buf728, reinterpret_tensor(primals_939, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf729)
    del primals_940
    buf730 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_18], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_942, buf728, reinterpret_tensor(primals_941, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf730)
    del primals_942
    buf731 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_18], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_944, reinterpret_tensor(buf725, (128, 512), (512, 1), 0), reinterpret_tensor(primals_943, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf731)
    del primals_944
    buf732 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf733 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_273(c_void_p(buf729.data_ptr()), c_void_p(buf730.data_ptr()), c_void_p(buf732.data_ptr()), c_void_p(buf733.data_ptr()))
    buf734 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf732, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf733, (4, 32, 128), (4096, 128, 1), 0), out=buf734)
    buf735 = buf697; del buf697  # reuse
    buf736 = reinterpret_tensor(buf734, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf734  # reuse
    buf737 = buf695; del buf695  # reuse
    buf738 = buf736; del buf736  # reuse
    cpp_fused_274(c_void_p(buf738.data_ptr()), c_void_p(buf735.data_ptr()), c_void_p(buf737.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf739 = aten.native_dropout(buf738, 0.1, True)
    buf740 = buf739[0]
    buf741 = buf739[1]
    del buf739
    buf742 = reinterpret_tensor(buf730, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf730  # reuse
    cpp_fused_275(c_void_p(buf731.data_ptr()), c_void_p(buf742.data_ptr()))
    buf743 = reinterpret_tensor(buf731, (4, 128, 32), (4096, 32, 1), 0); del buf731  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf740, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf742, (4, 128, 32), (4096, 32, 1), 0), out=buf743)
    buf744 = reinterpret_tensor(buf729, (4, 128, 32), (4096, 32, 1), 0); del buf729  # reuse
    buf745 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_276(c_void_p(buf733.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(buf744.data_ptr()), c_void_p(buf745.data_ptr()))
    buf746 = reinterpret_tensor(buf743, (128, 128), (128, 1), 0); del buf743  # reuse
    # Source Nodes: [layer_outputs_252], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_946, buf745, reinterpret_tensor(primals_945, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf746)
    del primals_946
    buf747 = reinterpret_tensor(buf733, (1, 128, 128), (16384, 128, 1), 0); del buf733  # reuse
    cpp_fused_add_mul_277(c_void_p(buf746.data_ptr()), c_void_p(buf726.data_ptr()), c_void_p(primals_291.data_ptr()), c_void_p(primals_292.data_ptr()), c_void_p(primals_295.data_ptr()), c_void_p(primals_296.data_ptr()), c_void_p(buf747.data_ptr()))
    buf748 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_162], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_948, reinterpret_tensor(buf747, (128, 128), (128, 1), 0), reinterpret_tensor(primals_947, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf748)
    del primals_948
    buf749 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_278(c_void_p(buf748.data_ptr()), c_void_p(buf749.data_ptr()))
    buf750 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_254], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_950, buf749, reinterpret_tensor(primals_949, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf750)
    del primals_950
    buf751 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_279(c_void_p(buf750.data_ptr()), c_void_p(buf747.data_ptr()), c_void_p(primals_297.data_ptr()), c_void_p(primals_298.data_ptr()), c_void_p(buf751.data_ptr()))
    buf752 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_164], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_952, buf751, reinterpret_tensor(primals_951, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf752)
    del primals_952
    buf753 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_280(c_void_p(buf752.data_ptr()), c_void_p(buf753.data_ptr()))
    buf754 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_257], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_954, buf753, reinterpret_tensor(primals_953, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf754)
    del primals_954
    buf755 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_281(c_void_p(buf754.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(buf747.data_ptr()), c_void_p(primals_297.data_ptr()), c_void_p(primals_298.data_ptr()), c_void_p(primals_299.data_ptr()), c_void_p(primals_300.data_ptr()), c_void_p(buf755.data_ptr()))
    buf756 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_166], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_956, reinterpret_tensor(buf755, (128, 128), (128, 1), 0), reinterpret_tensor(primals_955, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf756)
    del primals_956
    buf757 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_282(c_void_p(buf756.data_ptr()), c_void_p(buf757.data_ptr()))
    buf758 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_260], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_958, buf757, reinterpret_tensor(primals_957, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf758)
    del primals_958
    buf759 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_283(c_void_p(buf758.data_ptr()), c_void_p(buf755.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(primals_302.data_ptr()), c_void_p(buf759.data_ptr()))
    buf760 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_168], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_960, buf759, reinterpret_tensor(primals_959, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf760)
    del primals_960
    buf761 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_284(c_void_p(buf760.data_ptr()), c_void_p(buf761.data_ptr()))
    buf762 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_72], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_962, buf761, reinterpret_tensor(primals_961, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf762)
    del primals_962
    buf763 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_285(c_void_p(buf762.data_ptr()), c_void_p(buf758.data_ptr()), c_void_p(buf755.data_ptr()), c_void_p(primals_301.data_ptr()), c_void_p(primals_302.data_ptr()), c_void_p(primals_303.data_ptr()), c_void_p(primals_304.data_ptr()), c_void_p(buf763.data_ptr()))
    del primals_304
    buf764 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_263], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_964, buf763, reinterpret_tensor(primals_963, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf764)
    del primals_964
    buf765 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_286(c_void_p(buf764.data_ptr()), c_void_p(buf725.data_ptr()), c_void_p(primals_305.data_ptr()), c_void_p(primals_306.data_ptr()), c_void_p(buf765.data_ptr()))
    buf766 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_95], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_966, buf765, reinterpret_tensor(primals_965, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf766)
    del primals_966
    buf767 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_97], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_968, buf765, reinterpret_tensor(primals_967, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf767)
    del primals_968
    buf768 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_287(c_void_p(buf767.data_ptr()), c_void_p(primals_309.data_ptr()), c_void_p(primals_310.data_ptr()), c_void_p(buf768.data_ptr()))
    del primals_310
    buf769 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_19], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_970, buf768, reinterpret_tensor(primals_969, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf769)
    del primals_970
    buf770 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_19], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_972, buf768, reinterpret_tensor(primals_971, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf770)
    del primals_972
    buf771 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_19], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_974, buf765, reinterpret_tensor(primals_973, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf771)
    del primals_974
    buf772 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf773 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_288(c_void_p(buf769.data_ptr()), c_void_p(buf770.data_ptr()), c_void_p(buf772.data_ptr()), c_void_p(buf773.data_ptr()))
    buf774 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf772, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf773, (4, 32, 128), (4096, 128, 1), 0), out=buf774)
    buf775 = buf737; del buf737  # reuse
    buf776 = reinterpret_tensor(buf774, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf774  # reuse
    buf777 = buf735; del buf735  # reuse
    buf778 = buf776; del buf776  # reuse
    cpp_fused_289(c_void_p(buf778.data_ptr()), c_void_p(buf775.data_ptr()), c_void_p(buf777.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf779 = aten.native_dropout(buf778, 0.1, True)
    buf780 = buf779[0]
    buf781 = buf779[1]
    del buf779
    buf782 = reinterpret_tensor(buf770, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf770  # reuse
    cpp_fused_290(c_void_p(buf771.data_ptr()), c_void_p(buf782.data_ptr()))
    buf783 = reinterpret_tensor(buf771, (4, 128, 32), (4096, 32, 1), 0); del buf771  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf780, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf782, (4, 128, 32), (4096, 32, 1), 0), out=buf783)
    buf784 = reinterpret_tensor(buf769, (4, 128, 32), (4096, 32, 1), 0); del buf769  # reuse
    buf785 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_291(c_void_p(buf773.data_ptr()), c_void_p(buf783.data_ptr()), c_void_p(buf784.data_ptr()), c_void_p(buf785.data_ptr()))
    buf786 = reinterpret_tensor(buf783, (128, 128), (128, 1), 0); del buf783  # reuse
    # Source Nodes: [layer_outputs_266], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_976, buf785, reinterpret_tensor(primals_975, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf786)
    del primals_976
    buf787 = reinterpret_tensor(buf773, (1, 128, 128), (16384, 128, 1), 0); del buf773  # reuse
    cpp_fused_add_mul_292(c_void_p(buf786.data_ptr()), c_void_p(buf766.data_ptr()), c_void_p(primals_307.data_ptr()), c_void_p(primals_308.data_ptr()), c_void_p(primals_311.data_ptr()), c_void_p(primals_312.data_ptr()), c_void_p(buf787.data_ptr()))
    buf788 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_171], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_978, reinterpret_tensor(buf787, (128, 128), (128, 1), 0), reinterpret_tensor(primals_977, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf788)
    del primals_978
    buf789 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_293(c_void_p(buf788.data_ptr()), c_void_p(buf789.data_ptr()))
    buf790 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_268], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_980, buf789, reinterpret_tensor(primals_979, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf790)
    del primals_980
    buf791 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_294(c_void_p(buf790.data_ptr()), c_void_p(buf787.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(primals_314.data_ptr()), c_void_p(buf791.data_ptr()))
    buf792 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_173], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_982, buf791, reinterpret_tensor(primals_981, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf792)
    del primals_982
    buf793 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_295(c_void_p(buf792.data_ptr()), c_void_p(buf793.data_ptr()))
    buf794 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_271], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_984, buf793, reinterpret_tensor(primals_983, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf794)
    del primals_984
    buf795 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_296(c_void_p(buf794.data_ptr()), c_void_p(buf790.data_ptr()), c_void_p(buf787.data_ptr()), c_void_p(primals_313.data_ptr()), c_void_p(primals_314.data_ptr()), c_void_p(primals_315.data_ptr()), c_void_p(primals_316.data_ptr()), c_void_p(buf795.data_ptr()))
    buf796 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_175], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_986, reinterpret_tensor(buf795, (128, 128), (128, 1), 0), reinterpret_tensor(primals_985, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf796)
    del primals_986
    buf797 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_297(c_void_p(buf796.data_ptr()), c_void_p(buf797.data_ptr()))
    buf798 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_274], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_988, buf797, reinterpret_tensor(primals_987, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf798)
    del primals_988
    buf799 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_298(c_void_p(buf798.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(primals_317.data_ptr()), c_void_p(primals_318.data_ptr()), c_void_p(buf799.data_ptr()))
    buf800 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_177], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_990, buf799, reinterpret_tensor(primals_989, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf800)
    del primals_990
    buf801 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_299(c_void_p(buf800.data_ptr()), c_void_p(buf801.data_ptr()))
    buf802 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_76], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_992, buf801, reinterpret_tensor(primals_991, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf802)
    del primals_992
    buf803 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_300(c_void_p(buf802.data_ptr()), c_void_p(buf798.data_ptr()), c_void_p(buf795.data_ptr()), c_void_p(primals_317.data_ptr()), c_void_p(primals_318.data_ptr()), c_void_p(primals_319.data_ptr()), c_void_p(primals_320.data_ptr()), c_void_p(buf803.data_ptr()))
    del primals_320
    buf804 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_277], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_994, buf803, reinterpret_tensor(primals_993, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf804)
    del primals_994
    buf805 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_301(c_void_p(buf804.data_ptr()), c_void_p(buf764.data_ptr()), c_void_p(buf725.data_ptr()), c_void_p(primals_305.data_ptr()), c_void_p(primals_306.data_ptr()), c_void_p(primals_321.data_ptr()), c_void_p(primals_322.data_ptr()), c_void_p(buf805.data_ptr()))
    buf806 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_100], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_996, reinterpret_tensor(buf805, (128, 512), (512, 1), 0), reinterpret_tensor(primals_995, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf806)
    del primals_996
    buf807 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_102], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_998, reinterpret_tensor(buf805, (128, 512), (512, 1), 0), reinterpret_tensor(primals_997, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf807)
    del primals_998
    buf808 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_302(c_void_p(buf807.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(primals_326.data_ptr()), c_void_p(buf808.data_ptr()))
    del primals_326
    buf809 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1000, buf808, reinterpret_tensor(primals_999, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf809)
    del primals_1000
    buf810 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1002, buf808, reinterpret_tensor(primals_1001, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf810)
    del primals_1002
    buf811 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_20], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1004, reinterpret_tensor(buf805, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1003, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf811)
    del primals_1004
    buf812 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf813 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_303(c_void_p(buf809.data_ptr()), c_void_p(buf810.data_ptr()), c_void_p(buf812.data_ptr()), c_void_p(buf813.data_ptr()))
    buf814 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf812, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf813, (4, 32, 128), (4096, 128, 1), 0), out=buf814)
    buf815 = buf777; del buf777  # reuse
    buf816 = reinterpret_tensor(buf814, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf814  # reuse
    buf817 = buf775; del buf775  # reuse
    buf818 = buf816; del buf816  # reuse
    cpp_fused_304(c_void_p(buf818.data_ptr()), c_void_p(buf815.data_ptr()), c_void_p(buf817.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf819 = aten.native_dropout(buf818, 0.1, True)
    buf820 = buf819[0]
    buf821 = buf819[1]
    del buf819
    buf822 = reinterpret_tensor(buf810, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf810  # reuse
    cpp_fused_305(c_void_p(buf811.data_ptr()), c_void_p(buf822.data_ptr()))
    buf823 = reinterpret_tensor(buf811, (4, 128, 32), (4096, 32, 1), 0); del buf811  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf820, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf822, (4, 128, 32), (4096, 32, 1), 0), out=buf823)
    buf824 = reinterpret_tensor(buf809, (4, 128, 32), (4096, 32, 1), 0); del buf809  # reuse
    buf825 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_306(c_void_p(buf813.data_ptr()), c_void_p(buf823.data_ptr()), c_void_p(buf824.data_ptr()), c_void_p(buf825.data_ptr()))
    buf826 = reinterpret_tensor(buf823, (128, 128), (128, 1), 0); del buf823  # reuse
    # Source Nodes: [layer_outputs_280], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1006, buf825, reinterpret_tensor(primals_1005, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf826)
    del primals_1006
    buf827 = reinterpret_tensor(buf813, (1, 128, 128), (16384, 128, 1), 0); del buf813  # reuse
    cpp_fused_add_mul_307(c_void_p(buf826.data_ptr()), c_void_p(buf806.data_ptr()), c_void_p(primals_323.data_ptr()), c_void_p(primals_324.data_ptr()), c_void_p(primals_327.data_ptr()), c_void_p(primals_328.data_ptr()), c_void_p(buf827.data_ptr()))
    buf828 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_180], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1008, reinterpret_tensor(buf827, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1007, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf828)
    del primals_1008
    buf829 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_308(c_void_p(buf828.data_ptr()), c_void_p(buf829.data_ptr()))
    buf830 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_282], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1010, buf829, reinterpret_tensor(primals_1009, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf830)
    del primals_1010
    buf831 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_309(c_void_p(buf830.data_ptr()), c_void_p(buf827.data_ptr()), c_void_p(primals_329.data_ptr()), c_void_p(primals_330.data_ptr()), c_void_p(buf831.data_ptr()))
    buf832 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_182], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1012, buf831, reinterpret_tensor(primals_1011, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf832)
    del primals_1012
    buf833 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_310(c_void_p(buf832.data_ptr()), c_void_p(buf833.data_ptr()))
    buf834 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_285], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1014, buf833, reinterpret_tensor(primals_1013, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf834)
    del primals_1014
    buf835 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_311(c_void_p(buf834.data_ptr()), c_void_p(buf830.data_ptr()), c_void_p(buf827.data_ptr()), c_void_p(primals_329.data_ptr()), c_void_p(primals_330.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(primals_332.data_ptr()), c_void_p(buf835.data_ptr()))
    buf836 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_184], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1016, reinterpret_tensor(buf835, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1015, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf836)
    del primals_1016
    buf837 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_312(c_void_p(buf836.data_ptr()), c_void_p(buf837.data_ptr()))
    buf838 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_288], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1018, buf837, reinterpret_tensor(primals_1017, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf838)
    del primals_1018
    buf839 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_313(c_void_p(buf838.data_ptr()), c_void_p(buf835.data_ptr()), c_void_p(primals_333.data_ptr()), c_void_p(primals_334.data_ptr()), c_void_p(buf839.data_ptr()))
    buf840 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_186], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1020, buf839, reinterpret_tensor(primals_1019, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf840)
    del primals_1020
    buf841 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_314(c_void_p(buf840.data_ptr()), c_void_p(buf841.data_ptr()))
    buf842 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_80], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1022, buf841, reinterpret_tensor(primals_1021, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf842)
    del primals_1022
    buf843 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_315(c_void_p(buf842.data_ptr()), c_void_p(buf838.data_ptr()), c_void_p(buf835.data_ptr()), c_void_p(primals_333.data_ptr()), c_void_p(primals_334.data_ptr()), c_void_p(primals_335.data_ptr()), c_void_p(primals_336.data_ptr()), c_void_p(buf843.data_ptr()))
    del primals_336
    buf844 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_291], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1024, buf843, reinterpret_tensor(primals_1023, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf844)
    del primals_1024
    buf845 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_316(c_void_p(buf844.data_ptr()), c_void_p(buf805.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(primals_338.data_ptr()), c_void_p(buf845.data_ptr()))
    buf846 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_105], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1026, buf845, reinterpret_tensor(primals_1025, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf846)
    del primals_1026
    buf847 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_107], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1028, buf845, reinterpret_tensor(primals_1027, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf847)
    del primals_1028
    buf848 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_317(c_void_p(buf847.data_ptr()), c_void_p(primals_341.data_ptr()), c_void_p(primals_342.data_ptr()), c_void_p(buf848.data_ptr()))
    del primals_342
    buf849 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_21], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1030, buf848, reinterpret_tensor(primals_1029, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf849)
    del primals_1030
    buf850 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_21], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1032, buf848, reinterpret_tensor(primals_1031, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf850)
    del primals_1032
    buf851 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_21], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1034, buf845, reinterpret_tensor(primals_1033, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf851)
    del primals_1034
    buf852 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf853 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_318(c_void_p(buf849.data_ptr()), c_void_p(buf850.data_ptr()), c_void_p(buf852.data_ptr()), c_void_p(buf853.data_ptr()))
    buf854 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf852, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf853, (4, 32, 128), (4096, 128, 1), 0), out=buf854)
    buf855 = buf817; del buf817  # reuse
    buf856 = reinterpret_tensor(buf854, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf854  # reuse
    buf857 = buf815; del buf815  # reuse
    buf858 = buf856; del buf856  # reuse
    cpp_fused_319(c_void_p(buf858.data_ptr()), c_void_p(buf855.data_ptr()), c_void_p(buf857.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf859 = aten.native_dropout(buf858, 0.1, True)
    buf860 = buf859[0]
    buf861 = buf859[1]
    del buf859
    buf862 = reinterpret_tensor(buf850, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf850  # reuse
    cpp_fused_320(c_void_p(buf851.data_ptr()), c_void_p(buf862.data_ptr()))
    buf863 = reinterpret_tensor(buf851, (4, 128, 32), (4096, 32, 1), 0); del buf851  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf860, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf862, (4, 128, 32), (4096, 32, 1), 0), out=buf863)
    buf864 = reinterpret_tensor(buf849, (4, 128, 32), (4096, 32, 1), 0); del buf849  # reuse
    buf865 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_321(c_void_p(buf853.data_ptr()), c_void_p(buf863.data_ptr()), c_void_p(buf864.data_ptr()), c_void_p(buf865.data_ptr()))
    buf866 = reinterpret_tensor(buf863, (128, 128), (128, 1), 0); del buf863  # reuse
    # Source Nodes: [layer_outputs_294], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1036, buf865, reinterpret_tensor(primals_1035, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf866)
    del primals_1036
    buf867 = reinterpret_tensor(buf853, (1, 128, 128), (16384, 128, 1), 0); del buf853  # reuse
    cpp_fused_add_mul_322(c_void_p(buf866.data_ptr()), c_void_p(buf846.data_ptr()), c_void_p(primals_339.data_ptr()), c_void_p(primals_340.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(primals_344.data_ptr()), c_void_p(buf867.data_ptr()))
    buf868 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_189], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1038, reinterpret_tensor(buf867, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1037, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf868)
    del primals_1038
    buf869 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_323(c_void_p(buf868.data_ptr()), c_void_p(buf869.data_ptr()))
    buf870 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_296], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1040, buf869, reinterpret_tensor(primals_1039, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf870)
    del primals_1040
    buf871 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_324(c_void_p(buf870.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_345.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(buf871.data_ptr()))
    buf872 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_191], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1042, buf871, reinterpret_tensor(primals_1041, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf872)
    del primals_1042
    buf873 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_325(c_void_p(buf872.data_ptr()), c_void_p(buf873.data_ptr()))
    buf874 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_299], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1044, buf873, reinterpret_tensor(primals_1043, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf874)
    del primals_1044
    buf875 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_326(c_void_p(buf874.data_ptr()), c_void_p(buf870.data_ptr()), c_void_p(buf867.data_ptr()), c_void_p(primals_345.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(primals_347.data_ptr()), c_void_p(primals_348.data_ptr()), c_void_p(buf875.data_ptr()))
    buf876 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_193], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1046, reinterpret_tensor(buf875, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1045, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf876)
    del primals_1046
    buf877 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_327(c_void_p(buf876.data_ptr()), c_void_p(buf877.data_ptr()))
    buf878 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_302], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1048, buf877, reinterpret_tensor(primals_1047, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf878)
    del primals_1048
    buf879 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_328(c_void_p(buf878.data_ptr()), c_void_p(buf875.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(primals_350.data_ptr()), c_void_p(buf879.data_ptr()))
    buf880 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_195], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1050, buf879, reinterpret_tensor(primals_1049, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf880)
    del primals_1050
    buf881 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_329(c_void_p(buf880.data_ptr()), c_void_p(buf881.data_ptr()))
    buf882 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_84], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1052, buf881, reinterpret_tensor(primals_1051, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf882)
    del primals_1052
    buf883 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_330(c_void_p(buf882.data_ptr()), c_void_p(buf878.data_ptr()), c_void_p(buf875.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(primals_350.data_ptr()), c_void_p(primals_351.data_ptr()), c_void_p(primals_352.data_ptr()), c_void_p(buf883.data_ptr()))
    del primals_352
    buf884 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_305], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1054, buf883, reinterpret_tensor(primals_1053, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf884)
    del primals_1054
    buf885 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_331(c_void_p(buf884.data_ptr()), c_void_p(buf844.data_ptr()), c_void_p(buf805.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(primals_338.data_ptr()), c_void_p(primals_353.data_ptr()), c_void_p(primals_354.data_ptr()), c_void_p(buf885.data_ptr()))
    buf886 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_110], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1056, reinterpret_tensor(buf885, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1055, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf886)
    del primals_1056
    buf887 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_112], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1058, reinterpret_tensor(buf885, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1057, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf887)
    del primals_1058
    buf888 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_332(c_void_p(buf887.data_ptr()), c_void_p(primals_357.data_ptr()), c_void_p(primals_358.data_ptr()), c_void_p(buf888.data_ptr()))
    del primals_358
    buf889 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1060, buf888, reinterpret_tensor(primals_1059, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf889)
    del primals_1060
    buf890 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1062, buf888, reinterpret_tensor(primals_1061, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf890)
    del primals_1062
    buf891 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_22], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1064, reinterpret_tensor(buf885, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1063, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf891)
    del primals_1064
    buf892 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf893 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_333(c_void_p(buf889.data_ptr()), c_void_p(buf890.data_ptr()), c_void_p(buf892.data_ptr()), c_void_p(buf893.data_ptr()))
    buf894 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf892, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf893, (4, 32, 128), (4096, 128, 1), 0), out=buf894)
    buf895 = buf857; del buf857  # reuse
    buf896 = reinterpret_tensor(buf894, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf894  # reuse
    buf897 = buf855; del buf855  # reuse
    buf898 = buf896; del buf896  # reuse
    cpp_fused_334(c_void_p(buf898.data_ptr()), c_void_p(buf895.data_ptr()), c_void_p(buf897.data_ptr()))
    # Source Nodes: [], Original ATen: []
    buf899 = aten.native_dropout(buf898, 0.1, True)
    buf900 = buf899[0]
    buf901 = buf899[1]
    del buf899
    buf902 = reinterpret_tensor(buf890, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf890  # reuse
    cpp_fused_335(c_void_p(buf891.data_ptr()), c_void_p(buf902.data_ptr()))
    buf903 = reinterpret_tensor(buf891, (4, 128, 32), (4096, 32, 1), 0); del buf891  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf900, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf902, (4, 128, 32), (4096, 32, 1), 0), out=buf903)
    buf904 = reinterpret_tensor(buf889, (4, 128, 32), (4096, 32, 1), 0); del buf889  # reuse
    buf905 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_336(c_void_p(buf893.data_ptr()), c_void_p(buf903.data_ptr()), c_void_p(buf904.data_ptr()), c_void_p(buf905.data_ptr()))
    buf906 = reinterpret_tensor(buf903, (128, 128), (128, 1), 0); del buf903  # reuse
    # Source Nodes: [layer_outputs_308], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1066, buf905, reinterpret_tensor(primals_1065, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf906)
    del primals_1066
    buf907 = reinterpret_tensor(buf893, (1, 128, 128), (16384, 128, 1), 0); del buf893  # reuse
    cpp_fused_add_mul_337(c_void_p(buf906.data_ptr()), c_void_p(buf886.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(primals_356.data_ptr()), c_void_p(primals_359.data_ptr()), c_void_p(primals_360.data_ptr()), c_void_p(buf907.data_ptr()))
    buf908 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_198], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1068, reinterpret_tensor(buf907, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1067, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf908)
    del primals_1068
    buf909 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_338(c_void_p(buf908.data_ptr()), c_void_p(buf909.data_ptr()))
    buf910 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_310], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1070, buf909, reinterpret_tensor(primals_1069, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf910)
    del primals_1070
    buf911 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_339(c_void_p(buf910.data_ptr()), c_void_p(buf907.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(primals_362.data_ptr()), c_void_p(buf911.data_ptr()))
    buf912 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_200], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1072, buf911, reinterpret_tensor(primals_1071, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf912)
    del primals_1072
    buf913 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_340(c_void_p(buf912.data_ptr()), c_void_p(buf913.data_ptr()))
    buf914 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_313], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1074, buf913, reinterpret_tensor(primals_1073, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf914)
    del primals_1074
    buf915 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_341(c_void_p(buf914.data_ptr()), c_void_p(buf910.data_ptr()), c_void_p(buf907.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(primals_362.data_ptr()), c_void_p(primals_363.data_ptr()), c_void_p(primals_364.data_ptr()), c_void_p(buf915.data_ptr()))
    buf916 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_202], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1076, reinterpret_tensor(buf915, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1075, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf916)
    del primals_1076
    buf917 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_relu_view_342(c_void_p(buf916.data_ptr()), c_void_p(buf917.data_ptr()))
    buf918 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_316], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1078, buf917, reinterpret_tensor(primals_1077, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf918)
    del primals_1078
    buf919 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_343(c_void_p(buf918.data_ptr()), c_void_p(buf915.data_ptr()), c_void_p(primals_365.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(buf919.data_ptr()))
    buf920 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_204], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1080, buf919, reinterpret_tensor(primals_1079, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf920)
    del primals_1080
    buf921 = empty((128, 512), device='cpu', dtype=torch.float32)
    buf985 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused_relu_threshold_backward_view_344(c_void_p(buf920.data_ptr()), c_void_p(buf921.data_ptr()), c_void_p(buf985.data_ptr()))
    buf922 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_88], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1082, buf921, reinterpret_tensor(primals_1081, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf922)
    del primals_1082
    buf923 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_345(c_void_p(buf922.data_ptr()), c_void_p(buf918.data_ptr()), c_void_p(buf915.data_ptr()), c_void_p(primals_365.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(primals_367.data_ptr()), c_void_p(primals_368.data_ptr()), c_void_p(buf923.data_ptr()))
    del primals_368
    buf924 = buf920; del buf920  # reuse
    # Source Nodes: [layer_outputs_319], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1084, buf923, reinterpret_tensor(primals_1083, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf924)
    del primals_1084
    buf925 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_346(c_void_p(buf924.data_ptr()), c_void_p(buf885.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_370.data_ptr()), c_void_p(buf925.data_ptr()))
    buf926 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_115], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1086, buf925, reinterpret_tensor(primals_1085, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf926)
    del primals_1086
    buf927 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_input_117], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1088, buf925, reinterpret_tensor(primals_1087, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf927)
    del primals_1088
    buf928 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_347(c_void_p(buf927.data_ptr()), c_void_p(primals_373.data_ptr()), c_void_p(primals_374.data_ptr()), c_void_p(buf928.data_ptr()))
    del primals_374
    buf929 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_query_layer_23], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1090, buf928, reinterpret_tensor(primals_1089, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf929)
    del primals_1090
    buf930 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_key_layer_23], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1092, buf928, reinterpret_tensor(primals_1091, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf930)
    del primals_1092
    buf931 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [mixed_value_layer_23], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1094, buf925, reinterpret_tensor(primals_1093, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf931)
    del primals_1094
    buf932 = empty((1, 4, 128, 32), device='cpu', dtype=torch.float32)
    buf933 = empty((1, 4, 32, 128), device='cpu', dtype=torch.float32)
    cpp_fused_348(c_void_p(buf929.data_ptr()), c_void_p(buf930.data_ptr()), c_void_p(buf932.data_ptr()), c_void_p(buf933.data_ptr()))
    buf934 = empty((4, 128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf932, (4, 128, 32), (4096, 32, 1), 0), reinterpret_tensor(buf933, (4, 32, 128), (4096, 128, 1), 0), out=buf934)
    buf935 = buf897; del buf897  # reuse
    buf936 = reinterpret_tensor(buf934, (1, 4, 128, 128), (65536, 16384, 128, 1), 0); del buf934  # reuse
    buf937 = buf895; del buf895  # reuse
    buf938 = buf936; del buf936  # reuse
    cpp_fused_349(c_void_p(buf938.data_ptr()), c_void_p(buf935.data_ptr()), c_void_p(buf937.data_ptr()))
    del buf935
    del buf937
    # Source Nodes: [], Original ATen: []
    buf939 = aten.native_dropout(buf938, 0.1, True)
    buf940 = buf939[0]
    buf941 = buf939[1]
    del buf939
    buf942 = reinterpret_tensor(buf930, (1, 4, 128, 32), (16384, 4096, 32, 1), 0); del buf930  # reuse
    cpp_fused_350(c_void_p(buf931.data_ptr()), c_void_p(buf942.data_ptr()))
    buf943 = reinterpret_tensor(buf931, (4, 128, 32), (4096, 32, 1), 0); del buf931  # reuse
    # Source Nodes: [], Original ATen: []
    extern_kernels.bmm(reinterpret_tensor(buf940, (4, 128, 128), (16384, 128, 1), 0), reinterpret_tensor(buf942, (4, 128, 32), (4096, 32, 1), 0), out=buf943)
    buf944 = reinterpret_tensor(buf929, (4, 128, 32), (4096, 32, 1), 0); del buf929  # reuse
    buf945 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_view_351(c_void_p(buf933.data_ptr()), c_void_p(buf943.data_ptr()), c_void_p(buf944.data_ptr()), c_void_p(buf945.data_ptr()))
    buf946 = reinterpret_tensor(buf943, (128, 128), (128, 1), 0); del buf943  # reuse
    # Source Nodes: [layer_outputs_322], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1096, buf945, reinterpret_tensor(primals_1095, (128, 128), (1, 128), 0), alpha=1, beta=1, out=buf946)
    del primals_1096
    buf947 = reinterpret_tensor(buf933, (1, 128, 128), (16384, 128, 1), 0); del buf933  # reuse
    cpp_fused_add_mul_352(c_void_p(buf946.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(primals_371.data_ptr()), c_void_p(primals_372.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(primals_376.data_ptr()), c_void_p(buf947.data_ptr()))
    buf948 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_207], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1098, reinterpret_tensor(buf947, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1097, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf948)
    del primals_1098
    buf949 = empty((128, 512), device='cpu', dtype=torch.float32)
    buf984 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused_relu_threshold_backward_view_353(c_void_p(buf948.data_ptr()), c_void_p(buf949.data_ptr()), c_void_p(buf984.data_ptr()))
    buf950 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_324], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1100, buf949, reinterpret_tensor(primals_1099, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf950)
    del primals_1100
    buf951 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_354(c_void_p(buf950.data_ptr()), c_void_p(buf947.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(buf951.data_ptr()))
    buf952 = buf948; del buf948  # reuse
    # Source Nodes: [hidden_states_209], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1102, buf951, reinterpret_tensor(primals_1101, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf952)
    del primals_1102
    buf953 = empty((128, 512), device='cpu', dtype=torch.float32)
    buf983 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused_relu_threshold_backward_view_355(c_void_p(buf952.data_ptr()), c_void_p(buf953.data_ptr()), c_void_p(buf983.data_ptr()))
    buf954 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_327], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1104, buf953, reinterpret_tensor(primals_1103, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf954)
    del primals_1104
    buf955 = empty((1, 128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_356(c_void_p(buf954.data_ptr()), c_void_p(buf950.data_ptr()), c_void_p(buf947.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(primals_379.data_ptr()), c_void_p(primals_380.data_ptr()), c_void_p(buf955.data_ptr()))
    buf956 = buf952; del buf952  # reuse
    # Source Nodes: [hidden_states_211], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1106, reinterpret_tensor(buf955, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1105, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf956)
    del primals_1106
    buf957 = empty((128, 512), device='cpu', dtype=torch.float32)
    buf982 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused_relu_threshold_backward_view_357(c_void_p(buf956.data_ptr()), c_void_p(buf957.data_ptr()), c_void_p(buf982.data_ptr()))
    buf958 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_outputs_330], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1108, buf957, reinterpret_tensor(primals_1107, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf958)
    del primals_1108
    buf959 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_358(c_void_p(buf958.data_ptr()), c_void_p(buf955.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_382.data_ptr()), c_void_p(buf959.data_ptr()))
    buf960 = buf956; del buf956  # reuse
    # Source Nodes: [hidden_states_213], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1110, buf959, reinterpret_tensor(primals_1109, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf960)
    del primals_1110
    buf961 = empty((128, 512), device='cpu', dtype=torch.float32)
    buf981 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused_relu_threshold_backward_view_359(c_void_p(buf960.data_ptr()), c_void_p(buf961.data_ptr()), c_void_p(buf981.data_ptr()))
    buf962 = empty((128, 128), device='cpu', dtype=torch.float32)
    # Source Nodes: [layer_output_92], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1112, buf961, reinterpret_tensor(primals_1111, (512, 128), (1, 512), 0), alpha=1, beta=1, out=buf962)
    del primals_1112
    buf963 = empty((128, 128), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_360(c_void_p(buf962.data_ptr()), c_void_p(buf958.data_ptr()), c_void_p(buf955.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_382.data_ptr()), c_void_p(primals_383.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(buf963.data_ptr()))
    del primals_384
    buf964 = buf960; del buf960  # reuse
    # Source Nodes: [layer_outputs_333], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1114, buf963, reinterpret_tensor(primals_1113, (128, 512), (1, 128), 0), alpha=1, beta=1, out=buf964)
    del primals_1114
    buf965 = empty((128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_add_mul_view_361(c_void_p(buf964.data_ptr()), c_void_p(buf924.data_ptr()), c_void_p(buf885.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_370.data_ptr()), c_void_p(primals_385.data_ptr()), c_void_p(primals_386.data_ptr()), c_void_p(buf965.data_ptr()))
    del primals_386
    buf966 = empty((128, 512), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_216], Original ATen: [aten.addmm]
    extern_kernels.addmm(primals_1116, buf965, reinterpret_tensor(primals_1115, (512, 512), (1, 512), 0), alpha=1, beta=1, out=buf966)
    del primals_1116
    buf967 = empty((1, 128, 1), device='cpu', dtype=torch.float32)
    buf968 = empty_strided((1, 128, 1), (128, 1, 128), device='cpu', dtype=torch.float32)
    buf970 = reinterpret_tensor(buf968, (1, 128, 1), (128, 1, 1), 0); del buf968  # reuse
    buf971 = empty((512, 30522), device='cpu', dtype=torch.float32)
    buf972 = empty((1, 128, 512), device='cpu', dtype=torch.float32)
    cpp_fused_cat_native_layer_norm_relu_362(c_void_p(buf970.data_ptr()), c_void_p(buf966.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_388.data_ptr()), c_void_p(primals_1117.data_ptr()), c_void_p(primals_1118.data_ptr()), c_void_p(buf967.data_ptr()), c_void_p(buf971.data_ptr()), c_void_p(buf972.data_ptr()))
    del primals_1118
    del primals_387
    del primals_388
    buf973 = empty((128, 30522), device='cpu', dtype=torch.float32)
    # Source Nodes: [hidden_states_220], Original ATen: [aten.mm]
    extern_kernels.mm(reinterpret_tensor(buf972, (128, 512), (512, 1), 0), buf971, out=buf973)
    buf974 = reinterpret_tensor(buf973, (1, 128, 30522), (3906816, 30522, 1), 0); del buf973  # reuse
    buf975 = empty_strided((128, 1), (1, 128), device='cpu', dtype=torch.float32)
    buf976 = empty_strided((128, 1), (1, 128), device='cpu', dtype=torch.float32)
    buf977 = empty((128, 30522), device='cpu', dtype=torch.float32)
    buf978 = empty((), device='cpu', dtype=torch.int64)
    buf980 = empty((), device='cpu', dtype=torch.float32)
    buf979 = empty((), device='cpu', dtype=torch.float32)
    buf1077 = buf980; del buf980  # reuse
    buf986 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf987 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf988 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf989 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf990 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf991 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf992 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf993 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf994 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf995 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf996 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf997 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf998 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf999 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1000 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1001 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1002 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1003 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1004 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1005 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1006 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1007 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1008 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1009 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1010 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1011 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1012 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1013 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1014 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1015 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1016 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1017 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1018 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1019 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1020 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1021 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1022 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1023 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1024 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1025 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1026 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1027 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1028 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1029 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1030 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1031 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1032 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1033 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1034 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1035 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1036 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1037 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1038 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1039 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1040 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1041 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1042 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1043 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1044 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1045 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1046 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1047 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1048 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1049 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1050 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1051 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1052 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1053 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1054 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1055 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1056 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1057 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1058 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1059 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1060 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1061 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1062 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1063 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1064 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1065 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1066 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1067 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1068 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1069 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1070 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1071 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1072 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1073 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1074 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1075 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    buf1076 = empty((1, 128, 512), device='cpu', dtype=torch.bool)
    cpp_fused__log_softmax_nll_loss_forward_relu_threshold_backward_view_363(c_void_p(buf974.data_ptr()), c_void_p(buf1077.data_ptr()), c_void_p(primals_389.data_ptr()), c_void_p(primals_1121.data_ptr()), c_void_p(buf916.data_ptr()), c_void_p(buf912.data_ptr()), c_void_p(buf908.data_ptr()), c_void_p(buf880.data_ptr()), c_void_p(buf876.data_ptr()), c_void_p(buf872.data_ptr()), c_void_p(buf868.data_ptr()), c_void_p(buf840.data_ptr()), c_void_p(buf836.data_ptr()), c_void_p(buf832.data_ptr()), c_void_p(buf828.data_ptr()), c_void_p(buf800.data_ptr()), c_void_p(buf796.data_ptr()), c_void_p(buf792.data_ptr()), c_void_p(buf788.data_ptr()), c_void_p(buf760.data_ptr()), c_void_p(buf756.data_ptr()), c_void_p(buf752.data_ptr()), c_void_p(buf748.data_ptr()), c_void_p(buf720.data_ptr()), c_void_p(buf716.data_ptr()), c_void_p(buf712.data_ptr()), c_void_p(buf708.data_ptr()), c_void_p(buf680.data_ptr()), c_void_p(buf676.data_ptr()), c_void_p(buf672.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(buf636.data_ptr()), c_void_p(buf632.data_ptr()), c_void_p(buf628.data_ptr()), c_void_p(buf600.data_ptr()), c_void_p(buf596.data_ptr()), c_void_p(buf592.data_ptr()), c_void_p(buf588.data_ptr()), c_void_p(buf560.data_ptr()), c_void_p(buf556.data_ptr()), c_void_p(buf552.data_ptr()), c_void_p(buf548.data_ptr()), c_void_p(buf520.data_ptr()), c_void_p(buf516.data_ptr()), c_void_p(buf512.data_ptr()), c_void_p(buf508.data_ptr()), c_void_p(buf480.data_ptr()), c_void_p(buf476.data_ptr()), c_void_p(buf472.data_ptr()), c_void_p(buf468.data_ptr()), c_void_p(buf440.data_ptr()), c_void_p(buf436.data_ptr()), c_void_p(buf432.data_ptr()), c_void_p(buf428.data_ptr()), c_void_p(buf400.data_ptr()), c_void_p(buf396.data_ptr()), c_void_p(buf392.data_ptr()), c_void_p(buf388.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(buf356.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(buf320.data_ptr()), c_void_p(buf316.data_ptr()), c_void_p(buf312.data_ptr()), c_void_p(buf308.data_ptr()), c_void_p(buf280.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(buf272.data_ptr()), c_void_p(buf268.data_ptr()), c_void_p(buf240.data_ptr()), c_void_p(buf236.data_ptr()), c_void_p(buf232.data_ptr()), c_void_p(buf228.data_ptr()), c_void_p(buf200.data_ptr()), c_void_p(buf196.data_ptr()), c_void_p(buf192.data_ptr()), c_void_p(buf188.data_ptr()), c_void_p(buf160.data_ptr()), c_void_p(buf156.data_ptr()), c_void_p(buf152.data_ptr()), c_void_p(buf148.data_ptr()), c_void_p(buf120.data_ptr()), c_void_p(buf116.data_ptr()), c_void_p(buf112.data_ptr()), c_void_p(buf108.data_ptr()), c_void_p(buf80.data_ptr()), c_void_p(buf76.data_ptr()), c_void_p(buf72.data_ptr()), c_void_p(buf68.data_ptr()), c_void_p(buf39.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(buf31.data_ptr()), c_void_p(buf27.data_ptr()), c_void_p(buf975.data_ptr()), c_void_p(buf976.data_ptr()), c_void_p(buf977.data_ptr()), c_void_p(buf978.data_ptr()), c_void_p(buf979.data_ptr()), c_void_p(buf986.data_ptr()), c_void_p(buf987.data_ptr()), c_void_p(buf988.data_ptr()), c_void_p(buf989.data_ptr()), c_void_p(buf990.data_ptr()), c_void_p(buf991.data_ptr()), c_void_p(buf992.data_ptr()), c_void_p(buf993.data_ptr()), c_void_p(buf994.data_ptr()), c_void_p(buf995.data_ptr()), c_void_p(buf996.data_ptr()), c_void_p(buf997.data_ptr()), c_void_p(buf998.data_ptr()), c_void_p(buf999.data_ptr()), c_void_p(buf1000.data_ptr()), c_void_p(buf1001.data_ptr()), c_void_p(buf1002.data_ptr()), c_void_p(buf1003.data_ptr()), c_void_p(buf1004.data_ptr()), c_void_p(buf1005.data_ptr()), c_void_p(buf1006.data_ptr()), c_void_p(buf1007.data_ptr()), c_void_p(buf1008.data_ptr()), c_void_p(buf1009.data_ptr()), c_void_p(buf1010.data_ptr()), c_void_p(buf1011.data_ptr()), c_void_p(buf1012.data_ptr()), c_void_p(buf1013.data_ptr()), c_void_p(buf1014.data_ptr()), c_void_p(buf1015.data_ptr()), c_void_p(buf1016.data_ptr()), c_void_p(buf1017.data_ptr()), c_void_p(buf1018.data_ptr()), c_void_p(buf1019.data_ptr()), c_void_p(buf1020.data_ptr()), c_void_p(buf1021.data_ptr()), c_void_p(buf1022.data_ptr()), c_void_p(buf1023.data_ptr()), c_void_p(buf1024.data_ptr()), c_void_p(buf1025.data_ptr()), c_void_p(buf1026.data_ptr()), c_void_p(buf1027.data_ptr()), c_void_p(buf1028.data_ptr()), c_void_p(buf1029.data_ptr()), c_void_p(buf1030.data_ptr()), c_void_p(buf1031.data_ptr()), c_void_p(buf1032.data_ptr()), c_void_p(buf1033.data_ptr()), c_void_p(buf1034.data_ptr()), c_void_p(buf1035.data_ptr()), c_void_p(buf1036.data_ptr()), c_void_p(buf1037.data_ptr()), c_void_p(buf1038.data_ptr()), c_void_p(buf1039.data_ptr()), c_void_p(buf1040.data_ptr()), c_void_p(buf1041.data_ptr()), c_void_p(buf1042.data_ptr()), c_void_p(buf1043.data_ptr()), c_void_p(buf1044.data_ptr()), c_void_p(buf1045.data_ptr()), c_void_p(buf1046.data_ptr()), c_void_p(buf1047.data_ptr()), c_void_p(buf1048.data_ptr()), c_void_p(buf1049.data_ptr()), c_void_p(buf1050.data_ptr()), c_void_p(buf1051.data_ptr()), c_void_p(buf1052.data_ptr()), c_void_p(buf1053.data_ptr()), c_void_p(buf1054.data_ptr()), c_void_p(buf1055.data_ptr()), c_void_p(buf1056.data_ptr()), c_void_p(buf1057.data_ptr()), c_void_p(buf1058.data_ptr()), c_void_p(buf1059.data_ptr()), c_void_p(buf1060.data_ptr()), c_void_p(buf1061.data_ptr()), c_void_p(buf1062.data_ptr()), c_void_p(buf1063.data_ptr()), c_void_p(buf1064.data_ptr()), c_void_p(buf1065.data_ptr()), c_void_p(buf1066.data_ptr()), c_void_p(buf1067.data_ptr()), c_void_p(buf1068.data_ptr()), c_void_p(buf1069.data_ptr()), c_void_p(buf1070.data_ptr()), c_void_p(buf1071.data_ptr()), c_void_p(buf1072.data_ptr()), c_void_p(buf1073.data_ptr()), c_void_p(buf1074.data_ptr()), c_void_p(buf1075.data_ptr()), c_void_p(buf1076.data_ptr()))
    del buf108
    del buf112
    del buf116
    del buf120
    del buf148
    del buf152
    del buf156
    del buf160
    del buf188
    del buf192
    del buf196
    del buf200
    del buf228
    del buf232
    del buf236
    del buf240
    del buf268
    del buf27
    del buf272
    del buf276
    del buf280
    del buf308
    del buf31
    del buf312
    del buf316
    del buf320
    del buf348
    del buf35
    del buf352
    del buf356
    del buf360
    del buf388
    del buf39
    del buf392
    del buf396
    del buf400
    del buf428
    del buf432
    del buf436
    del buf440
    del buf468
    del buf472
    del buf476
    del buf480
    del buf508
    del buf512
    del buf516
    del buf520
    del buf548
    del buf552
    del buf556
    del buf560
    del buf588
    del buf592
    del buf596
    del buf600
    del buf628
    del buf632
    del buf636
    del buf640
    del buf668
    del buf672
    del buf676
    del buf68
    del buf680
    del buf708
    del buf712
    del buf716
    del buf72
    del buf720
    del buf748
    del buf752
    del buf756
    del buf76
    del buf760
    del buf788
    del buf792
    del buf796
    del buf80
    del buf800
    del buf828
    del buf832
    del buf836
    del buf840
    del buf868
    del buf872
    del buf876
    del buf880
    del buf908
    del buf912
    del buf916
    del buf975
    del buf976
    del buf978
    del primals_389
    return (buf1077, buf974, primals_1, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_17, primals_18, primals_19, primals_20, primals_21, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_33, primals_34, primals_35, primals_36, primals_37, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_49, primals_50, primals_51, primals_52, primals_53, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_65, primals_66, primals_67, primals_68, primals_69, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_81, primals_82, primals_83, primals_84, primals_85, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_97, primals_98, primals_99, primals_100, primals_101, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_113, primals_114, primals_115, primals_116, primals_117, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_129, primals_130, primals_131, primals_132, primals_133, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_145, primals_146, primals_147, primals_148, primals_149, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_161, primals_162, primals_163, primals_164, primals_165, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_177, primals_178, primals_179, primals_180, primals_181, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_193, primals_194, primals_195, primals_196, primals_197, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_209, primals_210, primals_211, primals_212, primals_213, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_225, primals_226, primals_227, primals_228, primals_229, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_241, primals_242, primals_243, primals_244, primals_245, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_257, primals_258, primals_259, primals_260, primals_261, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_273, primals_274, primals_275, primals_276, primals_277, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_289, primals_290, primals_291, primals_292, primals_293, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_305, primals_306, primals_307, primals_308, primals_309, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_321, primals_322, primals_323, primals_324, primals_325, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_337, primals_338, primals_339, primals_340, primals_341, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_353, primals_354, primals_355, primals_356, primals_357, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_369, primals_370, primals_371, primals_372, primals_373, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_385, primals_1117, primals_1120, primals_1121, buf0, reinterpret_tensor(primals_1119, (1, 128), (512, 1), 0), buf1, buf3, buf4, buf5, buf6, buf7, buf20, reinterpret_tensor(buf19, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf21, (4, 32, 128), (4096, 1, 32), 0), buf17, reinterpret_tensor(buf11, (4, 32, 128), (4096, 1, 32), 0), buf23, buf24, buf25, reinterpret_tensor(buf26, (128, 128), (128, 1), 0), buf28, buf29, buf30, buf32, buf33, reinterpret_tensor(buf34, (128, 128), (128, 1), 0), buf36, buf37, buf38, buf40, buf41, buf42, buf44, buf45, buf46, buf47, buf48, buf61, reinterpret_tensor(buf60, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf62, (4, 32, 128), (4096, 1, 32), 0), buf58, reinterpret_tensor(buf52, (4, 32, 128), (4096, 1, 32), 0), buf64, buf65, buf66, reinterpret_tensor(buf67, (128, 128), (128, 1), 0), buf69, buf70, buf71, buf73, buf74, reinterpret_tensor(buf75, (128, 128), (128, 1), 0), buf77, buf78, buf79, buf81, buf82, buf83, buf84, reinterpret_tensor(buf85, (128, 512), (512, 1), 0), buf86, buf87, buf88, buf101, reinterpret_tensor(buf100, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf102, (4, 32, 128), (4096, 1, 32), 0), buf98, reinterpret_tensor(buf92, (4, 32, 128), (4096, 1, 32), 0), buf104, buf105, buf106, reinterpret_tensor(buf107, (128, 128), (128, 1), 0), buf109, buf110, buf111, buf113, buf114, reinterpret_tensor(buf115, (128, 128), (128, 1), 0), buf117, buf118, buf119, buf121, buf122, buf123, buf124, buf125, buf126, buf127, buf128, buf141, reinterpret_tensor(buf140, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf142, (4, 32, 128), (4096, 1, 32), 0), buf138, reinterpret_tensor(buf132, (4, 32, 128), (4096, 1, 32), 0), buf144, buf145, buf146, reinterpret_tensor(buf147, (128, 128), (128, 1), 0), buf149, buf150, buf151, buf153, buf154, reinterpret_tensor(buf155, (128, 128), (128, 1), 0), buf157, buf158, buf159, buf161, buf162, buf163, buf164, reinterpret_tensor(buf165, (128, 512), (512, 1), 0), buf166, buf167, buf168, buf181, reinterpret_tensor(buf180, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf182, (4, 32, 128), (4096, 1, 32), 0), buf178, reinterpret_tensor(buf172, (4, 32, 128), (4096, 1, 32), 0), buf184, buf185, buf186, reinterpret_tensor(buf187, (128, 128), (128, 1), 0), buf189, buf190, buf191, buf193, buf194, reinterpret_tensor(buf195, (128, 128), (128, 1), 0), buf197, buf198, buf199, buf201, buf202, buf203, buf204, buf205, buf206, buf207, buf208, buf221, reinterpret_tensor(buf220, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf222, (4, 32, 128), (4096, 1, 32), 0), buf218, reinterpret_tensor(buf212, (4, 32, 128), (4096, 1, 32), 0), buf224, buf225, buf226, reinterpret_tensor(buf227, (128, 128), (128, 1), 0), buf229, buf230, buf231, buf233, buf234, reinterpret_tensor(buf235, (128, 128), (128, 1), 0), buf237, buf238, buf239, buf241, buf242, buf243, buf244, reinterpret_tensor(buf245, (128, 512), (512, 1), 0), buf246, buf247, buf248, buf261, reinterpret_tensor(buf260, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf262, (4, 32, 128), (4096, 1, 32), 0), buf258, reinterpret_tensor(buf252, (4, 32, 128), (4096, 1, 32), 0), buf264, buf265, buf266, reinterpret_tensor(buf267, (128, 128), (128, 1), 0), buf269, buf270, buf271, buf273, buf274, reinterpret_tensor(buf275, (128, 128), (128, 1), 0), buf277, buf278, buf279, buf281, buf282, buf283, buf284, buf285, buf286, buf287, buf288, buf301, reinterpret_tensor(buf300, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf302, (4, 32, 128), (4096, 1, 32), 0), buf298, reinterpret_tensor(buf292, (4, 32, 128), (4096, 1, 32), 0), buf304, buf305, buf306, reinterpret_tensor(buf307, (128, 128), (128, 1), 0), buf309, buf310, buf311, buf313, buf314, reinterpret_tensor(buf315, (128, 128), (128, 1), 0), buf317, buf318, buf319, buf321, buf322, buf323, buf324, reinterpret_tensor(buf325, (128, 512), (512, 1), 0), buf326, buf327, buf328, buf341, reinterpret_tensor(buf340, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf342, (4, 32, 128), (4096, 1, 32), 0), buf338, reinterpret_tensor(buf332, (4, 32, 128), (4096, 1, 32), 0), buf344, buf345, buf346, reinterpret_tensor(buf347, (128, 128), (128, 1), 0), buf349, buf350, buf351, buf353, buf354, reinterpret_tensor(buf355, (128, 128), (128, 1), 0), buf357, buf358, buf359, buf361, buf362, buf363, buf364, buf365, buf366, buf367, buf368, buf381, reinterpret_tensor(buf380, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf382, (4, 32, 128), (4096, 1, 32), 0), buf378, reinterpret_tensor(buf372, (4, 32, 128), (4096, 1, 32), 0), buf384, buf385, buf386, reinterpret_tensor(buf387, (128, 128), (128, 1), 0), buf389, buf390, buf391, buf393, buf394, reinterpret_tensor(buf395, (128, 128), (128, 1), 0), buf397, buf398, buf399, buf401, buf402, buf403, buf404, reinterpret_tensor(buf405, (128, 512), (512, 1), 0), buf406, buf407, buf408, buf421, reinterpret_tensor(buf420, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf422, (4, 32, 128), (4096, 1, 32), 0), buf418, reinterpret_tensor(buf412, (4, 32, 128), (4096, 1, 32), 0), buf424, buf425, buf426, reinterpret_tensor(buf427, (128, 128), (128, 1), 0), buf429, buf430, buf431, buf433, buf434, reinterpret_tensor(buf435, (128, 128), (128, 1), 0), buf437, buf438, buf439, buf441, buf442, buf443, buf444, buf445, buf446, buf447, buf448, buf461, reinterpret_tensor(buf460, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf462, (4, 32, 128), (4096, 1, 32), 0), buf458, reinterpret_tensor(buf452, (4, 32, 128), (4096, 1, 32), 0), buf464, buf465, buf466, reinterpret_tensor(buf467, (128, 128), (128, 1), 0), buf469, buf470, buf471, buf473, buf474, reinterpret_tensor(buf475, (128, 128), (128, 1), 0), buf477, buf478, buf479, buf481, buf482, buf483, buf484, reinterpret_tensor(buf485, (128, 512), (512, 1), 0), buf486, buf487, buf488, buf501, reinterpret_tensor(buf500, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf502, (4, 32, 128), (4096, 1, 32), 0), buf498, reinterpret_tensor(buf492, (4, 32, 128), (4096, 1, 32), 0), buf504, buf505, buf506, reinterpret_tensor(buf507, (128, 128), (128, 1), 0), buf509, buf510, buf511, buf513, buf514, reinterpret_tensor(buf515, (128, 128), (128, 1), 0), buf517, buf518, buf519, buf521, buf522, buf523, buf524, buf525, buf526, buf527, buf528, buf541, reinterpret_tensor(buf540, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf542, (4, 32, 128), (4096, 1, 32), 0), buf538, reinterpret_tensor(buf532, (4, 32, 128), (4096, 1, 32), 0), buf544, buf545, buf546, reinterpret_tensor(buf547, (128, 128), (128, 1), 0), buf549, buf550, buf551, buf553, buf554, reinterpret_tensor(buf555, (128, 128), (128, 1), 0), buf557, buf558, buf559, buf561, buf562, buf563, buf564, reinterpret_tensor(buf565, (128, 512), (512, 1), 0), buf566, buf567, buf568, buf581, reinterpret_tensor(buf580, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf582, (4, 32, 128), (4096, 1, 32), 0), buf578, reinterpret_tensor(buf572, (4, 32, 128), (4096, 1, 32), 0), buf584, buf585, buf586, reinterpret_tensor(buf587, (128, 128), (128, 1), 0), buf589, buf590, buf591, buf593, buf594, reinterpret_tensor(buf595, (128, 128), (128, 1), 0), buf597, buf598, buf599, buf601, buf602, buf603, buf604, buf605, buf606, buf607, buf608, buf621, reinterpret_tensor(buf620, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf622, (4, 32, 128), (4096, 1, 32), 0), buf618, reinterpret_tensor(buf612, (4, 32, 128), (4096, 1, 32), 0), buf624, buf625, buf626, reinterpret_tensor(buf627, (128, 128), (128, 1), 0), buf629, buf630, buf631, buf633, buf634, reinterpret_tensor(buf635, (128, 128), (128, 1), 0), buf637, buf638, buf639, buf641, buf642, buf643, buf644, reinterpret_tensor(buf645, (128, 512), (512, 1), 0), buf646, buf647, buf648, buf661, reinterpret_tensor(buf660, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf662, (4, 32, 128), (4096, 1, 32), 0), buf658, reinterpret_tensor(buf652, (4, 32, 128), (4096, 1, 32), 0), buf664, buf665, buf666, reinterpret_tensor(buf667, (128, 128), (128, 1), 0), buf669, buf670, buf671, buf673, buf674, reinterpret_tensor(buf675, (128, 128), (128, 1), 0), buf677, buf678, buf679, buf681, buf682, buf683, buf684, buf685, buf686, buf687, buf688, buf701, reinterpret_tensor(buf700, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf702, (4, 32, 128), (4096, 1, 32), 0), buf698, reinterpret_tensor(buf692, (4, 32, 128), (4096, 1, 32), 0), buf704, buf705, buf706, reinterpret_tensor(buf707, (128, 128), (128, 1), 0), buf709, buf710, buf711, buf713, buf714, reinterpret_tensor(buf715, (128, 128), (128, 1), 0), buf717, buf718, buf719, buf721, buf722, buf723, buf724, reinterpret_tensor(buf725, (128, 512), (512, 1), 0), buf726, buf727, buf728, buf741, reinterpret_tensor(buf740, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf742, (4, 32, 128), (4096, 1, 32), 0), buf738, reinterpret_tensor(buf732, (4, 32, 128), (4096, 1, 32), 0), buf744, buf745, buf746, reinterpret_tensor(buf747, (128, 128), (128, 1), 0), buf749, buf750, buf751, buf753, buf754, reinterpret_tensor(buf755, (128, 128), (128, 1), 0), buf757, buf758, buf759, buf761, buf762, buf763, buf764, buf765, buf766, buf767, buf768, buf781, reinterpret_tensor(buf780, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf782, (4, 32, 128), (4096, 1, 32), 0), buf778, reinterpret_tensor(buf772, (4, 32, 128), (4096, 1, 32), 0), buf784, buf785, buf786, reinterpret_tensor(buf787, (128, 128), (128, 1), 0), buf789, buf790, buf791, buf793, buf794, reinterpret_tensor(buf795, (128, 128), (128, 1), 0), buf797, buf798, buf799, buf801, buf802, buf803, buf804, reinterpret_tensor(buf805, (128, 512), (512, 1), 0), buf806, buf807, buf808, buf821, reinterpret_tensor(buf820, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf822, (4, 32, 128), (4096, 1, 32), 0), buf818, reinterpret_tensor(buf812, (4, 32, 128), (4096, 1, 32), 0), buf824, buf825, buf826, reinterpret_tensor(buf827, (128, 128), (128, 1), 0), buf829, buf830, buf831, buf833, buf834, reinterpret_tensor(buf835, (128, 128), (128, 1), 0), buf837, buf838, buf839, buf841, buf842, buf843, buf844, buf845, buf846, buf847, buf848, buf861, reinterpret_tensor(buf860, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf862, (4, 32, 128), (4096, 1, 32), 0), buf858, reinterpret_tensor(buf852, (4, 32, 128), (4096, 1, 32), 0), buf864, buf865, buf866, reinterpret_tensor(buf867, (128, 128), (128, 1), 0), buf869, buf870, buf871, buf873, buf874, reinterpret_tensor(buf875, (128, 128), (128, 1), 0), buf877, buf878, buf879, buf881, buf882, buf883, buf884, reinterpret_tensor(buf885, (128, 512), (512, 1), 0), buf886, buf887, buf888, buf901, reinterpret_tensor(buf900, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf902, (4, 32, 128), (4096, 1, 32), 0), buf898, reinterpret_tensor(buf892, (4, 32, 128), (4096, 1, 32), 0), buf904, buf905, buf906, reinterpret_tensor(buf907, (128, 128), (128, 1), 0), buf909, buf910, buf911, buf913, buf914, reinterpret_tensor(buf915, (128, 128), (128, 1), 0), buf917, buf918, buf919, buf921, buf922, buf923, buf924, buf925, buf926, buf927, buf928, buf941, reinterpret_tensor(buf940, (4, 128, 128), (16384, 1, 128), 0), reinterpret_tensor(buf942, (4, 32, 128), (4096, 1, 32), 0), buf938, reinterpret_tensor(buf932, (4, 32, 128), (4096, 1, 32), 0), buf944, buf945, buf946, reinterpret_tensor(buf947, (128, 128), (128, 1), 0), buf949, buf950, buf951, buf953, buf954, reinterpret_tensor(buf955, (128, 128), (128, 1), 0), buf957, buf958, buf959, buf961, buf962, buf963, buf964, buf965, buf966, buf967, buf970, buf977, buf979, reinterpret_tensor(buf972, (512, 128), (1, 512), 0), reinterpret_tensor(buf971, (30522, 512), (1, 30522), 0), reinterpret_tensor(primals_1115, (512, 512), (512, 1), 0), reinterpret_tensor(primals_1113, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1111, (128, 512), (512, 1), 0), buf981, reinterpret_tensor(primals_1109, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1107, (128, 512), (512, 1), 0), buf982, reinterpret_tensor(primals_1105, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1103, (128, 512), (512, 1), 0), buf983, reinterpret_tensor(primals_1101, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1099, (128, 512), (512, 1), 0), buf984, reinterpret_tensor(primals_1097, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1095, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1093, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1091, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1089, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1087, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1085, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1083, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1081, (128, 512), (512, 1), 0), buf985, reinterpret_tensor(primals_1079, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1077, (128, 512), (512, 1), 0), buf986, reinterpret_tensor(primals_1075, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1073, (128, 512), (512, 1), 0), buf987, reinterpret_tensor(primals_1071, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1069, (128, 512), (512, 1), 0), buf988, reinterpret_tensor(primals_1067, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1065, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1063, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1061, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1059, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1057, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1055, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1053, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1051, (128, 512), (512, 1), 0), buf989, reinterpret_tensor(primals_1049, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1047, (128, 512), (512, 1), 0), buf990, reinterpret_tensor(primals_1045, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1043, (128, 512), (512, 1), 0), buf991, reinterpret_tensor(primals_1041, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1039, (128, 512), (512, 1), 0), buf992, reinterpret_tensor(primals_1037, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1035, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1033, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1031, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1029, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1027, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1025, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1023, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1021, (128, 512), (512, 1), 0), buf993, reinterpret_tensor(primals_1019, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1017, (128, 512), (512, 1), 0), buf994, reinterpret_tensor(primals_1015, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1013, (128, 512), (512, 1), 0), buf995, reinterpret_tensor(primals_1011, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1009, (128, 512), (512, 1), 0), buf996, reinterpret_tensor(primals_1007, (512, 128), (128, 1), 0), reinterpret_tensor(primals_1005, (128, 128), (128, 1), 0), reinterpret_tensor(primals_1003, (128, 512), (512, 1), 0), reinterpret_tensor(primals_1001, (128, 128), (128, 1), 0), reinterpret_tensor(primals_999, (128, 128), (128, 1), 0), reinterpret_tensor(primals_997, (128, 512), (512, 1), 0), reinterpret_tensor(primals_995, (128, 512), (512, 1), 0), reinterpret_tensor(primals_993, (512, 128), (128, 1), 0), reinterpret_tensor(primals_991, (128, 512), (512, 1), 0), buf997, reinterpret_tensor(primals_989, (512, 128), (128, 1), 0), reinterpret_tensor(primals_987, (128, 512), (512, 1), 0), buf998, reinterpret_tensor(primals_985, (512, 128), (128, 1), 0), reinterpret_tensor(primals_983, (128, 512), (512, 1), 0), buf999, reinterpret_tensor(primals_981, (512, 128), (128, 1), 0), reinterpret_tensor(primals_979, (128, 512), (512, 1), 0), buf1000, reinterpret_tensor(primals_977, (512, 128), (128, 1), 0), reinterpret_tensor(primals_975, (128, 128), (128, 1), 0), reinterpret_tensor(primals_973, (128, 512), (512, 1), 0), reinterpret_tensor(primals_971, (128, 128), (128, 1), 0), reinterpret_tensor(primals_969, (128, 128), (128, 1), 0), reinterpret_tensor(primals_967, (128, 512), (512, 1), 0), reinterpret_tensor(primals_965, (128, 512), (512, 1), 0), reinterpret_tensor(primals_963, (512, 128), (128, 1), 0), reinterpret_tensor(primals_961, (128, 512), (512, 1), 0), buf1001, reinterpret_tensor(primals_959, (512, 128), (128, 1), 0), reinterpret_tensor(primals_957, (128, 512), (512, 1), 0), buf1002, reinterpret_tensor(primals_955, (512, 128), (128, 1), 0), reinterpret_tensor(primals_953, (128, 512), (512, 1), 0), buf1003, reinterpret_tensor(primals_951, (512, 128), (128, 1), 0), reinterpret_tensor(primals_949, (128, 512), (512, 1), 0), buf1004, reinterpret_tensor(primals_947, (512, 128), (128, 1), 0), reinterpret_tensor(primals_945, (128, 128), (128, 1), 0), reinterpret_tensor(primals_943, (128, 512), (512, 1), 0), reinterpret_tensor(primals_941, (128, 128), (128, 1), 0), reinterpret_tensor(primals_939, (128, 128), (128, 1), 0), reinterpret_tensor(primals_937, (128, 512), (512, 1), 0), reinterpret_tensor(primals_935, (128, 512), (512, 1), 0), reinterpret_tensor(primals_933, (512, 128), (128, 1), 0), reinterpret_tensor(primals_931, (128, 512), (512, 1), 0), buf1005, reinterpret_tensor(primals_929, (512, 128), (128, 1), 0), reinterpret_tensor(primals_927, (128, 512), (512, 1), 0), buf1006, reinterpret_tensor(primals_925, (512, 128), (128, 1), 0), reinterpret_tensor(primals_923, (128, 512), (512, 1), 0), buf1007, reinterpret_tensor(primals_921, (512, 128), (128, 1), 0), reinterpret_tensor(primals_919, (128, 512), (512, 1), 0), buf1008, reinterpret_tensor(primals_917, (512, 128), (128, 1), 0), reinterpret_tensor(primals_915, (128, 128), (128, 1), 0), reinterpret_tensor(primals_913, (128, 512), (512, 1), 0), reinterpret_tensor(primals_911, (128, 128), (128, 1), 0), reinterpret_tensor(primals_909, (128, 128), (128, 1), 0), reinterpret_tensor(primals_907, (128, 512), (512, 1), 0), reinterpret_tensor(primals_905, (128, 512), (512, 1), 0), reinterpret_tensor(primals_903, (512, 128), (128, 1), 0), reinterpret_tensor(primals_901, (128, 512), (512, 1), 0), buf1009, reinterpret_tensor(primals_899, (512, 128), (128, 1), 0), reinterpret_tensor(primals_897, (128, 512), (512, 1), 0), buf1010, reinterpret_tensor(primals_895, (512, 128), (128, 1), 0), reinterpret_tensor(primals_893, (128, 512), (512, 1), 0), buf1011, reinterpret_tensor(primals_891, (512, 128), (128, 1), 0), reinterpret_tensor(primals_889, (128, 512), (512, 1), 0), buf1012, reinterpret_tensor(primals_887, (512, 128), (128, 1), 0), reinterpret_tensor(primals_885, (128, 128), (128, 1), 0), reinterpret_tensor(primals_883, (128, 512), (512, 1), 0), reinterpret_tensor(primals_881, (128, 128), (128, 1), 0), reinterpret_tensor(primals_879, (128, 128), (128, 1), 0), reinterpret_tensor(primals_877, (128, 512), (512, 1), 0), reinterpret_tensor(primals_875, (128, 512), (512, 1), 0), reinterpret_tensor(primals_873, (512, 128), (128, 1), 0), reinterpret_tensor(primals_871, (128, 512), (512, 1), 0), buf1013, reinterpret_tensor(primals_869, (512, 128), (128, 1), 0), reinterpret_tensor(primals_867, (128, 512), (512, 1), 0), buf1014, reinterpret_tensor(primals_865, (512, 128), (128, 1), 0), reinterpret_tensor(primals_863, (128, 512), (512, 1), 0), buf1015, reinterpret_tensor(primals_861, (512, 128), (128, 1), 0), reinterpret_tensor(primals_859, (128, 512), (512, 1), 0), buf1016, reinterpret_tensor(primals_857, (512, 128), (128, 1), 0), reinterpret_tensor(primals_855, (128, 128), (128, 1), 0), reinterpret_tensor(primals_853, (128, 512), (512, 1), 0), reinterpret_tensor(primals_851, (128, 128), (128, 1), 0), reinterpret_tensor(primals_849, (128, 128), (128, 1), 0), reinterpret_tensor(primals_847, (128, 512), (512, 1), 0), reinterpret_tensor(primals_845, (128, 512), (512, 1), 0), reinterpret_tensor(primals_843, (512, 128), (128, 1), 0), reinterpret_tensor(primals_841, (128, 512), (512, 1), 0), buf1017, reinterpret_tensor(primals_839, (512, 128), (128, 1), 0), reinterpret_tensor(primals_837, (128, 512), (512, 1), 0), buf1018, reinterpret_tensor(primals_835, (512, 128), (128, 1), 0), reinterpret_tensor(primals_833, (128, 512), (512, 1), 0), buf1019, reinterpret_tensor(primals_831, (512, 128), (128, 1), 0), reinterpret_tensor(primals_829, (128, 512), (512, 1), 0), buf1020, reinterpret_tensor(primals_827, (512, 128), (128, 1), 0), reinterpret_tensor(primals_825, (128, 128), (128, 1), 0), reinterpret_tensor(primals_823, (128, 512), (512, 1), 0), reinterpret_tensor(primals_821, (128, 128), (128, 1), 0), reinterpret_tensor(primals_819, (128, 128), (128, 1), 0), reinterpret_tensor(primals_817, (128, 512), (512, 1), 0), reinterpret_tensor(primals_815, (128, 512), (512, 1), 0), reinterpret_tensor(primals_813, (512, 128), (128, 1), 0), reinterpret_tensor(primals_811, (128, 512), (512, 1), 0), buf1021, reinterpret_tensor(primals_809, (512, 128), (128, 1), 0), reinterpret_tensor(primals_807, (128, 512), (512, 1), 0), buf1022, reinterpret_tensor(primals_805, (512, 128), (128, 1), 0), reinterpret_tensor(primals_803, (128, 512), (512, 1), 0), buf1023, reinterpret_tensor(primals_801, (512, 128), (128, 1), 0), reinterpret_tensor(primals_799, (128, 512), (512, 1), 0), buf1024, reinterpret_tensor(primals_797, (512, 128), (128, 1), 0), reinterpret_tensor(primals_795, (128, 128), (128, 1), 0), reinterpret_tensor(primals_793, (128, 512), (512, 1), 0), reinterpret_tensor(primals_791, (128, 128), (128, 1), 0), reinterpret_tensor(primals_789, (128, 128), (128, 1), 0), reinterpret_tensor(primals_787, (128, 512), (512, 1), 0), reinterpret_tensor(primals_785, (128, 512), (512, 1), 0), reinterpret_tensor(primals_783, (512, 128), (128, 1), 0), reinterpret_tensor(primals_781, (128, 512), (512, 1), 0), buf1025, reinterpret_tensor(primals_779, (512, 128), (128, 1), 0), reinterpret_tensor(primals_777, (128, 512), (512, 1), 0), buf1026, reinterpret_tensor(primals_775, (512, 128), (128, 1), 0), reinterpret_tensor(primals_773, (128, 512), (512, 1), 0), buf1027, reinterpret_tensor(primals_771, (512, 128), (128, 1), 0), reinterpret_tensor(primals_769, (128, 512), (512, 1), 0), buf1028, reinterpret_tensor(primals_767, (512, 128), (128, 1), 0), reinterpret_tensor(primals_765, (128, 128), (128, 1), 0), reinterpret_tensor(primals_763, (128, 512), (512, 1), 0), reinterpret_tensor(primals_761, (128, 128), (128, 1), 0), reinterpret_tensor(primals_759, (128, 128), (128, 1), 0), reinterpret_tensor(primals_757, (128, 512), (512, 1), 0), reinterpret_tensor(primals_755, (128, 512), (512, 1), 0), reinterpret_tensor(primals_753, (512, 128), (128, 1), 0), reinterpret_tensor(primals_751, (128, 512), (512, 1), 0), buf1029, reinterpret_tensor(primals_749, (512, 128), (128, 1), 0), reinterpret_tensor(primals_747, (128, 512), (512, 1), 0), buf1030, reinterpret_tensor(primals_745, (512, 128), (128, 1), 0), reinterpret_tensor(primals_743, (128, 512), (512, 1), 0), buf1031, reinterpret_tensor(primals_741, (512, 128), (128, 1), 0), reinterpret_tensor(primals_739, (128, 512), (512, 1), 0), buf1032, reinterpret_tensor(primals_737, (512, 128), (128, 1), 0), reinterpret_tensor(primals_735, (128, 128), (128, 1), 0), reinterpret_tensor(primals_733, (128, 512), (512, 1), 0), reinterpret_tensor(primals_731, (128, 128), (128, 1), 0), reinterpret_tensor(primals_729, (128, 128), (128, 1), 0), reinterpret_tensor(primals_727, (128, 512), (512, 1), 0), reinterpret_tensor(primals_725, (128, 512), (512, 1), 0), reinterpret_tensor(primals_723, (512, 128), (128, 1), 0), reinterpret_tensor(primals_721, (128, 512), (512, 1), 0), buf1033, reinterpret_tensor(primals_719, (512, 128), (128, 1), 0), reinterpret_tensor(primals_717, (128, 512), (512, 1), 0), buf1034, reinterpret_tensor(primals_715, (512, 128), (128, 1), 0), reinterpret_tensor(primals_713, (128, 512), (512, 1), 0), buf1035, reinterpret_tensor(primals_711, (512, 128), (128, 1), 0), reinterpret_tensor(primals_709, (128, 512), (512, 1), 0), buf1036, reinterpret_tensor(primals_707, (512, 128), (128, 1), 0), reinterpret_tensor(primals_705, (128, 128), (128, 1), 0), reinterpret_tensor(primals_703, (128, 512), (512, 1), 0), reinterpret_tensor(primals_701, (128, 128), (128, 1), 0), reinterpret_tensor(primals_699, (128, 128), (128, 1), 0), reinterpret_tensor(primals_697, (128, 512), (512, 1), 0), reinterpret_tensor(primals_695, (128, 512), (512, 1), 0), reinterpret_tensor(primals_693, (512, 128), (128, 1), 0), reinterpret_tensor(primals_691, (128, 512), (512, 1), 0), buf1037, reinterpret_tensor(primals_689, (512, 128), (128, 1), 0), reinterpret_tensor(primals_687, (128, 512), (512, 1), 0), buf1038, reinterpret_tensor(primals_685, (512, 128), (128, 1), 0), reinterpret_tensor(primals_683, (128, 512), (512, 1), 0), buf1039, reinterpret_tensor(primals_681, (512, 128), (128, 1), 0), reinterpret_tensor(primals_679, (128, 512), (512, 1), 0), buf1040, reinterpret_tensor(primals_677, (512, 128), (128, 1), 0), reinterpret_tensor(primals_675, (128, 128), (128, 1), 0), reinterpret_tensor(primals_673, (128, 512), (512, 1), 0), reinterpret_tensor(primals_671, (128, 128), (128, 1), 0), reinterpret_tensor(primals_669, (128, 128), (128, 1), 0), reinterpret_tensor(primals_667, (128, 512), (512, 1), 0), reinterpret_tensor(primals_665, (128, 512), (512, 1), 0), reinterpret_tensor(primals_663, (512, 128), (128, 1), 0), reinterpret_tensor(primals_661, (128, 512), (512, 1), 0), buf1041, reinterpret_tensor(primals_659, (512, 128), (128, 1), 0), reinterpret_tensor(primals_657, (128, 512), (512, 1), 0), buf1042, reinterpret_tensor(primals_655, (512, 128), (128, 1), 0), reinterpret_tensor(primals_653, (128, 512), (512, 1), 0), buf1043, reinterpret_tensor(primals_651, (512, 128), (128, 1), 0), reinterpret_tensor(primals_649, (128, 512), (512, 1), 0), buf1044, reinterpret_tensor(primals_647, (512, 128), (128, 1), 0), reinterpret_tensor(primals_645, (128, 128), (128, 1), 0), reinterpret_tensor(primals_643, (128, 512), (512, 1), 0), reinterpret_tensor(primals_641, (128, 128), (128, 1), 0), reinterpret_tensor(primals_639, (128, 128), (128, 1), 0), reinterpret_tensor(primals_637, (128, 512), (512, 1), 0), reinterpret_tensor(primals_635, (128, 512), (512, 1), 0), reinterpret_tensor(primals_633, (512, 128), (128, 1), 0), reinterpret_tensor(primals_631, (128, 512), (512, 1), 0), buf1045, reinterpret_tensor(primals_629, (512, 128), (128, 1), 0), reinterpret_tensor(primals_627, (128, 512), (512, 1), 0), buf1046, reinterpret_tensor(primals_625, (512, 128), (128, 1), 0), reinterpret_tensor(primals_623, (128, 512), (512, 1), 0), buf1047, reinterpret_tensor(primals_621, (512, 128), (128, 1), 0), reinterpret_tensor(primals_619, (128, 512), (512, 1), 0), buf1048, reinterpret_tensor(primals_617, (512, 128), (128, 1), 0), reinterpret_tensor(primals_615, (128, 128), (128, 1), 0), reinterpret_tensor(primals_613, (128, 512), (512, 1), 0), reinterpret_tensor(primals_611, (128, 128), (128, 1), 0), reinterpret_tensor(primals_609, (128, 128), (128, 1), 0), reinterpret_tensor(primals_607, (128, 512), (512, 1), 0), reinterpret_tensor(primals_605, (128, 512), (512, 1), 0), reinterpret_tensor(primals_603, (512, 128), (128, 1), 0), reinterpret_tensor(primals_601, (128, 512), (512, 1), 0), buf1049, reinterpret_tensor(primals_599, (512, 128), (128, 1), 0), reinterpret_tensor(primals_597, (128, 512), (512, 1), 0), buf1050, reinterpret_tensor(primals_595, (512, 128), (128, 1), 0), reinterpret_tensor(primals_593, (128, 512), (512, 1), 0), buf1051, reinterpret_tensor(primals_591, (512, 128), (128, 1), 0), reinterpret_tensor(primals_589, (128, 512), (512, 1), 0), buf1052, reinterpret_tensor(primals_587, (512, 128), (128, 1), 0), reinterpret_tensor(primals_585, (128, 128), (128, 1), 0), reinterpret_tensor(primals_583, (128, 512), (512, 1), 0), reinterpret_tensor(primals_581, (128, 128), (128, 1), 0), reinterpret_tensor(primals_579, (128, 128), (128, 1), 0), reinterpret_tensor(primals_577, (128, 512), (512, 1), 0), reinterpret_tensor(primals_575, (128, 512), (512, 1), 0), reinterpret_tensor(primals_573, (512, 128), (128, 1), 0), reinterpret_tensor(primals_571, (128, 512), (512, 1), 0), buf1053, reinterpret_tensor(primals_569, (512, 128), (128, 1), 0), reinterpret_tensor(primals_567, (128, 512), (512, 1), 0), buf1054, reinterpret_tensor(primals_565, (512, 128), (128, 1), 0), reinterpret_tensor(primals_563, (128, 512), (512, 1), 0), buf1055, reinterpret_tensor(primals_561, (512, 128), (128, 1), 0), reinterpret_tensor(primals_559, (128, 512), (512, 1), 0), buf1056, reinterpret_tensor(primals_557, (512, 128), (128, 1), 0), reinterpret_tensor(primals_555, (128, 128), (128, 1), 0), reinterpret_tensor(primals_553, (128, 512), (512, 1), 0), reinterpret_tensor(primals_551, (128, 128), (128, 1), 0), reinterpret_tensor(primals_549, (128, 128), (128, 1), 0), reinterpret_tensor(primals_547, (128, 512), (512, 1), 0), reinterpret_tensor(primals_545, (128, 512), (512, 1), 0), reinterpret_tensor(primals_543, (512, 128), (128, 1), 0), reinterpret_tensor(primals_541, (128, 512), (512, 1), 0), buf1057, reinterpret_tensor(primals_539, (512, 128), (128, 1), 0), reinterpret_tensor(primals_537, (128, 512), (512, 1), 0), buf1058, reinterpret_tensor(primals_535, (512, 128), (128, 1), 0), reinterpret_tensor(primals_533, (128, 512), (512, 1), 0), buf1059, reinterpret_tensor(primals_531, (512, 128), (128, 1), 0), reinterpret_tensor(primals_529, (128, 512), (512, 1), 0), buf1060, reinterpret_tensor(primals_527, (512, 128), (128, 1), 0), reinterpret_tensor(primals_525, (128, 128), (128, 1), 0), reinterpret_tensor(primals_523, (128, 512), (512, 1), 0), reinterpret_tensor(primals_521, (128, 128), (128, 1), 0), reinterpret_tensor(primals_519, (128, 128), (128, 1), 0), reinterpret_tensor(primals_517, (128, 512), (512, 1), 0), reinterpret_tensor(primals_515, (128, 512), (512, 1), 0), reinterpret_tensor(primals_513, (512, 128), (128, 1), 0), reinterpret_tensor(primals_511, (128, 512), (512, 1), 0), buf1061, reinterpret_tensor(primals_509, (512, 128), (128, 1), 0), reinterpret_tensor(primals_507, (128, 512), (512, 1), 0), buf1062, reinterpret_tensor(primals_505, (512, 128), (128, 1), 0), reinterpret_tensor(primals_503, (128, 512), (512, 1), 0), buf1063, reinterpret_tensor(primals_501, (512, 128), (128, 1), 0), reinterpret_tensor(primals_499, (128, 512), (512, 1), 0), buf1064, reinterpret_tensor(primals_497, (512, 128), (128, 1), 0), reinterpret_tensor(primals_495, (128, 128), (128, 1), 0), reinterpret_tensor(primals_493, (128, 512), (512, 1), 0), reinterpret_tensor(primals_491, (128, 128), (128, 1), 0), reinterpret_tensor(primals_489, (128, 128), (128, 1), 0), reinterpret_tensor(primals_487, (128, 512), (512, 1), 0), reinterpret_tensor(primals_485, (128, 512), (512, 1), 0), reinterpret_tensor(primals_483, (512, 128), (128, 1), 0), reinterpret_tensor(primals_481, (128, 512), (512, 1), 0), buf1065, reinterpret_tensor(primals_479, (512, 128), (128, 1), 0), reinterpret_tensor(primals_477, (128, 512), (512, 1), 0), buf1066, reinterpret_tensor(primals_475, (512, 128), (128, 1), 0), reinterpret_tensor(primals_473, (128, 512), (512, 1), 0), buf1067, reinterpret_tensor(primals_471, (512, 128), (128, 1), 0), reinterpret_tensor(primals_469, (128, 512), (512, 1), 0), buf1068, reinterpret_tensor(primals_467, (512, 128), (128, 1), 0), reinterpret_tensor(primals_465, (128, 128), (128, 1), 0), reinterpret_tensor(primals_463, (128, 512), (512, 1), 0), reinterpret_tensor(primals_461, (128, 128), (128, 1), 0), reinterpret_tensor(primals_459, (128, 128), (128, 1), 0), reinterpret_tensor(primals_457, (128, 512), (512, 1), 0), reinterpret_tensor(primals_455, (128, 512), (512, 1), 0), reinterpret_tensor(primals_453, (512, 128), (128, 1), 0), reinterpret_tensor(primals_451, (128, 512), (512, 1), 0), buf1069, reinterpret_tensor(primals_449, (512, 128), (128, 1), 0), reinterpret_tensor(primals_447, (128, 512), (512, 1), 0), buf1070, reinterpret_tensor(primals_445, (512, 128), (128, 1), 0), reinterpret_tensor(primals_443, (128, 512), (512, 1), 0), buf1071, reinterpret_tensor(primals_441, (512, 128), (128, 1), 0), reinterpret_tensor(primals_439, (128, 512), (512, 1), 0), buf1072, reinterpret_tensor(primals_437, (512, 128), (128, 1), 0), reinterpret_tensor(primals_435, (128, 128), (128, 1), 0), reinterpret_tensor(primals_433, (128, 512), (512, 1), 0), reinterpret_tensor(primals_431, (128, 128), (128, 1), 0), reinterpret_tensor(primals_429, (128, 128), (128, 1), 0), reinterpret_tensor(primals_427, (128, 512), (512, 1), 0), reinterpret_tensor(primals_425, (128, 512), (512, 1), 0), reinterpret_tensor(primals_423, (512, 128), (128, 1), 0), reinterpret_tensor(primals_421, (128, 512), (512, 1), 0), buf1073, reinterpret_tensor(primals_419, (512, 128), (128, 1), 0), reinterpret_tensor(primals_417, (128, 512), (512, 1), 0), buf1074, reinterpret_tensor(primals_415, (512, 128), (128, 1), 0), reinterpret_tensor(primals_413, (128, 512), (512, 1), 0), buf1075, reinterpret_tensor(primals_411, (512, 128), (128, 1), 0), reinterpret_tensor(primals_409, (128, 512), (512, 1), 0), buf1076, reinterpret_tensor(primals_407, (512, 128), (128, 1), 0), reinterpret_tensor(primals_405, (128, 128), (128, 1), 0), reinterpret_tensor(primals_403, (128, 512), (512, 1), 0), reinterpret_tensor(primals_401, (128, 128), (128, 1), 0), reinterpret_tensor(primals_399, (128, 128), (128, 1), 0), reinterpret_tensor(primals_397, (128, 512), (512, 1), 0), reinterpret_tensor(primals_395, (128, 512), (512, 1), 0), reinterpret_tensor(primals_391, (512, 384), (384, 1), 0), )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_2 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_3 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_4 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_5 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_6 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_7 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_8 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_9 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_10 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_11 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_12 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_13 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_14 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_15 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_16 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_17 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_18 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_19 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_20 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_21 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_22 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_23 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_24 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_25 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_26 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_27 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_28 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_29 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_30 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_31 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_32 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_33 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_34 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_35 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_36 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_37 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_38 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_39 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_40 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_41 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_42 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_43 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_44 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_45 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_46 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_47 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_48 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_49 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_50 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_51 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_52 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_53 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_54 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_55 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_56 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_57 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_58 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_59 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_60 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_61 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_62 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_63 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_64 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_65 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_66 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_67 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_68 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_69 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_70 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_71 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_72 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_73 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_74 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_75 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_76 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_77 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_78 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_79 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_80 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_81 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_82 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_83 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_84 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_85 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_86 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_87 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_88 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_89 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_90 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_91 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_92 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_93 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_94 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_95 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_96 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_97 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_98 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_99 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_100 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_101 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_102 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_103 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_104 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_105 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_106 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_107 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_108 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_109 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_110 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_111 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_112 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_113 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_114 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_115 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_116 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_117 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_118 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_119 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_120 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_121 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_122 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_123 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_124 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_125 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_126 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_127 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_128 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_129 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_130 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_131 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_132 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_133 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_134 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_135 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_136 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_137 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_138 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_139 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_140 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_141 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_142 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_143 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_144 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_145 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_146 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_147 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_148 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_149 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_150 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_151 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_152 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_153 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_154 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_155 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_156 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_157 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_158 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_159 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_160 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_161 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_162 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_163 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_164 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_165 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_166 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_167 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_168 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_169 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_170 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_171 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_172 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_173 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_174 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_175 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_176 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_177 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_178 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_179 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_180 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_181 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_182 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_183 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_184 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_185 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_186 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_187 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_188 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_189 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_190 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_191 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_192 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_193 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_194 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_195 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_196 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_197 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_198 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_199 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_200 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_201 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_202 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_203 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_204 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_205 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_206 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_207 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_208 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_209 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_210 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_211 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_212 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_213 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_214 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_215 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_216 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_217 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_218 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_219 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_220 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_221 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_222 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_223 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_224 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_225 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_226 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_227 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_228 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_229 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_230 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_231 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_232 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_233 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_234 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_235 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_236 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_237 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_238 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_239 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_240 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_241 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_242 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_243 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_244 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_245 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_246 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_247 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_248 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_249 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_250 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_251 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_252 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_253 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_254 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_255 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_256 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_257 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_258 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_259 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_260 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_261 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_262 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_263 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_264 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_265 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_266 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_267 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_268 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_269 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_270 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_271 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_272 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_273 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_274 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_275 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_276 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_277 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_278 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_279 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_280 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_281 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_282 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_283 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_284 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_285 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_286 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_287 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_288 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_289 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_290 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_291 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_292 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_293 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_294 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_295 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_296 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_297 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_298 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_299 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_300 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_301 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_302 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_303 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_304 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_305 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_306 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_307 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_308 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_309 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_310 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_311 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_312 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_313 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_314 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_315 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_316 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_317 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_318 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_319 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_320 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_321 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_322 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_323 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_324 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_325 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_326 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_327 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_328 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_329 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_330 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_331 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_332 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_333 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_334 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_335 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_336 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_337 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_338 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_339 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_340 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_341 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_342 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_343 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_344 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_345 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_346 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_347 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_348 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_349 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_350 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_351 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_352 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_353 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_354 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_355 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_356 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_357 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_358 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_359 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_360 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_361 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_362 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_363 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_364 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_365 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_366 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_367 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_368 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_369 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_370 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_371 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_372 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_373 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_374 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_375 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_376 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_377 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_378 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_379 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_380 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_381 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_382 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_383 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_384 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_385 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_386 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_387 = rand_strided((30522, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_388 = rand_strided((384, 30522), (30522, 1), device='cpu', dtype=torch.float32)
    primals_389 = rand_strided((30522, ), (1, ), device='cpu', dtype=torch.float32)
    primals_390 = rand_strided((30522, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_391 = rand_strided((512, 384), (384, 1), device='cpu', dtype=torch.float32)
    primals_392 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_393 = rand_strided((512, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_394 = rand_strided((2, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_395 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_396 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_397 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_398 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_399 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_400 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_401 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_402 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_403 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_404 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_405 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_406 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_407 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_408 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_409 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_410 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_411 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_412 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_413 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_414 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_415 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_416 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_417 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_418 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_419 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_420 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_421 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_422 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_423 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_424 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_425 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_426 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_427 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_428 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_429 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_430 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_431 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_432 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_433 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_434 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_435 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_436 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_437 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_438 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_439 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_440 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_441 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_442 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_443 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_444 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_445 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_446 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_447 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_448 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_449 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_450 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_451 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_452 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_453 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_454 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_455 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_456 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_457 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_458 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_459 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_460 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_461 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_462 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_463 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_464 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_465 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_466 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_467 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_468 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_469 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_470 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_471 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_472 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_473 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_474 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_475 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_476 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_477 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_478 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_479 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_480 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_481 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_482 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_483 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_484 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_485 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_486 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_487 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_488 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_489 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_490 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_491 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_492 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_493 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_494 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_495 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_496 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_497 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_498 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_499 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_500 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_501 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_502 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_503 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_504 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_505 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_506 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_507 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_508 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_509 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_510 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_511 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_512 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_513 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_514 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_515 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_516 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_517 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_518 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_519 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_520 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_521 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_522 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_523 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_524 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_525 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_526 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_527 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_528 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_529 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_530 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_531 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_532 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_533 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_534 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_535 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_536 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_537 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_538 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_539 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_540 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_541 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_542 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_543 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_544 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_545 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_546 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_547 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_548 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_549 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_550 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_551 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_552 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_553 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_554 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_555 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_556 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_557 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_558 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_559 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_560 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_561 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_562 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_563 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_564 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_565 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_566 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_567 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_568 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_569 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_570 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_571 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_572 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_573 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_574 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_575 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_576 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_577 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_578 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_579 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_580 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_581 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_582 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_583 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_584 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_585 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_586 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_587 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_588 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_589 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_590 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_591 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_592 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_593 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_594 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_595 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_596 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_597 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_598 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_599 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_600 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_601 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_602 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_603 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_604 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_605 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_606 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_607 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_608 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_609 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_610 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_611 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_612 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_613 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_614 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_615 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_616 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_617 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_618 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_619 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_620 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_621 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_622 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_623 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_624 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_625 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_626 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_627 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_628 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_629 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_630 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_631 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_632 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_633 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_634 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_635 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_636 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_637 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_638 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_639 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_640 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_641 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_642 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_643 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_644 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_645 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_646 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_647 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_648 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_649 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_650 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_651 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_652 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_653 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_654 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_655 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_656 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_657 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_658 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_659 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_660 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_661 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_662 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_663 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_664 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_665 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_666 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_667 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_668 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_669 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_670 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_671 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_672 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_673 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_674 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_675 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_676 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_677 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_678 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_679 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_680 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_681 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_682 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_683 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_684 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_685 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_686 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_687 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_688 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_689 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_690 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_691 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_692 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_693 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_694 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_695 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_696 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_697 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_698 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_699 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_700 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_701 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_702 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_703 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_704 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_705 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_706 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_707 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_708 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_709 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_710 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_711 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_712 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_713 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_714 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_715 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_716 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_717 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_718 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_719 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_720 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_721 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_722 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_723 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_724 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_725 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_726 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_727 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_728 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_729 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_730 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_731 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_732 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_733 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_734 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_735 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_736 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_737 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_738 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_739 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_740 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_741 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_742 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_743 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_744 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_745 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_746 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_747 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_748 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_749 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_750 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_751 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_752 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_753 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_754 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_755 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_756 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_757 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_758 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_759 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_760 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_761 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_762 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_763 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_764 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_765 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_766 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_767 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_768 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_769 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_770 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_771 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_772 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_773 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_774 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_775 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_776 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_777 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_778 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_779 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_780 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_781 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_782 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_783 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_784 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_785 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_786 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_787 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_788 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_789 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_790 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_791 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_792 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_793 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_794 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_795 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_796 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_797 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_798 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_799 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_800 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_801 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_802 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_803 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_804 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_805 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_806 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_807 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_808 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_809 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_810 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_811 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_812 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_813 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_814 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_815 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_816 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_817 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_818 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_819 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_820 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_821 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_822 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_823 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_824 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_825 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_826 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_827 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_828 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_829 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_830 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_831 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_832 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_833 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_834 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_835 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_836 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_837 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_838 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_839 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_840 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_841 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_842 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_843 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_844 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_845 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_846 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_847 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_848 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_849 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_850 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_851 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_852 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_853 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_854 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_855 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_856 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_857 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_858 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_859 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_860 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_861 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_862 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_863 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_864 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_865 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_866 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_867 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_868 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_869 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_870 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_871 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_872 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_873 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_874 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_875 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_876 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_877 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_878 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_879 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_880 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_881 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_882 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_883 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_884 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_885 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_886 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_887 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_888 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_889 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_890 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_891 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_892 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_893 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_894 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_895 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_896 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_897 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_898 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_899 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_900 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_901 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_902 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_903 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_904 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_905 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_906 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_907 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_908 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_909 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_910 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_911 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_912 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_913 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_914 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_915 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_916 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_917 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_918 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_919 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_920 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_921 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_922 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_923 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_924 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_925 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_926 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_927 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_928 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_929 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_930 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_931 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_932 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_933 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_934 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_935 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_936 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_937 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_938 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_939 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_940 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_941 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_942 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_943 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_944 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_945 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_946 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_947 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_948 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_949 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_950 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_951 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_952 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_953 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_954 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_955 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_956 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_957 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_958 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_959 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_960 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_961 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_962 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_963 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_964 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_965 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_966 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_967 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_968 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_969 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_970 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_971 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_972 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_973 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_974 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_975 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_976 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_977 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_978 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_979 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_980 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_981 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_982 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_983 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_984 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_985 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_986 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_987 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_988 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_989 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_990 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_991 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_992 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_993 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_994 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_995 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_996 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_997 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_998 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_999 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1000 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1001 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1002 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1003 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1004 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1005 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1006 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1007 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1008 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1009 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1010 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1011 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1012 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1013 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1014 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1015 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1016 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1017 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1018 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1019 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1020 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1021 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1022 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1023 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1024 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1025 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1026 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1027 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1028 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1029 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1030 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1031 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1032 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1033 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1034 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1035 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1036 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1037 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1038 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1039 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1040 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1041 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1042 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1043 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1044 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1045 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1046 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1047 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1048 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1049 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1050 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1051 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1052 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1053 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1054 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1055 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1056 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1057 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1058 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1059 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1060 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1061 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1062 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1063 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1064 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1065 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1066 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1067 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1068 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1069 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1070 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1071 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1072 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1073 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1074 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1075 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1076 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1077 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1078 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1079 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1080 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1081 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1082 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1083 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1084 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1085 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1086 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1087 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1088 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1089 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1090 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1091 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1092 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1093 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1094 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1095 = rand_strided((128, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1096 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1097 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1098 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1099 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1100 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1101 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1102 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1103 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1104 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1105 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1106 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1107 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1108 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1109 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1110 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1111 = rand_strided((128, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1112 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1113 = rand_strided((512, 128), (128, 1), device='cpu', dtype=torch.float32)
    primals_1114 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1115 = rand_strided((512, 512), (512, 1), device='cpu', dtype=torch.float32)
    primals_1116 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1117 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1118 = rand_strided((512, ), (1, ), device='cpu', dtype=torch.float32)
    primals_1119 = rand_strided((1, 512), (512, 1), device='cpu', dtype=torch.int64)
    primals_1120 = rand_strided((1, 128), (128, 1), device='cpu', dtype=torch.int64)
    primals_1121 = rand_strided((1, 128), (128, 1), device='cpu', dtype=torch.int64)
    return print_performance(lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('MobileBertForMaskedLM', benchmark_compiled_module)
