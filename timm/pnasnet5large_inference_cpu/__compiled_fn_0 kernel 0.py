
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_convolution_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(109561L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (109561L*x1) + (328683L*x0))];
                        out_ptr0[static_cast<long>(x1 + (3L*x2) + (328683L*x0))] = tmp0;
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                #pragma GCC ivdep
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(96L); x0+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr1[static_cast<long>(x2 + (9L*x1) + (27L*x0))];
                            out_ptr1[static_cast<long>(x1 + (3L*x2) + (27L*x0))] = tmp0;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(217800L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(96L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (96L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (96L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(83L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp76 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)));
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-15936L) + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-15840L) + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-15744L) + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(in_out_ptr0 + static_cast<long>((-96L) + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(in_out_ptr0 + static_cast<long>(96L + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(15744L + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(15840L + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(15936L + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            auto tmp77 = at::vec::clamp_min(tmp76, decltype(tmp76)(0));
                            auto tmp78 = static_cast<float>(1.0);
                            auto tmp79 = at::vec::Vectorized<float>(tmp78);
                            auto tmp80 = tmp77 * tmp79;
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>(15936L + x3 + (192L*x2) + (31680L*x1) + (2613600L*x0)), to_float_mask(tmp71));
                                auto tmp83 = at::vec::clamp_min(tmp82, decltype(tmp82)(0));
                                return tmp83;
                            }
                            ;
                            auto tmp84 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp81(), to_float_mask(tmp71));
                            auto tmp85 = tmp84 * tmp79;
                            tmp75.store(out_ptr0 + static_cast<long>(x3 + (96L*x2) + (7968L*x1) + (661344L*x0)));
                            tmp80.store(out_ptr1 + static_cast<long>(x3 + (96L*x2) + (7968L*x1) + (661344L*x0)));
                            tmp85.store(out_ptr2 + static_cast<long>(x3 + (96L*x2) + (7968L*x1) + (661344L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(20908800L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr3 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(217800L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(83L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(83L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-8964L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-8910L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(in_out_ptr0 + static_cast<long>((-54L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(in_out_ptr0 + static_cast<long>(54L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(8910L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(8964L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = masked_load(in_out_ptr0 + static_cast<long>((-8964L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                return tmp77;
                            }
                            ;
                            auto tmp78 = decltype(tmp76())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp76(), to_float_mask(tmp10));
                            auto tmp79 = [&]
                            {
                                auto tmp80 = masked_load(in_out_ptr0 + static_cast<long>((-8910L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp18));
                                return tmp80;
                            }
                            ;
                            auto tmp81 = decltype(tmp79())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp79(), to_float_mask(tmp18));
                            auto tmp82 = at::vec::maximum(tmp81, tmp78);
                            auto tmp83 = [&]
                            {
                                auto tmp84 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp27));
                                return tmp84;
                            }
                            ;
                            auto tmp85 = decltype(tmp83())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp83(), to_float_mask(tmp27));
                            auto tmp86 = at::vec::maximum(tmp85, tmp82);
                            auto tmp87 = [&]
                            {
                                auto tmp88 = masked_load(in_out_ptr0 + static_cast<long>((-54L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp37));
                                return tmp88;
                            }
                            ;
                            auto tmp89 = decltype(tmp87())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp87(), to_float_mask(tmp37));
                            auto tmp90 = at::vec::maximum(tmp89, tmp86);
                            auto tmp91 = [&]
                            {
                                auto tmp92 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp43));
                                return tmp92;
                            }
                            ;
                            auto tmp93 = decltype(tmp91())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp91(), to_float_mask(tmp43));
                            auto tmp94 = at::vec::maximum(tmp93, tmp90);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = masked_load(in_out_ptr0 + static_cast<long>(54L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp49));
                                return tmp96;
                            }
                            ;
                            auto tmp97 = decltype(tmp95())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp95(), to_float_mask(tmp49));
                            auto tmp98 = at::vec::maximum(tmp97, tmp94);
                            auto tmp99 = [&]
                            {
                                auto tmp100 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp59));
                                return tmp100;
                            }
                            ;
                            auto tmp101 = decltype(tmp99())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp99(), to_float_mask(tmp59));
                            auto tmp102 = at::vec::maximum(tmp101, tmp98);
                            auto tmp103 = [&]
                            {
                                auto tmp104 = masked_load(in_out_ptr0 + static_cast<long>(8910L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp65));
                                return tmp104;
                            }
                            ;
                            auto tmp105 = decltype(tmp103())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp103(), to_float_mask(tmp65));
                            auto tmp106 = at::vec::maximum(tmp105, tmp102);
                            auto tmp107 = [&]
                            {
                                auto tmp108 = masked_load(in_out_ptr0 + static_cast<long>(8964L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0)), to_float_mask(tmp71));
                                return tmp108;
                            }
                            ;
                            auto tmp109 = decltype(tmp107())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp107(), to_float_mask(tmp71));
                            auto tmp110 = at::vec::maximum(tmp109, tmp106);
                            tmp75.store(out_ptr0 + static_cast<long>(x3 + (54L*x2) + (4482L*x1) + (372006L*x0)));
                            tmp110.store(out_ptr1 + static_cast<long>(x3 + (54L*x2) + (4482L*x1) + (372006L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_out_ptr0[static_cast<long>((-8964L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_out_ptr0[static_cast<long>((-8910L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_out_ptr0[static_cast<long>((-8856L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = in_out_ptr0[static_cast<long>((-54L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp39;
                            }
                            ;
                            auto tmp40 = tmp37 ? tmp38() : -std::numeric_limits<decltype(tmp38())>::infinity();
                            auto tmp41 = max_propagate_nan(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = in_out_ptr0[static_cast<long>(x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp45;
                            }
                            ;
                            auto tmp46 = tmp43 ? tmp44() : -std::numeric_limits<decltype(tmp44())>::infinity();
                            auto tmp47 = max_propagate_nan(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = in_out_ptr0[static_cast<long>(54L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp51;
                            }
                            ;
                            auto tmp52 = tmp49 ? tmp50() : -std::numeric_limits<decltype(tmp50())>::infinity();
                            auto tmp53 = max_propagate_nan(tmp52, tmp47);
                            auto tmp54 = c10::convert<long>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = in_out_ptr0[static_cast<long>(8856L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp61;
                            }
                            ;
                            auto tmp62 = tmp59 ? tmp60() : -std::numeric_limits<decltype(tmp60())>::infinity();
                            auto tmp63 = max_propagate_nan(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_out_ptr0[static_cast<long>(8910L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = in_out_ptr0[static_cast<long>(8964L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp73;
                            }
                            ;
                            auto tmp74 = tmp71 ? tmp72() : -std::numeric_limits<decltype(tmp72())>::infinity();
                            auto tmp75 = max_propagate_nan(tmp74, tmp69);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = in_out_ptr0[static_cast<long>((-8964L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp77;
                            }
                            ;
                            auto tmp78 = tmp10 ? tmp76() : -std::numeric_limits<decltype(tmp76())>::infinity();
                            auto tmp79 = [&]
                            {
                                auto tmp80 = in_out_ptr0[static_cast<long>((-8910L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp80;
                            }
                            ;
                            auto tmp81 = tmp18 ? tmp79() : -std::numeric_limits<decltype(tmp79())>::infinity();
                            auto tmp82 = max_propagate_nan(tmp81, tmp78);
                            auto tmp83 = [&]
                            {
                                auto tmp84 = in_out_ptr0[static_cast<long>((-8856L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp84;
                            }
                            ;
                            auto tmp85 = tmp27 ? tmp83() : -std::numeric_limits<decltype(tmp83())>::infinity();
                            auto tmp86 = max_propagate_nan(tmp85, tmp82);
                            auto tmp87 = [&]
                            {
                                auto tmp88 = in_out_ptr0[static_cast<long>((-54L) + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp88;
                            }
                            ;
                            auto tmp89 = tmp37 ? tmp87() : -std::numeric_limits<decltype(tmp87())>::infinity();
                            auto tmp90 = max_propagate_nan(tmp89, tmp86);
                            auto tmp91 = [&]
                            {
                                auto tmp92 = in_out_ptr0[static_cast<long>(x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp92;
                            }
                            ;
                            auto tmp93 = tmp43 ? tmp91() : -std::numeric_limits<decltype(tmp91())>::infinity();
                            auto tmp94 = max_propagate_nan(tmp93, tmp90);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_out_ptr0[static_cast<long>(54L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp49 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = max_propagate_nan(tmp97, tmp94);
                            auto tmp99 = [&]
                            {
                                auto tmp100 = in_out_ptr0[static_cast<long>(8856L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp100;
                            }
                            ;
                            auto tmp101 = tmp59 ? tmp99() : -std::numeric_limits<decltype(tmp99())>::infinity();
                            auto tmp102 = max_propagate_nan(tmp101, tmp98);
                            auto tmp103 = [&]
                            {
                                auto tmp104 = in_out_ptr0[static_cast<long>(8910L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp104;
                            }
                            ;
                            auto tmp105 = tmp65 ? tmp103() : -std::numeric_limits<decltype(tmp103())>::infinity();
                            auto tmp106 = max_propagate_nan(tmp105, tmp102);
                            auto tmp107 = [&]
                            {
                                auto tmp108 = in_out_ptr0[static_cast<long>(8964L + x3 + (108L*x2) + (17820L*x1) + (1470150L*x0))];
                                return tmp108;
                            }
                            ;
                            auto tmp109 = tmp71 ? tmp107() : -std::numeric_limits<decltype(tmp107())>::infinity();
                            auto tmp110 = max_propagate_nan(tmp109, tmp106);
                            out_ptr0[static_cast<long>(x3 + (54L*x2) + (4482L*x1) + (372006L*x0))] = tmp75;
                            out_ptr1[static_cast<long>(x3 + (54L*x2) + (4482L*x1) + (372006L*x0))] = tmp110;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp15 = in_ptr2[static_cast<long>(x1)];
                    auto tmp17 = in_ptr3[static_cast<long>(x1)];
                    auto tmp25 = in_ptr4[static_cast<long>(x1)];
                    auto tmp27 = in_ptr5[static_cast<long>(x1)];
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(54);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (54L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(108);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-54L) + x1 + (54L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                    auto tmp18 = static_cast<float>(0.001);
                    auto tmp19 = decltype(tmp17)(tmp17 + tmp18);
                    auto tmp20 = std::sqrt(tmp19);
                    auto tmp21 = 1 / tmp20;
                    auto tmp22 = static_cast<float>(1.0);
                    auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                    auto tmp24 = decltype(tmp16)(tmp16 * tmp23);
                    auto tmp26 = decltype(tmp24)(tmp24 * tmp25);
                    auto tmp28 = decltype(tmp26)(tmp26 + tmp27);
                    out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp28;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr0 + static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(out_ptr0 + static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(out_ptr0 + static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr0 + static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            tmp75.store(out_ptr1 + static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = out_ptr0[static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = out_ptr0[static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = out_ptr0[static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = out_ptr0[static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp39;
                            }
                            ;
                            auto tmp40 = tmp37 ? tmp38() : -std::numeric_limits<decltype(tmp38())>::infinity();
                            auto tmp41 = max_propagate_nan(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = out_ptr0[static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp45;
                            }
                            ;
                            auto tmp46 = tmp43 ? tmp44() : -std::numeric_limits<decltype(tmp44())>::infinity();
                            auto tmp47 = max_propagate_nan(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = out_ptr0[static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp51;
                            }
                            ;
                            auto tmp52 = tmp49 ? tmp50() : -std::numeric_limits<decltype(tmp50())>::infinity();
                            auto tmp53 = max_propagate_nan(tmp52, tmp47);
                            auto tmp54 = c10::convert<long>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = out_ptr0[static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp61;
                            }
                            ;
                            auto tmp62 = tmp59 ? tmp60() : -std::numeric_limits<decltype(tmp60())>::infinity();
                            auto tmp63 = max_propagate_nan(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = out_ptr0[static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = out_ptr0[static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp73;
                            }
                            ;
                            auto tmp74 = tmp71 ? tmp72() : -std::numeric_limits<decltype(tmp72())>::infinity();
                            auto tmp75 = max_propagate_nan(tmp74, tmp69);
                            out_ptr1[static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0))] = tmp75;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(169L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(169L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr6 + static_cast<long>((-31872L) + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr2 + static_cast<long>(x3 + (96L*x2) + (16224L*x1) + (2741856L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_constant_pad_nd_relu_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp4 = in_ptr2[static_cast<long>(x2)];
                        auto tmp13 = in_ptr3[static_cast<long>(x2)];
                        auto tmp16 = in_ptr4[static_cast<long>(x2)];
                        auto tmp19 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = in_ptr6[static_cast<long>(x2)];
                        auto tmp23 = in_ptr7[static_cast<long>(x2)];
                        auto tmp30 = in_ptr8[static_cast<long>(x2)];
                        auto tmp33 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(0.001);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp7 = std::sqrt(tmp6);
                        auto tmp8 = 1 / tmp7;
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
                        auto tmp11 = at::vec::Vectorized<float>(tmp10);
                        auto tmp12 = tmp3 * tmp11;
                        auto tmp14 = at::vec::Vectorized<float>(tmp13);
                        auto tmp15 = tmp12 * tmp14;
                        auto tmp17 = at::vec::Vectorized<float>(tmp16);
                        auto tmp18 = tmp15 + tmp17;
                        auto tmp21 = at::vec::Vectorized<float>(tmp20);
                        auto tmp22 = tmp19 - tmp21;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp5);
                        auto tmp25 = std::sqrt(tmp24);
                        auto tmp26 = 1 / tmp25;
                        auto tmp27 = decltype(tmp26)(tmp26 * tmp9);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp22 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp18 + tmp35;
                        tmp36.store(out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(171L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(171L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr10 + static_cast<long>((-26892L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr1 + static_cast<long>(x3 + (54L*x2) + (9234L*x1) + (1579014L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-3L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr10[static_cast<long>((-26892L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr1[static_cast<long>(x3 + (54L*x2) + (9234L*x1) + (1579014L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(169L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(169L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-17928L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (54L*x2) + (9126L*x1) + (1542294L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-17928L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (54L*x2) + (9126L*x1) + (1542294L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(48L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(48L); x3<static_cast<long>(54L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-8964L) + x3 + (54L*x2) + (8910L*x1) + (1470150L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (54L*x2) + (9018L*x1) + (1506006L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp4 = in_ptr2[static_cast<long>(x2)];
                        auto tmp13 = in_ptr3[static_cast<long>(x2)];
                        auto tmp16 = in_ptr4[static_cast<long>(x2)];
                        auto tmp19 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = in_ptr6[static_cast<long>(x2)];
                        auto tmp23 = in_ptr7[static_cast<long>(x2)];
                        auto tmp30 = in_ptr8[static_cast<long>(x2)];
                        auto tmp33 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(0.001);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp7 = std::sqrt(tmp6);
                        auto tmp8 = 1 / tmp7;
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
                        auto tmp11 = at::vec::Vectorized<float>(tmp10);
                        auto tmp12 = tmp3 * tmp11;
                        auto tmp14 = at::vec::Vectorized<float>(tmp13);
                        auto tmp15 = tmp12 * tmp14;
                        auto tmp17 = at::vec::Vectorized<float>(tmp16);
                        auto tmp18 = tmp15 + tmp17;
                        auto tmp21 = at::vec::Vectorized<float>(tmp20);
                        auto tmp22 = tmp19 - tmp21;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp5);
                        auto tmp25 = std::sqrt(tmp24);
                        auto tmp26 = 1 / tmp25;
                        auto tmp27 = decltype(tmp26)(tmp26 * tmp9);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp22 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp18 + tmp35;
                        tmp36.store(out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr1[static_cast<long>(x1 + (54L*x2) + (372006L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(167L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(167L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(96L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(165);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-15936L) + x3 + (96L*x2) + (15840L*x1) + (2613600L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (96L*x2) + (16032L*x1) + (2677344L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (54L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (54L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (54L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_relu_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(11761200L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(6888L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(48L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)), static_cast<long>(6889L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(48L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp4 = in_ptr2[static_cast<long>(x2)];
                        auto tmp13 = in_ptr3[static_cast<long>(x2)];
                        auto tmp16 = in_ptr4[static_cast<long>(x2)];
                        auto tmp19 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (54L*x1) + (54L*x1_inner) + (372006L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = in_ptr6[static_cast<long>(x2)];
                        auto tmp23 = in_ptr7[static_cast<long>(x2)];
                        auto tmp30 = in_ptr8[static_cast<long>(x2)];
                        auto tmp33 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(0.001);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp7 = std::sqrt(tmp6);
                        auto tmp8 = 1 / tmp7;
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
                        auto tmp11 = at::vec::Vectorized<float>(tmp10);
                        auto tmp12 = tmp3 * tmp11;
                        auto tmp14 = at::vec::Vectorized<float>(tmp13);
                        auto tmp15 = tmp12 * tmp14;
                        auto tmp17 = at::vec::Vectorized<float>(tmp16);
                        auto tmp18 = tmp15 + tmp17;
                        auto tmp21 = at::vec::Vectorized<float>(tmp20);
                        auto tmp22 = tmp19 - tmp21;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp5);
                        auto tmp25 = std::sqrt(tmp24);
                        auto tmp26 = 1 / tmp25;
                        auto tmp27 = decltype(tmp26)(tmp26 * tmp9);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp22 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp18 + tmp35;
                        tmp36.store(out_ptr0 + static_cast<long>(x1 + (6889L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(6888L); x1<static_cast<long>(6889L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(54L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (54L*x1) + (372006L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (6889L*x2) + (1860030L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr10 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr15 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr10[static_cast<long>(x1 + (54L*x2) + (372006L*x0))];
                        auto tmp1 = in_ptr11[static_cast<long>(x1)];
                        auto tmp3 = in_ptr12[static_cast<long>(x1)];
                        auto tmp11 = in_ptr13[static_cast<long>(x1)];
                        auto tmp13 = in_ptr14[static_cast<long>(x1)];
                        auto tmp15 = in_ptr15[static_cast<long>(x1 + (54L*x2) + (372006L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr1[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(48L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr16 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr21 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)), static_cast<long>(54L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr18[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr19[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr20[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (54L*x2) + (372006L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(48L); x1<static_cast<long>(54L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr16[static_cast<long>(x1 + (54L*x2) + (372006L*x0))];
                        auto tmp1 = in_ptr17[static_cast<long>(x1)];
                        auto tmp3 = in_ptr18[static_cast<long>(x1)];
                        auto tmp11 = in_ptr19[static_cast<long>(x1)];
                        auto tmp13 = in_ptr20[static_cast<long>(x1)];
                        auto tmp15 = in_ptr21[static_cast<long>(x1 + (54L*x2) + (372006L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr2[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(264L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6888L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr3 + static_cast<long>(x1 + (270L*x2) + (1860030L*x0)), static_cast<long>(270L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(6888L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr22[static_cast<long>(x2 + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr3 + static_cast<long>(x1 + (270L*x2) + (1860030L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(264L); x1<static_cast<long>(270L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(6889L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr22[static_cast<long>(x2 + (6889L*x1) + (1860030L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr3[static_cast<long>(x1 + (270L*x2) + (1860030L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(55112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp14;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(in_out_ptr0 + static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(in_out_ptr0 + static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                return tmp77;
                            }
                            ;
                            auto tmp78 = decltype(tmp76())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp76(), to_float_mask(tmp10));
                            auto tmp79 = [&]
                            {
                                auto tmp80 = masked_load(in_out_ptr0 + static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp18));
                                return tmp80;
                            }
                            ;
                            auto tmp81 = decltype(tmp79())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp79(), to_float_mask(tmp18));
                            auto tmp82 = at::vec::maximum(tmp81, tmp78);
                            auto tmp83 = [&]
                            {
                                auto tmp84 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp27));
                                return tmp84;
                            }
                            ;
                            auto tmp85 = decltype(tmp83())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp83(), to_float_mask(tmp27));
                            auto tmp86 = at::vec::maximum(tmp85, tmp82);
                            auto tmp87 = [&]
                            {
                                auto tmp88 = masked_load(in_out_ptr0 + static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp37));
                                return tmp88;
                            }
                            ;
                            auto tmp89 = decltype(tmp87())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp87(), to_float_mask(tmp37));
                            auto tmp90 = at::vec::maximum(tmp89, tmp86);
                            auto tmp91 = [&]
                            {
                                auto tmp92 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp43));
                                return tmp92;
                            }
                            ;
                            auto tmp93 = decltype(tmp91())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp91(), to_float_mask(tmp43));
                            auto tmp94 = at::vec::maximum(tmp93, tmp90);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = masked_load(in_out_ptr0 + static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp49));
                                return tmp96;
                            }
                            ;
                            auto tmp97 = decltype(tmp95())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp95(), to_float_mask(tmp49));
                            auto tmp98 = at::vec::maximum(tmp97, tmp94);
                            auto tmp99 = [&]
                            {
                                auto tmp100 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp59));
                                return tmp100;
                            }
                            ;
                            auto tmp101 = decltype(tmp99())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp99(), to_float_mask(tmp59));
                            auto tmp102 = at::vec::maximum(tmp101, tmp98);
                            auto tmp103 = [&]
                            {
                                auto tmp104 = masked_load(in_out_ptr0 + static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp65));
                                return tmp104;
                            }
                            ;
                            auto tmp105 = decltype(tmp103())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp103(), to_float_mask(tmp65));
                            auto tmp106 = at::vec::maximum(tmp105, tmp102);
                            auto tmp107 = [&]
                            {
                                auto tmp108 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0)), to_float_mask(tmp71));
                                return tmp108;
                            }
                            ;
                            auto tmp109 = decltype(tmp107())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp107(), to_float_mask(tmp71));
                            auto tmp110 = at::vec::maximum(tmp109, tmp106);
                            tmp75.store(out_ptr0 + static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0)));
                            tmp110.store(out_ptr1 + static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_out_ptr0[static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_out_ptr0[static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = in_out_ptr0[static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = in_out_ptr0[static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp39;
                            }
                            ;
                            auto tmp40 = tmp37 ? tmp38() : -std::numeric_limits<decltype(tmp38())>::infinity();
                            auto tmp41 = max_propagate_nan(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = in_out_ptr0[static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp45;
                            }
                            ;
                            auto tmp46 = tmp43 ? tmp44() : -std::numeric_limits<decltype(tmp44())>::infinity();
                            auto tmp47 = max_propagate_nan(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = in_out_ptr0[static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp51;
                            }
                            ;
                            auto tmp52 = tmp49 ? tmp50() : -std::numeric_limits<decltype(tmp50())>::infinity();
                            auto tmp53 = max_propagate_nan(tmp52, tmp47);
                            auto tmp54 = c10::convert<long>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = in_out_ptr0[static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp61;
                            }
                            ;
                            auto tmp62 = tmp59 ? tmp60() : -std::numeric_limits<decltype(tmp60())>::infinity();
                            auto tmp63 = max_propagate_nan(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = in_out_ptr0[static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = in_out_ptr0[static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp73;
                            }
                            ;
                            auto tmp74 = tmp71 ? tmp72() : -std::numeric_limits<decltype(tmp72())>::infinity();
                            auto tmp75 = max_propagate_nan(tmp74, tmp69);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = in_out_ptr0[static_cast<long>((-9072L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp77;
                            }
                            ;
                            auto tmp78 = tmp10 ? tmp76() : -std::numeric_limits<decltype(tmp76())>::infinity();
                            auto tmp79 = [&]
                            {
                                auto tmp80 = in_out_ptr0[static_cast<long>((-8964L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp80;
                            }
                            ;
                            auto tmp81 = tmp18 ? tmp79() : -std::numeric_limits<decltype(tmp79())>::infinity();
                            auto tmp82 = max_propagate_nan(tmp81, tmp78);
                            auto tmp83 = [&]
                            {
                                auto tmp84 = in_out_ptr0[static_cast<long>((-8856L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp84;
                            }
                            ;
                            auto tmp85 = tmp27 ? tmp83() : -std::numeric_limits<decltype(tmp83())>::infinity();
                            auto tmp86 = max_propagate_nan(tmp85, tmp82);
                            auto tmp87 = [&]
                            {
                                auto tmp88 = in_out_ptr0[static_cast<long>((-108L) + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp88;
                            }
                            ;
                            auto tmp89 = tmp37 ? tmp87() : -std::numeric_limits<decltype(tmp87())>::infinity();
                            auto tmp90 = max_propagate_nan(tmp89, tmp86);
                            auto tmp91 = [&]
                            {
                                auto tmp92 = in_out_ptr0[static_cast<long>(x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp92;
                            }
                            ;
                            auto tmp93 = tmp43 ? tmp91() : -std::numeric_limits<decltype(tmp91())>::infinity();
                            auto tmp94 = max_propagate_nan(tmp93, tmp90);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = in_out_ptr0[static_cast<long>(108L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp49 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = max_propagate_nan(tmp97, tmp94);
                            auto tmp99 = [&]
                            {
                                auto tmp100 = in_out_ptr0[static_cast<long>(8856L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp100;
                            }
                            ;
                            auto tmp101 = tmp59 ? tmp99() : -std::numeric_limits<decltype(tmp99())>::infinity();
                            auto tmp102 = max_propagate_nan(tmp101, tmp98);
                            auto tmp103 = [&]
                            {
                                auto tmp104 = in_out_ptr0[static_cast<long>(8964L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp104;
                            }
                            ;
                            auto tmp105 = tmp65 ? tmp103() : -std::numeric_limits<decltype(tmp103())>::infinity();
                            auto tmp106 = max_propagate_nan(tmp105, tmp102);
                            auto tmp107 = [&]
                            {
                                auto tmp108 = in_out_ptr0[static_cast<long>(9072L + x3 + (216L*x2) + (17928L*x1) + (744012L*x0))];
                                return tmp108;
                            }
                            ;
                            auto tmp109 = tmp71 ? tmp107() : -std::numeric_limits<decltype(tmp107())>::infinity();
                            auto tmp110 = max_propagate_nan(tmp109, tmp106);
                            out_ptr0[static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0))] = tmp75;
                            out_ptr1[static_cast<long>(x3 + (108L*x2) + (4536L*x1) + (190512L*x0))] = tmp110;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(264L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>((2L*x3) + (166L*x2) + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            auto tmp2 = static_cast<float>(1.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 * tmp3;
                            tmp4.store(out_ptr2 + static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0)));
                        }
                    }
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(264L); x1<static_cast<long>(270L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = in_ptr4[static_cast<long>((2L*x3) + (166L*x2) + (6889L*x1) + (1860030L*x0))];
                            auto tmp1 = tmp0 * (tmp0>0);
                            auto tmp2 = static_cast<float>(1.0);
                            auto tmp3 = decltype(tmp1)(tmp1 * tmp2);
                            out_ptr2[static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0))] = tmp3;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_relu_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(264L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<int>(1L + (2L*x2));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + (2L*x3));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(84L + (2L*x3) + (166L*x2) + (6889L*x1) + (6889L*x1_inner) + (1860030L*x0))]; return masked_load(tmpbuf, to_float_mask(tmp10)); })();
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp15 = static_cast<float>(1.0);
                            auto tmp16 = at::vec::Vectorized<float>(tmp15);
                            auto tmp17 = tmp14 * tmp16;
                            tmp17.store(out_ptr0 + static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0)));
                        }
                    }
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(264L); x1<static_cast<long>(270L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(42L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>(1L + (2L*x2));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>(1L + (2L*x3));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>(84L + (2L*x3) + (166L*x2) + (6889L*x1) + (1860030L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp15 = static_cast<float>(1.0);
                            auto tmp16 = decltype(tmp14)(tmp14 * tmp15);
                            out_ptr0[static_cast<long>(x1 + (270L*x3) + (11340L*x2) + (476280L*x0))] = tmp16;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(1L))
                {
                    auto tmp15 = in_ptr2[static_cast<long>(x1)];
                    auto tmp17 = in_ptr3[static_cast<long>(x1)];
                    auto tmp25 = in_ptr4[static_cast<long>(x1)];
                    auto tmp27 = in_ptr5[static_cast<long>(x1)];
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(108);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (108L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(216);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-108L) + x1 + (108L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                    auto tmp18 = static_cast<float>(0.001);
                    auto tmp19 = decltype(tmp17)(tmp17 + tmp18);
                    auto tmp20 = std::sqrt(tmp19);
                    auto tmp21 = 1 / tmp20;
                    auto tmp22 = static_cast<float>(1.0);
                    auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                    auto tmp24 = decltype(tmp16)(tmp16 * tmp23);
                    auto tmp26 = decltype(tmp24)(tmp24 * tmp25);
                    auto tmp28 = decltype(tmp26)(tmp26 + tmp27);
                    out_ptr0[static_cast<long>(x1 + (216L*x0))] = tmp28;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr1 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(87L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(87L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr6 + static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr2 + static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr6[static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr2[static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(89L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(89L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-27216L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (108L*x2) + (9612L*x1) + (855468L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-3L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-27216L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (108L*x2) + (9612L*x1) + (855468L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(87L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(87L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-2L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-18144L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (108L*x2) + (9396L*x1) + (817452L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(85L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(85L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp4 = in_ptr2[static_cast<long>(x2)];
                        auto tmp13 = in_ptr3[static_cast<long>(x2)];
                        auto tmp16 = in_ptr4[static_cast<long>(x2)];
                        auto tmp19 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = in_ptr6[static_cast<long>(x2)];
                        auto tmp23 = in_ptr7[static_cast<long>(x2)];
                        auto tmp30 = in_ptr8[static_cast<long>(x2)];
                        auto tmp33 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(0.001);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp7 = std::sqrt(tmp6);
                        auto tmp8 = 1 / tmp7;
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
                        auto tmp11 = at::vec::Vectorized<float>(tmp10);
                        auto tmp12 = tmp3 * tmp11;
                        auto tmp14 = at::vec::Vectorized<float>(tmp13);
                        auto tmp15 = tmp12 * tmp14;
                        auto tmp17 = at::vec::Vectorized<float>(tmp16);
                        auto tmp18 = tmp15 + tmp17;
                        auto tmp21 = at::vec::Vectorized<float>(tmp20);
                        auto tmp22 = tmp19 - tmp21;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp5);
                        auto tmp25 = std::sqrt(tmp24);
                        auto tmp26 = 1 / tmp25;
                        auto tmp27 = decltype(tmp26)(tmp26 * tmp9);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp22 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp18 + tmp35;
                        tmp36.store(out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr1[static_cast<long>(x1 + (108L*x2) + (190512L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(85L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(85L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(104L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0)));
                        }
                        #pragma omp simd simdlen(4) 
                        for(long x3=static_cast<long>(104L); x3<static_cast<long>(108L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + x1);
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(83);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<long>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = in_ptr0[static_cast<long>((-9072L) + x3 + (108L*x2) + (8964L*x1) + (744012L*x0))];
                                auto tmp13 = tmp12 * (tmp12>0);
                                return tmp13;
                            }
                            ;
                            auto tmp14 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            out_ptr0[static_cast<long>(x3 + (108L*x2) + (9180L*x1) + (780300L*x0))] = tmp14;
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (108L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr0[static_cast<long>(x1 + (108L*x0))];
                    auto tmp1 = in_ptr0[static_cast<long>(x1)];
                    auto tmp3 = in_ptr1[static_cast<long>(x1)];
                    auto tmp11 = in_ptr2[static_cast<long>(x1)];
                    auto tmp13 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                    auto tmp6 = std::sqrt(tmp5);
                    auto tmp7 = 1 / tmp6;
                    auto tmp8 = static_cast<float>(1.0);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                    auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                    auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                    auto tmp15 = tmp14 * (tmp14>0);
                    in_out_ptr0[static_cast<long>(x1 + (108L*x0))] = tmp15;
                }
            }
        }
    }
}
''')


cpp_fused_relu_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(5952096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(104L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)), static_cast<long>(1764L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(104L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp4 = in_ptr2[static_cast<long>(x2)];
                        auto tmp13 = in_ptr3[static_cast<long>(x2)];
                        auto tmp16 = in_ptr4[static_cast<long>(x2)];
                        auto tmp19 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (108L*x1) + (108L*x1_inner) + (190512L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp20 = in_ptr6[static_cast<long>(x2)];
                        auto tmp23 = in_ptr7[static_cast<long>(x2)];
                        auto tmp30 = in_ptr8[static_cast<long>(x2)];
                        auto tmp33 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = at::vec::Vectorized<float>(tmp1);
                        auto tmp3 = tmp0 - tmp2;
                        auto tmp5 = static_cast<float>(0.001);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp7 = std::sqrt(tmp6);
                        auto tmp8 = 1 / tmp7;
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = decltype(tmp8)(tmp8 * tmp9);
                        auto tmp11 = at::vec::Vectorized<float>(tmp10);
                        auto tmp12 = tmp3 * tmp11;
                        auto tmp14 = at::vec::Vectorized<float>(tmp13);
                        auto tmp15 = tmp12 * tmp14;
                        auto tmp17 = at::vec::Vectorized<float>(tmp16);
                        auto tmp18 = tmp15 + tmp17;
                        auto tmp21 = at::vec::Vectorized<float>(tmp20);
                        auto tmp22 = tmp19 - tmp21;
                        auto tmp24 = decltype(tmp23)(tmp23 + tmp5);
                        auto tmp25 = std::sqrt(tmp24);
                        auto tmp26 = 1 / tmp25;
                        auto tmp27 = decltype(tmp26)(tmp26 * tmp9);
                        auto tmp28 = at::vec::Vectorized<float>(tmp27);
                        auto tmp29 = tmp22 * tmp28;
                        auto tmp31 = at::vec::Vectorized<float>(tmp30);
                        auto tmp32 = tmp29 * tmp31;
                        auto tmp34 = at::vec::Vectorized<float>(tmp33);
                        auto tmp35 = tmp32 + tmp34;
                        auto tmp36 = tmp18 + tmp35;
                        tmp36.store(out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(108L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (108L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr10 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr15 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr10[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp1 = in_ptr11[static_cast<long>(x1)];
                        auto tmp3 = in_ptr12[static_cast<long>(x1)];
                        auto tmp11 = in_ptr13[static_cast<long>(x1)];
                        auto tmp13 = in_ptr14[static_cast<long>(x1)];
                        auto tmp15 = in_ptr15[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr1[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr16 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr21 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr18[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr19[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr20[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr16[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp1 = in_ptr17[static_cast<long>(x1)];
                        auto tmp3 = in_ptr18[static_cast<long>(x1)];
                        auto tmp11 = in_ptr19[static_cast<long>(x1)];
                        auto tmp13 = in_ptr20[static_cast<long>(x1)];
                        auto tmp15 = in_ptr21[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr2[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(104L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr22 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr27 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)), static_cast<long>(108L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr23[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr24[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr25[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr26[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr3 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1 + (108L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(104L); x1<static_cast<long>(108L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr22[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp1 = in_ptr23[static_cast<long>(x1)];
                        auto tmp3 = in_ptr24[static_cast<long>(x1)];
                        auto tmp11 = in_ptr25[static_cast<long>(x1)];
                        auto tmp13 = in_ptr26[static_cast<long>(x1)];
                        auto tmp15 = in_ptr27[static_cast<long>(x1 + (108L*x2) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(536L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)), static_cast<long>(540L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)), static_cast<long>(540L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr28[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (540L*x2) + (952560L*x0)));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(536L); x1<static_cast<long>(540L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr28[static_cast<long>(x2 + (1764L*x1) + (952560L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        out_ptr4[static_cast<long>(x1 + (540L*x2) + (952560L*x0))] = tmp1;
                        out_ptr5[static_cast<long>(x1 + (540L*x2) + (952560L*x0))] = tmp1;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(42L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(42L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(216L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9288L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8856L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-216L) + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(216L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8856L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9288L + x3 + (216L*x2) + (9072L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (216L*x2) + (9072L*x1) + (381024L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_relu_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(2L*x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(2L*x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp7;
                            }
                            ;
                            auto tmp8 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp6(), to_float_mask(tmp5));
                            auto tmp9 = c10::convert<int>(1L + (2L*x2));
                            auto tmp10 = tmp9 < tmp1;
                            auto tmp11 = tmp2 & tmp10;
                            auto tmp12 = [&]
                            {
                                auto tmp13 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp11));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp12())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp12(), to_float_mask(tmp11));
                            auto tmp15 = at::vec::maximum(tmp14, tmp8);
                            auto tmp16 = c10::convert<int>(2L + (2L*x2));
                            auto tmp17 = tmp16 < tmp1;
                            auto tmp18 = tmp2 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp15);
                            auto tmp23 = c10::convert<int>(1L + (2L*x1));
                            auto tmp24 = tmp23 < tmp1;
                            auto tmp25 = tmp24 & tmp4;
                            auto tmp26 = [&]
                            {
                                auto tmp27 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp25));
                                return tmp27;
                            }
                            ;
                            auto tmp28 = decltype(tmp26())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp26(), to_float_mask(tmp25));
                            auto tmp29 = at::vec::maximum(tmp28, tmp22);
                            auto tmp30 = tmp24 & tmp10;
                            auto tmp31 = [&]
                            {
                                auto tmp32 = masked_load(in_out_ptr0 + static_cast<long>(18576L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp30));
                                return tmp32;
                            }
                            ;
                            auto tmp33 = decltype(tmp31())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp31(), to_float_mask(tmp30));
                            auto tmp34 = at::vec::maximum(tmp33, tmp29);
                            auto tmp35 = tmp24 & tmp17;
                            auto tmp36 = [&]
                            {
                                auto tmp37 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp35));
                                return tmp37;
                            }
                            ;
                            auto tmp38 = decltype(tmp36())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp36(), to_float_mask(tmp35));
                            auto tmp39 = at::vec::maximum(tmp38, tmp34);
                            auto tmp40 = c10::convert<int>(2L + (2L*x1));
                            auto tmp41 = tmp40 < tmp1;
                            auto tmp42 = tmp41 & tmp4;
                            auto tmp43 = [&]
                            {
                                auto tmp44 = masked_load(in_out_ptr0 + static_cast<long>(36288L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp42));
                                return tmp44;
                            }
                            ;
                            auto tmp45 = decltype(tmp43())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp43(), to_float_mask(tmp42));
                            auto tmp46 = at::vec::maximum(tmp45, tmp39);
                            auto tmp47 = tmp41 & tmp10;
                            auto tmp48 = [&]
                            {
                                auto tmp49 = masked_load(in_out_ptr0 + static_cast<long>(36720L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp47));
                                return tmp49;
                            }
                            ;
                            auto tmp50 = decltype(tmp48())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp48(), to_float_mask(tmp47));
                            auto tmp51 = at::vec::maximum(tmp50, tmp46);
                            auto tmp52 = tmp41 & tmp17;
                            auto tmp53 = [&]
                            {
                                auto tmp54 = masked_load(in_out_ptr0 + static_cast<long>(37152L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp52));
                                return tmp54;
                            }
                            ;
                            auto tmp55 = decltype(tmp53())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp53(), to_float_mask(tmp52));
                            auto tmp56 = at::vec::maximum(tmp55, tmp51);
                            tmp56.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(216L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)), static_cast<long>(216L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (216L*x2) + (381024L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1760L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (216L*x1) + (216L*x1_inner) + (381024L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (1764L*x2) + (1905120L*x0)), static_cast<long>(1764L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(1760L); x1<static_cast<long>(1764L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(216L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (216L*x1) + (381024L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (1764L*x2) + (1905120L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1760L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)), static_cast<long>(1080L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(1760L); x2<static_cast<long>(1764L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (1080L*x2) + (1905120L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(14112L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(2L*x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(2L*x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp7;
                            }
                            ;
                            auto tmp8 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp6(), to_float_mask(tmp5));
                            auto tmp9 = c10::convert<int>(1L + (2L*x2));
                            auto tmp10 = tmp9 < tmp1;
                            auto tmp11 = tmp2 & tmp10;
                            auto tmp12 = [&]
                            {
                                auto tmp13 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp11));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp12())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp12(), to_float_mask(tmp11));
                            auto tmp15 = at::vec::maximum(tmp14, tmp8);
                            auto tmp16 = c10::convert<int>(2L + (2L*x2));
                            auto tmp17 = tmp16 < tmp1;
                            auto tmp18 = tmp2 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp15);
                            auto tmp23 = c10::convert<int>(1L + (2L*x1));
                            auto tmp24 = tmp23 < tmp1;
                            auto tmp25 = tmp24 & tmp4;
                            auto tmp26 = [&]
                            {
                                auto tmp27 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp25));
                                return tmp27;
                            }
                            ;
                            auto tmp28 = decltype(tmp26())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp26(), to_float_mask(tmp25));
                            auto tmp29 = at::vec::maximum(tmp28, tmp22);
                            auto tmp30 = tmp24 & tmp10;
                            auto tmp31 = [&]
                            {
                                auto tmp32 = masked_load(in_out_ptr0 + static_cast<long>(18576L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp30));
                                return tmp32;
                            }
                            ;
                            auto tmp33 = decltype(tmp31())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp31(), to_float_mask(tmp30));
                            auto tmp34 = at::vec::maximum(tmp33, tmp29);
                            auto tmp35 = tmp24 & tmp17;
                            auto tmp36 = [&]
                            {
                                auto tmp37 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp35));
                                return tmp37;
                            }
                            ;
                            auto tmp38 = decltype(tmp36())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp36(), to_float_mask(tmp35));
                            auto tmp39 = at::vec::maximum(tmp38, tmp34);
                            auto tmp40 = c10::convert<int>(2L + (2L*x1));
                            auto tmp41 = tmp40 < tmp1;
                            auto tmp42 = tmp41 & tmp4;
                            auto tmp43 = [&]
                            {
                                auto tmp44 = masked_load(in_out_ptr0 + static_cast<long>(36288L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp42));
                                return tmp44;
                            }
                            ;
                            auto tmp45 = decltype(tmp43())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp43(), to_float_mask(tmp42));
                            auto tmp46 = at::vec::maximum(tmp45, tmp39);
                            auto tmp47 = tmp41 & tmp10;
                            auto tmp48 = [&]
                            {
                                auto tmp49 = masked_load(in_out_ptr0 + static_cast<long>(36720L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp47));
                                return tmp49;
                            }
                            ;
                            auto tmp50 = decltype(tmp48())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp48(), to_float_mask(tmp47));
                            auto tmp51 = at::vec::maximum(tmp50, tmp46);
                            auto tmp52 = tmp41 & tmp17;
                            auto tmp53 = [&]
                            {
                                auto tmp54 = masked_load(in_out_ptr0 + static_cast<long>(37152L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp52));
                                return tmp54;
                            }
                            ;
                            auto tmp55 = decltype(tmp53())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp53(), to_float_mask(tmp52));
                            auto tmp56 = at::vec::maximum(tmp55, tmp51);
                            auto tmp57 = [&]
                            {
                                auto tmp58 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                return tmp58;
                            }
                            ;
                            auto tmp59 = decltype(tmp57())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp57(), to_float_mask(tmp5));
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp11));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp11));
                            auto tmp63 = at::vec::maximum(tmp62, tmp59);
                            auto tmp64 = [&]
                            {
                                auto tmp65 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp18));
                                return tmp65;
                            }
                            ;
                            auto tmp66 = decltype(tmp64())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp64(), to_float_mask(tmp18));
                            auto tmp67 = at::vec::maximum(tmp66, tmp63);
                            auto tmp68 = [&]
                            {
                                auto tmp69 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp25));
                                return tmp69;
                            }
                            ;
                            auto tmp70 = decltype(tmp68())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp68(), to_float_mask(tmp25));
                            auto tmp71 = at::vec::maximum(tmp70, tmp67);
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(18576L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp30));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp30));
                            auto tmp75 = at::vec::maximum(tmp74, tmp71);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp35));
                                return tmp77;
                            }
                            ;
                            auto tmp78 = decltype(tmp76())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp76(), to_float_mask(tmp35));
                            auto tmp79 = at::vec::maximum(tmp78, tmp75);
                            auto tmp80 = [&]
                            {
                                auto tmp81 = masked_load(in_out_ptr0 + static_cast<long>(36288L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp42));
                                return tmp81;
                            }
                            ;
                            auto tmp82 = decltype(tmp80())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp80(), to_float_mask(tmp42));
                            auto tmp83 = at::vec::maximum(tmp82, tmp79);
                            auto tmp84 = [&]
                            {
                                auto tmp85 = masked_load(in_out_ptr0 + static_cast<long>(36720L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp47));
                                return tmp85;
                            }
                            ;
                            auto tmp86 = decltype(tmp84())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp84(), to_float_mask(tmp47));
                            auto tmp87 = at::vec::maximum(tmp86, tmp83);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = masked_load(in_out_ptr0 + static_cast<long>(37152L + x3 + (864L*x2) + (36288L*x1) + (762048L*x0)), to_float_mask(tmp52));
                                return tmp89;
                            }
                            ;
                            auto tmp90 = decltype(tmp88())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp88(), to_float_mask(tmp52));
                            auto tmp91 = at::vec::maximum(tmp90, tmp87);
                            tmp56.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                            tmp91.store(out_ptr1 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(21L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>((2L*x3) + (84L*x2) + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            auto tmp2 = static_cast<float>(1.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 * tmp3;
                            tmp4.store(out_ptr2 + static_cast<long>(x1 + (1080L*x3) + (22680L*x2) + (476280L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_relu_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1080L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(21L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<int>(1L + (2L*x2));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + (2L*x3));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(43L + (2L*x3) + (84L*x2) + (1764L*x1) + (1764L*x1_inner) + (1905120L*x0))]; return masked_load(tmpbuf, to_float_mask(tmp10)); })();
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp15 = static_cast<float>(1.0);
                            auto tmp16 = at::vec::Vectorized<float>(tmp15);
                            auto tmp17 = tmp14 * tmp16;
                            tmp17.store(out_ptr0 + static_cast<long>(x1 + (1080L*x3) + (22680L*x2) + (476280L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(1L))
                {
                    auto tmp15 = in_ptr2[static_cast<long>(x1)];
                    auto tmp17 = in_ptr3[static_cast<long>(x1)];
                    auto tmp25 = in_ptr4[static_cast<long>(x1)];
                    auto tmp27 = in_ptr5[static_cast<long>(x1)];
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(216);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (216L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(432);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-216L) + x1 + (216L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                    auto tmp18 = static_cast<float>(0.001);
                    auto tmp19 = decltype(tmp17)(tmp17 + tmp18);
                    auto tmp20 = std::sqrt(tmp19);
                    auto tmp21 = 1 / tmp20;
                    auto tmp22 = static_cast<float>(1.0);
                    auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                    auto tmp24 = decltype(tmp16)(tmp16 * tmp23);
                    auto tmp26 = decltype(tmp24)(tmp24 * tmp25);
                    auto tmp28 = decltype(tmp26)(tmp26 + tmp27);
                    out_ptr0[static_cast<long>(x1 + (432L*x0))] = tmp28;
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr1 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(45L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(45L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr6 + static_cast<long>((-18576L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr2 + static_cast<long>(x3 + (432L*x2) + (19440L*x1) + (874800L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(47L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(47L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-37152L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (20304L*x1) + (954288L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(45L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(45L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(42);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-18576L) + x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (19440L*x1) + (874800L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(43L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(43L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_ptr0 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                auto tmp8 = at::vec::clamp_min(tmp7, decltype(tmp7)(0));
                                return tmp8;
                            }
                            ;
                            auto tmp9 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp6(), to_float_mask(tmp5));
                            tmp9.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(43L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(43L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>(x1);
                            auto tmp1 = static_cast<int>(42);
                            auto tmp2 = tmp0 < tmp1;
                            auto tmp3 = c10::convert<int>(x2);
                            auto tmp4 = tmp3 < tmp1;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = [&]
                            {
                                auto tmp7 = masked_load(in_ptr0 + static_cast<long>(x3 + (432L*x2) + (18144L*x1) + (762048L*x0)), to_float_mask(tmp5));
                                auto tmp8 = at::vec::clamp_min(tmp7, decltype(tmp7)(0));
                                return tmp8;
                            }
                            ;
                            auto tmp9 = decltype(tmp6())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp6(), to_float_mask(tmp5));
                            tmp9.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (18576L*x1) + (798768L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6096384L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr10 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr15 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr16 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr21 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr18[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr19[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr20[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr22 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr27 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr23[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr24[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr25[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr26[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr3 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr28[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_109 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_110 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_111 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_112 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_113 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_114 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_115 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(21L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(21L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(432L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9072L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-432L) + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(432L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9072L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (432L*x2) + (9072L*x1) + (190512L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (432L*x2) + (9072L*x1) + (190512L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_relu_116 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-19008L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-18144L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-17280L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(17280L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            tmp75.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_117 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_118 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1524096L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_119 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_120 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_121 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_122 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_123 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_124 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_125 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)), static_cast<long>(432L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (432L*x2) + (190512L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(440L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (432L*x1) + (432L*x1_inner) + (190512L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (441L*x2) + (952560L*x0)), static_cast<long>(441L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(440L); x1<static_cast<long>(441L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(432L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (432L*x1) + (190512L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (441L*x2) + (952560L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(440L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)), static_cast<long>(2160L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(440L); x2<static_cast<long>(441L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (2160L*x2) + (952560L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_126 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3528L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + (2L*x2));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-19008L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp8 & tmp15;
                            auto tmp18 = tmp17 & tmp16;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-18144L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp8 & tmp24;
                            auto tmp27 = tmp26 & tmp25;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-17280L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp6;
                            auto tmp37 = tmp36 & tmp7;
                            auto tmp38 = [&]
                            {
                                auto tmp39 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp37));
                                return tmp39;
                            }
                            ;
                            auto tmp40 = decltype(tmp38())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp38(), to_float_mask(tmp37));
                            auto tmp41 = at::vec::maximum(tmp40, tmp31);
                            auto tmp42 = tmp35 & tmp15;
                            auto tmp43 = tmp42 & tmp16;
                            auto tmp44 = [&]
                            {
                                auto tmp45 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp43));
                                return tmp45;
                            }
                            ;
                            auto tmp46 = decltype(tmp44())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp44(), to_float_mask(tmp43));
                            auto tmp47 = at::vec::maximum(tmp46, tmp41);
                            auto tmp48 = tmp35 & tmp24;
                            auto tmp49 = tmp48 & tmp25;
                            auto tmp50 = [&]
                            {
                                auto tmp51 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp49));
                                return tmp51;
                            }
                            ;
                            auto tmp52 = decltype(tmp50())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp50(), to_float_mask(tmp49));
                            auto tmp53 = at::vec::maximum(tmp52, tmp47);
                            auto tmp54 = c10::convert<int>(1L + (2L*x1));
                            auto tmp55 = tmp54 >= tmp1;
                            auto tmp56 = tmp54 < tmp3;
                            auto tmp57 = tmp55 & tmp56;
                            auto tmp58 = tmp57 & tmp6;
                            auto tmp59 = tmp58 & tmp7;
                            auto tmp60 = [&]
                            {
                                auto tmp61 = masked_load(in_out_ptr0 + static_cast<long>(17280L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp59));
                                return tmp61;
                            }
                            ;
                            auto tmp62 = decltype(tmp60())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp60(), to_float_mask(tmp59));
                            auto tmp63 = at::vec::maximum(tmp62, tmp53);
                            auto tmp64 = tmp57 & tmp15;
                            auto tmp65 = tmp64 & tmp16;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp63);
                            auto tmp70 = tmp57 & tmp24;
                            auto tmp71 = tmp70 & tmp25;
                            auto tmp72 = [&]
                            {
                                auto tmp73 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp71));
                                return tmp73;
                            }
                            ;
                            auto tmp74 = decltype(tmp72())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp72(), to_float_mask(tmp71));
                            auto tmp75 = at::vec::maximum(tmp74, tmp69);
                            auto tmp76 = [&]
                            {
                                auto tmp77 = masked_load(in_out_ptr0 + static_cast<long>((-19008L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                return tmp77;
                            }
                            ;
                            auto tmp78 = decltype(tmp76())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp76(), to_float_mask(tmp10));
                            auto tmp79 = [&]
                            {
                                auto tmp80 = masked_load(in_out_ptr0 + static_cast<long>((-18144L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp18));
                                return tmp80;
                            }
                            ;
                            auto tmp81 = decltype(tmp79())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp79(), to_float_mask(tmp18));
                            auto tmp82 = at::vec::maximum(tmp81, tmp78);
                            auto tmp83 = [&]
                            {
                                auto tmp84 = masked_load(in_out_ptr0 + static_cast<long>((-17280L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp27));
                                return tmp84;
                            }
                            ;
                            auto tmp85 = decltype(tmp83())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp83(), to_float_mask(tmp27));
                            auto tmp86 = at::vec::maximum(tmp85, tmp82);
                            auto tmp87 = [&]
                            {
                                auto tmp88 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp37));
                                return tmp88;
                            }
                            ;
                            auto tmp89 = decltype(tmp87())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp87(), to_float_mask(tmp37));
                            auto tmp90 = at::vec::maximum(tmp89, tmp86);
                            auto tmp91 = [&]
                            {
                                auto tmp92 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp43));
                                return tmp92;
                            }
                            ;
                            auto tmp93 = decltype(tmp91())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp91(), to_float_mask(tmp43));
                            auto tmp94 = at::vec::maximum(tmp93, tmp90);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp49));
                                return tmp96;
                            }
                            ;
                            auto tmp97 = decltype(tmp95())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp95(), to_float_mask(tmp49));
                            auto tmp98 = at::vec::maximum(tmp97, tmp94);
                            auto tmp99 = [&]
                            {
                                auto tmp100 = masked_load(in_out_ptr0 + static_cast<long>(17280L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp59));
                                return tmp100;
                            }
                            ;
                            auto tmp101 = decltype(tmp99())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp99(), to_float_mask(tmp59));
                            auto tmp102 = at::vec::maximum(tmp101, tmp98);
                            auto tmp103 = [&]
                            {
                                auto tmp104 = masked_load(in_out_ptr0 + static_cast<long>(18144L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp65));
                                return tmp104;
                            }
                            ;
                            auto tmp105 = decltype(tmp103())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp103(), to_float_mask(tmp65));
                            auto tmp106 = at::vec::maximum(tmp105, tmp102);
                            auto tmp107 = [&]
                            {
                                auto tmp108 = masked_load(in_out_ptr0 + static_cast<long>(19008L + x3 + (1728L*x2) + (36288L*x1) + (381024L*x0)), to_float_mask(tmp71));
                                return tmp108;
                            }
                            ;
                            auto tmp109 = decltype(tmp107())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp107(), to_float_mask(tmp71));
                            auto tmp110 = at::vec::maximum(tmp109, tmp106);
                            tmp75.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                            tmp110.store(out_ptr1 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(11L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr4[static_cast<long>((2L*x3) + (42L*x2) + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            auto tmp2 = static_cast<float>(1.0);
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 * tmp3;
                            tmp4.store(out_ptr2 + static_cast<long>(x1 + (2160L*x3) + (23760L*x2) + (261360L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused_avg_pool2d_constant_pad_nd_relu_127 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2160L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(11L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<int>(1L + (2L*x2));
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>(1L + (2L*x3));
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr0[static_cast<long>(22L + (2L*x3) + (42L*x2) + (441L*x1) + (441L*x1_inner) + (952560L*x0))]; return masked_load(tmpbuf, to_float_mask(tmp10)); })();
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            auto tmp15 = static_cast<float>(1.0);
                            auto tmp16 = at::vec::Vectorized<float>(tmp15);
                            auto tmp17 = tmp14 * tmp16;
                            tmp17.store(out_ptr0 + static_cast<long>(x1 + (2160L*x3) + (23760L*x2) + (261360L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_128 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(1L))
                {
                    auto tmp15 = in_ptr2[static_cast<long>(x1)];
                    auto tmp17 = in_ptr3[static_cast<long>(x1)];
                    auto tmp25 = in_ptr4[static_cast<long>(x1)];
                    auto tmp27 = in_ptr5[static_cast<long>(x1)];
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(432);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (432L*x0))];
                        return tmp6;
                    }
                    ;
                    auto tmp7 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp8 = tmp0 >= tmp3;
                    auto tmp9 = static_cast<long>(864);
                    auto tmp10 = tmp0 < tmp9;
                    auto tmp11 = [&]
                    {
                        auto tmp12 = in_ptr1[static_cast<long>((-432L) + x1 + (432L*x0))];
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp8 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                    auto tmp14 = tmp4 ? tmp7 : tmp13;
                    auto tmp16 = decltype(tmp14)(tmp14 - tmp15);
                    auto tmp18 = static_cast<float>(0.001);
                    auto tmp19 = decltype(tmp17)(tmp17 + tmp18);
                    auto tmp20 = std::sqrt(tmp19);
                    auto tmp21 = 1 / tmp20;
                    auto tmp22 = static_cast<float>(1.0);
                    auto tmp23 = decltype(tmp21)(tmp21 * tmp22);
                    auto tmp24 = decltype(tmp16)(tmp16 * tmp23);
                    auto tmp26 = decltype(tmp24)(tmp24 * tmp25);
                    auto tmp28 = decltype(tmp26)(tmp26 + tmp27);
                    out_ptr0[static_cast<long>(x1 + (864L*x0))] = tmp28;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr1 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(25L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(25L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr6 + static_cast<long>((-38016L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr2 + static_cast<long>(x3 + (864L*x2) + (21600L*x1) + (540000L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_129 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_130 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(27L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(27L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-3L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-3L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-57024L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (23328L*x1) + (629856L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_131 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_132 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(25L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(25L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-2L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-2L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-38016L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (21600L*x1) + (540000L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_133 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_134 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(23L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(23L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_135 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_136 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_137 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_constant_pad_nd_relu_138 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(23L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(23L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(21);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = c10::convert<int>((-1L) + x2);
                            auto tmp6 = tmp5 >= tmp1;
                            auto tmp7 = tmp5 < tmp3;
                            auto tmp8 = tmp2 & tmp4;
                            auto tmp9 = tmp8 & tmp6;
                            auto tmp10 = tmp9 & tmp7;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_ptr0 + static_cast<long>((-19008L) + x3 + (864L*x2) + (18144L*x1) + (381024L*x0)), to_float_mask(tmp10));
                                auto tmp13 = at::vec::clamp_min(tmp12, decltype(tmp12)(0));
                                return tmp13;
                            }
                            ;
                            auto tmp14 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(static_cast<float>(0.0)), tmp11(), to_float_mask(tmp10));
                            tmp14.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (19872L*x1) + (457056L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_139 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_140 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(3048192L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(in_out_ptr0 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_141 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr10 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr15 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr11[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr12[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr16 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr21 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr17[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr18[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr19[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr20[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr22 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr27 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr23[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr24[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr25[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr26[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr3 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr3[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr28[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_142 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_143 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_144 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_145 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_146 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_147 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_148 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_149 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_150 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_151 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_152 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        float tmp3[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                            tmp1.store(tmp3 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                        at::vec::transpose_mxn<float,8,8>(tmp3, 8, out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                        tmp1.store(out_ptr5 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_153 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_154 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_155 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_156 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_157 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_158 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_159 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_160 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_161 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_162 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_163 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(4320L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)), static_cast<long>(4320L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr4 + static_cast<long>(x1 + (4320L*x2) + (522720L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_164 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    tmp16.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(11L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(11L); x2+=static_cast<long>(1L))
                    {
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(864L); x3+=static_cast<long>(8L))
                        {
                            auto tmp0 = c10::convert<int>((-1L) + x1);
                            auto tmp1 = static_cast<int>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<int>(11);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<int>((-1L) + x2);
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp12;
                            }
                            ;
                            auto tmp13 = decltype(tmp11())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp11(), to_float_mask(tmp10));
                            auto tmp14 = c10::convert<int>(x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp20;
                            }
                            ;
                            auto tmp21 = decltype(tmp19())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp19(), to_float_mask(tmp18));
                            auto tmp22 = at::vec::maximum(tmp21, tmp13);
                            auto tmp23 = c10::convert<int>(1L + x2);
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp29;
                            }
                            ;
                            auto tmp30 = decltype(tmp28())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp28(), to_float_mask(tmp27));
                            auto tmp31 = at::vec::maximum(tmp30, tmp22);
                            auto tmp32 = c10::convert<int>(x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp38;
                            }
                            ;
                            auto tmp39 = decltype(tmp37())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp37(), to_float_mask(tmp36));
                            auto tmp40 = at::vec::maximum(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp43;
                            }
                            ;
                            auto tmp44 = decltype(tmp42())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp42(), to_float_mask(tmp41));
                            auto tmp45 = at::vec::maximum(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp48;
                            }
                            ;
                            auto tmp49 = decltype(tmp47())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp47(), to_float_mask(tmp46));
                            auto tmp50 = at::vec::maximum(tmp49, tmp45);
                            auto tmp51 = c10::convert<int>(1L + x1);
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp57;
                            }
                            ;
                            auto tmp58 = decltype(tmp56())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp56(), to_float_mask(tmp55));
                            auto tmp59 = at::vec::maximum(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp62;
                            }
                            ;
                            auto tmp63 = decltype(tmp61())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp61(), to_float_mask(tmp60));
                            auto tmp64 = at::vec::maximum(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp67;
                            }
                            ;
                            auto tmp68 = decltype(tmp66())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp66(), to_float_mask(tmp65));
                            auto tmp69 = at::vec::maximum(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = masked_load(in_out_ptr0 + static_cast<long>((-10368L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp10));
                                return tmp71;
                            }
                            ;
                            auto tmp72 = decltype(tmp70())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp70(), to_float_mask(tmp10));
                            auto tmp73 = [&]
                            {
                                auto tmp74 = masked_load(in_out_ptr0 + static_cast<long>((-9504L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp18));
                                return tmp74;
                            }
                            ;
                            auto tmp75 = decltype(tmp73())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp73(), to_float_mask(tmp18));
                            auto tmp76 = at::vec::maximum(tmp75, tmp72);
                            auto tmp77 = [&]
                            {
                                auto tmp78 = masked_load(in_out_ptr0 + static_cast<long>((-8640L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp27));
                                return tmp78;
                            }
                            ;
                            auto tmp79 = decltype(tmp77())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp77(), to_float_mask(tmp27));
                            auto tmp80 = at::vec::maximum(tmp79, tmp76);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = masked_load(in_out_ptr0 + static_cast<long>((-864L) + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp36));
                                return tmp82;
                            }
                            ;
                            auto tmp83 = decltype(tmp81())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp81(), to_float_mask(tmp36));
                            auto tmp84 = at::vec::maximum(tmp83, tmp80);
                            auto tmp85 = [&]
                            {
                                auto tmp86 = masked_load(in_out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp41));
                                return tmp86;
                            }
                            ;
                            auto tmp87 = decltype(tmp85())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp85(), to_float_mask(tmp41));
                            auto tmp88 = at::vec::maximum(tmp87, tmp84);
                            auto tmp89 = [&]
                            {
                                auto tmp90 = masked_load(in_out_ptr0 + static_cast<long>(864L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp46));
                                return tmp90;
                            }
                            ;
                            auto tmp91 = decltype(tmp89())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp89(), to_float_mask(tmp46));
                            auto tmp92 = at::vec::maximum(tmp91, tmp88);
                            auto tmp93 = [&]
                            {
                                auto tmp94 = masked_load(in_out_ptr0 + static_cast<long>(8640L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp55));
                                return tmp94;
                            }
                            ;
                            auto tmp95 = decltype(tmp93())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp93(), to_float_mask(tmp55));
                            auto tmp96 = at::vec::maximum(tmp95, tmp92);
                            auto tmp97 = [&]
                            {
                                auto tmp98 = masked_load(in_out_ptr0 + static_cast<long>(9504L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp60));
                                return tmp98;
                            }
                            ;
                            auto tmp99 = decltype(tmp97())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp97(), to_float_mask(tmp60));
                            auto tmp100 = at::vec::maximum(tmp99, tmp96);
                            auto tmp101 = [&]
                            {
                                auto tmp102 = masked_load(in_out_ptr0 + static_cast<long>(10368L + x3 + (864L*x2) + (9504L*x1) + (104544L*x0)), to_float_mask(tmp65));
                                return tmp102;
                            }
                            ;
                            auto tmp103 = decltype(tmp101())::blendv(at::vec::Vectorized<float>(-std::numeric_limits<float>::infinity()), tmp101(), to_float_mask(tmp65));
                            auto tmp104 = at::vec::maximum(tmp103, tmp100);
                            tmp69.store(out_ptr0 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                            tmp104.store(out_ptr1 + static_cast<long>(x3 + (864L*x2) + (9504L*x1) + (104544L*x0)));
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
                tmp1.store(out_ptr3 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_165 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused_relu_166 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(836352L); x0+=static_cast<long>(8L))
            {
                auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0));
                auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                tmp1.store(out_ptr0 + static_cast<long>(x0));
                tmp1.store(out_ptr1 + static_cast<long>(x0));
                tmp1.store(out_ptr2 + static_cast<long>(x0));
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_167 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_168 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_169 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_relu_170 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp31[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp18 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2));
                            auto tmp20 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2));
                            auto tmp26 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2));
                            auto tmp28 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp19 = tmp17 - tmp18;
                            auto tmp21 = tmp20 + tmp5;
                            auto tmp22 = tmp21.sqrt();
                            auto tmp23 = tmp22.reciprocal();
                            auto tmp24 = tmp23 * tmp10;
                            auto tmp25 = tmp19 * tmp24;
                            auto tmp27 = tmp25 * tmp26;
                            auto tmp29 = tmp27 + tmp28;
                            auto tmp30 = tmp16 + tmp29;
                            tmp30.store(tmp31 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp31, 8, out_ptr0 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2)];
                        auto tmp3 = in_ptr2[static_cast<long>(x2)];
                        auto tmp11 = in_ptr3[static_cast<long>(x2)];
                        auto tmp13 = in_ptr4[static_cast<long>(x2)];
                        auto tmp15 = in_ptr5[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp16 = in_ptr6[static_cast<long>(x2)];
                        auto tmp18 = in_ptr7[static_cast<long>(x2)];
                        auto tmp24 = in_ptr8[static_cast<long>(x2)];
                        auto tmp26 = in_ptr9[static_cast<long>(x2)];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp17 = decltype(tmp15)(tmp15 - tmp16);
                        auto tmp19 = decltype(tmp18)(tmp18 + tmp4);
                        auto tmp20 = std::sqrt(tmp19);
                        auto tmp21 = 1 / tmp20;
                        auto tmp22 = decltype(tmp21)(tmp21 * tmp8);
                        auto tmp23 = decltype(tmp17)(tmp17 * tmp22);
                        auto tmp25 = decltype(tmp23)(tmp23 * tmp24);
                        auto tmp27 = decltype(tmp25)(tmp25 + tmp26);
                        auto tmp28 = decltype(tmp14)(tmp14 + tmp27);
                        out_ptr0[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp28;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp2[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                            auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                            tmp1.store(tmp2 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp2, 8, out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp1.store(out_ptr1 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_171 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_relu_172 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(968L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.sqrt();
                    auto tmp8 = tmp7.reciprocal();
                    auto tmp9 = static_cast<float>(1.0);
                    auto tmp10 = at::vec::Vectorized<float>(tmp9);
                    auto tmp11 = tmp8 * tmp10;
                    auto tmp12 = tmp2 * tmp11;
                    auto tmp14 = tmp12 * tmp13;
                    auto tmp16 = tmp14 + tmp15;
                    auto tmp17 = at::vec::clamp_min(tmp16, decltype(tmp16)(0));
                    tmp17.store(in_out_ptr0 + static_cast<long>(x1 + (864L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_no_training_add_mean_relu_173 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    auto out_ptr4 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr1[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr2[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr3[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr4[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr0 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr0[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr7[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr8[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr9[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr10[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr1 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr1[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(864L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp0, 8);
                        float tmp20[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)), static_cast<long>(864L), tmp20, 8);
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = in_ptr13[static_cast<long>(x1 + x1_inner)];
                            auto tmp5 = in_ptr14[static_cast<long>(x1 + x1_inner)];
                            auto tmp14 = in_ptr15[static_cast<long>(x1 + x1_inner)];
                            auto tmp17 = in_ptr16[static_cast<long>(x1 + x1_inner)];
                            auto tmp21 = at::vec::Vectorized<float>::loadu(tmp20 + static_cast<long>(8L*x1_inner));
                            auto tmp3 = at::vec::Vectorized<float>(tmp2);
                            auto tmp4 = tmp1 - tmp3;
                            auto tmp6 = static_cast<float>(0.001);
                            auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                            auto tmp8 = std::sqrt(tmp7);
                            auto tmp9 = 1 / tmp8;
                            auto tmp10 = static_cast<float>(1.0);
                            auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                            auto tmp12 = at::vec::Vectorized<float>(tmp11);
                            auto tmp13 = tmp4 * tmp12;
                            auto tmp15 = at::vec::Vectorized<float>(tmp14);
                            auto tmp16 = tmp13 * tmp15;
                            auto tmp18 = at::vec::Vectorized<float>(tmp17);
                            auto tmp19 = tmp16 + tmp18;
                            auto tmp22 = tmp19 + tmp21;
                            tmp22.store(out_ptr2 + static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0)));
                        }
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(120L); x2<static_cast<long>(121L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x1));
                        auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x1));
                        auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x1 + (864L*x2) + (104544L*x0)));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 + tmp5;
                        auto tmp7 = tmp6.sqrt();
                        auto tmp8 = tmp7.reciprocal();
                        auto tmp9 = static_cast<float>(1.0);
                        auto tmp10 = at::vec::Vectorized<float>(tmp9);
                        auto tmp11 = tmp8 * tmp10;
                        auto tmp12 = tmp2 * tmp11;
                        auto tmp14 = tmp12 * tmp13;
                        auto tmp16 = tmp14 + tmp15;
                        auto tmp18 = tmp16 + tmp17;
                        { __at_align__ float tmpbuf[8*sizeof(float)/sizeof(float)]; tmp18.store(tmpbuf); for (long x1_inner = 0; x1_inner < 8; x1_inner++) out_ptr2[static_cast<long>(x2 + (121L*x1) + (121L*x1_inner) + (522720L*x0))] = tmpbuf[x1_inner]; }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(8L))
                    {
                        float tmp19[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2));
                            auto tmp13 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2));
                            auto tmp15 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2));
                            auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (864L*x1) + (864L*x1_inner) + (104544L*x0)));
                            auto tmp2 = tmp0 - tmp1;
                            auto tmp4 = static_cast<float>(0.001);
                            auto tmp5 = at::vec::Vectorized<float>(tmp4);
                            auto tmp6 = tmp3 + tmp5;
                            auto tmp7 = tmp6.sqrt();
                            auto tmp8 = tmp7.reciprocal();
                            auto tmp9 = static_cast<float>(1.0);
                            auto tmp10 = at::vec::Vectorized<float>(tmp9);
                            auto tmp11 = tmp8 * tmp10;
                            auto tmp12 = tmp2 * tmp11;
                            auto tmp14 = tmp12 * tmp13;
                            auto tmp16 = tmp14 + tmp15;
                            auto tmp18 = tmp16 + tmp17;
                            tmp18.store(tmp19 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp19, 8, out_ptr3 + static_cast<long>(x1 + (121L*x2) + (522720L*x0)), static_cast<long>(121L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(864L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr18[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp1 = in_ptr19[static_cast<long>(x2)];
                        auto tmp3 = in_ptr20[static_cast<long>(x2)];
                        auto tmp11 = in_ptr21[static_cast<long>(x2)];
                        auto tmp13 = in_ptr22[static_cast<long>(x2)];
                        auto tmp15 = in_ptr23[static_cast<long>(x2 + (864L*x1) + (104544L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                        auto tmp4 = static_cast<float>(0.001);
                        auto tmp5 = decltype(tmp3)(tmp3 + tmp4);
                        auto tmp6 = std::sqrt(tmp5);
                        auto tmp7 = 1 / tmp6;
                        auto tmp8 = static_cast<float>(1.0);
                        auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                        auto tmp10 = decltype(tmp2)(tmp2 * tmp9);
                        auto tmp12 = decltype(tmp10)(tmp10 * tmp11);
                        auto tmp14 = decltype(tmp12)(tmp12 + tmp13);
                        auto tmp16 = decltype(tmp14)(tmp14 + tmp15);
                        out_ptr3[static_cast<long>(x1 + (121L*x2) + (522720L*x0))] = tmp16;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(34560L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                    float tmp_acc0 = 0;
                    at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(120L); x1+=static_cast<long>(8L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x1 + (121L*x0)));
                        auto tmp1 = at::vec::clamp_min(tmp0, decltype(tmp0)(0));
                        tmp_acc0_vec = tmp_acc0_vec + tmp1;
                    }
                    #pragma omp simd simdlen(4)  reduction(+:tmp_acc0)
                    for(long x1=static_cast<long>(120L); x1<static_cast<long>(121L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr24[static_cast<long>(x1 + (121L*x0))];
                        auto tmp1 = tmp0 * (tmp0>0);
                        tmp_acc0 = tmp_acc0 + tmp1;
                    }
                    tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
                    out_ptr4[static_cast<long>(x0)] = static_cast<float>(tmp_acc0);
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(34560L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(121.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    tmp3.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1, arg1015_1, arg1016_1, arg1017_1, arg1018_1, arg1019_1, arg1020_1, arg1021_1, arg1022_1, arg1023_1, arg1024_1, arg1025_1, arg1026_1, arg1027_1, arg1028_1, arg1029_1, arg1030_1, arg1031_1, arg1032_1, arg1033_1, arg1034_1, arg1035_1, arg1036_1, arg1037_1, arg1038_1, arg1039_1, arg1040_1, arg1041_1, arg1042_1, arg1043_1, arg1044_1, arg1045_1, arg1046_1, arg1047_1, arg1048_1, arg1049_1, arg1050_1, arg1051_1, arg1052_1, arg1053_1, arg1054_1, arg1055_1, arg1056_1, arg1057_1, arg1058_1, arg1059_1, arg1060_1, arg1061_1, arg1062_1, arg1063_1, arg1064_1, arg1065_1, arg1066_1, arg1067_1, arg1068_1, arg1069_1, arg1070_1, arg1071_1, arg1072_1, arg1073_1, arg1074_1, arg1075_1, arg1076_1, arg1077_1, arg1078_1, arg1079_1, arg1080_1, arg1081_1, arg1082_1, arg1083_1, arg1084_1, arg1085_1, arg1086_1, arg1087_1, arg1088_1, arg1089_1, arg1090_1, arg1091_1, arg1092_1, arg1093_1, arg1094_1, arg1095_1, arg1096_1, arg1097_1, arg1098_1, arg1099_1, arg1100_1, arg1101_1, arg1102_1, arg1103_1, arg1104_1, arg1105_1, arg1106_1, arg1107_1, arg1108_1, arg1109_1, arg1110_1, arg1111_1, arg1112_1, arg1113_1, arg1114_1, arg1115_1, arg1116_1, arg1117_1, arg1118_1, arg1119_1, arg1120_1, arg1121_1, arg1122_1, arg1123_1, arg1124_1, arg1125_1, arg1126_1, arg1127_1, arg1128_1, arg1129_1, arg1130_1, arg1131_1, arg1132_1, arg1133_1, arg1134_1, arg1135_1, arg1136_1, arg1137_1, arg1138_1, arg1139_1, arg1140_1, arg1141_1, arg1142_1, arg1143_1, arg1144_1, arg1145_1, arg1146_1, arg1147_1, arg1148_1, arg1149_1, arg1150_1, arg1151_1, arg1152_1, arg1153_1, arg1154_1, arg1155_1, arg1156_1, arg1157_1, arg1158_1, arg1159_1, arg1160_1, arg1161_1, arg1162_1, arg1163_1, arg1164_1, arg1165_1, arg1166_1, arg1167_1, arg1168_1, arg1169_1, arg1170_1, arg1171_1, arg1172_1, arg1173_1, arg1174_1, arg1175_1, arg1176_1, arg1177_1, arg1178_1, arg1179_1, arg1180_1, arg1181_1, arg1182_1, arg1183_1, arg1184_1, arg1185_1, arg1186_1, arg1187_1, arg1188_1, arg1189_1, arg1190_1, arg1191_1, arg1192_1, arg1193_1, arg1194_1, arg1195_1, arg1196_1, arg1197_1, arg1198_1, arg1199_1, arg1200_1, arg1201_1, arg1202_1, arg1203_1, arg1204_1, arg1205_1, arg1206_1, arg1207_1, arg1208_1, arg1209_1, arg1210_1, arg1211_1, arg1212_1, arg1213_1, arg1214_1, arg1215_1, arg1216_1, arg1217_1, arg1218_1, arg1219_1, arg1220_1, arg1221_1, arg1222_1, arg1223_1, arg1224_1, arg1225_1, arg1226_1, arg1227_1, arg1228_1, arg1229_1, arg1230_1, arg1231_1, arg1232_1, arg1233_1, arg1234_1, arg1235_1, arg1236_1, arg1237_1, arg1238_1, arg1239_1, arg1240_1, arg1241_1, arg1242_1, arg1243_1, arg1244_1, arg1245_1, arg1246_1, arg1247_1, arg1248_1, arg1249_1, arg1250_1, arg1251_1, arg1252_1, arg1253_1, arg1254_1, arg1255_1, arg1256_1, arg1257_1, arg1258_1, arg1259_1, arg1260_1, arg1261_1, arg1262_1, arg1263_1, arg1264_1, arg1265_1, arg1266_1, arg1267_1, arg1268_1, arg1269_1, arg1270_1, arg1271_1, arg1272_1, arg1273_1, arg1274_1, arg1275_1, arg1276_1, arg1277_1, arg1278_1, arg1279_1, arg1280_1, arg1281_1, arg1282_1, arg1283_1, arg1284_1, arg1285_1, arg1286_1, arg1287_1, arg1288_1, arg1289_1, arg1290_1, arg1291_1, arg1292_1, arg1293_1, arg1294_1, arg1295_1, arg1296_1, arg1297_1, arg1298_1, arg1299_1, arg1300_1, arg1301_1, arg1302_1, arg1303_1, arg1304_1, arg1305_1, arg1306_1, arg1307_1, arg1308_1, arg1309_1, arg1310_1, arg1311_1, arg1312_1, arg1313_1, arg1314_1, arg1315_1, arg1316_1, arg1317_1, arg1318_1, arg1319_1, arg1320_1, arg1321_1, arg1322_1, arg1323_1, arg1324_1, arg1325_1, arg1326_1, arg1327_1, arg1328_1, arg1329_1, arg1330_1, arg1331_1, arg1332_1, arg1333_1, arg1334_1, arg1335_1, arg1336_1, arg1337_1, arg1338_1, arg1339_1, arg1340_1, arg1341_1, arg1342_1, arg1343_1, arg1344_1, arg1345_1, arg1346_1, arg1347_1, arg1348_1, arg1349_1, arg1350_1, arg1351_1, arg1352_1, arg1353_1, arg1354_1, arg1355_1, arg1356_1, arg1357_1, arg1358_1, arg1359_1, arg1360_1, arg1361_1, arg1362_1, arg1363_1, arg1364_1, arg1365_1, arg1366_1, arg1367_1, arg1368_1, arg1369_1, arg1370_1, arg1371_1, arg1372_1, arg1373_1, arg1374_1, arg1375_1, arg1376_1, arg1377_1, arg1378_1, arg1379_1 = args
    args.clear()
    assert_size_stride(arg0_1, (96, ), (1, ))
    assert_size_stride(arg1_1, (96, ), (1, ))
    assert_size_stride(arg2_1, (96, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg3_1, (54, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg4_1, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg5_1, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg6_1, (96, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg7_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg8_1, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg9_1, (108, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg10_1, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg11_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg12_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg13_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg14_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg15_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg16_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg17_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg18_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg19_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg20_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg21_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg22_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg23_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg24_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg25_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg26_1, (96, 3, 3, 3), (27, 9, 3, 1))
    assert_size_stride(arg27_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg28_1, (54, ), (1, ))
    assert_size_stride(arg29_1, (54, ), (1, ))
    assert_size_stride(arg30_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg31_1, (54, ), (1, ))
    assert_size_stride(arg32_1, (54, ), (1, ))
    assert_size_stride(arg33_1, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg34_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg35_1, (54, ), (1, ))
    assert_size_stride(arg36_1, (54, ), (1, ))
    assert_size_stride(arg37_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg38_1, (54, ), (1, ))
    assert_size_stride(arg39_1, (54, ), (1, ))
    assert_size_stride(arg40_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg41_1, (54, ), (1, ))
    assert_size_stride(arg42_1, (54, ), (1, ))
    assert_size_stride(arg43_1, (54, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg44_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg45_1, (54, ), (1, ))
    assert_size_stride(arg46_1, (54, ), (1, ))
    assert_size_stride(arg47_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg48_1, (54, ), (1, ))
    assert_size_stride(arg49_1, (54, ), (1, ))
    assert_size_stride(arg50_1, (54, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg51_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg52_1, (54, ), (1, ))
    assert_size_stride(arg53_1, (54, ), (1, ))
    assert_size_stride(arg54_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg55_1, (54, ), (1, ))
    assert_size_stride(arg56_1, (54, ), (1, ))
    assert_size_stride(arg57_1, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg58_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg59_1, (54, ), (1, ))
    assert_size_stride(arg60_1, (54, ), (1, ))
    assert_size_stride(arg61_1, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg62_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg63_1, (54, ), (1, ))
    assert_size_stride(arg64_1, (54, ), (1, ))
    assert_size_stride(arg65_1, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg66_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg67_1, (54, ), (1, ))
    assert_size_stride(arg68_1, (54, ), (1, ))
    assert_size_stride(arg69_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg70_1, (54, ), (1, ))
    assert_size_stride(arg71_1, (54, ), (1, ))
    assert_size_stride(arg72_1, (54, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg73_1, (54, 54, 1, 1), (54, 1, 1, 1))
    assert_size_stride(arg74_1, (54, ), (1, ))
    assert_size_stride(arg75_1, (54, ), (1, ))
    assert_size_stride(arg76_1, (54, ), (1, ))
    assert_size_stride(arg77_1, (54, ), (1, ))
    assert_size_stride(arg78_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg79_1, (54, 96, 1, 1), (96, 1, 1, 1))
    assert_size_stride(arg80_1, (108, ), (1, ))
    assert_size_stride(arg81_1, (108, ), (1, ))
    assert_size_stride(arg82_1, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(arg83_1, (108, ), (1, ))
    assert_size_stride(arg84_1, (108, ), (1, ))
    assert_size_stride(arg85_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg86_1, (108, ), (1, ))
    assert_size_stride(arg87_1, (108, ), (1, ))
    assert_size_stride(arg88_1, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg89_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg90_1, (108, ), (1, ))
    assert_size_stride(arg91_1, (108, ), (1, ))
    assert_size_stride(arg92_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg93_1, (108, ), (1, ))
    assert_size_stride(arg94_1, (108, ), (1, ))
    assert_size_stride(arg95_1, (108, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg96_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg97_1, (108, ), (1, ))
    assert_size_stride(arg98_1, (108, ), (1, ))
    assert_size_stride(arg99_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg100_1, (108, ), (1, ))
    assert_size_stride(arg101_1, (108, ), (1, ))
    assert_size_stride(arg102_1, (108, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg103_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg104_1, (108, ), (1, ))
    assert_size_stride(arg105_1, (108, ), (1, ))
    assert_size_stride(arg106_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg107_1, (108, ), (1, ))
    assert_size_stride(arg108_1, (108, ), (1, ))
    assert_size_stride(arg109_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg110_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg111_1, (108, ), (1, ))
    assert_size_stride(arg112_1, (108, ), (1, ))
    assert_size_stride(arg113_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg114_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg115_1, (108, ), (1, ))
    assert_size_stride(arg116_1, (108, ), (1, ))
    assert_size_stride(arg117_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg118_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg119_1, (108, ), (1, ))
    assert_size_stride(arg120_1, (108, ), (1, ))
    assert_size_stride(arg121_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg122_1, (108, ), (1, ))
    assert_size_stride(arg123_1, (108, ), (1, ))
    assert_size_stride(arg124_1, (108, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg125_1, (108, 108, 1, 1), (108, 1, 1, 1))
    assert_size_stride(arg126_1, (108, ), (1, ))
    assert_size_stride(arg127_1, (108, ), (1, ))
    assert_size_stride(arg128_1, (108, ), (1, ))
    assert_size_stride(arg129_1, (108, ), (1, ))
    assert_size_stride(arg130_1, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(arg131_1, (108, 270, 1, 1), (270, 1, 1, 1))
    assert_size_stride(arg132_1, (216, ), (1, ))
    assert_size_stride(arg133_1, (216, ), (1, ))
    assert_size_stride(arg134_1, (216, 540, 1, 1), (540, 1, 1, 1))
    assert_size_stride(arg135_1, (216, ), (1, ))
    assert_size_stride(arg136_1, (216, ), (1, ))
    assert_size_stride(arg137_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg138_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg139_1, (216, ), (1, ))
    assert_size_stride(arg140_1, (216, ), (1, ))
    assert_size_stride(arg141_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg142_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg143_1, (216, ), (1, ))
    assert_size_stride(arg144_1, (216, ), (1, ))
    assert_size_stride(arg145_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg146_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg147_1, (216, ), (1, ))
    assert_size_stride(arg148_1, (216, ), (1, ))
    assert_size_stride(arg149_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg150_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg151_1, (216, ), (1, ))
    assert_size_stride(arg152_1, (216, ), (1, ))
    assert_size_stride(arg153_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg154_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg155_1, (216, ), (1, ))
    assert_size_stride(arg156_1, (216, ), (1, ))
    assert_size_stride(arg157_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg158_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg159_1, (216, ), (1, ))
    assert_size_stride(arg160_1, (216, ), (1, ))
    assert_size_stride(arg161_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg162_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg163_1, (216, ), (1, ))
    assert_size_stride(arg164_1, (216, ), (1, ))
    assert_size_stride(arg165_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg166_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg167_1, (216, ), (1, ))
    assert_size_stride(arg168_1, (216, ), (1, ))
    assert_size_stride(arg169_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg170_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg171_1, (216, ), (1, ))
    assert_size_stride(arg172_1, (216, ), (1, ))
    assert_size_stride(arg173_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg174_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg175_1, (216, ), (1, ))
    assert_size_stride(arg176_1, (216, ), (1, ))
    assert_size_stride(arg177_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg178_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg179_1, (216, ), (1, ))
    assert_size_stride(arg180_1, (216, ), (1, ))
    assert_size_stride(arg181_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg182_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg183_1, (216, ), (1, ))
    assert_size_stride(arg184_1, (216, ), (1, ))
    assert_size_stride(arg185_1, (216, 540, 1, 1), (540, 1, 1, 1))
    assert_size_stride(arg186_1, (216, ), (1, ))
    assert_size_stride(arg187_1, (216, ), (1, ))
    assert_size_stride(arg188_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg189_1, (216, ), (1, ))
    assert_size_stride(arg190_1, (216, ), (1, ))
    assert_size_stride(arg191_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg192_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg193_1, (216, ), (1, ))
    assert_size_stride(arg194_1, (216, ), (1, ))
    assert_size_stride(arg195_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg196_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg197_1, (216, ), (1, ))
    assert_size_stride(arg198_1, (216, ), (1, ))
    assert_size_stride(arg199_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg200_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg201_1, (216, ), (1, ))
    assert_size_stride(arg202_1, (216, ), (1, ))
    assert_size_stride(arg203_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg204_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg205_1, (216, ), (1, ))
    assert_size_stride(arg206_1, (216, ), (1, ))
    assert_size_stride(arg207_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg208_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg209_1, (216, ), (1, ))
    assert_size_stride(arg210_1, (216, ), (1, ))
    assert_size_stride(arg211_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg212_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg213_1, (216, ), (1, ))
    assert_size_stride(arg214_1, (216, ), (1, ))
    assert_size_stride(arg215_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg216_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg217_1, (216, ), (1, ))
    assert_size_stride(arg218_1, (216, ), (1, ))
    assert_size_stride(arg219_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg220_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg221_1, (216, ), (1, ))
    assert_size_stride(arg222_1, (216, ), (1, ))
    assert_size_stride(arg223_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg224_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg225_1, (216, ), (1, ))
    assert_size_stride(arg226_1, (216, ), (1, ))
    assert_size_stride(arg227_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg228_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg229_1, (216, ), (1, ))
    assert_size_stride(arg230_1, (216, ), (1, ))
    assert_size_stride(arg231_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg232_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg233_1, (216, ), (1, ))
    assert_size_stride(arg234_1, (216, ), (1, ))
    assert_size_stride(arg235_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg236_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg237_1, (216, ), (1, ))
    assert_size_stride(arg238_1, (216, ), (1, ))
    assert_size_stride(arg239_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg240_1, (216, ), (1, ))
    assert_size_stride(arg241_1, (216, ), (1, ))
    assert_size_stride(arg242_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg243_1, (216, ), (1, ))
    assert_size_stride(arg244_1, (216, ), (1, ))
    assert_size_stride(arg245_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg246_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg247_1, (216, ), (1, ))
    assert_size_stride(arg248_1, (216, ), (1, ))
    assert_size_stride(arg249_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg250_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg251_1, (216, ), (1, ))
    assert_size_stride(arg252_1, (216, ), (1, ))
    assert_size_stride(arg253_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg254_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg255_1, (216, ), (1, ))
    assert_size_stride(arg256_1, (216, ), (1, ))
    assert_size_stride(arg257_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg258_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg259_1, (216, ), (1, ))
    assert_size_stride(arg260_1, (216, ), (1, ))
    assert_size_stride(arg261_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg262_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg263_1, (216, ), (1, ))
    assert_size_stride(arg264_1, (216, ), (1, ))
    assert_size_stride(arg265_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg266_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg267_1, (216, ), (1, ))
    assert_size_stride(arg268_1, (216, ), (1, ))
    assert_size_stride(arg269_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg270_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg271_1, (216, ), (1, ))
    assert_size_stride(arg272_1, (216, ), (1, ))
    assert_size_stride(arg273_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg274_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg275_1, (216, ), (1, ))
    assert_size_stride(arg276_1, (216, ), (1, ))
    assert_size_stride(arg277_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg278_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg279_1, (216, ), (1, ))
    assert_size_stride(arg280_1, (216, ), (1, ))
    assert_size_stride(arg281_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg282_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg283_1, (216, ), (1, ))
    assert_size_stride(arg284_1, (216, ), (1, ))
    assert_size_stride(arg285_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg286_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg287_1, (216, ), (1, ))
    assert_size_stride(arg288_1, (216, ), (1, ))
    assert_size_stride(arg289_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg290_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg291_1, (216, ), (1, ))
    assert_size_stride(arg292_1, (216, ), (1, ))
    assert_size_stride(arg293_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg294_1, (216, ), (1, ))
    assert_size_stride(arg295_1, (216, ), (1, ))
    assert_size_stride(arg296_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg297_1, (216, ), (1, ))
    assert_size_stride(arg298_1, (216, ), (1, ))
    assert_size_stride(arg299_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg300_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg301_1, (216, ), (1, ))
    assert_size_stride(arg302_1, (216, ), (1, ))
    assert_size_stride(arg303_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg304_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg305_1, (216, ), (1, ))
    assert_size_stride(arg306_1, (216, ), (1, ))
    assert_size_stride(arg307_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg308_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg309_1, (216, ), (1, ))
    assert_size_stride(arg310_1, (216, ), (1, ))
    assert_size_stride(arg311_1, (216, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg312_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg313_1, (216, ), (1, ))
    assert_size_stride(arg314_1, (216, ), (1, ))
    assert_size_stride(arg315_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg316_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg317_1, (216, ), (1, ))
    assert_size_stride(arg318_1, (216, ), (1, ))
    assert_size_stride(arg319_1, (216, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg320_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg321_1, (216, ), (1, ))
    assert_size_stride(arg322_1, (216, ), (1, ))
    assert_size_stride(arg323_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg324_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg325_1, (216, ), (1, ))
    assert_size_stride(arg326_1, (216, ), (1, ))
    assert_size_stride(arg327_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg328_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg329_1, (216, ), (1, ))
    assert_size_stride(arg330_1, (216, ), (1, ))
    assert_size_stride(arg331_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg332_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg333_1, (216, ), (1, ))
    assert_size_stride(arg334_1, (216, ), (1, ))
    assert_size_stride(arg335_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg336_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg337_1, (216, ), (1, ))
    assert_size_stride(arg338_1, (216, ), (1, ))
    assert_size_stride(arg339_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg340_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg341_1, (216, ), (1, ))
    assert_size_stride(arg342_1, (216, ), (1, ))
    assert_size_stride(arg343_1, (216, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg344_1, (216, 216, 1, 1), (216, 1, 1, 1))
    assert_size_stride(arg345_1, (216, ), (1, ))
    assert_size_stride(arg346_1, (216, ), (1, ))
    assert_size_stride(arg347_1, (432, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg348_1, (432, ), (1, ))
    assert_size_stride(arg349_1, (432, ), (1, ))
    assert_size_stride(arg350_1, (432, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg351_1, (432, ), (1, ))
    assert_size_stride(arg352_1, (432, ), (1, ))
    assert_size_stride(arg353_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg354_1, (432, ), (1, ))
    assert_size_stride(arg355_1, (432, ), (1, ))
    assert_size_stride(arg356_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg357_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg358_1, (432, ), (1, ))
    assert_size_stride(arg359_1, (432, ), (1, ))
    assert_size_stride(arg360_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg361_1, (432, ), (1, ))
    assert_size_stride(arg362_1, (432, ), (1, ))
    assert_size_stride(arg363_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg364_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg365_1, (432, ), (1, ))
    assert_size_stride(arg366_1, (432, ), (1, ))
    assert_size_stride(arg367_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg368_1, (432, ), (1, ))
    assert_size_stride(arg369_1, (432, ), (1, ))
    assert_size_stride(arg370_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg371_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg372_1, (432, ), (1, ))
    assert_size_stride(arg373_1, (432, ), (1, ))
    assert_size_stride(arg374_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg375_1, (432, ), (1, ))
    assert_size_stride(arg376_1, (432, ), (1, ))
    assert_size_stride(arg377_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg378_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg379_1, (432, ), (1, ))
    assert_size_stride(arg380_1, (432, ), (1, ))
    assert_size_stride(arg381_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg382_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg383_1, (432, ), (1, ))
    assert_size_stride(arg384_1, (432, ), (1, ))
    assert_size_stride(arg385_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg386_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg387_1, (432, ), (1, ))
    assert_size_stride(arg388_1, (432, ), (1, ))
    assert_size_stride(arg389_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg390_1, (432, ), (1, ))
    assert_size_stride(arg391_1, (432, ), (1, ))
    assert_size_stride(arg392_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg393_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg394_1, (432, ), (1, ))
    assert_size_stride(arg395_1, (432, ), (1, ))
    assert_size_stride(arg396_1, (432, ), (1, ))
    assert_size_stride(arg397_1, (432, ), (1, ))
    assert_size_stride(arg398_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg399_1, (216, 1080, 1, 1), (1080, 1, 1, 1))
    assert_size_stride(arg400_1, (432, ), (1, ))
    assert_size_stride(arg401_1, (432, ), (1, ))
    assert_size_stride(arg402_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg403_1, (432, ), (1, ))
    assert_size_stride(arg404_1, (432, ), (1, ))
    assert_size_stride(arg405_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg406_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg407_1, (432, ), (1, ))
    assert_size_stride(arg408_1, (432, ), (1, ))
    assert_size_stride(arg409_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg410_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg411_1, (432, ), (1, ))
    assert_size_stride(arg412_1, (432, ), (1, ))
    assert_size_stride(arg413_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg414_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg415_1, (432, ), (1, ))
    assert_size_stride(arg416_1, (432, ), (1, ))
    assert_size_stride(arg417_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg418_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg419_1, (432, ), (1, ))
    assert_size_stride(arg420_1, (432, ), (1, ))
    assert_size_stride(arg421_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg422_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg423_1, (432, ), (1, ))
    assert_size_stride(arg424_1, (432, ), (1, ))
    assert_size_stride(arg425_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg426_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg427_1, (432, ), (1, ))
    assert_size_stride(arg428_1, (432, ), (1, ))
    assert_size_stride(arg429_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg430_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg431_1, (432, ), (1, ))
    assert_size_stride(arg432_1, (432, ), (1, ))
    assert_size_stride(arg433_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg434_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg435_1, (432, ), (1, ))
    assert_size_stride(arg436_1, (432, ), (1, ))
    assert_size_stride(arg437_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg438_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg439_1, (432, ), (1, ))
    assert_size_stride(arg440_1, (432, ), (1, ))
    assert_size_stride(arg441_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg442_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg443_1, (432, ), (1, ))
    assert_size_stride(arg444_1, (432, ), (1, ))
    assert_size_stride(arg445_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg446_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg447_1, (432, ), (1, ))
    assert_size_stride(arg448_1, (432, ), (1, ))
    assert_size_stride(arg449_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg450_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg451_1, (432, ), (1, ))
    assert_size_stride(arg452_1, (432, ), (1, ))
    assert_size_stride(arg453_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg454_1, (432, ), (1, ))
    assert_size_stride(arg455_1, (432, ), (1, ))
    assert_size_stride(arg456_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg457_1, (432, ), (1, ))
    assert_size_stride(arg458_1, (432, ), (1, ))
    assert_size_stride(arg459_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg460_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg461_1, (432, ), (1, ))
    assert_size_stride(arg462_1, (432, ), (1, ))
    assert_size_stride(arg463_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg464_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg465_1, (432, ), (1, ))
    assert_size_stride(arg466_1, (432, ), (1, ))
    assert_size_stride(arg467_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg468_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg469_1, (432, ), (1, ))
    assert_size_stride(arg470_1, (432, ), (1, ))
    assert_size_stride(arg471_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg472_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg473_1, (432, ), (1, ))
    assert_size_stride(arg474_1, (432, ), (1, ))
    assert_size_stride(arg475_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg476_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg477_1, (432, ), (1, ))
    assert_size_stride(arg478_1, (432, ), (1, ))
    assert_size_stride(arg479_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg480_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg481_1, (432, ), (1, ))
    assert_size_stride(arg482_1, (432, ), (1, ))
    assert_size_stride(arg483_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg484_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg485_1, (432, ), (1, ))
    assert_size_stride(arg486_1, (432, ), (1, ))
    assert_size_stride(arg487_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg488_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg489_1, (432, ), (1, ))
    assert_size_stride(arg490_1, (432, ), (1, ))
    assert_size_stride(arg491_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg492_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg493_1, (432, ), (1, ))
    assert_size_stride(arg494_1, (432, ), (1, ))
    assert_size_stride(arg495_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg496_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg497_1, (432, ), (1, ))
    assert_size_stride(arg498_1, (432, ), (1, ))
    assert_size_stride(arg499_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg500_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg501_1, (432, ), (1, ))
    assert_size_stride(arg502_1, (432, ), (1, ))
    assert_size_stride(arg503_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg504_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg505_1, (432, ), (1, ))
    assert_size_stride(arg506_1, (432, ), (1, ))
    assert_size_stride(arg507_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg508_1, (432, ), (1, ))
    assert_size_stride(arg509_1, (432, ), (1, ))
    assert_size_stride(arg510_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg511_1, (432, ), (1, ))
    assert_size_stride(arg512_1, (432, ), (1, ))
    assert_size_stride(arg513_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg514_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg515_1, (432, ), (1, ))
    assert_size_stride(arg516_1, (432, ), (1, ))
    assert_size_stride(arg517_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg518_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg519_1, (432, ), (1, ))
    assert_size_stride(arg520_1, (432, ), (1, ))
    assert_size_stride(arg521_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg522_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg523_1, (432, ), (1, ))
    assert_size_stride(arg524_1, (432, ), (1, ))
    assert_size_stride(arg525_1, (432, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg526_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg527_1, (432, ), (1, ))
    assert_size_stride(arg528_1, (432, ), (1, ))
    assert_size_stride(arg529_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg530_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg531_1, (432, ), (1, ))
    assert_size_stride(arg532_1, (432, ), (1, ))
    assert_size_stride(arg533_1, (432, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg534_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg535_1, (432, ), (1, ))
    assert_size_stride(arg536_1, (432, ), (1, ))
    assert_size_stride(arg537_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg538_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg539_1, (432, ), (1, ))
    assert_size_stride(arg540_1, (432, ), (1, ))
    assert_size_stride(arg541_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg542_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg543_1, (432, ), (1, ))
    assert_size_stride(arg544_1, (432, ), (1, ))
    assert_size_stride(arg545_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg546_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg547_1, (432, ), (1, ))
    assert_size_stride(arg548_1, (432, ), (1, ))
    assert_size_stride(arg549_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg550_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg551_1, (432, ), (1, ))
    assert_size_stride(arg552_1, (432, ), (1, ))
    assert_size_stride(arg553_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg554_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg555_1, (432, ), (1, ))
    assert_size_stride(arg556_1, (432, ), (1, ))
    assert_size_stride(arg557_1, (432, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg558_1, (432, 432, 1, 1), (432, 1, 1, 1))
    assert_size_stride(arg559_1, (432, ), (1, ))
    assert_size_stride(arg560_1, (432, ), (1, ))
    assert_size_stride(arg561_1, (864, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg562_1, (864, ), (1, ))
    assert_size_stride(arg563_1, (864, ), (1, ))
    assert_size_stride(arg564_1, (864, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg565_1, (864, ), (1, ))
    assert_size_stride(arg566_1, (864, ), (1, ))
    assert_size_stride(arg567_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg568_1, (864, ), (1, ))
    assert_size_stride(arg569_1, (864, ), (1, ))
    assert_size_stride(arg570_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg571_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg572_1, (864, ), (1, ))
    assert_size_stride(arg573_1, (864, ), (1, ))
    assert_size_stride(arg574_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg575_1, (864, ), (1, ))
    assert_size_stride(arg576_1, (864, ), (1, ))
    assert_size_stride(arg577_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg578_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg579_1, (864, ), (1, ))
    assert_size_stride(arg580_1, (864, ), (1, ))
    assert_size_stride(arg581_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg582_1, (864, ), (1, ))
    assert_size_stride(arg583_1, (864, ), (1, ))
    assert_size_stride(arg584_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg585_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg586_1, (864, ), (1, ))
    assert_size_stride(arg587_1, (864, ), (1, ))
    assert_size_stride(arg588_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg589_1, (864, ), (1, ))
    assert_size_stride(arg590_1, (864, ), (1, ))
    assert_size_stride(arg591_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg592_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg593_1, (864, ), (1, ))
    assert_size_stride(arg594_1, (864, ), (1, ))
    assert_size_stride(arg595_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg596_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg597_1, (864, ), (1, ))
    assert_size_stride(arg598_1, (864, ), (1, ))
    assert_size_stride(arg599_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg600_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg601_1, (864, ), (1, ))
    assert_size_stride(arg602_1, (864, ), (1, ))
    assert_size_stride(arg603_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg604_1, (864, ), (1, ))
    assert_size_stride(arg605_1, (864, ), (1, ))
    assert_size_stride(arg606_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg607_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg608_1, (864, ), (1, ))
    assert_size_stride(arg609_1, (864, ), (1, ))
    assert_size_stride(arg610_1, (864, ), (1, ))
    assert_size_stride(arg611_1, (864, ), (1, ))
    assert_size_stride(arg612_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg613_1, (432, 2160, 1, 1), (2160, 1, 1, 1))
    assert_size_stride(arg614_1, (864, ), (1, ))
    assert_size_stride(arg615_1, (864, ), (1, ))
    assert_size_stride(arg616_1, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(arg617_1, (864, ), (1, ))
    assert_size_stride(arg618_1, (864, ), (1, ))
    assert_size_stride(arg619_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg620_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg621_1, (864, ), (1, ))
    assert_size_stride(arg622_1, (864, ), (1, ))
    assert_size_stride(arg623_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg624_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg625_1, (864, ), (1, ))
    assert_size_stride(arg626_1, (864, ), (1, ))
    assert_size_stride(arg627_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg628_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg629_1, (864, ), (1, ))
    assert_size_stride(arg630_1, (864, ), (1, ))
    assert_size_stride(arg631_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg632_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg633_1, (864, ), (1, ))
    assert_size_stride(arg634_1, (864, ), (1, ))
    assert_size_stride(arg635_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg636_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg637_1, (864, ), (1, ))
    assert_size_stride(arg638_1, (864, ), (1, ))
    assert_size_stride(arg639_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg640_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg641_1, (864, ), (1, ))
    assert_size_stride(arg642_1, (864, ), (1, ))
    assert_size_stride(arg643_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg644_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg645_1, (864, ), (1, ))
    assert_size_stride(arg646_1, (864, ), (1, ))
    assert_size_stride(arg647_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg648_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg649_1, (864, ), (1, ))
    assert_size_stride(arg650_1, (864, ), (1, ))
    assert_size_stride(arg651_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg652_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg653_1, (864, ), (1, ))
    assert_size_stride(arg654_1, (864, ), (1, ))
    assert_size_stride(arg655_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg656_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg657_1, (864, ), (1, ))
    assert_size_stride(arg658_1, (864, ), (1, ))
    assert_size_stride(arg659_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg660_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg661_1, (864, ), (1, ))
    assert_size_stride(arg662_1, (864, ), (1, ))
    assert_size_stride(arg663_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg664_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg665_1, (864, ), (1, ))
    assert_size_stride(arg666_1, (864, ), (1, ))
    assert_size_stride(arg667_1, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(arg668_1, (864, ), (1, ))
    assert_size_stride(arg669_1, (864, ), (1, ))
    assert_size_stride(arg670_1, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(arg671_1, (864, ), (1, ))
    assert_size_stride(arg672_1, (864, ), (1, ))
    assert_size_stride(arg673_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg674_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg675_1, (864, ), (1, ))
    assert_size_stride(arg676_1, (864, ), (1, ))
    assert_size_stride(arg677_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg678_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg679_1, (864, ), (1, ))
    assert_size_stride(arg680_1, (864, ), (1, ))
    assert_size_stride(arg681_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg682_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg683_1, (864, ), (1, ))
    assert_size_stride(arg684_1, (864, ), (1, ))
    assert_size_stride(arg685_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg686_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg687_1, (864, ), (1, ))
    assert_size_stride(arg688_1, (864, ), (1, ))
    assert_size_stride(arg689_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg690_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg691_1, (864, ), (1, ))
    assert_size_stride(arg692_1, (864, ), (1, ))
    assert_size_stride(arg693_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg694_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg695_1, (864, ), (1, ))
    assert_size_stride(arg696_1, (864, ), (1, ))
    assert_size_stride(arg697_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg698_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg699_1, (864, ), (1, ))
    assert_size_stride(arg700_1, (864, ), (1, ))
    assert_size_stride(arg701_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg702_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg703_1, (864, ), (1, ))
    assert_size_stride(arg704_1, (864, ), (1, ))
    assert_size_stride(arg705_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg706_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg707_1, (864, ), (1, ))
    assert_size_stride(arg708_1, (864, ), (1, ))
    assert_size_stride(arg709_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg710_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg711_1, (864, ), (1, ))
    assert_size_stride(arg712_1, (864, ), (1, ))
    assert_size_stride(arg713_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg714_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg715_1, (864, ), (1, ))
    assert_size_stride(arg716_1, (864, ), (1, ))
    assert_size_stride(arg717_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg718_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg719_1, (864, ), (1, ))
    assert_size_stride(arg720_1, (864, ), (1, ))
    assert_size_stride(arg721_1, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(arg722_1, (864, ), (1, ))
    assert_size_stride(arg723_1, (864, ), (1, ))
    assert_size_stride(arg724_1, (864, 4320, 1, 1), (4320, 1, 1, 1))
    assert_size_stride(arg725_1, (864, ), (1, ))
    assert_size_stride(arg726_1, (864, ), (1, ))
    assert_size_stride(arg727_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg728_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg729_1, (864, ), (1, ))
    assert_size_stride(arg730_1, (864, ), (1, ))
    assert_size_stride(arg731_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg732_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg733_1, (864, ), (1, ))
    assert_size_stride(arg734_1, (864, ), (1, ))
    assert_size_stride(arg735_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg736_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg737_1, (864, ), (1, ))
    assert_size_stride(arg738_1, (864, ), (1, ))
    assert_size_stride(arg739_1, (864, 1, 7, 7), (49, 49, 7, 1))
    assert_size_stride(arg740_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg741_1, (864, ), (1, ))
    assert_size_stride(arg742_1, (864, ), (1, ))
    assert_size_stride(arg743_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg744_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg745_1, (864, ), (1, ))
    assert_size_stride(arg746_1, (864, ), (1, ))
    assert_size_stride(arg747_1, (864, 1, 5, 5), (25, 25, 5, 1))
    assert_size_stride(arg748_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg749_1, (864, ), (1, ))
    assert_size_stride(arg750_1, (864, ), (1, ))
    assert_size_stride(arg751_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg752_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg753_1, (864, ), (1, ))
    assert_size_stride(arg754_1, (864, ), (1, ))
    assert_size_stride(arg755_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg756_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg757_1, (864, ), (1, ))
    assert_size_stride(arg758_1, (864, ), (1, ))
    assert_size_stride(arg759_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg760_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg761_1, (864, ), (1, ))
    assert_size_stride(arg762_1, (864, ), (1, ))
    assert_size_stride(arg763_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg764_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg765_1, (864, ), (1, ))
    assert_size_stride(arg766_1, (864, ), (1, ))
    assert_size_stride(arg767_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg768_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg769_1, (864, ), (1, ))
    assert_size_stride(arg770_1, (864, ), (1, ))
    assert_size_stride(arg771_1, (864, 1, 3, 3), (9, 9, 3, 1))
    assert_size_stride(arg772_1, (864, 864, 1, 1), (864, 1, 1, 1))
    assert_size_stride(arg773_1, (864, ), (1, ))
    assert_size_stride(arg774_1, (864, ), (1, ))
    assert_size_stride(arg775_1, (1000, 4320), (4320, 1))
    assert_size_stride(arg776_1, (1000, ), (1, ))
    assert_size_stride(arg777_1, (96, ), (1, ))
    assert_size_stride(arg778_1, (96, ), (1, ))
    assert_size_stride(arg779_1, (54, ), (1, ))
    assert_size_stride(arg780_1, (54, ), (1, ))
    assert_size_stride(arg781_1, (), ())
    assert_size_stride(arg782_1, (54, ), (1, ))
    assert_size_stride(arg783_1, (54, ), (1, ))
    assert_size_stride(arg784_1, (), ())
    assert_size_stride(arg785_1, (54, ), (1, ))
    assert_size_stride(arg786_1, (54, ), (1, ))
    assert_size_stride(arg787_1, (), ())
    assert_size_stride(arg788_1, (54, ), (1, ))
    assert_size_stride(arg789_1, (54, ), (1, ))
    assert_size_stride(arg790_1, (), ())
    assert_size_stride(arg791_1, (54, ), (1, ))
    assert_size_stride(arg792_1, (54, ), (1, ))
    assert_size_stride(arg793_1, (), ())
    assert_size_stride(arg794_1, (54, ), (1, ))
    assert_size_stride(arg795_1, (54, ), (1, ))
    assert_size_stride(arg796_1, (), ())
    assert_size_stride(arg797_1, (54, ), (1, ))
    assert_size_stride(arg798_1, (54, ), (1, ))
    assert_size_stride(arg799_1, (), ())
    assert_size_stride(arg800_1, (54, ), (1, ))
    assert_size_stride(arg801_1, (54, ), (1, ))
    assert_size_stride(arg802_1, (), ())
    assert_size_stride(arg803_1, (54, ), (1, ))
    assert_size_stride(arg804_1, (54, ), (1, ))
    assert_size_stride(arg805_1, (), ())
    assert_size_stride(arg806_1, (54, ), (1, ))
    assert_size_stride(arg807_1, (54, ), (1, ))
    assert_size_stride(arg808_1, (), ())
    assert_size_stride(arg809_1, (54, ), (1, ))
    assert_size_stride(arg810_1, (54, ), (1, ))
    assert_size_stride(arg811_1, (), ())
    assert_size_stride(arg812_1, (54, ), (1, ))
    assert_size_stride(arg813_1, (54, ), (1, ))
    assert_size_stride(arg814_1, (), ())
    assert_size_stride(arg815_1, (54, ), (1, ))
    assert_size_stride(arg816_1, (54, ), (1, ))
    assert_size_stride(arg817_1, (), ())
    assert_size_stride(arg818_1, (54, ), (1, ))
    assert_size_stride(arg819_1, (54, ), (1, ))
    assert_size_stride(arg820_1, (), ())
    assert_size_stride(arg821_1, (54, ), (1, ))
    assert_size_stride(arg822_1, (54, ), (1, ))
    assert_size_stride(arg823_1, (), ())
    assert_size_stride(arg824_1, (108, ), (1, ))
    assert_size_stride(arg825_1, (108, ), (1, ))
    assert_size_stride(arg826_1, (), ())
    assert_size_stride(arg827_1, (108, ), (1, ))
    assert_size_stride(arg828_1, (108, ), (1, ))
    assert_size_stride(arg829_1, (), ())
    assert_size_stride(arg830_1, (108, ), (1, ))
    assert_size_stride(arg831_1, (108, ), (1, ))
    assert_size_stride(arg832_1, (), ())
    assert_size_stride(arg833_1, (108, ), (1, ))
    assert_size_stride(arg834_1, (108, ), (1, ))
    assert_size_stride(arg835_1, (), ())
    assert_size_stride(arg836_1, (108, ), (1, ))
    assert_size_stride(arg837_1, (108, ), (1, ))
    assert_size_stride(arg838_1, (), ())
    assert_size_stride(arg839_1, (108, ), (1, ))
    assert_size_stride(arg840_1, (108, ), (1, ))
    assert_size_stride(arg841_1, (), ())
    assert_size_stride(arg842_1, (108, ), (1, ))
    assert_size_stride(arg843_1, (108, ), (1, ))
    assert_size_stride(arg844_1, (), ())
    assert_size_stride(arg845_1, (108, ), (1, ))
    assert_size_stride(arg846_1, (108, ), (1, ))
    assert_size_stride(arg847_1, (), ())
    assert_size_stride(arg848_1, (108, ), (1, ))
    assert_size_stride(arg849_1, (108, ), (1, ))
    assert_size_stride(arg850_1, (), ())
    assert_size_stride(arg851_1, (108, ), (1, ))
    assert_size_stride(arg852_1, (108, ), (1, ))
    assert_size_stride(arg853_1, (), ())
    assert_size_stride(arg854_1, (108, ), (1, ))
    assert_size_stride(arg855_1, (108, ), (1, ))
    assert_size_stride(arg856_1, (), ())
    assert_size_stride(arg857_1, (108, ), (1, ))
    assert_size_stride(arg858_1, (108, ), (1, ))
    assert_size_stride(arg859_1, (), ())
    assert_size_stride(arg860_1, (108, ), (1, ))
    assert_size_stride(arg861_1, (108, ), (1, ))
    assert_size_stride(arg862_1, (), ())
    assert_size_stride(arg863_1, (108, ), (1, ))
    assert_size_stride(arg864_1, (108, ), (1, ))
    assert_size_stride(arg865_1, (), ())
    assert_size_stride(arg866_1, (108, ), (1, ))
    assert_size_stride(arg867_1, (108, ), (1, ))
    assert_size_stride(arg868_1, (), ())
    assert_size_stride(arg869_1, (216, ), (1, ))
    assert_size_stride(arg870_1, (216, ), (1, ))
    assert_size_stride(arg871_1, (), ())
    assert_size_stride(arg872_1, (216, ), (1, ))
    assert_size_stride(arg873_1, (216, ), (1, ))
    assert_size_stride(arg874_1, (), ())
    assert_size_stride(arg875_1, (216, ), (1, ))
    assert_size_stride(arg876_1, (216, ), (1, ))
    assert_size_stride(arg877_1, (), ())
    assert_size_stride(arg878_1, (216, ), (1, ))
    assert_size_stride(arg879_1, (216, ), (1, ))
    assert_size_stride(arg880_1, (), ())
    assert_size_stride(arg881_1, (216, ), (1, ))
    assert_size_stride(arg882_1, (216, ), (1, ))
    assert_size_stride(arg883_1, (), ())
    assert_size_stride(arg884_1, (216, ), (1, ))
    assert_size_stride(arg885_1, (216, ), (1, ))
    assert_size_stride(arg886_1, (), ())
    assert_size_stride(arg887_1, (216, ), (1, ))
    assert_size_stride(arg888_1, (216, ), (1, ))
    assert_size_stride(arg889_1, (), ())
    assert_size_stride(arg890_1, (216, ), (1, ))
    assert_size_stride(arg891_1, (216, ), (1, ))
    assert_size_stride(arg892_1, (), ())
    assert_size_stride(arg893_1, (216, ), (1, ))
    assert_size_stride(arg894_1, (216, ), (1, ))
    assert_size_stride(arg895_1, (), ())
    assert_size_stride(arg896_1, (216, ), (1, ))
    assert_size_stride(arg897_1, (216, ), (1, ))
    assert_size_stride(arg898_1, (), ())
    assert_size_stride(arg899_1, (216, ), (1, ))
    assert_size_stride(arg900_1, (216, ), (1, ))
    assert_size_stride(arg901_1, (), ())
    assert_size_stride(arg902_1, (216, ), (1, ))
    assert_size_stride(arg903_1, (216, ), (1, ))
    assert_size_stride(arg904_1, (), ())
    assert_size_stride(arg905_1, (216, ), (1, ))
    assert_size_stride(arg906_1, (216, ), (1, ))
    assert_size_stride(arg907_1, (), ())
    assert_size_stride(arg908_1, (216, ), (1, ))
    assert_size_stride(arg909_1, (216, ), (1, ))
    assert_size_stride(arg910_1, (), ())
    assert_size_stride(arg911_1, (216, ), (1, ))
    assert_size_stride(arg912_1, (216, ), (1, ))
    assert_size_stride(arg913_1, (), ())
    assert_size_stride(arg914_1, (216, ), (1, ))
    assert_size_stride(arg915_1, (216, ), (1, ))
    assert_size_stride(arg916_1, (), ())
    assert_size_stride(arg917_1, (216, ), (1, ))
    assert_size_stride(arg918_1, (216, ), (1, ))
    assert_size_stride(arg919_1, (), ())
    assert_size_stride(arg920_1, (216, ), (1, ))
    assert_size_stride(arg921_1, (216, ), (1, ))
    assert_size_stride(arg922_1, (), ())
    assert_size_stride(arg923_1, (216, ), (1, ))
    assert_size_stride(arg924_1, (216, ), (1, ))
    assert_size_stride(arg925_1, (), ())
    assert_size_stride(arg926_1, (216, ), (1, ))
    assert_size_stride(arg927_1, (216, ), (1, ))
    assert_size_stride(arg928_1, (), ())
    assert_size_stride(arg929_1, (216, ), (1, ))
    assert_size_stride(arg930_1, (216, ), (1, ))
    assert_size_stride(arg931_1, (), ())
    assert_size_stride(arg932_1, (216, ), (1, ))
    assert_size_stride(arg933_1, (216, ), (1, ))
    assert_size_stride(arg934_1, (), ())
    assert_size_stride(arg935_1, (216, ), (1, ))
    assert_size_stride(arg936_1, (216, ), (1, ))
    assert_size_stride(arg937_1, (), ())
    assert_size_stride(arg938_1, (216, ), (1, ))
    assert_size_stride(arg939_1, (216, ), (1, ))
    assert_size_stride(arg940_1, (), ())
    assert_size_stride(arg941_1, (216, ), (1, ))
    assert_size_stride(arg942_1, (216, ), (1, ))
    assert_size_stride(arg943_1, (), ())
    assert_size_stride(arg944_1, (216, ), (1, ))
    assert_size_stride(arg945_1, (216, ), (1, ))
    assert_size_stride(arg946_1, (), ())
    assert_size_stride(arg947_1, (216, ), (1, ))
    assert_size_stride(arg948_1, (216, ), (1, ))
    assert_size_stride(arg949_1, (), ())
    assert_size_stride(arg950_1, (216, ), (1, ))
    assert_size_stride(arg951_1, (216, ), (1, ))
    assert_size_stride(arg952_1, (), ())
    assert_size_stride(arg953_1, (216, ), (1, ))
    assert_size_stride(arg954_1, (216, ), (1, ))
    assert_size_stride(arg955_1, (), ())
    assert_size_stride(arg956_1, (216, ), (1, ))
    assert_size_stride(arg957_1, (216, ), (1, ))
    assert_size_stride(arg958_1, (), ())
    assert_size_stride(arg959_1, (216, ), (1, ))
    assert_size_stride(arg960_1, (216, ), (1, ))
    assert_size_stride(arg961_1, (), ())
    assert_size_stride(arg962_1, (216, ), (1, ))
    assert_size_stride(arg963_1, (216, ), (1, ))
    assert_size_stride(arg964_1, (), ())
    assert_size_stride(arg965_1, (216, ), (1, ))
    assert_size_stride(arg966_1, (216, ), (1, ))
    assert_size_stride(arg967_1, (), ())
    assert_size_stride(arg968_1, (216, ), (1, ))
    assert_size_stride(arg969_1, (216, ), (1, ))
    assert_size_stride(arg970_1, (), ())
    assert_size_stride(arg971_1, (216, ), (1, ))
    assert_size_stride(arg972_1, (216, ), (1, ))
    assert_size_stride(arg973_1, (), ())
    assert_size_stride(arg974_1, (216, ), (1, ))
    assert_size_stride(arg975_1, (216, ), (1, ))
    assert_size_stride(arg976_1, (), ())
    assert_size_stride(arg977_1, (216, ), (1, ))
    assert_size_stride(arg978_1, (216, ), (1, ))
    assert_size_stride(arg979_1, (), ())
    assert_size_stride(arg980_1, (216, ), (1, ))
    assert_size_stride(arg981_1, (216, ), (1, ))
    assert_size_stride(arg982_1, (), ())
    assert_size_stride(arg983_1, (216, ), (1, ))
    assert_size_stride(arg984_1, (216, ), (1, ))
    assert_size_stride(arg985_1, (), ())
    assert_size_stride(arg986_1, (216, ), (1, ))
    assert_size_stride(arg987_1, (216, ), (1, ))
    assert_size_stride(arg988_1, (), ())
    assert_size_stride(arg989_1, (216, ), (1, ))
    assert_size_stride(arg990_1, (216, ), (1, ))
    assert_size_stride(arg991_1, (), ())
    assert_size_stride(arg992_1, (216, ), (1, ))
    assert_size_stride(arg993_1, (216, ), (1, ))
    assert_size_stride(arg994_1, (), ())
    assert_size_stride(arg995_1, (216, ), (1, ))
    assert_size_stride(arg996_1, (216, ), (1, ))
    assert_size_stride(arg997_1, (), ())
    assert_size_stride(arg998_1, (216, ), (1, ))
    assert_size_stride(arg999_1, (216, ), (1, ))
    assert_size_stride(arg1000_1, (), ())
    assert_size_stride(arg1001_1, (216, ), (1, ))
    assert_size_stride(arg1002_1, (216, ), (1, ))
    assert_size_stride(arg1003_1, (), ())
    assert_size_stride(arg1004_1, (216, ), (1, ))
    assert_size_stride(arg1005_1, (216, ), (1, ))
    assert_size_stride(arg1006_1, (), ())
    assert_size_stride(arg1007_1, (216, ), (1, ))
    assert_size_stride(arg1008_1, (216, ), (1, ))
    assert_size_stride(arg1009_1, (), ())
    assert_size_stride(arg1010_1, (216, ), (1, ))
    assert_size_stride(arg1011_1, (216, ), (1, ))
    assert_size_stride(arg1012_1, (), ())
    assert_size_stride(arg1013_1, (216, ), (1, ))
    assert_size_stride(arg1014_1, (216, ), (1, ))
    assert_size_stride(arg1015_1, (), ())
    assert_size_stride(arg1016_1, (216, ), (1, ))
    assert_size_stride(arg1017_1, (216, ), (1, ))
    assert_size_stride(arg1018_1, (), ())
    assert_size_stride(arg1019_1, (216, ), (1, ))
    assert_size_stride(arg1020_1, (216, ), (1, ))
    assert_size_stride(arg1021_1, (), ())
    assert_size_stride(arg1022_1, (216, ), (1, ))
    assert_size_stride(arg1023_1, (216, ), (1, ))
    assert_size_stride(arg1024_1, (), ())
    assert_size_stride(arg1025_1, (216, ), (1, ))
    assert_size_stride(arg1026_1, (216, ), (1, ))
    assert_size_stride(arg1027_1, (), ())
    assert_size_stride(arg1028_1, (216, ), (1, ))
    assert_size_stride(arg1029_1, (216, ), (1, ))
    assert_size_stride(arg1030_1, (), ())
    assert_size_stride(arg1031_1, (216, ), (1, ))
    assert_size_stride(arg1032_1, (216, ), (1, ))
    assert_size_stride(arg1033_1, (), ())
    assert_size_stride(arg1034_1, (216, ), (1, ))
    assert_size_stride(arg1035_1, (216, ), (1, ))
    assert_size_stride(arg1036_1, (), ())
    assert_size_stride(arg1037_1, (432, ), (1, ))
    assert_size_stride(arg1038_1, (432, ), (1, ))
    assert_size_stride(arg1039_1, (), ())
    assert_size_stride(arg1040_1, (432, ), (1, ))
    assert_size_stride(arg1041_1, (432, ), (1, ))
    assert_size_stride(arg1042_1, (), ())
    assert_size_stride(arg1043_1, (432, ), (1, ))
    assert_size_stride(arg1044_1, (432, ), (1, ))
    assert_size_stride(arg1045_1, (), ())
    assert_size_stride(arg1046_1, (432, ), (1, ))
    assert_size_stride(arg1047_1, (432, ), (1, ))
    assert_size_stride(arg1048_1, (), ())
    assert_size_stride(arg1049_1, (432, ), (1, ))
    assert_size_stride(arg1050_1, (432, ), (1, ))
    assert_size_stride(arg1051_1, (), ())
    assert_size_stride(arg1052_1, (432, ), (1, ))
    assert_size_stride(arg1053_1, (432, ), (1, ))
    assert_size_stride(arg1054_1, (), ())
    assert_size_stride(arg1055_1, (432, ), (1, ))
    assert_size_stride(arg1056_1, (432, ), (1, ))
    assert_size_stride(arg1057_1, (), ())
    assert_size_stride(arg1058_1, (432, ), (1, ))
    assert_size_stride(arg1059_1, (432, ), (1, ))
    assert_size_stride(arg1060_1, (), ())
    assert_size_stride(arg1061_1, (432, ), (1, ))
    assert_size_stride(arg1062_1, (432, ), (1, ))
    assert_size_stride(arg1063_1, (), ())
    assert_size_stride(arg1064_1, (432, ), (1, ))
    assert_size_stride(arg1065_1, (432, ), (1, ))
    assert_size_stride(arg1066_1, (), ())
    assert_size_stride(arg1067_1, (432, ), (1, ))
    assert_size_stride(arg1068_1, (432, ), (1, ))
    assert_size_stride(arg1069_1, (), ())
    assert_size_stride(arg1070_1, (432, ), (1, ))
    assert_size_stride(arg1071_1, (432, ), (1, ))
    assert_size_stride(arg1072_1, (), ())
    assert_size_stride(arg1073_1, (432, ), (1, ))
    assert_size_stride(arg1074_1, (432, ), (1, ))
    assert_size_stride(arg1075_1, (), ())
    assert_size_stride(arg1076_1, (432, ), (1, ))
    assert_size_stride(arg1077_1, (432, ), (1, ))
    assert_size_stride(arg1078_1, (), ())
    assert_size_stride(arg1079_1, (432, ), (1, ))
    assert_size_stride(arg1080_1, (432, ), (1, ))
    assert_size_stride(arg1081_1, (), ())
    assert_size_stride(arg1082_1, (432, ), (1, ))
    assert_size_stride(arg1083_1, (432, ), (1, ))
    assert_size_stride(arg1084_1, (), ())
    assert_size_stride(arg1085_1, (432, ), (1, ))
    assert_size_stride(arg1086_1, (432, ), (1, ))
    assert_size_stride(arg1087_1, (), ())
    assert_size_stride(arg1088_1, (432, ), (1, ))
    assert_size_stride(arg1089_1, (432, ), (1, ))
    assert_size_stride(arg1090_1, (), ())
    assert_size_stride(arg1091_1, (432, ), (1, ))
    assert_size_stride(arg1092_1, (432, ), (1, ))
    assert_size_stride(arg1093_1, (), ())
    assert_size_stride(arg1094_1, (432, ), (1, ))
    assert_size_stride(arg1095_1, (432, ), (1, ))
    assert_size_stride(arg1096_1, (), ())
    assert_size_stride(arg1097_1, (432, ), (1, ))
    assert_size_stride(arg1098_1, (432, ), (1, ))
    assert_size_stride(arg1099_1, (), ())
    assert_size_stride(arg1100_1, (432, ), (1, ))
    assert_size_stride(arg1101_1, (432, ), (1, ))
    assert_size_stride(arg1102_1, (), ())
    assert_size_stride(arg1103_1, (432, ), (1, ))
    assert_size_stride(arg1104_1, (432, ), (1, ))
    assert_size_stride(arg1105_1, (), ())
    assert_size_stride(arg1106_1, (432, ), (1, ))
    assert_size_stride(arg1107_1, (432, ), (1, ))
    assert_size_stride(arg1108_1, (), ())
    assert_size_stride(arg1109_1, (432, ), (1, ))
    assert_size_stride(arg1110_1, (432, ), (1, ))
    assert_size_stride(arg1111_1, (), ())
    assert_size_stride(arg1112_1, (432, ), (1, ))
    assert_size_stride(arg1113_1, (432, ), (1, ))
    assert_size_stride(arg1114_1, (), ())
    assert_size_stride(arg1115_1, (432, ), (1, ))
    assert_size_stride(arg1116_1, (432, ), (1, ))
    assert_size_stride(arg1117_1, (), ())
    assert_size_stride(arg1118_1, (432, ), (1, ))
    assert_size_stride(arg1119_1, (432, ), (1, ))
    assert_size_stride(arg1120_1, (), ())
    assert_size_stride(arg1121_1, (432, ), (1, ))
    assert_size_stride(arg1122_1, (432, ), (1, ))
    assert_size_stride(arg1123_1, (), ())
    assert_size_stride(arg1124_1, (432, ), (1, ))
    assert_size_stride(arg1125_1, (432, ), (1, ))
    assert_size_stride(arg1126_1, (), ())
    assert_size_stride(arg1127_1, (432, ), (1, ))
    assert_size_stride(arg1128_1, (432, ), (1, ))
    assert_size_stride(arg1129_1, (), ())
    assert_size_stride(arg1130_1, (432, ), (1, ))
    assert_size_stride(arg1131_1, (432, ), (1, ))
    assert_size_stride(arg1132_1, (), ())
    assert_size_stride(arg1133_1, (432, ), (1, ))
    assert_size_stride(arg1134_1, (432, ), (1, ))
    assert_size_stride(arg1135_1, (), ())
    assert_size_stride(arg1136_1, (432, ), (1, ))
    assert_size_stride(arg1137_1, (432, ), (1, ))
    assert_size_stride(arg1138_1, (), ())
    assert_size_stride(arg1139_1, (432, ), (1, ))
    assert_size_stride(arg1140_1, (432, ), (1, ))
    assert_size_stride(arg1141_1, (), ())
    assert_size_stride(arg1142_1, (432, ), (1, ))
    assert_size_stride(arg1143_1, (432, ), (1, ))
    assert_size_stride(arg1144_1, (), ())
    assert_size_stride(arg1145_1, (432, ), (1, ))
    assert_size_stride(arg1146_1, (432, ), (1, ))
    assert_size_stride(arg1147_1, (), ())
    assert_size_stride(arg1148_1, (432, ), (1, ))
    assert_size_stride(arg1149_1, (432, ), (1, ))
    assert_size_stride(arg1150_1, (), ())
    assert_size_stride(arg1151_1, (432, ), (1, ))
    assert_size_stride(arg1152_1, (432, ), (1, ))
    assert_size_stride(arg1153_1, (), ())
    assert_size_stride(arg1154_1, (432, ), (1, ))
    assert_size_stride(arg1155_1, (432, ), (1, ))
    assert_size_stride(arg1156_1, (), ())
    assert_size_stride(arg1157_1, (432, ), (1, ))
    assert_size_stride(arg1158_1, (432, ), (1, ))
    assert_size_stride(arg1159_1, (), ())
    assert_size_stride(arg1160_1, (432, ), (1, ))
    assert_size_stride(arg1161_1, (432, ), (1, ))
    assert_size_stride(arg1162_1, (), ())
    assert_size_stride(arg1163_1, (432, ), (1, ))
    assert_size_stride(arg1164_1, (432, ), (1, ))
    assert_size_stride(arg1165_1, (), ())
    assert_size_stride(arg1166_1, (432, ), (1, ))
    assert_size_stride(arg1167_1, (432, ), (1, ))
    assert_size_stride(arg1168_1, (), ())
    assert_size_stride(arg1169_1, (432, ), (1, ))
    assert_size_stride(arg1170_1, (432, ), (1, ))
    assert_size_stride(arg1171_1, (), ())
    assert_size_stride(arg1172_1, (432, ), (1, ))
    assert_size_stride(arg1173_1, (432, ), (1, ))
    assert_size_stride(arg1174_1, (), ())
    assert_size_stride(arg1175_1, (432, ), (1, ))
    assert_size_stride(arg1176_1, (432, ), (1, ))
    assert_size_stride(arg1177_1, (), ())
    assert_size_stride(arg1178_1, (432, ), (1, ))
    assert_size_stride(arg1179_1, (432, ), (1, ))
    assert_size_stride(arg1180_1, (), ())
    assert_size_stride(arg1181_1, (432, ), (1, ))
    assert_size_stride(arg1182_1, (432, ), (1, ))
    assert_size_stride(arg1183_1, (), ())
    assert_size_stride(arg1184_1, (432, ), (1, ))
    assert_size_stride(arg1185_1, (432, ), (1, ))
    assert_size_stride(arg1186_1, (), ())
    assert_size_stride(arg1187_1, (432, ), (1, ))
    assert_size_stride(arg1188_1, (432, ), (1, ))
    assert_size_stride(arg1189_1, (), ())
    assert_size_stride(arg1190_1, (432, ), (1, ))
    assert_size_stride(arg1191_1, (432, ), (1, ))
    assert_size_stride(arg1192_1, (), ())
    assert_size_stride(arg1193_1, (432, ), (1, ))
    assert_size_stride(arg1194_1, (432, ), (1, ))
    assert_size_stride(arg1195_1, (), ())
    assert_size_stride(arg1196_1, (432, ), (1, ))
    assert_size_stride(arg1197_1, (432, ), (1, ))
    assert_size_stride(arg1198_1, (), ())
    assert_size_stride(arg1199_1, (432, ), (1, ))
    assert_size_stride(arg1200_1, (432, ), (1, ))
    assert_size_stride(arg1201_1, (), ())
    assert_size_stride(arg1202_1, (432, ), (1, ))
    assert_size_stride(arg1203_1, (432, ), (1, ))
    assert_size_stride(arg1204_1, (), ())
    assert_size_stride(arg1205_1, (432, ), (1, ))
    assert_size_stride(arg1206_1, (432, ), (1, ))
    assert_size_stride(arg1207_1, (), ())
    assert_size_stride(arg1208_1, (864, ), (1, ))
    assert_size_stride(arg1209_1, (864, ), (1, ))
    assert_size_stride(arg1210_1, (), ())
    assert_size_stride(arg1211_1, (864, ), (1, ))
    assert_size_stride(arg1212_1, (864, ), (1, ))
    assert_size_stride(arg1213_1, (), ())
    assert_size_stride(arg1214_1, (864, ), (1, ))
    assert_size_stride(arg1215_1, (864, ), (1, ))
    assert_size_stride(arg1216_1, (), ())
    assert_size_stride(arg1217_1, (864, ), (1, ))
    assert_size_stride(arg1218_1, (864, ), (1, ))
    assert_size_stride(arg1219_1, (), ())
    assert_size_stride(arg1220_1, (864, ), (1, ))
    assert_size_stride(arg1221_1, (864, ), (1, ))
    assert_size_stride(arg1222_1, (), ())
    assert_size_stride(arg1223_1, (864, ), (1, ))
    assert_size_stride(arg1224_1, (864, ), (1, ))
    assert_size_stride(arg1225_1, (), ())
    assert_size_stride(arg1226_1, (864, ), (1, ))
    assert_size_stride(arg1227_1, (864, ), (1, ))
    assert_size_stride(arg1228_1, (), ())
    assert_size_stride(arg1229_1, (864, ), (1, ))
    assert_size_stride(arg1230_1, (864, ), (1, ))
    assert_size_stride(arg1231_1, (), ())
    assert_size_stride(arg1232_1, (864, ), (1, ))
    assert_size_stride(arg1233_1, (864, ), (1, ))
    assert_size_stride(arg1234_1, (), ())
    assert_size_stride(arg1235_1, (864, ), (1, ))
    assert_size_stride(arg1236_1, (864, ), (1, ))
    assert_size_stride(arg1237_1, (), ())
    assert_size_stride(arg1238_1, (864, ), (1, ))
    assert_size_stride(arg1239_1, (864, ), (1, ))
    assert_size_stride(arg1240_1, (), ())
    assert_size_stride(arg1241_1, (864, ), (1, ))
    assert_size_stride(arg1242_1, (864, ), (1, ))
    assert_size_stride(arg1243_1, (), ())
    assert_size_stride(arg1244_1, (864, ), (1, ))
    assert_size_stride(arg1245_1, (864, ), (1, ))
    assert_size_stride(arg1246_1, (), ())
    assert_size_stride(arg1247_1, (864, ), (1, ))
    assert_size_stride(arg1248_1, (864, ), (1, ))
    assert_size_stride(arg1249_1, (), ())
    assert_size_stride(arg1250_1, (864, ), (1, ))
    assert_size_stride(arg1251_1, (864, ), (1, ))
    assert_size_stride(arg1252_1, (), ())
    assert_size_stride(arg1253_1, (864, ), (1, ))
    assert_size_stride(arg1254_1, (864, ), (1, ))
    assert_size_stride(arg1255_1, (), ())
    assert_size_stride(arg1256_1, (864, ), (1, ))
    assert_size_stride(arg1257_1, (864, ), (1, ))
    assert_size_stride(arg1258_1, (), ())
    assert_size_stride(arg1259_1, (864, ), (1, ))
    assert_size_stride(arg1260_1, (864, ), (1, ))
    assert_size_stride(arg1261_1, (), ())
    assert_size_stride(arg1262_1, (864, ), (1, ))
    assert_size_stride(arg1263_1, (864, ), (1, ))
    assert_size_stride(arg1264_1, (), ())
    assert_size_stride(arg1265_1, (864, ), (1, ))
    assert_size_stride(arg1266_1, (864, ), (1, ))
    assert_size_stride(arg1267_1, (), ())
    assert_size_stride(arg1268_1, (864, ), (1, ))
    assert_size_stride(arg1269_1, (864, ), (1, ))
    assert_size_stride(arg1270_1, (), ())
    assert_size_stride(arg1271_1, (864, ), (1, ))
    assert_size_stride(arg1272_1, (864, ), (1, ))
    assert_size_stride(arg1273_1, (), ())
    assert_size_stride(arg1274_1, (864, ), (1, ))
    assert_size_stride(arg1275_1, (864, ), (1, ))
    assert_size_stride(arg1276_1, (), ())
    assert_size_stride(arg1277_1, (864, ), (1, ))
    assert_size_stride(arg1278_1, (864, ), (1, ))
    assert_size_stride(arg1279_1, (), ())
    assert_size_stride(arg1280_1, (864, ), (1, ))
    assert_size_stride(arg1281_1, (864, ), (1, ))
    assert_size_stride(arg1282_1, (), ())
    assert_size_stride(arg1283_1, (864, ), (1, ))
    assert_size_stride(arg1284_1, (864, ), (1, ))
    assert_size_stride(arg1285_1, (), ())
    assert_size_stride(arg1286_1, (864, ), (1, ))
    assert_size_stride(arg1287_1, (864, ), (1, ))
    assert_size_stride(arg1288_1, (), ())
    assert_size_stride(arg1289_1, (864, ), (1, ))
    assert_size_stride(arg1290_1, (864, ), (1, ))
    assert_size_stride(arg1291_1, (), ())
    assert_size_stride(arg1292_1, (864, ), (1, ))
    assert_size_stride(arg1293_1, (864, ), (1, ))
    assert_size_stride(arg1294_1, (), ())
    assert_size_stride(arg1295_1, (864, ), (1, ))
    assert_size_stride(arg1296_1, (864, ), (1, ))
    assert_size_stride(arg1297_1, (), ())
    assert_size_stride(arg1298_1, (864, ), (1, ))
    assert_size_stride(arg1299_1, (864, ), (1, ))
    assert_size_stride(arg1300_1, (), ())
    assert_size_stride(arg1301_1, (864, ), (1, ))
    assert_size_stride(arg1302_1, (864, ), (1, ))
    assert_size_stride(arg1303_1, (), ())
    assert_size_stride(arg1304_1, (864, ), (1, ))
    assert_size_stride(arg1305_1, (864, ), (1, ))
    assert_size_stride(arg1306_1, (), ())
    assert_size_stride(arg1307_1, (864, ), (1, ))
    assert_size_stride(arg1308_1, (864, ), (1, ))
    assert_size_stride(arg1309_1, (), ())
    assert_size_stride(arg1310_1, (864, ), (1, ))
    assert_size_stride(arg1311_1, (864, ), (1, ))
    assert_size_stride(arg1312_1, (), ())
    assert_size_stride(arg1313_1, (864, ), (1, ))
    assert_size_stride(arg1314_1, (864, ), (1, ))
    assert_size_stride(arg1315_1, (), ())
    assert_size_stride(arg1316_1, (864, ), (1, ))
    assert_size_stride(arg1317_1, (864, ), (1, ))
    assert_size_stride(arg1318_1, (), ())
    assert_size_stride(arg1319_1, (864, ), (1, ))
    assert_size_stride(arg1320_1, (864, ), (1, ))
    assert_size_stride(arg1321_1, (), ())
    assert_size_stride(arg1322_1, (864, ), (1, ))
    assert_size_stride(arg1323_1, (864, ), (1, ))
    assert_size_stride(arg1324_1, (), ())
    assert_size_stride(arg1325_1, (864, ), (1, ))
    assert_size_stride(arg1326_1, (864, ), (1, ))
    assert_size_stride(arg1327_1, (), ())
    assert_size_stride(arg1328_1, (864, ), (1, ))
    assert_size_stride(arg1329_1, (864, ), (1, ))
    assert_size_stride(arg1330_1, (), ())
    assert_size_stride(arg1331_1, (864, ), (1, ))
    assert_size_stride(arg1332_1, (864, ), (1, ))
    assert_size_stride(arg1333_1, (), ())
    assert_size_stride(arg1334_1, (864, ), (1, ))
    assert_size_stride(arg1335_1, (864, ), (1, ))
    assert_size_stride(arg1336_1, (), ())
    assert_size_stride(arg1337_1, (864, ), (1, ))
    assert_size_stride(arg1338_1, (864, ), (1, ))
    assert_size_stride(arg1339_1, (), ())
    assert_size_stride(arg1340_1, (864, ), (1, ))
    assert_size_stride(arg1341_1, (864, ), (1, ))
    assert_size_stride(arg1342_1, (), ())
    assert_size_stride(arg1343_1, (864, ), (1, ))
    assert_size_stride(arg1344_1, (864, ), (1, ))
    assert_size_stride(arg1345_1, (), ())
    assert_size_stride(arg1346_1, (864, ), (1, ))
    assert_size_stride(arg1347_1, (864, ), (1, ))
    assert_size_stride(arg1348_1, (), ())
    assert_size_stride(arg1349_1, (864, ), (1, ))
    assert_size_stride(arg1350_1, (864, ), (1, ))
    assert_size_stride(arg1351_1, (), ())
    assert_size_stride(arg1352_1, (864, ), (1, ))
    assert_size_stride(arg1353_1, (864, ), (1, ))
    assert_size_stride(arg1354_1, (), ())
    assert_size_stride(arg1355_1, (864, ), (1, ))
    assert_size_stride(arg1356_1, (864, ), (1, ))
    assert_size_stride(arg1357_1, (), ())
    assert_size_stride(arg1358_1, (864, ), (1, ))
    assert_size_stride(arg1359_1, (864, ), (1, ))
    assert_size_stride(arg1360_1, (), ())
    assert_size_stride(arg1361_1, (864, ), (1, ))
    assert_size_stride(arg1362_1, (864, ), (1, ))
    assert_size_stride(arg1363_1, (), ())
    assert_size_stride(arg1364_1, (864, ), (1, ))
    assert_size_stride(arg1365_1, (864, ), (1, ))
    assert_size_stride(arg1366_1, (), ())
    assert_size_stride(arg1367_1, (864, ), (1, ))
    assert_size_stride(arg1368_1, (864, ), (1, ))
    assert_size_stride(arg1369_1, (), ())
    assert_size_stride(arg1370_1, (864, ), (1, ))
    assert_size_stride(arg1371_1, (864, ), (1, ))
    assert_size_stride(arg1372_1, (), ())
    assert_size_stride(arg1373_1, (864, ), (1, ))
    assert_size_stride(arg1374_1, (864, ), (1, ))
    assert_size_stride(arg1375_1, (), ())
    assert_size_stride(arg1376_1, (864, ), (1, ))
    assert_size_stride(arg1377_1, (864, ), (1, ))
    assert_size_stride(arg1378_1, (), ())
    assert_size_stride(arg1379_1, (8, 3, 331, 331), (328683, 109561, 331, 1))
    buf0 = empty_strided((8, 3, 331, 331), (328683, 1, 993, 3), device='cpu', dtype=torch.float32)
    buf1 = empty_strided((96, 3, 3, 3), (27, 1, 9, 3), device='cpu', dtype=torch.float32)
    cpp_fused_convolution_0(c_void_p(arg1379_1.data_ptr()), c_void_p(arg26_1.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()))
    del arg1379_1
    del arg26_1
    # Source Nodes: [x], Original ATen: [aten.convolution]
    buf2 = extern_kernels.convolution(buf0, buf1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf2, (8, 96, 165, 165), (2613600, 1, 15840, 96))
    del buf0
    del buf1
    buf3 = buf2; del buf2  # reuse
    buf4 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    buf10 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    buf12 = empty_strided((8, 96, 83, 83), (661344, 1, 7968, 96), device='cpu', dtype=torch.float32)
    buf5 = empty_strided((8, 96, 165, 165), (2613600, 1, 15840, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_1(c_void_p(buf3.data_ptr()), c_void_p(arg777_1.data_ptr()), c_void_p(arg778_1.data_ptr()), c_void_p(arg0_1.data_ptr()), c_void_p(arg1_1.data_ptr()), c_void_p(buf4.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(buf12.data_ptr()), c_void_p(buf5.data_ptr()))
    del arg0_1
    del arg1_1
    del arg777_1
    del arg778_1
    # Source Nodes: [x_5, x_6], Original ATen: [aten.convolution, aten.relu]
    buf6 = extern_kernels.convolution(buf5, arg27_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf6, (8, 54, 165, 165), (1470150, 1, 8910, 54))
    del arg27_1
    del buf5
    buf7 = buf6; del buf6  # reuse
    buf8 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    buf9 = empty_strided((8, 54, 83, 83), (372006, 1, 4482, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_2(c_void_p(buf7.data_ptr()), c_void_p(arg779_1.data_ptr()), c_void_p(arg780_1.data_ptr()), c_void_p(arg28_1.data_ptr()), c_void_p(arg29_1.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf9.data_ptr()))
    del arg28_1
    del arg29_1
    del arg779_1
    del arg780_1
    # Source Nodes: [l__mod___cell_stem_1_conv_prev_1x1_path_1_avgpool, x_89, x_path1], Original ATen: [aten.avg_pool2d, aten.convolution, aten.relu]
    buf11 = extern_kernels.convolution(buf10, arg78_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf11, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg78_1
    del buf10
    # Source Nodes: [l__mod___cell_stem_1_conv_prev_1x1_path_2_avgpool, l__mod___cell_stem_1_conv_prev_1x1_path_2_pad, x_89, x_path2], Original ATen: [aten.avg_pool2d, aten.constant_pad_nd, aten.convolution, aten.relu]
    buf13 = extern_kernels.convolution(buf12, arg79_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf13, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg79_1
    del buf12
    buf14 = empty_strided((8, 108, 83, 83), (744012, 1, 8964, 108), device='cpu', dtype=torch.float32)
    buf15 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    buf16 = empty_strided((8, 96, 169, 169), (2741856, 1, 16224, 96), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_3(c_void_p(buf11.data_ptr()), c_void_p(buf13.data_ptr()), c_void_p(arg824_1.data_ptr()), c_void_p(arg825_1.data_ptr()), c_void_p(arg80_1.data_ptr()), c_void_p(arg81_1.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(buf16.data_ptr()))
    del arg80_1
    del arg81_1
    del arg824_1
    del arg825_1
    del buf11
    del buf13
    # Source Nodes: [x_10, x_11, x_8], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf17 = extern_kernels.convolution(buf16, arg2_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=96, bias=None)
    assert_size_stride(buf17, (8, 96, 83, 83), (661344, 1, 7968, 96))
    del arg2_1
    del buf16
    # Source Nodes: [x_13], Original ATen: [aten.convolution]
    buf18 = extern_kernels.convolution(buf17, arg30_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf18, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg30_1
    del buf17
    buf19 = buf18; del buf18  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_4(c_void_p(buf19.data_ptr()), c_void_p(arg782_1.data_ptr()), c_void_p(arg783_1.data_ptr()), c_void_p(arg31_1.data_ptr()), c_void_p(arg32_1.data_ptr()))
    del arg31_1
    del arg32_1
    del arg782_1
    del arg783_1
    # Source Nodes: [x_14, x_15, x_16], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf20 = extern_kernels.convolution(buf19, arg33_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf20, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg33_1
    del buf19
    # Source Nodes: [x_18], Original ATen: [aten.convolution]
    buf21 = extern_kernels.convolution(buf20, arg34_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf21, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg34_1
    del buf20
    # Source Nodes: [l__mod___cell_stem_0_comb_iter_0_right_conv], Original ATen: [aten.convolution]
    buf22 = extern_kernels.convolution(buf4, arg37_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf22, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg37_1
    del buf4
    buf60 = empty((8, 270, 83, 83), device='cpu', dtype=torch.float32)
    buf23 = reinterpret_tensor(buf60, (8, 54, 83, 83), (1860030, 6889, 83, 1), 0)  # alias
    buf24 = empty_strided((8, 54, 171, 171), (1579014, 1, 9234, 54), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_add_constant_pad_nd_relu_5(c_void_p(buf21.data_ptr()), c_void_p(arg785_1.data_ptr()), c_void_p(arg786_1.data_ptr()), c_void_p(arg35_1.data_ptr()), c_void_p(arg36_1.data_ptr()), c_void_p(buf22.data_ptr()), c_void_p(arg788_1.data_ptr()), c_void_p(arg789_1.data_ptr()), c_void_p(arg38_1.data_ptr()), c_void_p(arg39_1.data_ptr()), c_void_p(buf7.data_ptr()), c_void_p(buf23.data_ptr()), c_void_p(buf24.data_ptr()))
    del arg35_1
    del arg36_1
    del arg38_1
    del arg39_1
    del arg785_1
    del arg786_1
    del arg788_1
    del arg789_1
    del buf21
    del buf22
    # Source Nodes: [x_22, x_24, x_25], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf25 = extern_kernels.convolution(buf24, arg3_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf25, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg3_1
    del buf24
    # Source Nodes: [x_27], Original ATen: [aten.convolution]
    buf26 = extern_kernels.convolution(buf25, arg40_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf26, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg40_1
    del buf25
    buf27 = buf26; del buf26  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_6(c_void_p(buf27.data_ptr()), c_void_p(arg791_1.data_ptr()), c_void_p(arg792_1.data_ptr()), c_void_p(arg41_1.data_ptr()), c_void_p(arg42_1.data_ptr()))
    del arg41_1
    del arg42_1
    del arg791_1
    del arg792_1
    # Source Nodes: [x_28, x_29, x_30], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf28 = extern_kernels.convolution(buf27, arg43_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf28, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg43_1
    del buf27
    # Source Nodes: [x_32], Original ATen: [aten.convolution]
    buf29 = extern_kernels.convolution(buf28, arg44_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf29, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg44_1
    del buf28
    buf30 = empty_strided((8, 54, 169, 169), (1542294, 1, 9126, 54), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_7(c_void_p(buf7.data_ptr()), c_void_p(buf30.data_ptr()))
    # Source Nodes: [x_36, x_38, x_39], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf31 = extern_kernels.convolution(buf30, arg4_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf31, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg4_1
    del buf30
    # Source Nodes: [x_41], Original ATen: [aten.convolution]
    buf32 = extern_kernels.convolution(buf31, arg47_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf32, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg47_1
    del buf31
    buf33 = buf32; del buf32  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_8(c_void_p(buf33.data_ptr()), c_void_p(arg797_1.data_ptr()), c_void_p(arg798_1.data_ptr()), c_void_p(arg48_1.data_ptr()), c_void_p(arg49_1.data_ptr()))
    del arg48_1
    del arg49_1
    del arg797_1
    del arg798_1
    # Source Nodes: [x_42, x_43, x_44], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf34 = extern_kernels.convolution(buf33, arg50_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf34, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg50_1
    del buf33
    # Source Nodes: [x_46], Original ATen: [aten.convolution]
    buf35 = extern_kernels.convolution(buf34, arg51_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf35, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg51_1
    del buf34
    buf36 = empty_strided((8, 54, 167, 167), (1506006, 1, 9018, 54), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_9(c_void_p(buf7.data_ptr()), c_void_p(buf36.data_ptr()))
    # Source Nodes: [x_48, x_50, x_51], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf37 = extern_kernels.convolution(buf36, arg5_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf37, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg5_1
    del buf36
    # Source Nodes: [x_53], Original ATen: [aten.convolution]
    buf38 = extern_kernels.convolution(buf37, arg54_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf38, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg54_1
    del buf37
    buf39 = buf38; del buf38  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_10(c_void_p(buf39.data_ptr()), c_void_p(arg803_1.data_ptr()), c_void_p(arg804_1.data_ptr()), c_void_p(arg55_1.data_ptr()), c_void_p(arg56_1.data_ptr()))
    del arg55_1
    del arg56_1
    del arg803_1
    del arg804_1
    # Source Nodes: [x_54, x_55, x_56], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf40 = extern_kernels.convolution(buf39, arg57_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf40, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg57_1
    del buf39
    # Source Nodes: [x_58], Original ATen: [aten.convolution]
    buf41 = extern_kernels.convolution(buf40, arg58_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf41, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg58_1
    buf42 = reinterpret_tensor(buf60, (8, 54, 83, 83), (1860030, 6889, 83, 1), 744012)  # alias
    buf43 = buf40; del buf40  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_11(c_void_p(buf35.data_ptr()), c_void_p(arg800_1.data_ptr()), c_void_p(arg801_1.data_ptr()), c_void_p(arg52_1.data_ptr()), c_void_p(arg53_1.data_ptr()), c_void_p(buf41.data_ptr()), c_void_p(arg806_1.data_ptr()), c_void_p(arg807_1.data_ptr()), c_void_p(arg59_1.data_ptr()), c_void_p(arg60_1.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(buf43.data_ptr()))
    del arg52_1
    del arg53_1
    del arg59_1
    del arg60_1
    del arg800_1
    del arg801_1
    del arg806_1
    del arg807_1
    del buf35
    del buf41
    # Source Nodes: [x_60, x_61], Original ATen: [aten.convolution, aten.relu]
    buf44 = extern_kernels.convolution(buf43, arg61_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf44, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg61_1
    del buf43
    # Source Nodes: [x_63], Original ATen: [aten.convolution]
    buf45 = extern_kernels.convolution(buf44, arg62_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf45, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg62_1
    del buf44
    buf46 = buf45; del buf45  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_12(c_void_p(buf46.data_ptr()), c_void_p(arg809_1.data_ptr()), c_void_p(arg810_1.data_ptr()), c_void_p(arg63_1.data_ptr()), c_void_p(arg64_1.data_ptr()))
    del arg63_1
    del arg64_1
    del arg809_1
    del arg810_1
    # Source Nodes: [x_64, x_65, x_66], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf47 = extern_kernels.convolution(buf46, arg65_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf47, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg65_1
    del buf46
    # Source Nodes: [x_68], Original ATen: [aten.convolution]
    buf48 = extern_kernels.convolution(buf47, arg66_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf48, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg66_1
    del buf47
    buf49 = empty_strided((8, 96, 167, 167), (2677344, 1, 16032, 96), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_13(c_void_p(buf3.data_ptr()), c_void_p(buf49.data_ptr()))
    del buf3
    # Source Nodes: [x_72, x_74, x_75], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf50 = extern_kernels.convolution(buf49, arg6_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=96, bias=None)
    assert_size_stride(buf50, (8, 96, 83, 83), (661344, 1, 7968, 96))
    del arg6_1
    del buf49
    # Source Nodes: [x_77], Original ATen: [aten.convolution]
    buf51 = extern_kernels.convolution(buf50, arg69_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf51, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg69_1
    del buf50
    buf52 = buf51; del buf51  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_14(c_void_p(buf52.data_ptr()), c_void_p(arg815_1.data_ptr()), c_void_p(arg816_1.data_ptr()), c_void_p(arg70_1.data_ptr()), c_void_p(arg71_1.data_ptr()))
    del arg70_1
    del arg71_1
    del arg815_1
    del arg816_1
    # Source Nodes: [x_78, x_79, x_80], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf53 = extern_kernels.convolution(buf52, arg72_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=54, bias=None)
    assert_size_stride(buf53, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg72_1
    del buf52
    # Source Nodes: [x_82], Original ATen: [aten.convolution]
    buf54 = extern_kernels.convolution(buf53, arg73_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf54, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg73_1
    del buf53
    buf55 = buf7; del buf7  # reuse
    cpp_fused_relu_15(c_void_p(buf55.data_ptr()))
    # Source Nodes: [x_84, x_87], Original ATen: [aten.convolution, aten.relu]
    buf56 = extern_kernels.convolution(buf55, arg7_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf56, (8, 54, 83, 83), (372006, 1, 4482, 54))
    del arg7_1
    del buf55
    buf57 = reinterpret_tensor(buf60, (8, 54, 83, 83), (1860030, 6889, 83, 1), 1488024)  # alias
    buf58 = reinterpret_tensor(buf60, (8, 54, 83, 83), (1860030, 6889, 83, 1), 372006)  # alias
    buf59 = reinterpret_tensor(buf60, (8, 54, 83, 83), (1860030, 6889, 83, 1), 1116018)  # alias
    buf61 = empty_strided((8, 270, 83, 83), (1860030, 1, 22410, 270), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_add_relu_16(c_void_p(buf54.data_ptr()), c_void_p(arg818_1.data_ptr()), c_void_p(arg819_1.data_ptr()), c_void_p(arg74_1.data_ptr()), c_void_p(arg75_1.data_ptr()), c_void_p(buf56.data_ptr()), c_void_p(arg821_1.data_ptr()), c_void_p(arg822_1.data_ptr()), c_void_p(arg76_1.data_ptr()), c_void_p(arg77_1.data_ptr()), c_void_p(buf29.data_ptr()), c_void_p(arg794_1.data_ptr()), c_void_p(arg795_1.data_ptr()), c_void_p(arg45_1.data_ptr()), c_void_p(arg46_1.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf48.data_ptr()), c_void_p(arg812_1.data_ptr()), c_void_p(arg813_1.data_ptr()), c_void_p(arg67_1.data_ptr()), c_void_p(arg68_1.data_ptr()), c_void_p(buf9.data_ptr()), c_void_p(buf60.data_ptr()), c_void_p(buf57.data_ptr()), c_void_p(buf58.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(buf61.data_ptr()))
    del arg45_1
    del arg46_1
    del arg67_1
    del arg68_1
    del arg74_1
    del arg75_1
    del arg76_1
    del arg77_1
    del arg794_1
    del arg795_1
    del arg812_1
    del arg813_1
    del arg818_1
    del arg819_1
    del arg821_1
    del arg822_1
    del buf23
    del buf29
    del buf42
    del buf48
    del buf54
    del buf56
    del buf57
    del buf58
    del buf59
    del buf8
    del buf9
    # Source Nodes: [x_90, x_91], Original ATen: [aten.convolution, aten.relu]
    buf62 = extern_kernels.convolution(buf61, arg82_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf62, (8, 108, 83, 83), (744012, 1, 8964, 108))
    del arg82_1
    del buf61
    buf63 = buf62; del buf62  # reuse
    buf64 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    buf65 = empty_strided((8, 108, 42, 42), (190512, 1, 4536, 108), device='cpu', dtype=torch.float32)
    buf66 = empty_strided((8, 270, 42, 42), (476280, 1, 11340, 270), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_17(c_void_p(buf63.data_ptr()), c_void_p(arg827_1.data_ptr()), c_void_p(arg828_1.data_ptr()), c_void_p(arg83_1.data_ptr()), c_void_p(arg84_1.data_ptr()), c_void_p(buf60.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf65.data_ptr()), c_void_p(buf66.data_ptr()))
    del arg827_1
    del arg828_1
    del arg83_1
    del arg84_1
    # Source Nodes: [l__mod___cell_0_conv_prev_1x1_path_1_avgpool, x_174, x_path1_1], Original ATen: [aten.avg_pool2d, aten.convolution, aten.relu]
    buf67 = extern_kernels.convolution(buf66, arg130_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf67, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg130_1
    buf68 = buf66; del buf66  # reuse
    cpp_fused_avg_pool2d_constant_pad_nd_relu_18(c_void_p(buf60.data_ptr()), c_void_p(buf68.data_ptr()))
    del buf60
    # Source Nodes: [l__mod___cell_0_conv_prev_1x1_path_2_avgpool, l__mod___cell_0_conv_prev_1x1_path_2_pad, x_174, x_path2_1], Original ATen: [aten.avg_pool2d, aten.constant_pad_nd, aten.convolution, aten.relu]
    buf69 = extern_kernels.convolution(buf68, arg131_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf69, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg131_1
    buf70 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf71 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf72 = empty_strided((8, 108, 87, 87), (817452, 1, 9396, 108), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_19(c_void_p(buf67.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(arg869_1.data_ptr()), c_void_p(arg870_1.data_ptr()), c_void_p(arg132_1.data_ptr()), c_void_p(arg133_1.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf70.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(buf72.data_ptr()))
    del arg132_1
    del arg133_1
    del arg869_1
    del arg870_1
    del buf67
    del buf69
    # Source Nodes: [x_93, x_95, x_96], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf73 = extern_kernels.convolution(buf72, arg8_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf73, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg8_1
    # Source Nodes: [x_98], Original ATen: [aten.convolution]
    buf74 = extern_kernels.convolution(buf73, arg85_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf74, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg85_1
    del buf73
    buf75 = buf74; del buf74  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_20(c_void_p(buf75.data_ptr()), c_void_p(arg830_1.data_ptr()), c_void_p(arg831_1.data_ptr()), c_void_p(arg86_1.data_ptr()), c_void_p(arg87_1.data_ptr()))
    del arg830_1
    del arg831_1
    del arg86_1
    del arg87_1
    # Source Nodes: [x_100, x_101, x_99], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf76 = extern_kernels.convolution(buf75, arg88_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf76, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg88_1
    del buf75
    # Source Nodes: [x_103], Original ATen: [aten.convolution]
    buf77 = extern_kernels.convolution(buf76, arg89_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf77, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg89_1
    del buf76
    buf78 = empty_strided((8, 108, 89, 89), (855468, 1, 9612, 108), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_21(c_void_p(buf63.data_ptr()), c_void_p(buf78.data_ptr()))
    # Source Nodes: [x_107, x_109, x_110], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf79 = extern_kernels.convolution(buf78, arg9_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf79, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg9_1
    del buf78
    # Source Nodes: [x_112], Original ATen: [aten.convolution]
    buf80 = extern_kernels.convolution(buf79, arg92_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf80, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg92_1
    del buf79
    buf81 = buf80; del buf80  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_22(c_void_p(buf81.data_ptr()), c_void_p(arg836_1.data_ptr()), c_void_p(arg837_1.data_ptr()), c_void_p(arg93_1.data_ptr()), c_void_p(arg94_1.data_ptr()))
    del arg836_1
    del arg837_1
    del arg93_1
    del arg94_1
    # Source Nodes: [x_113, x_114, x_115], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf82 = extern_kernels.convolution(buf81, arg95_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf82, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg95_1
    del buf81
    # Source Nodes: [x_117], Original ATen: [aten.convolution]
    buf83 = extern_kernels.convolution(buf82, arg96_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf83, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg96_1
    del buf82
    buf84 = buf72; del buf72  # reuse
    cpp_fused_constant_pad_nd_relu_23(c_void_p(buf63.data_ptr()), c_void_p(buf84.data_ptr()))
    # Source Nodes: [x_121, x_123, x_124], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf85 = extern_kernels.convolution(buf84, arg10_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf85, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg10_1
    del buf84
    # Source Nodes: [x_126], Original ATen: [aten.convolution]
    buf86 = extern_kernels.convolution(buf85, arg99_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf86, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg99_1
    del buf85
    buf87 = buf86; del buf86  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_24(c_void_p(buf87.data_ptr()), c_void_p(arg842_1.data_ptr()), c_void_p(arg843_1.data_ptr()), c_void_p(arg100_1.data_ptr()), c_void_p(arg101_1.data_ptr()))
    del arg100_1
    del arg101_1
    del arg842_1
    del arg843_1
    # Source Nodes: [x_127, x_128, x_129], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf88 = extern_kernels.convolution(buf87, arg102_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf88, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg102_1
    del buf87
    # Source Nodes: [x_131], Original ATen: [aten.convolution]
    buf89 = extern_kernels.convolution(buf88, arg103_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf89, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg103_1
    del buf88
    buf90 = empty_strided((8, 108, 85, 85), (780300, 1, 9180, 108), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_25(c_void_p(buf63.data_ptr()), c_void_p(buf90.data_ptr()))
    # Source Nodes: [x_133, x_135, x_136], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf91 = extern_kernels.convolution(buf90, arg11_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf91, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg11_1
    # Source Nodes: [x_138], Original ATen: [aten.convolution]
    buf92 = extern_kernels.convolution(buf91, arg106_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf92, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg106_1
    del buf91
    buf93 = buf92; del buf92  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_26(c_void_p(buf93.data_ptr()), c_void_p(arg848_1.data_ptr()), c_void_p(arg849_1.data_ptr()), c_void_p(arg107_1.data_ptr()), c_void_p(arg108_1.data_ptr()))
    del arg107_1
    del arg108_1
    del arg848_1
    del arg849_1
    # Source Nodes: [x_139, x_140, x_141], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf94 = extern_kernels.convolution(buf93, arg109_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf94, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg109_1
    del buf93
    # Source Nodes: [x_143], Original ATen: [aten.convolution]
    buf95 = extern_kernels.convolution(buf94, arg110_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf95, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg110_1
    buf115 = empty((8, 540, 42, 42), device='cpu', dtype=torch.float32)
    buf96 = reinterpret_tensor(buf115, (8, 108, 42, 42), (952560, 1764, 42, 1), 381024)  # alias
    buf97 = buf94; del buf94  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_27(c_void_p(buf89.data_ptr()), c_void_p(arg845_1.data_ptr()), c_void_p(arg846_1.data_ptr()), c_void_p(arg104_1.data_ptr()), c_void_p(arg105_1.data_ptr()), c_void_p(buf95.data_ptr()), c_void_p(arg851_1.data_ptr()), c_void_p(arg852_1.data_ptr()), c_void_p(arg111_1.data_ptr()), c_void_p(arg112_1.data_ptr()), c_void_p(buf96.data_ptr()), c_void_p(buf97.data_ptr()))
    del arg104_1
    del arg105_1
    del arg111_1
    del arg112_1
    del arg845_1
    del arg846_1
    del arg851_1
    del arg852_1
    del buf89
    del buf95
    # Source Nodes: [x_145, x_146], Original ATen: [aten.convolution, aten.relu]
    buf98 = extern_kernels.convolution(buf97, arg113_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf98, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg113_1
    del buf97
    # Source Nodes: [x_148], Original ATen: [aten.convolution]
    buf99 = extern_kernels.convolution(buf98, arg114_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf99, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg114_1
    del buf98
    buf100 = buf99; del buf99  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_28(c_void_p(buf100.data_ptr()), c_void_p(arg854_1.data_ptr()), c_void_p(arg855_1.data_ptr()), c_void_p(arg115_1.data_ptr()), c_void_p(arg116_1.data_ptr()))
    del arg115_1
    del arg116_1
    del arg854_1
    del arg855_1
    # Source Nodes: [x_149, x_150, x_151], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf101 = extern_kernels.convolution(buf100, arg117_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf101, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg117_1
    del buf100
    # Source Nodes: [x_153], Original ATen: [aten.convolution]
    buf102 = extern_kernels.convolution(buf101, arg118_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf102, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg118_1
    del buf101
    buf103 = buf90; del buf90  # reuse
    cpp_fused_constant_pad_nd_relu_29(c_void_p(buf14.data_ptr()), c_void_p(buf103.data_ptr()))
    del buf14
    # Source Nodes: [x_157, x_159, x_160], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf104 = extern_kernels.convolution(buf103, arg12_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf104, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg12_1
    del buf103
    # Source Nodes: [x_162], Original ATen: [aten.convolution]
    buf105 = extern_kernels.convolution(buf104, arg121_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf105, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg121_1
    del buf104
    buf106 = buf105; del buf105  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_30(c_void_p(buf106.data_ptr()), c_void_p(arg860_1.data_ptr()), c_void_p(arg861_1.data_ptr()), c_void_p(arg122_1.data_ptr()), c_void_p(arg123_1.data_ptr()))
    del arg122_1
    del arg123_1
    del arg860_1
    del arg861_1
    # Source Nodes: [x_163, x_164, x_165], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf107 = extern_kernels.convolution(buf106, arg124_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=108, bias=None)
    assert_size_stride(buf107, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg124_1
    del buf106
    # Source Nodes: [x_167], Original ATen: [aten.convolution]
    buf108 = extern_kernels.convolution(buf107, arg125_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf108, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg125_1
    del buf107
    buf109 = buf63; del buf63  # reuse
    cpp_fused_relu_31(c_void_p(buf109.data_ptr()))
    # Source Nodes: [x_169, x_172], Original ATen: [aten.convolution, aten.relu]
    buf110 = extern_kernels.convolution(buf109, arg13_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf110, (8, 108, 42, 42), (190512, 1, 4536, 108))
    del arg13_1
    del buf109
    buf111 = reinterpret_tensor(buf115, (8, 108, 42, 42), (952560, 1764, 42, 1), 762048)  # alias
    buf112 = reinterpret_tensor(buf115, (8, 108, 42, 42), (952560, 1764, 42, 1), 0)  # alias
    buf113 = reinterpret_tensor(buf115, (8, 108, 42, 42), (952560, 1764, 42, 1), 190512)  # alias
    buf114 = reinterpret_tensor(buf115, (8, 108, 42, 42), (952560, 1764, 42, 1), 571536)  # alias
    buf116 = empty_strided((8, 540, 42, 42), (952560, 1, 22680, 540), device='cpu', dtype=torch.float32)
    buf121 = empty_strided((8, 540, 42, 42), (952560, 1, 22680, 540), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_add_relu_32(c_void_p(buf108.data_ptr()), c_void_p(arg863_1.data_ptr()), c_void_p(arg864_1.data_ptr()), c_void_p(arg126_1.data_ptr()), c_void_p(arg127_1.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(arg866_1.data_ptr()), c_void_p(arg867_1.data_ptr()), c_void_p(arg128_1.data_ptr()), c_void_p(arg129_1.data_ptr()), c_void_p(buf77.data_ptr()), c_void_p(arg833_1.data_ptr()), c_void_p(arg834_1.data_ptr()), c_void_p(arg90_1.data_ptr()), c_void_p(arg91_1.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(buf83.data_ptr()), c_void_p(arg839_1.data_ptr()), c_void_p(arg840_1.data_ptr()), c_void_p(arg97_1.data_ptr()), c_void_p(arg98_1.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(arg857_1.data_ptr()), c_void_p(arg858_1.data_ptr()), c_void_p(arg119_1.data_ptr()), c_void_p(arg120_1.data_ptr()), c_void_p(buf65.data_ptr()), c_void_p(buf115.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(buf112.data_ptr()), c_void_p(buf113.data_ptr()), c_void_p(buf114.data_ptr()), c_void_p(buf116.data_ptr()), c_void_p(buf121.data_ptr()))
    del arg119_1
    del arg120_1
    del arg126_1
    del arg127_1
    del arg128_1
    del arg129_1
    del arg833_1
    del arg834_1
    del arg839_1
    del arg840_1
    del arg857_1
    del arg858_1
    del arg863_1
    del arg864_1
    del arg866_1
    del arg867_1
    del arg90_1
    del arg91_1
    del arg97_1
    del arg98_1
    del buf102
    del buf108
    del buf110
    del buf111
    del buf112
    del buf113
    del buf114
    del buf96
    # Source Nodes: [x_175, x_176], Original ATen: [aten.convolution, aten.relu]
    buf117 = extern_kernels.convolution(buf116, arg134_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf117, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg134_1
    buf118 = buf117; del buf117  # reuse
    buf119 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf120 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_33(c_void_p(buf118.data_ptr()), c_void_p(arg872_1.data_ptr()), c_void_p(arg873_1.data_ptr()), c_void_p(arg135_1.data_ptr()), c_void_p(arg136_1.data_ptr()), c_void_p(buf119.data_ptr()), c_void_p(buf120.data_ptr()))
    del arg135_1
    del arg136_1
    del arg872_1
    del arg873_1
    # Source Nodes: [x_238, x_239], Original ATen: [aten.convolution, aten.relu]
    buf122 = extern_kernels.convolution(buf121, arg185_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf122, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg185_1
    buf123 = buf122; del buf122  # reuse
    buf124 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf125 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    buf156 = empty_strided((8, 216, 42, 42), (381024, 1, 9072, 216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_34(c_void_p(buf123.data_ptr()), c_void_p(arg911_1.data_ptr()), c_void_p(arg912_1.data_ptr()), c_void_p(arg186_1.data_ptr()), c_void_p(arg187_1.data_ptr()), c_void_p(buf70.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(buf125.data_ptr()), c_void_p(buf156.data_ptr()))
    del arg186_1
    del arg187_1
    del arg911_1
    del arg912_1
    del buf70
    # Source Nodes: [x_178, x_179], Original ATen: [aten.convolution, aten.relu]
    buf126 = extern_kernels.convolution(buf125, arg137_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf126, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg137_1
    del buf125
    # Source Nodes: [x_181], Original ATen: [aten.convolution]
    buf127 = extern_kernels.convolution(buf126, arg138_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf127, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg138_1
    buf128 = buf127; del buf127  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_35(c_void_p(buf128.data_ptr()), c_void_p(arg875_1.data_ptr()), c_void_p(arg876_1.data_ptr()), c_void_p(arg139_1.data_ptr()), c_void_p(arg140_1.data_ptr()))
    del arg139_1
    del arg140_1
    del arg875_1
    del arg876_1
    # Source Nodes: [x_182, x_183, x_184], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf129 = extern_kernels.convolution(buf128, arg141_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf129, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg141_1
    # Source Nodes: [x_186], Original ATen: [aten.convolution]
    buf130 = extern_kernels.convolution(buf129, arg142_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf130, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg142_1
    buf131 = buf129; del buf129  # reuse
    buf137 = buf128; del buf128  # reuse
    buf143 = buf126; del buf126  # reuse
    cpp_fused_relu_36(c_void_p(buf118.data_ptr()), c_void_p(buf131.data_ptr()), c_void_p(buf137.data_ptr()), c_void_p(buf143.data_ptr()))
    # Source Nodes: [x_188, x_189], Original ATen: [aten.convolution, aten.relu]
    buf132 = extern_kernels.convolution(buf131, arg145_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf132, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg145_1
    del buf131
    # Source Nodes: [x_191], Original ATen: [aten.convolution]
    buf133 = extern_kernels.convolution(buf132, arg146_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf133, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg146_1
    del buf132
    buf134 = buf133; del buf133  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_37(c_void_p(buf134.data_ptr()), c_void_p(arg881_1.data_ptr()), c_void_p(arg882_1.data_ptr()), c_void_p(arg147_1.data_ptr()), c_void_p(arg148_1.data_ptr()))
    del arg147_1
    del arg148_1
    del arg881_1
    del arg882_1
    # Source Nodes: [x_192, x_193, x_194], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf135 = extern_kernels.convolution(buf134, arg149_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf135, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg149_1
    del buf134
    # Source Nodes: [x_196], Original ATen: [aten.convolution]
    buf136 = extern_kernels.convolution(buf135, arg150_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf136, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg150_1
    del buf135
    # Source Nodes: [x_198, x_199], Original ATen: [aten.convolution, aten.relu]
    buf138 = extern_kernels.convolution(buf137, arg153_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf138, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg153_1
    del buf137
    # Source Nodes: [x_201], Original ATen: [aten.convolution]
    buf139 = extern_kernels.convolution(buf138, arg154_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf139, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg154_1
    del buf138
    buf140 = buf139; del buf139  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_38(c_void_p(buf140.data_ptr()), c_void_p(arg887_1.data_ptr()), c_void_p(arg888_1.data_ptr()), c_void_p(arg155_1.data_ptr()), c_void_p(arg156_1.data_ptr()))
    del arg155_1
    del arg156_1
    del arg887_1
    del arg888_1
    # Source Nodes: [x_202, x_203, x_204], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf141 = extern_kernels.convolution(buf140, arg157_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf141, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg157_1
    del buf140
    # Source Nodes: [x_206], Original ATen: [aten.convolution]
    buf142 = extern_kernels.convolution(buf141, arg158_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf142, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg158_1
    del buf141
    # Source Nodes: [x_208, x_209], Original ATen: [aten.convolution, aten.relu]
    buf144 = extern_kernels.convolution(buf143, arg161_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf144, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg161_1
    del buf143
    # Source Nodes: [x_211], Original ATen: [aten.convolution]
    buf145 = extern_kernels.convolution(buf144, arg162_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf145, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg162_1
    del buf144
    buf146 = buf145; del buf145  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_39(c_void_p(buf146.data_ptr()), c_void_p(arg893_1.data_ptr()), c_void_p(arg894_1.data_ptr()), c_void_p(arg163_1.data_ptr()), c_void_p(arg164_1.data_ptr()))
    del arg163_1
    del arg164_1
    del arg893_1
    del arg894_1
    # Source Nodes: [x_212, x_213, x_214], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf147 = extern_kernels.convolution(buf146, arg165_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf147, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg165_1
    del buf146
    # Source Nodes: [x_216], Original ATen: [aten.convolution]
    buf148 = extern_kernels.convolution(buf147, arg166_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf148, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg166_1
    buf166 = empty((8, 1080, 42, 42), device='cpu', dtype=torch.float32)
    buf149 = reinterpret_tensor(buf166, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf150 = buf147; del buf147  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_40(c_void_p(buf142.data_ptr()), c_void_p(arg890_1.data_ptr()), c_void_p(arg891_1.data_ptr()), c_void_p(arg159_1.data_ptr()), c_void_p(arg160_1.data_ptr()), c_void_p(buf148.data_ptr()), c_void_p(arg896_1.data_ptr()), c_void_p(arg897_1.data_ptr()), c_void_p(arg167_1.data_ptr()), c_void_p(arg168_1.data_ptr()), c_void_p(buf149.data_ptr()), c_void_p(buf150.data_ptr()))
    del arg159_1
    del arg160_1
    del arg167_1
    del arg168_1
    del arg890_1
    del arg891_1
    del arg896_1
    del arg897_1
    del buf142
    del buf148
    # Source Nodes: [x_218, x_219], Original ATen: [aten.convolution, aten.relu]
    buf151 = extern_kernels.convolution(buf150, arg169_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf151, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg169_1
    del buf150
    # Source Nodes: [x_221], Original ATen: [aten.convolution]
    buf152 = extern_kernels.convolution(buf151, arg170_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf152, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg170_1
    del buf151
    buf153 = buf152; del buf152  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_41(c_void_p(buf153.data_ptr()), c_void_p(arg899_1.data_ptr()), c_void_p(arg900_1.data_ptr()), c_void_p(arg171_1.data_ptr()), c_void_p(arg172_1.data_ptr()))
    del arg171_1
    del arg172_1
    del arg899_1
    del arg900_1
    # Source Nodes: [x_222, x_223, x_224], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf154 = extern_kernels.convolution(buf153, arg173_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf154, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg173_1
    del buf153
    # Source Nodes: [x_226], Original ATen: [aten.convolution]
    buf155 = extern_kernels.convolution(buf154, arg174_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf155, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg174_1
    del buf154
    # Source Nodes: [x_228, x_229], Original ATen: [aten.convolution, aten.relu]
    buf157 = extern_kernels.convolution(buf156, arg177_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf157, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg177_1
    del buf156
    # Source Nodes: [x_231], Original ATen: [aten.convolution]
    buf158 = extern_kernels.convolution(buf157, arg178_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf158, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg178_1
    del buf157
    buf159 = buf158; del buf158  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_42(c_void_p(buf159.data_ptr()), c_void_p(arg905_1.data_ptr()), c_void_p(arg906_1.data_ptr()), c_void_p(arg179_1.data_ptr()), c_void_p(arg180_1.data_ptr()))
    del arg179_1
    del arg180_1
    del arg905_1
    del arg906_1
    # Source Nodes: [x_232, x_233, x_234], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf160 = extern_kernels.convolution(buf159, arg181_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf160, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg181_1
    del buf159
    # Source Nodes: [x_236], Original ATen: [aten.convolution]
    buf161 = extern_kernels.convolution(buf160, arg182_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf161, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg182_1
    del buf160
    buf162 = reinterpret_tensor(buf166, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf163 = reinterpret_tensor(buf166, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf164 = reinterpret_tensor(buf166, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf165 = reinterpret_tensor(buf166, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    buf167 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    buf172 = empty_strided((8, 1080, 42, 42), (1905120, 1, 45360, 1080), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_add_relu_43(c_void_p(buf130.data_ptr()), c_void_p(arg878_1.data_ptr()), c_void_p(arg879_1.data_ptr()), c_void_p(arg143_1.data_ptr()), c_void_p(arg144_1.data_ptr()), c_void_p(buf71.data_ptr()), c_void_p(buf136.data_ptr()), c_void_p(arg884_1.data_ptr()), c_void_p(arg885_1.data_ptr()), c_void_p(arg151_1.data_ptr()), c_void_p(arg152_1.data_ptr()), c_void_p(buf119.data_ptr()), c_void_p(buf155.data_ptr()), c_void_p(arg902_1.data_ptr()), c_void_p(arg903_1.data_ptr()), c_void_p(arg175_1.data_ptr()), c_void_p(arg176_1.data_ptr()), c_void_p(buf120.data_ptr()), c_void_p(buf161.data_ptr()), c_void_p(arg908_1.data_ptr()), c_void_p(arg909_1.data_ptr()), c_void_p(arg183_1.data_ptr()), c_void_p(arg184_1.data_ptr()), c_void_p(buf118.data_ptr()), c_void_p(buf166.data_ptr()), c_void_p(buf162.data_ptr()), c_void_p(buf163.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(buf167.data_ptr()), c_void_p(buf172.data_ptr()))
    del arg143_1
    del arg144_1
    del arg151_1
    del arg152_1
    del arg175_1
    del arg176_1
    del arg183_1
    del arg184_1
    del arg878_1
    del arg879_1
    del arg884_1
    del arg885_1
    del arg902_1
    del arg903_1
    del arg908_1
    del arg909_1
    del buf118
    del buf119
    del buf120
    del buf149
    del buf162
    del buf163
    del buf164
    del buf165
    # Source Nodes: [x_241, x_242], Original ATen: [aten.convolution, aten.relu]
    buf168 = extern_kernels.convolution(buf167, arg188_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf168, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg188_1
    buf169 = buf168; del buf168  # reuse
    buf170 = buf71; del buf71  # reuse
    buf171 = buf161; del buf161  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_44(c_void_p(buf169.data_ptr()), c_void_p(arg914_1.data_ptr()), c_void_p(arg915_1.data_ptr()), c_void_p(arg189_1.data_ptr()), c_void_p(arg190_1.data_ptr()), c_void_p(buf170.data_ptr()), c_void_p(buf171.data_ptr()))
    del arg189_1
    del arg190_1
    del arg914_1
    del arg915_1
    # Source Nodes: [x_304, x_305], Original ATen: [aten.convolution, aten.relu]
    buf173 = extern_kernels.convolution(buf172, arg239_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf173, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg239_1
    buf174 = buf173; del buf173  # reuse
    buf175 = buf155; del buf155  # reuse
    buf176 = buf136; del buf136  # reuse
    buf207 = buf130; del buf130  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_45(c_void_p(buf174.data_ptr()), c_void_p(arg953_1.data_ptr()), c_void_p(arg954_1.data_ptr()), c_void_p(arg240_1.data_ptr()), c_void_p(arg241_1.data_ptr()), c_void_p(buf123.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(buf176.data_ptr()), c_void_p(buf207.data_ptr()))
    del arg240_1
    del arg241_1
    del arg953_1
    del arg954_1
    del buf123
    # Source Nodes: [x_244, x_245], Original ATen: [aten.convolution, aten.relu]
    buf177 = extern_kernels.convolution(buf176, arg191_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf177, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg191_1
    del buf176
    # Source Nodes: [x_247], Original ATen: [aten.convolution]
    buf178 = extern_kernels.convolution(buf177, arg192_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf178, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg192_1
    buf179 = buf178; del buf178  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_46(c_void_p(buf179.data_ptr()), c_void_p(arg917_1.data_ptr()), c_void_p(arg918_1.data_ptr()), c_void_p(arg193_1.data_ptr()), c_void_p(arg194_1.data_ptr()))
    del arg193_1
    del arg194_1
    del arg917_1
    del arg918_1
    # Source Nodes: [x_248, x_249, x_250], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf180 = extern_kernels.convolution(buf179, arg195_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf180, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg195_1
    # Source Nodes: [x_252], Original ATen: [aten.convolution]
    buf181 = extern_kernels.convolution(buf180, arg196_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf181, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg196_1
    buf182 = buf180; del buf180  # reuse
    buf188 = buf179; del buf179  # reuse
    buf194 = buf177; del buf177  # reuse
    cpp_fused_relu_47(c_void_p(buf169.data_ptr()), c_void_p(buf182.data_ptr()), c_void_p(buf188.data_ptr()), c_void_p(buf194.data_ptr()))
    # Source Nodes: [x_254, x_255], Original ATen: [aten.convolution, aten.relu]
    buf183 = extern_kernels.convolution(buf182, arg199_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf183, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg199_1
    del buf182
    # Source Nodes: [x_257], Original ATen: [aten.convolution]
    buf184 = extern_kernels.convolution(buf183, arg200_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf184, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg200_1
    del buf183
    buf185 = buf184; del buf184  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_48(c_void_p(buf185.data_ptr()), c_void_p(arg923_1.data_ptr()), c_void_p(arg924_1.data_ptr()), c_void_p(arg201_1.data_ptr()), c_void_p(arg202_1.data_ptr()))
    del arg201_1
    del arg202_1
    del arg923_1
    del arg924_1
    # Source Nodes: [x_258, x_259, x_260], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf186 = extern_kernels.convolution(buf185, arg203_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf186, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg203_1
    del buf185
    # Source Nodes: [x_262], Original ATen: [aten.convolution]
    buf187 = extern_kernels.convolution(buf186, arg204_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf187, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg204_1
    del buf186
    # Source Nodes: [x_264, x_265], Original ATen: [aten.convolution, aten.relu]
    buf189 = extern_kernels.convolution(buf188, arg207_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf189, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg207_1
    del buf188
    # Source Nodes: [x_267], Original ATen: [aten.convolution]
    buf190 = extern_kernels.convolution(buf189, arg208_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf190, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg208_1
    del buf189
    buf191 = buf190; del buf190  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_49(c_void_p(buf191.data_ptr()), c_void_p(arg929_1.data_ptr()), c_void_p(arg930_1.data_ptr()), c_void_p(arg209_1.data_ptr()), c_void_p(arg210_1.data_ptr()))
    del arg209_1
    del arg210_1
    del arg929_1
    del arg930_1
    # Source Nodes: [x_268, x_269, x_270], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf192 = extern_kernels.convolution(buf191, arg211_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf192, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg211_1
    del buf191
    # Source Nodes: [x_272], Original ATen: [aten.convolution]
    buf193 = extern_kernels.convolution(buf192, arg212_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf193, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg212_1
    del buf192
    # Source Nodes: [x_274, x_275], Original ATen: [aten.convolution, aten.relu]
    buf195 = extern_kernels.convolution(buf194, arg215_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf195, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg215_1
    del buf194
    # Source Nodes: [x_277], Original ATen: [aten.convolution]
    buf196 = extern_kernels.convolution(buf195, arg216_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf196, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg216_1
    del buf195
    buf197 = buf196; del buf196  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_50(c_void_p(buf197.data_ptr()), c_void_p(arg935_1.data_ptr()), c_void_p(arg936_1.data_ptr()), c_void_p(arg217_1.data_ptr()), c_void_p(arg218_1.data_ptr()))
    del arg217_1
    del arg218_1
    del arg935_1
    del arg936_1
    # Source Nodes: [x_278, x_279, x_280], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf198 = extern_kernels.convolution(buf197, arg219_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf198, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg219_1
    del buf197
    # Source Nodes: [x_282], Original ATen: [aten.convolution]
    buf199 = extern_kernels.convolution(buf198, arg220_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf199, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg220_1
    buf217 = reinterpret_tensor(buf172, (8, 1080, 42, 42), (1905120, 1764, 42, 1), 0); del buf172  # reuse
    buf200 = reinterpret_tensor(buf217, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf201 = buf198; del buf198  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_51(c_void_p(buf193.data_ptr()), c_void_p(arg932_1.data_ptr()), c_void_p(arg933_1.data_ptr()), c_void_p(arg213_1.data_ptr()), c_void_p(arg214_1.data_ptr()), c_void_p(buf199.data_ptr()), c_void_p(arg938_1.data_ptr()), c_void_p(arg939_1.data_ptr()), c_void_p(arg221_1.data_ptr()), c_void_p(arg222_1.data_ptr()), c_void_p(buf200.data_ptr()), c_void_p(buf201.data_ptr()))
    del arg213_1
    del arg214_1
    del arg221_1
    del arg222_1
    del arg932_1
    del arg933_1
    del arg938_1
    del arg939_1
    del buf193
    del buf199
    # Source Nodes: [x_284, x_285], Original ATen: [aten.convolution, aten.relu]
    buf202 = extern_kernels.convolution(buf201, arg223_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf202, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg223_1
    del buf201
    # Source Nodes: [x_287], Original ATen: [aten.convolution]
    buf203 = extern_kernels.convolution(buf202, arg224_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf203, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg224_1
    del buf202
    buf204 = buf203; del buf203  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_52(c_void_p(buf204.data_ptr()), c_void_p(arg941_1.data_ptr()), c_void_p(arg942_1.data_ptr()), c_void_p(arg225_1.data_ptr()), c_void_p(arg226_1.data_ptr()))
    del arg225_1
    del arg226_1
    del arg941_1
    del arg942_1
    # Source Nodes: [x_288, x_289, x_290], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf205 = extern_kernels.convolution(buf204, arg227_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf205, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg227_1
    del buf204
    # Source Nodes: [x_292], Original ATen: [aten.convolution]
    buf206 = extern_kernels.convolution(buf205, arg228_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf206, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg228_1
    del buf205
    # Source Nodes: [x_294, x_295], Original ATen: [aten.convolution, aten.relu]
    buf208 = extern_kernels.convolution(buf207, arg231_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf208, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg231_1
    del buf207
    # Source Nodes: [x_297], Original ATen: [aten.convolution]
    buf209 = extern_kernels.convolution(buf208, arg232_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf209, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg232_1
    del buf208
    buf210 = buf209; del buf209  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_53(c_void_p(buf210.data_ptr()), c_void_p(arg947_1.data_ptr()), c_void_p(arg948_1.data_ptr()), c_void_p(arg233_1.data_ptr()), c_void_p(arg234_1.data_ptr()))
    del arg233_1
    del arg234_1
    del arg947_1
    del arg948_1
    # Source Nodes: [x_298, x_299, x_300], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf211 = extern_kernels.convolution(buf210, arg235_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf211, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg235_1
    del buf210
    # Source Nodes: [x_302], Original ATen: [aten.convolution]
    buf212 = extern_kernels.convolution(buf211, arg236_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf212, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg236_1
    del buf211
    buf213 = reinterpret_tensor(buf217, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf214 = reinterpret_tensor(buf217, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf215 = reinterpret_tensor(buf217, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf216 = reinterpret_tensor(buf217, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    buf218 = buf167; del buf167  # reuse
    buf223 = reinterpret_tensor(buf166, (8, 1080, 42, 42), (1905120, 1, 45360, 1080), 0); del buf166  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_54(c_void_p(buf181.data_ptr()), c_void_p(arg920_1.data_ptr()), c_void_p(arg921_1.data_ptr()), c_void_p(arg197_1.data_ptr()), c_void_p(arg198_1.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(buf187.data_ptr()), c_void_p(arg926_1.data_ptr()), c_void_p(arg927_1.data_ptr()), c_void_p(arg205_1.data_ptr()), c_void_p(arg206_1.data_ptr()), c_void_p(buf170.data_ptr()), c_void_p(buf206.data_ptr()), c_void_p(arg944_1.data_ptr()), c_void_p(arg945_1.data_ptr()), c_void_p(arg229_1.data_ptr()), c_void_p(arg230_1.data_ptr()), c_void_p(buf171.data_ptr()), c_void_p(buf212.data_ptr()), c_void_p(arg950_1.data_ptr()), c_void_p(arg951_1.data_ptr()), c_void_p(arg237_1.data_ptr()), c_void_p(arg238_1.data_ptr()), c_void_p(buf169.data_ptr()), c_void_p(buf217.data_ptr()), c_void_p(buf213.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(buf215.data_ptr()), c_void_p(buf216.data_ptr()), c_void_p(buf218.data_ptr()), c_void_p(buf223.data_ptr()))
    del arg197_1
    del arg198_1
    del arg205_1
    del arg206_1
    del arg229_1
    del arg230_1
    del arg237_1
    del arg238_1
    del arg920_1
    del arg921_1
    del arg926_1
    del arg927_1
    del arg944_1
    del arg945_1
    del arg950_1
    del arg951_1
    del buf124
    del buf169
    del buf170
    del buf200
    del buf213
    del buf214
    del buf215
    del buf216
    # Source Nodes: [x_307, x_308], Original ATen: [aten.convolution, aten.relu]
    buf219 = extern_kernels.convolution(buf218, arg242_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf219, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg242_1
    buf220 = buf219; del buf219  # reuse
    buf221 = buf212; del buf212  # reuse
    buf222 = buf206; del buf206  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_55(c_void_p(buf220.data_ptr()), c_void_p(arg956_1.data_ptr()), c_void_p(arg957_1.data_ptr()), c_void_p(arg243_1.data_ptr()), c_void_p(arg244_1.data_ptr()), c_void_p(buf221.data_ptr()), c_void_p(buf222.data_ptr()))
    del arg243_1
    del arg244_1
    del arg956_1
    del arg957_1
    # Source Nodes: [x_370, x_371], Original ATen: [aten.convolution, aten.relu]
    buf224 = extern_kernels.convolution(buf223, arg293_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf224, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg293_1
    buf225 = buf224; del buf224  # reuse
    buf226 = buf187; del buf187  # reuse
    buf227 = buf181; del buf181  # reuse
    buf258 = buf171; del buf171  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_56(c_void_p(buf225.data_ptr()), c_void_p(arg995_1.data_ptr()), c_void_p(arg996_1.data_ptr()), c_void_p(arg294_1.data_ptr()), c_void_p(arg295_1.data_ptr()), c_void_p(buf174.data_ptr()), c_void_p(buf226.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(buf258.data_ptr()))
    del arg294_1
    del arg295_1
    del arg995_1
    del arg996_1
    del buf174
    # Source Nodes: [x_310, x_311], Original ATen: [aten.convolution, aten.relu]
    buf228 = extern_kernels.convolution(buf227, arg245_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf228, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg245_1
    del buf227
    # Source Nodes: [x_313], Original ATen: [aten.convolution]
    buf229 = extern_kernels.convolution(buf228, arg246_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf229, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg246_1
    buf230 = buf229; del buf229  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_57(c_void_p(buf230.data_ptr()), c_void_p(arg959_1.data_ptr()), c_void_p(arg960_1.data_ptr()), c_void_p(arg247_1.data_ptr()), c_void_p(arg248_1.data_ptr()))
    del arg247_1
    del arg248_1
    del arg959_1
    del arg960_1
    # Source Nodes: [x_314, x_315, x_316], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf231 = extern_kernels.convolution(buf230, arg249_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf231, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg249_1
    # Source Nodes: [x_318], Original ATen: [aten.convolution]
    buf232 = extern_kernels.convolution(buf231, arg250_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf232, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg250_1
    buf233 = buf231; del buf231  # reuse
    buf239 = buf230; del buf230  # reuse
    buf245 = buf228; del buf228  # reuse
    cpp_fused_relu_58(c_void_p(buf220.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf239.data_ptr()), c_void_p(buf245.data_ptr()))
    # Source Nodes: [x_320, x_321], Original ATen: [aten.convolution, aten.relu]
    buf234 = extern_kernels.convolution(buf233, arg253_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf234, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg253_1
    del buf233
    # Source Nodes: [x_323], Original ATen: [aten.convolution]
    buf235 = extern_kernels.convolution(buf234, arg254_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf235, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg254_1
    del buf234
    buf236 = buf235; del buf235  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_59(c_void_p(buf236.data_ptr()), c_void_p(arg965_1.data_ptr()), c_void_p(arg966_1.data_ptr()), c_void_p(arg255_1.data_ptr()), c_void_p(arg256_1.data_ptr()))
    del arg255_1
    del arg256_1
    del arg965_1
    del arg966_1
    # Source Nodes: [x_324, x_325, x_326], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf237 = extern_kernels.convolution(buf236, arg257_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf237, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg257_1
    del buf236
    # Source Nodes: [x_328], Original ATen: [aten.convolution]
    buf238 = extern_kernels.convolution(buf237, arg258_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf238, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg258_1
    del buf237
    # Source Nodes: [x_330, x_331], Original ATen: [aten.convolution, aten.relu]
    buf240 = extern_kernels.convolution(buf239, arg261_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf240, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg261_1
    del buf239
    # Source Nodes: [x_333], Original ATen: [aten.convolution]
    buf241 = extern_kernels.convolution(buf240, arg262_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf241, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg262_1
    del buf240
    buf242 = buf241; del buf241  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_60(c_void_p(buf242.data_ptr()), c_void_p(arg971_1.data_ptr()), c_void_p(arg972_1.data_ptr()), c_void_p(arg263_1.data_ptr()), c_void_p(arg264_1.data_ptr()))
    del arg263_1
    del arg264_1
    del arg971_1
    del arg972_1
    # Source Nodes: [x_334, x_335, x_336], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf243 = extern_kernels.convolution(buf242, arg265_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf243, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg265_1
    del buf242
    # Source Nodes: [x_338], Original ATen: [aten.convolution]
    buf244 = extern_kernels.convolution(buf243, arg266_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf244, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg266_1
    del buf243
    # Source Nodes: [x_340, x_341], Original ATen: [aten.convolution, aten.relu]
    buf246 = extern_kernels.convolution(buf245, arg269_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf246, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg269_1
    del buf245
    # Source Nodes: [x_343], Original ATen: [aten.convolution]
    buf247 = extern_kernels.convolution(buf246, arg270_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf247, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg270_1
    del buf246
    buf248 = buf247; del buf247  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_61(c_void_p(buf248.data_ptr()), c_void_p(arg977_1.data_ptr()), c_void_p(arg978_1.data_ptr()), c_void_p(arg271_1.data_ptr()), c_void_p(arg272_1.data_ptr()))
    del arg271_1
    del arg272_1
    del arg977_1
    del arg978_1
    # Source Nodes: [x_344, x_345, x_346], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf249 = extern_kernels.convolution(buf248, arg273_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf249, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg273_1
    del buf248
    # Source Nodes: [x_348], Original ATen: [aten.convolution]
    buf250 = extern_kernels.convolution(buf249, arg274_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf250, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg274_1
    buf268 = reinterpret_tensor(buf223, (8, 1080, 42, 42), (1905120, 1764, 42, 1), 0); del buf223  # reuse
    buf251 = reinterpret_tensor(buf268, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf252 = buf249; del buf249  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_62(c_void_p(buf244.data_ptr()), c_void_p(arg974_1.data_ptr()), c_void_p(arg975_1.data_ptr()), c_void_p(arg267_1.data_ptr()), c_void_p(arg268_1.data_ptr()), c_void_p(buf250.data_ptr()), c_void_p(arg980_1.data_ptr()), c_void_p(arg981_1.data_ptr()), c_void_p(arg275_1.data_ptr()), c_void_p(arg276_1.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(buf252.data_ptr()))
    del arg267_1
    del arg268_1
    del arg275_1
    del arg276_1
    del arg974_1
    del arg975_1
    del arg980_1
    del arg981_1
    del buf244
    del buf250
    # Source Nodes: [x_350, x_351], Original ATen: [aten.convolution, aten.relu]
    buf253 = extern_kernels.convolution(buf252, arg277_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf253, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg277_1
    del buf252
    # Source Nodes: [x_353], Original ATen: [aten.convolution]
    buf254 = extern_kernels.convolution(buf253, arg278_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf254, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg278_1
    del buf253
    buf255 = buf254; del buf254  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_63(c_void_p(buf255.data_ptr()), c_void_p(arg983_1.data_ptr()), c_void_p(arg984_1.data_ptr()), c_void_p(arg279_1.data_ptr()), c_void_p(arg280_1.data_ptr()))
    del arg279_1
    del arg280_1
    del arg983_1
    del arg984_1
    # Source Nodes: [x_354, x_355, x_356], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf256 = extern_kernels.convolution(buf255, arg281_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf256, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg281_1
    del buf255
    # Source Nodes: [x_358], Original ATen: [aten.convolution]
    buf257 = extern_kernels.convolution(buf256, arg282_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf257, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg282_1
    del buf256
    # Source Nodes: [x_360, x_361], Original ATen: [aten.convolution, aten.relu]
    buf259 = extern_kernels.convolution(buf258, arg285_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf259, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg285_1
    del buf258
    # Source Nodes: [x_363], Original ATen: [aten.convolution]
    buf260 = extern_kernels.convolution(buf259, arg286_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf260, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg286_1
    del buf259
    buf261 = buf260; del buf260  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_64(c_void_p(buf261.data_ptr()), c_void_p(arg989_1.data_ptr()), c_void_p(arg990_1.data_ptr()), c_void_p(arg287_1.data_ptr()), c_void_p(arg288_1.data_ptr()))
    del arg287_1
    del arg288_1
    del arg989_1
    del arg990_1
    # Source Nodes: [x_364, x_365, x_366], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf262 = extern_kernels.convolution(buf261, arg289_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf262, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg289_1
    del buf261
    # Source Nodes: [x_368], Original ATen: [aten.convolution]
    buf263 = extern_kernels.convolution(buf262, arg290_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf263, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg290_1
    del buf262
    buf264 = reinterpret_tensor(buf268, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf265 = reinterpret_tensor(buf268, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf266 = reinterpret_tensor(buf268, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf267 = reinterpret_tensor(buf268, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    buf269 = buf218; del buf218  # reuse
    buf274 = reinterpret_tensor(buf217, (8, 1080, 42, 42), (1905120, 1, 45360, 1080), 0); del buf217  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_65(c_void_p(buf232.data_ptr()), c_void_p(arg962_1.data_ptr()), c_void_p(arg963_1.data_ptr()), c_void_p(arg251_1.data_ptr()), c_void_p(arg252_1.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(buf238.data_ptr()), c_void_p(arg968_1.data_ptr()), c_void_p(arg969_1.data_ptr()), c_void_p(arg259_1.data_ptr()), c_void_p(arg260_1.data_ptr()), c_void_p(buf221.data_ptr()), c_void_p(buf257.data_ptr()), c_void_p(arg986_1.data_ptr()), c_void_p(arg987_1.data_ptr()), c_void_p(arg283_1.data_ptr()), c_void_p(arg284_1.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(buf263.data_ptr()), c_void_p(arg992_1.data_ptr()), c_void_p(arg993_1.data_ptr()), c_void_p(arg291_1.data_ptr()), c_void_p(arg292_1.data_ptr()), c_void_p(buf220.data_ptr()), c_void_p(buf268.data_ptr()), c_void_p(buf264.data_ptr()), c_void_p(buf265.data_ptr()), c_void_p(buf266.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(buf269.data_ptr()), c_void_p(buf274.data_ptr()))
    del arg251_1
    del arg252_1
    del arg259_1
    del arg260_1
    del arg283_1
    del arg284_1
    del arg291_1
    del arg292_1
    del arg962_1
    del arg963_1
    del arg968_1
    del arg969_1
    del arg986_1
    del arg987_1
    del arg992_1
    del arg993_1
    del buf175
    del buf220
    del buf221
    del buf222
    del buf251
    del buf264
    del buf265
    del buf266
    del buf267
    del buf268
    # Source Nodes: [x_373, x_374], Original ATen: [aten.convolution, aten.relu]
    buf270 = extern_kernels.convolution(buf269, arg296_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf270, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg296_1
    buf271 = buf270; del buf270  # reuse
    buf272 = buf263; del buf263  # reuse
    buf273 = buf257; del buf257  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_66(c_void_p(buf271.data_ptr()), c_void_p(arg998_1.data_ptr()), c_void_p(arg999_1.data_ptr()), c_void_p(arg297_1.data_ptr()), c_void_p(arg298_1.data_ptr()), c_void_p(buf272.data_ptr()), c_void_p(buf273.data_ptr()))
    del arg297_1
    del arg298_1
    del arg998_1
    del arg999_1
    # Source Nodes: [x_436, x_437], Original ATen: [aten.convolution, aten.relu]
    buf275 = extern_kernels.convolution(buf274, arg347_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf275, (8, 432, 42, 42), (762048, 1, 18144, 432))
    del arg347_1
    buf276 = buf275; del buf275  # reuse
    buf277 = reinterpret_tensor(buf83, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf83  # reuse
    buf278 = buf238; del buf238  # reuse
    buf309 = buf232; del buf232  # reuse
    cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_relu_67(c_void_p(buf276.data_ptr()), c_void_p(arg1037_1.data_ptr()), c_void_p(arg1038_1.data_ptr()), c_void_p(arg348_1.data_ptr()), c_void_p(arg349_1.data_ptr()), c_void_p(buf225.data_ptr()), c_void_p(buf277.data_ptr()), c_void_p(buf278.data_ptr()), c_void_p(buf309.data_ptr()))
    del arg1037_1
    del arg1038_1
    del arg348_1
    del arg349_1
    del buf225
    # Source Nodes: [x_376, x_377], Original ATen: [aten.convolution, aten.relu]
    buf279 = extern_kernels.convolution(buf278, arg299_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf279, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg299_1
    del buf278
    # Source Nodes: [x_379], Original ATen: [aten.convolution]
    buf280 = extern_kernels.convolution(buf279, arg300_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf280, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg300_1
    buf281 = buf280; del buf280  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_68(c_void_p(buf281.data_ptr()), c_void_p(arg1001_1.data_ptr()), c_void_p(arg1002_1.data_ptr()), c_void_p(arg301_1.data_ptr()), c_void_p(arg302_1.data_ptr()))
    del arg1001_1
    del arg1002_1
    del arg301_1
    del arg302_1
    # Source Nodes: [x_380, x_381, x_382], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf282 = extern_kernels.convolution(buf281, arg303_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf282, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg303_1
    # Source Nodes: [x_384], Original ATen: [aten.convolution]
    buf283 = extern_kernels.convolution(buf282, arg304_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf283, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg304_1
    buf284 = buf282; del buf282  # reuse
    buf290 = buf281; del buf281  # reuse
    buf296 = buf279; del buf279  # reuse
    cpp_fused_relu_69(c_void_p(buf271.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(buf290.data_ptr()), c_void_p(buf296.data_ptr()))
    # Source Nodes: [x_386, x_387], Original ATen: [aten.convolution, aten.relu]
    buf285 = extern_kernels.convolution(buf284, arg307_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf285, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg307_1
    del buf284
    # Source Nodes: [x_389], Original ATen: [aten.convolution]
    buf286 = extern_kernels.convolution(buf285, arg308_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf286, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg308_1
    del buf285
    buf287 = buf286; del buf286  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_70(c_void_p(buf287.data_ptr()), c_void_p(arg1007_1.data_ptr()), c_void_p(arg1008_1.data_ptr()), c_void_p(arg309_1.data_ptr()), c_void_p(arg310_1.data_ptr()))
    del arg1007_1
    del arg1008_1
    del arg309_1
    del arg310_1
    # Source Nodes: [x_390, x_391, x_392], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf288 = extern_kernels.convolution(buf287, arg311_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf288, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg311_1
    del buf287
    # Source Nodes: [x_394], Original ATen: [aten.convolution]
    buf289 = extern_kernels.convolution(buf288, arg312_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf289, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg312_1
    del buf288
    # Source Nodes: [x_396, x_397], Original ATen: [aten.convolution, aten.relu]
    buf291 = extern_kernels.convolution(buf290, arg315_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf291, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg315_1
    del buf290
    # Source Nodes: [x_399], Original ATen: [aten.convolution]
    buf292 = extern_kernels.convolution(buf291, arg316_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf292, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg316_1
    del buf291
    buf293 = buf292; del buf292  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_71(c_void_p(buf293.data_ptr()), c_void_p(arg1013_1.data_ptr()), c_void_p(arg1014_1.data_ptr()), c_void_p(arg317_1.data_ptr()), c_void_p(arg318_1.data_ptr()))
    del arg1013_1
    del arg1014_1
    del arg317_1
    del arg318_1
    # Source Nodes: [x_400, x_401, x_402], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf294 = extern_kernels.convolution(buf293, arg319_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf294, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg319_1
    del buf293
    # Source Nodes: [x_404], Original ATen: [aten.convolution]
    buf295 = extern_kernels.convolution(buf294, arg320_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf295, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg320_1
    del buf294
    # Source Nodes: [x_406, x_407], Original ATen: [aten.convolution, aten.relu]
    buf297 = extern_kernels.convolution(buf296, arg323_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf297, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg323_1
    del buf296
    # Source Nodes: [x_409], Original ATen: [aten.convolution]
    buf298 = extern_kernels.convolution(buf297, arg324_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf298, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg324_1
    del buf297
    buf299 = buf298; del buf298  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_72(c_void_p(buf299.data_ptr()), c_void_p(arg1019_1.data_ptr()), c_void_p(arg1020_1.data_ptr()), c_void_p(arg325_1.data_ptr()), c_void_p(arg326_1.data_ptr()))
    del arg1019_1
    del arg1020_1
    del arg325_1
    del arg326_1
    # Source Nodes: [x_410, x_411, x_412], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf300 = extern_kernels.convolution(buf299, arg327_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf300, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg327_1
    del buf299
    # Source Nodes: [x_414], Original ATen: [aten.convolution]
    buf301 = extern_kernels.convolution(buf300, arg328_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf301, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg328_1
    buf319 = reinterpret_tensor(buf274, (8, 1080, 42, 42), (1905120, 1764, 42, 1), 0); del buf274  # reuse
    buf302 = reinterpret_tensor(buf319, (8, 216, 42, 42), (1905120, 1764, 42, 1), 762048)  # alias
    buf303 = buf300; del buf300  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_73(c_void_p(buf295.data_ptr()), c_void_p(arg1016_1.data_ptr()), c_void_p(arg1017_1.data_ptr()), c_void_p(arg321_1.data_ptr()), c_void_p(arg322_1.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(arg1022_1.data_ptr()), c_void_p(arg1023_1.data_ptr()), c_void_p(arg329_1.data_ptr()), c_void_p(arg330_1.data_ptr()), c_void_p(buf302.data_ptr()), c_void_p(buf303.data_ptr()))
    del arg1016_1
    del arg1017_1
    del arg1022_1
    del arg1023_1
    del arg321_1
    del arg322_1
    del arg329_1
    del arg330_1
    del buf295
    del buf301
    # Source Nodes: [x_416, x_417], Original ATen: [aten.convolution, aten.relu]
    buf304 = extern_kernels.convolution(buf303, arg331_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf304, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg331_1
    del buf303
    # Source Nodes: [x_419], Original ATen: [aten.convolution]
    buf305 = extern_kernels.convolution(buf304, arg332_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf305, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg332_1
    del buf304
    buf306 = buf305; del buf305  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_74(c_void_p(buf306.data_ptr()), c_void_p(arg1025_1.data_ptr()), c_void_p(arg1026_1.data_ptr()), c_void_p(arg333_1.data_ptr()), c_void_p(arg334_1.data_ptr()))
    del arg1025_1
    del arg1026_1
    del arg333_1
    del arg334_1
    # Source Nodes: [x_420, x_421, x_422], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf307 = extern_kernels.convolution(buf306, arg335_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf307, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg335_1
    del buf306
    # Source Nodes: [x_424], Original ATen: [aten.convolution]
    buf308 = extern_kernels.convolution(buf307, arg336_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf308, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg336_1
    del buf307
    # Source Nodes: [x_426, x_427], Original ATen: [aten.convolution, aten.relu]
    buf310 = extern_kernels.convolution(buf309, arg339_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf310, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg339_1
    del buf309
    # Source Nodes: [x_429], Original ATen: [aten.convolution]
    buf311 = extern_kernels.convolution(buf310, arg340_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf311, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg340_1
    del buf310
    buf312 = buf311; del buf311  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_75(c_void_p(buf312.data_ptr()), c_void_p(arg1031_1.data_ptr()), c_void_p(arg1032_1.data_ptr()), c_void_p(arg341_1.data_ptr()), c_void_p(arg342_1.data_ptr()))
    del arg1031_1
    del arg1032_1
    del arg341_1
    del arg342_1
    # Source Nodes: [x_430, x_431, x_432], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf313 = extern_kernels.convolution(buf312, arg343_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=216, bias=None)
    assert_size_stride(buf313, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg343_1
    del buf312
    # Source Nodes: [x_434], Original ATen: [aten.convolution]
    buf314 = extern_kernels.convolution(buf313, arg344_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf314, (8, 216, 42, 42), (381024, 1, 9072, 216))
    del arg344_1
    del buf313
    buf315 = reinterpret_tensor(buf319, (8, 216, 42, 42), (1905120, 1764, 42, 1), 0)  # alias
    buf316 = reinterpret_tensor(buf319, (8, 216, 42, 42), (1905120, 1764, 42, 1), 381024)  # alias
    buf317 = reinterpret_tensor(buf319, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1143072)  # alias
    buf318 = reinterpret_tensor(buf319, (8, 216, 42, 42), (1905120, 1764, 42, 1), 1524096)  # alias
    buf320 = buf269; del buf269  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_76(c_void_p(buf283.data_ptr()), c_void_p(arg1004_1.data_ptr()), c_void_p(arg1005_1.data_ptr()), c_void_p(arg305_1.data_ptr()), c_void_p(arg306_1.data_ptr()), c_void_p(buf226.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(arg1010_1.data_ptr()), c_void_p(arg1011_1.data_ptr()), c_void_p(arg313_1.data_ptr()), c_void_p(arg314_1.data_ptr()), c_void_p(buf272.data_ptr()), c_void_p(buf308.data_ptr()), c_void_p(arg1028_1.data_ptr()), c_void_p(arg1029_1.data_ptr()), c_void_p(arg337_1.data_ptr()), c_void_p(arg338_1.data_ptr()), c_void_p(buf273.data_ptr()), c_void_p(buf314.data_ptr()), c_void_p(arg1034_1.data_ptr()), c_void_p(arg1035_1.data_ptr()), c_void_p(arg345_1.data_ptr()), c_void_p(arg346_1.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf315.data_ptr()), c_void_p(buf316.data_ptr()), c_void_p(buf317.data_ptr()), c_void_p(buf318.data_ptr()), c_void_p(buf320.data_ptr()))
    del arg1004_1
    del arg1005_1
    del arg1010_1
    del arg1011_1
    del arg1028_1
    del arg1029_1
    del arg1034_1
    del arg1035_1
    del arg305_1
    del arg306_1
    del arg313_1
    del arg314_1
    del arg337_1
    del arg338_1
    del arg345_1
    del arg346_1
    del buf226
    del buf271
    del buf272
    del buf273
    del buf283
    del buf289
    del buf302
    del buf308
    del buf314
    del buf315
    del buf316
    del buf317
    del buf318
    # Source Nodes: [x_439, x_440], Original ATen: [aten.convolution, aten.relu]
    buf321 = extern_kernels.convolution(buf320, arg350_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf321, (8, 432, 42, 42), (762048, 1, 18144, 432))
    del arg350_1
    del buf320
    buf322 = buf321; del buf321  # reuse
    buf323 = reinterpret_tensor(buf77, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf77  # reuse
    buf324 = reinterpret_tensor(buf65, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf65  # reuse
    buf325 = reinterpret_tensor(buf68, (8, 1080, 21, 21), (476280, 1, 22680, 1080), 0); del buf68  # reuse
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_77(c_void_p(buf322.data_ptr()), c_void_p(arg1040_1.data_ptr()), c_void_p(arg1041_1.data_ptr()), c_void_p(arg351_1.data_ptr()), c_void_p(arg352_1.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf325.data_ptr()))
    del arg1040_1
    del arg1041_1
    del arg351_1
    del arg352_1
    # Source Nodes: [l__mod___cell_5_conv_prev_1x1_path_1_avgpool, x_523, x_path1_2], Original ATen: [aten.avg_pool2d, aten.convolution, aten.relu]
    buf326 = extern_kernels.convolution(buf325, arg398_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf326, (8, 216, 21, 21), (95256, 1, 4536, 216))
    del arg398_1
    buf327 = buf325; del buf325  # reuse
    cpp_fused_avg_pool2d_constant_pad_nd_relu_78(c_void_p(buf319.data_ptr()), c_void_p(buf327.data_ptr()))
    del buf319
    # Source Nodes: [l__mod___cell_5_conv_prev_1x1_path_2_avgpool, l__mod___cell_5_conv_prev_1x1_path_2_pad, x_523, x_path2_2], Original ATen: [aten.avg_pool2d, aten.constant_pad_nd, aten.convolution, aten.relu]
    buf328 = extern_kernels.convolution(buf327, arg399_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf328, (8, 216, 21, 21), (95256, 1, 4536, 216))
    del arg399_1
    del buf327
    buf329 = reinterpret_tensor(buf64, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf64  # reuse
    buf330 = reinterpret_tensor(buf15, (8, 432, 21, 21), (190512, 1, 9072, 432), 0); del buf15  # reuse
    buf331 = empty_strided((8, 432, 45, 45), (874800, 1, 19440, 432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_79(c_void_p(buf326.data_ptr()), c_void_p(buf328.data_ptr()), c_void_p(arg1082_1.data_ptr()), c_void_p(arg1083_1.data_ptr()), c_void_p(arg400_1.data_ptr()), c_void_p(arg401_1.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(buf331.data_ptr()))
    del arg1082_1
    del arg1083_1
    del arg400_1
    del arg401_1
    del buf326
    del buf328
    # Source Nodes: [x_442, x_444, x_445], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf332 = extern_kernels.convolution(buf331, arg14_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf332, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg14_1
    # Source Nodes: [x_447], Original ATen: [aten.convolution]
    buf333 = extern_kernels.convolution(buf332, arg353_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf333, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg353_1
    del buf332
    buf334 = buf333; del buf333  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_80(c_void_p(buf334.data_ptr()), c_void_p(arg1043_1.data_ptr()), c_void_p(arg1044_1.data_ptr()), c_void_p(arg354_1.data_ptr()), c_void_p(arg355_1.data_ptr()))
    del arg1043_1
    del arg1044_1
    del arg354_1
    del arg355_1
    # Source Nodes: [x_448, x_449, x_450], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf335 = extern_kernels.convolution(buf334, arg356_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf335, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg356_1
    del buf334
    # Source Nodes: [x_452], Original ATen: [aten.convolution]
    buf336 = extern_kernels.convolution(buf335, arg357_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf336, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg357_1
    del buf335
    buf337 = empty_strided((8, 432, 47, 47), (954288, 1, 20304, 432), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_81(c_void_p(buf322.data_ptr()), c_void_p(buf337.data_ptr()))
    # Source Nodes: [x_456, x_458, x_459], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf338 = extern_kernels.convolution(buf337, arg15_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf338, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg15_1
    del buf337
    # Source Nodes: [x_461], Original ATen: [aten.convolution]
    buf339 = extern_kernels.convolution(buf338, arg360_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf339, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg360_1
    del buf338
    buf340 = buf339; del buf339  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_82(c_void_p(buf340.data_ptr()), c_void_p(arg1049_1.data_ptr()), c_void_p(arg1050_1.data_ptr()), c_void_p(arg361_1.data_ptr()), c_void_p(arg362_1.data_ptr()))
    del arg1049_1
    del arg1050_1
    del arg361_1
    del arg362_1
    # Source Nodes: [x_462, x_463, x_464], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf341 = extern_kernels.convolution(buf340, arg363_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf341, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg363_1
    del buf340
    # Source Nodes: [x_466], Original ATen: [aten.convolution]
    buf342 = extern_kernels.convolution(buf341, arg364_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf342, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg364_1
    del buf341
    buf343 = buf331; del buf331  # reuse
    cpp_fused_constant_pad_nd_relu_83(c_void_p(buf322.data_ptr()), c_void_p(buf343.data_ptr()))
    # Source Nodes: [x_470, x_472, x_473], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf344 = extern_kernels.convolution(buf343, arg16_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf344, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg16_1
    del buf343
    # Source Nodes: [x_475], Original ATen: [aten.convolution]
    buf345 = extern_kernels.convolution(buf344, arg367_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf345, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg367_1
    del buf344
    buf346 = buf345; del buf345  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_84(c_void_p(buf346.data_ptr()), c_void_p(arg1055_1.data_ptr()), c_void_p(arg1056_1.data_ptr()), c_void_p(arg368_1.data_ptr()), c_void_p(arg369_1.data_ptr()))
    del arg1055_1
    del arg1056_1
    del arg368_1
    del arg369_1
    # Source Nodes: [x_476, x_477, x_478], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf347 = extern_kernels.convolution(buf346, arg370_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf347, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg370_1
    del buf346
    # Source Nodes: [x_480], Original ATen: [aten.convolution]
    buf348 = extern_kernels.convolution(buf347, arg371_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf348, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg371_1
    del buf347
    buf349 = empty_strided((8, 432, 43, 43), (798768, 1, 18576, 432), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_85(c_void_p(buf322.data_ptr()), c_void_p(buf349.data_ptr()))
    # Source Nodes: [x_482, x_484, x_485], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf350 = extern_kernels.convolution(buf349, arg17_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf350, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg17_1
    # Source Nodes: [x_487], Original ATen: [aten.convolution]
    buf351 = extern_kernels.convolution(buf350, arg374_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf351, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg374_1
    del buf350
    buf352 = buf351; del buf351  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_86(c_void_p(buf352.data_ptr()), c_void_p(arg1061_1.data_ptr()), c_void_p(arg1062_1.data_ptr()), c_void_p(arg375_1.data_ptr()), c_void_p(arg376_1.data_ptr()))
    del arg1061_1
    del arg1062_1
    del arg375_1
    del arg376_1
    # Source Nodes: [x_488, x_489, x_490], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf353 = extern_kernels.convolution(buf352, arg377_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf353, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg377_1
    del buf352
    # Source Nodes: [x_492], Original ATen: [aten.convolution]
    buf354 = extern_kernels.convolution(buf353, arg378_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf354, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg378_1
    buf374 = reinterpret_tensor(buf121, (8, 2160, 21, 21), (952560, 441, 21, 1), 0); del buf121  # reuse
    buf355 = reinterpret_tensor(buf374, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf356 = buf353; del buf353  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_87(c_void_p(buf348.data_ptr()), c_void_p(arg1058_1.data_ptr()), c_void_p(arg1059_1.data_ptr()), c_void_p(arg372_1.data_ptr()), c_void_p(arg373_1.data_ptr()), c_void_p(buf354.data_ptr()), c_void_p(arg1064_1.data_ptr()), c_void_p(arg1065_1.data_ptr()), c_void_p(arg379_1.data_ptr()), c_void_p(arg380_1.data_ptr()), c_void_p(buf355.data_ptr()), c_void_p(buf356.data_ptr()))
    del arg1058_1
    del arg1059_1
    del arg1064_1
    del arg1065_1
    del arg372_1
    del arg373_1
    del arg379_1
    del arg380_1
    del buf348
    del buf354
    # Source Nodes: [x_494, x_495], Original ATen: [aten.convolution, aten.relu]
    buf357 = extern_kernels.convolution(buf356, arg381_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf357, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg381_1
    del buf356
    # Source Nodes: [x_497], Original ATen: [aten.convolution]
    buf358 = extern_kernels.convolution(buf357, arg382_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf358, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg382_1
    del buf357
    buf359 = buf358; del buf358  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_88(c_void_p(buf359.data_ptr()), c_void_p(arg1067_1.data_ptr()), c_void_p(arg1068_1.data_ptr()), c_void_p(arg383_1.data_ptr()), c_void_p(arg384_1.data_ptr()))
    del arg1067_1
    del arg1068_1
    del arg383_1
    del arg384_1
    # Source Nodes: [x_498, x_499, x_500], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf360 = extern_kernels.convolution(buf359, arg385_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf360, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg385_1
    del buf359
    # Source Nodes: [x_502], Original ATen: [aten.convolution]
    buf361 = extern_kernels.convolution(buf360, arg386_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf361, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg386_1
    del buf360
    buf362 = buf349; del buf349  # reuse
    cpp_fused_constant_pad_nd_relu_89(c_void_p(buf276.data_ptr()), c_void_p(buf362.data_ptr()))
    del buf276
    # Source Nodes: [x_506, x_508, x_509], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf363 = extern_kernels.convolution(buf362, arg18_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf363, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg18_1
    del buf362
    # Source Nodes: [x_511], Original ATen: [aten.convolution]
    buf364 = extern_kernels.convolution(buf363, arg389_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf364, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg389_1
    del buf363
    buf365 = buf364; del buf364  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_90(c_void_p(buf365.data_ptr()), c_void_p(arg1073_1.data_ptr()), c_void_p(arg1074_1.data_ptr()), c_void_p(arg390_1.data_ptr()), c_void_p(arg391_1.data_ptr()))
    del arg1073_1
    del arg1074_1
    del arg390_1
    del arg391_1
    # Source Nodes: [x_512, x_513, x_514], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf366 = extern_kernels.convolution(buf365, arg392_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf366, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg392_1
    del buf365
    # Source Nodes: [x_516], Original ATen: [aten.convolution]
    buf367 = extern_kernels.convolution(buf366, arg393_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf367, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg393_1
    del buf366
    buf368 = buf322; del buf322  # reuse
    cpp_fused_relu_91(c_void_p(buf368.data_ptr()))
    # Source Nodes: [x_518, x_521], Original ATen: [aten.convolution, aten.relu]
    buf369 = extern_kernels.convolution(buf368, arg19_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf369, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg19_1
    del buf368
    buf370 = reinterpret_tensor(buf374, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    buf371 = reinterpret_tensor(buf374, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf372 = reinterpret_tensor(buf374, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf373 = reinterpret_tensor(buf374, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf375 = reinterpret_tensor(buf116, (8, 2160, 21, 21), (952560, 1, 45360, 2160), 0); del buf116  # reuse
    buf380 = reinterpret_tensor(buf115, (8, 2160, 21, 21), (952560, 1, 45360, 2160), 0); del buf115  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_92(c_void_p(buf367.data_ptr()), c_void_p(arg1076_1.data_ptr()), c_void_p(arg1077_1.data_ptr()), c_void_p(arg394_1.data_ptr()), c_void_p(arg395_1.data_ptr()), c_void_p(buf369.data_ptr()), c_void_p(arg1079_1.data_ptr()), c_void_p(arg1080_1.data_ptr()), c_void_p(arg396_1.data_ptr()), c_void_p(arg397_1.data_ptr()), c_void_p(buf336.data_ptr()), c_void_p(arg1046_1.data_ptr()), c_void_p(arg1047_1.data_ptr()), c_void_p(arg358_1.data_ptr()), c_void_p(arg359_1.data_ptr()), c_void_p(buf277.data_ptr()), c_void_p(buf342.data_ptr()), c_void_p(arg1052_1.data_ptr()), c_void_p(arg1053_1.data_ptr()), c_void_p(arg365_1.data_ptr()), c_void_p(arg366_1.data_ptr()), c_void_p(buf323.data_ptr()), c_void_p(buf361.data_ptr()), c_void_p(arg1070_1.data_ptr()), c_void_p(arg1071_1.data_ptr()), c_void_p(arg387_1.data_ptr()), c_void_p(arg388_1.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(buf371.data_ptr()), c_void_p(buf372.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(buf375.data_ptr()), c_void_p(buf380.data_ptr()))
    del arg1046_1
    del arg1047_1
    del arg1052_1
    del arg1053_1
    del arg1070_1
    del arg1071_1
    del arg1076_1
    del arg1077_1
    del arg1079_1
    del arg1080_1
    del arg358_1
    del arg359_1
    del arg365_1
    del arg366_1
    del arg387_1
    del arg388_1
    del arg394_1
    del arg395_1
    del arg396_1
    del arg397_1
    del buf277
    del buf323
    del buf324
    del buf355
    del buf370
    del buf371
    del buf372
    del buf373
    # Source Nodes: [x_524, x_525], Original ATen: [aten.convolution, aten.relu]
    buf376 = extern_kernels.convolution(buf375, arg402_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf376, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg402_1
    buf377 = buf376; del buf376  # reuse
    buf378 = buf369; del buf369  # reuse
    buf379 = buf367; del buf367  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_93(c_void_p(buf377.data_ptr()), c_void_p(arg1085_1.data_ptr()), c_void_p(arg1086_1.data_ptr()), c_void_p(arg403_1.data_ptr()), c_void_p(arg404_1.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf379.data_ptr()))
    del arg1085_1
    del arg1086_1
    del arg403_1
    del arg404_1
    # Source Nodes: [x_587, x_588], Original ATen: [aten.convolution, aten.relu]
    buf381 = extern_kernels.convolution(buf380, arg453_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf381, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg453_1
    buf382 = buf381; del buf381  # reuse
    buf383 = buf361; del buf361  # reuse
    buf384 = buf342; del buf342  # reuse
    buf415 = buf336; del buf336  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_94(c_void_p(buf382.data_ptr()), c_void_p(arg1124_1.data_ptr()), c_void_p(arg1125_1.data_ptr()), c_void_p(arg454_1.data_ptr()), c_void_p(arg455_1.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf415.data_ptr()))
    del arg1124_1
    del arg1125_1
    del arg454_1
    del arg455_1
    del buf329
    # Source Nodes: [x_527, x_528], Original ATen: [aten.convolution, aten.relu]
    buf385 = extern_kernels.convolution(buf384, arg405_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf385, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg405_1
    del buf384
    # Source Nodes: [x_530], Original ATen: [aten.convolution]
    buf386 = extern_kernels.convolution(buf385, arg406_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf386, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg406_1
    buf387 = buf386; del buf386  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_95(c_void_p(buf387.data_ptr()), c_void_p(arg1088_1.data_ptr()), c_void_p(arg1089_1.data_ptr()), c_void_p(arg407_1.data_ptr()), c_void_p(arg408_1.data_ptr()))
    del arg1088_1
    del arg1089_1
    del arg407_1
    del arg408_1
    # Source Nodes: [x_531, x_532, x_533], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf388 = extern_kernels.convolution(buf387, arg409_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf388, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg409_1
    # Source Nodes: [x_535], Original ATen: [aten.convolution]
    buf389 = extern_kernels.convolution(buf388, arg410_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf389, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg410_1
    buf390 = buf388; del buf388  # reuse
    buf396 = buf387; del buf387  # reuse
    buf402 = buf385; del buf385  # reuse
    cpp_fused_relu_96(c_void_p(buf377.data_ptr()), c_void_p(buf390.data_ptr()), c_void_p(buf396.data_ptr()), c_void_p(buf402.data_ptr()))
    # Source Nodes: [x_537, x_538], Original ATen: [aten.convolution, aten.relu]
    buf391 = extern_kernels.convolution(buf390, arg413_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf391, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg413_1
    del buf390
    # Source Nodes: [x_540], Original ATen: [aten.convolution]
    buf392 = extern_kernels.convolution(buf391, arg414_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf392, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg414_1
    del buf391
    buf393 = buf392; del buf392  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_97(c_void_p(buf393.data_ptr()), c_void_p(arg1094_1.data_ptr()), c_void_p(arg1095_1.data_ptr()), c_void_p(arg415_1.data_ptr()), c_void_p(arg416_1.data_ptr()))
    del arg1094_1
    del arg1095_1
    del arg415_1
    del arg416_1
    # Source Nodes: [x_541, x_542, x_543], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf394 = extern_kernels.convolution(buf393, arg417_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf394, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg417_1
    del buf393
    # Source Nodes: [x_545], Original ATen: [aten.convolution]
    buf395 = extern_kernels.convolution(buf394, arg418_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf395, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg418_1
    del buf394
    # Source Nodes: [x_547, x_548], Original ATen: [aten.convolution, aten.relu]
    buf397 = extern_kernels.convolution(buf396, arg421_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf397, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg421_1
    del buf396
    # Source Nodes: [x_550], Original ATen: [aten.convolution]
    buf398 = extern_kernels.convolution(buf397, arg422_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf398, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg422_1
    del buf397
    buf399 = buf398; del buf398  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_98(c_void_p(buf399.data_ptr()), c_void_p(arg1100_1.data_ptr()), c_void_p(arg1101_1.data_ptr()), c_void_p(arg423_1.data_ptr()), c_void_p(arg424_1.data_ptr()))
    del arg1100_1
    del arg1101_1
    del arg423_1
    del arg424_1
    # Source Nodes: [x_551, x_552, x_553], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf400 = extern_kernels.convolution(buf399, arg425_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf400, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg425_1
    del buf399
    # Source Nodes: [x_555], Original ATen: [aten.convolution]
    buf401 = extern_kernels.convolution(buf400, arg426_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf401, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg426_1
    del buf400
    # Source Nodes: [x_557, x_558], Original ATen: [aten.convolution, aten.relu]
    buf403 = extern_kernels.convolution(buf402, arg429_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf403, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg429_1
    del buf402
    # Source Nodes: [x_560], Original ATen: [aten.convolution]
    buf404 = extern_kernels.convolution(buf403, arg430_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf404, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg430_1
    del buf403
    buf405 = buf404; del buf404  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_99(c_void_p(buf405.data_ptr()), c_void_p(arg1106_1.data_ptr()), c_void_p(arg1107_1.data_ptr()), c_void_p(arg431_1.data_ptr()), c_void_p(arg432_1.data_ptr()))
    del arg1106_1
    del arg1107_1
    del arg431_1
    del arg432_1
    # Source Nodes: [x_561, x_562, x_563], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf406 = extern_kernels.convolution(buf405, arg433_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf406, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg433_1
    del buf405
    # Source Nodes: [x_565], Original ATen: [aten.convolution]
    buf407 = extern_kernels.convolution(buf406, arg434_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf407, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg434_1
    buf425 = reinterpret_tensor(buf380, (8, 2160, 21, 21), (952560, 441, 21, 1), 0); del buf380  # reuse
    buf408 = reinterpret_tensor(buf425, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf409 = buf406; del buf406  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_100(c_void_p(buf401.data_ptr()), c_void_p(arg1103_1.data_ptr()), c_void_p(arg1104_1.data_ptr()), c_void_p(arg427_1.data_ptr()), c_void_p(arg428_1.data_ptr()), c_void_p(buf407.data_ptr()), c_void_p(arg1109_1.data_ptr()), c_void_p(arg1110_1.data_ptr()), c_void_p(arg435_1.data_ptr()), c_void_p(arg436_1.data_ptr()), c_void_p(buf408.data_ptr()), c_void_p(buf409.data_ptr()))
    del arg1103_1
    del arg1104_1
    del arg1109_1
    del arg1110_1
    del arg427_1
    del arg428_1
    del arg435_1
    del arg436_1
    del buf401
    del buf407
    # Source Nodes: [x_567, x_568], Original ATen: [aten.convolution, aten.relu]
    buf410 = extern_kernels.convolution(buf409, arg437_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf410, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg437_1
    del buf409
    # Source Nodes: [x_570], Original ATen: [aten.convolution]
    buf411 = extern_kernels.convolution(buf410, arg438_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf411, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg438_1
    del buf410
    buf412 = buf411; del buf411  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_101(c_void_p(buf412.data_ptr()), c_void_p(arg1112_1.data_ptr()), c_void_p(arg1113_1.data_ptr()), c_void_p(arg439_1.data_ptr()), c_void_p(arg440_1.data_ptr()))
    del arg1112_1
    del arg1113_1
    del arg439_1
    del arg440_1
    # Source Nodes: [x_571, x_572, x_573], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf413 = extern_kernels.convolution(buf412, arg441_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf413, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg441_1
    del buf412
    # Source Nodes: [x_575], Original ATen: [aten.convolution]
    buf414 = extern_kernels.convolution(buf413, arg442_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf414, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg442_1
    del buf413
    # Source Nodes: [x_577, x_578], Original ATen: [aten.convolution, aten.relu]
    buf416 = extern_kernels.convolution(buf415, arg445_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf416, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg445_1
    del buf415
    # Source Nodes: [x_580], Original ATen: [aten.convolution]
    buf417 = extern_kernels.convolution(buf416, arg446_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf417, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg446_1
    del buf416
    buf418 = buf417; del buf417  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_102(c_void_p(buf418.data_ptr()), c_void_p(arg1118_1.data_ptr()), c_void_p(arg1119_1.data_ptr()), c_void_p(arg447_1.data_ptr()), c_void_p(arg448_1.data_ptr()))
    del arg1118_1
    del arg1119_1
    del arg447_1
    del arg448_1
    # Source Nodes: [x_581, x_582, x_583], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf419 = extern_kernels.convolution(buf418, arg449_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf419, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg449_1
    del buf418
    # Source Nodes: [x_585], Original ATen: [aten.convolution]
    buf420 = extern_kernels.convolution(buf419, arg450_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf420, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg450_1
    del buf419
    buf421 = reinterpret_tensor(buf425, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf422 = reinterpret_tensor(buf425, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf423 = reinterpret_tensor(buf425, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf424 = reinterpret_tensor(buf425, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    buf426 = buf375; del buf375  # reuse
    buf431 = reinterpret_tensor(buf374, (8, 2160, 21, 21), (952560, 1, 45360, 2160), 0); del buf374  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_103(c_void_p(buf389.data_ptr()), c_void_p(arg1091_1.data_ptr()), c_void_p(arg1092_1.data_ptr()), c_void_p(arg411_1.data_ptr()), c_void_p(arg412_1.data_ptr()), c_void_p(buf330.data_ptr()), c_void_p(buf395.data_ptr()), c_void_p(arg1097_1.data_ptr()), c_void_p(arg1098_1.data_ptr()), c_void_p(arg419_1.data_ptr()), c_void_p(arg420_1.data_ptr()), c_void_p(buf378.data_ptr()), c_void_p(buf414.data_ptr()), c_void_p(arg1115_1.data_ptr()), c_void_p(arg1116_1.data_ptr()), c_void_p(arg443_1.data_ptr()), c_void_p(arg444_1.data_ptr()), c_void_p(buf379.data_ptr()), c_void_p(buf420.data_ptr()), c_void_p(arg1121_1.data_ptr()), c_void_p(arg1122_1.data_ptr()), c_void_p(arg451_1.data_ptr()), c_void_p(arg452_1.data_ptr()), c_void_p(buf377.data_ptr()), c_void_p(buf425.data_ptr()), c_void_p(buf421.data_ptr()), c_void_p(buf422.data_ptr()), c_void_p(buf423.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(buf426.data_ptr()), c_void_p(buf431.data_ptr()))
    del arg1091_1
    del arg1092_1
    del arg1097_1
    del arg1098_1
    del arg1115_1
    del arg1116_1
    del arg1121_1
    del arg1122_1
    del arg411_1
    del arg412_1
    del arg419_1
    del arg420_1
    del arg443_1
    del arg444_1
    del arg451_1
    del arg452_1
    del buf330
    del buf377
    del buf378
    del buf408
    del buf421
    del buf422
    del buf423
    del buf424
    # Source Nodes: [x_590, x_591], Original ATen: [aten.convolution, aten.relu]
    buf427 = extern_kernels.convolution(buf426, arg456_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf427, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg456_1
    buf428 = buf427; del buf427  # reuse
    buf429 = buf420; del buf420  # reuse
    buf430 = buf414; del buf414  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_104(c_void_p(buf428.data_ptr()), c_void_p(arg1127_1.data_ptr()), c_void_p(arg1128_1.data_ptr()), c_void_p(arg457_1.data_ptr()), c_void_p(arg458_1.data_ptr()), c_void_p(buf429.data_ptr()), c_void_p(buf430.data_ptr()))
    del arg1127_1
    del arg1128_1
    del arg457_1
    del arg458_1
    # Source Nodes: [x_653, x_654], Original ATen: [aten.convolution, aten.relu]
    buf432 = extern_kernels.convolution(buf431, arg507_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf432, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg507_1
    buf433 = buf432; del buf432  # reuse
    buf434 = buf395; del buf395  # reuse
    buf435 = buf389; del buf389  # reuse
    buf466 = buf379; del buf379  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_105(c_void_p(buf433.data_ptr()), c_void_p(arg1166_1.data_ptr()), c_void_p(arg1167_1.data_ptr()), c_void_p(arg508_1.data_ptr()), c_void_p(arg509_1.data_ptr()), c_void_p(buf382.data_ptr()), c_void_p(buf434.data_ptr()), c_void_p(buf435.data_ptr()), c_void_p(buf466.data_ptr()))
    del arg1166_1
    del arg1167_1
    del arg508_1
    del arg509_1
    del buf382
    # Source Nodes: [x_593, x_594], Original ATen: [aten.convolution, aten.relu]
    buf436 = extern_kernels.convolution(buf435, arg459_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf436, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg459_1
    del buf435
    # Source Nodes: [x_596], Original ATen: [aten.convolution]
    buf437 = extern_kernels.convolution(buf436, arg460_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf437, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg460_1
    buf438 = buf437; del buf437  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_106(c_void_p(buf438.data_ptr()), c_void_p(arg1130_1.data_ptr()), c_void_p(arg1131_1.data_ptr()), c_void_p(arg461_1.data_ptr()), c_void_p(arg462_1.data_ptr()))
    del arg1130_1
    del arg1131_1
    del arg461_1
    del arg462_1
    # Source Nodes: [x_597, x_598, x_599], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf439 = extern_kernels.convolution(buf438, arg463_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf439, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg463_1
    # Source Nodes: [x_601], Original ATen: [aten.convolution]
    buf440 = extern_kernels.convolution(buf439, arg464_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf440, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg464_1
    buf441 = buf439; del buf439  # reuse
    buf447 = buf438; del buf438  # reuse
    buf453 = buf436; del buf436  # reuse
    cpp_fused_relu_107(c_void_p(buf428.data_ptr()), c_void_p(buf441.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(buf453.data_ptr()))
    # Source Nodes: [x_603, x_604], Original ATen: [aten.convolution, aten.relu]
    buf442 = extern_kernels.convolution(buf441, arg467_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf442, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg467_1
    del buf441
    # Source Nodes: [x_606], Original ATen: [aten.convolution]
    buf443 = extern_kernels.convolution(buf442, arg468_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf443, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg468_1
    del buf442
    buf444 = buf443; del buf443  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_108(c_void_p(buf444.data_ptr()), c_void_p(arg1136_1.data_ptr()), c_void_p(arg1137_1.data_ptr()), c_void_p(arg469_1.data_ptr()), c_void_p(arg470_1.data_ptr()))
    del arg1136_1
    del arg1137_1
    del arg469_1
    del arg470_1
    # Source Nodes: [x_607, x_608, x_609], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf445 = extern_kernels.convolution(buf444, arg471_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf445, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg471_1
    del buf444
    # Source Nodes: [x_611], Original ATen: [aten.convolution]
    buf446 = extern_kernels.convolution(buf445, arg472_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf446, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg472_1
    del buf445
    # Source Nodes: [x_613, x_614], Original ATen: [aten.convolution, aten.relu]
    buf448 = extern_kernels.convolution(buf447, arg475_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf448, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg475_1
    del buf447
    # Source Nodes: [x_616], Original ATen: [aten.convolution]
    buf449 = extern_kernels.convolution(buf448, arg476_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf449, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg476_1
    del buf448
    buf450 = buf449; del buf449  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_109(c_void_p(buf450.data_ptr()), c_void_p(arg1142_1.data_ptr()), c_void_p(arg1143_1.data_ptr()), c_void_p(arg477_1.data_ptr()), c_void_p(arg478_1.data_ptr()))
    del arg1142_1
    del arg1143_1
    del arg477_1
    del arg478_1
    # Source Nodes: [x_617, x_618, x_619], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf451 = extern_kernels.convolution(buf450, arg479_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf451, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg479_1
    del buf450
    # Source Nodes: [x_621], Original ATen: [aten.convolution]
    buf452 = extern_kernels.convolution(buf451, arg480_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf452, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg480_1
    del buf451
    # Source Nodes: [x_623, x_624], Original ATen: [aten.convolution, aten.relu]
    buf454 = extern_kernels.convolution(buf453, arg483_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf454, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg483_1
    del buf453
    # Source Nodes: [x_626], Original ATen: [aten.convolution]
    buf455 = extern_kernels.convolution(buf454, arg484_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf455, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg484_1
    del buf454
    buf456 = buf455; del buf455  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_110(c_void_p(buf456.data_ptr()), c_void_p(arg1148_1.data_ptr()), c_void_p(arg1149_1.data_ptr()), c_void_p(arg485_1.data_ptr()), c_void_p(arg486_1.data_ptr()))
    del arg1148_1
    del arg1149_1
    del arg485_1
    del arg486_1
    # Source Nodes: [x_627, x_628, x_629], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf457 = extern_kernels.convolution(buf456, arg487_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf457, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg487_1
    del buf456
    # Source Nodes: [x_631], Original ATen: [aten.convolution]
    buf458 = extern_kernels.convolution(buf457, arg488_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf458, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg488_1
    buf476 = reinterpret_tensor(buf431, (8, 2160, 21, 21), (952560, 441, 21, 1), 0); del buf431  # reuse
    buf459 = reinterpret_tensor(buf476, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf460 = buf457; del buf457  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_111(c_void_p(buf452.data_ptr()), c_void_p(arg1145_1.data_ptr()), c_void_p(arg1146_1.data_ptr()), c_void_p(arg481_1.data_ptr()), c_void_p(arg482_1.data_ptr()), c_void_p(buf458.data_ptr()), c_void_p(arg1151_1.data_ptr()), c_void_p(arg1152_1.data_ptr()), c_void_p(arg489_1.data_ptr()), c_void_p(arg490_1.data_ptr()), c_void_p(buf459.data_ptr()), c_void_p(buf460.data_ptr()))
    del arg1145_1
    del arg1146_1
    del arg1151_1
    del arg1152_1
    del arg481_1
    del arg482_1
    del arg489_1
    del arg490_1
    del buf452
    del buf458
    # Source Nodes: [x_633, x_634], Original ATen: [aten.convolution, aten.relu]
    buf461 = extern_kernels.convolution(buf460, arg491_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf461, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg491_1
    del buf460
    # Source Nodes: [x_636], Original ATen: [aten.convolution]
    buf462 = extern_kernels.convolution(buf461, arg492_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf462, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg492_1
    del buf461
    buf463 = buf462; del buf462  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_112(c_void_p(buf463.data_ptr()), c_void_p(arg1154_1.data_ptr()), c_void_p(arg1155_1.data_ptr()), c_void_p(arg493_1.data_ptr()), c_void_p(arg494_1.data_ptr()))
    del arg1154_1
    del arg1155_1
    del arg493_1
    del arg494_1
    # Source Nodes: [x_637, x_638, x_639], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf464 = extern_kernels.convolution(buf463, arg495_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf464, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg495_1
    del buf463
    # Source Nodes: [x_641], Original ATen: [aten.convolution]
    buf465 = extern_kernels.convolution(buf464, arg496_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf465, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg496_1
    del buf464
    # Source Nodes: [x_643, x_644], Original ATen: [aten.convolution, aten.relu]
    buf467 = extern_kernels.convolution(buf466, arg499_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf467, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg499_1
    del buf466
    # Source Nodes: [x_646], Original ATen: [aten.convolution]
    buf468 = extern_kernels.convolution(buf467, arg500_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf468, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg500_1
    del buf467
    buf469 = buf468; del buf468  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_113(c_void_p(buf469.data_ptr()), c_void_p(arg1160_1.data_ptr()), c_void_p(arg1161_1.data_ptr()), c_void_p(arg501_1.data_ptr()), c_void_p(arg502_1.data_ptr()))
    del arg1160_1
    del arg1161_1
    del arg501_1
    del arg502_1
    # Source Nodes: [x_647, x_648, x_649], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf470 = extern_kernels.convolution(buf469, arg503_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf470, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg503_1
    del buf469
    # Source Nodes: [x_651], Original ATen: [aten.convolution]
    buf471 = extern_kernels.convolution(buf470, arg504_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf471, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg504_1
    del buf470
    buf472 = reinterpret_tensor(buf476, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf473 = reinterpret_tensor(buf476, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf474 = reinterpret_tensor(buf476, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf475 = reinterpret_tensor(buf476, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    buf477 = buf426; del buf426  # reuse
    buf482 = reinterpret_tensor(buf425, (8, 2160, 21, 21), (952560, 1, 45360, 2160), 0); del buf425  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_114(c_void_p(buf440.data_ptr()), c_void_p(arg1133_1.data_ptr()), c_void_p(arg1134_1.data_ptr()), c_void_p(arg465_1.data_ptr()), c_void_p(arg466_1.data_ptr()), c_void_p(buf383.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(arg1139_1.data_ptr()), c_void_p(arg1140_1.data_ptr()), c_void_p(arg473_1.data_ptr()), c_void_p(arg474_1.data_ptr()), c_void_p(buf429.data_ptr()), c_void_p(buf465.data_ptr()), c_void_p(arg1157_1.data_ptr()), c_void_p(arg1158_1.data_ptr()), c_void_p(arg497_1.data_ptr()), c_void_p(arg498_1.data_ptr()), c_void_p(buf430.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(arg1163_1.data_ptr()), c_void_p(arg1164_1.data_ptr()), c_void_p(arg505_1.data_ptr()), c_void_p(arg506_1.data_ptr()), c_void_p(buf428.data_ptr()), c_void_p(buf476.data_ptr()), c_void_p(buf472.data_ptr()), c_void_p(buf473.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(buf475.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(buf482.data_ptr()))
    del arg1133_1
    del arg1134_1
    del arg1139_1
    del arg1140_1
    del arg1157_1
    del arg1158_1
    del arg1163_1
    del arg1164_1
    del arg465_1
    del arg466_1
    del arg473_1
    del arg474_1
    del arg497_1
    del arg498_1
    del arg505_1
    del arg506_1
    del buf383
    del buf428
    del buf429
    del buf430
    del buf459
    del buf472
    del buf473
    del buf474
    del buf475
    del buf476
    # Source Nodes: [x_656, x_657], Original ATen: [aten.convolution, aten.relu]
    buf478 = extern_kernels.convolution(buf477, arg510_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf478, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg510_1
    buf479 = buf478; del buf478  # reuse
    buf480 = buf471; del buf471  # reuse
    buf481 = buf465; del buf465  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_115(c_void_p(buf479.data_ptr()), c_void_p(arg1169_1.data_ptr()), c_void_p(arg1170_1.data_ptr()), c_void_p(arg511_1.data_ptr()), c_void_p(arg512_1.data_ptr()), c_void_p(buf480.data_ptr()), c_void_p(buf481.data_ptr()))
    del arg1169_1
    del arg1170_1
    del arg511_1
    del arg512_1
    # Source Nodes: [x_719, x_720], Original ATen: [aten.convolution, aten.relu]
    buf483 = extern_kernels.convolution(buf482, arg561_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf483, (8, 864, 21, 21), (381024, 1, 18144, 864))
    del arg561_1
    buf484 = buf483; del buf483  # reuse
    buf485 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf486 = buf446; del buf446  # reuse
    buf517 = buf440; del buf440  # reuse
    cpp_fused__native_batch_norm_legit_no_training_constant_pad_nd_max_pool2d_with_indices_relu_116(c_void_p(buf484.data_ptr()), c_void_p(arg1208_1.data_ptr()), c_void_p(arg1209_1.data_ptr()), c_void_p(arg562_1.data_ptr()), c_void_p(arg563_1.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(buf486.data_ptr()), c_void_p(buf517.data_ptr()))
    del arg1208_1
    del arg1209_1
    del arg562_1
    del arg563_1
    del buf433
    # Source Nodes: [x_659, x_660], Original ATen: [aten.convolution, aten.relu]
    buf487 = extern_kernels.convolution(buf486, arg513_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf487, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg513_1
    del buf486
    # Source Nodes: [x_662], Original ATen: [aten.convolution]
    buf488 = extern_kernels.convolution(buf487, arg514_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf488, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg514_1
    buf489 = buf488; del buf488  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_117(c_void_p(buf489.data_ptr()), c_void_p(arg1172_1.data_ptr()), c_void_p(arg1173_1.data_ptr()), c_void_p(arg515_1.data_ptr()), c_void_p(arg516_1.data_ptr()))
    del arg1172_1
    del arg1173_1
    del arg515_1
    del arg516_1
    # Source Nodes: [x_663, x_664, x_665], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf490 = extern_kernels.convolution(buf489, arg517_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf490, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg517_1
    # Source Nodes: [x_667], Original ATen: [aten.convolution]
    buf491 = extern_kernels.convolution(buf490, arg518_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf491, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg518_1
    buf492 = buf490; del buf490  # reuse
    buf498 = buf489; del buf489  # reuse
    buf504 = buf487; del buf487  # reuse
    cpp_fused_relu_118(c_void_p(buf479.data_ptr()), c_void_p(buf492.data_ptr()), c_void_p(buf498.data_ptr()), c_void_p(buf504.data_ptr()))
    # Source Nodes: [x_669, x_670], Original ATen: [aten.convolution, aten.relu]
    buf493 = extern_kernels.convolution(buf492, arg521_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf493, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg521_1
    del buf492
    # Source Nodes: [x_672], Original ATen: [aten.convolution]
    buf494 = extern_kernels.convolution(buf493, arg522_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf494, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg522_1
    del buf493
    buf495 = buf494; del buf494  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_119(c_void_p(buf495.data_ptr()), c_void_p(arg1178_1.data_ptr()), c_void_p(arg1179_1.data_ptr()), c_void_p(arg523_1.data_ptr()), c_void_p(arg524_1.data_ptr()))
    del arg1178_1
    del arg1179_1
    del arg523_1
    del arg524_1
    # Source Nodes: [x_673, x_674, x_675], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf496 = extern_kernels.convolution(buf495, arg525_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf496, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg525_1
    del buf495
    # Source Nodes: [x_677], Original ATen: [aten.convolution]
    buf497 = extern_kernels.convolution(buf496, arg526_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf497, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg526_1
    del buf496
    # Source Nodes: [x_679, x_680], Original ATen: [aten.convolution, aten.relu]
    buf499 = extern_kernels.convolution(buf498, arg529_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf499, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg529_1
    del buf498
    # Source Nodes: [x_682], Original ATen: [aten.convolution]
    buf500 = extern_kernels.convolution(buf499, arg530_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf500, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg530_1
    del buf499
    buf501 = buf500; del buf500  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_120(c_void_p(buf501.data_ptr()), c_void_p(arg1184_1.data_ptr()), c_void_p(arg1185_1.data_ptr()), c_void_p(arg531_1.data_ptr()), c_void_p(arg532_1.data_ptr()))
    del arg1184_1
    del arg1185_1
    del arg531_1
    del arg532_1
    # Source Nodes: [x_683, x_684, x_685], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf502 = extern_kernels.convolution(buf501, arg533_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf502, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg533_1
    del buf501
    # Source Nodes: [x_687], Original ATen: [aten.convolution]
    buf503 = extern_kernels.convolution(buf502, arg534_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf503, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg534_1
    del buf502
    # Source Nodes: [x_689, x_690], Original ATen: [aten.convolution, aten.relu]
    buf505 = extern_kernels.convolution(buf504, arg537_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf505, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg537_1
    del buf504
    # Source Nodes: [x_692], Original ATen: [aten.convolution]
    buf506 = extern_kernels.convolution(buf505, arg538_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf506, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg538_1
    del buf505
    buf507 = buf506; del buf506  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_121(c_void_p(buf507.data_ptr()), c_void_p(arg1190_1.data_ptr()), c_void_p(arg1191_1.data_ptr()), c_void_p(arg539_1.data_ptr()), c_void_p(arg540_1.data_ptr()))
    del arg1190_1
    del arg1191_1
    del arg539_1
    del arg540_1
    # Source Nodes: [x_693, x_694, x_695], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf508 = extern_kernels.convolution(buf507, arg541_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf508, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg541_1
    del buf507
    # Source Nodes: [x_697], Original ATen: [aten.convolution]
    buf509 = extern_kernels.convolution(buf508, arg542_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf509, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg542_1
    buf527 = reinterpret_tensor(buf482, (8, 2160, 21, 21), (952560, 441, 21, 1), 0); del buf482  # reuse
    buf510 = reinterpret_tensor(buf527, (8, 432, 21, 21), (952560, 441, 21, 1), 381024)  # alias
    buf511 = buf508; del buf508  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_122(c_void_p(buf503.data_ptr()), c_void_p(arg1187_1.data_ptr()), c_void_p(arg1188_1.data_ptr()), c_void_p(arg535_1.data_ptr()), c_void_p(arg536_1.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(arg1193_1.data_ptr()), c_void_p(arg1194_1.data_ptr()), c_void_p(arg543_1.data_ptr()), c_void_p(arg544_1.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf511.data_ptr()))
    del arg1187_1
    del arg1188_1
    del arg1193_1
    del arg1194_1
    del arg535_1
    del arg536_1
    del arg543_1
    del arg544_1
    del buf503
    del buf509
    # Source Nodes: [x_699, x_700], Original ATen: [aten.convolution, aten.relu]
    buf512 = extern_kernels.convolution(buf511, arg545_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf512, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg545_1
    del buf511
    # Source Nodes: [x_702], Original ATen: [aten.convolution]
    buf513 = extern_kernels.convolution(buf512, arg546_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf513, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg546_1
    del buf512
    buf514 = buf513; del buf513  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_123(c_void_p(buf514.data_ptr()), c_void_p(arg1196_1.data_ptr()), c_void_p(arg1197_1.data_ptr()), c_void_p(arg547_1.data_ptr()), c_void_p(arg548_1.data_ptr()))
    del arg1196_1
    del arg1197_1
    del arg547_1
    del arg548_1
    # Source Nodes: [x_703, x_704, x_705], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf515 = extern_kernels.convolution(buf514, arg549_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf515, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg549_1
    del buf514
    # Source Nodes: [x_707], Original ATen: [aten.convolution]
    buf516 = extern_kernels.convolution(buf515, arg550_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf516, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg550_1
    del buf515
    # Source Nodes: [x_709, x_710], Original ATen: [aten.convolution, aten.relu]
    buf518 = extern_kernels.convolution(buf517, arg553_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf518, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg553_1
    del buf517
    # Source Nodes: [x_712], Original ATen: [aten.convolution]
    buf519 = extern_kernels.convolution(buf518, arg554_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf519, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg554_1
    del buf518
    buf520 = buf519; del buf519  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_124(c_void_p(buf520.data_ptr()), c_void_p(arg1202_1.data_ptr()), c_void_p(arg1203_1.data_ptr()), c_void_p(arg555_1.data_ptr()), c_void_p(arg556_1.data_ptr()))
    del arg1202_1
    del arg1203_1
    del arg555_1
    del arg556_1
    # Source Nodes: [x_713, x_714, x_715], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf521 = extern_kernels.convolution(buf520, arg557_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=432, bias=None)
    assert_size_stride(buf521, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg557_1
    del buf520
    # Source Nodes: [x_717], Original ATen: [aten.convolution]
    buf522 = extern_kernels.convolution(buf521, arg558_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf522, (8, 432, 21, 21), (190512, 1, 9072, 432))
    del arg558_1
    del buf521
    buf523 = reinterpret_tensor(buf527, (8, 432, 21, 21), (952560, 441, 21, 1), 0)  # alias
    buf524 = reinterpret_tensor(buf527, (8, 432, 21, 21), (952560, 441, 21, 1), 190512)  # alias
    buf525 = reinterpret_tensor(buf527, (8, 432, 21, 21), (952560, 441, 21, 1), 571536)  # alias
    buf526 = reinterpret_tensor(buf527, (8, 432, 21, 21), (952560, 441, 21, 1), 762048)  # alias
    buf528 = buf477; del buf477  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_125(c_void_p(buf491.data_ptr()), c_void_p(arg1175_1.data_ptr()), c_void_p(arg1176_1.data_ptr()), c_void_p(arg519_1.data_ptr()), c_void_p(arg520_1.data_ptr()), c_void_p(buf434.data_ptr()), c_void_p(buf497.data_ptr()), c_void_p(arg1181_1.data_ptr()), c_void_p(arg1182_1.data_ptr()), c_void_p(arg527_1.data_ptr()), c_void_p(arg528_1.data_ptr()), c_void_p(buf480.data_ptr()), c_void_p(buf516.data_ptr()), c_void_p(arg1199_1.data_ptr()), c_void_p(arg1200_1.data_ptr()), c_void_p(arg551_1.data_ptr()), c_void_p(arg552_1.data_ptr()), c_void_p(buf481.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(arg1205_1.data_ptr()), c_void_p(arg1206_1.data_ptr()), c_void_p(arg559_1.data_ptr()), c_void_p(arg560_1.data_ptr()), c_void_p(buf479.data_ptr()), c_void_p(buf527.data_ptr()), c_void_p(buf523.data_ptr()), c_void_p(buf524.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(buf528.data_ptr()))
    del arg1175_1
    del arg1176_1
    del arg1181_1
    del arg1182_1
    del arg1199_1
    del arg1200_1
    del arg1205_1
    del arg1206_1
    del arg519_1
    del arg520_1
    del arg527_1
    del arg528_1
    del arg551_1
    del arg552_1
    del arg559_1
    del arg560_1
    del buf434
    del buf479
    del buf480
    del buf481
    del buf491
    del buf497
    del buf510
    del buf516
    del buf522
    del buf523
    del buf524
    del buf525
    del buf526
    # Source Nodes: [x_722, x_723], Original ATen: [aten.convolution, aten.relu]
    buf529 = extern_kernels.convolution(buf528, arg564_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf529, (8, 864, 21, 21), (381024, 1, 18144, 864))
    del arg564_1
    del buf528
    buf530 = buf529; del buf529  # reuse
    buf531 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf532 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf533 = empty_strided((8, 2160, 11, 11), (261360, 1, 23760, 2160), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_avg_pool2d_constant_pad_nd_max_pool2d_with_indices_relu_126(c_void_p(buf530.data_ptr()), c_void_p(arg1211_1.data_ptr()), c_void_p(arg1212_1.data_ptr()), c_void_p(arg565_1.data_ptr()), c_void_p(arg566_1.data_ptr()), c_void_p(buf527.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf533.data_ptr()))
    del arg1211_1
    del arg1212_1
    del arg565_1
    del arg566_1
    # Source Nodes: [l__mod___cell_9_conv_prev_1x1_path_1_avgpool, x_806, x_path1_3], Original ATen: [aten.avg_pool2d, aten.convolution, aten.relu]
    buf534 = extern_kernels.convolution(buf533, arg612_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf534, (8, 432, 11, 11), (52272, 1, 4752, 432))
    del arg612_1
    buf535 = buf533; del buf533  # reuse
    cpp_fused_avg_pool2d_constant_pad_nd_relu_127(c_void_p(buf527.data_ptr()), c_void_p(buf535.data_ptr()))
    del buf527
    # Source Nodes: [l__mod___cell_9_conv_prev_1x1_path_2_avgpool, l__mod___cell_9_conv_prev_1x1_path_2_pad, x_806, x_path2_3], Original ATen: [aten.avg_pool2d, aten.constant_pad_nd, aten.convolution, aten.relu]
    buf536 = extern_kernels.convolution(buf535, arg613_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf536, (8, 432, 11, 11), (52272, 1, 4752, 432))
    del arg613_1
    del buf535
    buf537 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf538 = empty_strided((8, 864, 11, 11), (104544, 1, 9504, 864), device='cpu', dtype=torch.float32)
    buf539 = empty_strided((8, 864, 25, 25), (540000, 1, 21600, 864), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_cat_constant_pad_nd_max_pool2d_with_indices_relu_128(c_void_p(buf534.data_ptr()), c_void_p(buf536.data_ptr()), c_void_p(arg1253_1.data_ptr()), c_void_p(arg1254_1.data_ptr()), c_void_p(arg614_1.data_ptr()), c_void_p(arg615_1.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(buf539.data_ptr()))
    del arg1253_1
    del arg1254_1
    del arg614_1
    del arg615_1
    del buf534
    del buf536
    # Source Nodes: [x_725, x_727, x_728], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf540 = extern_kernels.convolution(buf539, arg20_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf540, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg20_1
    # Source Nodes: [x_730], Original ATen: [aten.convolution]
    buf541 = extern_kernels.convolution(buf540, arg567_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf541, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg567_1
    del buf540
    buf542 = buf541; del buf541  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_129(c_void_p(buf542.data_ptr()), c_void_p(arg1214_1.data_ptr()), c_void_p(arg1215_1.data_ptr()), c_void_p(arg568_1.data_ptr()), c_void_p(arg569_1.data_ptr()))
    del arg1214_1
    del arg1215_1
    del arg568_1
    del arg569_1
    # Source Nodes: [x_731, x_732, x_733], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf543 = extern_kernels.convolution(buf542, arg570_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf543, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg570_1
    del buf542
    # Source Nodes: [x_735], Original ATen: [aten.convolution]
    buf544 = extern_kernels.convolution(buf543, arg571_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf544, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg571_1
    del buf543
    buf545 = empty_strided((8, 864, 27, 27), (629856, 1, 23328, 864), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_130(c_void_p(buf530.data_ptr()), c_void_p(buf545.data_ptr()))
    # Source Nodes: [x_739, x_741, x_742], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf546 = extern_kernels.convolution(buf545, arg21_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf546, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg21_1
    del buf545
    # Source Nodes: [x_744], Original ATen: [aten.convolution]
    buf547 = extern_kernels.convolution(buf546, arg574_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf547, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg574_1
    del buf546
    buf548 = buf547; del buf547  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_131(c_void_p(buf548.data_ptr()), c_void_p(arg1220_1.data_ptr()), c_void_p(arg1221_1.data_ptr()), c_void_p(arg575_1.data_ptr()), c_void_p(arg576_1.data_ptr()))
    del arg1220_1
    del arg1221_1
    del arg575_1
    del arg576_1
    # Source Nodes: [x_745, x_746, x_747], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf549 = extern_kernels.convolution(buf548, arg577_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf549, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg577_1
    del buf548
    # Source Nodes: [x_749], Original ATen: [aten.convolution]
    buf550 = extern_kernels.convolution(buf549, arg578_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf550, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg578_1
    del buf549
    buf551 = buf539; del buf539  # reuse
    cpp_fused_constant_pad_nd_relu_132(c_void_p(buf530.data_ptr()), c_void_p(buf551.data_ptr()))
    # Source Nodes: [x_753, x_755, x_756], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf552 = extern_kernels.convolution(buf551, arg22_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf552, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg22_1
    del buf551
    # Source Nodes: [x_758], Original ATen: [aten.convolution]
    buf553 = extern_kernels.convolution(buf552, arg581_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf553, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg581_1
    del buf552
    buf554 = buf553; del buf553  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_133(c_void_p(buf554.data_ptr()), c_void_p(arg1226_1.data_ptr()), c_void_p(arg1227_1.data_ptr()), c_void_p(arg582_1.data_ptr()), c_void_p(arg583_1.data_ptr()))
    del arg1226_1
    del arg1227_1
    del arg582_1
    del arg583_1
    # Source Nodes: [x_759, x_760, x_761], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf555 = extern_kernels.convolution(buf554, arg584_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf555, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg584_1
    del buf554
    # Source Nodes: [x_763], Original ATen: [aten.convolution]
    buf556 = extern_kernels.convolution(buf555, arg585_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf556, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg585_1
    del buf555
    buf557 = empty_strided((8, 864, 23, 23), (457056, 1, 19872, 864), device='cpu', dtype=torch.float32)
    cpp_fused_constant_pad_nd_relu_134(c_void_p(buf530.data_ptr()), c_void_p(buf557.data_ptr()))
    # Source Nodes: [x_765, x_767, x_768], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf558 = extern_kernels.convolution(buf557, arg23_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf558, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg23_1
    # Source Nodes: [x_770], Original ATen: [aten.convolution]
    buf559 = extern_kernels.convolution(buf558, arg588_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf559, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg588_1
    del buf558
    buf560 = buf559; del buf559  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_135(c_void_p(buf560.data_ptr()), c_void_p(arg1232_1.data_ptr()), c_void_p(arg1233_1.data_ptr()), c_void_p(arg589_1.data_ptr()), c_void_p(arg590_1.data_ptr()))
    del arg1232_1
    del arg1233_1
    del arg589_1
    del arg590_1
    # Source Nodes: [x_771, x_772, x_773], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf561 = extern_kernels.convolution(buf560, arg591_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf561, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg591_1
    del buf560
    # Source Nodes: [x_775], Original ATen: [aten.convolution]
    buf562 = extern_kernels.convolution(buf561, arg592_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf562, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg592_1
    buf582 = empty((8, 4320, 11, 11), device='cpu', dtype=torch.float32)
    buf563 = reinterpret_tensor(buf582, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf564 = buf561; del buf561  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_136(c_void_p(buf556.data_ptr()), c_void_p(arg1229_1.data_ptr()), c_void_p(arg1230_1.data_ptr()), c_void_p(arg586_1.data_ptr()), c_void_p(arg587_1.data_ptr()), c_void_p(buf562.data_ptr()), c_void_p(arg1235_1.data_ptr()), c_void_p(arg1236_1.data_ptr()), c_void_p(arg593_1.data_ptr()), c_void_p(arg594_1.data_ptr()), c_void_p(buf563.data_ptr()), c_void_p(buf564.data_ptr()))
    del arg1229_1
    del arg1230_1
    del arg1235_1
    del arg1236_1
    del arg586_1
    del arg587_1
    del arg593_1
    del arg594_1
    del buf556
    del buf562
    # Source Nodes: [x_777, x_778], Original ATen: [aten.convolution, aten.relu]
    buf565 = extern_kernels.convolution(buf564, arg595_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf565, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg595_1
    del buf564
    # Source Nodes: [x_780], Original ATen: [aten.convolution]
    buf566 = extern_kernels.convolution(buf565, arg596_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf566, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg596_1
    del buf565
    buf567 = buf566; del buf566  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_137(c_void_p(buf567.data_ptr()), c_void_p(arg1238_1.data_ptr()), c_void_p(arg1239_1.data_ptr()), c_void_p(arg597_1.data_ptr()), c_void_p(arg598_1.data_ptr()))
    del arg1238_1
    del arg1239_1
    del arg597_1
    del arg598_1
    # Source Nodes: [x_781, x_782, x_783], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf568 = extern_kernels.convolution(buf567, arg599_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf568, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg599_1
    del buf567
    # Source Nodes: [x_785], Original ATen: [aten.convolution]
    buf569 = extern_kernels.convolution(buf568, arg600_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf569, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg600_1
    del buf568
    buf570 = buf557; del buf557  # reuse
    cpp_fused_constant_pad_nd_relu_138(c_void_p(buf484.data_ptr()), c_void_p(buf570.data_ptr()))
    del buf484
    # Source Nodes: [x_789, x_791, x_792], Original ATen: [aten.constant_pad_nd, aten.convolution, aten.relu]
    buf571 = extern_kernels.convolution(buf570, arg24_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf571, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg24_1
    del buf570
    # Source Nodes: [x_794], Original ATen: [aten.convolution]
    buf572 = extern_kernels.convolution(buf571, arg603_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf572, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg603_1
    del buf571
    buf573 = buf572; del buf572  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_139(c_void_p(buf573.data_ptr()), c_void_p(arg1244_1.data_ptr()), c_void_p(arg1245_1.data_ptr()), c_void_p(arg604_1.data_ptr()), c_void_p(arg605_1.data_ptr()))
    del arg1244_1
    del arg1245_1
    del arg604_1
    del arg605_1
    # Source Nodes: [x_795, x_796, x_797], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf574 = extern_kernels.convolution(buf573, arg606_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf574, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg606_1
    del buf573
    # Source Nodes: [x_799], Original ATen: [aten.convolution]
    buf575 = extern_kernels.convolution(buf574, arg607_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf575, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg607_1
    del buf574
    buf576 = buf530; del buf530  # reuse
    cpp_fused_relu_140(c_void_p(buf576.data_ptr()))
    # Source Nodes: [x_801, x_804], Original ATen: [aten.convolution, aten.relu]
    buf577 = extern_kernels.convolution(buf576, arg25_1, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf577, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg25_1
    del buf576
    buf578 = reinterpret_tensor(buf582, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf579 = reinterpret_tensor(buf582, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf580 = reinterpret_tensor(buf582, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf581 = reinterpret_tensor(buf582, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf583 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.float32)
    buf588 = empty_strided((8, 4320, 11, 11), (522720, 1, 47520, 4320), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_no_training_add_relu_141(c_void_p(buf575.data_ptr()), c_void_p(arg1247_1.data_ptr()), c_void_p(arg1248_1.data_ptr()), c_void_p(arg608_1.data_ptr()), c_void_p(arg609_1.data_ptr()), c_void_p(buf577.data_ptr()), c_void_p(arg1250_1.data_ptr()), c_void_p(arg1251_1.data_ptr()), c_void_p(arg610_1.data_ptr()), c_void_p(arg611_1.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(arg1217_1.data_ptr()), c_void_p(arg1218_1.data_ptr()), c_void_p(arg572_1.data_ptr()), c_void_p(arg573_1.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(arg1223_1.data_ptr()), c_void_p(arg1224_1.data_ptr()), c_void_p(arg579_1.data_ptr()), c_void_p(arg580_1.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf569.data_ptr()), c_void_p(arg1241_1.data_ptr()), c_void_p(arg1242_1.data_ptr()), c_void_p(arg601_1.data_ptr()), c_void_p(arg602_1.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(buf578.data_ptr()), c_void_p(buf579.data_ptr()), c_void_p(buf580.data_ptr()), c_void_p(buf581.data_ptr()), c_void_p(buf583.data_ptr()), c_void_p(buf588.data_ptr()))
    del arg1217_1
    del arg1218_1
    del arg1223_1
    del arg1224_1
    del arg1241_1
    del arg1242_1
    del arg1247_1
    del arg1248_1
    del arg1250_1
    del arg1251_1
    del arg572_1
    del arg573_1
    del arg579_1
    del arg580_1
    del arg601_1
    del arg602_1
    del arg608_1
    del arg609_1
    del arg610_1
    del arg611_1
    del buf485
    del buf531
    del buf532
    del buf563
    del buf578
    del buf579
    del buf580
    del buf581
    # Source Nodes: [x_807, x_808], Original ATen: [aten.convolution, aten.relu]
    buf584 = extern_kernels.convolution(buf583, arg616_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf584, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg616_1
    buf585 = buf584; del buf584  # reuse
    buf586 = buf577; del buf577  # reuse
    buf587 = buf575; del buf575  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_142(c_void_p(buf585.data_ptr()), c_void_p(arg1256_1.data_ptr()), c_void_p(arg1257_1.data_ptr()), c_void_p(arg617_1.data_ptr()), c_void_p(arg618_1.data_ptr()), c_void_p(buf586.data_ptr()), c_void_p(buf587.data_ptr()))
    del arg1256_1
    del arg1257_1
    del arg617_1
    del arg618_1
    # Source Nodes: [x_870, x_871], Original ATen: [aten.convolution, aten.relu]
    buf589 = extern_kernels.convolution(buf588, arg667_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf589, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg667_1
    buf590 = buf589; del buf589  # reuse
    buf591 = buf569; del buf569  # reuse
    buf592 = buf550; del buf550  # reuse
    buf623 = buf544; del buf544  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_143(c_void_p(buf590.data_ptr()), c_void_p(arg1295_1.data_ptr()), c_void_p(arg1296_1.data_ptr()), c_void_p(arg668_1.data_ptr()), c_void_p(arg669_1.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf591.data_ptr()), c_void_p(buf592.data_ptr()), c_void_p(buf623.data_ptr()))
    del arg1295_1
    del arg1296_1
    del arg668_1
    del arg669_1
    del buf537
    # Source Nodes: [x_810, x_811], Original ATen: [aten.convolution, aten.relu]
    buf593 = extern_kernels.convolution(buf592, arg619_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf593, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg619_1
    del buf592
    # Source Nodes: [x_813], Original ATen: [aten.convolution]
    buf594 = extern_kernels.convolution(buf593, arg620_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf594, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg620_1
    buf595 = buf594; del buf594  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_144(c_void_p(buf595.data_ptr()), c_void_p(arg1259_1.data_ptr()), c_void_p(arg1260_1.data_ptr()), c_void_p(arg621_1.data_ptr()), c_void_p(arg622_1.data_ptr()))
    del arg1259_1
    del arg1260_1
    del arg621_1
    del arg622_1
    # Source Nodes: [x_814, x_815, x_816], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf596 = extern_kernels.convolution(buf595, arg623_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf596, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg623_1
    # Source Nodes: [x_818], Original ATen: [aten.convolution]
    buf597 = extern_kernels.convolution(buf596, arg624_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf597, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg624_1
    buf598 = buf596; del buf596  # reuse
    buf604 = buf595; del buf595  # reuse
    buf610 = buf593; del buf593  # reuse
    cpp_fused_relu_145(c_void_p(buf585.data_ptr()), c_void_p(buf598.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(buf610.data_ptr()))
    # Source Nodes: [x_820, x_821], Original ATen: [aten.convolution, aten.relu]
    buf599 = extern_kernels.convolution(buf598, arg627_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf599, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg627_1
    del buf598
    # Source Nodes: [x_823], Original ATen: [aten.convolution]
    buf600 = extern_kernels.convolution(buf599, arg628_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf600, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg628_1
    del buf599
    buf601 = buf600; del buf600  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_146(c_void_p(buf601.data_ptr()), c_void_p(arg1265_1.data_ptr()), c_void_p(arg1266_1.data_ptr()), c_void_p(arg629_1.data_ptr()), c_void_p(arg630_1.data_ptr()))
    del arg1265_1
    del arg1266_1
    del arg629_1
    del arg630_1
    # Source Nodes: [x_824, x_825, x_826], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf602 = extern_kernels.convolution(buf601, arg631_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf602, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg631_1
    del buf601
    # Source Nodes: [x_828], Original ATen: [aten.convolution]
    buf603 = extern_kernels.convolution(buf602, arg632_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf603, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg632_1
    del buf602
    # Source Nodes: [x_830, x_831], Original ATen: [aten.convolution, aten.relu]
    buf605 = extern_kernels.convolution(buf604, arg635_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf605, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg635_1
    del buf604
    # Source Nodes: [x_833], Original ATen: [aten.convolution]
    buf606 = extern_kernels.convolution(buf605, arg636_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf606, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg636_1
    del buf605
    buf607 = buf606; del buf606  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_147(c_void_p(buf607.data_ptr()), c_void_p(arg1271_1.data_ptr()), c_void_p(arg1272_1.data_ptr()), c_void_p(arg637_1.data_ptr()), c_void_p(arg638_1.data_ptr()))
    del arg1271_1
    del arg1272_1
    del arg637_1
    del arg638_1
    # Source Nodes: [x_834, x_835, x_836], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf608 = extern_kernels.convolution(buf607, arg639_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf608, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg639_1
    del buf607
    # Source Nodes: [x_838], Original ATen: [aten.convolution]
    buf609 = extern_kernels.convolution(buf608, arg640_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf609, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg640_1
    del buf608
    # Source Nodes: [x_840, x_841], Original ATen: [aten.convolution, aten.relu]
    buf611 = extern_kernels.convolution(buf610, arg643_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf611, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg643_1
    del buf610
    # Source Nodes: [x_843], Original ATen: [aten.convolution]
    buf612 = extern_kernels.convolution(buf611, arg644_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf612, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg644_1
    del buf611
    buf613 = buf612; del buf612  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_148(c_void_p(buf613.data_ptr()), c_void_p(arg1277_1.data_ptr()), c_void_p(arg1278_1.data_ptr()), c_void_p(arg645_1.data_ptr()), c_void_p(arg646_1.data_ptr()))
    del arg1277_1
    del arg1278_1
    del arg645_1
    del arg646_1
    # Source Nodes: [x_844, x_845, x_846], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf614 = extern_kernels.convolution(buf613, arg647_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf614, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg647_1
    del buf613
    # Source Nodes: [x_848], Original ATen: [aten.convolution]
    buf615 = extern_kernels.convolution(buf614, arg648_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf615, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg648_1
    buf633 = reinterpret_tensor(buf588, (8, 4320, 11, 11), (522720, 121, 11, 1), 0); del buf588  # reuse
    buf616 = reinterpret_tensor(buf633, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf617 = buf614; del buf614  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_149(c_void_p(buf609.data_ptr()), c_void_p(arg1274_1.data_ptr()), c_void_p(arg1275_1.data_ptr()), c_void_p(arg641_1.data_ptr()), c_void_p(arg642_1.data_ptr()), c_void_p(buf615.data_ptr()), c_void_p(arg1280_1.data_ptr()), c_void_p(arg1281_1.data_ptr()), c_void_p(arg649_1.data_ptr()), c_void_p(arg650_1.data_ptr()), c_void_p(buf616.data_ptr()), c_void_p(buf617.data_ptr()))
    del arg1274_1
    del arg1275_1
    del arg1280_1
    del arg1281_1
    del arg641_1
    del arg642_1
    del arg649_1
    del arg650_1
    del buf609
    del buf615
    # Source Nodes: [x_850, x_851], Original ATen: [aten.convolution, aten.relu]
    buf618 = extern_kernels.convolution(buf617, arg651_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf618, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg651_1
    del buf617
    # Source Nodes: [x_853], Original ATen: [aten.convolution]
    buf619 = extern_kernels.convolution(buf618, arg652_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf619, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg652_1
    del buf618
    buf620 = buf619; del buf619  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_150(c_void_p(buf620.data_ptr()), c_void_p(arg1283_1.data_ptr()), c_void_p(arg1284_1.data_ptr()), c_void_p(arg653_1.data_ptr()), c_void_p(arg654_1.data_ptr()))
    del arg1283_1
    del arg1284_1
    del arg653_1
    del arg654_1
    # Source Nodes: [x_854, x_855, x_856], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf621 = extern_kernels.convolution(buf620, arg655_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf621, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg655_1
    del buf620
    # Source Nodes: [x_858], Original ATen: [aten.convolution]
    buf622 = extern_kernels.convolution(buf621, arg656_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf622, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg656_1
    del buf621
    # Source Nodes: [x_860, x_861], Original ATen: [aten.convolution, aten.relu]
    buf624 = extern_kernels.convolution(buf623, arg659_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf624, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg659_1
    del buf623
    # Source Nodes: [x_863], Original ATen: [aten.convolution]
    buf625 = extern_kernels.convolution(buf624, arg660_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf625, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg660_1
    del buf624
    buf626 = buf625; del buf625  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_151(c_void_p(buf626.data_ptr()), c_void_p(arg1289_1.data_ptr()), c_void_p(arg1290_1.data_ptr()), c_void_p(arg661_1.data_ptr()), c_void_p(arg662_1.data_ptr()))
    del arg1289_1
    del arg1290_1
    del arg661_1
    del arg662_1
    # Source Nodes: [x_864, x_865, x_866], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf627 = extern_kernels.convolution(buf626, arg663_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf627, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg663_1
    del buf626
    # Source Nodes: [x_868], Original ATen: [aten.convolution]
    buf628 = extern_kernels.convolution(buf627, arg664_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf628, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg664_1
    del buf627
    buf629 = reinterpret_tensor(buf633, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf630 = reinterpret_tensor(buf633, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf631 = reinterpret_tensor(buf633, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf632 = reinterpret_tensor(buf633, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf634 = buf583; del buf583  # reuse
    buf639 = reinterpret_tensor(buf582, (8, 4320, 11, 11), (522720, 1, 47520, 4320), 0); del buf582  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_152(c_void_p(buf597.data_ptr()), c_void_p(arg1262_1.data_ptr()), c_void_p(arg1263_1.data_ptr()), c_void_p(arg625_1.data_ptr()), c_void_p(arg626_1.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(buf603.data_ptr()), c_void_p(arg1268_1.data_ptr()), c_void_p(arg1269_1.data_ptr()), c_void_p(arg633_1.data_ptr()), c_void_p(arg634_1.data_ptr()), c_void_p(buf586.data_ptr()), c_void_p(buf622.data_ptr()), c_void_p(arg1286_1.data_ptr()), c_void_p(arg1287_1.data_ptr()), c_void_p(arg657_1.data_ptr()), c_void_p(arg658_1.data_ptr()), c_void_p(buf587.data_ptr()), c_void_p(buf628.data_ptr()), c_void_p(arg1292_1.data_ptr()), c_void_p(arg1293_1.data_ptr()), c_void_p(arg665_1.data_ptr()), c_void_p(arg666_1.data_ptr()), c_void_p(buf585.data_ptr()), c_void_p(buf633.data_ptr()), c_void_p(buf629.data_ptr()), c_void_p(buf630.data_ptr()), c_void_p(buf631.data_ptr()), c_void_p(buf632.data_ptr()), c_void_p(buf634.data_ptr()), c_void_p(buf639.data_ptr()))
    del arg1262_1
    del arg1263_1
    del arg1268_1
    del arg1269_1
    del arg1286_1
    del arg1287_1
    del arg1292_1
    del arg1293_1
    del arg625_1
    del arg626_1
    del arg633_1
    del arg634_1
    del arg657_1
    del arg658_1
    del arg665_1
    del arg666_1
    del buf538
    del buf585
    del buf586
    del buf616
    del buf629
    del buf630
    del buf631
    del buf632
    del buf633
    # Source Nodes: [x_873, x_874], Original ATen: [aten.convolution, aten.relu]
    buf635 = extern_kernels.convolution(buf634, arg670_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf635, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg670_1
    buf636 = buf635; del buf635  # reuse
    buf637 = buf628; del buf628  # reuse
    buf638 = buf622; del buf622  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_153(c_void_p(buf636.data_ptr()), c_void_p(arg1298_1.data_ptr()), c_void_p(arg1299_1.data_ptr()), c_void_p(arg671_1.data_ptr()), c_void_p(arg672_1.data_ptr()), c_void_p(buf637.data_ptr()), c_void_p(buf638.data_ptr()))
    del arg1298_1
    del arg1299_1
    del arg671_1
    del arg672_1
    # Source Nodes: [x_936, x_937], Original ATen: [aten.convolution, aten.relu]
    buf640 = extern_kernels.convolution(buf639, arg721_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf640, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg721_1
    buf641 = buf640; del buf640  # reuse
    buf642 = buf603; del buf603  # reuse
    buf643 = buf597; del buf597  # reuse
    buf674 = buf587; del buf587  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_154(c_void_p(buf641.data_ptr()), c_void_p(arg1337_1.data_ptr()), c_void_p(arg1338_1.data_ptr()), c_void_p(arg722_1.data_ptr()), c_void_p(arg723_1.data_ptr()), c_void_p(buf590.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(buf643.data_ptr()), c_void_p(buf674.data_ptr()))
    del arg1337_1
    del arg1338_1
    del arg722_1
    del arg723_1
    del buf590
    # Source Nodes: [x_876, x_877], Original ATen: [aten.convolution, aten.relu]
    buf644 = extern_kernels.convolution(buf643, arg673_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf644, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg673_1
    del buf643
    # Source Nodes: [x_879], Original ATen: [aten.convolution]
    buf645 = extern_kernels.convolution(buf644, arg674_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf645, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg674_1
    buf646 = buf645; del buf645  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_155(c_void_p(buf646.data_ptr()), c_void_p(arg1301_1.data_ptr()), c_void_p(arg1302_1.data_ptr()), c_void_p(arg675_1.data_ptr()), c_void_p(arg676_1.data_ptr()))
    del arg1301_1
    del arg1302_1
    del arg675_1
    del arg676_1
    # Source Nodes: [x_880, x_881, x_882], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf647 = extern_kernels.convolution(buf646, arg677_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf647, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg677_1
    # Source Nodes: [x_884], Original ATen: [aten.convolution]
    buf648 = extern_kernels.convolution(buf647, arg678_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf648, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg678_1
    buf649 = buf647; del buf647  # reuse
    buf655 = buf646; del buf646  # reuse
    buf661 = buf644; del buf644  # reuse
    cpp_fused_relu_156(c_void_p(buf636.data_ptr()), c_void_p(buf649.data_ptr()), c_void_p(buf655.data_ptr()), c_void_p(buf661.data_ptr()))
    # Source Nodes: [x_886, x_887], Original ATen: [aten.convolution, aten.relu]
    buf650 = extern_kernels.convolution(buf649, arg681_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf650, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg681_1
    del buf649
    # Source Nodes: [x_889], Original ATen: [aten.convolution]
    buf651 = extern_kernels.convolution(buf650, arg682_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf651, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg682_1
    del buf650
    buf652 = buf651; del buf651  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_157(c_void_p(buf652.data_ptr()), c_void_p(arg1307_1.data_ptr()), c_void_p(arg1308_1.data_ptr()), c_void_p(arg683_1.data_ptr()), c_void_p(arg684_1.data_ptr()))
    del arg1307_1
    del arg1308_1
    del arg683_1
    del arg684_1
    # Source Nodes: [x_890, x_891, x_892], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf653 = extern_kernels.convolution(buf652, arg685_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf653, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg685_1
    del buf652
    # Source Nodes: [x_894], Original ATen: [aten.convolution]
    buf654 = extern_kernels.convolution(buf653, arg686_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf654, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg686_1
    del buf653
    # Source Nodes: [x_896, x_897], Original ATen: [aten.convolution, aten.relu]
    buf656 = extern_kernels.convolution(buf655, arg689_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf656, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg689_1
    del buf655
    # Source Nodes: [x_899], Original ATen: [aten.convolution]
    buf657 = extern_kernels.convolution(buf656, arg690_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf657, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg690_1
    del buf656
    buf658 = buf657; del buf657  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_158(c_void_p(buf658.data_ptr()), c_void_p(arg1313_1.data_ptr()), c_void_p(arg1314_1.data_ptr()), c_void_p(arg691_1.data_ptr()), c_void_p(arg692_1.data_ptr()))
    del arg1313_1
    del arg1314_1
    del arg691_1
    del arg692_1
    # Source Nodes: [x_900, x_901, x_902], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf659 = extern_kernels.convolution(buf658, arg693_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf659, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg693_1
    del buf658
    # Source Nodes: [x_904], Original ATen: [aten.convolution]
    buf660 = extern_kernels.convolution(buf659, arg694_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf660, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg694_1
    del buf659
    # Source Nodes: [x_906, x_907], Original ATen: [aten.convolution, aten.relu]
    buf662 = extern_kernels.convolution(buf661, arg697_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf662, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg697_1
    del buf661
    # Source Nodes: [x_909], Original ATen: [aten.convolution]
    buf663 = extern_kernels.convolution(buf662, arg698_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf663, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg698_1
    del buf662
    buf664 = buf663; del buf663  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_159(c_void_p(buf664.data_ptr()), c_void_p(arg1319_1.data_ptr()), c_void_p(arg1320_1.data_ptr()), c_void_p(arg699_1.data_ptr()), c_void_p(arg700_1.data_ptr()))
    del arg1319_1
    del arg1320_1
    del arg699_1
    del arg700_1
    # Source Nodes: [x_910, x_911, x_912], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf665 = extern_kernels.convolution(buf664, arg701_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf665, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg701_1
    del buf664
    # Source Nodes: [x_914], Original ATen: [aten.convolution]
    buf666 = extern_kernels.convolution(buf665, arg702_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf666, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg702_1
    buf684 = reinterpret_tensor(buf639, (8, 4320, 11, 11), (522720, 121, 11, 1), 0); del buf639  # reuse
    buf667 = reinterpret_tensor(buf684, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf668 = buf665; del buf665  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_160(c_void_p(buf660.data_ptr()), c_void_p(arg1316_1.data_ptr()), c_void_p(arg1317_1.data_ptr()), c_void_p(arg695_1.data_ptr()), c_void_p(arg696_1.data_ptr()), c_void_p(buf666.data_ptr()), c_void_p(arg1322_1.data_ptr()), c_void_p(arg1323_1.data_ptr()), c_void_p(arg703_1.data_ptr()), c_void_p(arg704_1.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(buf668.data_ptr()))
    del arg1316_1
    del arg1317_1
    del arg1322_1
    del arg1323_1
    del arg695_1
    del arg696_1
    del arg703_1
    del arg704_1
    del buf660
    del buf666
    # Source Nodes: [x_916, x_917], Original ATen: [aten.convolution, aten.relu]
    buf669 = extern_kernels.convolution(buf668, arg705_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf669, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg705_1
    del buf668
    # Source Nodes: [x_919], Original ATen: [aten.convolution]
    buf670 = extern_kernels.convolution(buf669, arg706_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf670, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg706_1
    del buf669
    buf671 = buf670; del buf670  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_161(c_void_p(buf671.data_ptr()), c_void_p(arg1325_1.data_ptr()), c_void_p(arg1326_1.data_ptr()), c_void_p(arg707_1.data_ptr()), c_void_p(arg708_1.data_ptr()))
    del arg1325_1
    del arg1326_1
    del arg707_1
    del arg708_1
    # Source Nodes: [x_920, x_921, x_922], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf672 = extern_kernels.convolution(buf671, arg709_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf672, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg709_1
    del buf671
    # Source Nodes: [x_924], Original ATen: [aten.convolution]
    buf673 = extern_kernels.convolution(buf672, arg710_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf673, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg710_1
    del buf672
    # Source Nodes: [x_926, x_927], Original ATen: [aten.convolution, aten.relu]
    buf675 = extern_kernels.convolution(buf674, arg713_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf675, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg713_1
    del buf674
    # Source Nodes: [x_929], Original ATen: [aten.convolution]
    buf676 = extern_kernels.convolution(buf675, arg714_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf676, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg714_1
    del buf675
    buf677 = buf676; del buf676  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_162(c_void_p(buf677.data_ptr()), c_void_p(arg1331_1.data_ptr()), c_void_p(arg1332_1.data_ptr()), c_void_p(arg715_1.data_ptr()), c_void_p(arg716_1.data_ptr()))
    del arg1331_1
    del arg1332_1
    del arg715_1
    del arg716_1
    # Source Nodes: [x_930, x_931, x_932], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf678 = extern_kernels.convolution(buf677, arg717_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf678, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg717_1
    del buf677
    # Source Nodes: [x_934], Original ATen: [aten.convolution]
    buf679 = extern_kernels.convolution(buf678, arg718_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf679, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg718_1
    del buf678
    buf680 = reinterpret_tensor(buf684, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf681 = reinterpret_tensor(buf684, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf682 = reinterpret_tensor(buf684, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf683 = reinterpret_tensor(buf684, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf685 = buf634; del buf634  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_163(c_void_p(buf648.data_ptr()), c_void_p(arg1304_1.data_ptr()), c_void_p(arg1305_1.data_ptr()), c_void_p(arg679_1.data_ptr()), c_void_p(arg680_1.data_ptr()), c_void_p(buf591.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(arg1310_1.data_ptr()), c_void_p(arg1311_1.data_ptr()), c_void_p(arg687_1.data_ptr()), c_void_p(arg688_1.data_ptr()), c_void_p(buf637.data_ptr()), c_void_p(buf673.data_ptr()), c_void_p(arg1328_1.data_ptr()), c_void_p(arg1329_1.data_ptr()), c_void_p(arg711_1.data_ptr()), c_void_p(arg712_1.data_ptr()), c_void_p(buf638.data_ptr()), c_void_p(buf679.data_ptr()), c_void_p(arg1334_1.data_ptr()), c_void_p(arg1335_1.data_ptr()), c_void_p(arg719_1.data_ptr()), c_void_p(arg720_1.data_ptr()), c_void_p(buf636.data_ptr()), c_void_p(buf684.data_ptr()), c_void_p(buf680.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(buf682.data_ptr()), c_void_p(buf683.data_ptr()), c_void_p(buf685.data_ptr()))
    del arg1304_1
    del arg1305_1
    del arg1310_1
    del arg1311_1
    del arg1328_1
    del arg1329_1
    del arg1334_1
    del arg1335_1
    del arg679_1
    del arg680_1
    del arg687_1
    del arg688_1
    del arg711_1
    del arg712_1
    del arg719_1
    del arg720_1
    del buf591
    del buf636
    del buf637
    del buf638
    del buf667
    del buf680
    del buf681
    del buf682
    del buf683
    del buf684
    # Source Nodes: [x_939, x_940], Original ATen: [aten.convolution, aten.relu]
    buf686 = extern_kernels.convolution(buf685, arg724_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf686, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg724_1
    buf687 = buf686; del buf686  # reuse
    buf688 = buf679; del buf679  # reuse
    buf689 = buf673; del buf673  # reuse
    buf690 = buf654; del buf654  # reuse
    buf721 = buf648; del buf648  # reuse
    cpp_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_164(c_void_p(buf687.data_ptr()), c_void_p(arg1340_1.data_ptr()), c_void_p(arg1341_1.data_ptr()), c_void_p(arg725_1.data_ptr()), c_void_p(arg726_1.data_ptr()), c_void_p(buf641.data_ptr()), c_void_p(buf688.data_ptr()), c_void_p(buf689.data_ptr()), c_void_p(buf690.data_ptr()), c_void_p(buf721.data_ptr()))
    del arg1340_1
    del arg1341_1
    del arg725_1
    del arg726_1
    del buf641
    # Source Nodes: [x_942, x_943], Original ATen: [aten.convolution, aten.relu]
    buf691 = extern_kernels.convolution(buf690, arg727_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf691, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg727_1
    del buf690
    # Source Nodes: [x_945], Original ATen: [aten.convolution]
    buf692 = extern_kernels.convolution(buf691, arg728_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf692, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg728_1
    buf693 = buf692; del buf692  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_165(c_void_p(buf693.data_ptr()), c_void_p(arg1343_1.data_ptr()), c_void_p(arg1344_1.data_ptr()), c_void_p(arg729_1.data_ptr()), c_void_p(arg730_1.data_ptr()))
    del arg1343_1
    del arg1344_1
    del arg729_1
    del arg730_1
    # Source Nodes: [x_946, x_947, x_948], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf694 = extern_kernels.convolution(buf693, arg731_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf694, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg731_1
    # Source Nodes: [x_950], Original ATen: [aten.convolution]
    buf695 = extern_kernels.convolution(buf694, arg732_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf695, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg732_1
    buf696 = buf694; del buf694  # reuse
    buf702 = buf693; del buf693  # reuse
    buf708 = buf691; del buf691  # reuse
    cpp_fused_relu_166(c_void_p(buf687.data_ptr()), c_void_p(buf696.data_ptr()), c_void_p(buf702.data_ptr()), c_void_p(buf708.data_ptr()))
    # Source Nodes: [x_952, x_953], Original ATen: [aten.convolution, aten.relu]
    buf697 = extern_kernels.convolution(buf696, arg735_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf697, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg735_1
    del buf696
    # Source Nodes: [x_955], Original ATen: [aten.convolution]
    buf698 = extern_kernels.convolution(buf697, arg736_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf698, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg736_1
    del buf697
    buf699 = buf698; del buf698  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_167(c_void_p(buf699.data_ptr()), c_void_p(arg1349_1.data_ptr()), c_void_p(arg1350_1.data_ptr()), c_void_p(arg737_1.data_ptr()), c_void_p(arg738_1.data_ptr()))
    del arg1349_1
    del arg1350_1
    del arg737_1
    del arg738_1
    # Source Nodes: [x_956, x_957, x_958], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf700 = extern_kernels.convolution(buf699, arg739_1, stride=(1, 1), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf700, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg739_1
    del buf699
    # Source Nodes: [x_960], Original ATen: [aten.convolution]
    buf701 = extern_kernels.convolution(buf700, arg740_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf701, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg740_1
    del buf700
    # Source Nodes: [x_962, x_963], Original ATen: [aten.convolution, aten.relu]
    buf703 = extern_kernels.convolution(buf702, arg743_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf703, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg743_1
    del buf702
    # Source Nodes: [x_965], Original ATen: [aten.convolution]
    buf704 = extern_kernels.convolution(buf703, arg744_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf704, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg744_1
    del buf703
    buf705 = buf704; del buf704  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_168(c_void_p(buf705.data_ptr()), c_void_p(arg1355_1.data_ptr()), c_void_p(arg1356_1.data_ptr()), c_void_p(arg745_1.data_ptr()), c_void_p(arg746_1.data_ptr()))
    del arg1355_1
    del arg1356_1
    del arg745_1
    del arg746_1
    # Source Nodes: [x_966, x_967, x_968], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf706 = extern_kernels.convolution(buf705, arg747_1, stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf706, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg747_1
    del buf705
    # Source Nodes: [x_970], Original ATen: [aten.convolution]
    buf707 = extern_kernels.convolution(buf706, arg748_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf707, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg748_1
    del buf706
    # Source Nodes: [x_972, x_973], Original ATen: [aten.convolution, aten.relu]
    buf709 = extern_kernels.convolution(buf708, arg751_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf709, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg751_1
    del buf708
    # Source Nodes: [x_975], Original ATen: [aten.convolution]
    buf710 = extern_kernels.convolution(buf709, arg752_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf710, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg752_1
    del buf709
    buf711 = buf710; del buf710  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_169(c_void_p(buf711.data_ptr()), c_void_p(arg1361_1.data_ptr()), c_void_p(arg1362_1.data_ptr()), c_void_p(arg753_1.data_ptr()), c_void_p(arg754_1.data_ptr()))
    del arg1361_1
    del arg1362_1
    del arg753_1
    del arg754_1
    # Source Nodes: [x_976, x_977, x_978], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf712 = extern_kernels.convolution(buf711, arg755_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf712, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg755_1
    del buf711
    # Source Nodes: [x_980], Original ATen: [aten.convolution]
    buf713 = extern_kernels.convolution(buf712, arg756_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf713, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg756_1
    buf731 = reinterpret_tensor(buf685, (8, 4320, 11, 11), (522720, 121, 11, 1), 0); del buf685  # reuse
    buf714 = reinterpret_tensor(buf731, (8, 864, 11, 11), (522720, 121, 11, 1), 209088)  # alias
    buf715 = buf712; del buf712  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_relu_170(c_void_p(buf707.data_ptr()), c_void_p(arg1358_1.data_ptr()), c_void_p(arg1359_1.data_ptr()), c_void_p(arg749_1.data_ptr()), c_void_p(arg750_1.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(arg1364_1.data_ptr()), c_void_p(arg1365_1.data_ptr()), c_void_p(arg757_1.data_ptr()), c_void_p(arg758_1.data_ptr()), c_void_p(buf714.data_ptr()), c_void_p(buf715.data_ptr()))
    del arg1358_1
    del arg1359_1
    del arg1364_1
    del arg1365_1
    del arg749_1
    del arg750_1
    del arg757_1
    del arg758_1
    del buf707
    del buf713
    # Source Nodes: [x_982, x_983], Original ATen: [aten.convolution, aten.relu]
    buf716 = extern_kernels.convolution(buf715, arg759_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf716, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg759_1
    del buf715
    # Source Nodes: [x_985], Original ATen: [aten.convolution]
    buf717 = extern_kernels.convolution(buf716, arg760_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf717, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg760_1
    del buf716
    buf718 = buf717; del buf717  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_171(c_void_p(buf718.data_ptr()), c_void_p(arg1367_1.data_ptr()), c_void_p(arg1368_1.data_ptr()), c_void_p(arg761_1.data_ptr()), c_void_p(arg762_1.data_ptr()))
    del arg1367_1
    del arg1368_1
    del arg761_1
    del arg762_1
    # Source Nodes: [x_986, x_987, x_988], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf719 = extern_kernels.convolution(buf718, arg763_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf719, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg763_1
    del buf718
    # Source Nodes: [x_990], Original ATen: [aten.convolution]
    buf720 = extern_kernels.convolution(buf719, arg764_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf720, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg764_1
    del buf719
    # Source Nodes: [x_992, x_993], Original ATen: [aten.convolution, aten.relu]
    buf722 = extern_kernels.convolution(buf721, arg767_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf722, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg767_1
    del buf721
    # Source Nodes: [x_995], Original ATen: [aten.convolution]
    buf723 = extern_kernels.convolution(buf722, arg768_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf723, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg768_1
    del buf722
    buf724 = buf723; del buf723  # reuse
    cpp_fused__native_batch_norm_legit_no_training_relu_172(c_void_p(buf724.data_ptr()), c_void_p(arg1373_1.data_ptr()), c_void_p(arg1374_1.data_ptr()), c_void_p(arg769_1.data_ptr()), c_void_p(arg770_1.data_ptr()))
    del arg1373_1
    del arg1374_1
    del arg769_1
    del arg770_1
    # Source Nodes: [x_996, x_997, x_998], Original ATen: [aten._native_batch_norm_legit_no_training, aten.convolution, aten.relu]
    buf725 = extern_kernels.convolution(buf724, arg771_1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=864, bias=None)
    assert_size_stride(buf725, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg771_1
    del buf724
    # Source Nodes: [x_1000], Original ATen: [aten.convolution]
    buf726 = extern_kernels.convolution(buf725, arg772_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf726, (8, 864, 11, 11), (104544, 1, 9504, 864))
    del arg772_1
    del buf725
    buf727 = reinterpret_tensor(buf731, (8, 864, 11, 11), (522720, 121, 11, 1), 0)  # alias
    buf728 = reinterpret_tensor(buf731, (8, 864, 11, 11), (522720, 121, 11, 1), 104544)  # alias
    buf729 = reinterpret_tensor(buf731, (8, 864, 11, 11), (522720, 121, 11, 1), 313632)  # alias
    buf730 = reinterpret_tensor(buf731, (8, 864, 11, 11), (522720, 121, 11, 1), 418176)  # alias
    buf732 = empty_strided((8, 4320, 1, 1), (4320, 1, 34560, 34560), device='cpu', dtype=torch.float32)
    buf733 = reinterpret_tensor(buf732, (8, 4320, 1, 1), (4320, 1, 1, 1), 0); del buf732  # reuse
    cpp_fused__native_batch_norm_legit_no_training_add_mean_relu_173(c_void_p(buf733.data_ptr()), c_void_p(buf695.data_ptr()), c_void_p(arg1346_1.data_ptr()), c_void_p(arg1347_1.data_ptr()), c_void_p(arg733_1.data_ptr()), c_void_p(arg734_1.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(buf701.data_ptr()), c_void_p(arg1352_1.data_ptr()), c_void_p(arg1353_1.data_ptr()), c_void_p(arg741_1.data_ptr()), c_void_p(arg742_1.data_ptr()), c_void_p(buf688.data_ptr()), c_void_p(buf720.data_ptr()), c_void_p(arg1370_1.data_ptr()), c_void_p(arg1371_1.data_ptr()), c_void_p(arg765_1.data_ptr()), c_void_p(arg766_1.data_ptr()), c_void_p(buf689.data_ptr()), c_void_p(buf726.data_ptr()), c_void_p(arg1376_1.data_ptr()), c_void_p(arg1377_1.data_ptr()), c_void_p(arg773_1.data_ptr()), c_void_p(arg774_1.data_ptr()), c_void_p(buf687.data_ptr()), c_void_p(buf731.data_ptr()), c_void_p(buf727.data_ptr()), c_void_p(buf728.data_ptr()), c_void_p(buf729.data_ptr()), c_void_p(buf730.data_ptr()))
    del arg1346_1
    del arg1347_1
    del arg1352_1
    del arg1353_1
    del arg1370_1
    del arg1371_1
    del arg1376_1
    del arg1377_1
    del arg733_1
    del arg734_1
    del arg741_1
    del arg742_1
    del arg765_1
    del arg766_1
    del arg773_1
    del arg774_1
    del buf642
    del buf687
    del buf688
    del buf689
    del buf695
    del buf701
    del buf714
    del buf720
    del buf726
    del buf727
    del buf728
    del buf729
    del buf730
    del buf731
    buf734 = empty((8, 1000), device='cpu', dtype=torch.float32)
    # Source Nodes: [x_1008], Original ATen: [aten.addmm]
    extern_kernels.addmm(arg776_1, reinterpret_tensor(buf733, (8, 4320), (4320, 1), 0), reinterpret_tensor(arg775_1, (4320, 1000), (1, 4320), 0), alpha=1, beta=1, out=buf734)
    del arg775_1
    del arg776_1
    return (buf734, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    arg0_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    arg1_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    arg2_1 = rand_strided((96, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg3_1 = rand_strided((54, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg4_1 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg5_1 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg6_1 = rand_strided((96, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg7_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg8_1 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg9_1 = rand_strided((108, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg10_1 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg11_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg12_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg13_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg14_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg15_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg16_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg17_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg18_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg19_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg20_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg21_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg22_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg23_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg24_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg25_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg26_1 = rand_strided((96, 3, 3, 3), (27, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg27_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg28_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg29_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg30_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg31_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg32_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg33_1 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg34_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg35_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg36_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg37_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg38_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg39_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg40_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg41_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg42_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg43_1 = rand_strided((54, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg44_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg45_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg46_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg47_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg48_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg49_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg50_1 = rand_strided((54, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg51_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg52_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg53_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg54_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg55_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg56_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg57_1 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg58_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg59_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg60_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg61_1 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg62_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg63_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg64_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg65_1 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg66_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg67_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg68_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg69_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg70_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg71_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg72_1 = rand_strided((54, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg73_1 = rand_strided((54, 54, 1, 1), (54, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg74_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg75_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg76_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg77_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg78_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg79_1 = rand_strided((54, 96, 1, 1), (96, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg80_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg81_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg82_1 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg83_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg84_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg85_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg86_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg87_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg88_1 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg89_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg90_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg91_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg92_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg93_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg94_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg95_1 = rand_strided((108, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg96_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg97_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg98_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg99_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg100_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg101_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg102_1 = rand_strided((108, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg103_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg104_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg105_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg106_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg107_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg108_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg109_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg110_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg111_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg112_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg113_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg114_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg115_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg116_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg117_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg118_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg119_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg120_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg121_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg122_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg123_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg124_1 = rand_strided((108, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg125_1 = rand_strided((108, 108, 1, 1), (108, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg126_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg127_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg128_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg129_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg130_1 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg131_1 = rand_strided((108, 270, 1, 1), (270, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg132_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg133_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg134_1 = rand_strided((216, 540, 1, 1), (540, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg135_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg136_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg137_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg138_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg139_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg140_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg141_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg142_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg143_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg144_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg145_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg146_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg147_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg148_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg149_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg150_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg151_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg152_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg153_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg154_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg155_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg156_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg157_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg158_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg159_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg160_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg161_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg162_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg163_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg164_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg165_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg166_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg167_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg168_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg169_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg170_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg171_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg172_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg173_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg174_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg175_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg176_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg177_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg178_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg179_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg180_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg181_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg182_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg183_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg184_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg185_1 = rand_strided((216, 540, 1, 1), (540, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg186_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg187_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg188_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg189_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg190_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg191_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg192_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg193_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg194_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg195_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg196_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg197_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg198_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg199_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg200_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg201_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg202_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg203_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg204_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg205_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg206_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg207_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg208_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg209_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg210_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg211_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg212_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg213_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg214_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg215_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg216_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg217_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg218_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg219_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg220_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg221_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg222_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg223_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg224_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg225_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg226_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg227_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg228_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg229_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg230_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg231_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg232_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg233_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg234_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg235_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg236_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg237_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg238_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg239_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg240_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg241_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg242_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg243_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg244_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg245_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg246_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg247_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg248_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg249_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg250_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg251_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg252_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg253_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg254_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg255_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg256_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg257_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg258_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg259_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg260_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg261_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg262_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg263_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg264_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg265_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg266_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg267_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg268_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg269_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg270_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg271_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg272_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg273_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg274_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg275_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg276_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg277_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg278_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg279_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg280_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg281_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg282_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg283_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg284_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg285_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg286_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg287_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg288_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg289_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg290_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg291_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg292_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg293_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg294_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg295_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg296_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg297_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg298_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg299_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg300_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg301_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg302_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg303_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg304_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg305_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg306_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg307_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg308_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg309_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg310_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg311_1 = rand_strided((216, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg312_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg313_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg314_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg315_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg316_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg317_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg318_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg319_1 = rand_strided((216, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg320_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg321_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg322_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg323_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg324_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg325_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg326_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg327_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg328_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg329_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg330_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg331_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg332_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg333_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg334_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg335_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg336_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg337_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg338_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg339_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg340_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg341_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg342_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg343_1 = rand_strided((216, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg344_1 = rand_strided((216, 216, 1, 1), (216, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg345_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg346_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg347_1 = rand_strided((432, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg348_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg349_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg350_1 = rand_strided((432, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg351_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg352_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg353_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg354_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg355_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg356_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg357_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg358_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg359_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg360_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg361_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg362_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg363_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg364_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg365_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg366_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg367_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg368_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg369_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg370_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg371_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg372_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg373_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg374_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg375_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg376_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg377_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg378_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg379_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg380_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg381_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg382_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg383_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg384_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg385_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg386_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg387_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg388_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg389_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg390_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg391_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg392_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg393_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg394_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg395_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg396_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg397_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg398_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg399_1 = rand_strided((216, 1080, 1, 1), (1080, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg400_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg401_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg402_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg403_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg404_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg405_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg406_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg407_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg408_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg409_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg410_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg411_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg412_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg413_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg414_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg415_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg416_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg417_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg418_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg419_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg420_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg421_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg422_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg423_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg424_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg425_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg426_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg427_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg428_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg429_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg430_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg431_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg432_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg433_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg434_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg435_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg436_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg437_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg438_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg439_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg440_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg441_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg442_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg443_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg444_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg445_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg446_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg447_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg448_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg449_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg450_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg451_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg452_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg453_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg454_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg455_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg456_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg457_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg458_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg459_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg460_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg461_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg462_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg463_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg464_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg465_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg466_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg467_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg468_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg469_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg470_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg471_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg472_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg473_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg474_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg475_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg476_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg477_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg478_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg479_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg480_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg481_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg482_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg483_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg484_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg485_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg486_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg487_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg488_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg489_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg490_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg491_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg492_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg493_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg494_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg495_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg496_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg497_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg498_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg499_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg500_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg501_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg502_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg503_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg504_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg505_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg506_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg507_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg508_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg509_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg510_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg511_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg512_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg513_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg514_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg515_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg516_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg517_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg518_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg519_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg520_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg521_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg522_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg523_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg524_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg525_1 = rand_strided((432, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg526_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg527_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg528_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg529_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg530_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg531_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg532_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg533_1 = rand_strided((432, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg534_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg535_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg536_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg537_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg538_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg539_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg540_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg541_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg542_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg543_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg544_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg545_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg546_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg547_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg548_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg549_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg550_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg551_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg552_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg553_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg554_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg555_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg556_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg557_1 = rand_strided((432, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg558_1 = rand_strided((432, 432, 1, 1), (432, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg559_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg560_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg561_1 = rand_strided((864, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg562_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg563_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg564_1 = rand_strided((864, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg565_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg566_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg567_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg568_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg569_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg570_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg571_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg572_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg573_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg574_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg575_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg576_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg577_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg578_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg579_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg580_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg581_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg582_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg583_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg584_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg585_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg586_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg587_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg588_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg589_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg590_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg591_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg592_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg593_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg594_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg595_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg596_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg597_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg598_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg599_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg600_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg601_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg602_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg603_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg604_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg605_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg606_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg607_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg608_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg609_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg610_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg611_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg612_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg613_1 = rand_strided((432, 2160, 1, 1), (2160, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg614_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg615_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg616_1 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg617_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg618_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg619_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg620_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg621_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg622_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg623_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg624_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg625_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg626_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg627_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg628_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg629_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg630_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg631_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg632_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg633_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg634_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg635_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg636_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg637_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg638_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg639_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg640_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg641_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg642_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg643_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg644_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg645_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg646_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg647_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg648_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg649_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg650_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg651_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg652_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg653_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg654_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg655_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg656_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg657_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg658_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg659_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg660_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg661_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg662_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg663_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg664_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg665_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg666_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg667_1 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg668_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg669_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg670_1 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg671_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg672_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg673_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg674_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg675_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg676_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg677_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg678_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg679_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg680_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg681_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg682_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg683_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg684_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg685_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg686_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg687_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg688_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg689_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg690_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg691_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg692_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg693_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg694_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg695_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg696_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg697_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg698_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg699_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg700_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg701_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg702_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg703_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg704_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg705_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg706_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg707_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg708_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg709_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg710_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg711_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg712_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg713_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg714_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg715_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg716_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg717_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg718_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg719_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg720_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg721_1 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg722_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg723_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg724_1 = rand_strided((864, 4320, 1, 1), (4320, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg725_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg726_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg727_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg728_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg729_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg730_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg731_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg732_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg733_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg734_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg735_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg736_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg737_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg738_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg739_1 = rand_strided((864, 1, 7, 7), (49, 49, 7, 1), device='cpu', dtype=torch.float32)
    arg740_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg741_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg742_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg743_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg744_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg745_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg746_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg747_1 = rand_strided((864, 1, 5, 5), (25, 25, 5, 1), device='cpu', dtype=torch.float32)
    arg748_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg749_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg750_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg751_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg752_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg753_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg754_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg755_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg756_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg757_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg758_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg759_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg760_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg761_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg762_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg763_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg764_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg765_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg766_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg767_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg768_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg769_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg770_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg771_1 = rand_strided((864, 1, 3, 3), (9, 9, 3, 1), device='cpu', dtype=torch.float32)
    arg772_1 = rand_strided((864, 864, 1, 1), (864, 1, 1, 1), device='cpu', dtype=torch.float32)
    arg773_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg774_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg775_1 = rand_strided((1000, 4320), (4320, 1), device='cpu', dtype=torch.float32)
    arg776_1 = rand_strided((1000, ), (1, ), device='cpu', dtype=torch.float32)
    arg777_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    arg778_1 = rand_strided((96, ), (1, ), device='cpu', dtype=torch.float32)
    arg779_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg780_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg781_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg782_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg783_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg784_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg785_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg786_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg787_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg788_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg789_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg790_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg791_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg792_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg793_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg794_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg795_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg796_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg797_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg798_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg799_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg800_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg801_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg802_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg803_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg804_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg805_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg806_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg807_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg808_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg809_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg810_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg811_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg812_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg813_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg814_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg815_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg816_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg817_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg818_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg819_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg820_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg821_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg822_1 = rand_strided((54, ), (1, ), device='cpu', dtype=torch.float32)
    arg823_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg824_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg825_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg826_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg827_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg828_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg829_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg830_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg831_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg832_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg833_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg834_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg835_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg836_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg837_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg838_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg839_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg840_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg841_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg842_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg843_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg844_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg845_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg846_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg847_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg848_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg849_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg850_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg851_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg852_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg853_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg854_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg855_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg856_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg857_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg858_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg859_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg860_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg861_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg862_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg863_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg864_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg865_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg866_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg867_1 = rand_strided((108, ), (1, ), device='cpu', dtype=torch.float32)
    arg868_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg869_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg870_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg871_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg872_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg873_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg874_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg875_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg876_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg877_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg878_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg879_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg880_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg881_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg882_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg883_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg884_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg885_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg886_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg887_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg888_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg889_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg890_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg891_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg892_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg893_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg894_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg895_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg896_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg897_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg898_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg899_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg900_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg901_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg902_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg903_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg904_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg905_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg906_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg907_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg908_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg909_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg910_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg911_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg912_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg913_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg914_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg915_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg916_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg917_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg918_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg919_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg920_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg921_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg922_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg923_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg924_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg925_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg926_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg927_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg928_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg929_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg930_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg931_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg932_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg933_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg934_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg935_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg936_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg937_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg938_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg939_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg940_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg941_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg942_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg943_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg944_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg945_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg946_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg947_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg948_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg949_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg950_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg951_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg952_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg953_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg954_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg955_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg956_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg957_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg958_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg959_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg960_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg961_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg962_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg963_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg964_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg965_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg966_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg967_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg968_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg969_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg970_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg971_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg972_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg973_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg974_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg975_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg976_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg977_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg978_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg979_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg980_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg981_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg982_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg983_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg984_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg985_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg986_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg987_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg988_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg989_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg990_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg991_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg992_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg993_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg994_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg995_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg996_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg997_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg998_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg999_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1000_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1001_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1002_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1003_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1004_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1005_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1006_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1007_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1008_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1009_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1010_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1011_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1012_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1013_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1014_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1015_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1016_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1017_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1018_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1019_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1020_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1021_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1022_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1023_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1024_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1025_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1026_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1027_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1028_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1029_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1030_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1031_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1032_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1033_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1034_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1035_1 = rand_strided((216, ), (1, ), device='cpu', dtype=torch.float32)
    arg1036_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1037_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1038_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1039_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1040_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1041_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1042_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1043_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1044_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1045_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1046_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1047_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1048_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1049_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1050_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1051_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1052_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1053_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1054_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1055_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1056_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1057_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1058_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1059_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1060_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1061_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1062_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1063_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1064_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1065_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1066_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1067_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1068_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1069_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1070_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1071_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1072_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1073_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1074_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1075_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1076_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1077_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1078_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1079_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1080_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1081_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1082_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1083_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1084_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1085_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1086_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1087_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1088_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1089_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1090_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1091_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1092_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1093_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1094_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1095_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1096_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1097_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1098_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1099_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1100_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1101_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1102_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1103_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1104_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1105_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1106_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1107_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1108_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1109_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1110_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1111_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1112_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1113_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1114_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1115_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1116_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1117_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1118_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1119_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1120_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1121_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1122_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1123_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1124_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1125_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1126_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1127_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1128_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1129_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1130_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1131_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1132_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1133_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1134_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1135_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1136_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1137_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1138_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1139_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1140_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1141_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1142_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1143_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1144_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1145_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1146_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1147_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1148_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1149_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1150_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1151_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1152_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1153_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1154_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1155_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1156_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1157_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1158_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1159_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1160_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1161_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1162_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1163_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1164_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1165_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1166_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1167_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1168_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1169_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1170_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1171_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1172_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1173_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1174_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1175_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1176_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1177_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1178_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1179_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1180_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1181_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1182_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1183_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1184_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1185_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1186_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1187_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1188_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1189_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1190_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1191_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1192_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1193_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1194_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1195_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1196_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1197_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1198_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1199_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1200_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1201_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1202_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1203_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1204_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1205_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1206_1 = rand_strided((432, ), (1, ), device='cpu', dtype=torch.float32)
    arg1207_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1208_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1209_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1210_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1211_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1212_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1213_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1214_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1215_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1216_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1217_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1218_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1219_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1220_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1221_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1222_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1223_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1224_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1225_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1226_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1227_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1228_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1229_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1230_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1231_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1232_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1233_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1234_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1235_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1236_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1237_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1238_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1239_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1240_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1241_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1242_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1243_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1244_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1245_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1246_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1247_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1248_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1249_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1250_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1251_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1252_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1253_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1254_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1255_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1256_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1257_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1258_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1259_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1260_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1261_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1262_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1263_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1264_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1265_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1266_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1267_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1268_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1269_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1270_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1271_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1272_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1273_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1274_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1275_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1276_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1277_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1278_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1279_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1280_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1281_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1282_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1283_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1284_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1285_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1286_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1287_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1288_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1289_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1290_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1291_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1292_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1293_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1294_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1295_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1296_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1297_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1298_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1299_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1300_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1301_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1302_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1303_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1304_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1305_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1306_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1307_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1308_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1309_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1310_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1311_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1312_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1313_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1314_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1315_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1316_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1317_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1318_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1319_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1320_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1321_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1322_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1323_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1324_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1325_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1326_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1327_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1328_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1329_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1330_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1331_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1332_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1333_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1334_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1335_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1336_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1337_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1338_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1339_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1340_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1341_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1342_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1343_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1344_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1345_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1346_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1347_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1348_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1349_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1350_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1351_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1352_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1353_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1354_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1355_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1356_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1357_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1358_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1359_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1360_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1361_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1362_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1363_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1364_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1365_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1366_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1367_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1368_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1369_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1370_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1371_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1372_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1373_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1374_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1375_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1376_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1377_1 = rand_strided((864, ), (1, ), device='cpu', dtype=torch.float32)
    arg1378_1 = rand_strided((), (), device='cpu', dtype=torch.int64)
    arg1379_1 = rand_strided((8, 3, 331, 331), (328683, 109561, 331, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([arg0_1, arg1_1, arg2_1, arg3_1, arg4_1, arg5_1, arg6_1, arg7_1, arg8_1, arg9_1, arg10_1, arg11_1, arg12_1, arg13_1, arg14_1, arg15_1, arg16_1, arg17_1, arg18_1, arg19_1, arg20_1, arg21_1, arg22_1, arg23_1, arg24_1, arg25_1, arg26_1, arg27_1, arg28_1, arg29_1, arg30_1, arg31_1, arg32_1, arg33_1, arg34_1, arg35_1, arg36_1, arg37_1, arg38_1, arg39_1, arg40_1, arg41_1, arg42_1, arg43_1, arg44_1, arg45_1, arg46_1, arg47_1, arg48_1, arg49_1, arg50_1, arg51_1, arg52_1, arg53_1, arg54_1, arg55_1, arg56_1, arg57_1, arg58_1, arg59_1, arg60_1, arg61_1, arg62_1, arg63_1, arg64_1, arg65_1, arg66_1, arg67_1, arg68_1, arg69_1, arg70_1, arg71_1, arg72_1, arg73_1, arg74_1, arg75_1, arg76_1, arg77_1, arg78_1, arg79_1, arg80_1, arg81_1, arg82_1, arg83_1, arg84_1, arg85_1, arg86_1, arg87_1, arg88_1, arg89_1, arg90_1, arg91_1, arg92_1, arg93_1, arg94_1, arg95_1, arg96_1, arg97_1, arg98_1, arg99_1, arg100_1, arg101_1, arg102_1, arg103_1, arg104_1, arg105_1, arg106_1, arg107_1, arg108_1, arg109_1, arg110_1, arg111_1, arg112_1, arg113_1, arg114_1, arg115_1, arg116_1, arg117_1, arg118_1, arg119_1, arg120_1, arg121_1, arg122_1, arg123_1, arg124_1, arg125_1, arg126_1, arg127_1, arg128_1, arg129_1, arg130_1, arg131_1, arg132_1, arg133_1, arg134_1, arg135_1, arg136_1, arg137_1, arg138_1, arg139_1, arg140_1, arg141_1, arg142_1, arg143_1, arg144_1, arg145_1, arg146_1, arg147_1, arg148_1, arg149_1, arg150_1, arg151_1, arg152_1, arg153_1, arg154_1, arg155_1, arg156_1, arg157_1, arg158_1, arg159_1, arg160_1, arg161_1, arg162_1, arg163_1, arg164_1, arg165_1, arg166_1, arg167_1, arg168_1, arg169_1, arg170_1, arg171_1, arg172_1, arg173_1, arg174_1, arg175_1, arg176_1, arg177_1, arg178_1, arg179_1, arg180_1, arg181_1, arg182_1, arg183_1, arg184_1, arg185_1, arg186_1, arg187_1, arg188_1, arg189_1, arg190_1, arg191_1, arg192_1, arg193_1, arg194_1, arg195_1, arg196_1, arg197_1, arg198_1, arg199_1, arg200_1, arg201_1, arg202_1, arg203_1, arg204_1, arg205_1, arg206_1, arg207_1, arg208_1, arg209_1, arg210_1, arg211_1, arg212_1, arg213_1, arg214_1, arg215_1, arg216_1, arg217_1, arg218_1, arg219_1, arg220_1, arg221_1, arg222_1, arg223_1, arg224_1, arg225_1, arg226_1, arg227_1, arg228_1, arg229_1, arg230_1, arg231_1, arg232_1, arg233_1, arg234_1, arg235_1, arg236_1, arg237_1, arg238_1, arg239_1, arg240_1, arg241_1, arg242_1, arg243_1, arg244_1, arg245_1, arg246_1, arg247_1, arg248_1, arg249_1, arg250_1, arg251_1, arg252_1, arg253_1, arg254_1, arg255_1, arg256_1, arg257_1, arg258_1, arg259_1, arg260_1, arg261_1, arg262_1, arg263_1, arg264_1, arg265_1, arg266_1, arg267_1, arg268_1, arg269_1, arg270_1, arg271_1, arg272_1, arg273_1, arg274_1, arg275_1, arg276_1, arg277_1, arg278_1, arg279_1, arg280_1, arg281_1, arg282_1, arg283_1, arg284_1, arg285_1, arg286_1, arg287_1, arg288_1, arg289_1, arg290_1, arg291_1, arg292_1, arg293_1, arg294_1, arg295_1, arg296_1, arg297_1, arg298_1, arg299_1, arg300_1, arg301_1, arg302_1, arg303_1, arg304_1, arg305_1, arg306_1, arg307_1, arg308_1, arg309_1, arg310_1, arg311_1, arg312_1, arg313_1, arg314_1, arg315_1, arg316_1, arg317_1, arg318_1, arg319_1, arg320_1, arg321_1, arg322_1, arg323_1, arg324_1, arg325_1, arg326_1, arg327_1, arg328_1, arg329_1, arg330_1, arg331_1, arg332_1, arg333_1, arg334_1, arg335_1, arg336_1, arg337_1, arg338_1, arg339_1, arg340_1, arg341_1, arg342_1, arg343_1, arg344_1, arg345_1, arg346_1, arg347_1, arg348_1, arg349_1, arg350_1, arg351_1, arg352_1, arg353_1, arg354_1, arg355_1, arg356_1, arg357_1, arg358_1, arg359_1, arg360_1, arg361_1, arg362_1, arg363_1, arg364_1, arg365_1, arg366_1, arg367_1, arg368_1, arg369_1, arg370_1, arg371_1, arg372_1, arg373_1, arg374_1, arg375_1, arg376_1, arg377_1, arg378_1, arg379_1, arg380_1, arg381_1, arg382_1, arg383_1, arg384_1, arg385_1, arg386_1, arg387_1, arg388_1, arg389_1, arg390_1, arg391_1, arg392_1, arg393_1, arg394_1, arg395_1, arg396_1, arg397_1, arg398_1, arg399_1, arg400_1, arg401_1, arg402_1, arg403_1, arg404_1, arg405_1, arg406_1, arg407_1, arg408_1, arg409_1, arg410_1, arg411_1, arg412_1, arg413_1, arg414_1, arg415_1, arg416_1, arg417_1, arg418_1, arg419_1, arg420_1, arg421_1, arg422_1, arg423_1, arg424_1, arg425_1, arg426_1, arg427_1, arg428_1, arg429_1, arg430_1, arg431_1, arg432_1, arg433_1, arg434_1, arg435_1, arg436_1, arg437_1, arg438_1, arg439_1, arg440_1, arg441_1, arg442_1, arg443_1, arg444_1, arg445_1, arg446_1, arg447_1, arg448_1, arg449_1, arg450_1, arg451_1, arg452_1, arg453_1, arg454_1, arg455_1, arg456_1, arg457_1, arg458_1, arg459_1, arg460_1, arg461_1, arg462_1, arg463_1, arg464_1, arg465_1, arg466_1, arg467_1, arg468_1, arg469_1, arg470_1, arg471_1, arg472_1, arg473_1, arg474_1, arg475_1, arg476_1, arg477_1, arg478_1, arg479_1, arg480_1, arg481_1, arg482_1, arg483_1, arg484_1, arg485_1, arg486_1, arg487_1, arg488_1, arg489_1, arg490_1, arg491_1, arg492_1, arg493_1, arg494_1, arg495_1, arg496_1, arg497_1, arg498_1, arg499_1, arg500_1, arg501_1, arg502_1, arg503_1, arg504_1, arg505_1, arg506_1, arg507_1, arg508_1, arg509_1, arg510_1, arg511_1, arg512_1, arg513_1, arg514_1, arg515_1, arg516_1, arg517_1, arg518_1, arg519_1, arg520_1, arg521_1, arg522_1, arg523_1, arg524_1, arg525_1, arg526_1, arg527_1, arg528_1, arg529_1, arg530_1, arg531_1, arg532_1, arg533_1, arg534_1, arg535_1, arg536_1, arg537_1, arg538_1, arg539_1, arg540_1, arg541_1, arg542_1, arg543_1, arg544_1, arg545_1, arg546_1, arg547_1, arg548_1, arg549_1, arg550_1, arg551_1, arg552_1, arg553_1, arg554_1, arg555_1, arg556_1, arg557_1, arg558_1, arg559_1, arg560_1, arg561_1, arg562_1, arg563_1, arg564_1, arg565_1, arg566_1, arg567_1, arg568_1, arg569_1, arg570_1, arg571_1, arg572_1, arg573_1, arg574_1, arg575_1, arg576_1, arg577_1, arg578_1, arg579_1, arg580_1, arg581_1, arg582_1, arg583_1, arg584_1, arg585_1, arg586_1, arg587_1, arg588_1, arg589_1, arg590_1, arg591_1, arg592_1, arg593_1, arg594_1, arg595_1, arg596_1, arg597_1, arg598_1, arg599_1, arg600_1, arg601_1, arg602_1, arg603_1, arg604_1, arg605_1, arg606_1, arg607_1, arg608_1, arg609_1, arg610_1, arg611_1, arg612_1, arg613_1, arg614_1, arg615_1, arg616_1, arg617_1, arg618_1, arg619_1, arg620_1, arg621_1, arg622_1, arg623_1, arg624_1, arg625_1, arg626_1, arg627_1, arg628_1, arg629_1, arg630_1, arg631_1, arg632_1, arg633_1, arg634_1, arg635_1, arg636_1, arg637_1, arg638_1, arg639_1, arg640_1, arg641_1, arg642_1, arg643_1, arg644_1, arg645_1, arg646_1, arg647_1, arg648_1, arg649_1, arg650_1, arg651_1, arg652_1, arg653_1, arg654_1, arg655_1, arg656_1, arg657_1, arg658_1, arg659_1, arg660_1, arg661_1, arg662_1, arg663_1, arg664_1, arg665_1, arg666_1, arg667_1, arg668_1, arg669_1, arg670_1, arg671_1, arg672_1, arg673_1, arg674_1, arg675_1, arg676_1, arg677_1, arg678_1, arg679_1, arg680_1, arg681_1, arg682_1, arg683_1, arg684_1, arg685_1, arg686_1, arg687_1, arg688_1, arg689_1, arg690_1, arg691_1, arg692_1, arg693_1, arg694_1, arg695_1, arg696_1, arg697_1, arg698_1, arg699_1, arg700_1, arg701_1, arg702_1, arg703_1, arg704_1, arg705_1, arg706_1, arg707_1, arg708_1, arg709_1, arg710_1, arg711_1, arg712_1, arg713_1, arg714_1, arg715_1, arg716_1, arg717_1, arg718_1, arg719_1, arg720_1, arg721_1, arg722_1, arg723_1, arg724_1, arg725_1, arg726_1, arg727_1, arg728_1, arg729_1, arg730_1, arg731_1, arg732_1, arg733_1, arg734_1, arg735_1, arg736_1, arg737_1, arg738_1, arg739_1, arg740_1, arg741_1, arg742_1, arg743_1, arg744_1, arg745_1, arg746_1, arg747_1, arg748_1, arg749_1, arg750_1, arg751_1, arg752_1, arg753_1, arg754_1, arg755_1, arg756_1, arg757_1, arg758_1, arg759_1, arg760_1, arg761_1, arg762_1, arg763_1, arg764_1, arg765_1, arg766_1, arg767_1, arg768_1, arg769_1, arg770_1, arg771_1, arg772_1, arg773_1, arg774_1, arg775_1, arg776_1, arg777_1, arg778_1, arg779_1, arg780_1, arg781_1, arg782_1, arg783_1, arg784_1, arg785_1, arg786_1, arg787_1, arg788_1, arg789_1, arg790_1, arg791_1, arg792_1, arg793_1, arg794_1, arg795_1, arg796_1, arg797_1, arg798_1, arg799_1, arg800_1, arg801_1, arg802_1, arg803_1, arg804_1, arg805_1, arg806_1, arg807_1, arg808_1, arg809_1, arg810_1, arg811_1, arg812_1, arg813_1, arg814_1, arg815_1, arg816_1, arg817_1, arg818_1, arg819_1, arg820_1, arg821_1, arg822_1, arg823_1, arg824_1, arg825_1, arg826_1, arg827_1, arg828_1, arg829_1, arg830_1, arg831_1, arg832_1, arg833_1, arg834_1, arg835_1, arg836_1, arg837_1, arg838_1, arg839_1, arg840_1, arg841_1, arg842_1, arg843_1, arg844_1, arg845_1, arg846_1, arg847_1, arg848_1, arg849_1, arg850_1, arg851_1, arg852_1, arg853_1, arg854_1, arg855_1, arg856_1, arg857_1, arg858_1, arg859_1, arg860_1, arg861_1, arg862_1, arg863_1, arg864_1, arg865_1, arg866_1, arg867_1, arg868_1, arg869_1, arg870_1, arg871_1, arg872_1, arg873_1, arg874_1, arg875_1, arg876_1, arg877_1, arg878_1, arg879_1, arg880_1, arg881_1, arg882_1, arg883_1, arg884_1, arg885_1, arg886_1, arg887_1, arg888_1, arg889_1, arg890_1, arg891_1, arg892_1, arg893_1, arg894_1, arg895_1, arg896_1, arg897_1, arg898_1, arg899_1, arg900_1, arg901_1, arg902_1, arg903_1, arg904_1, arg905_1, arg906_1, arg907_1, arg908_1, arg909_1, arg910_1, arg911_1, arg912_1, arg913_1, arg914_1, arg915_1, arg916_1, arg917_1, arg918_1, arg919_1, arg920_1, arg921_1, arg922_1, arg923_1, arg924_1, arg925_1, arg926_1, arg927_1, arg928_1, arg929_1, arg930_1, arg931_1, arg932_1, arg933_1, arg934_1, arg935_1, arg936_1, arg937_1, arg938_1, arg939_1, arg940_1, arg941_1, arg942_1, arg943_1, arg944_1, arg945_1, arg946_1, arg947_1, arg948_1, arg949_1, arg950_1, arg951_1, arg952_1, arg953_1, arg954_1, arg955_1, arg956_1, arg957_1, arg958_1, arg959_1, arg960_1, arg961_1, arg962_1, arg963_1, arg964_1, arg965_1, arg966_1, arg967_1, arg968_1, arg969_1, arg970_1, arg971_1, arg972_1, arg973_1, arg974_1, arg975_1, arg976_1, arg977_1, arg978_1, arg979_1, arg980_1, arg981_1, arg982_1, arg983_1, arg984_1, arg985_1, arg986_1, arg987_1, arg988_1, arg989_1, arg990_1, arg991_1, arg992_1, arg993_1, arg994_1, arg995_1, arg996_1, arg997_1, arg998_1, arg999_1, arg1000_1, arg1001_1, arg1002_1, arg1003_1, arg1004_1, arg1005_1, arg1006_1, arg1007_1, arg1008_1, arg1009_1, arg1010_1, arg1011_1, arg1012_1, arg1013_1, arg1014_1, arg1015_1, arg1016_1, arg1017_1, arg1018_1, arg1019_1, arg1020_1, arg1021_1, arg1022_1, arg1023_1, arg1024_1, arg1025_1, arg1026_1, arg1027_1, arg1028_1, arg1029_1, arg1030_1, arg1031_1, arg1032_1, arg1033_1, arg1034_1, arg1035_1, arg1036_1, arg1037_1, arg1038_1, arg1039_1, arg1040_1, arg1041_1, arg1042_1, arg1043_1, arg1044_1, arg1045_1, arg1046_1, arg1047_1, arg1048_1, arg1049_1, arg1050_1, arg1051_1, arg1052_1, arg1053_1, arg1054_1, arg1055_1, arg1056_1, arg1057_1, arg1058_1, arg1059_1, arg1060_1, arg1061_1, arg1062_1, arg1063_1, arg1064_1, arg1065_1, arg1066_1, arg1067_1, arg1068_1, arg1069_1, arg1070_1, arg1071_1, arg1072_1, arg1073_1, arg1074_1, arg1075_1, arg1076_1, arg1077_1, arg1078_1, arg1079_1, arg1080_1, arg1081_1, arg1082_1, arg1083_1, arg1084_1, arg1085_1, arg1086_1, arg1087_1, arg1088_1, arg1089_1, arg1090_1, arg1091_1, arg1092_1, arg1093_1, arg1094_1, arg1095_1, arg1096_1, arg1097_1, arg1098_1, arg1099_1, arg1100_1, arg1101_1, arg1102_1, arg1103_1, arg1104_1, arg1105_1, arg1106_1, arg1107_1, arg1108_1, arg1109_1, arg1110_1, arg1111_1, arg1112_1, arg1113_1, arg1114_1, arg1115_1, arg1116_1, arg1117_1, arg1118_1, arg1119_1, arg1120_1, arg1121_1, arg1122_1, arg1123_1, arg1124_1, arg1125_1, arg1126_1, arg1127_1, arg1128_1, arg1129_1, arg1130_1, arg1131_1, arg1132_1, arg1133_1, arg1134_1, arg1135_1, arg1136_1, arg1137_1, arg1138_1, arg1139_1, arg1140_1, arg1141_1, arg1142_1, arg1143_1, arg1144_1, arg1145_1, arg1146_1, arg1147_1, arg1148_1, arg1149_1, arg1150_1, arg1151_1, arg1152_1, arg1153_1, arg1154_1, arg1155_1, arg1156_1, arg1157_1, arg1158_1, arg1159_1, arg1160_1, arg1161_1, arg1162_1, arg1163_1, arg1164_1, arg1165_1, arg1166_1, arg1167_1, arg1168_1, arg1169_1, arg1170_1, arg1171_1, arg1172_1, arg1173_1, arg1174_1, arg1175_1, arg1176_1, arg1177_1, arg1178_1, arg1179_1, arg1180_1, arg1181_1, arg1182_1, arg1183_1, arg1184_1, arg1185_1, arg1186_1, arg1187_1, arg1188_1, arg1189_1, arg1190_1, arg1191_1, arg1192_1, arg1193_1, arg1194_1, arg1195_1, arg1196_1, arg1197_1, arg1198_1, arg1199_1, arg1200_1, arg1201_1, arg1202_1, arg1203_1, arg1204_1, arg1205_1, arg1206_1, arg1207_1, arg1208_1, arg1209_1, arg1210_1, arg1211_1, arg1212_1, arg1213_1, arg1214_1, arg1215_1, arg1216_1, arg1217_1, arg1218_1, arg1219_1, arg1220_1, arg1221_1, arg1222_1, arg1223_1, arg1224_1, arg1225_1, arg1226_1, arg1227_1, arg1228_1, arg1229_1, arg1230_1, arg1231_1, arg1232_1, arg1233_1, arg1234_1, arg1235_1, arg1236_1, arg1237_1, arg1238_1, arg1239_1, arg1240_1, arg1241_1, arg1242_1, arg1243_1, arg1244_1, arg1245_1, arg1246_1, arg1247_1, arg1248_1, arg1249_1, arg1250_1, arg1251_1, arg1252_1, arg1253_1, arg1254_1, arg1255_1, arg1256_1, arg1257_1, arg1258_1, arg1259_1, arg1260_1, arg1261_1, arg1262_1, arg1263_1, arg1264_1, arg1265_1, arg1266_1, arg1267_1, arg1268_1, arg1269_1, arg1270_1, arg1271_1, arg1272_1, arg1273_1, arg1274_1, arg1275_1, arg1276_1, arg1277_1, arg1278_1, arg1279_1, arg1280_1, arg1281_1, arg1282_1, arg1283_1, arg1284_1, arg1285_1, arg1286_1, arg1287_1, arg1288_1, arg1289_1, arg1290_1, arg1291_1, arg1292_1, arg1293_1, arg1294_1, arg1295_1, arg1296_1, arg1297_1, arg1298_1, arg1299_1, arg1300_1, arg1301_1, arg1302_1, arg1303_1, arg1304_1, arg1305_1, arg1306_1, arg1307_1, arg1308_1, arg1309_1, arg1310_1, arg1311_1, arg1312_1, arg1313_1, arg1314_1, arg1315_1, arg1316_1, arg1317_1, arg1318_1, arg1319_1, arg1320_1, arg1321_1, arg1322_1, arg1323_1, arg1324_1, arg1325_1, arg1326_1, arg1327_1, arg1328_1, arg1329_1, arg1330_1, arg1331_1, arg1332_1, arg1333_1, arg1334_1, arg1335_1, arg1336_1, arg1337_1, arg1338_1, arg1339_1, arg1340_1, arg1341_1, arg1342_1, arg1343_1, arg1344_1, arg1345_1, arg1346_1, arg1347_1, arg1348_1, arg1349_1, arg1350_1, arg1351_1, arg1352_1, arg1353_1, arg1354_1, arg1355_1, arg1356_1, arg1357_1, arg1358_1, arg1359_1, arg1360_1, arg1361_1, arg1362_1, arg1363_1, arg1364_1, arg1365_1, arg1366_1, arg1367_1, arg1368_1, arg1369_1, arg1370_1, arg1371_1, arg1372_1, arg1373_1, arg1374_1, arg1375_1, arg1376_1, arg1377_1, arg1378_1, arg1379_1]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('pnasnet5large', benchmark_compiled_module)
