from __future__ import annotations



def forward(self, primals, tangents):
    primals_1: "f32[64, 3, 3, 3]"; primals_2: "f32[64]"; primals_3: "f32[64]"; primals_4: "f32[64, 64, 3, 3]"; primals_5: "f32[64]"; primals_6: "f32[64]"; primals_7: "f32[64, 64, 1, 1]"; primals_8: "f32[64]"; primals_9: "f32[64]"; primals_10: "f32[64, 64, 3, 3]"; primals_11: "f32[64]"; primals_12: "f32[64]"; primals_13: "f32[256, 64, 1, 1]"; primals_14: "f32[256]"; primals_15: "f32[256]"; primals_16: "f32[256, 64, 1, 1]"; primals_17: "f32[256]"; primals_18: "f32[256]"; primals_19: "f32[64, 256, 1, 1]"; primals_20: "f32[64]"; primals_21: "f32[64]"; primals_22: "f32[64, 64, 3, 3]"; primals_23: "f32[64]"; primals_24: "f32[64]"; primals_25: "f32[256, 64, 1, 1]"; primals_26: "f32[256]"; primals_27: "f32[256]"; primals_28: "f32[64, 256, 1, 1]"; primals_29: "f32[64]"; primals_30: "f32[64]"; primals_31: "f32[64, 64, 3, 3]"; primals_32: "f32[64]"; primals_33: "f32[64]"; primals_34: "f32[256, 64, 1, 1]"; primals_35: "f32[256]"; primals_36: "f32[256]"; primals_37: "f32[64, 256, 1, 1]"; primals_38: "f32[64]"; primals_39: "f32[64]"; primals_40: "f32[64, 64, 3, 3]"; primals_41: "f32[64]"; primals_42: "f32[64]"; primals_43: "f32[256, 64, 1, 1]"; primals_44: "f32[256]"; primals_45: "f32[256]"; primals_46: "f32[18, 256, 3, 3]"; primals_47: "f32[18]"; primals_48: "f32[18]"; primals_49: "f32[36, 256, 3, 3]"; primals_50: "f32[36]"; primals_51: "f32[36]"; primals_52: "f32[18, 18, 3, 3]"; primals_53: "f32[18]"; primals_54: "f32[18]"; primals_55: "f32[18, 18, 3, 3]"; primals_56: "f32[18]"; primals_57: "f32[18]"; primals_58: "f32[18, 18, 3, 3]"; primals_59: "f32[18]"; primals_60: "f32[18]"; primals_61: "f32[18, 18, 3, 3]"; primals_62: "f32[18]"; primals_63: "f32[18]"; primals_64: "f32[18, 18, 3, 3]"; primals_65: "f32[18]"; primals_66: "f32[18]"; primals_67: "f32[18, 18, 3, 3]"; primals_68: "f32[18]"; primals_69: "f32[18]"; primals_70: "f32[18, 18, 3, 3]"; primals_71: "f32[18]"; primals_72: "f32[18]"; primals_73: "f32[18, 18, 3, 3]"; primals_74: "f32[18]"; primals_75: "f32[18]"; primals_76: "f32[36, 36, 3, 3]"; primals_77: "f32[36]"; primals_78: "f32[36]"; primals_79: "f32[36, 36, 3, 3]"; primals_80: "f32[36]"; primals_81: "f32[36]"; primals_82: "f32[36, 36, 3, 3]"; primals_83: "f32[36]"; primals_84: "f32[36]"; primals_85: "f32[36, 36, 3, 3]"; primals_86: "f32[36]"; primals_87: "f32[36]"; primals_88: "f32[36, 36, 3, 3]"; primals_89: "f32[36]"; primals_90: "f32[36]"; primals_91: "f32[36, 36, 3, 3]"; primals_92: "f32[36]"; primals_93: "f32[36]"; primals_94: "f32[36, 36, 3, 3]"; primals_95: "f32[36]"; primals_96: "f32[36]"; primals_97: "f32[36, 36, 3, 3]"; primals_98: "f32[36]"; primals_99: "f32[36]"; primals_100: "f32[18, 36, 1, 1]"; primals_101: "f32[18]"; primals_102: "f32[18]"; primals_103: "f32[36, 18, 3, 3]"; primals_104: "f32[36]"; primals_105: "f32[36]"; primals_106: "f32[72, 36, 3, 3]"; primals_107: "f32[72]"; primals_108: "f32[72]"; primals_109: "f32[18, 18, 3, 3]"; primals_110: "f32[18]"; primals_111: "f32[18]"; primals_112: "f32[18, 18, 3, 3]"; primals_113: "f32[18]"; primals_114: "f32[18]"; primals_115: "f32[18, 18, 3, 3]"; primals_116: "f32[18]"; primals_117: "f32[18]"; primals_118: "f32[18, 18, 3, 3]"; primals_119: "f32[18]"; primals_120: "f32[18]"; primals_121: "f32[18, 18, 3, 3]"; primals_122: "f32[18]"; primals_123: "f32[18]"; primals_124: "f32[18, 18, 3, 3]"; primals_125: "f32[18]"; primals_126: "f32[18]"; primals_127: "f32[18, 18, 3, 3]"; primals_128: "f32[18]"; primals_129: "f32[18]"; primals_130: "f32[18, 18, 3, 3]"; primals_131: "f32[18]"; primals_132: "f32[18]"; primals_133: "f32[36, 36, 3, 3]"; primals_134: "f32[36]"; primals_135: "f32[36]"; primals_136: "f32[36, 36, 3, 3]"; primals_137: "f32[36]"; primals_138: "f32[36]"; primals_139: "f32[36, 36, 3, 3]"; primals_140: "f32[36]"; primals_141: "f32[36]"; primals_142: "f32[36, 36, 3, 3]"; primals_143: "f32[36]"; primals_144: "f32[36]"; primals_145: "f32[36, 36, 3, 3]"; primals_146: "f32[36]"; primals_147: "f32[36]"; primals_148: "f32[36, 36, 3, 3]"; primals_149: "f32[36]"; primals_150: "f32[36]"; primals_151: "f32[36, 36, 3, 3]"; primals_152: "f32[36]"; primals_153: "f32[36]"; primals_154: "f32[36, 36, 3, 3]"; primals_155: "f32[36]"; primals_156: "f32[36]"; primals_157: "f32[72, 72, 3, 3]"; primals_158: "f32[72]"; primals_159: "f32[72]"; primals_160: "f32[72, 72, 3, 3]"; primals_161: "f32[72]"; primals_162: "f32[72]"; primals_163: "f32[72, 72, 3, 3]"; primals_164: "f32[72]"; primals_165: "f32[72]"; primals_166: "f32[72, 72, 3, 3]"; primals_167: "f32[72]"; primals_168: "f32[72]"; primals_169: "f32[72, 72, 3, 3]"; primals_170: "f32[72]"; primals_171: "f32[72]"; primals_172: "f32[72, 72, 3, 3]"; primals_173: "f32[72]"; primals_174: "f32[72]"; primals_175: "f32[72, 72, 3, 3]"; primals_176: "f32[72]"; primals_177: "f32[72]"; primals_178: "f32[72, 72, 3, 3]"; primals_179: "f32[72]"; primals_180: "f32[72]"; primals_181: "f32[18, 36, 1, 1]"; primals_182: "f32[18]"; primals_183: "f32[18]"; primals_184: "f32[18, 72, 1, 1]"; primals_185: "f32[18]"; primals_186: "f32[18]"; primals_187: "f32[36, 18, 3, 3]"; primals_188: "f32[36]"; primals_189: "f32[36]"; primals_190: "f32[36, 72, 1, 1]"; primals_191: "f32[36]"; primals_192: "f32[36]"; primals_193: "f32[18, 18, 3, 3]"; primals_194: "f32[18]"; primals_195: "f32[18]"; primals_196: "f32[72, 18, 3, 3]"; primals_197: "f32[72]"; primals_198: "f32[72]"; primals_199: "f32[72, 36, 3, 3]"; primals_200: "f32[72]"; primals_201: "f32[72]"; primals_202: "f32[18, 18, 3, 3]"; primals_203: "f32[18]"; primals_204: "f32[18]"; primals_205: "f32[18, 18, 3, 3]"; primals_206: "f32[18]"; primals_207: "f32[18]"; primals_208: "f32[18, 18, 3, 3]"; primals_209: "f32[18]"; primals_210: "f32[18]"; primals_211: "f32[18, 18, 3, 3]"; primals_212: "f32[18]"; primals_213: "f32[18]"; primals_214: "f32[18, 18, 3, 3]"; primals_215: "f32[18]"; primals_216: "f32[18]"; primals_217: "f32[18, 18, 3, 3]"; primals_218: "f32[18]"; primals_219: "f32[18]"; primals_220: "f32[18, 18, 3, 3]"; primals_221: "f32[18]"; primals_222: "f32[18]"; primals_223: "f32[18, 18, 3, 3]"; primals_224: "f32[18]"; primals_225: "f32[18]"; primals_226: "f32[36, 36, 3, 3]"; primals_227: "f32[36]"; primals_228: "f32[36]"; primals_229: "f32[36, 36, 3, 3]"; primals_230: "f32[36]"; primals_231: "f32[36]"; primals_232: "f32[36, 36, 3, 3]"; primals_233: "f32[36]"; primals_234: "f32[36]"; primals_235: "f32[36, 36, 3, 3]"; primals_236: "f32[36]"; primals_237: "f32[36]"; primals_238: "f32[36, 36, 3, 3]"; primals_239: "f32[36]"; primals_240: "f32[36]"; primals_241: "f32[36, 36, 3, 3]"; primals_242: "f32[36]"; primals_243: "f32[36]"; primals_244: "f32[36, 36, 3, 3]"; primals_245: "f32[36]"; primals_246: "f32[36]"; primals_247: "f32[36, 36, 3, 3]"; primals_248: "f32[36]"; primals_249: "f32[36]"; primals_250: "f32[72, 72, 3, 3]"; primals_251: "f32[72]"; primals_252: "f32[72]"; primals_253: "f32[72, 72, 3, 3]"; primals_254: "f32[72]"; primals_255: "f32[72]"; primals_256: "f32[72, 72, 3, 3]"; primals_257: "f32[72]"; primals_258: "f32[72]"; primals_259: "f32[72, 72, 3, 3]"; primals_260: "f32[72]"; primals_261: "f32[72]"; primals_262: "f32[72, 72, 3, 3]"; primals_263: "f32[72]"; primals_264: "f32[72]"; primals_265: "f32[72, 72, 3, 3]"; primals_266: "f32[72]"; primals_267: "f32[72]"; primals_268: "f32[72, 72, 3, 3]"; primals_269: "f32[72]"; primals_270: "f32[72]"; primals_271: "f32[72, 72, 3, 3]"; primals_272: "f32[72]"; primals_273: "f32[72]"; primals_274: "f32[18, 36, 1, 1]"; primals_275: "f32[18]"; primals_276: "f32[18]"; primals_277: "f32[18, 72, 1, 1]"; primals_278: "f32[18]"; primals_279: "f32[18]"; primals_280: "f32[36, 18, 3, 3]"; primals_281: "f32[36]"; primals_282: "f32[36]"; primals_283: "f32[36, 72, 1, 1]"; primals_284: "f32[36]"; primals_285: "f32[36]"; primals_286: "f32[18, 18, 3, 3]"; primals_287: "f32[18]"; primals_288: "f32[18]"; primals_289: "f32[72, 18, 3, 3]"; primals_290: "f32[72]"; primals_291: "f32[72]"; primals_292: "f32[72, 36, 3, 3]"; primals_293: "f32[72]"; primals_294: "f32[72]"; primals_295: "f32[18, 18, 3, 3]"; primals_296: "f32[18]"; primals_297: "f32[18]"; primals_298: "f32[18, 18, 3, 3]"; primals_299: "f32[18]"; primals_300: "f32[18]"; primals_301: "f32[18, 18, 3, 3]"; primals_302: "f32[18]"; primals_303: "f32[18]"; primals_304: "f32[18, 18, 3, 3]"; primals_305: "f32[18]"; primals_306: "f32[18]"; primals_307: "f32[18, 18, 3, 3]"; primals_308: "f32[18]"; primals_309: "f32[18]"; primals_310: "f32[18, 18, 3, 3]"; primals_311: "f32[18]"; primals_312: "f32[18]"; primals_313: "f32[18, 18, 3, 3]"; primals_314: "f32[18]"; primals_315: "f32[18]"; primals_316: "f32[18, 18, 3, 3]"; primals_317: "f32[18]"; primals_318: "f32[18]"; primals_319: "f32[36, 36, 3, 3]"; primals_320: "f32[36]"; primals_321: "f32[36]"; primals_322: "f32[36, 36, 3, 3]"; primals_323: "f32[36]"; primals_324: "f32[36]"; primals_325: "f32[36, 36, 3, 3]"; primals_326: "f32[36]"; primals_327: "f32[36]"; primals_328: "f32[36, 36, 3, 3]"; primals_329: "f32[36]"; primals_330: "f32[36]"; primals_331: "f32[36, 36, 3, 3]"; primals_332: "f32[36]"; primals_333: "f32[36]"; primals_334: "f32[36, 36, 3, 3]"; primals_335: "f32[36]"; primals_336: "f32[36]"; primals_337: "f32[36, 36, 3, 3]"; primals_338: "f32[36]"; primals_339: "f32[36]"; primals_340: "f32[36, 36, 3, 3]"; primals_341: "f32[36]"; primals_342: "f32[36]"; primals_343: "f32[72, 72, 3, 3]"; primals_344: "f32[72]"; primals_345: "f32[72]"; primals_346: "f32[72, 72, 3, 3]"; primals_347: "f32[72]"; primals_348: "f32[72]"; primals_349: "f32[72, 72, 3, 3]"; primals_350: "f32[72]"; primals_351: "f32[72]"; primals_352: "f32[72, 72, 3, 3]"; primals_353: "f32[72]"; primals_354: "f32[72]"; primals_355: "f32[72, 72, 3, 3]"; primals_356: "f32[72]"; primals_357: "f32[72]"; primals_358: "f32[72, 72, 3, 3]"; primals_359: "f32[72]"; primals_360: "f32[72]"; primals_361: "f32[72, 72, 3, 3]"; primals_362: "f32[72]"; primals_363: "f32[72]"; primals_364: "f32[72, 72, 3, 3]"; primals_365: "f32[72]"; primals_366: "f32[72]"; primals_367: "f32[18, 36, 1, 1]"; primals_368: "f32[18]"; primals_369: "f32[18]"; primals_370: "f32[18, 72, 1, 1]"; primals_371: "f32[18]"; primals_372: "f32[18]"; primals_373: "f32[36, 18, 3, 3]"; primals_374: "f32[36]"; primals_375: "f32[36]"; primals_376: "f32[36, 72, 1, 1]"; primals_377: "f32[36]"; primals_378: "f32[36]"; primals_379: "f32[18, 18, 3, 3]"; primals_380: "f32[18]"; primals_381: "f32[18]"; primals_382: "f32[72, 18, 3, 3]"; primals_383: "f32[72]"; primals_384: "f32[72]"; primals_385: "f32[72, 36, 3, 3]"; primals_386: "f32[72]"; primals_387: "f32[72]"; primals_388: "f32[18, 18, 3, 3]"; primals_389: "f32[18]"; primals_390: "f32[18]"; primals_391: "f32[18, 18, 3, 3]"; primals_392: "f32[18]"; primals_393: "f32[18]"; primals_394: "f32[18, 18, 3, 3]"; primals_395: "f32[18]"; primals_396: "f32[18]"; primals_397: "f32[18, 18, 3, 3]"; primals_398: "f32[18]"; primals_399: "f32[18]"; primals_400: "f32[18, 18, 3, 3]"; primals_401: "f32[18]"; primals_402: "f32[18]"; primals_403: "f32[18, 18, 3, 3]"; primals_404: "f32[18]"; primals_405: "f32[18]"; primals_406: "f32[18, 18, 3, 3]"; primals_407: "f32[18]"; primals_408: "f32[18]"; primals_409: "f32[18, 18, 3, 3]"; primals_410: "f32[18]"; primals_411: "f32[18]"; primals_412: "f32[36, 36, 3, 3]"; primals_413: "f32[36]"; primals_414: "f32[36]"; primals_415: "f32[36, 36, 3, 3]"; primals_416: "f32[36]"; primals_417: "f32[36]"; primals_418: "f32[36, 36, 3, 3]"; primals_419: "f32[36]"; primals_420: "f32[36]"; primals_421: "f32[36, 36, 3, 3]"; primals_422: "f32[36]"; primals_423: "f32[36]"; primals_424: "f32[36, 36, 3, 3]"; primals_425: "f32[36]"; primals_426: "f32[36]"; primals_427: "f32[36, 36, 3, 3]"; primals_428: "f32[36]"; primals_429: "f32[36]"; primals_430: "f32[36, 36, 3, 3]"; primals_431: "f32[36]"; primals_432: "f32[36]"; primals_433: "f32[36, 36, 3, 3]"; primals_434: "f32[36]"; primals_435: "f32[36]"; primals_436: "f32[72, 72, 3, 3]"; primals_437: "f32[72]"; primals_438: "f32[72]"; primals_439: "f32[72, 72, 3, 3]"; primals_440: "f32[72]"; primals_441: "f32[72]"; primals_442: "f32[72, 72, 3, 3]"; primals_443: "f32[72]"; primals_444: "f32[72]"; primals_445: "f32[72, 72, 3, 3]"; primals_446: "f32[72]"; primals_447: "f32[72]"; primals_448: "f32[72, 72, 3, 3]"; primals_449: "f32[72]"; primals_450: "f32[72]"; primals_451: "f32[72, 72, 3, 3]"; primals_452: "f32[72]"; primals_453: "f32[72]"; primals_454: "f32[72, 72, 3, 3]"; primals_455: "f32[72]"; primals_456: "f32[72]"; primals_457: "f32[72, 72, 3, 3]"; primals_458: "f32[72]"; primals_459: "f32[72]"; primals_460: "f32[18, 36, 1, 1]"; primals_461: "f32[18]"; primals_462: "f32[18]"; primals_463: "f32[18, 72, 1, 1]"; primals_464: "f32[18]"; primals_465: "f32[18]"; primals_466: "f32[36, 18, 3, 3]"; primals_467: "f32[36]"; primals_468: "f32[36]"; primals_469: "f32[36, 72, 1, 1]"; primals_470: "f32[36]"; primals_471: "f32[36]"; primals_472: "f32[18, 18, 3, 3]"; primals_473: "f32[18]"; primals_474: "f32[18]"; primals_475: "f32[72, 18, 3, 3]"; primals_476: "f32[72]"; primals_477: "f32[72]"; primals_478: "f32[72, 36, 3, 3]"; primals_479: "f32[72]"; primals_480: "f32[72]"; primals_481: "f32[144, 72, 3, 3]"; primals_482: "f32[144]"; primals_483: "f32[144]"; primals_484: "f32[18, 18, 3, 3]"; primals_485: "f32[18]"; primals_486: "f32[18]"; primals_487: "f32[18, 18, 3, 3]"; primals_488: "f32[18]"; primals_489: "f32[18]"; primals_490: "f32[18, 18, 3, 3]"; primals_491: "f32[18]"; primals_492: "f32[18]"; primals_493: "f32[18, 18, 3, 3]"; primals_494: "f32[18]"; primals_495: "f32[18]"; primals_496: "f32[18, 18, 3, 3]"; primals_497: "f32[18]"; primals_498: "f32[18]"; primals_499: "f32[18, 18, 3, 3]"; primals_500: "f32[18]"; primals_501: "f32[18]"; primals_502: "f32[18, 18, 3, 3]"; primals_503: "f32[18]"; primals_504: "f32[18]"; primals_505: "f32[18, 18, 3, 3]"; primals_506: "f32[18]"; primals_507: "f32[18]"; primals_508: "f32[36, 36, 3, 3]"; primals_509: "f32[36]"; primals_510: "f32[36]"; primals_511: "f32[36, 36, 3, 3]"; primals_512: "f32[36]"; primals_513: "f32[36]"; primals_514: "f32[36, 36, 3, 3]"; primals_515: "f32[36]"; primals_516: "f32[36]"; primals_517: "f32[36, 36, 3, 3]"; primals_518: "f32[36]"; primals_519: "f32[36]"; primals_520: "f32[36, 36, 3, 3]"; primals_521: "f32[36]"; primals_522: "f32[36]"; primals_523: "f32[36, 36, 3, 3]"; primals_524: "f32[36]"; primals_525: "f32[36]"; primals_526: "f32[36, 36, 3, 3]"; primals_527: "f32[36]"; primals_528: "f32[36]"; primals_529: "f32[36, 36, 3, 3]"; primals_530: "f32[36]"; primals_531: "f32[36]"; primals_532: "f32[72, 72, 3, 3]"; primals_533: "f32[72]"; primals_534: "f32[72]"; primals_535: "f32[72, 72, 3, 3]"; primals_536: "f32[72]"; primals_537: "f32[72]"; primals_538: "f32[72, 72, 3, 3]"; primals_539: "f32[72]"; primals_540: "f32[72]"; primals_541: "f32[72, 72, 3, 3]"; primals_542: "f32[72]"; primals_543: "f32[72]"; primals_544: "f32[72, 72, 3, 3]"; primals_545: "f32[72]"; primals_546: "f32[72]"; primals_547: "f32[72, 72, 3, 3]"; primals_548: "f32[72]"; primals_549: "f32[72]"; primals_550: "f32[72, 72, 3, 3]"; primals_551: "f32[72]"; primals_552: "f32[72]"; primals_553: "f32[72, 72, 3, 3]"; primals_554: "f32[72]"; primals_555: "f32[72]"; primals_556: "f32[144, 144, 3, 3]"; primals_557: "f32[144]"; primals_558: "f32[144]"; primals_559: "f32[144, 144, 3, 3]"; primals_560: "f32[144]"; primals_561: "f32[144]"; primals_562: "f32[144, 144, 3, 3]"; primals_563: "f32[144]"; primals_564: "f32[144]"; primals_565: "f32[144, 144, 3, 3]"; primals_566: "f32[144]"; primals_567: "f32[144]"; primals_568: "f32[144, 144, 3, 3]"; primals_569: "f32[144]"; primals_570: "f32[144]"; primals_571: "f32[144, 144, 3, 3]"; primals_572: "f32[144]"; primals_573: "f32[144]"; primals_574: "f32[144, 144, 3, 3]"; primals_575: "f32[144]"; primals_576: "f32[144]"; primals_577: "f32[144, 144, 3, 3]"; primals_578: "f32[144]"; primals_579: "f32[144]"; primals_580: "f32[18, 36, 1, 1]"; primals_581: "f32[18]"; primals_582: "f32[18]"; primals_583: "f32[18, 72, 1, 1]"; primals_584: "f32[18]"; primals_585: "f32[18]"; primals_586: "f32[18, 144, 1, 1]"; primals_587: "f32[18]"; primals_588: "f32[18]"; primals_589: "f32[36, 18, 3, 3]"; primals_590: "f32[36]"; primals_591: "f32[36]"; primals_592: "f32[36, 72, 1, 1]"; primals_593: "f32[36]"; primals_594: "f32[36]"; primals_595: "f32[36, 144, 1, 1]"; primals_596: "f32[36]"; primals_597: "f32[36]"; primals_598: "f32[18, 18, 3, 3]"; primals_599: "f32[18]"; primals_600: "f32[18]"; primals_601: "f32[72, 18, 3, 3]"; primals_602: "f32[72]"; primals_603: "f32[72]"; primals_604: "f32[72, 36, 3, 3]"; primals_605: "f32[72]"; primals_606: "f32[72]"; primals_607: "f32[72, 144, 1, 1]"; primals_608: "f32[72]"; primals_609: "f32[72]"; primals_610: "f32[18, 18, 3, 3]"; primals_611: "f32[18]"; primals_612: "f32[18]"; primals_613: "f32[18, 18, 3, 3]"; primals_614: "f32[18]"; primals_615: "f32[18]"; primals_616: "f32[144, 18, 3, 3]"; primals_617: "f32[144]"; primals_618: "f32[144]"; primals_619: "f32[36, 36, 3, 3]"; primals_620: "f32[36]"; primals_621: "f32[36]"; primals_622: "f32[144, 36, 3, 3]"; primals_623: "f32[144]"; primals_624: "f32[144]"; primals_625: "f32[144, 72, 3, 3]"; primals_626: "f32[144]"; primals_627: "f32[144]"; primals_628: "f32[18, 18, 3, 3]"; primals_629: "f32[18]"; primals_630: "f32[18]"; primals_631: "f32[18, 18, 3, 3]"; primals_632: "f32[18]"; primals_633: "f32[18]"; primals_634: "f32[18, 18, 3, 3]"; primals_635: "f32[18]"; primals_636: "f32[18]"; primals_637: "f32[18, 18, 3, 3]"; primals_638: "f32[18]"; primals_639: "f32[18]"; primals_640: "f32[18, 18, 3, 3]"; primals_641: "f32[18]"; primals_642: "f32[18]"; primals_643: "f32[18, 18, 3, 3]"; primals_644: "f32[18]"; primals_645: "f32[18]"; primals_646: "f32[18, 18, 3, 3]"; primals_647: "f32[18]"; primals_648: "f32[18]"; primals_649: "f32[18, 18, 3, 3]"; primals_650: "f32[18]"; primals_651: "f32[18]"; primals_652: "f32[36, 36, 3, 3]"; primals_653: "f32[36]"; primals_654: "f32[36]"; primals_655: "f32[36, 36, 3, 3]"; primals_656: "f32[36]"; primals_657: "f32[36]"; primals_658: "f32[36, 36, 3, 3]"; primals_659: "f32[36]"; primals_660: "f32[36]"; primals_661: "f32[36, 36, 3, 3]"; primals_662: "f32[36]"; primals_663: "f32[36]"; primals_664: "f32[36, 36, 3, 3]"; primals_665: "f32[36]"; primals_666: "f32[36]"; primals_667: "f32[36, 36, 3, 3]"; primals_668: "f32[36]"; primals_669: "f32[36]"; primals_670: "f32[36, 36, 3, 3]"; primals_671: "f32[36]"; primals_672: "f32[36]"; primals_673: "f32[36, 36, 3, 3]"; primals_674: "f32[36]"; primals_675: "f32[36]"; primals_676: "f32[72, 72, 3, 3]"; primals_677: "f32[72]"; primals_678: "f32[72]"; primals_679: "f32[72, 72, 3, 3]"; primals_680: "f32[72]"; primals_681: "f32[72]"; primals_682: "f32[72, 72, 3, 3]"; primals_683: "f32[72]"; primals_684: "f32[72]"; primals_685: "f32[72, 72, 3, 3]"; primals_686: "f32[72]"; primals_687: "f32[72]"; primals_688: "f32[72, 72, 3, 3]"; primals_689: "f32[72]"; primals_690: "f32[72]"; primals_691: "f32[72, 72, 3, 3]"; primals_692: "f32[72]"; primals_693: "f32[72]"; primals_694: "f32[72, 72, 3, 3]"; primals_695: "f32[72]"; primals_696: "f32[72]"; primals_697: "f32[72, 72, 3, 3]"; primals_698: "f32[72]"; primals_699: "f32[72]"; primals_700: "f32[144, 144, 3, 3]"; primals_701: "f32[144]"; primals_702: "f32[144]"; primals_703: "f32[144, 144, 3, 3]"; primals_704: "f32[144]"; primals_705: "f32[144]"; primals_706: "f32[144, 144, 3, 3]"; primals_707: "f32[144]"; primals_708: "f32[144]"; primals_709: "f32[144, 144, 3, 3]"; primals_710: "f32[144]"; primals_711: "f32[144]"; primals_712: "f32[144, 144, 3, 3]"; primals_713: "f32[144]"; primals_714: "f32[144]"; primals_715: "f32[144, 144, 3, 3]"; primals_716: "f32[144]"; primals_717: "f32[144]"; primals_718: "f32[144, 144, 3, 3]"; primals_719: "f32[144]"; primals_720: "f32[144]"; primals_721: "f32[144, 144, 3, 3]"; primals_722: "f32[144]"; primals_723: "f32[144]"; primals_724: "f32[18, 36, 1, 1]"; primals_725: "f32[18]"; primals_726: "f32[18]"; primals_727: "f32[18, 72, 1, 1]"; primals_728: "f32[18]"; primals_729: "f32[18]"; primals_730: "f32[18, 144, 1, 1]"; primals_731: "f32[18]"; primals_732: "f32[18]"; primals_733: "f32[36, 18, 3, 3]"; primals_734: "f32[36]"; primals_735: "f32[36]"; primals_736: "f32[36, 72, 1, 1]"; primals_737: "f32[36]"; primals_738: "f32[36]"; primals_739: "f32[36, 144, 1, 1]"; primals_740: "f32[36]"; primals_741: "f32[36]"; primals_742: "f32[18, 18, 3, 3]"; primals_743: "f32[18]"; primals_744: "f32[18]"; primals_745: "f32[72, 18, 3, 3]"; primals_746: "f32[72]"; primals_747: "f32[72]"; primals_748: "f32[72, 36, 3, 3]"; primals_749: "f32[72]"; primals_750: "f32[72]"; primals_751: "f32[72, 144, 1, 1]"; primals_752: "f32[72]"; primals_753: "f32[72]"; primals_754: "f32[18, 18, 3, 3]"; primals_755: "f32[18]"; primals_756: "f32[18]"; primals_757: "f32[18, 18, 3, 3]"; primals_758: "f32[18]"; primals_759: "f32[18]"; primals_760: "f32[144, 18, 3, 3]"; primals_761: "f32[144]"; primals_762: "f32[144]"; primals_763: "f32[36, 36, 3, 3]"; primals_764: "f32[36]"; primals_765: "f32[36]"; primals_766: "f32[144, 36, 3, 3]"; primals_767: "f32[144]"; primals_768: "f32[144]"; primals_769: "f32[144, 72, 3, 3]"; primals_770: "f32[144]"; primals_771: "f32[144]"; primals_772: "f32[18, 18, 3, 3]"; primals_773: "f32[18]"; primals_774: "f32[18]"; primals_775: "f32[18, 18, 3, 3]"; primals_776: "f32[18]"; primals_777: "f32[18]"; primals_778: "f32[18, 18, 3, 3]"; primals_779: "f32[18]"; primals_780: "f32[18]"; primals_781: "f32[18, 18, 3, 3]"; primals_782: "f32[18]"; primals_783: "f32[18]"; primals_784: "f32[18, 18, 3, 3]"; primals_785: "f32[18]"; primals_786: "f32[18]"; primals_787: "f32[18, 18, 3, 3]"; primals_788: "f32[18]"; primals_789: "f32[18]"; primals_790: "f32[18, 18, 3, 3]"; primals_791: "f32[18]"; primals_792: "f32[18]"; primals_793: "f32[18, 18, 3, 3]"; primals_794: "f32[18]"; primals_795: "f32[18]"; primals_796: "f32[36, 36, 3, 3]"; primals_797: "f32[36]"; primals_798: "f32[36]"; primals_799: "f32[36, 36, 3, 3]"; primals_800: "f32[36]"; primals_801: "f32[36]"; primals_802: "f32[36, 36, 3, 3]"; primals_803: "f32[36]"; primals_804: "f32[36]"; primals_805: "f32[36, 36, 3, 3]"; primals_806: "f32[36]"; primals_807: "f32[36]"; primals_808: "f32[36, 36, 3, 3]"; primals_809: "f32[36]"; primals_810: "f32[36]"; primals_811: "f32[36, 36, 3, 3]"; primals_812: "f32[36]"; primals_813: "f32[36]"; primals_814: "f32[36, 36, 3, 3]"; primals_815: "f32[36]"; primals_816: "f32[36]"; primals_817: "f32[36, 36, 3, 3]"; primals_818: "f32[36]"; primals_819: "f32[36]"; primals_820: "f32[72, 72, 3, 3]"; primals_821: "f32[72]"; primals_822: "f32[72]"; primals_823: "f32[72, 72, 3, 3]"; primals_824: "f32[72]"; primals_825: "f32[72]"; primals_826: "f32[72, 72, 3, 3]"; primals_827: "f32[72]"; primals_828: "f32[72]"; primals_829: "f32[72, 72, 3, 3]"; primals_830: "f32[72]"; primals_831: "f32[72]"; primals_832: "f32[72, 72, 3, 3]"; primals_833: "f32[72]"; primals_834: "f32[72]"; primals_835: "f32[72, 72, 3, 3]"; primals_836: "f32[72]"; primals_837: "f32[72]"; primals_838: "f32[72, 72, 3, 3]"; primals_839: "f32[72]"; primals_840: "f32[72]"; primals_841: "f32[72, 72, 3, 3]"; primals_842: "f32[72]"; primals_843: "f32[72]"; primals_844: "f32[144, 144, 3, 3]"; primals_845: "f32[144]"; primals_846: "f32[144]"; primals_847: "f32[144, 144, 3, 3]"; primals_848: "f32[144]"; primals_849: "f32[144]"; primals_850: "f32[144, 144, 3, 3]"; primals_851: "f32[144]"; primals_852: "f32[144]"; primals_853: "f32[144, 144, 3, 3]"; primals_854: "f32[144]"; primals_855: "f32[144]"; primals_856: "f32[144, 144, 3, 3]"; primals_857: "f32[144]"; primals_858: "f32[144]"; primals_859: "f32[144, 144, 3, 3]"; primals_860: "f32[144]"; primals_861: "f32[144]"; primals_862: "f32[144, 144, 3, 3]"; primals_863: "f32[144]"; primals_864: "f32[144]"; primals_865: "f32[144, 144, 3, 3]"; primals_866: "f32[144]"; primals_867: "f32[144]"; primals_868: "f32[18, 36, 1, 1]"; primals_869: "f32[18]"; primals_870: "f32[18]"; primals_871: "f32[18, 72, 1, 1]"; primals_872: "f32[18]"; primals_873: "f32[18]"; primals_874: "f32[18, 144, 1, 1]"; primals_875: "f32[18]"; primals_876: "f32[18]"; primals_877: "f32[36, 18, 3, 3]"; primals_878: "f32[36]"; primals_879: "f32[36]"; primals_880: "f32[36, 72, 1, 1]"; primals_881: "f32[36]"; primals_882: "f32[36]"; primals_883: "f32[36, 144, 1, 1]"; primals_884: "f32[36]"; primals_885: "f32[36]"; primals_886: "f32[18, 18, 3, 3]"; primals_887: "f32[18]"; primals_888: "f32[18]"; primals_889: "f32[72, 18, 3, 3]"; primals_890: "f32[72]"; primals_891: "f32[72]"; primals_892: "f32[72, 36, 3, 3]"; primals_893: "f32[72]"; primals_894: "f32[72]"; primals_895: "f32[72, 144, 1, 1]"; primals_896: "f32[72]"; primals_897: "f32[72]"; primals_898: "f32[18, 18, 3, 3]"; primals_899: "f32[18]"; primals_900: "f32[18]"; primals_901: "f32[18, 18, 3, 3]"; primals_902: "f32[18]"; primals_903: "f32[18]"; primals_904: "f32[144, 18, 3, 3]"; primals_905: "f32[144]"; primals_906: "f32[144]"; primals_907: "f32[36, 36, 3, 3]"; primals_908: "f32[36]"; primals_909: "f32[36]"; primals_910: "f32[144, 36, 3, 3]"; primals_911: "f32[144]"; primals_912: "f32[144]"; primals_913: "f32[144, 72, 3, 3]"; primals_914: "f32[144]"; primals_915: "f32[144]"; primals_916: "f32[32, 18, 1, 1]"; primals_917: "f32[32]"; primals_918: "f32[32]"; primals_919: "f32[32, 32, 3, 3]"; primals_920: "f32[32]"; primals_921: "f32[32]"; primals_922: "f32[128, 32, 1, 1]"; primals_923: "f32[128]"; primals_924: "f32[128]"; primals_925: "f32[128, 18, 1, 1]"; primals_926: "f32[128]"; primals_927: "f32[128]"; primals_928: "f32[64, 36, 1, 1]"; primals_929: "f32[64]"; primals_930: "f32[64]"; primals_931: "f32[64, 64, 3, 3]"; primals_932: "f32[64]"; primals_933: "f32[64]"; primals_934: "f32[256, 64, 1, 1]"; primals_935: "f32[256]"; primals_936: "f32[256]"; primals_937: "f32[256, 36, 1, 1]"; primals_938: "f32[256]"; primals_939: "f32[256]"; primals_940: "f32[256, 128, 3, 3]"; primals_941: "f32[256]"; primals_942: "f32[256]"; primals_943: "f32[256]"; primals_944: "f32[128, 72, 1, 1]"; primals_945: "f32[128]"; primals_946: "f32[128]"; primals_947: "f32[128, 128, 3, 3]"; primals_948: "f32[128]"; primals_949: "f32[128]"; primals_950: "f32[512, 128, 1, 1]"; primals_951: "f32[512]"; primals_952: "f32[512]"; primals_953: "f32[512, 72, 1, 1]"; primals_954: "f32[512]"; primals_955: "f32[512]"; primals_956: "f32[512, 256, 3, 3]"; primals_957: "f32[512]"; primals_958: "f32[512]"; primals_959: "f32[512]"; primals_960: "f32[256, 144, 1, 1]"; primals_961: "f32[256]"; primals_962: "f32[256]"; primals_963: "f32[256, 256, 3, 3]"; primals_964: "f32[256]"; primals_965: "f32[256]"; primals_966: "f32[1024, 256, 1, 1]"; primals_967: "f32[1024]"; primals_968: "f32[1024]"; primals_969: "f32[1024, 144, 1, 1]"; primals_970: "f32[1024]"; primals_971: "f32[1024]"; primals_972: "f32[1024, 512, 3, 3]"; primals_973: "f32[1024]"; primals_974: "f32[1024]"; primals_975: "f32[1024]"; primals_976: "f32[2048, 1024, 1, 1]"; primals_977: "f32[2048]"; primals_978: "f32[2048]"; primals_979: "f32[2048]"; primals_980: "f32[1000, 2048]"; primals_981: "f32[1000]"; primals_982: "f32[64]"; primals_983: "f32[64]"; primals_984: "i64[]"; primals_985: "f32[64]"; primals_986: "f32[64]"; primals_987: "i64[]"; primals_988: "f32[64]"; primals_989: "f32[64]"; primals_990: "i64[]"; primals_991: "f32[64]"; primals_992: "f32[64]"; primals_993: "i64[]"; primals_994: "f32[256]"; primals_995: "f32[256]"; primals_996: "i64[]"; primals_997: "f32[256]"; primals_998: "f32[256]"; primals_999: "i64[]"; primals_1000: "f32[64]"; primals_1001: "f32[64]"; primals_1002: "i64[]"; primals_1003: "f32[64]"; primals_1004: "f32[64]"; primals_1005: "i64[]"; primals_1006: "f32[256]"; primals_1007: "f32[256]"; primals_1008: "i64[]"; primals_1009: "f32[64]"; primals_1010: "f32[64]"; primals_1011: "i64[]"; primals_1012: "f32[64]"; primals_1013: "f32[64]"; primals_1014: "i64[]"; primals_1015: "f32[256]"; primals_1016: "f32[256]"; primals_1017: "i64[]"; primals_1018: "f32[64]"; primals_1019: "f32[64]"; primals_1020: "i64[]"; primals_1021: "f32[64]"; primals_1022: "f32[64]"; primals_1023: "i64[]"; primals_1024: "f32[256]"; primals_1025: "f32[256]"; primals_1026: "i64[]"; primals_1027: "f32[18]"; primals_1028: "f32[18]"; primals_1029: "i64[]"; primals_1030: "f32[36]"; primals_1031: "f32[36]"; primals_1032: "i64[]"; primals_1033: "f32[18]"; primals_1034: "f32[18]"; primals_1035: "i64[]"; primals_1036: "f32[18]"; primals_1037: "f32[18]"; primals_1038: "i64[]"; primals_1039: "f32[18]"; primals_1040: "f32[18]"; primals_1041: "i64[]"; primals_1042: "f32[18]"; primals_1043: "f32[18]"; primals_1044: "i64[]"; primals_1045: "f32[18]"; primals_1046: "f32[18]"; primals_1047: "i64[]"; primals_1048: "f32[18]"; primals_1049: "f32[18]"; primals_1050: "i64[]"; primals_1051: "f32[18]"; primals_1052: "f32[18]"; primals_1053: "i64[]"; primals_1054: "f32[18]"; primals_1055: "f32[18]"; primals_1056: "i64[]"; primals_1057: "f32[36]"; primals_1058: "f32[36]"; primals_1059: "i64[]"; primals_1060: "f32[36]"; primals_1061: "f32[36]"; primals_1062: "i64[]"; primals_1063: "f32[36]"; primals_1064: "f32[36]"; primals_1065: "i64[]"; primals_1066: "f32[36]"; primals_1067: "f32[36]"; primals_1068: "i64[]"; primals_1069: "f32[36]"; primals_1070: "f32[36]"; primals_1071: "i64[]"; primals_1072: "f32[36]"; primals_1073: "f32[36]"; primals_1074: "i64[]"; primals_1075: "f32[36]"; primals_1076: "f32[36]"; primals_1077: "i64[]"; primals_1078: "f32[36]"; primals_1079: "f32[36]"; primals_1080: "i64[]"; primals_1081: "f32[18]"; primals_1082: "f32[18]"; primals_1083: "i64[]"; primals_1084: "f32[36]"; primals_1085: "f32[36]"; primals_1086: "i64[]"; primals_1087: "f32[72]"; primals_1088: "f32[72]"; primals_1089: "i64[]"; primals_1090: "f32[18]"; primals_1091: "f32[18]"; primals_1092: "i64[]"; primals_1093: "f32[18]"; primals_1094: "f32[18]"; primals_1095: "i64[]"; primals_1096: "f32[18]"; primals_1097: "f32[18]"; primals_1098: "i64[]"; primals_1099: "f32[18]"; primals_1100: "f32[18]"; primals_1101: "i64[]"; primals_1102: "f32[18]"; primals_1103: "f32[18]"; primals_1104: "i64[]"; primals_1105: "f32[18]"; primals_1106: "f32[18]"; primals_1107: "i64[]"; primals_1108: "f32[18]"; primals_1109: "f32[18]"; primals_1110: "i64[]"; primals_1111: "f32[18]"; primals_1112: "f32[18]"; primals_1113: "i64[]"; primals_1114: "f32[36]"; primals_1115: "f32[36]"; primals_1116: "i64[]"; primals_1117: "f32[36]"; primals_1118: "f32[36]"; primals_1119: "i64[]"; primals_1120: "f32[36]"; primals_1121: "f32[36]"; primals_1122: "i64[]"; primals_1123: "f32[36]"; primals_1124: "f32[36]"; primals_1125: "i64[]"; primals_1126: "f32[36]"; primals_1127: "f32[36]"; primals_1128: "i64[]"; primals_1129: "f32[36]"; primals_1130: "f32[36]"; primals_1131: "i64[]"; primals_1132: "f32[36]"; primals_1133: "f32[36]"; primals_1134: "i64[]"; primals_1135: "f32[36]"; primals_1136: "f32[36]"; primals_1137: "i64[]"; primals_1138: "f32[72]"; primals_1139: "f32[72]"; primals_1140: "i64[]"; primals_1141: "f32[72]"; primals_1142: "f32[72]"; primals_1143: "i64[]"; primals_1144: "f32[72]"; primals_1145: "f32[72]"; primals_1146: "i64[]"; primals_1147: "f32[72]"; primals_1148: "f32[72]"; primals_1149: "i64[]"; primals_1150: "f32[72]"; primals_1151: "f32[72]"; primals_1152: "i64[]"; primals_1153: "f32[72]"; primals_1154: "f32[72]"; primals_1155: "i64[]"; primals_1156: "f32[72]"; primals_1157: "f32[72]"; primals_1158: "i64[]"; primals_1159: "f32[72]"; primals_1160: "f32[72]"; primals_1161: "i64[]"; primals_1162: "f32[18]"; primals_1163: "f32[18]"; primals_1164: "i64[]"; primals_1165: "f32[18]"; primals_1166: "f32[18]"; primals_1167: "i64[]"; primals_1168: "f32[36]"; primals_1169: "f32[36]"; primals_1170: "i64[]"; primals_1171: "f32[36]"; primals_1172: "f32[36]"; primals_1173: "i64[]"; primals_1174: "f32[18]"; primals_1175: "f32[18]"; primals_1176: "i64[]"; primals_1177: "f32[72]"; primals_1178: "f32[72]"; primals_1179: "i64[]"; primals_1180: "f32[72]"; primals_1181: "f32[72]"; primals_1182: "i64[]"; primals_1183: "f32[18]"; primals_1184: "f32[18]"; primals_1185: "i64[]"; primals_1186: "f32[18]"; primals_1187: "f32[18]"; primals_1188: "i64[]"; primals_1189: "f32[18]"; primals_1190: "f32[18]"; primals_1191: "i64[]"; primals_1192: "f32[18]"; primals_1193: "f32[18]"; primals_1194: "i64[]"; primals_1195: "f32[18]"; primals_1196: "f32[18]"; primals_1197: "i64[]"; primals_1198: "f32[18]"; primals_1199: "f32[18]"; primals_1200: "i64[]"; primals_1201: "f32[18]"; primals_1202: "f32[18]"; primals_1203: "i64[]"; primals_1204: "f32[18]"; primals_1205: "f32[18]"; primals_1206: "i64[]"; primals_1207: "f32[36]"; primals_1208: "f32[36]"; primals_1209: "i64[]"; primals_1210: "f32[36]"; primals_1211: "f32[36]"; primals_1212: "i64[]"; primals_1213: "f32[36]"; primals_1214: "f32[36]"; primals_1215: "i64[]"; primals_1216: "f32[36]"; primals_1217: "f32[36]"; primals_1218: "i64[]"; primals_1219: "f32[36]"; primals_1220: "f32[36]"; primals_1221: "i64[]"; primals_1222: "f32[36]"; primals_1223: "f32[36]"; primals_1224: "i64[]"; primals_1225: "f32[36]"; primals_1226: "f32[36]"; primals_1227: "i64[]"; primals_1228: "f32[36]"; primals_1229: "f32[36]"; primals_1230: "i64[]"; primals_1231: "f32[72]"; primals_1232: "f32[72]"; primals_1233: "i64[]"; primals_1234: "f32[72]"; primals_1235: "f32[72]"; primals_1236: "i64[]"; primals_1237: "f32[72]"; primals_1238: "f32[72]"; primals_1239: "i64[]"; primals_1240: "f32[72]"; primals_1241: "f32[72]"; primals_1242: "i64[]"; primals_1243: "f32[72]"; primals_1244: "f32[72]"; primals_1245: "i64[]"; primals_1246: "f32[72]"; primals_1247: "f32[72]"; primals_1248: "i64[]"; primals_1249: "f32[72]"; primals_1250: "f32[72]"; primals_1251: "i64[]"; primals_1252: "f32[72]"; primals_1253: "f32[72]"; primals_1254: "i64[]"; primals_1255: "f32[18]"; primals_1256: "f32[18]"; primals_1257: "i64[]"; primals_1258: "f32[18]"; primals_1259: "f32[18]"; primals_1260: "i64[]"; primals_1261: "f32[36]"; primals_1262: "f32[36]"; primals_1263: "i64[]"; primals_1264: "f32[36]"; primals_1265: "f32[36]"; primals_1266: "i64[]"; primals_1267: "f32[18]"; primals_1268: "f32[18]"; primals_1269: "i64[]"; primals_1270: "f32[72]"; primals_1271: "f32[72]"; primals_1272: "i64[]"; primals_1273: "f32[72]"; primals_1274: "f32[72]"; primals_1275: "i64[]"; primals_1276: "f32[18]"; primals_1277: "f32[18]"; primals_1278: "i64[]"; primals_1279: "f32[18]"; primals_1280: "f32[18]"; primals_1281: "i64[]"; primals_1282: "f32[18]"; primals_1283: "f32[18]"; primals_1284: "i64[]"; primals_1285: "f32[18]"; primals_1286: "f32[18]"; primals_1287: "i64[]"; primals_1288: "f32[18]"; primals_1289: "f32[18]"; primals_1290: "i64[]"; primals_1291: "f32[18]"; primals_1292: "f32[18]"; primals_1293: "i64[]"; primals_1294: "f32[18]"; primals_1295: "f32[18]"; primals_1296: "i64[]"; primals_1297: "f32[18]"; primals_1298: "f32[18]"; primals_1299: "i64[]"; primals_1300: "f32[36]"; primals_1301: "f32[36]"; primals_1302: "i64[]"; primals_1303: "f32[36]"; primals_1304: "f32[36]"; primals_1305: "i64[]"; primals_1306: "f32[36]"; primals_1307: "f32[36]"; primals_1308: "i64[]"; primals_1309: "f32[36]"; primals_1310: "f32[36]"; primals_1311: "i64[]"; primals_1312: "f32[36]"; primals_1313: "f32[36]"; primals_1314: "i64[]"; primals_1315: "f32[36]"; primals_1316: "f32[36]"; primals_1317: "i64[]"; primals_1318: "f32[36]"; primals_1319: "f32[36]"; primals_1320: "i64[]"; primals_1321: "f32[36]"; primals_1322: "f32[36]"; primals_1323: "i64[]"; primals_1324: "f32[72]"; primals_1325: "f32[72]"; primals_1326: "i64[]"; primals_1327: "f32[72]"; primals_1328: "f32[72]"; primals_1329: "i64[]"; primals_1330: "f32[72]"; primals_1331: "f32[72]"; primals_1332: "i64[]"; primals_1333: "f32[72]"; primals_1334: "f32[72]"; primals_1335: "i64[]"; primals_1336: "f32[72]"; primals_1337: "f32[72]"; primals_1338: "i64[]"; primals_1339: "f32[72]"; primals_1340: "f32[72]"; primals_1341: "i64[]"; primals_1342: "f32[72]"; primals_1343: "f32[72]"; primals_1344: "i64[]"; primals_1345: "f32[72]"; primals_1346: "f32[72]"; primals_1347: "i64[]"; primals_1348: "f32[18]"; primals_1349: "f32[18]"; primals_1350: "i64[]"; primals_1351: "f32[18]"; primals_1352: "f32[18]"; primals_1353: "i64[]"; primals_1354: "f32[36]"; primals_1355: "f32[36]"; primals_1356: "i64[]"; primals_1357: "f32[36]"; primals_1358: "f32[36]"; primals_1359: "i64[]"; primals_1360: "f32[18]"; primals_1361: "f32[18]"; primals_1362: "i64[]"; primals_1363: "f32[72]"; primals_1364: "f32[72]"; primals_1365: "i64[]"; primals_1366: "f32[72]"; primals_1367: "f32[72]"; primals_1368: "i64[]"; primals_1369: "f32[18]"; primals_1370: "f32[18]"; primals_1371: "i64[]"; primals_1372: "f32[18]"; primals_1373: "f32[18]"; primals_1374: "i64[]"; primals_1375: "f32[18]"; primals_1376: "f32[18]"; primals_1377: "i64[]"; primals_1378: "f32[18]"; primals_1379: "f32[18]"; primals_1380: "i64[]"; primals_1381: "f32[18]"; primals_1382: "f32[18]"; primals_1383: "i64[]"; primals_1384: "f32[18]"; primals_1385: "f32[18]"; primals_1386: "i64[]"; primals_1387: "f32[18]"; primals_1388: "f32[18]"; primals_1389: "i64[]"; primals_1390: "f32[18]"; primals_1391: "f32[18]"; primals_1392: "i64[]"; primals_1393: "f32[36]"; primals_1394: "f32[36]"; primals_1395: "i64[]"; primals_1396: "f32[36]"; primals_1397: "f32[36]"; primals_1398: "i64[]"; primals_1399: "f32[36]"; primals_1400: "f32[36]"; primals_1401: "i64[]"; primals_1402: "f32[36]"; primals_1403: "f32[36]"; primals_1404: "i64[]"; primals_1405: "f32[36]"; primals_1406: "f32[36]"; primals_1407: "i64[]"; primals_1408: "f32[36]"; primals_1409: "f32[36]"; primals_1410: "i64[]"; primals_1411: "f32[36]"; primals_1412: "f32[36]"; primals_1413: "i64[]"; primals_1414: "f32[36]"; primals_1415: "f32[36]"; primals_1416: "i64[]"; primals_1417: "f32[72]"; primals_1418: "f32[72]"; primals_1419: "i64[]"; primals_1420: "f32[72]"; primals_1421: "f32[72]"; primals_1422: "i64[]"; primals_1423: "f32[72]"; primals_1424: "f32[72]"; primals_1425: "i64[]"; primals_1426: "f32[72]"; primals_1427: "f32[72]"; primals_1428: "i64[]"; primals_1429: "f32[72]"; primals_1430: "f32[72]"; primals_1431: "i64[]"; primals_1432: "f32[72]"; primals_1433: "f32[72]"; primals_1434: "i64[]"; primals_1435: "f32[72]"; primals_1436: "f32[72]"; primals_1437: "i64[]"; primals_1438: "f32[72]"; primals_1439: "f32[72]"; primals_1440: "i64[]"; primals_1441: "f32[18]"; primals_1442: "f32[18]"; primals_1443: "i64[]"; primals_1444: "f32[18]"; primals_1445: "f32[18]"; primals_1446: "i64[]"; primals_1447: "f32[36]"; primals_1448: "f32[36]"; primals_1449: "i64[]"; primals_1450: "f32[36]"; primals_1451: "f32[36]"; primals_1452: "i64[]"; primals_1453: "f32[18]"; primals_1454: "f32[18]"; primals_1455: "i64[]"; primals_1456: "f32[72]"; primals_1457: "f32[72]"; primals_1458: "i64[]"; primals_1459: "f32[72]"; primals_1460: "f32[72]"; primals_1461: "i64[]"; primals_1462: "f32[144]"; primals_1463: "f32[144]"; primals_1464: "i64[]"; primals_1465: "f32[18]"; primals_1466: "f32[18]"; primals_1467: "i64[]"; primals_1468: "f32[18]"; primals_1469: "f32[18]"; primals_1470: "i64[]"; primals_1471: "f32[18]"; primals_1472: "f32[18]"; primals_1473: "i64[]"; primals_1474: "f32[18]"; primals_1475: "f32[18]"; primals_1476: "i64[]"; primals_1477: "f32[18]"; primals_1478: "f32[18]"; primals_1479: "i64[]"; primals_1480: "f32[18]"; primals_1481: "f32[18]"; primals_1482: "i64[]"; primals_1483: "f32[18]"; primals_1484: "f32[18]"; primals_1485: "i64[]"; primals_1486: "f32[18]"; primals_1487: "f32[18]"; primals_1488: "i64[]"; primals_1489: "f32[36]"; primals_1490: "f32[36]"; primals_1491: "i64[]"; primals_1492: "f32[36]"; primals_1493: "f32[36]"; primals_1494: "i64[]"; primals_1495: "f32[36]"; primals_1496: "f32[36]"; primals_1497: "i64[]"; primals_1498: "f32[36]"; primals_1499: "f32[36]"; primals_1500: "i64[]"; primals_1501: "f32[36]"; primals_1502: "f32[36]"; primals_1503: "i64[]"; primals_1504: "f32[36]"; primals_1505: "f32[36]"; primals_1506: "i64[]"; primals_1507: "f32[36]"; primals_1508: "f32[36]"; primals_1509: "i64[]"; primals_1510: "f32[36]"; primals_1511: "f32[36]"; primals_1512: "i64[]"; primals_1513: "f32[72]"; primals_1514: "f32[72]"; primals_1515: "i64[]"; primals_1516: "f32[72]"; primals_1517: "f32[72]"; primals_1518: "i64[]"; primals_1519: "f32[72]"; primals_1520: "f32[72]"; primals_1521: "i64[]"; primals_1522: "f32[72]"; primals_1523: "f32[72]"; primals_1524: "i64[]"; primals_1525: "f32[72]"; primals_1526: "f32[72]"; primals_1527: "i64[]"; primals_1528: "f32[72]"; primals_1529: "f32[72]"; primals_1530: "i64[]"; primals_1531: "f32[72]"; primals_1532: "f32[72]"; primals_1533: "i64[]"; primals_1534: "f32[72]"; primals_1535: "f32[72]"; primals_1536: "i64[]"; primals_1537: "f32[144]"; primals_1538: "f32[144]"; primals_1539: "i64[]"; primals_1540: "f32[144]"; primals_1541: "f32[144]"; primals_1542: "i64[]"; primals_1543: "f32[144]"; primals_1544: "f32[144]"; primals_1545: "i64[]"; primals_1546: "f32[144]"; primals_1547: "f32[144]"; primals_1548: "i64[]"; primals_1549: "f32[144]"; primals_1550: "f32[144]"; primals_1551: "i64[]"; primals_1552: "f32[144]"; primals_1553: "f32[144]"; primals_1554: "i64[]"; primals_1555: "f32[144]"; primals_1556: "f32[144]"; primals_1557: "i64[]"; primals_1558: "f32[144]"; primals_1559: "f32[144]"; primals_1560: "i64[]"; primals_1561: "f32[18]"; primals_1562: "f32[18]"; primals_1563: "i64[]"; primals_1564: "f32[18]"; primals_1565: "f32[18]"; primals_1566: "i64[]"; primals_1567: "f32[18]"; primals_1568: "f32[18]"; primals_1569: "i64[]"; primals_1570: "f32[36]"; primals_1571: "f32[36]"; primals_1572: "i64[]"; primals_1573: "f32[36]"; primals_1574: "f32[36]"; primals_1575: "i64[]"; primals_1576: "f32[36]"; primals_1577: "f32[36]"; primals_1578: "i64[]"; primals_1579: "f32[18]"; primals_1580: "f32[18]"; primals_1581: "i64[]"; primals_1582: "f32[72]"; primals_1583: "f32[72]"; primals_1584: "i64[]"; primals_1585: "f32[72]"; primals_1586: "f32[72]"; primals_1587: "i64[]"; primals_1588: "f32[72]"; primals_1589: "f32[72]"; primals_1590: "i64[]"; primals_1591: "f32[18]"; primals_1592: "f32[18]"; primals_1593: "i64[]"; primals_1594: "f32[18]"; primals_1595: "f32[18]"; primals_1596: "i64[]"; primals_1597: "f32[144]"; primals_1598: "f32[144]"; primals_1599: "i64[]"; primals_1600: "f32[36]"; primals_1601: "f32[36]"; primals_1602: "i64[]"; primals_1603: "f32[144]"; primals_1604: "f32[144]"; primals_1605: "i64[]"; primals_1606: "f32[144]"; primals_1607: "f32[144]"; primals_1608: "i64[]"; primals_1609: "f32[18]"; primals_1610: "f32[18]"; primals_1611: "i64[]"; primals_1612: "f32[18]"; primals_1613: "f32[18]"; primals_1614: "i64[]"; primals_1615: "f32[18]"; primals_1616: "f32[18]"; primals_1617: "i64[]"; primals_1618: "f32[18]"; primals_1619: "f32[18]"; primals_1620: "i64[]"; primals_1621: "f32[18]"; primals_1622: "f32[18]"; primals_1623: "i64[]"; primals_1624: "f32[18]"; primals_1625: "f32[18]"; primals_1626: "i64[]"; primals_1627: "f32[18]"; primals_1628: "f32[18]"; primals_1629: "i64[]"; primals_1630: "f32[18]"; primals_1631: "f32[18]"; primals_1632: "i64[]"; primals_1633: "f32[36]"; primals_1634: "f32[36]"; primals_1635: "i64[]"; primals_1636: "f32[36]"; primals_1637: "f32[36]"; primals_1638: "i64[]"; primals_1639: "f32[36]"; primals_1640: "f32[36]"; primals_1641: "i64[]"; primals_1642: "f32[36]"; primals_1643: "f32[36]"; primals_1644: "i64[]"; primals_1645: "f32[36]"; primals_1646: "f32[36]"; primals_1647: "i64[]"; primals_1648: "f32[36]"; primals_1649: "f32[36]"; primals_1650: "i64[]"; primals_1651: "f32[36]"; primals_1652: "f32[36]"; primals_1653: "i64[]"; primals_1654: "f32[36]"; primals_1655: "f32[36]"; primals_1656: "i64[]"; primals_1657: "f32[72]"; primals_1658: "f32[72]"; primals_1659: "i64[]"; primals_1660: "f32[72]"; primals_1661: "f32[72]"; primals_1662: "i64[]"; primals_1663: "f32[72]"; primals_1664: "f32[72]"; primals_1665: "i64[]"; primals_1666: "f32[72]"; primals_1667: "f32[72]"; primals_1668: "i64[]"; primals_1669: "f32[72]"; primals_1670: "f32[72]"; primals_1671: "i64[]"; primals_1672: "f32[72]"; primals_1673: "f32[72]"; primals_1674: "i64[]"; primals_1675: "f32[72]"; primals_1676: "f32[72]"; primals_1677: "i64[]"; primals_1678: "f32[72]"; primals_1679: "f32[72]"; primals_1680: "i64[]"; primals_1681: "f32[144]"; primals_1682: "f32[144]"; primals_1683: "i64[]"; primals_1684: "f32[144]"; primals_1685: "f32[144]"; primals_1686: "i64[]"; primals_1687: "f32[144]"; primals_1688: "f32[144]"; primals_1689: "i64[]"; primals_1690: "f32[144]"; primals_1691: "f32[144]"; primals_1692: "i64[]"; primals_1693: "f32[144]"; primals_1694: "f32[144]"; primals_1695: "i64[]"; primals_1696: "f32[144]"; primals_1697: "f32[144]"; primals_1698: "i64[]"; primals_1699: "f32[144]"; primals_1700: "f32[144]"; primals_1701: "i64[]"; primals_1702: "f32[144]"; primals_1703: "f32[144]"; primals_1704: "i64[]"; primals_1705: "f32[18]"; primals_1706: "f32[18]"; primals_1707: "i64[]"; primals_1708: "f32[18]"; primals_1709: "f32[18]"; primals_1710: "i64[]"; primals_1711: "f32[18]"; primals_1712: "f32[18]"; primals_1713: "i64[]"; primals_1714: "f32[36]"; primals_1715: "f32[36]"; primals_1716: "i64[]"; primals_1717: "f32[36]"; primals_1718: "f32[36]"; primals_1719: "i64[]"; primals_1720: "f32[36]"; primals_1721: "f32[36]"; primals_1722: "i64[]"; primals_1723: "f32[18]"; primals_1724: "f32[18]"; primals_1725: "i64[]"; primals_1726: "f32[72]"; primals_1727: "f32[72]"; primals_1728: "i64[]"; primals_1729: "f32[72]"; primals_1730: "f32[72]"; primals_1731: "i64[]"; primals_1732: "f32[72]"; primals_1733: "f32[72]"; primals_1734: "i64[]"; primals_1735: "f32[18]"; primals_1736: "f32[18]"; primals_1737: "i64[]"; primals_1738: "f32[18]"; primals_1739: "f32[18]"; primals_1740: "i64[]"; primals_1741: "f32[144]"; primals_1742: "f32[144]"; primals_1743: "i64[]"; primals_1744: "f32[36]"; primals_1745: "f32[36]"; primals_1746: "i64[]"; primals_1747: "f32[144]"; primals_1748: "f32[144]"; primals_1749: "i64[]"; primals_1750: "f32[144]"; primals_1751: "f32[144]"; primals_1752: "i64[]"; primals_1753: "f32[18]"; primals_1754: "f32[18]"; primals_1755: "i64[]"; primals_1756: "f32[18]"; primals_1757: "f32[18]"; primals_1758: "i64[]"; primals_1759: "f32[18]"; primals_1760: "f32[18]"; primals_1761: "i64[]"; primals_1762: "f32[18]"; primals_1763: "f32[18]"; primals_1764: "i64[]"; primals_1765: "f32[18]"; primals_1766: "f32[18]"; primals_1767: "i64[]"; primals_1768: "f32[18]"; primals_1769: "f32[18]"; primals_1770: "i64[]"; primals_1771: "f32[18]"; primals_1772: "f32[18]"; primals_1773: "i64[]"; primals_1774: "f32[18]"; primals_1775: "f32[18]"; primals_1776: "i64[]"; primals_1777: "f32[36]"; primals_1778: "f32[36]"; primals_1779: "i64[]"; primals_1780: "f32[36]"; primals_1781: "f32[36]"; primals_1782: "i64[]"; primals_1783: "f32[36]"; primals_1784: "f32[36]"; primals_1785: "i64[]"; primals_1786: "f32[36]"; primals_1787: "f32[36]"; primals_1788: "i64[]"; primals_1789: "f32[36]"; primals_1790: "f32[36]"; primals_1791: "i64[]"; primals_1792: "f32[36]"; primals_1793: "f32[36]"; primals_1794: "i64[]"; primals_1795: "f32[36]"; primals_1796: "f32[36]"; primals_1797: "i64[]"; primals_1798: "f32[36]"; primals_1799: "f32[36]"; primals_1800: "i64[]"; primals_1801: "f32[72]"; primals_1802: "f32[72]"; primals_1803: "i64[]"; primals_1804: "f32[72]"; primals_1805: "f32[72]"; primals_1806: "i64[]"; primals_1807: "f32[72]"; primals_1808: "f32[72]"; primals_1809: "i64[]"; primals_1810: "f32[72]"; primals_1811: "f32[72]"; primals_1812: "i64[]"; primals_1813: "f32[72]"; primals_1814: "f32[72]"; primals_1815: "i64[]"; primals_1816: "f32[72]"; primals_1817: "f32[72]"; primals_1818: "i64[]"; primals_1819: "f32[72]"; primals_1820: "f32[72]"; primals_1821: "i64[]"; primals_1822: "f32[72]"; primals_1823: "f32[72]"; primals_1824: "i64[]"; primals_1825: "f32[144]"; primals_1826: "f32[144]"; primals_1827: "i64[]"; primals_1828: "f32[144]"; primals_1829: "f32[144]"; primals_1830: "i64[]"; primals_1831: "f32[144]"; primals_1832: "f32[144]"; primals_1833: "i64[]"; primals_1834: "f32[144]"; primals_1835: "f32[144]"; primals_1836: "i64[]"; primals_1837: "f32[144]"; primals_1838: "f32[144]"; primals_1839: "i64[]"; primals_1840: "f32[144]"; primals_1841: "f32[144]"; primals_1842: "i64[]"; primals_1843: "f32[144]"; primals_1844: "f32[144]"; primals_1845: "i64[]"; primals_1846: "f32[144]"; primals_1847: "f32[144]"; primals_1848: "i64[]"; primals_1849: "f32[18]"; primals_1850: "f32[18]"; primals_1851: "i64[]"; primals_1852: "f32[18]"; primals_1853: "f32[18]"; primals_1854: "i64[]"; primals_1855: "f32[18]"; primals_1856: "f32[18]"; primals_1857: "i64[]"; primals_1858: "f32[36]"; primals_1859: "f32[36]"; primals_1860: "i64[]"; primals_1861: "f32[36]"; primals_1862: "f32[36]"; primals_1863: "i64[]"; primals_1864: "f32[36]"; primals_1865: "f32[36]"; primals_1866: "i64[]"; primals_1867: "f32[18]"; primals_1868: "f32[18]"; primals_1869: "i64[]"; primals_1870: "f32[72]"; primals_1871: "f32[72]"; primals_1872: "i64[]"; primals_1873: "f32[72]"; primals_1874: "f32[72]"; primals_1875: "i64[]"; primals_1876: "f32[72]"; primals_1877: "f32[72]"; primals_1878: "i64[]"; primals_1879: "f32[18]"; primals_1880: "f32[18]"; primals_1881: "i64[]"; primals_1882: "f32[18]"; primals_1883: "f32[18]"; primals_1884: "i64[]"; primals_1885: "f32[144]"; primals_1886: "f32[144]"; primals_1887: "i64[]"; primals_1888: "f32[36]"; primals_1889: "f32[36]"; primals_1890: "i64[]"; primals_1891: "f32[144]"; primals_1892: "f32[144]"; primals_1893: "i64[]"; primals_1894: "f32[144]"; primals_1895: "f32[144]"; primals_1896: "i64[]"; primals_1897: "f32[32]"; primals_1898: "f32[32]"; primals_1899: "i64[]"; primals_1900: "f32[32]"; primals_1901: "f32[32]"; primals_1902: "i64[]"; primals_1903: "f32[128]"; primals_1904: "f32[128]"; primals_1905: "i64[]"; primals_1906: "f32[128]"; primals_1907: "f32[128]"; primals_1908: "i64[]"; primals_1909: "f32[64]"; primals_1910: "f32[64]"; primals_1911: "i64[]"; primals_1912: "f32[64]"; primals_1913: "f32[64]"; primals_1914: "i64[]"; primals_1915: "f32[256]"; primals_1916: "f32[256]"; primals_1917: "i64[]"; primals_1918: "f32[256]"; primals_1919: "f32[256]"; primals_1920: "i64[]"; primals_1921: "f32[256]"; primals_1922: "f32[256]"; primals_1923: "i64[]"; primals_1924: "f32[128]"; primals_1925: "f32[128]"; primals_1926: "i64[]"; primals_1927: "f32[128]"; primals_1928: "f32[128]"; primals_1929: "i64[]"; primals_1930: "f32[512]"; primals_1931: "f32[512]"; primals_1932: "i64[]"; primals_1933: "f32[512]"; primals_1934: "f32[512]"; primals_1935: "i64[]"; primals_1936: "f32[512]"; primals_1937: "f32[512]"; primals_1938: "i64[]"; primals_1939: "f32[256]"; primals_1940: "f32[256]"; primals_1941: "i64[]"; primals_1942: "f32[256]"; primals_1943: "f32[256]"; primals_1944: "i64[]"; primals_1945: "f32[1024]"; primals_1946: "f32[1024]"; primals_1947: "i64[]"; primals_1948: "f32[1024]"; primals_1949: "f32[1024]"; primals_1950: "i64[]"; primals_1951: "f32[1024]"; primals_1952: "f32[1024]"; primals_1953: "i64[]"; primals_1954: "f32[2048]"; primals_1955: "f32[2048]"; primals_1956: "i64[]"; primals_1957: "f32[8, 3, 224, 224]"; tangents_1: "f32[8, 1000]"; 

    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, primals_1122, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, primals_1128, primals_1129, primals_1130, primals_1131, primals_1132, primals_1133, primals_1134, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, primals_1140, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, primals_1146, primals_1147, primals_1148, primals_1149, primals_1150, primals_1151, primals_1152, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, primals_1158, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, primals_1164, primals_1165, primals_1166, primals_1167, primals_1168, primals_1169, primals_1170, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, primals_1176, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, primals_1182, primals_1183, primals_1184, primals_1185, primals_1186, primals_1187, primals_1188, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, primals_1194, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, primals_1200, primals_1201, primals_1202, primals_1203, primals_1204, primals_1205, primals_1206, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, primals_1212, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, primals_1218, primals_1219, primals_1220, primals_1221, primals_1222, primals_1223, primals_1224, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, primals_1230, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, primals_1236, primals_1237, primals_1238, primals_1239, primals_1240, primals_1241, primals_1242, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, primals_1248, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, primals_1254, primals_1255, primals_1256, primals_1257, primals_1258, primals_1259, primals_1260, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, primals_1266, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, primals_1272, primals_1273, primals_1274, primals_1275, primals_1276, primals_1277, primals_1278, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, primals_1284, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, primals_1290, primals_1291, primals_1292, primals_1293, primals_1294, primals_1295, primals_1296, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, primals_1302, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, primals_1308, primals_1309, primals_1310, primals_1311, primals_1312, primals_1313, primals_1314, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, primals_1320, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, primals_1326, primals_1327, primals_1328, primals_1329, primals_1330, primals_1331, primals_1332, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, primals_1338, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, primals_1344, primals_1345, primals_1346, primals_1347, primals_1348, primals_1349, primals_1350, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, primals_1356, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, primals_1362, primals_1363, primals_1364, primals_1365, primals_1366, primals_1367, primals_1368, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, primals_1374, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, primals_1380, primals_1381, primals_1382, primals_1383, primals_1384, primals_1385, primals_1386, primals_1387, primals_1388, primals_1389, primals_1390, primals_1391, primals_1392, primals_1393, primals_1394, primals_1395, primals_1396, primals_1397, primals_1398, primals_1399, primals_1400, primals_1401, primals_1402, primals_1403, primals_1404, primals_1405, primals_1406, primals_1407, primals_1408, primals_1409, primals_1410, primals_1411, primals_1412, primals_1413, primals_1414, primals_1415, primals_1416, primals_1417, primals_1418, primals_1419, primals_1420, primals_1421, primals_1422, primals_1423, primals_1424, primals_1425, primals_1426, primals_1427, primals_1428, primals_1429, primals_1430, primals_1431, primals_1432, primals_1433, primals_1434, primals_1435, primals_1436, primals_1437, primals_1438, primals_1439, primals_1440, primals_1441, primals_1442, primals_1443, primals_1444, primals_1445, primals_1446, primals_1447, primals_1448, primals_1449, primals_1450, primals_1451, primals_1452, primals_1453, primals_1454, primals_1455, primals_1456, primals_1457, primals_1458, primals_1459, primals_1460, primals_1461, primals_1462, primals_1463, primals_1464, primals_1465, primals_1466, primals_1467, primals_1468, primals_1469, primals_1470, primals_1471, primals_1472, primals_1473, primals_1474, primals_1475, primals_1476, primals_1477, primals_1478, primals_1479, primals_1480, primals_1481, primals_1482, primals_1483, primals_1484, primals_1485, primals_1486, primals_1487, primals_1488, primals_1489, primals_1490, primals_1491, primals_1492, primals_1493, primals_1494, primals_1495, primals_1496, primals_1497, primals_1498, primals_1499, primals_1500, primals_1501, primals_1502, primals_1503, primals_1504, primals_1505, primals_1506, primals_1507, primals_1508, primals_1509, primals_1510, primals_1511, primals_1512, primals_1513, primals_1514, primals_1515, primals_1516, primals_1517, primals_1518, primals_1519, primals_1520, primals_1521, primals_1522, primals_1523, primals_1524, primals_1525, primals_1526, primals_1527, primals_1528, primals_1529, primals_1530, primals_1531, primals_1532, primals_1533, primals_1534, primals_1535, primals_1536, primals_1537, primals_1538, primals_1539, primals_1540, primals_1541, primals_1542, primals_1543, primals_1544, primals_1545, primals_1546, primals_1547, primals_1548, primals_1549, primals_1550, primals_1551, primals_1552, primals_1553, primals_1554, primals_1555, primals_1556, primals_1557, primals_1558, primals_1559, primals_1560, primals_1561, primals_1562, primals_1563, primals_1564, primals_1565, primals_1566, primals_1567, primals_1568, primals_1569, primals_1570, primals_1571, primals_1572, primals_1573, primals_1574, primals_1575, primals_1576, primals_1577, primals_1578, primals_1579, primals_1580, primals_1581, primals_1582, primals_1583, primals_1584, primals_1585, primals_1586, primals_1587, primals_1588, primals_1589, primals_1590, primals_1591, primals_1592, primals_1593, primals_1594, primals_1595, primals_1596, primals_1597, primals_1598, primals_1599, primals_1600, primals_1601, primals_1602, primals_1603, primals_1604, primals_1605, primals_1606, primals_1607, primals_1608, primals_1609, primals_1610, primals_1611, primals_1612, primals_1613, primals_1614, primals_1615, primals_1616, primals_1617, primals_1618, primals_1619, primals_1620, primals_1621, primals_1622, primals_1623, primals_1624, primals_1625, primals_1626, primals_1627, primals_1628, primals_1629, primals_1630, primals_1631, primals_1632, primals_1633, primals_1634, primals_1635, primals_1636, primals_1637, primals_1638, primals_1639, primals_1640, primals_1641, primals_1642, primals_1643, primals_1644, primals_1645, primals_1646, primals_1647, primals_1648, primals_1649, primals_1650, primals_1651, primals_1652, primals_1653, primals_1654, primals_1655, primals_1656, primals_1657, primals_1658, primals_1659, primals_1660, primals_1661, primals_1662, primals_1663, primals_1664, primals_1665, primals_1666, primals_1667, primals_1668, primals_1669, primals_1670, primals_1671, primals_1672, primals_1673, primals_1674, primals_1675, primals_1676, primals_1677, primals_1678, primals_1679, primals_1680, primals_1681, primals_1682, primals_1683, primals_1684, primals_1685, primals_1686, primals_1687, primals_1688, primals_1689, primals_1690, primals_1691, primals_1692, primals_1693, primals_1694, primals_1695, primals_1696, primals_1697, primals_1698, primals_1699, primals_1700, primals_1701, primals_1702, primals_1703, primals_1704, primals_1705, primals_1706, primals_1707, primals_1708, primals_1709, primals_1710, primals_1711, primals_1712, primals_1713, primals_1714, primals_1715, primals_1716, primals_1717, primals_1718, primals_1719, primals_1720, primals_1721, primals_1722, primals_1723, primals_1724, primals_1725, primals_1726, primals_1727, primals_1728, primals_1729, primals_1730, primals_1731, primals_1732, primals_1733, primals_1734, primals_1735, primals_1736, primals_1737, primals_1738, primals_1739, primals_1740, primals_1741, primals_1742, primals_1743, primals_1744, primals_1745, primals_1746, primals_1747, primals_1748, primals_1749, primals_1750, primals_1751, primals_1752, primals_1753, primals_1754, primals_1755, primals_1756, primals_1757, primals_1758, primals_1759, primals_1760, primals_1761, primals_1762, primals_1763, primals_1764, primals_1765, primals_1766, primals_1767, primals_1768, primals_1769, primals_1770, primals_1771, primals_1772, primals_1773, primals_1774, primals_1775, primals_1776, primals_1777, primals_1778, primals_1779, primals_1780, primals_1781, primals_1782, primals_1783, primals_1784, primals_1785, primals_1786, primals_1787, primals_1788, primals_1789, primals_1790, primals_1791, primals_1792, primals_1793, primals_1794, primals_1795, primals_1796, primals_1797, primals_1798, primals_1799, primals_1800, primals_1801, primals_1802, primals_1803, primals_1804, primals_1805, primals_1806, primals_1807, primals_1808, primals_1809, primals_1810, primals_1811, primals_1812, primals_1813, primals_1814, primals_1815, primals_1816, primals_1817, primals_1818, primals_1819, primals_1820, primals_1821, primals_1822, primals_1823, primals_1824, primals_1825, primals_1826, primals_1827, primals_1828, primals_1829, primals_1830, primals_1831, primals_1832, primals_1833, primals_1834, primals_1835, primals_1836, primals_1837, primals_1838, primals_1839, primals_1840, primals_1841, primals_1842, primals_1843, primals_1844, primals_1845, primals_1846, primals_1847, primals_1848, primals_1849, primals_1850, primals_1851, primals_1852, primals_1853, primals_1854, primals_1855, primals_1856, primals_1857, primals_1858, primals_1859, primals_1860, primals_1861, primals_1862, primals_1863, primals_1864, primals_1865, primals_1866, primals_1867, primals_1868, primals_1869, primals_1870, primals_1871, primals_1872, primals_1873, primals_1874, primals_1875, primals_1876, primals_1877, primals_1878, primals_1879, primals_1880, primals_1881, primals_1882, primals_1883, primals_1884, primals_1885, primals_1886, primals_1887, primals_1888, primals_1889, primals_1890, primals_1891, primals_1892, primals_1893, primals_1894, primals_1895, primals_1896, primals_1897, primals_1898, primals_1899, primals_1900, primals_1901, primals_1902, primals_1903, primals_1904, primals_1905, primals_1906, primals_1907, primals_1908, primals_1909, primals_1910, primals_1911, primals_1912, primals_1913, primals_1914, primals_1915, primals_1916, primals_1917, primals_1918, primals_1919, primals_1920, primals_1921, primals_1922, primals_1923, primals_1924, primals_1925, primals_1926, primals_1927, primals_1928, primals_1929, primals_1930, primals_1931, primals_1932, primals_1933, primals_1934, primals_1935, primals_1936, primals_1937, primals_1938, primals_1939, primals_1940, primals_1941, primals_1942, primals_1943, primals_1944, primals_1945, primals_1946, primals_1947, primals_1948, primals_1949, primals_1950, primals_1951, primals_1952, primals_1953, primals_1954, primals_1955, primals_1956, primals_1957, tangents_1, = fx_pytree.tree_flatten_spec([primals, tangents], self._in_spec)
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:762, code: x = self.conv1(x)
    convolution: "f32[8, 64, 112, 112]" = torch.ops.aten.convolution.default(primals_1957, primals_1, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:763, code: x = self.bn1(x)
    add: "i64[]" = torch.ops.aten.add.Tensor(primals_984, 1)
    var_mean = torch.ops.aten.var_mean.correction(convolution, [0, 2, 3], correction = 0, keepdim = True)
    getitem: "f32[1, 64, 1, 1]" = var_mean[0]
    getitem_1: "f32[1, 64, 1, 1]" = var_mean[1];  var_mean = None
    add_1: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem, 1e-05)
    rsqrt: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_1);  add_1 = None
    sub: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(convolution, getitem_1)
    mul: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(sub, rsqrt);  sub = None
    squeeze: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_1, [0, 2, 3]);  getitem_1 = None
    squeeze_1: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt, [0, 2, 3]);  rsqrt = None
    mul_1: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze, 0.1)
    mul_2: "f32[64]" = torch.ops.aten.mul.Tensor(primals_982, 0.9)
    add_2: "f32[64]" = torch.ops.aten.add.Tensor(mul_1, mul_2);  mul_1 = mul_2 = None
    squeeze_2: "f32[64]" = torch.ops.aten.squeeze.dims(getitem, [0, 2, 3]);  getitem = None
    mul_3: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_2, 1.00000996502277);  squeeze_2 = None
    mul_4: "f32[64]" = torch.ops.aten.mul.Tensor(mul_3, 0.1);  mul_3 = None
    mul_5: "f32[64]" = torch.ops.aten.mul.Tensor(primals_983, 0.9)
    add_3: "f32[64]" = torch.ops.aten.add.Tensor(mul_4, mul_5);  mul_4 = mul_5 = None
    unsqueeze: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_2, -1)
    unsqueeze_1: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze, -1);  unsqueeze = None
    mul_6: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(mul, unsqueeze_1);  mul = unsqueeze_1 = None
    unsqueeze_2: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_3, -1);  primals_3 = None
    unsqueeze_3: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2, -1);  unsqueeze_2 = None
    add_4: "f32[8, 64, 112, 112]" = torch.ops.aten.add.Tensor(mul_6, unsqueeze_3);  mul_6 = unsqueeze_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:764, code: x = self.act1(x)
    relu: "f32[8, 64, 112, 112]" = torch.ops.aten.relu.default(add_4);  add_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:765, code: x = self.conv2(x)
    convolution_1: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu, primals_4, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:766, code: x = self.bn2(x)
    add_5: "i64[]" = torch.ops.aten.add.Tensor(primals_987, 1)
    var_mean_1 = torch.ops.aten.var_mean.correction(convolution_1, [0, 2, 3], correction = 0, keepdim = True)
    getitem_2: "f32[1, 64, 1, 1]" = var_mean_1[0]
    getitem_3: "f32[1, 64, 1, 1]" = var_mean_1[1];  var_mean_1 = None
    add_6: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_2, 1e-05)
    rsqrt_1: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_6);  add_6 = None
    sub_1: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_1, getitem_3)
    mul_7: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1, rsqrt_1);  sub_1 = None
    squeeze_3: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_3, [0, 2, 3]);  getitem_3 = None
    squeeze_4: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_1, [0, 2, 3]);  rsqrt_1 = None
    mul_8: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_3, 0.1)
    mul_9: "f32[64]" = torch.ops.aten.mul.Tensor(primals_985, 0.9)
    add_7: "f32[64]" = torch.ops.aten.add.Tensor(mul_8, mul_9);  mul_8 = mul_9 = None
    squeeze_5: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_2, [0, 2, 3]);  getitem_2 = None
    mul_10: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_5, 1.0000398612827361);  squeeze_5 = None
    mul_11: "f32[64]" = torch.ops.aten.mul.Tensor(mul_10, 0.1);  mul_10 = None
    mul_12: "f32[64]" = torch.ops.aten.mul.Tensor(primals_986, 0.9)
    add_8: "f32[64]" = torch.ops.aten.add.Tensor(mul_11, mul_12);  mul_11 = mul_12 = None
    unsqueeze_4: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_5, -1)
    unsqueeze_5: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4, -1);  unsqueeze_4 = None
    mul_13: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_7, unsqueeze_5);  mul_7 = unsqueeze_5 = None
    unsqueeze_6: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_6, -1);  primals_6 = None
    unsqueeze_7: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_6, -1);  unsqueeze_6 = None
    add_9: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_13, unsqueeze_7);  mul_13 = unsqueeze_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:767, code: x = self.act2(x)
    relu_1: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_9);  add_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_2: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_1, primals_7, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_10: "i64[]" = torch.ops.aten.add.Tensor(primals_990, 1)
    var_mean_2 = torch.ops.aten.var_mean.correction(convolution_2, [0, 2, 3], correction = 0, keepdim = True)
    getitem_4: "f32[1, 64, 1, 1]" = var_mean_2[0]
    getitem_5: "f32[1, 64, 1, 1]" = var_mean_2[1];  var_mean_2 = None
    add_11: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_4, 1e-05)
    rsqrt_2: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_11);  add_11 = None
    sub_2: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_2, getitem_5)
    mul_14: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_2, rsqrt_2);  sub_2 = None
    squeeze_6: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_5, [0, 2, 3]);  getitem_5 = None
    squeeze_7: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_2, [0, 2, 3]);  rsqrt_2 = None
    mul_15: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_6, 0.1)
    mul_16: "f32[64]" = torch.ops.aten.mul.Tensor(primals_988, 0.9)
    add_12: "f32[64]" = torch.ops.aten.add.Tensor(mul_15, mul_16);  mul_15 = mul_16 = None
    squeeze_8: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_4, [0, 2, 3]);  getitem_4 = None
    mul_17: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_8, 1.0000398612827361);  squeeze_8 = None
    mul_18: "f32[64]" = torch.ops.aten.mul.Tensor(mul_17, 0.1);  mul_17 = None
    mul_19: "f32[64]" = torch.ops.aten.mul.Tensor(primals_989, 0.9)
    add_13: "f32[64]" = torch.ops.aten.add.Tensor(mul_18, mul_19);  mul_18 = mul_19 = None
    unsqueeze_8: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_8, -1)
    unsqueeze_9: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_8, -1);  unsqueeze_8 = None
    mul_20: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_14, unsqueeze_9);  mul_14 = unsqueeze_9 = None
    unsqueeze_10: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_9, -1);  primals_9 = None
    unsqueeze_11: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_10, -1);  unsqueeze_10 = None
    add_14: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_20, unsqueeze_11);  mul_20 = unsqueeze_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_2: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_14);  add_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_3: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_2, primals_10, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_15: "i64[]" = torch.ops.aten.add.Tensor(primals_993, 1)
    var_mean_3 = torch.ops.aten.var_mean.correction(convolution_3, [0, 2, 3], correction = 0, keepdim = True)
    getitem_6: "f32[1, 64, 1, 1]" = var_mean_3[0]
    getitem_7: "f32[1, 64, 1, 1]" = var_mean_3[1];  var_mean_3 = None
    add_16: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_6, 1e-05)
    rsqrt_3: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_16);  add_16 = None
    sub_3: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_3, getitem_7)
    mul_21: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_3, rsqrt_3);  sub_3 = None
    squeeze_9: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_7, [0, 2, 3]);  getitem_7 = None
    squeeze_10: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_3, [0, 2, 3]);  rsqrt_3 = None
    mul_22: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_9, 0.1)
    mul_23: "f32[64]" = torch.ops.aten.mul.Tensor(primals_991, 0.9)
    add_17: "f32[64]" = torch.ops.aten.add.Tensor(mul_22, mul_23);  mul_22 = mul_23 = None
    squeeze_11: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_6, [0, 2, 3]);  getitem_6 = None
    mul_24: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_11, 1.0000398612827361);  squeeze_11 = None
    mul_25: "f32[64]" = torch.ops.aten.mul.Tensor(mul_24, 0.1);  mul_24 = None
    mul_26: "f32[64]" = torch.ops.aten.mul.Tensor(primals_992, 0.9)
    add_18: "f32[64]" = torch.ops.aten.add.Tensor(mul_25, mul_26);  mul_25 = mul_26 = None
    unsqueeze_12: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_11, -1)
    unsqueeze_13: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_12, -1);  unsqueeze_12 = None
    mul_27: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_21, unsqueeze_13);  mul_21 = unsqueeze_13 = None
    unsqueeze_14: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_12, -1);  primals_12 = None
    unsqueeze_15: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_14, -1);  unsqueeze_14 = None
    add_19: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_27, unsqueeze_15);  mul_27 = unsqueeze_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_3: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_19);  add_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_4: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_3, primals_13, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_20: "i64[]" = torch.ops.aten.add.Tensor(primals_996, 1)
    var_mean_4 = torch.ops.aten.var_mean.correction(convolution_4, [0, 2, 3], correction = 0, keepdim = True)
    getitem_8: "f32[1, 256, 1, 1]" = var_mean_4[0]
    getitem_9: "f32[1, 256, 1, 1]" = var_mean_4[1];  var_mean_4 = None
    add_21: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_8, 1e-05)
    rsqrt_4: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_21);  add_21 = None
    sub_4: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_4, getitem_9)
    mul_28: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_4, rsqrt_4);  sub_4 = None
    squeeze_12: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_9, [0, 2, 3]);  getitem_9 = None
    squeeze_13: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_4, [0, 2, 3]);  rsqrt_4 = None
    mul_29: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_12, 0.1)
    mul_30: "f32[256]" = torch.ops.aten.mul.Tensor(primals_994, 0.9)
    add_22: "f32[256]" = torch.ops.aten.add.Tensor(mul_29, mul_30);  mul_29 = mul_30 = None
    squeeze_14: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_8, [0, 2, 3]);  getitem_8 = None
    mul_31: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_14, 1.0000398612827361);  squeeze_14 = None
    mul_32: "f32[256]" = torch.ops.aten.mul.Tensor(mul_31, 0.1);  mul_31 = None
    mul_33: "f32[256]" = torch.ops.aten.mul.Tensor(primals_995, 0.9)
    add_23: "f32[256]" = torch.ops.aten.add.Tensor(mul_32, mul_33);  mul_32 = mul_33 = None
    unsqueeze_16: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_14, -1)
    unsqueeze_17: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_16, -1);  unsqueeze_16 = None
    mul_34: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_28, unsqueeze_17);  mul_28 = unsqueeze_17 = None
    unsqueeze_18: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_15, -1);  primals_15 = None
    unsqueeze_19: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_18, -1);  unsqueeze_18 = None
    add_24: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_34, unsqueeze_19);  mul_34 = unsqueeze_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_5: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_1, primals_16, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_25: "i64[]" = torch.ops.aten.add.Tensor(primals_999, 1)
    var_mean_5 = torch.ops.aten.var_mean.correction(convolution_5, [0, 2, 3], correction = 0, keepdim = True)
    getitem_10: "f32[1, 256, 1, 1]" = var_mean_5[0]
    getitem_11: "f32[1, 256, 1, 1]" = var_mean_5[1];  var_mean_5 = None
    add_26: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_10, 1e-05)
    rsqrt_5: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_26);  add_26 = None
    sub_5: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_5, getitem_11)
    mul_35: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_5, rsqrt_5);  sub_5 = None
    squeeze_15: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_11, [0, 2, 3]);  getitem_11 = None
    squeeze_16: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_5, [0, 2, 3]);  rsqrt_5 = None
    mul_36: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_15, 0.1)
    mul_37: "f32[256]" = torch.ops.aten.mul.Tensor(primals_997, 0.9)
    add_27: "f32[256]" = torch.ops.aten.add.Tensor(mul_36, mul_37);  mul_36 = mul_37 = None
    squeeze_17: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_10, [0, 2, 3]);  getitem_10 = None
    mul_38: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_17, 1.0000398612827361);  squeeze_17 = None
    mul_39: "f32[256]" = torch.ops.aten.mul.Tensor(mul_38, 0.1);  mul_38 = None
    mul_40: "f32[256]" = torch.ops.aten.mul.Tensor(primals_998, 0.9)
    add_28: "f32[256]" = torch.ops.aten.add.Tensor(mul_39, mul_40);  mul_39 = mul_40 = None
    unsqueeze_20: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_17, -1)
    unsqueeze_21: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_20, -1);  unsqueeze_20 = None
    mul_41: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_35, unsqueeze_21);  mul_35 = unsqueeze_21 = None
    unsqueeze_22: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_18, -1);  primals_18 = None
    unsqueeze_23: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_22, -1);  unsqueeze_22 = None
    add_29: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_41, unsqueeze_23);  mul_41 = unsqueeze_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_30: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_24, add_29);  add_24 = add_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_4: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_30);  add_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_6: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_4, primals_19, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_31: "i64[]" = torch.ops.aten.add.Tensor(primals_1002, 1)
    var_mean_6 = torch.ops.aten.var_mean.correction(convolution_6, [0, 2, 3], correction = 0, keepdim = True)
    getitem_12: "f32[1, 64, 1, 1]" = var_mean_6[0]
    getitem_13: "f32[1, 64, 1, 1]" = var_mean_6[1];  var_mean_6 = None
    add_32: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_12, 1e-05)
    rsqrt_6: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_32);  add_32 = None
    sub_6: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_6, getitem_13)
    mul_42: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_6, rsqrt_6);  sub_6 = None
    squeeze_18: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_13, [0, 2, 3]);  getitem_13 = None
    squeeze_19: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_6, [0, 2, 3]);  rsqrt_6 = None
    mul_43: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_18, 0.1)
    mul_44: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1000, 0.9)
    add_33: "f32[64]" = torch.ops.aten.add.Tensor(mul_43, mul_44);  mul_43 = mul_44 = None
    squeeze_20: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_12, [0, 2, 3]);  getitem_12 = None
    mul_45: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_20, 1.0000398612827361);  squeeze_20 = None
    mul_46: "f32[64]" = torch.ops.aten.mul.Tensor(mul_45, 0.1);  mul_45 = None
    mul_47: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1001, 0.9)
    add_34: "f32[64]" = torch.ops.aten.add.Tensor(mul_46, mul_47);  mul_46 = mul_47 = None
    unsqueeze_24: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_20, -1)
    unsqueeze_25: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_24, -1);  unsqueeze_24 = None
    mul_48: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_42, unsqueeze_25);  mul_42 = unsqueeze_25 = None
    unsqueeze_26: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_21, -1);  primals_21 = None
    unsqueeze_27: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_26, -1);  unsqueeze_26 = None
    add_35: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_48, unsqueeze_27);  mul_48 = unsqueeze_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_5: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_35);  add_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_7: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_5, primals_22, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_36: "i64[]" = torch.ops.aten.add.Tensor(primals_1005, 1)
    var_mean_7 = torch.ops.aten.var_mean.correction(convolution_7, [0, 2, 3], correction = 0, keepdim = True)
    getitem_14: "f32[1, 64, 1, 1]" = var_mean_7[0]
    getitem_15: "f32[1, 64, 1, 1]" = var_mean_7[1];  var_mean_7 = None
    add_37: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_14, 1e-05)
    rsqrt_7: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_37);  add_37 = None
    sub_7: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_7, getitem_15)
    mul_49: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_7, rsqrt_7);  sub_7 = None
    squeeze_21: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_15, [0, 2, 3]);  getitem_15 = None
    squeeze_22: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_7, [0, 2, 3]);  rsqrt_7 = None
    mul_50: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_21, 0.1)
    mul_51: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1003, 0.9)
    add_38: "f32[64]" = torch.ops.aten.add.Tensor(mul_50, mul_51);  mul_50 = mul_51 = None
    squeeze_23: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_14, [0, 2, 3]);  getitem_14 = None
    mul_52: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_23, 1.0000398612827361);  squeeze_23 = None
    mul_53: "f32[64]" = torch.ops.aten.mul.Tensor(mul_52, 0.1);  mul_52 = None
    mul_54: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1004, 0.9)
    add_39: "f32[64]" = torch.ops.aten.add.Tensor(mul_53, mul_54);  mul_53 = mul_54 = None
    unsqueeze_28: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_23, -1)
    unsqueeze_29: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_28, -1);  unsqueeze_28 = None
    mul_55: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_49, unsqueeze_29);  mul_49 = unsqueeze_29 = None
    unsqueeze_30: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_24, -1);  primals_24 = None
    unsqueeze_31: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_30, -1);  unsqueeze_30 = None
    add_40: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_55, unsqueeze_31);  mul_55 = unsqueeze_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_6: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_40);  add_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_8: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_6, primals_25, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_41: "i64[]" = torch.ops.aten.add.Tensor(primals_1008, 1)
    var_mean_8 = torch.ops.aten.var_mean.correction(convolution_8, [0, 2, 3], correction = 0, keepdim = True)
    getitem_16: "f32[1, 256, 1, 1]" = var_mean_8[0]
    getitem_17: "f32[1, 256, 1, 1]" = var_mean_8[1];  var_mean_8 = None
    add_42: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_16, 1e-05)
    rsqrt_8: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_42);  add_42 = None
    sub_8: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_8, getitem_17)
    mul_56: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_8, rsqrt_8);  sub_8 = None
    squeeze_24: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_17, [0, 2, 3]);  getitem_17 = None
    squeeze_25: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_8, [0, 2, 3]);  rsqrt_8 = None
    mul_57: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_24, 0.1)
    mul_58: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1006, 0.9)
    add_43: "f32[256]" = torch.ops.aten.add.Tensor(mul_57, mul_58);  mul_57 = mul_58 = None
    squeeze_26: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_16, [0, 2, 3]);  getitem_16 = None
    mul_59: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_26, 1.0000398612827361);  squeeze_26 = None
    mul_60: "f32[256]" = torch.ops.aten.mul.Tensor(mul_59, 0.1);  mul_59 = None
    mul_61: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1007, 0.9)
    add_44: "f32[256]" = torch.ops.aten.add.Tensor(mul_60, mul_61);  mul_60 = mul_61 = None
    unsqueeze_32: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_26, -1)
    unsqueeze_33: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_32, -1);  unsqueeze_32 = None
    mul_62: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_56, unsqueeze_33);  mul_56 = unsqueeze_33 = None
    unsqueeze_34: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_27, -1);  primals_27 = None
    unsqueeze_35: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_34, -1);  unsqueeze_34 = None
    add_45: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_62, unsqueeze_35);  mul_62 = unsqueeze_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_46: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_45, relu_4);  add_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_7: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_46);  add_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_9: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_7, primals_28, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_47: "i64[]" = torch.ops.aten.add.Tensor(primals_1011, 1)
    var_mean_9 = torch.ops.aten.var_mean.correction(convolution_9, [0, 2, 3], correction = 0, keepdim = True)
    getitem_18: "f32[1, 64, 1, 1]" = var_mean_9[0]
    getitem_19: "f32[1, 64, 1, 1]" = var_mean_9[1];  var_mean_9 = None
    add_48: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_18, 1e-05)
    rsqrt_9: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_48);  add_48 = None
    sub_9: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_9, getitem_19)
    mul_63: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_9, rsqrt_9);  sub_9 = None
    squeeze_27: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_19, [0, 2, 3]);  getitem_19 = None
    squeeze_28: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_9, [0, 2, 3]);  rsqrt_9 = None
    mul_64: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_27, 0.1)
    mul_65: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1009, 0.9)
    add_49: "f32[64]" = torch.ops.aten.add.Tensor(mul_64, mul_65);  mul_64 = mul_65 = None
    squeeze_29: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_18, [0, 2, 3]);  getitem_18 = None
    mul_66: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_29, 1.0000398612827361);  squeeze_29 = None
    mul_67: "f32[64]" = torch.ops.aten.mul.Tensor(mul_66, 0.1);  mul_66 = None
    mul_68: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1010, 0.9)
    add_50: "f32[64]" = torch.ops.aten.add.Tensor(mul_67, mul_68);  mul_67 = mul_68 = None
    unsqueeze_36: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_29, -1)
    unsqueeze_37: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_36, -1);  unsqueeze_36 = None
    mul_69: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_63, unsqueeze_37);  mul_63 = unsqueeze_37 = None
    unsqueeze_38: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_30, -1);  primals_30 = None
    unsqueeze_39: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_38, -1);  unsqueeze_38 = None
    add_51: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_69, unsqueeze_39);  mul_69 = unsqueeze_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_8: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_51);  add_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_10: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_8, primals_31, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_52: "i64[]" = torch.ops.aten.add.Tensor(primals_1014, 1)
    var_mean_10 = torch.ops.aten.var_mean.correction(convolution_10, [0, 2, 3], correction = 0, keepdim = True)
    getitem_20: "f32[1, 64, 1, 1]" = var_mean_10[0]
    getitem_21: "f32[1, 64, 1, 1]" = var_mean_10[1];  var_mean_10 = None
    add_53: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_20, 1e-05)
    rsqrt_10: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_53);  add_53 = None
    sub_10: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_10, getitem_21)
    mul_70: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_10, rsqrt_10);  sub_10 = None
    squeeze_30: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_21, [0, 2, 3]);  getitem_21 = None
    squeeze_31: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_10, [0, 2, 3]);  rsqrt_10 = None
    mul_71: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_30, 0.1)
    mul_72: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1012, 0.9)
    add_54: "f32[64]" = torch.ops.aten.add.Tensor(mul_71, mul_72);  mul_71 = mul_72 = None
    squeeze_32: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_20, [0, 2, 3]);  getitem_20 = None
    mul_73: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_32, 1.0000398612827361);  squeeze_32 = None
    mul_74: "f32[64]" = torch.ops.aten.mul.Tensor(mul_73, 0.1);  mul_73 = None
    mul_75: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1013, 0.9)
    add_55: "f32[64]" = torch.ops.aten.add.Tensor(mul_74, mul_75);  mul_74 = mul_75 = None
    unsqueeze_40: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_32, -1)
    unsqueeze_41: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_40, -1);  unsqueeze_40 = None
    mul_76: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_70, unsqueeze_41);  mul_70 = unsqueeze_41 = None
    unsqueeze_42: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_33, -1);  primals_33 = None
    unsqueeze_43: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_42, -1);  unsqueeze_42 = None
    add_56: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_76, unsqueeze_43);  mul_76 = unsqueeze_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_9: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_56);  add_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_11: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_9, primals_34, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_57: "i64[]" = torch.ops.aten.add.Tensor(primals_1017, 1)
    var_mean_11 = torch.ops.aten.var_mean.correction(convolution_11, [0, 2, 3], correction = 0, keepdim = True)
    getitem_22: "f32[1, 256, 1, 1]" = var_mean_11[0]
    getitem_23: "f32[1, 256, 1, 1]" = var_mean_11[1];  var_mean_11 = None
    add_58: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_22, 1e-05)
    rsqrt_11: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_58);  add_58 = None
    sub_11: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_11, getitem_23)
    mul_77: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_11, rsqrt_11);  sub_11 = None
    squeeze_33: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_23, [0, 2, 3]);  getitem_23 = None
    squeeze_34: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_11, [0, 2, 3]);  rsqrt_11 = None
    mul_78: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_33, 0.1)
    mul_79: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1015, 0.9)
    add_59: "f32[256]" = torch.ops.aten.add.Tensor(mul_78, mul_79);  mul_78 = mul_79 = None
    squeeze_35: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_22, [0, 2, 3]);  getitem_22 = None
    mul_80: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_35, 1.0000398612827361);  squeeze_35 = None
    mul_81: "f32[256]" = torch.ops.aten.mul.Tensor(mul_80, 0.1);  mul_80 = None
    mul_82: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1016, 0.9)
    add_60: "f32[256]" = torch.ops.aten.add.Tensor(mul_81, mul_82);  mul_81 = mul_82 = None
    unsqueeze_44: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_35, -1)
    unsqueeze_45: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_44, -1);  unsqueeze_44 = None
    mul_83: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_77, unsqueeze_45);  mul_77 = unsqueeze_45 = None
    unsqueeze_46: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_36, -1);  primals_36 = None
    unsqueeze_47: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_46, -1);  unsqueeze_46 = None
    add_61: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_83, unsqueeze_47);  mul_83 = unsqueeze_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_62: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_61, relu_7);  add_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_10: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_62);  add_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_12: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_10, primals_37, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_63: "i64[]" = torch.ops.aten.add.Tensor(primals_1020, 1)
    var_mean_12 = torch.ops.aten.var_mean.correction(convolution_12, [0, 2, 3], correction = 0, keepdim = True)
    getitem_24: "f32[1, 64, 1, 1]" = var_mean_12[0]
    getitem_25: "f32[1, 64, 1, 1]" = var_mean_12[1];  var_mean_12 = None
    add_64: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_24, 1e-05)
    rsqrt_12: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_64);  add_64 = None
    sub_12: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_12, getitem_25)
    mul_84: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_12, rsqrt_12);  sub_12 = None
    squeeze_36: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_25, [0, 2, 3]);  getitem_25 = None
    squeeze_37: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_12, [0, 2, 3]);  rsqrt_12 = None
    mul_85: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_36, 0.1)
    mul_86: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1018, 0.9)
    add_65: "f32[64]" = torch.ops.aten.add.Tensor(mul_85, mul_86);  mul_85 = mul_86 = None
    squeeze_38: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_24, [0, 2, 3]);  getitem_24 = None
    mul_87: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_38, 1.0000398612827361);  squeeze_38 = None
    mul_88: "f32[64]" = torch.ops.aten.mul.Tensor(mul_87, 0.1);  mul_87 = None
    mul_89: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1019, 0.9)
    add_66: "f32[64]" = torch.ops.aten.add.Tensor(mul_88, mul_89);  mul_88 = mul_89 = None
    unsqueeze_48: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_38, -1)
    unsqueeze_49: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_48, -1);  unsqueeze_48 = None
    mul_90: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_84, unsqueeze_49);  mul_84 = unsqueeze_49 = None
    unsqueeze_50: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_39, -1);  primals_39 = None
    unsqueeze_51: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_50, -1);  unsqueeze_50 = None
    add_67: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_90, unsqueeze_51);  mul_90 = unsqueeze_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_11: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_67);  add_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_13: "f32[8, 64, 56, 56]" = torch.ops.aten.convolution.default(relu_11, primals_40, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_68: "i64[]" = torch.ops.aten.add.Tensor(primals_1023, 1)
    var_mean_13 = torch.ops.aten.var_mean.correction(convolution_13, [0, 2, 3], correction = 0, keepdim = True)
    getitem_26: "f32[1, 64, 1, 1]" = var_mean_13[0]
    getitem_27: "f32[1, 64, 1, 1]" = var_mean_13[1];  var_mean_13 = None
    add_69: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_26, 1e-05)
    rsqrt_13: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_69);  add_69 = None
    sub_13: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_13, getitem_27)
    mul_91: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_13, rsqrt_13);  sub_13 = None
    squeeze_39: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_27, [0, 2, 3]);  getitem_27 = None
    squeeze_40: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_13, [0, 2, 3]);  rsqrt_13 = None
    mul_92: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_39, 0.1)
    mul_93: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1021, 0.9)
    add_70: "f32[64]" = torch.ops.aten.add.Tensor(mul_92, mul_93);  mul_92 = mul_93 = None
    squeeze_41: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_26, [0, 2, 3]);  getitem_26 = None
    mul_94: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_41, 1.0000398612827361);  squeeze_41 = None
    mul_95: "f32[64]" = torch.ops.aten.mul.Tensor(mul_94, 0.1);  mul_94 = None
    mul_96: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1022, 0.9)
    add_71: "f32[64]" = torch.ops.aten.add.Tensor(mul_95, mul_96);  mul_95 = mul_96 = None
    unsqueeze_52: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_41, -1)
    unsqueeze_53: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_52, -1);  unsqueeze_52 = None
    mul_97: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(mul_91, unsqueeze_53);  mul_91 = unsqueeze_53 = None
    unsqueeze_54: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_42, -1);  primals_42 = None
    unsqueeze_55: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_54, -1);  unsqueeze_54 = None
    add_72: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(mul_97, unsqueeze_55);  mul_97 = unsqueeze_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_12: "f32[8, 64, 56, 56]" = torch.ops.aten.relu.default(add_72);  add_72 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_14: "f32[8, 256, 56, 56]" = torch.ops.aten.convolution.default(relu_12, primals_43, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_73: "i64[]" = torch.ops.aten.add.Tensor(primals_1026, 1)
    var_mean_14 = torch.ops.aten.var_mean.correction(convolution_14, [0, 2, 3], correction = 0, keepdim = True)
    getitem_28: "f32[1, 256, 1, 1]" = var_mean_14[0]
    getitem_29: "f32[1, 256, 1, 1]" = var_mean_14[1];  var_mean_14 = None
    add_74: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_28, 1e-05)
    rsqrt_14: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_74);  add_74 = None
    sub_14: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_14, getitem_29)
    mul_98: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_14, rsqrt_14);  sub_14 = None
    squeeze_42: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_29, [0, 2, 3]);  getitem_29 = None
    squeeze_43: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_14, [0, 2, 3]);  rsqrt_14 = None
    mul_99: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_42, 0.1)
    mul_100: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1024, 0.9)
    add_75: "f32[256]" = torch.ops.aten.add.Tensor(mul_99, mul_100);  mul_99 = mul_100 = None
    squeeze_44: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_28, [0, 2, 3]);  getitem_28 = None
    mul_101: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_44, 1.0000398612827361);  squeeze_44 = None
    mul_102: "f32[256]" = torch.ops.aten.mul.Tensor(mul_101, 0.1);  mul_101 = None
    mul_103: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1025, 0.9)
    add_76: "f32[256]" = torch.ops.aten.add.Tensor(mul_102, mul_103);  mul_102 = mul_103 = None
    unsqueeze_56: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_44, -1)
    unsqueeze_57: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_56, -1);  unsqueeze_56 = None
    mul_104: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(mul_98, unsqueeze_57);  mul_98 = unsqueeze_57 = None
    unsqueeze_58: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_45, -1);  primals_45 = None
    unsqueeze_59: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_58, -1);  unsqueeze_58 = None
    add_77: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(mul_104, unsqueeze_59);  mul_104 = unsqueeze_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_78: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(add_77, relu_10);  add_77 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_13: "f32[8, 256, 56, 56]" = torch.ops.aten.relu.default(add_78);  add_78 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:750, code: xl = [t(x) for i, t in enumerate(self.transition1)]
    convolution_15: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_13, primals_46, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    add_79: "i64[]" = torch.ops.aten.add.Tensor(primals_1029, 1)
    var_mean_15 = torch.ops.aten.var_mean.correction(convolution_15, [0, 2, 3], correction = 0, keepdim = True)
    getitem_30: "f32[1, 18, 1, 1]" = var_mean_15[0]
    getitem_31: "f32[1, 18, 1, 1]" = var_mean_15[1];  var_mean_15 = None
    add_80: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_30, 1e-05)
    rsqrt_15: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_80);  add_80 = None
    sub_15: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_15, getitem_31)
    mul_105: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_15, rsqrt_15);  sub_15 = None
    squeeze_45: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_31, [0, 2, 3]);  getitem_31 = None
    squeeze_46: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_15, [0, 2, 3]);  rsqrt_15 = None
    mul_106: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_45, 0.1)
    mul_107: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1027, 0.9)
    add_81: "f32[18]" = torch.ops.aten.add.Tensor(mul_106, mul_107);  mul_106 = mul_107 = None
    squeeze_47: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_30, [0, 2, 3]);  getitem_30 = None
    mul_108: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_47, 1.0000398612827361);  squeeze_47 = None
    mul_109: "f32[18]" = torch.ops.aten.mul.Tensor(mul_108, 0.1);  mul_108 = None
    mul_110: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1028, 0.9)
    add_82: "f32[18]" = torch.ops.aten.add.Tensor(mul_109, mul_110);  mul_109 = mul_110 = None
    unsqueeze_60: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_47, -1)
    unsqueeze_61: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_60, -1);  unsqueeze_60 = None
    mul_111: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_105, unsqueeze_61);  mul_105 = unsqueeze_61 = None
    unsqueeze_62: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_48, -1);  primals_48 = None
    unsqueeze_63: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_62, -1);  unsqueeze_62 = None
    add_83: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_111, unsqueeze_63);  mul_111 = unsqueeze_63 = None
    relu_14: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_83);  add_83 = None
    convolution_16: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_13, primals_49, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_84: "i64[]" = torch.ops.aten.add.Tensor(primals_1032, 1)
    var_mean_16 = torch.ops.aten.var_mean.correction(convolution_16, [0, 2, 3], correction = 0, keepdim = True)
    getitem_32: "f32[1, 36, 1, 1]" = var_mean_16[0]
    getitem_33: "f32[1, 36, 1, 1]" = var_mean_16[1];  var_mean_16 = None
    add_85: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_32, 1e-05)
    rsqrt_16: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_85);  add_85 = None
    sub_16: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_16, getitem_33)
    mul_112: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_16, rsqrt_16);  sub_16 = None
    squeeze_48: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_33, [0, 2, 3]);  getitem_33 = None
    squeeze_49: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_16, [0, 2, 3]);  rsqrt_16 = None
    mul_113: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_48, 0.1)
    mul_114: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1030, 0.9)
    add_86: "f32[36]" = torch.ops.aten.add.Tensor(mul_113, mul_114);  mul_113 = mul_114 = None
    squeeze_50: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_32, [0, 2, 3]);  getitem_32 = None
    mul_115: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_50, 1.0001594642002871);  squeeze_50 = None
    mul_116: "f32[36]" = torch.ops.aten.mul.Tensor(mul_115, 0.1);  mul_115 = None
    mul_117: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1031, 0.9)
    add_87: "f32[36]" = torch.ops.aten.add.Tensor(mul_116, mul_117);  mul_116 = mul_117 = None
    unsqueeze_64: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_50, -1)
    unsqueeze_65: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_64, -1);  unsqueeze_64 = None
    mul_118: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_112, unsqueeze_65);  mul_112 = unsqueeze_65 = None
    unsqueeze_66: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_51, -1);  primals_51 = None
    unsqueeze_67: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_66, -1);  unsqueeze_66 = None
    add_88: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_118, unsqueeze_67);  mul_118 = unsqueeze_67 = None
    relu_15: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_88);  add_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_17: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_14, primals_52, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_89: "i64[]" = torch.ops.aten.add.Tensor(primals_1035, 1)
    var_mean_17 = torch.ops.aten.var_mean.correction(convolution_17, [0, 2, 3], correction = 0, keepdim = True)
    getitem_34: "f32[1, 18, 1, 1]" = var_mean_17[0]
    getitem_35: "f32[1, 18, 1, 1]" = var_mean_17[1];  var_mean_17 = None
    add_90: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_34, 1e-05)
    rsqrt_17: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_90);  add_90 = None
    sub_17: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_17, getitem_35)
    mul_119: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_17, rsqrt_17);  sub_17 = None
    squeeze_51: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_35, [0, 2, 3]);  getitem_35 = None
    squeeze_52: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_17, [0, 2, 3]);  rsqrt_17 = None
    mul_120: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_51, 0.1)
    mul_121: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1033, 0.9)
    add_91: "f32[18]" = torch.ops.aten.add.Tensor(mul_120, mul_121);  mul_120 = mul_121 = None
    squeeze_53: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_34, [0, 2, 3]);  getitem_34 = None
    mul_122: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_53, 1.0000398612827361);  squeeze_53 = None
    mul_123: "f32[18]" = torch.ops.aten.mul.Tensor(mul_122, 0.1);  mul_122 = None
    mul_124: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1034, 0.9)
    add_92: "f32[18]" = torch.ops.aten.add.Tensor(mul_123, mul_124);  mul_123 = mul_124 = None
    unsqueeze_68: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_53, -1)
    unsqueeze_69: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_68, -1);  unsqueeze_68 = None
    mul_125: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_119, unsqueeze_69);  mul_119 = unsqueeze_69 = None
    unsqueeze_70: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_54, -1);  primals_54 = None
    unsqueeze_71: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_70, -1);  unsqueeze_70 = None
    add_93: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_125, unsqueeze_71);  mul_125 = unsqueeze_71 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_16: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_93);  add_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_18: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_16, primals_55, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_94: "i64[]" = torch.ops.aten.add.Tensor(primals_1038, 1)
    var_mean_18 = torch.ops.aten.var_mean.correction(convolution_18, [0, 2, 3], correction = 0, keepdim = True)
    getitem_36: "f32[1, 18, 1, 1]" = var_mean_18[0]
    getitem_37: "f32[1, 18, 1, 1]" = var_mean_18[1];  var_mean_18 = None
    add_95: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_36, 1e-05)
    rsqrt_18: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_95);  add_95 = None
    sub_18: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_18, getitem_37)
    mul_126: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_18, rsqrt_18);  sub_18 = None
    squeeze_54: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_37, [0, 2, 3]);  getitem_37 = None
    squeeze_55: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_18, [0, 2, 3]);  rsqrt_18 = None
    mul_127: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_54, 0.1)
    mul_128: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1036, 0.9)
    add_96: "f32[18]" = torch.ops.aten.add.Tensor(mul_127, mul_128);  mul_127 = mul_128 = None
    squeeze_56: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_36, [0, 2, 3]);  getitem_36 = None
    mul_129: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_56, 1.0000398612827361);  squeeze_56 = None
    mul_130: "f32[18]" = torch.ops.aten.mul.Tensor(mul_129, 0.1);  mul_129 = None
    mul_131: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1037, 0.9)
    add_97: "f32[18]" = torch.ops.aten.add.Tensor(mul_130, mul_131);  mul_130 = mul_131 = None
    unsqueeze_72: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_56, -1)
    unsqueeze_73: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_72, -1);  unsqueeze_72 = None
    mul_132: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_126, unsqueeze_73);  mul_126 = unsqueeze_73 = None
    unsqueeze_74: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_57, -1);  primals_57 = None
    unsqueeze_75: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_74, -1);  unsqueeze_74 = None
    add_98: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_132, unsqueeze_75);  mul_132 = unsqueeze_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_99: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_98, relu_14);  add_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_17: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_99);  add_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_19: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_17, primals_58, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_100: "i64[]" = torch.ops.aten.add.Tensor(primals_1041, 1)
    var_mean_19 = torch.ops.aten.var_mean.correction(convolution_19, [0, 2, 3], correction = 0, keepdim = True)
    getitem_38: "f32[1, 18, 1, 1]" = var_mean_19[0]
    getitem_39: "f32[1, 18, 1, 1]" = var_mean_19[1];  var_mean_19 = None
    add_101: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_38, 1e-05)
    rsqrt_19: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_101);  add_101 = None
    sub_19: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_19, getitem_39)
    mul_133: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_19, rsqrt_19);  sub_19 = None
    squeeze_57: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_39, [0, 2, 3]);  getitem_39 = None
    squeeze_58: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_19, [0, 2, 3]);  rsqrt_19 = None
    mul_134: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_57, 0.1)
    mul_135: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1039, 0.9)
    add_102: "f32[18]" = torch.ops.aten.add.Tensor(mul_134, mul_135);  mul_134 = mul_135 = None
    squeeze_59: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_38, [0, 2, 3]);  getitem_38 = None
    mul_136: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_59, 1.0000398612827361);  squeeze_59 = None
    mul_137: "f32[18]" = torch.ops.aten.mul.Tensor(mul_136, 0.1);  mul_136 = None
    mul_138: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1040, 0.9)
    add_103: "f32[18]" = torch.ops.aten.add.Tensor(mul_137, mul_138);  mul_137 = mul_138 = None
    unsqueeze_76: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_59, -1)
    unsqueeze_77: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_76, -1);  unsqueeze_76 = None
    mul_139: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_133, unsqueeze_77);  mul_133 = unsqueeze_77 = None
    unsqueeze_78: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_60, -1);  primals_60 = None
    unsqueeze_79: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_78, -1);  unsqueeze_78 = None
    add_104: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_139, unsqueeze_79);  mul_139 = unsqueeze_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_18: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_104);  add_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_20: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_18, primals_61, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_105: "i64[]" = torch.ops.aten.add.Tensor(primals_1044, 1)
    var_mean_20 = torch.ops.aten.var_mean.correction(convolution_20, [0, 2, 3], correction = 0, keepdim = True)
    getitem_40: "f32[1, 18, 1, 1]" = var_mean_20[0]
    getitem_41: "f32[1, 18, 1, 1]" = var_mean_20[1];  var_mean_20 = None
    add_106: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_40, 1e-05)
    rsqrt_20: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_106);  add_106 = None
    sub_20: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_20, getitem_41)
    mul_140: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_20, rsqrt_20);  sub_20 = None
    squeeze_60: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_41, [0, 2, 3]);  getitem_41 = None
    squeeze_61: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_20, [0, 2, 3]);  rsqrt_20 = None
    mul_141: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_60, 0.1)
    mul_142: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1042, 0.9)
    add_107: "f32[18]" = torch.ops.aten.add.Tensor(mul_141, mul_142);  mul_141 = mul_142 = None
    squeeze_62: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_40, [0, 2, 3]);  getitem_40 = None
    mul_143: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_62, 1.0000398612827361);  squeeze_62 = None
    mul_144: "f32[18]" = torch.ops.aten.mul.Tensor(mul_143, 0.1);  mul_143 = None
    mul_145: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1043, 0.9)
    add_108: "f32[18]" = torch.ops.aten.add.Tensor(mul_144, mul_145);  mul_144 = mul_145 = None
    unsqueeze_80: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_62, -1)
    unsqueeze_81: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_80, -1);  unsqueeze_80 = None
    mul_146: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_140, unsqueeze_81);  mul_140 = unsqueeze_81 = None
    unsqueeze_82: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_63, -1);  primals_63 = None
    unsqueeze_83: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_82, -1);  unsqueeze_82 = None
    add_109: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_146, unsqueeze_83);  mul_146 = unsqueeze_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_110: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_109, relu_17);  add_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_19: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_110);  add_110 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_21: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_19, primals_64, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_111: "i64[]" = torch.ops.aten.add.Tensor(primals_1047, 1)
    var_mean_21 = torch.ops.aten.var_mean.correction(convolution_21, [0, 2, 3], correction = 0, keepdim = True)
    getitem_42: "f32[1, 18, 1, 1]" = var_mean_21[0]
    getitem_43: "f32[1, 18, 1, 1]" = var_mean_21[1];  var_mean_21 = None
    add_112: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_42, 1e-05)
    rsqrt_21: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_112);  add_112 = None
    sub_21: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_21, getitem_43)
    mul_147: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_21, rsqrt_21);  sub_21 = None
    squeeze_63: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_43, [0, 2, 3]);  getitem_43 = None
    squeeze_64: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_21, [0, 2, 3]);  rsqrt_21 = None
    mul_148: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_63, 0.1)
    mul_149: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1045, 0.9)
    add_113: "f32[18]" = torch.ops.aten.add.Tensor(mul_148, mul_149);  mul_148 = mul_149 = None
    squeeze_65: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_42, [0, 2, 3]);  getitem_42 = None
    mul_150: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_65, 1.0000398612827361);  squeeze_65 = None
    mul_151: "f32[18]" = torch.ops.aten.mul.Tensor(mul_150, 0.1);  mul_150 = None
    mul_152: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1046, 0.9)
    add_114: "f32[18]" = torch.ops.aten.add.Tensor(mul_151, mul_152);  mul_151 = mul_152 = None
    unsqueeze_84: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_65, -1)
    unsqueeze_85: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_84, -1);  unsqueeze_84 = None
    mul_153: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_147, unsqueeze_85);  mul_147 = unsqueeze_85 = None
    unsqueeze_86: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_66, -1);  primals_66 = None
    unsqueeze_87: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_86, -1);  unsqueeze_86 = None
    add_115: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_153, unsqueeze_87);  mul_153 = unsqueeze_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_20: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_115);  add_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_22: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_20, primals_67, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_116: "i64[]" = torch.ops.aten.add.Tensor(primals_1050, 1)
    var_mean_22 = torch.ops.aten.var_mean.correction(convolution_22, [0, 2, 3], correction = 0, keepdim = True)
    getitem_44: "f32[1, 18, 1, 1]" = var_mean_22[0]
    getitem_45: "f32[1, 18, 1, 1]" = var_mean_22[1];  var_mean_22 = None
    add_117: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_44, 1e-05)
    rsqrt_22: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_117);  add_117 = None
    sub_22: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_22, getitem_45)
    mul_154: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_22, rsqrt_22);  sub_22 = None
    squeeze_66: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_45, [0, 2, 3]);  getitem_45 = None
    squeeze_67: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_22, [0, 2, 3]);  rsqrt_22 = None
    mul_155: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_66, 0.1)
    mul_156: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1048, 0.9)
    add_118: "f32[18]" = torch.ops.aten.add.Tensor(mul_155, mul_156);  mul_155 = mul_156 = None
    squeeze_68: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_44, [0, 2, 3]);  getitem_44 = None
    mul_157: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_68, 1.0000398612827361);  squeeze_68 = None
    mul_158: "f32[18]" = torch.ops.aten.mul.Tensor(mul_157, 0.1);  mul_157 = None
    mul_159: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1049, 0.9)
    add_119: "f32[18]" = torch.ops.aten.add.Tensor(mul_158, mul_159);  mul_158 = mul_159 = None
    unsqueeze_88: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_68, -1)
    unsqueeze_89: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_88, -1);  unsqueeze_88 = None
    mul_160: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_154, unsqueeze_89);  mul_154 = unsqueeze_89 = None
    unsqueeze_90: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_69, -1);  primals_69 = None
    unsqueeze_91: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_90, -1);  unsqueeze_90 = None
    add_120: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_160, unsqueeze_91);  mul_160 = unsqueeze_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_121: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_120, relu_19);  add_120 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_21: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_121);  add_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_23: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_21, primals_70, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_122: "i64[]" = torch.ops.aten.add.Tensor(primals_1053, 1)
    var_mean_23 = torch.ops.aten.var_mean.correction(convolution_23, [0, 2, 3], correction = 0, keepdim = True)
    getitem_46: "f32[1, 18, 1, 1]" = var_mean_23[0]
    getitem_47: "f32[1, 18, 1, 1]" = var_mean_23[1];  var_mean_23 = None
    add_123: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_46, 1e-05)
    rsqrt_23: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_123);  add_123 = None
    sub_23: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_23, getitem_47)
    mul_161: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_23, rsqrt_23);  sub_23 = None
    squeeze_69: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_47, [0, 2, 3]);  getitem_47 = None
    squeeze_70: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_23, [0, 2, 3]);  rsqrt_23 = None
    mul_162: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_69, 0.1)
    mul_163: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1051, 0.9)
    add_124: "f32[18]" = torch.ops.aten.add.Tensor(mul_162, mul_163);  mul_162 = mul_163 = None
    squeeze_71: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_46, [0, 2, 3]);  getitem_46 = None
    mul_164: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_71, 1.0000398612827361);  squeeze_71 = None
    mul_165: "f32[18]" = torch.ops.aten.mul.Tensor(mul_164, 0.1);  mul_164 = None
    mul_166: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1052, 0.9)
    add_125: "f32[18]" = torch.ops.aten.add.Tensor(mul_165, mul_166);  mul_165 = mul_166 = None
    unsqueeze_92: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_71, -1)
    unsqueeze_93: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_92, -1);  unsqueeze_92 = None
    mul_167: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_161, unsqueeze_93);  mul_161 = unsqueeze_93 = None
    unsqueeze_94: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_72, -1);  primals_72 = None
    unsqueeze_95: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_94, -1);  unsqueeze_94 = None
    add_126: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_167, unsqueeze_95);  mul_167 = unsqueeze_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_22: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_126);  add_126 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_24: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_22, primals_73, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_127: "i64[]" = torch.ops.aten.add.Tensor(primals_1056, 1)
    var_mean_24 = torch.ops.aten.var_mean.correction(convolution_24, [0, 2, 3], correction = 0, keepdim = True)
    getitem_48: "f32[1, 18, 1, 1]" = var_mean_24[0]
    getitem_49: "f32[1, 18, 1, 1]" = var_mean_24[1];  var_mean_24 = None
    add_128: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_48, 1e-05)
    rsqrt_24: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_128);  add_128 = None
    sub_24: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_24, getitem_49)
    mul_168: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_24, rsqrt_24);  sub_24 = None
    squeeze_72: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_49, [0, 2, 3]);  getitem_49 = None
    squeeze_73: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_24, [0, 2, 3]);  rsqrt_24 = None
    mul_169: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_72, 0.1)
    mul_170: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1054, 0.9)
    add_129: "f32[18]" = torch.ops.aten.add.Tensor(mul_169, mul_170);  mul_169 = mul_170 = None
    squeeze_74: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_48, [0, 2, 3]);  getitem_48 = None
    mul_171: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_74, 1.0000398612827361);  squeeze_74 = None
    mul_172: "f32[18]" = torch.ops.aten.mul.Tensor(mul_171, 0.1);  mul_171 = None
    mul_173: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1055, 0.9)
    add_130: "f32[18]" = torch.ops.aten.add.Tensor(mul_172, mul_173);  mul_172 = mul_173 = None
    unsqueeze_96: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_74, -1)
    unsqueeze_97: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_96, -1);  unsqueeze_96 = None
    mul_174: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_168, unsqueeze_97);  mul_168 = unsqueeze_97 = None
    unsqueeze_98: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_75, -1);  primals_75 = None
    unsqueeze_99: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_98, -1);  unsqueeze_98 = None
    add_131: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_174, unsqueeze_99);  mul_174 = unsqueeze_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_132: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_131, relu_21);  add_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_23: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_132);  add_132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_25: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_15, primals_76, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_133: "i64[]" = torch.ops.aten.add.Tensor(primals_1059, 1)
    var_mean_25 = torch.ops.aten.var_mean.correction(convolution_25, [0, 2, 3], correction = 0, keepdim = True)
    getitem_50: "f32[1, 36, 1, 1]" = var_mean_25[0]
    getitem_51: "f32[1, 36, 1, 1]" = var_mean_25[1];  var_mean_25 = None
    add_134: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_50, 1e-05)
    rsqrt_25: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_134);  add_134 = None
    sub_25: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_25, getitem_51)
    mul_175: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_25, rsqrt_25);  sub_25 = None
    squeeze_75: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_51, [0, 2, 3]);  getitem_51 = None
    squeeze_76: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_25, [0, 2, 3]);  rsqrt_25 = None
    mul_176: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_75, 0.1)
    mul_177: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1057, 0.9)
    add_135: "f32[36]" = torch.ops.aten.add.Tensor(mul_176, mul_177);  mul_176 = mul_177 = None
    squeeze_77: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_50, [0, 2, 3]);  getitem_50 = None
    mul_178: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_77, 1.0001594642002871);  squeeze_77 = None
    mul_179: "f32[36]" = torch.ops.aten.mul.Tensor(mul_178, 0.1);  mul_178 = None
    mul_180: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1058, 0.9)
    add_136: "f32[36]" = torch.ops.aten.add.Tensor(mul_179, mul_180);  mul_179 = mul_180 = None
    unsqueeze_100: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_77, -1)
    unsqueeze_101: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_100, -1);  unsqueeze_100 = None
    mul_181: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_175, unsqueeze_101);  mul_175 = unsqueeze_101 = None
    unsqueeze_102: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_78, -1);  primals_78 = None
    unsqueeze_103: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_102, -1);  unsqueeze_102 = None
    add_137: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_181, unsqueeze_103);  mul_181 = unsqueeze_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_24: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_137);  add_137 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_26: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_24, primals_79, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_138: "i64[]" = torch.ops.aten.add.Tensor(primals_1062, 1)
    var_mean_26 = torch.ops.aten.var_mean.correction(convolution_26, [0, 2, 3], correction = 0, keepdim = True)
    getitem_52: "f32[1, 36, 1, 1]" = var_mean_26[0]
    getitem_53: "f32[1, 36, 1, 1]" = var_mean_26[1];  var_mean_26 = None
    add_139: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_52, 1e-05)
    rsqrt_26: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_139);  add_139 = None
    sub_26: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_26, getitem_53)
    mul_182: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_26, rsqrt_26);  sub_26 = None
    squeeze_78: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_53, [0, 2, 3]);  getitem_53 = None
    squeeze_79: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_26, [0, 2, 3]);  rsqrt_26 = None
    mul_183: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_78, 0.1)
    mul_184: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1060, 0.9)
    add_140: "f32[36]" = torch.ops.aten.add.Tensor(mul_183, mul_184);  mul_183 = mul_184 = None
    squeeze_80: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_52, [0, 2, 3]);  getitem_52 = None
    mul_185: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_80, 1.0001594642002871);  squeeze_80 = None
    mul_186: "f32[36]" = torch.ops.aten.mul.Tensor(mul_185, 0.1);  mul_185 = None
    mul_187: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1061, 0.9)
    add_141: "f32[36]" = torch.ops.aten.add.Tensor(mul_186, mul_187);  mul_186 = mul_187 = None
    unsqueeze_104: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_80, -1)
    unsqueeze_105: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_104, -1);  unsqueeze_104 = None
    mul_188: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_182, unsqueeze_105);  mul_182 = unsqueeze_105 = None
    unsqueeze_106: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_81, -1);  primals_81 = None
    unsqueeze_107: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_106, -1);  unsqueeze_106 = None
    add_142: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_188, unsqueeze_107);  mul_188 = unsqueeze_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_143: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_142, relu_15);  add_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_25: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_143);  add_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_27: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_25, primals_82, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_144: "i64[]" = torch.ops.aten.add.Tensor(primals_1065, 1)
    var_mean_27 = torch.ops.aten.var_mean.correction(convolution_27, [0, 2, 3], correction = 0, keepdim = True)
    getitem_54: "f32[1, 36, 1, 1]" = var_mean_27[0]
    getitem_55: "f32[1, 36, 1, 1]" = var_mean_27[1];  var_mean_27 = None
    add_145: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_54, 1e-05)
    rsqrt_27: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_145);  add_145 = None
    sub_27: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_27, getitem_55)
    mul_189: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_27, rsqrt_27);  sub_27 = None
    squeeze_81: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_55, [0, 2, 3]);  getitem_55 = None
    squeeze_82: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_27, [0, 2, 3]);  rsqrt_27 = None
    mul_190: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_81, 0.1)
    mul_191: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1063, 0.9)
    add_146: "f32[36]" = torch.ops.aten.add.Tensor(mul_190, mul_191);  mul_190 = mul_191 = None
    squeeze_83: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_54, [0, 2, 3]);  getitem_54 = None
    mul_192: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_83, 1.0001594642002871);  squeeze_83 = None
    mul_193: "f32[36]" = torch.ops.aten.mul.Tensor(mul_192, 0.1);  mul_192 = None
    mul_194: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1064, 0.9)
    add_147: "f32[36]" = torch.ops.aten.add.Tensor(mul_193, mul_194);  mul_193 = mul_194 = None
    unsqueeze_108: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_83, -1)
    unsqueeze_109: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_108, -1);  unsqueeze_108 = None
    mul_195: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_189, unsqueeze_109);  mul_189 = unsqueeze_109 = None
    unsqueeze_110: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_84, -1);  primals_84 = None
    unsqueeze_111: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_110, -1);  unsqueeze_110 = None
    add_148: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_195, unsqueeze_111);  mul_195 = unsqueeze_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_26: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_148);  add_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_28: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_26, primals_85, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_149: "i64[]" = torch.ops.aten.add.Tensor(primals_1068, 1)
    var_mean_28 = torch.ops.aten.var_mean.correction(convolution_28, [0, 2, 3], correction = 0, keepdim = True)
    getitem_56: "f32[1, 36, 1, 1]" = var_mean_28[0]
    getitem_57: "f32[1, 36, 1, 1]" = var_mean_28[1];  var_mean_28 = None
    add_150: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_56, 1e-05)
    rsqrt_28: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_150);  add_150 = None
    sub_28: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_28, getitem_57)
    mul_196: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_28, rsqrt_28);  sub_28 = None
    squeeze_84: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_57, [0, 2, 3]);  getitem_57 = None
    squeeze_85: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_28, [0, 2, 3]);  rsqrt_28 = None
    mul_197: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_84, 0.1)
    mul_198: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1066, 0.9)
    add_151: "f32[36]" = torch.ops.aten.add.Tensor(mul_197, mul_198);  mul_197 = mul_198 = None
    squeeze_86: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_56, [0, 2, 3]);  getitem_56 = None
    mul_199: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_86, 1.0001594642002871);  squeeze_86 = None
    mul_200: "f32[36]" = torch.ops.aten.mul.Tensor(mul_199, 0.1);  mul_199 = None
    mul_201: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1067, 0.9)
    add_152: "f32[36]" = torch.ops.aten.add.Tensor(mul_200, mul_201);  mul_200 = mul_201 = None
    unsqueeze_112: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_86, -1)
    unsqueeze_113: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_112, -1);  unsqueeze_112 = None
    mul_202: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_196, unsqueeze_113);  mul_196 = unsqueeze_113 = None
    unsqueeze_114: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_87, -1);  primals_87 = None
    unsqueeze_115: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_114, -1);  unsqueeze_114 = None
    add_153: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_202, unsqueeze_115);  mul_202 = unsqueeze_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_154: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_153, relu_25);  add_153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_27: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_154);  add_154 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_29: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_27, primals_88, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_155: "i64[]" = torch.ops.aten.add.Tensor(primals_1071, 1)
    var_mean_29 = torch.ops.aten.var_mean.correction(convolution_29, [0, 2, 3], correction = 0, keepdim = True)
    getitem_58: "f32[1, 36, 1, 1]" = var_mean_29[0]
    getitem_59: "f32[1, 36, 1, 1]" = var_mean_29[1];  var_mean_29 = None
    add_156: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_58, 1e-05)
    rsqrt_29: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_156);  add_156 = None
    sub_29: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_29, getitem_59)
    mul_203: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_29, rsqrt_29);  sub_29 = None
    squeeze_87: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_59, [0, 2, 3]);  getitem_59 = None
    squeeze_88: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_29, [0, 2, 3]);  rsqrt_29 = None
    mul_204: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_87, 0.1)
    mul_205: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1069, 0.9)
    add_157: "f32[36]" = torch.ops.aten.add.Tensor(mul_204, mul_205);  mul_204 = mul_205 = None
    squeeze_89: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_58, [0, 2, 3]);  getitem_58 = None
    mul_206: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_89, 1.0001594642002871);  squeeze_89 = None
    mul_207: "f32[36]" = torch.ops.aten.mul.Tensor(mul_206, 0.1);  mul_206 = None
    mul_208: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1070, 0.9)
    add_158: "f32[36]" = torch.ops.aten.add.Tensor(mul_207, mul_208);  mul_207 = mul_208 = None
    unsqueeze_116: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_89, -1)
    unsqueeze_117: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_116, -1);  unsqueeze_116 = None
    mul_209: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_203, unsqueeze_117);  mul_203 = unsqueeze_117 = None
    unsqueeze_118: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_90, -1);  primals_90 = None
    unsqueeze_119: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_118, -1);  unsqueeze_118 = None
    add_159: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_209, unsqueeze_119);  mul_209 = unsqueeze_119 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_28: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_159);  add_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_30: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_28, primals_91, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_160: "i64[]" = torch.ops.aten.add.Tensor(primals_1074, 1)
    var_mean_30 = torch.ops.aten.var_mean.correction(convolution_30, [0, 2, 3], correction = 0, keepdim = True)
    getitem_60: "f32[1, 36, 1, 1]" = var_mean_30[0]
    getitem_61: "f32[1, 36, 1, 1]" = var_mean_30[1];  var_mean_30 = None
    add_161: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_60, 1e-05)
    rsqrt_30: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_161);  add_161 = None
    sub_30: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_30, getitem_61)
    mul_210: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_30, rsqrt_30);  sub_30 = None
    squeeze_90: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_61, [0, 2, 3]);  getitem_61 = None
    squeeze_91: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_30, [0, 2, 3]);  rsqrt_30 = None
    mul_211: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_90, 0.1)
    mul_212: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1072, 0.9)
    add_162: "f32[36]" = torch.ops.aten.add.Tensor(mul_211, mul_212);  mul_211 = mul_212 = None
    squeeze_92: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_60, [0, 2, 3]);  getitem_60 = None
    mul_213: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_92, 1.0001594642002871);  squeeze_92 = None
    mul_214: "f32[36]" = torch.ops.aten.mul.Tensor(mul_213, 0.1);  mul_213 = None
    mul_215: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1073, 0.9)
    add_163: "f32[36]" = torch.ops.aten.add.Tensor(mul_214, mul_215);  mul_214 = mul_215 = None
    unsqueeze_120: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_92, -1)
    unsqueeze_121: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_120, -1);  unsqueeze_120 = None
    mul_216: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_210, unsqueeze_121);  mul_210 = unsqueeze_121 = None
    unsqueeze_122: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_93, -1);  primals_93 = None
    unsqueeze_123: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_122, -1);  unsqueeze_122 = None
    add_164: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_216, unsqueeze_123);  mul_216 = unsqueeze_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_165: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_164, relu_27);  add_164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_29: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_165);  add_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_31: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_29, primals_94, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_166: "i64[]" = torch.ops.aten.add.Tensor(primals_1077, 1)
    var_mean_31 = torch.ops.aten.var_mean.correction(convolution_31, [0, 2, 3], correction = 0, keepdim = True)
    getitem_62: "f32[1, 36, 1, 1]" = var_mean_31[0]
    getitem_63: "f32[1, 36, 1, 1]" = var_mean_31[1];  var_mean_31 = None
    add_167: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_62, 1e-05)
    rsqrt_31: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_167);  add_167 = None
    sub_31: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_31, getitem_63)
    mul_217: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_31, rsqrt_31);  sub_31 = None
    squeeze_93: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_63, [0, 2, 3]);  getitem_63 = None
    squeeze_94: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_31, [0, 2, 3]);  rsqrt_31 = None
    mul_218: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_93, 0.1)
    mul_219: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1075, 0.9)
    add_168: "f32[36]" = torch.ops.aten.add.Tensor(mul_218, mul_219);  mul_218 = mul_219 = None
    squeeze_95: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_62, [0, 2, 3]);  getitem_62 = None
    mul_220: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_95, 1.0001594642002871);  squeeze_95 = None
    mul_221: "f32[36]" = torch.ops.aten.mul.Tensor(mul_220, 0.1);  mul_220 = None
    mul_222: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1076, 0.9)
    add_169: "f32[36]" = torch.ops.aten.add.Tensor(mul_221, mul_222);  mul_221 = mul_222 = None
    unsqueeze_124: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_95, -1)
    unsqueeze_125: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_124, -1);  unsqueeze_124 = None
    mul_223: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_217, unsqueeze_125);  mul_217 = unsqueeze_125 = None
    unsqueeze_126: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_96, -1);  primals_96 = None
    unsqueeze_127: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_126, -1);  unsqueeze_126 = None
    add_170: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_223, unsqueeze_127);  mul_223 = unsqueeze_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_30: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_170);  add_170 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_32: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_30, primals_97, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_171: "i64[]" = torch.ops.aten.add.Tensor(primals_1080, 1)
    var_mean_32 = torch.ops.aten.var_mean.correction(convolution_32, [0, 2, 3], correction = 0, keepdim = True)
    getitem_64: "f32[1, 36, 1, 1]" = var_mean_32[0]
    getitem_65: "f32[1, 36, 1, 1]" = var_mean_32[1];  var_mean_32 = None
    add_172: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_64, 1e-05)
    rsqrt_32: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_172);  add_172 = None
    sub_32: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_32, getitem_65)
    mul_224: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_32, rsqrt_32);  sub_32 = None
    squeeze_96: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_65, [0, 2, 3]);  getitem_65 = None
    squeeze_97: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_32, [0, 2, 3]);  rsqrt_32 = None
    mul_225: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_96, 0.1)
    mul_226: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1078, 0.9)
    add_173: "f32[36]" = torch.ops.aten.add.Tensor(mul_225, mul_226);  mul_225 = mul_226 = None
    squeeze_98: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_64, [0, 2, 3]);  getitem_64 = None
    mul_227: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_98, 1.0001594642002871);  squeeze_98 = None
    mul_228: "f32[36]" = torch.ops.aten.mul.Tensor(mul_227, 0.1);  mul_227 = None
    mul_229: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1079, 0.9)
    add_174: "f32[36]" = torch.ops.aten.add.Tensor(mul_228, mul_229);  mul_228 = mul_229 = None
    unsqueeze_128: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_98, -1)
    unsqueeze_129: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_128, -1);  unsqueeze_128 = None
    mul_230: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_224, unsqueeze_129);  mul_224 = unsqueeze_129 = None
    unsqueeze_130: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_99, -1);  primals_99 = None
    unsqueeze_131: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_130, -1);  unsqueeze_130 = None
    add_175: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_230, unsqueeze_131);  mul_230 = unsqueeze_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_176: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_175, relu_29);  add_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_31: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_176);  add_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_33: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_31, primals_100, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_177: "i64[]" = torch.ops.aten.add.Tensor(primals_1083, 1)
    var_mean_33 = torch.ops.aten.var_mean.correction(convolution_33, [0, 2, 3], correction = 0, keepdim = True)
    getitem_66: "f32[1, 18, 1, 1]" = var_mean_33[0]
    getitem_67: "f32[1, 18, 1, 1]" = var_mean_33[1];  var_mean_33 = None
    add_178: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_66, 1e-05)
    rsqrt_33: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_178);  add_178 = None
    sub_33: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_33, getitem_67)
    mul_231: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_33, rsqrt_33);  sub_33 = None
    squeeze_99: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_67, [0, 2, 3]);  getitem_67 = None
    squeeze_100: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_33, [0, 2, 3]);  rsqrt_33 = None
    mul_232: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_99, 0.1)
    mul_233: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1081, 0.9)
    add_179: "f32[18]" = torch.ops.aten.add.Tensor(mul_232, mul_233);  mul_232 = mul_233 = None
    squeeze_101: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_66, [0, 2, 3]);  getitem_66 = None
    mul_234: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_101, 1.0001594642002871);  squeeze_101 = None
    mul_235: "f32[18]" = torch.ops.aten.mul.Tensor(mul_234, 0.1);  mul_234 = None
    mul_236: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1082, 0.9)
    add_180: "f32[18]" = torch.ops.aten.add.Tensor(mul_235, mul_236);  mul_235 = mul_236 = None
    unsqueeze_132: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_101, -1)
    unsqueeze_133: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_132, -1);  unsqueeze_132 = None
    mul_237: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_231, unsqueeze_133);  mul_231 = unsqueeze_133 = None
    unsqueeze_134: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_102, -1);  primals_102 = None
    unsqueeze_135: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_134, -1);  unsqueeze_134 = None
    add_181: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_237, unsqueeze_135);  mul_237 = unsqueeze_135 = None
    iota: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type: "f32[56]" = torch.ops.prims.convert_element_type.default(iota, torch.float32);  iota = None
    mul_238: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type, 1);  convert_element_type = None
    add_182: "f32[56]" = torch.ops.aten.add.Tensor(mul_238, 0);  mul_238 = None
    add_183: "f32[56]" = torch.ops.aten.add.Tensor(add_182, 0.0);  add_182 = None
    mul_239: "f32[56]" = torch.ops.aten.mul.Tensor(add_183, 0.5);  add_183 = None
    convert_element_type_1: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_239, torch.int64);  mul_239 = None
    unsqueeze_136: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_1, -1);  convert_element_type_1 = None
    iota_1: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_2: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_1, torch.float32);  iota_1 = None
    mul_240: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_2, 1);  convert_element_type_2 = None
    add_184: "f32[56]" = torch.ops.aten.add.Tensor(mul_240, 0);  mul_240 = None
    add_185: "f32[56]" = torch.ops.aten.add.Tensor(add_184, 0.0);  add_184 = None
    mul_241: "f32[56]" = torch.ops.aten.mul.Tensor(add_185, 0.5);  add_185 = None
    convert_element_type_3: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_241, torch.int64);  mul_241 = None
    _unsafe_index: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_181, [None, None, unsqueeze_136, convert_element_type_3]);  add_181 = None
    add_186: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_23, _unsafe_index);  _unsafe_index = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_32: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_186);  add_186 = None
    alias_32: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_32)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_34: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_23, primals_103, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_187: "i64[]" = torch.ops.aten.add.Tensor(primals_1086, 1)
    var_mean_34 = torch.ops.aten.var_mean.correction(convolution_34, [0, 2, 3], correction = 0, keepdim = True)
    getitem_68: "f32[1, 36, 1, 1]" = var_mean_34[0]
    getitem_69: "f32[1, 36, 1, 1]" = var_mean_34[1];  var_mean_34 = None
    add_188: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_68, 1e-05)
    rsqrt_34: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_188);  add_188 = None
    sub_34: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_34, getitem_69)
    mul_242: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_34, rsqrt_34);  sub_34 = None
    squeeze_102: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_69, [0, 2, 3]);  getitem_69 = None
    squeeze_103: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_34, [0, 2, 3]);  rsqrt_34 = None
    mul_243: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_102, 0.1)
    mul_244: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1084, 0.9)
    add_189: "f32[36]" = torch.ops.aten.add.Tensor(mul_243, mul_244);  mul_243 = mul_244 = None
    squeeze_104: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_68, [0, 2, 3]);  getitem_68 = None
    mul_245: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_104, 1.0001594642002871);  squeeze_104 = None
    mul_246: "f32[36]" = torch.ops.aten.mul.Tensor(mul_245, 0.1);  mul_245 = None
    mul_247: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1085, 0.9)
    add_190: "f32[36]" = torch.ops.aten.add.Tensor(mul_246, mul_247);  mul_246 = mul_247 = None
    unsqueeze_137: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_104, -1)
    unsqueeze_138: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_137, -1);  unsqueeze_137 = None
    mul_248: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_242, unsqueeze_138);  mul_242 = unsqueeze_138 = None
    unsqueeze_139: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_105, -1);  primals_105 = None
    unsqueeze_140: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_139, -1);  unsqueeze_139 = None
    add_191: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_248, unsqueeze_140);  mul_248 = unsqueeze_140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_192: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_191, relu_31);  add_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_33: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_192);  add_192 = None
    alias_33: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_33)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:753, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition2)]
    convolution_35: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_33, primals_106, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_193: "i64[]" = torch.ops.aten.add.Tensor(primals_1089, 1)
    var_mean_35 = torch.ops.aten.var_mean.correction(convolution_35, [0, 2, 3], correction = 0, keepdim = True)
    getitem_70: "f32[1, 72, 1, 1]" = var_mean_35[0]
    getitem_71: "f32[1, 72, 1, 1]" = var_mean_35[1];  var_mean_35 = None
    add_194: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_70, 1e-05)
    rsqrt_35: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_194);  add_194 = None
    sub_35: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_35, getitem_71)
    mul_249: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_35, rsqrt_35);  sub_35 = None
    squeeze_105: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_71, [0, 2, 3]);  getitem_71 = None
    squeeze_106: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_35, [0, 2, 3]);  rsqrt_35 = None
    mul_250: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_105, 0.1)
    mul_251: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1087, 0.9)
    add_195: "f32[72]" = torch.ops.aten.add.Tensor(mul_250, mul_251);  mul_250 = mul_251 = None
    squeeze_107: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_70, [0, 2, 3]);  getitem_70 = None
    mul_252: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_107, 1.0006381620931717);  squeeze_107 = None
    mul_253: "f32[72]" = torch.ops.aten.mul.Tensor(mul_252, 0.1);  mul_252 = None
    mul_254: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1088, 0.9)
    add_196: "f32[72]" = torch.ops.aten.add.Tensor(mul_253, mul_254);  mul_253 = mul_254 = None
    unsqueeze_141: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_107, -1)
    unsqueeze_142: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_141, -1);  unsqueeze_141 = None
    mul_255: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_249, unsqueeze_142);  mul_249 = unsqueeze_142 = None
    unsqueeze_143: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_108, -1);  primals_108 = None
    unsqueeze_144: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_143, -1);  unsqueeze_143 = None
    add_197: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_255, unsqueeze_144);  mul_255 = unsqueeze_144 = None
    relu_34: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_197);  add_197 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_36: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_32, primals_109, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_198: "i64[]" = torch.ops.aten.add.Tensor(primals_1092, 1)
    var_mean_36 = torch.ops.aten.var_mean.correction(convolution_36, [0, 2, 3], correction = 0, keepdim = True)
    getitem_72: "f32[1, 18, 1, 1]" = var_mean_36[0]
    getitem_73: "f32[1, 18, 1, 1]" = var_mean_36[1];  var_mean_36 = None
    add_199: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_72, 1e-05)
    rsqrt_36: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_199);  add_199 = None
    sub_36: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_36, getitem_73)
    mul_256: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_36, rsqrt_36);  sub_36 = None
    squeeze_108: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_73, [0, 2, 3]);  getitem_73 = None
    squeeze_109: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_36, [0, 2, 3]);  rsqrt_36 = None
    mul_257: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_108, 0.1)
    mul_258: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1090, 0.9)
    add_200: "f32[18]" = torch.ops.aten.add.Tensor(mul_257, mul_258);  mul_257 = mul_258 = None
    squeeze_110: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_72, [0, 2, 3]);  getitem_72 = None
    mul_259: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_110, 1.0000398612827361);  squeeze_110 = None
    mul_260: "f32[18]" = torch.ops.aten.mul.Tensor(mul_259, 0.1);  mul_259 = None
    mul_261: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1091, 0.9)
    add_201: "f32[18]" = torch.ops.aten.add.Tensor(mul_260, mul_261);  mul_260 = mul_261 = None
    unsqueeze_145: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_110, -1)
    unsqueeze_146: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_145, -1);  unsqueeze_145 = None
    mul_262: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_256, unsqueeze_146);  mul_256 = unsqueeze_146 = None
    unsqueeze_147: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_111, -1);  primals_111 = None
    unsqueeze_148: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_147, -1);  unsqueeze_147 = None
    add_202: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_262, unsqueeze_148);  mul_262 = unsqueeze_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_35: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_202);  add_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_37: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_35, primals_112, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_203: "i64[]" = torch.ops.aten.add.Tensor(primals_1095, 1)
    var_mean_37 = torch.ops.aten.var_mean.correction(convolution_37, [0, 2, 3], correction = 0, keepdim = True)
    getitem_74: "f32[1, 18, 1, 1]" = var_mean_37[0]
    getitem_75: "f32[1, 18, 1, 1]" = var_mean_37[1];  var_mean_37 = None
    add_204: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_74, 1e-05)
    rsqrt_37: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_204);  add_204 = None
    sub_37: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_37, getitem_75)
    mul_263: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_37, rsqrt_37);  sub_37 = None
    squeeze_111: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_75, [0, 2, 3]);  getitem_75 = None
    squeeze_112: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_37, [0, 2, 3]);  rsqrt_37 = None
    mul_264: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_111, 0.1)
    mul_265: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1093, 0.9)
    add_205: "f32[18]" = torch.ops.aten.add.Tensor(mul_264, mul_265);  mul_264 = mul_265 = None
    squeeze_113: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_74, [0, 2, 3]);  getitem_74 = None
    mul_266: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_113, 1.0000398612827361);  squeeze_113 = None
    mul_267: "f32[18]" = torch.ops.aten.mul.Tensor(mul_266, 0.1);  mul_266 = None
    mul_268: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1094, 0.9)
    add_206: "f32[18]" = torch.ops.aten.add.Tensor(mul_267, mul_268);  mul_267 = mul_268 = None
    unsqueeze_149: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_113, -1)
    unsqueeze_150: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_149, -1);  unsqueeze_149 = None
    mul_269: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_263, unsqueeze_150);  mul_263 = unsqueeze_150 = None
    unsqueeze_151: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_114, -1);  primals_114 = None
    unsqueeze_152: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_151, -1);  unsqueeze_151 = None
    add_207: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_269, unsqueeze_152);  mul_269 = unsqueeze_152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_208: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_207, relu_32);  add_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_36: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_208);  add_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_38: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_36, primals_115, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_209: "i64[]" = torch.ops.aten.add.Tensor(primals_1098, 1)
    var_mean_38 = torch.ops.aten.var_mean.correction(convolution_38, [0, 2, 3], correction = 0, keepdim = True)
    getitem_76: "f32[1, 18, 1, 1]" = var_mean_38[0]
    getitem_77: "f32[1, 18, 1, 1]" = var_mean_38[1];  var_mean_38 = None
    add_210: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_76, 1e-05)
    rsqrt_38: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_210);  add_210 = None
    sub_38: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_38, getitem_77)
    mul_270: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_38, rsqrt_38);  sub_38 = None
    squeeze_114: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_77, [0, 2, 3]);  getitem_77 = None
    squeeze_115: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_38, [0, 2, 3]);  rsqrt_38 = None
    mul_271: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_114, 0.1)
    mul_272: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1096, 0.9)
    add_211: "f32[18]" = torch.ops.aten.add.Tensor(mul_271, mul_272);  mul_271 = mul_272 = None
    squeeze_116: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_76, [0, 2, 3]);  getitem_76 = None
    mul_273: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_116, 1.0000398612827361);  squeeze_116 = None
    mul_274: "f32[18]" = torch.ops.aten.mul.Tensor(mul_273, 0.1);  mul_273 = None
    mul_275: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1097, 0.9)
    add_212: "f32[18]" = torch.ops.aten.add.Tensor(mul_274, mul_275);  mul_274 = mul_275 = None
    unsqueeze_153: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_116, -1)
    unsqueeze_154: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_153, -1);  unsqueeze_153 = None
    mul_276: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_270, unsqueeze_154);  mul_270 = unsqueeze_154 = None
    unsqueeze_155: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_117, -1);  primals_117 = None
    unsqueeze_156: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_155, -1);  unsqueeze_155 = None
    add_213: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_276, unsqueeze_156);  mul_276 = unsqueeze_156 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_37: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_213);  add_213 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_39: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_37, primals_118, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_214: "i64[]" = torch.ops.aten.add.Tensor(primals_1101, 1)
    var_mean_39 = torch.ops.aten.var_mean.correction(convolution_39, [0, 2, 3], correction = 0, keepdim = True)
    getitem_78: "f32[1, 18, 1, 1]" = var_mean_39[0]
    getitem_79: "f32[1, 18, 1, 1]" = var_mean_39[1];  var_mean_39 = None
    add_215: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_78, 1e-05)
    rsqrt_39: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_215);  add_215 = None
    sub_39: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_39, getitem_79)
    mul_277: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_39, rsqrt_39);  sub_39 = None
    squeeze_117: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_79, [0, 2, 3]);  getitem_79 = None
    squeeze_118: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_39, [0, 2, 3]);  rsqrt_39 = None
    mul_278: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_117, 0.1)
    mul_279: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1099, 0.9)
    add_216: "f32[18]" = torch.ops.aten.add.Tensor(mul_278, mul_279);  mul_278 = mul_279 = None
    squeeze_119: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_78, [0, 2, 3]);  getitem_78 = None
    mul_280: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_119, 1.0000398612827361);  squeeze_119 = None
    mul_281: "f32[18]" = torch.ops.aten.mul.Tensor(mul_280, 0.1);  mul_280 = None
    mul_282: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1100, 0.9)
    add_217: "f32[18]" = torch.ops.aten.add.Tensor(mul_281, mul_282);  mul_281 = mul_282 = None
    unsqueeze_157: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_119, -1)
    unsqueeze_158: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_157, -1);  unsqueeze_157 = None
    mul_283: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_277, unsqueeze_158);  mul_277 = unsqueeze_158 = None
    unsqueeze_159: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_120, -1);  primals_120 = None
    unsqueeze_160: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_159, -1);  unsqueeze_159 = None
    add_218: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_283, unsqueeze_160);  mul_283 = unsqueeze_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_219: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_218, relu_36);  add_218 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_38: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_219);  add_219 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_40: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_38, primals_121, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_220: "i64[]" = torch.ops.aten.add.Tensor(primals_1104, 1)
    var_mean_40 = torch.ops.aten.var_mean.correction(convolution_40, [0, 2, 3], correction = 0, keepdim = True)
    getitem_80: "f32[1, 18, 1, 1]" = var_mean_40[0]
    getitem_81: "f32[1, 18, 1, 1]" = var_mean_40[1];  var_mean_40 = None
    add_221: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_80, 1e-05)
    rsqrt_40: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_221);  add_221 = None
    sub_40: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_40, getitem_81)
    mul_284: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_40, rsqrt_40);  sub_40 = None
    squeeze_120: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_81, [0, 2, 3]);  getitem_81 = None
    squeeze_121: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_40, [0, 2, 3]);  rsqrt_40 = None
    mul_285: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_120, 0.1)
    mul_286: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1102, 0.9)
    add_222: "f32[18]" = torch.ops.aten.add.Tensor(mul_285, mul_286);  mul_285 = mul_286 = None
    squeeze_122: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_80, [0, 2, 3]);  getitem_80 = None
    mul_287: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_122, 1.0000398612827361);  squeeze_122 = None
    mul_288: "f32[18]" = torch.ops.aten.mul.Tensor(mul_287, 0.1);  mul_287 = None
    mul_289: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1103, 0.9)
    add_223: "f32[18]" = torch.ops.aten.add.Tensor(mul_288, mul_289);  mul_288 = mul_289 = None
    unsqueeze_161: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_122, -1)
    unsqueeze_162: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_161, -1);  unsqueeze_161 = None
    mul_290: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_284, unsqueeze_162);  mul_284 = unsqueeze_162 = None
    unsqueeze_163: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_123, -1);  primals_123 = None
    unsqueeze_164: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_163, -1);  unsqueeze_163 = None
    add_224: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_290, unsqueeze_164);  mul_290 = unsqueeze_164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_39: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_224);  add_224 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_41: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_39, primals_124, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_225: "i64[]" = torch.ops.aten.add.Tensor(primals_1107, 1)
    var_mean_41 = torch.ops.aten.var_mean.correction(convolution_41, [0, 2, 3], correction = 0, keepdim = True)
    getitem_82: "f32[1, 18, 1, 1]" = var_mean_41[0]
    getitem_83: "f32[1, 18, 1, 1]" = var_mean_41[1];  var_mean_41 = None
    add_226: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_82, 1e-05)
    rsqrt_41: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_226);  add_226 = None
    sub_41: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_41, getitem_83)
    mul_291: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_41, rsqrt_41);  sub_41 = None
    squeeze_123: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_83, [0, 2, 3]);  getitem_83 = None
    squeeze_124: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_41, [0, 2, 3]);  rsqrt_41 = None
    mul_292: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_123, 0.1)
    mul_293: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1105, 0.9)
    add_227: "f32[18]" = torch.ops.aten.add.Tensor(mul_292, mul_293);  mul_292 = mul_293 = None
    squeeze_125: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_82, [0, 2, 3]);  getitem_82 = None
    mul_294: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_125, 1.0000398612827361);  squeeze_125 = None
    mul_295: "f32[18]" = torch.ops.aten.mul.Tensor(mul_294, 0.1);  mul_294 = None
    mul_296: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1106, 0.9)
    add_228: "f32[18]" = torch.ops.aten.add.Tensor(mul_295, mul_296);  mul_295 = mul_296 = None
    unsqueeze_165: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_125, -1)
    unsqueeze_166: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_165, -1);  unsqueeze_165 = None
    mul_297: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_291, unsqueeze_166);  mul_291 = unsqueeze_166 = None
    unsqueeze_167: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_126, -1);  primals_126 = None
    unsqueeze_168: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_167, -1);  unsqueeze_167 = None
    add_229: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_297, unsqueeze_168);  mul_297 = unsqueeze_168 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_230: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_229, relu_38);  add_229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_40: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_230);  add_230 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_42: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_40, primals_127, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_231: "i64[]" = torch.ops.aten.add.Tensor(primals_1110, 1)
    var_mean_42 = torch.ops.aten.var_mean.correction(convolution_42, [0, 2, 3], correction = 0, keepdim = True)
    getitem_84: "f32[1, 18, 1, 1]" = var_mean_42[0]
    getitem_85: "f32[1, 18, 1, 1]" = var_mean_42[1];  var_mean_42 = None
    add_232: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_84, 1e-05)
    rsqrt_42: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_232);  add_232 = None
    sub_42: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_42, getitem_85)
    mul_298: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_42, rsqrt_42);  sub_42 = None
    squeeze_126: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_85, [0, 2, 3]);  getitem_85 = None
    squeeze_127: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_42, [0, 2, 3]);  rsqrt_42 = None
    mul_299: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_126, 0.1)
    mul_300: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1108, 0.9)
    add_233: "f32[18]" = torch.ops.aten.add.Tensor(mul_299, mul_300);  mul_299 = mul_300 = None
    squeeze_128: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_84, [0, 2, 3]);  getitem_84 = None
    mul_301: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_128, 1.0000398612827361);  squeeze_128 = None
    mul_302: "f32[18]" = torch.ops.aten.mul.Tensor(mul_301, 0.1);  mul_301 = None
    mul_303: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1109, 0.9)
    add_234: "f32[18]" = torch.ops.aten.add.Tensor(mul_302, mul_303);  mul_302 = mul_303 = None
    unsqueeze_169: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_128, -1)
    unsqueeze_170: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_169, -1);  unsqueeze_169 = None
    mul_304: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_298, unsqueeze_170);  mul_298 = unsqueeze_170 = None
    unsqueeze_171: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_129, -1);  primals_129 = None
    unsqueeze_172: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_171, -1);  unsqueeze_171 = None
    add_235: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_304, unsqueeze_172);  mul_304 = unsqueeze_172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_41: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_235);  add_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_43: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_41, primals_130, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_236: "i64[]" = torch.ops.aten.add.Tensor(primals_1113, 1)
    var_mean_43 = torch.ops.aten.var_mean.correction(convolution_43, [0, 2, 3], correction = 0, keepdim = True)
    getitem_86: "f32[1, 18, 1, 1]" = var_mean_43[0]
    getitem_87: "f32[1, 18, 1, 1]" = var_mean_43[1];  var_mean_43 = None
    add_237: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_86, 1e-05)
    rsqrt_43: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_237);  add_237 = None
    sub_43: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_43, getitem_87)
    mul_305: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_43, rsqrt_43);  sub_43 = None
    squeeze_129: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_87, [0, 2, 3]);  getitem_87 = None
    squeeze_130: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_43, [0, 2, 3]);  rsqrt_43 = None
    mul_306: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_129, 0.1)
    mul_307: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1111, 0.9)
    add_238: "f32[18]" = torch.ops.aten.add.Tensor(mul_306, mul_307);  mul_306 = mul_307 = None
    squeeze_131: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_86, [0, 2, 3]);  getitem_86 = None
    mul_308: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_131, 1.0000398612827361);  squeeze_131 = None
    mul_309: "f32[18]" = torch.ops.aten.mul.Tensor(mul_308, 0.1);  mul_308 = None
    mul_310: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1112, 0.9)
    add_239: "f32[18]" = torch.ops.aten.add.Tensor(mul_309, mul_310);  mul_309 = mul_310 = None
    unsqueeze_173: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_131, -1)
    unsqueeze_174: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_173, -1);  unsqueeze_173 = None
    mul_311: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_305, unsqueeze_174);  mul_305 = unsqueeze_174 = None
    unsqueeze_175: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_132, -1);  primals_132 = None
    unsqueeze_176: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_175, -1);  unsqueeze_175 = None
    add_240: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_311, unsqueeze_176);  mul_311 = unsqueeze_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_241: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_240, relu_40);  add_240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_42: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_241);  add_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_44: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_33, primals_133, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_242: "i64[]" = torch.ops.aten.add.Tensor(primals_1116, 1)
    var_mean_44 = torch.ops.aten.var_mean.correction(convolution_44, [0, 2, 3], correction = 0, keepdim = True)
    getitem_88: "f32[1, 36, 1, 1]" = var_mean_44[0]
    getitem_89: "f32[1, 36, 1, 1]" = var_mean_44[1];  var_mean_44 = None
    add_243: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_88, 1e-05)
    rsqrt_44: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_243);  add_243 = None
    sub_44: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_44, getitem_89)
    mul_312: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_44, rsqrt_44);  sub_44 = None
    squeeze_132: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_89, [0, 2, 3]);  getitem_89 = None
    squeeze_133: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_44, [0, 2, 3]);  rsqrt_44 = None
    mul_313: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_132, 0.1)
    mul_314: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1114, 0.9)
    add_244: "f32[36]" = torch.ops.aten.add.Tensor(mul_313, mul_314);  mul_313 = mul_314 = None
    squeeze_134: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_88, [0, 2, 3]);  getitem_88 = None
    mul_315: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_134, 1.0001594642002871);  squeeze_134 = None
    mul_316: "f32[36]" = torch.ops.aten.mul.Tensor(mul_315, 0.1);  mul_315 = None
    mul_317: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1115, 0.9)
    add_245: "f32[36]" = torch.ops.aten.add.Tensor(mul_316, mul_317);  mul_316 = mul_317 = None
    unsqueeze_177: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_134, -1)
    unsqueeze_178: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_177, -1);  unsqueeze_177 = None
    mul_318: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_312, unsqueeze_178);  mul_312 = unsqueeze_178 = None
    unsqueeze_179: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_135, -1);  primals_135 = None
    unsqueeze_180: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_179, -1);  unsqueeze_179 = None
    add_246: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_318, unsqueeze_180);  mul_318 = unsqueeze_180 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_43: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_246);  add_246 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_45: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_43, primals_136, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_247: "i64[]" = torch.ops.aten.add.Tensor(primals_1119, 1)
    var_mean_45 = torch.ops.aten.var_mean.correction(convolution_45, [0, 2, 3], correction = 0, keepdim = True)
    getitem_90: "f32[1, 36, 1, 1]" = var_mean_45[0]
    getitem_91: "f32[1, 36, 1, 1]" = var_mean_45[1];  var_mean_45 = None
    add_248: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_90, 1e-05)
    rsqrt_45: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_248);  add_248 = None
    sub_45: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_45, getitem_91)
    mul_319: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_45, rsqrt_45);  sub_45 = None
    squeeze_135: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_91, [0, 2, 3]);  getitem_91 = None
    squeeze_136: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_45, [0, 2, 3]);  rsqrt_45 = None
    mul_320: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_135, 0.1)
    mul_321: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1117, 0.9)
    add_249: "f32[36]" = torch.ops.aten.add.Tensor(mul_320, mul_321);  mul_320 = mul_321 = None
    squeeze_137: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_90, [0, 2, 3]);  getitem_90 = None
    mul_322: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_137, 1.0001594642002871);  squeeze_137 = None
    mul_323: "f32[36]" = torch.ops.aten.mul.Tensor(mul_322, 0.1);  mul_322 = None
    mul_324: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1118, 0.9)
    add_250: "f32[36]" = torch.ops.aten.add.Tensor(mul_323, mul_324);  mul_323 = mul_324 = None
    unsqueeze_181: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_137, -1)
    unsqueeze_182: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_181, -1);  unsqueeze_181 = None
    mul_325: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_319, unsqueeze_182);  mul_319 = unsqueeze_182 = None
    unsqueeze_183: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_138, -1);  primals_138 = None
    unsqueeze_184: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_183, -1);  unsqueeze_183 = None
    add_251: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_325, unsqueeze_184);  mul_325 = unsqueeze_184 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_252: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_251, relu_33);  add_251 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_44: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_252);  add_252 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_46: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_44, primals_139, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_253: "i64[]" = torch.ops.aten.add.Tensor(primals_1122, 1)
    var_mean_46 = torch.ops.aten.var_mean.correction(convolution_46, [0, 2, 3], correction = 0, keepdim = True)
    getitem_92: "f32[1, 36, 1, 1]" = var_mean_46[0]
    getitem_93: "f32[1, 36, 1, 1]" = var_mean_46[1];  var_mean_46 = None
    add_254: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_92, 1e-05)
    rsqrt_46: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_254);  add_254 = None
    sub_46: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_46, getitem_93)
    mul_326: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_46, rsqrt_46);  sub_46 = None
    squeeze_138: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_93, [0, 2, 3]);  getitem_93 = None
    squeeze_139: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_46, [0, 2, 3]);  rsqrt_46 = None
    mul_327: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_138, 0.1)
    mul_328: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1120, 0.9)
    add_255: "f32[36]" = torch.ops.aten.add.Tensor(mul_327, mul_328);  mul_327 = mul_328 = None
    squeeze_140: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_92, [0, 2, 3]);  getitem_92 = None
    mul_329: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_140, 1.0001594642002871);  squeeze_140 = None
    mul_330: "f32[36]" = torch.ops.aten.mul.Tensor(mul_329, 0.1);  mul_329 = None
    mul_331: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1121, 0.9)
    add_256: "f32[36]" = torch.ops.aten.add.Tensor(mul_330, mul_331);  mul_330 = mul_331 = None
    unsqueeze_185: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_140, -1)
    unsqueeze_186: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_185, -1);  unsqueeze_185 = None
    mul_332: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_326, unsqueeze_186);  mul_326 = unsqueeze_186 = None
    unsqueeze_187: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_141, -1);  primals_141 = None
    unsqueeze_188: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_187, -1);  unsqueeze_187 = None
    add_257: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_332, unsqueeze_188);  mul_332 = unsqueeze_188 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_45: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_257);  add_257 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_47: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_45, primals_142, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_258: "i64[]" = torch.ops.aten.add.Tensor(primals_1125, 1)
    var_mean_47 = torch.ops.aten.var_mean.correction(convolution_47, [0, 2, 3], correction = 0, keepdim = True)
    getitem_94: "f32[1, 36, 1, 1]" = var_mean_47[0]
    getitem_95: "f32[1, 36, 1, 1]" = var_mean_47[1];  var_mean_47 = None
    add_259: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_94, 1e-05)
    rsqrt_47: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_259);  add_259 = None
    sub_47: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_47, getitem_95)
    mul_333: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_47, rsqrt_47);  sub_47 = None
    squeeze_141: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_95, [0, 2, 3]);  getitem_95 = None
    squeeze_142: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_47, [0, 2, 3]);  rsqrt_47 = None
    mul_334: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_141, 0.1)
    mul_335: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1123, 0.9)
    add_260: "f32[36]" = torch.ops.aten.add.Tensor(mul_334, mul_335);  mul_334 = mul_335 = None
    squeeze_143: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_94, [0, 2, 3]);  getitem_94 = None
    mul_336: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_143, 1.0001594642002871);  squeeze_143 = None
    mul_337: "f32[36]" = torch.ops.aten.mul.Tensor(mul_336, 0.1);  mul_336 = None
    mul_338: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1124, 0.9)
    add_261: "f32[36]" = torch.ops.aten.add.Tensor(mul_337, mul_338);  mul_337 = mul_338 = None
    unsqueeze_189: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_143, -1)
    unsqueeze_190: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_189, -1);  unsqueeze_189 = None
    mul_339: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_333, unsqueeze_190);  mul_333 = unsqueeze_190 = None
    unsqueeze_191: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_144, -1);  primals_144 = None
    unsqueeze_192: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_191, -1);  unsqueeze_191 = None
    add_262: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_339, unsqueeze_192);  mul_339 = unsqueeze_192 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_263: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_262, relu_44);  add_262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_46: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_263);  add_263 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_48: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_46, primals_145, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_264: "i64[]" = torch.ops.aten.add.Tensor(primals_1128, 1)
    var_mean_48 = torch.ops.aten.var_mean.correction(convolution_48, [0, 2, 3], correction = 0, keepdim = True)
    getitem_96: "f32[1, 36, 1, 1]" = var_mean_48[0]
    getitem_97: "f32[1, 36, 1, 1]" = var_mean_48[1];  var_mean_48 = None
    add_265: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_96, 1e-05)
    rsqrt_48: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_265);  add_265 = None
    sub_48: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_48, getitem_97)
    mul_340: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_48, rsqrt_48);  sub_48 = None
    squeeze_144: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_97, [0, 2, 3]);  getitem_97 = None
    squeeze_145: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_48, [0, 2, 3]);  rsqrt_48 = None
    mul_341: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_144, 0.1)
    mul_342: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1126, 0.9)
    add_266: "f32[36]" = torch.ops.aten.add.Tensor(mul_341, mul_342);  mul_341 = mul_342 = None
    squeeze_146: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_96, [0, 2, 3]);  getitem_96 = None
    mul_343: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_146, 1.0001594642002871);  squeeze_146 = None
    mul_344: "f32[36]" = torch.ops.aten.mul.Tensor(mul_343, 0.1);  mul_343 = None
    mul_345: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1127, 0.9)
    add_267: "f32[36]" = torch.ops.aten.add.Tensor(mul_344, mul_345);  mul_344 = mul_345 = None
    unsqueeze_193: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_146, -1)
    unsqueeze_194: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_193, -1);  unsqueeze_193 = None
    mul_346: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_340, unsqueeze_194);  mul_340 = unsqueeze_194 = None
    unsqueeze_195: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_147, -1);  primals_147 = None
    unsqueeze_196: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_195, -1);  unsqueeze_195 = None
    add_268: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_346, unsqueeze_196);  mul_346 = unsqueeze_196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_47: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_268);  add_268 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_49: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_47, primals_148, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_269: "i64[]" = torch.ops.aten.add.Tensor(primals_1131, 1)
    var_mean_49 = torch.ops.aten.var_mean.correction(convolution_49, [0, 2, 3], correction = 0, keepdim = True)
    getitem_98: "f32[1, 36, 1, 1]" = var_mean_49[0]
    getitem_99: "f32[1, 36, 1, 1]" = var_mean_49[1];  var_mean_49 = None
    add_270: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_98, 1e-05)
    rsqrt_49: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_270);  add_270 = None
    sub_49: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_49, getitem_99)
    mul_347: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_49, rsqrt_49);  sub_49 = None
    squeeze_147: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_99, [0, 2, 3]);  getitem_99 = None
    squeeze_148: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_49, [0, 2, 3]);  rsqrt_49 = None
    mul_348: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_147, 0.1)
    mul_349: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1129, 0.9)
    add_271: "f32[36]" = torch.ops.aten.add.Tensor(mul_348, mul_349);  mul_348 = mul_349 = None
    squeeze_149: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_98, [0, 2, 3]);  getitem_98 = None
    mul_350: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_149, 1.0001594642002871);  squeeze_149 = None
    mul_351: "f32[36]" = torch.ops.aten.mul.Tensor(mul_350, 0.1);  mul_350 = None
    mul_352: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1130, 0.9)
    add_272: "f32[36]" = torch.ops.aten.add.Tensor(mul_351, mul_352);  mul_351 = mul_352 = None
    unsqueeze_197: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_149, -1)
    unsqueeze_198: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_197, -1);  unsqueeze_197 = None
    mul_353: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_347, unsqueeze_198);  mul_347 = unsqueeze_198 = None
    unsqueeze_199: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_150, -1);  primals_150 = None
    unsqueeze_200: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_199, -1);  unsqueeze_199 = None
    add_273: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_353, unsqueeze_200);  mul_353 = unsqueeze_200 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_274: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_273, relu_46);  add_273 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_48: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_274);  add_274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_50: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_48, primals_151, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_275: "i64[]" = torch.ops.aten.add.Tensor(primals_1134, 1)
    var_mean_50 = torch.ops.aten.var_mean.correction(convolution_50, [0, 2, 3], correction = 0, keepdim = True)
    getitem_100: "f32[1, 36, 1, 1]" = var_mean_50[0]
    getitem_101: "f32[1, 36, 1, 1]" = var_mean_50[1];  var_mean_50 = None
    add_276: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_100, 1e-05)
    rsqrt_50: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_276);  add_276 = None
    sub_50: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_50, getitem_101)
    mul_354: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_50, rsqrt_50);  sub_50 = None
    squeeze_150: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_101, [0, 2, 3]);  getitem_101 = None
    squeeze_151: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_50, [0, 2, 3]);  rsqrt_50 = None
    mul_355: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_150, 0.1)
    mul_356: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1132, 0.9)
    add_277: "f32[36]" = torch.ops.aten.add.Tensor(mul_355, mul_356);  mul_355 = mul_356 = None
    squeeze_152: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_100, [0, 2, 3]);  getitem_100 = None
    mul_357: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_152, 1.0001594642002871);  squeeze_152 = None
    mul_358: "f32[36]" = torch.ops.aten.mul.Tensor(mul_357, 0.1);  mul_357 = None
    mul_359: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1133, 0.9)
    add_278: "f32[36]" = torch.ops.aten.add.Tensor(mul_358, mul_359);  mul_358 = mul_359 = None
    unsqueeze_201: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_152, -1)
    unsqueeze_202: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_201, -1);  unsqueeze_201 = None
    mul_360: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_354, unsqueeze_202);  mul_354 = unsqueeze_202 = None
    unsqueeze_203: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_153, -1);  primals_153 = None
    unsqueeze_204: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_203, -1);  unsqueeze_203 = None
    add_279: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_360, unsqueeze_204);  mul_360 = unsqueeze_204 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_49: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_279);  add_279 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_51: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_49, primals_154, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_280: "i64[]" = torch.ops.aten.add.Tensor(primals_1137, 1)
    var_mean_51 = torch.ops.aten.var_mean.correction(convolution_51, [0, 2, 3], correction = 0, keepdim = True)
    getitem_102: "f32[1, 36, 1, 1]" = var_mean_51[0]
    getitem_103: "f32[1, 36, 1, 1]" = var_mean_51[1];  var_mean_51 = None
    add_281: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_102, 1e-05)
    rsqrt_51: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_281);  add_281 = None
    sub_51: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_51, getitem_103)
    mul_361: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_51, rsqrt_51);  sub_51 = None
    squeeze_153: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_103, [0, 2, 3]);  getitem_103 = None
    squeeze_154: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_51, [0, 2, 3]);  rsqrt_51 = None
    mul_362: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_153, 0.1)
    mul_363: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1135, 0.9)
    add_282: "f32[36]" = torch.ops.aten.add.Tensor(mul_362, mul_363);  mul_362 = mul_363 = None
    squeeze_155: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_102, [0, 2, 3]);  getitem_102 = None
    mul_364: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_155, 1.0001594642002871);  squeeze_155 = None
    mul_365: "f32[36]" = torch.ops.aten.mul.Tensor(mul_364, 0.1);  mul_364 = None
    mul_366: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1136, 0.9)
    add_283: "f32[36]" = torch.ops.aten.add.Tensor(mul_365, mul_366);  mul_365 = mul_366 = None
    unsqueeze_205: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_155, -1)
    unsqueeze_206: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_205, -1);  unsqueeze_205 = None
    mul_367: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_361, unsqueeze_206);  mul_361 = unsqueeze_206 = None
    unsqueeze_207: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_156, -1);  primals_156 = None
    unsqueeze_208: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_207, -1);  unsqueeze_207 = None
    add_284: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_367, unsqueeze_208);  mul_367 = unsqueeze_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_285: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_284, relu_48);  add_284 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_50: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_285);  add_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_52: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_34, primals_157, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_286: "i64[]" = torch.ops.aten.add.Tensor(primals_1140, 1)
    var_mean_52 = torch.ops.aten.var_mean.correction(convolution_52, [0, 2, 3], correction = 0, keepdim = True)
    getitem_104: "f32[1, 72, 1, 1]" = var_mean_52[0]
    getitem_105: "f32[1, 72, 1, 1]" = var_mean_52[1];  var_mean_52 = None
    add_287: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_104, 1e-05)
    rsqrt_52: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_287);  add_287 = None
    sub_52: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_52, getitem_105)
    mul_368: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_52, rsqrt_52);  sub_52 = None
    squeeze_156: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_105, [0, 2, 3]);  getitem_105 = None
    squeeze_157: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_52, [0, 2, 3]);  rsqrt_52 = None
    mul_369: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_156, 0.1)
    mul_370: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1138, 0.9)
    add_288: "f32[72]" = torch.ops.aten.add.Tensor(mul_369, mul_370);  mul_369 = mul_370 = None
    squeeze_158: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_104, [0, 2, 3]);  getitem_104 = None
    mul_371: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_158, 1.0006381620931717);  squeeze_158 = None
    mul_372: "f32[72]" = torch.ops.aten.mul.Tensor(mul_371, 0.1);  mul_371 = None
    mul_373: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1139, 0.9)
    add_289: "f32[72]" = torch.ops.aten.add.Tensor(mul_372, mul_373);  mul_372 = mul_373 = None
    unsqueeze_209: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_158, -1)
    unsqueeze_210: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_209, -1);  unsqueeze_209 = None
    mul_374: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_368, unsqueeze_210);  mul_368 = unsqueeze_210 = None
    unsqueeze_211: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_159, -1);  primals_159 = None
    unsqueeze_212: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_211, -1);  unsqueeze_211 = None
    add_290: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_374, unsqueeze_212);  mul_374 = unsqueeze_212 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_51: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_290);  add_290 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_53: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_51, primals_160, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_291: "i64[]" = torch.ops.aten.add.Tensor(primals_1143, 1)
    var_mean_53 = torch.ops.aten.var_mean.correction(convolution_53, [0, 2, 3], correction = 0, keepdim = True)
    getitem_106: "f32[1, 72, 1, 1]" = var_mean_53[0]
    getitem_107: "f32[1, 72, 1, 1]" = var_mean_53[1];  var_mean_53 = None
    add_292: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_106, 1e-05)
    rsqrt_53: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_292);  add_292 = None
    sub_53: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_53, getitem_107)
    mul_375: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_53, rsqrt_53);  sub_53 = None
    squeeze_159: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_107, [0, 2, 3]);  getitem_107 = None
    squeeze_160: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_53, [0, 2, 3]);  rsqrt_53 = None
    mul_376: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_159, 0.1)
    mul_377: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1141, 0.9)
    add_293: "f32[72]" = torch.ops.aten.add.Tensor(mul_376, mul_377);  mul_376 = mul_377 = None
    squeeze_161: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_106, [0, 2, 3]);  getitem_106 = None
    mul_378: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_161, 1.0006381620931717);  squeeze_161 = None
    mul_379: "f32[72]" = torch.ops.aten.mul.Tensor(mul_378, 0.1);  mul_378 = None
    mul_380: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1142, 0.9)
    add_294: "f32[72]" = torch.ops.aten.add.Tensor(mul_379, mul_380);  mul_379 = mul_380 = None
    unsqueeze_213: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_161, -1)
    unsqueeze_214: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_213, -1);  unsqueeze_213 = None
    mul_381: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_375, unsqueeze_214);  mul_375 = unsqueeze_214 = None
    unsqueeze_215: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_162, -1);  primals_162 = None
    unsqueeze_216: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_215, -1);  unsqueeze_215 = None
    add_295: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_381, unsqueeze_216);  mul_381 = unsqueeze_216 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_296: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_295, relu_34);  add_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_52: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_296);  add_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_54: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_52, primals_163, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_297: "i64[]" = torch.ops.aten.add.Tensor(primals_1146, 1)
    var_mean_54 = torch.ops.aten.var_mean.correction(convolution_54, [0, 2, 3], correction = 0, keepdim = True)
    getitem_108: "f32[1, 72, 1, 1]" = var_mean_54[0]
    getitem_109: "f32[1, 72, 1, 1]" = var_mean_54[1];  var_mean_54 = None
    add_298: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_108, 1e-05)
    rsqrt_54: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_298);  add_298 = None
    sub_54: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_54, getitem_109)
    mul_382: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_54, rsqrt_54);  sub_54 = None
    squeeze_162: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_109, [0, 2, 3]);  getitem_109 = None
    squeeze_163: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_54, [0, 2, 3]);  rsqrt_54 = None
    mul_383: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_162, 0.1)
    mul_384: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1144, 0.9)
    add_299: "f32[72]" = torch.ops.aten.add.Tensor(mul_383, mul_384);  mul_383 = mul_384 = None
    squeeze_164: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_108, [0, 2, 3]);  getitem_108 = None
    mul_385: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_164, 1.0006381620931717);  squeeze_164 = None
    mul_386: "f32[72]" = torch.ops.aten.mul.Tensor(mul_385, 0.1);  mul_385 = None
    mul_387: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1145, 0.9)
    add_300: "f32[72]" = torch.ops.aten.add.Tensor(mul_386, mul_387);  mul_386 = mul_387 = None
    unsqueeze_217: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_164, -1)
    unsqueeze_218: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_217, -1);  unsqueeze_217 = None
    mul_388: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_382, unsqueeze_218);  mul_382 = unsqueeze_218 = None
    unsqueeze_219: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_165, -1);  primals_165 = None
    unsqueeze_220: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_219, -1);  unsqueeze_219 = None
    add_301: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_388, unsqueeze_220);  mul_388 = unsqueeze_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_53: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_301);  add_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_55: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_53, primals_166, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_302: "i64[]" = torch.ops.aten.add.Tensor(primals_1149, 1)
    var_mean_55 = torch.ops.aten.var_mean.correction(convolution_55, [0, 2, 3], correction = 0, keepdim = True)
    getitem_110: "f32[1, 72, 1, 1]" = var_mean_55[0]
    getitem_111: "f32[1, 72, 1, 1]" = var_mean_55[1];  var_mean_55 = None
    add_303: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_110, 1e-05)
    rsqrt_55: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_303);  add_303 = None
    sub_55: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_55, getitem_111)
    mul_389: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_55, rsqrt_55);  sub_55 = None
    squeeze_165: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_111, [0, 2, 3]);  getitem_111 = None
    squeeze_166: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_55, [0, 2, 3]);  rsqrt_55 = None
    mul_390: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_165, 0.1)
    mul_391: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1147, 0.9)
    add_304: "f32[72]" = torch.ops.aten.add.Tensor(mul_390, mul_391);  mul_390 = mul_391 = None
    squeeze_167: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_110, [0, 2, 3]);  getitem_110 = None
    mul_392: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_167, 1.0006381620931717);  squeeze_167 = None
    mul_393: "f32[72]" = torch.ops.aten.mul.Tensor(mul_392, 0.1);  mul_392 = None
    mul_394: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1148, 0.9)
    add_305: "f32[72]" = torch.ops.aten.add.Tensor(mul_393, mul_394);  mul_393 = mul_394 = None
    unsqueeze_221: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_167, -1)
    unsqueeze_222: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_221, -1);  unsqueeze_221 = None
    mul_395: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_389, unsqueeze_222);  mul_389 = unsqueeze_222 = None
    unsqueeze_223: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_168, -1);  primals_168 = None
    unsqueeze_224: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_223, -1);  unsqueeze_223 = None
    add_306: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_395, unsqueeze_224);  mul_395 = unsqueeze_224 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_307: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_306, relu_52);  add_306 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_54: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_307);  add_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_56: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_54, primals_169, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_308: "i64[]" = torch.ops.aten.add.Tensor(primals_1152, 1)
    var_mean_56 = torch.ops.aten.var_mean.correction(convolution_56, [0, 2, 3], correction = 0, keepdim = True)
    getitem_112: "f32[1, 72, 1, 1]" = var_mean_56[0]
    getitem_113: "f32[1, 72, 1, 1]" = var_mean_56[1];  var_mean_56 = None
    add_309: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_112, 1e-05)
    rsqrt_56: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_309);  add_309 = None
    sub_56: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_56, getitem_113)
    mul_396: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_56, rsqrt_56);  sub_56 = None
    squeeze_168: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_113, [0, 2, 3]);  getitem_113 = None
    squeeze_169: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_56, [0, 2, 3]);  rsqrt_56 = None
    mul_397: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_168, 0.1)
    mul_398: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1150, 0.9)
    add_310: "f32[72]" = torch.ops.aten.add.Tensor(mul_397, mul_398);  mul_397 = mul_398 = None
    squeeze_170: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_112, [0, 2, 3]);  getitem_112 = None
    mul_399: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_170, 1.0006381620931717);  squeeze_170 = None
    mul_400: "f32[72]" = torch.ops.aten.mul.Tensor(mul_399, 0.1);  mul_399 = None
    mul_401: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1151, 0.9)
    add_311: "f32[72]" = torch.ops.aten.add.Tensor(mul_400, mul_401);  mul_400 = mul_401 = None
    unsqueeze_225: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_170, -1)
    unsqueeze_226: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_225, -1);  unsqueeze_225 = None
    mul_402: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_396, unsqueeze_226);  mul_396 = unsqueeze_226 = None
    unsqueeze_227: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_171, -1);  primals_171 = None
    unsqueeze_228: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_227, -1);  unsqueeze_227 = None
    add_312: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_402, unsqueeze_228);  mul_402 = unsqueeze_228 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_55: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_312);  add_312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_57: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_55, primals_172, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_313: "i64[]" = torch.ops.aten.add.Tensor(primals_1155, 1)
    var_mean_57 = torch.ops.aten.var_mean.correction(convolution_57, [0, 2, 3], correction = 0, keepdim = True)
    getitem_114: "f32[1, 72, 1, 1]" = var_mean_57[0]
    getitem_115: "f32[1, 72, 1, 1]" = var_mean_57[1];  var_mean_57 = None
    add_314: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_114, 1e-05)
    rsqrt_57: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_314);  add_314 = None
    sub_57: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_57, getitem_115)
    mul_403: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_57, rsqrt_57);  sub_57 = None
    squeeze_171: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_115, [0, 2, 3]);  getitem_115 = None
    squeeze_172: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_57, [0, 2, 3]);  rsqrt_57 = None
    mul_404: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_171, 0.1)
    mul_405: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1153, 0.9)
    add_315: "f32[72]" = torch.ops.aten.add.Tensor(mul_404, mul_405);  mul_404 = mul_405 = None
    squeeze_173: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_114, [0, 2, 3]);  getitem_114 = None
    mul_406: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_173, 1.0006381620931717);  squeeze_173 = None
    mul_407: "f32[72]" = torch.ops.aten.mul.Tensor(mul_406, 0.1);  mul_406 = None
    mul_408: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1154, 0.9)
    add_316: "f32[72]" = torch.ops.aten.add.Tensor(mul_407, mul_408);  mul_407 = mul_408 = None
    unsqueeze_229: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_173, -1)
    unsqueeze_230: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_229, -1);  unsqueeze_229 = None
    mul_409: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_403, unsqueeze_230);  mul_403 = unsqueeze_230 = None
    unsqueeze_231: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_174, -1);  primals_174 = None
    unsqueeze_232: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_231, -1);  unsqueeze_231 = None
    add_317: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_409, unsqueeze_232);  mul_409 = unsqueeze_232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_318: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_317, relu_54);  add_317 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_56: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_318);  add_318 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_58: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_56, primals_175, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_319: "i64[]" = torch.ops.aten.add.Tensor(primals_1158, 1)
    var_mean_58 = torch.ops.aten.var_mean.correction(convolution_58, [0, 2, 3], correction = 0, keepdim = True)
    getitem_116: "f32[1, 72, 1, 1]" = var_mean_58[0]
    getitem_117: "f32[1, 72, 1, 1]" = var_mean_58[1];  var_mean_58 = None
    add_320: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_116, 1e-05)
    rsqrt_58: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_320);  add_320 = None
    sub_58: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_58, getitem_117)
    mul_410: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_58, rsqrt_58);  sub_58 = None
    squeeze_174: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_117, [0, 2, 3]);  getitem_117 = None
    squeeze_175: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_58, [0, 2, 3]);  rsqrt_58 = None
    mul_411: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_174, 0.1)
    mul_412: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1156, 0.9)
    add_321: "f32[72]" = torch.ops.aten.add.Tensor(mul_411, mul_412);  mul_411 = mul_412 = None
    squeeze_176: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_116, [0, 2, 3]);  getitem_116 = None
    mul_413: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_176, 1.0006381620931717);  squeeze_176 = None
    mul_414: "f32[72]" = torch.ops.aten.mul.Tensor(mul_413, 0.1);  mul_413 = None
    mul_415: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1157, 0.9)
    add_322: "f32[72]" = torch.ops.aten.add.Tensor(mul_414, mul_415);  mul_414 = mul_415 = None
    unsqueeze_233: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_176, -1)
    unsqueeze_234: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_233, -1);  unsqueeze_233 = None
    mul_416: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_410, unsqueeze_234);  mul_410 = unsqueeze_234 = None
    unsqueeze_235: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_177, -1);  primals_177 = None
    unsqueeze_236: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_235, -1);  unsqueeze_235 = None
    add_323: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_416, unsqueeze_236);  mul_416 = unsqueeze_236 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_57: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_323);  add_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_59: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_57, primals_178, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_324: "i64[]" = torch.ops.aten.add.Tensor(primals_1161, 1)
    var_mean_59 = torch.ops.aten.var_mean.correction(convolution_59, [0, 2, 3], correction = 0, keepdim = True)
    getitem_118: "f32[1, 72, 1, 1]" = var_mean_59[0]
    getitem_119: "f32[1, 72, 1, 1]" = var_mean_59[1];  var_mean_59 = None
    add_325: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_118, 1e-05)
    rsqrt_59: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_325);  add_325 = None
    sub_59: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_59, getitem_119)
    mul_417: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_59, rsqrt_59);  sub_59 = None
    squeeze_177: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_119, [0, 2, 3]);  getitem_119 = None
    squeeze_178: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_59, [0, 2, 3]);  rsqrt_59 = None
    mul_418: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_177, 0.1)
    mul_419: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1159, 0.9)
    add_326: "f32[72]" = torch.ops.aten.add.Tensor(mul_418, mul_419);  mul_418 = mul_419 = None
    squeeze_179: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_118, [0, 2, 3]);  getitem_118 = None
    mul_420: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_179, 1.0006381620931717);  squeeze_179 = None
    mul_421: "f32[72]" = torch.ops.aten.mul.Tensor(mul_420, 0.1);  mul_420 = None
    mul_422: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1160, 0.9)
    add_327: "f32[72]" = torch.ops.aten.add.Tensor(mul_421, mul_422);  mul_421 = mul_422 = None
    unsqueeze_237: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_179, -1)
    unsqueeze_238: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_237, -1);  unsqueeze_237 = None
    mul_423: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_417, unsqueeze_238);  mul_417 = unsqueeze_238 = None
    unsqueeze_239: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_180, -1);  primals_180 = None
    unsqueeze_240: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_239, -1);  unsqueeze_239 = None
    add_328: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_423, unsqueeze_240);  mul_423 = unsqueeze_240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_329: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_328, relu_56);  add_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_58: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_329);  add_329 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_60: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_50, primals_181, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_330: "i64[]" = torch.ops.aten.add.Tensor(primals_1164, 1)
    var_mean_60 = torch.ops.aten.var_mean.correction(convolution_60, [0, 2, 3], correction = 0, keepdim = True)
    getitem_120: "f32[1, 18, 1, 1]" = var_mean_60[0]
    getitem_121: "f32[1, 18, 1, 1]" = var_mean_60[1];  var_mean_60 = None
    add_331: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_120, 1e-05)
    rsqrt_60: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_331);  add_331 = None
    sub_60: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_60, getitem_121)
    mul_424: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_60, rsqrt_60);  sub_60 = None
    squeeze_180: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_121, [0, 2, 3]);  getitem_121 = None
    squeeze_181: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_60, [0, 2, 3]);  rsqrt_60 = None
    mul_425: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_180, 0.1)
    mul_426: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1162, 0.9)
    add_332: "f32[18]" = torch.ops.aten.add.Tensor(mul_425, mul_426);  mul_425 = mul_426 = None
    squeeze_182: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_120, [0, 2, 3]);  getitem_120 = None
    mul_427: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_182, 1.0001594642002871);  squeeze_182 = None
    mul_428: "f32[18]" = torch.ops.aten.mul.Tensor(mul_427, 0.1);  mul_427 = None
    mul_429: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1163, 0.9)
    add_333: "f32[18]" = torch.ops.aten.add.Tensor(mul_428, mul_429);  mul_428 = mul_429 = None
    unsqueeze_241: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_182, -1)
    unsqueeze_242: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_241, -1);  unsqueeze_241 = None
    mul_430: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_424, unsqueeze_242);  mul_424 = unsqueeze_242 = None
    unsqueeze_243: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_183, -1);  primals_183 = None
    unsqueeze_244: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_243, -1);  unsqueeze_243 = None
    add_334: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_430, unsqueeze_244);  mul_430 = unsqueeze_244 = None
    iota_2: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_4: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_2, torch.float32);  iota_2 = None
    mul_431: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_4, 1);  convert_element_type_4 = None
    add_335: "f32[56]" = torch.ops.aten.add.Tensor(mul_431, 0);  mul_431 = None
    add_336: "f32[56]" = torch.ops.aten.add.Tensor(add_335, 0.0);  add_335 = None
    mul_432: "f32[56]" = torch.ops.aten.mul.Tensor(add_336, 0.5);  add_336 = None
    convert_element_type_5: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_432, torch.int64);  mul_432 = None
    unsqueeze_245: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_5, -1);  convert_element_type_5 = None
    iota_3: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_6: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_3, torch.float32);  iota_3 = None
    mul_433: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_6, 1);  convert_element_type_6 = None
    add_337: "f32[56]" = torch.ops.aten.add.Tensor(mul_433, 0);  mul_433 = None
    add_338: "f32[56]" = torch.ops.aten.add.Tensor(add_337, 0.0);  add_337 = None
    mul_434: "f32[56]" = torch.ops.aten.mul.Tensor(add_338, 0.5);  add_338 = None
    convert_element_type_7: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_434, torch.int64);  mul_434 = None
    _unsafe_index_1: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_334, [None, None, unsqueeze_245, convert_element_type_7]);  add_334 = None
    add_339: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_42, _unsafe_index_1);  _unsafe_index_1 = None
    convolution_61: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_58, primals_184, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_340: "i64[]" = torch.ops.aten.add.Tensor(primals_1167, 1)
    var_mean_61 = torch.ops.aten.var_mean.correction(convolution_61, [0, 2, 3], correction = 0, keepdim = True)
    getitem_122: "f32[1, 18, 1, 1]" = var_mean_61[0]
    getitem_123: "f32[1, 18, 1, 1]" = var_mean_61[1];  var_mean_61 = None
    add_341: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_122, 1e-05)
    rsqrt_61: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_341);  add_341 = None
    sub_61: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_61, getitem_123)
    mul_435: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_61, rsqrt_61);  sub_61 = None
    squeeze_183: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_123, [0, 2, 3]);  getitem_123 = None
    squeeze_184: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_61, [0, 2, 3]);  rsqrt_61 = None
    mul_436: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_183, 0.1)
    mul_437: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1165, 0.9)
    add_342: "f32[18]" = torch.ops.aten.add.Tensor(mul_436, mul_437);  mul_436 = mul_437 = None
    squeeze_185: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_122, [0, 2, 3]);  getitem_122 = None
    mul_438: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_185, 1.0006381620931717);  squeeze_185 = None
    mul_439: "f32[18]" = torch.ops.aten.mul.Tensor(mul_438, 0.1);  mul_438 = None
    mul_440: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1166, 0.9)
    add_343: "f32[18]" = torch.ops.aten.add.Tensor(mul_439, mul_440);  mul_439 = mul_440 = None
    unsqueeze_246: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_185, -1)
    unsqueeze_247: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_246, -1);  unsqueeze_246 = None
    mul_441: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_435, unsqueeze_247);  mul_435 = unsqueeze_247 = None
    unsqueeze_248: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_186, -1);  primals_186 = None
    unsqueeze_249: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_248, -1);  unsqueeze_248 = None
    add_344: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_441, unsqueeze_249);  mul_441 = unsqueeze_249 = None
    iota_4: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_8: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_4, torch.float32);  iota_4 = None
    mul_442: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_8, 1);  convert_element_type_8 = None
    add_345: "f32[56]" = torch.ops.aten.add.Tensor(mul_442, 0);  mul_442 = None
    add_346: "f32[56]" = torch.ops.aten.add.Tensor(add_345, 0.0);  add_345 = None
    mul_443: "f32[56]" = torch.ops.aten.mul.Tensor(add_346, 0.25);  add_346 = None
    convert_element_type_9: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_443, torch.int64);  mul_443 = None
    unsqueeze_250: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_9, -1);  convert_element_type_9 = None
    iota_5: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_10: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_5, torch.float32);  iota_5 = None
    mul_444: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_10, 1);  convert_element_type_10 = None
    add_347: "f32[56]" = torch.ops.aten.add.Tensor(mul_444, 0);  mul_444 = None
    add_348: "f32[56]" = torch.ops.aten.add.Tensor(add_347, 0.0);  add_347 = None
    mul_445: "f32[56]" = torch.ops.aten.mul.Tensor(add_348, 0.25);  add_348 = None
    convert_element_type_11: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_445, torch.int64);  mul_445 = None
    _unsafe_index_2: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_344, [None, None, unsqueeze_250, convert_element_type_11]);  add_344 = None
    add_349: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_339, _unsafe_index_2);  add_339 = _unsafe_index_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_59: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_349);  add_349 = None
    alias_59: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_59)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_62: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_42, primals_187, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_350: "i64[]" = torch.ops.aten.add.Tensor(primals_1170, 1)
    var_mean_62 = torch.ops.aten.var_mean.correction(convolution_62, [0, 2, 3], correction = 0, keepdim = True)
    getitem_124: "f32[1, 36, 1, 1]" = var_mean_62[0]
    getitem_125: "f32[1, 36, 1, 1]" = var_mean_62[1];  var_mean_62 = None
    add_351: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_124, 1e-05)
    rsqrt_62: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_351);  add_351 = None
    sub_62: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_62, getitem_125)
    mul_446: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_62, rsqrt_62);  sub_62 = None
    squeeze_186: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_125, [0, 2, 3]);  getitem_125 = None
    squeeze_187: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_62, [0, 2, 3]);  rsqrt_62 = None
    mul_447: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_186, 0.1)
    mul_448: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1168, 0.9)
    add_352: "f32[36]" = torch.ops.aten.add.Tensor(mul_447, mul_448);  mul_447 = mul_448 = None
    squeeze_188: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_124, [0, 2, 3]);  getitem_124 = None
    mul_449: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_188, 1.0001594642002871);  squeeze_188 = None
    mul_450: "f32[36]" = torch.ops.aten.mul.Tensor(mul_449, 0.1);  mul_449 = None
    mul_451: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1169, 0.9)
    add_353: "f32[36]" = torch.ops.aten.add.Tensor(mul_450, mul_451);  mul_450 = mul_451 = None
    unsqueeze_251: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_188, -1)
    unsqueeze_252: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_251, -1);  unsqueeze_251 = None
    mul_452: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_446, unsqueeze_252);  mul_446 = unsqueeze_252 = None
    unsqueeze_253: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_189, -1);  primals_189 = None
    unsqueeze_254: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_253, -1);  unsqueeze_253 = None
    add_354: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_452, unsqueeze_254);  mul_452 = unsqueeze_254 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_355: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_354, relu_50);  add_354 = None
    convolution_63: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_58, primals_190, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_356: "i64[]" = torch.ops.aten.add.Tensor(primals_1173, 1)
    var_mean_63 = torch.ops.aten.var_mean.correction(convolution_63, [0, 2, 3], correction = 0, keepdim = True)
    getitem_126: "f32[1, 36, 1, 1]" = var_mean_63[0]
    getitem_127: "f32[1, 36, 1, 1]" = var_mean_63[1];  var_mean_63 = None
    add_357: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_126, 1e-05)
    rsqrt_63: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_357);  add_357 = None
    sub_63: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_63, getitem_127)
    mul_453: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_63, rsqrt_63);  sub_63 = None
    squeeze_189: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_127, [0, 2, 3]);  getitem_127 = None
    squeeze_190: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_63, [0, 2, 3]);  rsqrt_63 = None
    mul_454: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_189, 0.1)
    mul_455: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1171, 0.9)
    add_358: "f32[36]" = torch.ops.aten.add.Tensor(mul_454, mul_455);  mul_454 = mul_455 = None
    squeeze_191: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_126, [0, 2, 3]);  getitem_126 = None
    mul_456: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_191, 1.0006381620931717);  squeeze_191 = None
    mul_457: "f32[36]" = torch.ops.aten.mul.Tensor(mul_456, 0.1);  mul_456 = None
    mul_458: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1172, 0.9)
    add_359: "f32[36]" = torch.ops.aten.add.Tensor(mul_457, mul_458);  mul_457 = mul_458 = None
    unsqueeze_255: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_191, -1)
    unsqueeze_256: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_255, -1);  unsqueeze_255 = None
    mul_459: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_453, unsqueeze_256);  mul_453 = unsqueeze_256 = None
    unsqueeze_257: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_192, -1);  primals_192 = None
    unsqueeze_258: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_257, -1);  unsqueeze_257 = None
    add_360: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_459, unsqueeze_258);  mul_459 = unsqueeze_258 = None
    iota_6: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_12: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_6, torch.float32);  iota_6 = None
    mul_460: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_12, 1);  convert_element_type_12 = None
    add_361: "f32[28]" = torch.ops.aten.add.Tensor(mul_460, 0);  mul_460 = None
    add_362: "f32[28]" = torch.ops.aten.add.Tensor(add_361, 0.0);  add_361 = None
    mul_461: "f32[28]" = torch.ops.aten.mul.Tensor(add_362, 0.5);  add_362 = None
    convert_element_type_13: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_461, torch.int64);  mul_461 = None
    unsqueeze_259: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_13, -1);  convert_element_type_13 = None
    iota_7: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_14: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_7, torch.float32);  iota_7 = None
    mul_462: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_14, 1);  convert_element_type_14 = None
    add_363: "f32[28]" = torch.ops.aten.add.Tensor(mul_462, 0);  mul_462 = None
    add_364: "f32[28]" = torch.ops.aten.add.Tensor(add_363, 0.0);  add_363 = None
    mul_463: "f32[28]" = torch.ops.aten.mul.Tensor(add_364, 0.5);  add_364 = None
    convert_element_type_15: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_463, torch.int64);  mul_463 = None
    _unsafe_index_3: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_360, [None, None, unsqueeze_259, convert_element_type_15]);  add_360 = None
    add_365: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_355, _unsafe_index_3);  add_355 = _unsafe_index_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_60: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_365);  add_365 = None
    alias_60: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_60)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_64: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_42, primals_193, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_366: "i64[]" = torch.ops.aten.add.Tensor(primals_1176, 1)
    var_mean_64 = torch.ops.aten.var_mean.correction(convolution_64, [0, 2, 3], correction = 0, keepdim = True)
    getitem_128: "f32[1, 18, 1, 1]" = var_mean_64[0]
    getitem_129: "f32[1, 18, 1, 1]" = var_mean_64[1];  var_mean_64 = None
    add_367: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_128, 1e-05)
    rsqrt_64: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_367);  add_367 = None
    sub_64: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_64, getitem_129)
    mul_464: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_64, rsqrt_64);  sub_64 = None
    squeeze_192: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_129, [0, 2, 3]);  getitem_129 = None
    squeeze_193: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_64, [0, 2, 3]);  rsqrt_64 = None
    mul_465: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_192, 0.1)
    mul_466: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1174, 0.9)
    add_368: "f32[18]" = torch.ops.aten.add.Tensor(mul_465, mul_466);  mul_465 = mul_466 = None
    squeeze_194: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_128, [0, 2, 3]);  getitem_128 = None
    mul_467: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_194, 1.0001594642002871);  squeeze_194 = None
    mul_468: "f32[18]" = torch.ops.aten.mul.Tensor(mul_467, 0.1);  mul_467 = None
    mul_469: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1175, 0.9)
    add_369: "f32[18]" = torch.ops.aten.add.Tensor(mul_468, mul_469);  mul_468 = mul_469 = None
    unsqueeze_260: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_194, -1)
    unsqueeze_261: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_260, -1);  unsqueeze_260 = None
    mul_470: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_464, unsqueeze_261);  mul_464 = unsqueeze_261 = None
    unsqueeze_262: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_195, -1);  primals_195 = None
    unsqueeze_263: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_262, -1);  unsqueeze_262 = None
    add_370: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_470, unsqueeze_263);  mul_470 = unsqueeze_263 = None
    relu_61: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_370);  add_370 = None
    alias_61: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_61)
    convolution_65: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_61, primals_196, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_371: "i64[]" = torch.ops.aten.add.Tensor(primals_1179, 1)
    var_mean_65 = torch.ops.aten.var_mean.correction(convolution_65, [0, 2, 3], correction = 0, keepdim = True)
    getitem_130: "f32[1, 72, 1, 1]" = var_mean_65[0]
    getitem_131: "f32[1, 72, 1, 1]" = var_mean_65[1];  var_mean_65 = None
    add_372: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_130, 1e-05)
    rsqrt_65: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_372);  add_372 = None
    sub_65: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_65, getitem_131)
    mul_471: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_65, rsqrt_65);  sub_65 = None
    squeeze_195: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_131, [0, 2, 3]);  getitem_131 = None
    squeeze_196: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_65, [0, 2, 3]);  rsqrt_65 = None
    mul_472: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_195, 0.1)
    mul_473: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1177, 0.9)
    add_373: "f32[72]" = torch.ops.aten.add.Tensor(mul_472, mul_473);  mul_472 = mul_473 = None
    squeeze_197: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_130, [0, 2, 3]);  getitem_130 = None
    mul_474: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_197, 1.0006381620931717);  squeeze_197 = None
    mul_475: "f32[72]" = torch.ops.aten.mul.Tensor(mul_474, 0.1);  mul_474 = None
    mul_476: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1178, 0.9)
    add_374: "f32[72]" = torch.ops.aten.add.Tensor(mul_475, mul_476);  mul_475 = mul_476 = None
    unsqueeze_264: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_197, -1)
    unsqueeze_265: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_264, -1);  unsqueeze_264 = None
    mul_477: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_471, unsqueeze_265);  mul_471 = unsqueeze_265 = None
    unsqueeze_266: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_198, -1);  primals_198 = None
    unsqueeze_267: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_266, -1);  unsqueeze_266 = None
    add_375: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_477, unsqueeze_267);  mul_477 = unsqueeze_267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_66: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_50, primals_199, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_376: "i64[]" = torch.ops.aten.add.Tensor(primals_1182, 1)
    var_mean_66 = torch.ops.aten.var_mean.correction(convolution_66, [0, 2, 3], correction = 0, keepdim = True)
    getitem_132: "f32[1, 72, 1, 1]" = var_mean_66[0]
    getitem_133: "f32[1, 72, 1, 1]" = var_mean_66[1];  var_mean_66 = None
    add_377: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_132, 1e-05)
    rsqrt_66: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_377);  add_377 = None
    sub_66: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_66, getitem_133)
    mul_478: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_66, rsqrt_66);  sub_66 = None
    squeeze_198: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_133, [0, 2, 3]);  getitem_133 = None
    squeeze_199: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_66, [0, 2, 3]);  rsqrt_66 = None
    mul_479: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_198, 0.1)
    mul_480: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1180, 0.9)
    add_378: "f32[72]" = torch.ops.aten.add.Tensor(mul_479, mul_480);  mul_479 = mul_480 = None
    squeeze_200: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_132, [0, 2, 3]);  getitem_132 = None
    mul_481: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_200, 1.0006381620931717);  squeeze_200 = None
    mul_482: "f32[72]" = torch.ops.aten.mul.Tensor(mul_481, 0.1);  mul_481 = None
    mul_483: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1181, 0.9)
    add_379: "f32[72]" = torch.ops.aten.add.Tensor(mul_482, mul_483);  mul_482 = mul_483 = None
    unsqueeze_268: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_200, -1)
    unsqueeze_269: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_268, -1);  unsqueeze_268 = None
    mul_484: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_478, unsqueeze_269);  mul_478 = unsqueeze_269 = None
    unsqueeze_270: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_201, -1);  primals_201 = None
    unsqueeze_271: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_270, -1);  unsqueeze_270 = None
    add_380: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_484, unsqueeze_271);  mul_484 = unsqueeze_271 = None
    add_381: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_375, add_380);  add_375 = add_380 = None
    add_382: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_381, relu_58);  add_381 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_62: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_382);  add_382 = None
    alias_62: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_62)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_67: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_59, primals_202, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_383: "i64[]" = torch.ops.aten.add.Tensor(primals_1185, 1)
    var_mean_67 = torch.ops.aten.var_mean.correction(convolution_67, [0, 2, 3], correction = 0, keepdim = True)
    getitem_134: "f32[1, 18, 1, 1]" = var_mean_67[0]
    getitem_135: "f32[1, 18, 1, 1]" = var_mean_67[1];  var_mean_67 = None
    add_384: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_134, 1e-05)
    rsqrt_67: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_384);  add_384 = None
    sub_67: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_67, getitem_135)
    mul_485: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_67, rsqrt_67);  sub_67 = None
    squeeze_201: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_135, [0, 2, 3]);  getitem_135 = None
    squeeze_202: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_67, [0, 2, 3]);  rsqrt_67 = None
    mul_486: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_201, 0.1)
    mul_487: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1183, 0.9)
    add_385: "f32[18]" = torch.ops.aten.add.Tensor(mul_486, mul_487);  mul_486 = mul_487 = None
    squeeze_203: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_134, [0, 2, 3]);  getitem_134 = None
    mul_488: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_203, 1.0000398612827361);  squeeze_203 = None
    mul_489: "f32[18]" = torch.ops.aten.mul.Tensor(mul_488, 0.1);  mul_488 = None
    mul_490: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1184, 0.9)
    add_386: "f32[18]" = torch.ops.aten.add.Tensor(mul_489, mul_490);  mul_489 = mul_490 = None
    unsqueeze_272: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_203, -1)
    unsqueeze_273: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_272, -1);  unsqueeze_272 = None
    mul_491: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_485, unsqueeze_273);  mul_485 = unsqueeze_273 = None
    unsqueeze_274: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_204, -1);  primals_204 = None
    unsqueeze_275: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_274, -1);  unsqueeze_274 = None
    add_387: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_491, unsqueeze_275);  mul_491 = unsqueeze_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_63: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_387);  add_387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_68: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_63, primals_205, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_388: "i64[]" = torch.ops.aten.add.Tensor(primals_1188, 1)
    var_mean_68 = torch.ops.aten.var_mean.correction(convolution_68, [0, 2, 3], correction = 0, keepdim = True)
    getitem_136: "f32[1, 18, 1, 1]" = var_mean_68[0]
    getitem_137: "f32[1, 18, 1, 1]" = var_mean_68[1];  var_mean_68 = None
    add_389: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_136, 1e-05)
    rsqrt_68: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_389);  add_389 = None
    sub_68: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_68, getitem_137)
    mul_492: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_68, rsqrt_68);  sub_68 = None
    squeeze_204: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_137, [0, 2, 3]);  getitem_137 = None
    squeeze_205: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_68, [0, 2, 3]);  rsqrt_68 = None
    mul_493: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_204, 0.1)
    mul_494: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1186, 0.9)
    add_390: "f32[18]" = torch.ops.aten.add.Tensor(mul_493, mul_494);  mul_493 = mul_494 = None
    squeeze_206: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_136, [0, 2, 3]);  getitem_136 = None
    mul_495: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_206, 1.0000398612827361);  squeeze_206 = None
    mul_496: "f32[18]" = torch.ops.aten.mul.Tensor(mul_495, 0.1);  mul_495 = None
    mul_497: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1187, 0.9)
    add_391: "f32[18]" = torch.ops.aten.add.Tensor(mul_496, mul_497);  mul_496 = mul_497 = None
    unsqueeze_276: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_206, -1)
    unsqueeze_277: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_276, -1);  unsqueeze_276 = None
    mul_498: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_492, unsqueeze_277);  mul_492 = unsqueeze_277 = None
    unsqueeze_278: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_207, -1);  primals_207 = None
    unsqueeze_279: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_278, -1);  unsqueeze_278 = None
    add_392: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_498, unsqueeze_279);  mul_498 = unsqueeze_279 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_393: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_392, relu_59);  add_392 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_64: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_393);  add_393 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_69: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_64, primals_208, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_394: "i64[]" = torch.ops.aten.add.Tensor(primals_1191, 1)
    var_mean_69 = torch.ops.aten.var_mean.correction(convolution_69, [0, 2, 3], correction = 0, keepdim = True)
    getitem_138: "f32[1, 18, 1, 1]" = var_mean_69[0]
    getitem_139: "f32[1, 18, 1, 1]" = var_mean_69[1];  var_mean_69 = None
    add_395: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_138, 1e-05)
    rsqrt_69: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_395);  add_395 = None
    sub_69: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_69, getitem_139)
    mul_499: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_69, rsqrt_69);  sub_69 = None
    squeeze_207: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_139, [0, 2, 3]);  getitem_139 = None
    squeeze_208: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_69, [0, 2, 3]);  rsqrt_69 = None
    mul_500: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_207, 0.1)
    mul_501: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1189, 0.9)
    add_396: "f32[18]" = torch.ops.aten.add.Tensor(mul_500, mul_501);  mul_500 = mul_501 = None
    squeeze_209: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_138, [0, 2, 3]);  getitem_138 = None
    mul_502: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_209, 1.0000398612827361);  squeeze_209 = None
    mul_503: "f32[18]" = torch.ops.aten.mul.Tensor(mul_502, 0.1);  mul_502 = None
    mul_504: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1190, 0.9)
    add_397: "f32[18]" = torch.ops.aten.add.Tensor(mul_503, mul_504);  mul_503 = mul_504 = None
    unsqueeze_280: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_209, -1)
    unsqueeze_281: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_280, -1);  unsqueeze_280 = None
    mul_505: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_499, unsqueeze_281);  mul_499 = unsqueeze_281 = None
    unsqueeze_282: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_210, -1);  primals_210 = None
    unsqueeze_283: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_282, -1);  unsqueeze_282 = None
    add_398: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_505, unsqueeze_283);  mul_505 = unsqueeze_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_65: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_398);  add_398 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_70: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_65, primals_211, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_399: "i64[]" = torch.ops.aten.add.Tensor(primals_1194, 1)
    var_mean_70 = torch.ops.aten.var_mean.correction(convolution_70, [0, 2, 3], correction = 0, keepdim = True)
    getitem_140: "f32[1, 18, 1, 1]" = var_mean_70[0]
    getitem_141: "f32[1, 18, 1, 1]" = var_mean_70[1];  var_mean_70 = None
    add_400: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_140, 1e-05)
    rsqrt_70: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_400);  add_400 = None
    sub_70: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_70, getitem_141)
    mul_506: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_70, rsqrt_70);  sub_70 = None
    squeeze_210: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_141, [0, 2, 3]);  getitem_141 = None
    squeeze_211: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_70, [0, 2, 3]);  rsqrt_70 = None
    mul_507: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_210, 0.1)
    mul_508: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1192, 0.9)
    add_401: "f32[18]" = torch.ops.aten.add.Tensor(mul_507, mul_508);  mul_507 = mul_508 = None
    squeeze_212: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_140, [0, 2, 3]);  getitem_140 = None
    mul_509: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_212, 1.0000398612827361);  squeeze_212 = None
    mul_510: "f32[18]" = torch.ops.aten.mul.Tensor(mul_509, 0.1);  mul_509 = None
    mul_511: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1193, 0.9)
    add_402: "f32[18]" = torch.ops.aten.add.Tensor(mul_510, mul_511);  mul_510 = mul_511 = None
    unsqueeze_284: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_212, -1)
    unsqueeze_285: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_284, -1);  unsqueeze_284 = None
    mul_512: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_506, unsqueeze_285);  mul_506 = unsqueeze_285 = None
    unsqueeze_286: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_213, -1);  primals_213 = None
    unsqueeze_287: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_286, -1);  unsqueeze_286 = None
    add_403: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_512, unsqueeze_287);  mul_512 = unsqueeze_287 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_404: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_403, relu_64);  add_403 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_66: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_404);  add_404 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_71: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_66, primals_214, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_405: "i64[]" = torch.ops.aten.add.Tensor(primals_1197, 1)
    var_mean_71 = torch.ops.aten.var_mean.correction(convolution_71, [0, 2, 3], correction = 0, keepdim = True)
    getitem_142: "f32[1, 18, 1, 1]" = var_mean_71[0]
    getitem_143: "f32[1, 18, 1, 1]" = var_mean_71[1];  var_mean_71 = None
    add_406: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_142, 1e-05)
    rsqrt_71: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_406);  add_406 = None
    sub_71: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_71, getitem_143)
    mul_513: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_71, rsqrt_71);  sub_71 = None
    squeeze_213: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_143, [0, 2, 3]);  getitem_143 = None
    squeeze_214: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_71, [0, 2, 3]);  rsqrt_71 = None
    mul_514: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_213, 0.1)
    mul_515: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1195, 0.9)
    add_407: "f32[18]" = torch.ops.aten.add.Tensor(mul_514, mul_515);  mul_514 = mul_515 = None
    squeeze_215: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_142, [0, 2, 3]);  getitem_142 = None
    mul_516: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_215, 1.0000398612827361);  squeeze_215 = None
    mul_517: "f32[18]" = torch.ops.aten.mul.Tensor(mul_516, 0.1);  mul_516 = None
    mul_518: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1196, 0.9)
    add_408: "f32[18]" = torch.ops.aten.add.Tensor(mul_517, mul_518);  mul_517 = mul_518 = None
    unsqueeze_288: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_215, -1)
    unsqueeze_289: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_288, -1);  unsqueeze_288 = None
    mul_519: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_513, unsqueeze_289);  mul_513 = unsqueeze_289 = None
    unsqueeze_290: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_216, -1);  primals_216 = None
    unsqueeze_291: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_290, -1);  unsqueeze_290 = None
    add_409: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_519, unsqueeze_291);  mul_519 = unsqueeze_291 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_67: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_409);  add_409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_72: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_67, primals_217, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_410: "i64[]" = torch.ops.aten.add.Tensor(primals_1200, 1)
    var_mean_72 = torch.ops.aten.var_mean.correction(convolution_72, [0, 2, 3], correction = 0, keepdim = True)
    getitem_144: "f32[1, 18, 1, 1]" = var_mean_72[0]
    getitem_145: "f32[1, 18, 1, 1]" = var_mean_72[1];  var_mean_72 = None
    add_411: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_144, 1e-05)
    rsqrt_72: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_411);  add_411 = None
    sub_72: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_72, getitem_145)
    mul_520: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_72, rsqrt_72);  sub_72 = None
    squeeze_216: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_145, [0, 2, 3]);  getitem_145 = None
    squeeze_217: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_72, [0, 2, 3]);  rsqrt_72 = None
    mul_521: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_216, 0.1)
    mul_522: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1198, 0.9)
    add_412: "f32[18]" = torch.ops.aten.add.Tensor(mul_521, mul_522);  mul_521 = mul_522 = None
    squeeze_218: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_144, [0, 2, 3]);  getitem_144 = None
    mul_523: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_218, 1.0000398612827361);  squeeze_218 = None
    mul_524: "f32[18]" = torch.ops.aten.mul.Tensor(mul_523, 0.1);  mul_523 = None
    mul_525: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1199, 0.9)
    add_413: "f32[18]" = torch.ops.aten.add.Tensor(mul_524, mul_525);  mul_524 = mul_525 = None
    unsqueeze_292: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_218, -1)
    unsqueeze_293: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_292, -1);  unsqueeze_292 = None
    mul_526: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_520, unsqueeze_293);  mul_520 = unsqueeze_293 = None
    unsqueeze_294: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_219, -1);  primals_219 = None
    unsqueeze_295: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_294, -1);  unsqueeze_294 = None
    add_414: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_526, unsqueeze_295);  mul_526 = unsqueeze_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_415: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_414, relu_66);  add_414 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_68: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_415);  add_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_73: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_68, primals_220, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_416: "i64[]" = torch.ops.aten.add.Tensor(primals_1203, 1)
    var_mean_73 = torch.ops.aten.var_mean.correction(convolution_73, [0, 2, 3], correction = 0, keepdim = True)
    getitem_146: "f32[1, 18, 1, 1]" = var_mean_73[0]
    getitem_147: "f32[1, 18, 1, 1]" = var_mean_73[1];  var_mean_73 = None
    add_417: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_146, 1e-05)
    rsqrt_73: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_417);  add_417 = None
    sub_73: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_73, getitem_147)
    mul_527: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_73, rsqrt_73);  sub_73 = None
    squeeze_219: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_147, [0, 2, 3]);  getitem_147 = None
    squeeze_220: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_73, [0, 2, 3]);  rsqrt_73 = None
    mul_528: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_219, 0.1)
    mul_529: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1201, 0.9)
    add_418: "f32[18]" = torch.ops.aten.add.Tensor(mul_528, mul_529);  mul_528 = mul_529 = None
    squeeze_221: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_146, [0, 2, 3]);  getitem_146 = None
    mul_530: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_221, 1.0000398612827361);  squeeze_221 = None
    mul_531: "f32[18]" = torch.ops.aten.mul.Tensor(mul_530, 0.1);  mul_530 = None
    mul_532: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1202, 0.9)
    add_419: "f32[18]" = torch.ops.aten.add.Tensor(mul_531, mul_532);  mul_531 = mul_532 = None
    unsqueeze_296: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_221, -1)
    unsqueeze_297: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_296, -1);  unsqueeze_296 = None
    mul_533: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_527, unsqueeze_297);  mul_527 = unsqueeze_297 = None
    unsqueeze_298: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_222, -1);  primals_222 = None
    unsqueeze_299: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_298, -1);  unsqueeze_298 = None
    add_420: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_533, unsqueeze_299);  mul_533 = unsqueeze_299 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_69: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_420);  add_420 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_74: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_69, primals_223, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_421: "i64[]" = torch.ops.aten.add.Tensor(primals_1206, 1)
    var_mean_74 = torch.ops.aten.var_mean.correction(convolution_74, [0, 2, 3], correction = 0, keepdim = True)
    getitem_148: "f32[1, 18, 1, 1]" = var_mean_74[0]
    getitem_149: "f32[1, 18, 1, 1]" = var_mean_74[1];  var_mean_74 = None
    add_422: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_148, 1e-05)
    rsqrt_74: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_422);  add_422 = None
    sub_74: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_74, getitem_149)
    mul_534: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_74, rsqrt_74);  sub_74 = None
    squeeze_222: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_149, [0, 2, 3]);  getitem_149 = None
    squeeze_223: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_74, [0, 2, 3]);  rsqrt_74 = None
    mul_535: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_222, 0.1)
    mul_536: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1204, 0.9)
    add_423: "f32[18]" = torch.ops.aten.add.Tensor(mul_535, mul_536);  mul_535 = mul_536 = None
    squeeze_224: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_148, [0, 2, 3]);  getitem_148 = None
    mul_537: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_224, 1.0000398612827361);  squeeze_224 = None
    mul_538: "f32[18]" = torch.ops.aten.mul.Tensor(mul_537, 0.1);  mul_537 = None
    mul_539: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1205, 0.9)
    add_424: "f32[18]" = torch.ops.aten.add.Tensor(mul_538, mul_539);  mul_538 = mul_539 = None
    unsqueeze_300: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_224, -1)
    unsqueeze_301: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_300, -1);  unsqueeze_300 = None
    mul_540: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_534, unsqueeze_301);  mul_534 = unsqueeze_301 = None
    unsqueeze_302: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_225, -1);  primals_225 = None
    unsqueeze_303: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_302, -1);  unsqueeze_302 = None
    add_425: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_540, unsqueeze_303);  mul_540 = unsqueeze_303 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_426: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_425, relu_68);  add_425 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_70: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_426);  add_426 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_75: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_60, primals_226, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_427: "i64[]" = torch.ops.aten.add.Tensor(primals_1209, 1)
    var_mean_75 = torch.ops.aten.var_mean.correction(convolution_75, [0, 2, 3], correction = 0, keepdim = True)
    getitem_150: "f32[1, 36, 1, 1]" = var_mean_75[0]
    getitem_151: "f32[1, 36, 1, 1]" = var_mean_75[1];  var_mean_75 = None
    add_428: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_150, 1e-05)
    rsqrt_75: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_428);  add_428 = None
    sub_75: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_75, getitem_151)
    mul_541: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_75, rsqrt_75);  sub_75 = None
    squeeze_225: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_151, [0, 2, 3]);  getitem_151 = None
    squeeze_226: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_75, [0, 2, 3]);  rsqrt_75 = None
    mul_542: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_225, 0.1)
    mul_543: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1207, 0.9)
    add_429: "f32[36]" = torch.ops.aten.add.Tensor(mul_542, mul_543);  mul_542 = mul_543 = None
    squeeze_227: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_150, [0, 2, 3]);  getitem_150 = None
    mul_544: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_227, 1.0001594642002871);  squeeze_227 = None
    mul_545: "f32[36]" = torch.ops.aten.mul.Tensor(mul_544, 0.1);  mul_544 = None
    mul_546: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1208, 0.9)
    add_430: "f32[36]" = torch.ops.aten.add.Tensor(mul_545, mul_546);  mul_545 = mul_546 = None
    unsqueeze_304: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_227, -1)
    unsqueeze_305: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_304, -1);  unsqueeze_304 = None
    mul_547: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_541, unsqueeze_305);  mul_541 = unsqueeze_305 = None
    unsqueeze_306: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_228, -1);  primals_228 = None
    unsqueeze_307: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_306, -1);  unsqueeze_306 = None
    add_431: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_547, unsqueeze_307);  mul_547 = unsqueeze_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_71: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_431);  add_431 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_76: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_71, primals_229, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_432: "i64[]" = torch.ops.aten.add.Tensor(primals_1212, 1)
    var_mean_76 = torch.ops.aten.var_mean.correction(convolution_76, [0, 2, 3], correction = 0, keepdim = True)
    getitem_152: "f32[1, 36, 1, 1]" = var_mean_76[0]
    getitem_153: "f32[1, 36, 1, 1]" = var_mean_76[1];  var_mean_76 = None
    add_433: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_152, 1e-05)
    rsqrt_76: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_433);  add_433 = None
    sub_76: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_76, getitem_153)
    mul_548: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_76, rsqrt_76);  sub_76 = None
    squeeze_228: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_153, [0, 2, 3]);  getitem_153 = None
    squeeze_229: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_76, [0, 2, 3]);  rsqrt_76 = None
    mul_549: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_228, 0.1)
    mul_550: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1210, 0.9)
    add_434: "f32[36]" = torch.ops.aten.add.Tensor(mul_549, mul_550);  mul_549 = mul_550 = None
    squeeze_230: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_152, [0, 2, 3]);  getitem_152 = None
    mul_551: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_230, 1.0001594642002871);  squeeze_230 = None
    mul_552: "f32[36]" = torch.ops.aten.mul.Tensor(mul_551, 0.1);  mul_551 = None
    mul_553: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1211, 0.9)
    add_435: "f32[36]" = torch.ops.aten.add.Tensor(mul_552, mul_553);  mul_552 = mul_553 = None
    unsqueeze_308: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_230, -1)
    unsqueeze_309: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_308, -1);  unsqueeze_308 = None
    mul_554: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_548, unsqueeze_309);  mul_548 = unsqueeze_309 = None
    unsqueeze_310: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_231, -1);  primals_231 = None
    unsqueeze_311: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_310, -1);  unsqueeze_310 = None
    add_436: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_554, unsqueeze_311);  mul_554 = unsqueeze_311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_437: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_436, relu_60);  add_436 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_72: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_437);  add_437 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_77: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_72, primals_232, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_438: "i64[]" = torch.ops.aten.add.Tensor(primals_1215, 1)
    var_mean_77 = torch.ops.aten.var_mean.correction(convolution_77, [0, 2, 3], correction = 0, keepdim = True)
    getitem_154: "f32[1, 36, 1, 1]" = var_mean_77[0]
    getitem_155: "f32[1, 36, 1, 1]" = var_mean_77[1];  var_mean_77 = None
    add_439: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_154, 1e-05)
    rsqrt_77: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_439);  add_439 = None
    sub_77: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_77, getitem_155)
    mul_555: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_77, rsqrt_77);  sub_77 = None
    squeeze_231: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_155, [0, 2, 3]);  getitem_155 = None
    squeeze_232: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_77, [0, 2, 3]);  rsqrt_77 = None
    mul_556: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_231, 0.1)
    mul_557: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1213, 0.9)
    add_440: "f32[36]" = torch.ops.aten.add.Tensor(mul_556, mul_557);  mul_556 = mul_557 = None
    squeeze_233: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_154, [0, 2, 3]);  getitem_154 = None
    mul_558: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_233, 1.0001594642002871);  squeeze_233 = None
    mul_559: "f32[36]" = torch.ops.aten.mul.Tensor(mul_558, 0.1);  mul_558 = None
    mul_560: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1214, 0.9)
    add_441: "f32[36]" = torch.ops.aten.add.Tensor(mul_559, mul_560);  mul_559 = mul_560 = None
    unsqueeze_312: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_233, -1)
    unsqueeze_313: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_312, -1);  unsqueeze_312 = None
    mul_561: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_555, unsqueeze_313);  mul_555 = unsqueeze_313 = None
    unsqueeze_314: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_234, -1);  primals_234 = None
    unsqueeze_315: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_314, -1);  unsqueeze_314 = None
    add_442: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_561, unsqueeze_315);  mul_561 = unsqueeze_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_73: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_442);  add_442 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_78: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_73, primals_235, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_443: "i64[]" = torch.ops.aten.add.Tensor(primals_1218, 1)
    var_mean_78 = torch.ops.aten.var_mean.correction(convolution_78, [0, 2, 3], correction = 0, keepdim = True)
    getitem_156: "f32[1, 36, 1, 1]" = var_mean_78[0]
    getitem_157: "f32[1, 36, 1, 1]" = var_mean_78[1];  var_mean_78 = None
    add_444: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_156, 1e-05)
    rsqrt_78: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_444);  add_444 = None
    sub_78: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_78, getitem_157)
    mul_562: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_78, rsqrt_78);  sub_78 = None
    squeeze_234: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_157, [0, 2, 3]);  getitem_157 = None
    squeeze_235: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_78, [0, 2, 3]);  rsqrt_78 = None
    mul_563: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_234, 0.1)
    mul_564: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1216, 0.9)
    add_445: "f32[36]" = torch.ops.aten.add.Tensor(mul_563, mul_564);  mul_563 = mul_564 = None
    squeeze_236: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_156, [0, 2, 3]);  getitem_156 = None
    mul_565: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_236, 1.0001594642002871);  squeeze_236 = None
    mul_566: "f32[36]" = torch.ops.aten.mul.Tensor(mul_565, 0.1);  mul_565 = None
    mul_567: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1217, 0.9)
    add_446: "f32[36]" = torch.ops.aten.add.Tensor(mul_566, mul_567);  mul_566 = mul_567 = None
    unsqueeze_316: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_236, -1)
    unsqueeze_317: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_316, -1);  unsqueeze_316 = None
    mul_568: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_562, unsqueeze_317);  mul_562 = unsqueeze_317 = None
    unsqueeze_318: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_237, -1);  primals_237 = None
    unsqueeze_319: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_318, -1);  unsqueeze_318 = None
    add_447: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_568, unsqueeze_319);  mul_568 = unsqueeze_319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_448: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_447, relu_72);  add_447 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_74: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_448);  add_448 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_79: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_74, primals_238, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_449: "i64[]" = torch.ops.aten.add.Tensor(primals_1221, 1)
    var_mean_79 = torch.ops.aten.var_mean.correction(convolution_79, [0, 2, 3], correction = 0, keepdim = True)
    getitem_158: "f32[1, 36, 1, 1]" = var_mean_79[0]
    getitem_159: "f32[1, 36, 1, 1]" = var_mean_79[1];  var_mean_79 = None
    add_450: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_158, 1e-05)
    rsqrt_79: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_450);  add_450 = None
    sub_79: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_79, getitem_159)
    mul_569: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_79, rsqrt_79);  sub_79 = None
    squeeze_237: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_159, [0, 2, 3]);  getitem_159 = None
    squeeze_238: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_79, [0, 2, 3]);  rsqrt_79 = None
    mul_570: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_237, 0.1)
    mul_571: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1219, 0.9)
    add_451: "f32[36]" = torch.ops.aten.add.Tensor(mul_570, mul_571);  mul_570 = mul_571 = None
    squeeze_239: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_158, [0, 2, 3]);  getitem_158 = None
    mul_572: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_239, 1.0001594642002871);  squeeze_239 = None
    mul_573: "f32[36]" = torch.ops.aten.mul.Tensor(mul_572, 0.1);  mul_572 = None
    mul_574: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1220, 0.9)
    add_452: "f32[36]" = torch.ops.aten.add.Tensor(mul_573, mul_574);  mul_573 = mul_574 = None
    unsqueeze_320: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_239, -1)
    unsqueeze_321: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_320, -1);  unsqueeze_320 = None
    mul_575: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_569, unsqueeze_321);  mul_569 = unsqueeze_321 = None
    unsqueeze_322: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_240, -1);  primals_240 = None
    unsqueeze_323: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_322, -1);  unsqueeze_322 = None
    add_453: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_575, unsqueeze_323);  mul_575 = unsqueeze_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_75: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_453);  add_453 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_80: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_75, primals_241, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_454: "i64[]" = torch.ops.aten.add.Tensor(primals_1224, 1)
    var_mean_80 = torch.ops.aten.var_mean.correction(convolution_80, [0, 2, 3], correction = 0, keepdim = True)
    getitem_160: "f32[1, 36, 1, 1]" = var_mean_80[0]
    getitem_161: "f32[1, 36, 1, 1]" = var_mean_80[1];  var_mean_80 = None
    add_455: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_160, 1e-05)
    rsqrt_80: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_455);  add_455 = None
    sub_80: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_80, getitem_161)
    mul_576: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_80, rsqrt_80);  sub_80 = None
    squeeze_240: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_161, [0, 2, 3]);  getitem_161 = None
    squeeze_241: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_80, [0, 2, 3]);  rsqrt_80 = None
    mul_577: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_240, 0.1)
    mul_578: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1222, 0.9)
    add_456: "f32[36]" = torch.ops.aten.add.Tensor(mul_577, mul_578);  mul_577 = mul_578 = None
    squeeze_242: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_160, [0, 2, 3]);  getitem_160 = None
    mul_579: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_242, 1.0001594642002871);  squeeze_242 = None
    mul_580: "f32[36]" = torch.ops.aten.mul.Tensor(mul_579, 0.1);  mul_579 = None
    mul_581: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1223, 0.9)
    add_457: "f32[36]" = torch.ops.aten.add.Tensor(mul_580, mul_581);  mul_580 = mul_581 = None
    unsqueeze_324: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_242, -1)
    unsqueeze_325: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_324, -1);  unsqueeze_324 = None
    mul_582: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_576, unsqueeze_325);  mul_576 = unsqueeze_325 = None
    unsqueeze_326: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_243, -1);  primals_243 = None
    unsqueeze_327: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_326, -1);  unsqueeze_326 = None
    add_458: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_582, unsqueeze_327);  mul_582 = unsqueeze_327 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_459: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_458, relu_74);  add_458 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_76: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_459);  add_459 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_81: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_76, primals_244, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_460: "i64[]" = torch.ops.aten.add.Tensor(primals_1227, 1)
    var_mean_81 = torch.ops.aten.var_mean.correction(convolution_81, [0, 2, 3], correction = 0, keepdim = True)
    getitem_162: "f32[1, 36, 1, 1]" = var_mean_81[0]
    getitem_163: "f32[1, 36, 1, 1]" = var_mean_81[1];  var_mean_81 = None
    add_461: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_162, 1e-05)
    rsqrt_81: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_461);  add_461 = None
    sub_81: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_81, getitem_163)
    mul_583: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_81, rsqrt_81);  sub_81 = None
    squeeze_243: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_163, [0, 2, 3]);  getitem_163 = None
    squeeze_244: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_81, [0, 2, 3]);  rsqrt_81 = None
    mul_584: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_243, 0.1)
    mul_585: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1225, 0.9)
    add_462: "f32[36]" = torch.ops.aten.add.Tensor(mul_584, mul_585);  mul_584 = mul_585 = None
    squeeze_245: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_162, [0, 2, 3]);  getitem_162 = None
    mul_586: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_245, 1.0001594642002871);  squeeze_245 = None
    mul_587: "f32[36]" = torch.ops.aten.mul.Tensor(mul_586, 0.1);  mul_586 = None
    mul_588: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1226, 0.9)
    add_463: "f32[36]" = torch.ops.aten.add.Tensor(mul_587, mul_588);  mul_587 = mul_588 = None
    unsqueeze_328: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_245, -1)
    unsqueeze_329: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_328, -1);  unsqueeze_328 = None
    mul_589: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_583, unsqueeze_329);  mul_583 = unsqueeze_329 = None
    unsqueeze_330: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_246, -1);  primals_246 = None
    unsqueeze_331: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_330, -1);  unsqueeze_330 = None
    add_464: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_589, unsqueeze_331);  mul_589 = unsqueeze_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_77: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_464);  add_464 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_82: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_77, primals_247, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_465: "i64[]" = torch.ops.aten.add.Tensor(primals_1230, 1)
    var_mean_82 = torch.ops.aten.var_mean.correction(convolution_82, [0, 2, 3], correction = 0, keepdim = True)
    getitem_164: "f32[1, 36, 1, 1]" = var_mean_82[0]
    getitem_165: "f32[1, 36, 1, 1]" = var_mean_82[1];  var_mean_82 = None
    add_466: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_164, 1e-05)
    rsqrt_82: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_466);  add_466 = None
    sub_82: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_82, getitem_165)
    mul_590: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_82, rsqrt_82);  sub_82 = None
    squeeze_246: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_165, [0, 2, 3]);  getitem_165 = None
    squeeze_247: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_82, [0, 2, 3]);  rsqrt_82 = None
    mul_591: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_246, 0.1)
    mul_592: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1228, 0.9)
    add_467: "f32[36]" = torch.ops.aten.add.Tensor(mul_591, mul_592);  mul_591 = mul_592 = None
    squeeze_248: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_164, [0, 2, 3]);  getitem_164 = None
    mul_593: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_248, 1.0001594642002871);  squeeze_248 = None
    mul_594: "f32[36]" = torch.ops.aten.mul.Tensor(mul_593, 0.1);  mul_593 = None
    mul_595: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1229, 0.9)
    add_468: "f32[36]" = torch.ops.aten.add.Tensor(mul_594, mul_595);  mul_594 = mul_595 = None
    unsqueeze_332: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_248, -1)
    unsqueeze_333: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_332, -1);  unsqueeze_332 = None
    mul_596: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_590, unsqueeze_333);  mul_590 = unsqueeze_333 = None
    unsqueeze_334: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_249, -1);  primals_249 = None
    unsqueeze_335: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_334, -1);  unsqueeze_334 = None
    add_469: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_596, unsqueeze_335);  mul_596 = unsqueeze_335 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_470: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_469, relu_76);  add_469 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_78: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_470);  add_470 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_83: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_62, primals_250, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_471: "i64[]" = torch.ops.aten.add.Tensor(primals_1233, 1)
    var_mean_83 = torch.ops.aten.var_mean.correction(convolution_83, [0, 2, 3], correction = 0, keepdim = True)
    getitem_166: "f32[1, 72, 1, 1]" = var_mean_83[0]
    getitem_167: "f32[1, 72, 1, 1]" = var_mean_83[1];  var_mean_83 = None
    add_472: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_166, 1e-05)
    rsqrt_83: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_472);  add_472 = None
    sub_83: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_83, getitem_167)
    mul_597: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_83, rsqrt_83);  sub_83 = None
    squeeze_249: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_167, [0, 2, 3]);  getitem_167 = None
    squeeze_250: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_83, [0, 2, 3]);  rsqrt_83 = None
    mul_598: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_249, 0.1)
    mul_599: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1231, 0.9)
    add_473: "f32[72]" = torch.ops.aten.add.Tensor(mul_598, mul_599);  mul_598 = mul_599 = None
    squeeze_251: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_166, [0, 2, 3]);  getitem_166 = None
    mul_600: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_251, 1.0006381620931717);  squeeze_251 = None
    mul_601: "f32[72]" = torch.ops.aten.mul.Tensor(mul_600, 0.1);  mul_600 = None
    mul_602: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1232, 0.9)
    add_474: "f32[72]" = torch.ops.aten.add.Tensor(mul_601, mul_602);  mul_601 = mul_602 = None
    unsqueeze_336: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_251, -1)
    unsqueeze_337: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_336, -1);  unsqueeze_336 = None
    mul_603: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_597, unsqueeze_337);  mul_597 = unsqueeze_337 = None
    unsqueeze_338: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_252, -1);  primals_252 = None
    unsqueeze_339: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_338, -1);  unsqueeze_338 = None
    add_475: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_603, unsqueeze_339);  mul_603 = unsqueeze_339 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_79: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_475);  add_475 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_84: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_79, primals_253, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_476: "i64[]" = torch.ops.aten.add.Tensor(primals_1236, 1)
    var_mean_84 = torch.ops.aten.var_mean.correction(convolution_84, [0, 2, 3], correction = 0, keepdim = True)
    getitem_168: "f32[1, 72, 1, 1]" = var_mean_84[0]
    getitem_169: "f32[1, 72, 1, 1]" = var_mean_84[1];  var_mean_84 = None
    add_477: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_168, 1e-05)
    rsqrt_84: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_477);  add_477 = None
    sub_84: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_84, getitem_169)
    mul_604: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_84, rsqrt_84);  sub_84 = None
    squeeze_252: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_169, [0, 2, 3]);  getitem_169 = None
    squeeze_253: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_84, [0, 2, 3]);  rsqrt_84 = None
    mul_605: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_252, 0.1)
    mul_606: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1234, 0.9)
    add_478: "f32[72]" = torch.ops.aten.add.Tensor(mul_605, mul_606);  mul_605 = mul_606 = None
    squeeze_254: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_168, [0, 2, 3]);  getitem_168 = None
    mul_607: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_254, 1.0006381620931717);  squeeze_254 = None
    mul_608: "f32[72]" = torch.ops.aten.mul.Tensor(mul_607, 0.1);  mul_607 = None
    mul_609: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1235, 0.9)
    add_479: "f32[72]" = torch.ops.aten.add.Tensor(mul_608, mul_609);  mul_608 = mul_609 = None
    unsqueeze_340: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_254, -1)
    unsqueeze_341: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_340, -1);  unsqueeze_340 = None
    mul_610: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_604, unsqueeze_341);  mul_604 = unsqueeze_341 = None
    unsqueeze_342: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_255, -1);  primals_255 = None
    unsqueeze_343: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_342, -1);  unsqueeze_342 = None
    add_480: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_610, unsqueeze_343);  mul_610 = unsqueeze_343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_481: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_480, relu_62);  add_480 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_80: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_481);  add_481 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_85: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_80, primals_256, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_482: "i64[]" = torch.ops.aten.add.Tensor(primals_1239, 1)
    var_mean_85 = torch.ops.aten.var_mean.correction(convolution_85, [0, 2, 3], correction = 0, keepdim = True)
    getitem_170: "f32[1, 72, 1, 1]" = var_mean_85[0]
    getitem_171: "f32[1, 72, 1, 1]" = var_mean_85[1];  var_mean_85 = None
    add_483: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_170, 1e-05)
    rsqrt_85: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_483);  add_483 = None
    sub_85: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_85, getitem_171)
    mul_611: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_85, rsqrt_85);  sub_85 = None
    squeeze_255: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_171, [0, 2, 3]);  getitem_171 = None
    squeeze_256: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_85, [0, 2, 3]);  rsqrt_85 = None
    mul_612: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_255, 0.1)
    mul_613: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1237, 0.9)
    add_484: "f32[72]" = torch.ops.aten.add.Tensor(mul_612, mul_613);  mul_612 = mul_613 = None
    squeeze_257: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_170, [0, 2, 3]);  getitem_170 = None
    mul_614: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_257, 1.0006381620931717);  squeeze_257 = None
    mul_615: "f32[72]" = torch.ops.aten.mul.Tensor(mul_614, 0.1);  mul_614 = None
    mul_616: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1238, 0.9)
    add_485: "f32[72]" = torch.ops.aten.add.Tensor(mul_615, mul_616);  mul_615 = mul_616 = None
    unsqueeze_344: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_257, -1)
    unsqueeze_345: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_344, -1);  unsqueeze_344 = None
    mul_617: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_611, unsqueeze_345);  mul_611 = unsqueeze_345 = None
    unsqueeze_346: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_258, -1);  primals_258 = None
    unsqueeze_347: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_346, -1);  unsqueeze_346 = None
    add_486: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_617, unsqueeze_347);  mul_617 = unsqueeze_347 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_81: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_486);  add_486 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_86: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_81, primals_259, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_487: "i64[]" = torch.ops.aten.add.Tensor(primals_1242, 1)
    var_mean_86 = torch.ops.aten.var_mean.correction(convolution_86, [0, 2, 3], correction = 0, keepdim = True)
    getitem_172: "f32[1, 72, 1, 1]" = var_mean_86[0]
    getitem_173: "f32[1, 72, 1, 1]" = var_mean_86[1];  var_mean_86 = None
    add_488: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_172, 1e-05)
    rsqrt_86: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_488);  add_488 = None
    sub_86: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_86, getitem_173)
    mul_618: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_86, rsqrt_86);  sub_86 = None
    squeeze_258: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_173, [0, 2, 3]);  getitem_173 = None
    squeeze_259: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_86, [0, 2, 3]);  rsqrt_86 = None
    mul_619: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_258, 0.1)
    mul_620: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1240, 0.9)
    add_489: "f32[72]" = torch.ops.aten.add.Tensor(mul_619, mul_620);  mul_619 = mul_620 = None
    squeeze_260: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_172, [0, 2, 3]);  getitem_172 = None
    mul_621: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_260, 1.0006381620931717);  squeeze_260 = None
    mul_622: "f32[72]" = torch.ops.aten.mul.Tensor(mul_621, 0.1);  mul_621 = None
    mul_623: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1241, 0.9)
    add_490: "f32[72]" = torch.ops.aten.add.Tensor(mul_622, mul_623);  mul_622 = mul_623 = None
    unsqueeze_348: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_260, -1)
    unsqueeze_349: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_348, -1);  unsqueeze_348 = None
    mul_624: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_618, unsqueeze_349);  mul_618 = unsqueeze_349 = None
    unsqueeze_350: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_261, -1);  primals_261 = None
    unsqueeze_351: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_350, -1);  unsqueeze_350 = None
    add_491: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_624, unsqueeze_351);  mul_624 = unsqueeze_351 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_492: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_491, relu_80);  add_491 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_82: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_492);  add_492 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_87: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_82, primals_262, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_493: "i64[]" = torch.ops.aten.add.Tensor(primals_1245, 1)
    var_mean_87 = torch.ops.aten.var_mean.correction(convolution_87, [0, 2, 3], correction = 0, keepdim = True)
    getitem_174: "f32[1, 72, 1, 1]" = var_mean_87[0]
    getitem_175: "f32[1, 72, 1, 1]" = var_mean_87[1];  var_mean_87 = None
    add_494: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_174, 1e-05)
    rsqrt_87: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_494);  add_494 = None
    sub_87: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_87, getitem_175)
    mul_625: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_87, rsqrt_87);  sub_87 = None
    squeeze_261: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_175, [0, 2, 3]);  getitem_175 = None
    squeeze_262: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_87, [0, 2, 3]);  rsqrt_87 = None
    mul_626: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_261, 0.1)
    mul_627: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1243, 0.9)
    add_495: "f32[72]" = torch.ops.aten.add.Tensor(mul_626, mul_627);  mul_626 = mul_627 = None
    squeeze_263: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_174, [0, 2, 3]);  getitem_174 = None
    mul_628: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_263, 1.0006381620931717);  squeeze_263 = None
    mul_629: "f32[72]" = torch.ops.aten.mul.Tensor(mul_628, 0.1);  mul_628 = None
    mul_630: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1244, 0.9)
    add_496: "f32[72]" = torch.ops.aten.add.Tensor(mul_629, mul_630);  mul_629 = mul_630 = None
    unsqueeze_352: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_263, -1)
    unsqueeze_353: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_352, -1);  unsqueeze_352 = None
    mul_631: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_625, unsqueeze_353);  mul_625 = unsqueeze_353 = None
    unsqueeze_354: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_264, -1);  primals_264 = None
    unsqueeze_355: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_354, -1);  unsqueeze_354 = None
    add_497: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_631, unsqueeze_355);  mul_631 = unsqueeze_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_83: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_497);  add_497 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_88: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_83, primals_265, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_498: "i64[]" = torch.ops.aten.add.Tensor(primals_1248, 1)
    var_mean_88 = torch.ops.aten.var_mean.correction(convolution_88, [0, 2, 3], correction = 0, keepdim = True)
    getitem_176: "f32[1, 72, 1, 1]" = var_mean_88[0]
    getitem_177: "f32[1, 72, 1, 1]" = var_mean_88[1];  var_mean_88 = None
    add_499: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_176, 1e-05)
    rsqrt_88: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_499);  add_499 = None
    sub_88: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_88, getitem_177)
    mul_632: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_88, rsqrt_88);  sub_88 = None
    squeeze_264: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_177, [0, 2, 3]);  getitem_177 = None
    squeeze_265: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_88, [0, 2, 3]);  rsqrt_88 = None
    mul_633: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_264, 0.1)
    mul_634: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1246, 0.9)
    add_500: "f32[72]" = torch.ops.aten.add.Tensor(mul_633, mul_634);  mul_633 = mul_634 = None
    squeeze_266: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_176, [0, 2, 3]);  getitem_176 = None
    mul_635: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_266, 1.0006381620931717);  squeeze_266 = None
    mul_636: "f32[72]" = torch.ops.aten.mul.Tensor(mul_635, 0.1);  mul_635 = None
    mul_637: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1247, 0.9)
    add_501: "f32[72]" = torch.ops.aten.add.Tensor(mul_636, mul_637);  mul_636 = mul_637 = None
    unsqueeze_356: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_266, -1)
    unsqueeze_357: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_356, -1);  unsqueeze_356 = None
    mul_638: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_632, unsqueeze_357);  mul_632 = unsqueeze_357 = None
    unsqueeze_358: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_267, -1);  primals_267 = None
    unsqueeze_359: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_358, -1);  unsqueeze_358 = None
    add_502: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_638, unsqueeze_359);  mul_638 = unsqueeze_359 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_503: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_502, relu_82);  add_502 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_84: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_503);  add_503 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_89: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_84, primals_268, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_504: "i64[]" = torch.ops.aten.add.Tensor(primals_1251, 1)
    var_mean_89 = torch.ops.aten.var_mean.correction(convolution_89, [0, 2, 3], correction = 0, keepdim = True)
    getitem_178: "f32[1, 72, 1, 1]" = var_mean_89[0]
    getitem_179: "f32[1, 72, 1, 1]" = var_mean_89[1];  var_mean_89 = None
    add_505: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_178, 1e-05)
    rsqrt_89: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_505);  add_505 = None
    sub_89: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_89, getitem_179)
    mul_639: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_89, rsqrt_89);  sub_89 = None
    squeeze_267: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_179, [0, 2, 3]);  getitem_179 = None
    squeeze_268: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_89, [0, 2, 3]);  rsqrt_89 = None
    mul_640: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_267, 0.1)
    mul_641: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1249, 0.9)
    add_506: "f32[72]" = torch.ops.aten.add.Tensor(mul_640, mul_641);  mul_640 = mul_641 = None
    squeeze_269: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_178, [0, 2, 3]);  getitem_178 = None
    mul_642: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_269, 1.0006381620931717);  squeeze_269 = None
    mul_643: "f32[72]" = torch.ops.aten.mul.Tensor(mul_642, 0.1);  mul_642 = None
    mul_644: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1250, 0.9)
    add_507: "f32[72]" = torch.ops.aten.add.Tensor(mul_643, mul_644);  mul_643 = mul_644 = None
    unsqueeze_360: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_269, -1)
    unsqueeze_361: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_360, -1);  unsqueeze_360 = None
    mul_645: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_639, unsqueeze_361);  mul_639 = unsqueeze_361 = None
    unsqueeze_362: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_270, -1);  primals_270 = None
    unsqueeze_363: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_362, -1);  unsqueeze_362 = None
    add_508: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_645, unsqueeze_363);  mul_645 = unsqueeze_363 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_85: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_508);  add_508 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_90: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_85, primals_271, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_509: "i64[]" = torch.ops.aten.add.Tensor(primals_1254, 1)
    var_mean_90 = torch.ops.aten.var_mean.correction(convolution_90, [0, 2, 3], correction = 0, keepdim = True)
    getitem_180: "f32[1, 72, 1, 1]" = var_mean_90[0]
    getitem_181: "f32[1, 72, 1, 1]" = var_mean_90[1];  var_mean_90 = None
    add_510: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_180, 1e-05)
    rsqrt_90: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_510);  add_510 = None
    sub_90: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_90, getitem_181)
    mul_646: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_90, rsqrt_90);  sub_90 = None
    squeeze_270: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_181, [0, 2, 3]);  getitem_181 = None
    squeeze_271: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_90, [0, 2, 3]);  rsqrt_90 = None
    mul_647: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_270, 0.1)
    mul_648: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1252, 0.9)
    add_511: "f32[72]" = torch.ops.aten.add.Tensor(mul_647, mul_648);  mul_647 = mul_648 = None
    squeeze_272: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_180, [0, 2, 3]);  getitem_180 = None
    mul_649: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_272, 1.0006381620931717);  squeeze_272 = None
    mul_650: "f32[72]" = torch.ops.aten.mul.Tensor(mul_649, 0.1);  mul_649 = None
    mul_651: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1253, 0.9)
    add_512: "f32[72]" = torch.ops.aten.add.Tensor(mul_650, mul_651);  mul_650 = mul_651 = None
    unsqueeze_364: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_272, -1)
    unsqueeze_365: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_364, -1);  unsqueeze_364 = None
    mul_652: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_646, unsqueeze_365);  mul_646 = unsqueeze_365 = None
    unsqueeze_366: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_273, -1);  primals_273 = None
    unsqueeze_367: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_366, -1);  unsqueeze_366 = None
    add_513: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_652, unsqueeze_367);  mul_652 = unsqueeze_367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_514: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_513, relu_84);  add_513 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_86: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_514);  add_514 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_91: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_78, primals_274, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_515: "i64[]" = torch.ops.aten.add.Tensor(primals_1257, 1)
    var_mean_91 = torch.ops.aten.var_mean.correction(convolution_91, [0, 2, 3], correction = 0, keepdim = True)
    getitem_182: "f32[1, 18, 1, 1]" = var_mean_91[0]
    getitem_183: "f32[1, 18, 1, 1]" = var_mean_91[1];  var_mean_91 = None
    add_516: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_182, 1e-05)
    rsqrt_91: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_516);  add_516 = None
    sub_91: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_91, getitem_183)
    mul_653: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_91, rsqrt_91);  sub_91 = None
    squeeze_273: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_183, [0, 2, 3]);  getitem_183 = None
    squeeze_274: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_91, [0, 2, 3]);  rsqrt_91 = None
    mul_654: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_273, 0.1)
    mul_655: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1255, 0.9)
    add_517: "f32[18]" = torch.ops.aten.add.Tensor(mul_654, mul_655);  mul_654 = mul_655 = None
    squeeze_275: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_182, [0, 2, 3]);  getitem_182 = None
    mul_656: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_275, 1.0001594642002871);  squeeze_275 = None
    mul_657: "f32[18]" = torch.ops.aten.mul.Tensor(mul_656, 0.1);  mul_656 = None
    mul_658: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1256, 0.9)
    add_518: "f32[18]" = torch.ops.aten.add.Tensor(mul_657, mul_658);  mul_657 = mul_658 = None
    unsqueeze_368: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_275, -1)
    unsqueeze_369: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_368, -1);  unsqueeze_368 = None
    mul_659: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_653, unsqueeze_369);  mul_653 = unsqueeze_369 = None
    unsqueeze_370: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_276, -1);  primals_276 = None
    unsqueeze_371: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_370, -1);  unsqueeze_370 = None
    add_519: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_659, unsqueeze_371);  mul_659 = unsqueeze_371 = None
    iota_8: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_16: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_8, torch.float32);  iota_8 = None
    mul_660: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_16, 1);  convert_element_type_16 = None
    add_520: "f32[56]" = torch.ops.aten.add.Tensor(mul_660, 0);  mul_660 = None
    add_521: "f32[56]" = torch.ops.aten.add.Tensor(add_520, 0.0);  add_520 = None
    mul_661: "f32[56]" = torch.ops.aten.mul.Tensor(add_521, 0.5);  add_521 = None
    convert_element_type_17: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_661, torch.int64);  mul_661 = None
    unsqueeze_372: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_17, -1);  convert_element_type_17 = None
    iota_9: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_18: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_9, torch.float32);  iota_9 = None
    mul_662: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_18, 1);  convert_element_type_18 = None
    add_522: "f32[56]" = torch.ops.aten.add.Tensor(mul_662, 0);  mul_662 = None
    add_523: "f32[56]" = torch.ops.aten.add.Tensor(add_522, 0.0);  add_522 = None
    mul_663: "f32[56]" = torch.ops.aten.mul.Tensor(add_523, 0.5);  add_523 = None
    convert_element_type_19: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_663, torch.int64);  mul_663 = None
    _unsafe_index_4: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_519, [None, None, unsqueeze_372, convert_element_type_19]);  add_519 = None
    add_524: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_70, _unsafe_index_4);  _unsafe_index_4 = None
    convolution_92: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_86, primals_277, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_525: "i64[]" = torch.ops.aten.add.Tensor(primals_1260, 1)
    var_mean_92 = torch.ops.aten.var_mean.correction(convolution_92, [0, 2, 3], correction = 0, keepdim = True)
    getitem_184: "f32[1, 18, 1, 1]" = var_mean_92[0]
    getitem_185: "f32[1, 18, 1, 1]" = var_mean_92[1];  var_mean_92 = None
    add_526: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_184, 1e-05)
    rsqrt_92: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_526);  add_526 = None
    sub_92: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_92, getitem_185)
    mul_664: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_92, rsqrt_92);  sub_92 = None
    squeeze_276: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_185, [0, 2, 3]);  getitem_185 = None
    squeeze_277: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_92, [0, 2, 3]);  rsqrt_92 = None
    mul_665: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_276, 0.1)
    mul_666: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1258, 0.9)
    add_527: "f32[18]" = torch.ops.aten.add.Tensor(mul_665, mul_666);  mul_665 = mul_666 = None
    squeeze_278: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_184, [0, 2, 3]);  getitem_184 = None
    mul_667: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_278, 1.0006381620931717);  squeeze_278 = None
    mul_668: "f32[18]" = torch.ops.aten.mul.Tensor(mul_667, 0.1);  mul_667 = None
    mul_669: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1259, 0.9)
    add_528: "f32[18]" = torch.ops.aten.add.Tensor(mul_668, mul_669);  mul_668 = mul_669 = None
    unsqueeze_373: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_278, -1)
    unsqueeze_374: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_373, -1);  unsqueeze_373 = None
    mul_670: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_664, unsqueeze_374);  mul_664 = unsqueeze_374 = None
    unsqueeze_375: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_279, -1);  primals_279 = None
    unsqueeze_376: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_375, -1);  unsqueeze_375 = None
    add_529: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_670, unsqueeze_376);  mul_670 = unsqueeze_376 = None
    iota_10: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_20: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_10, torch.float32);  iota_10 = None
    mul_671: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_20, 1);  convert_element_type_20 = None
    add_530: "f32[56]" = torch.ops.aten.add.Tensor(mul_671, 0);  mul_671 = None
    add_531: "f32[56]" = torch.ops.aten.add.Tensor(add_530, 0.0);  add_530 = None
    mul_672: "f32[56]" = torch.ops.aten.mul.Tensor(add_531, 0.25);  add_531 = None
    convert_element_type_21: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_672, torch.int64);  mul_672 = None
    unsqueeze_377: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_21, -1);  convert_element_type_21 = None
    iota_11: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_22: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_11, torch.float32);  iota_11 = None
    mul_673: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_22, 1);  convert_element_type_22 = None
    add_532: "f32[56]" = torch.ops.aten.add.Tensor(mul_673, 0);  mul_673 = None
    add_533: "f32[56]" = torch.ops.aten.add.Tensor(add_532, 0.0);  add_532 = None
    mul_674: "f32[56]" = torch.ops.aten.mul.Tensor(add_533, 0.25);  add_533 = None
    convert_element_type_23: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_674, torch.int64);  mul_674 = None
    _unsafe_index_5: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_529, [None, None, unsqueeze_377, convert_element_type_23]);  add_529 = None
    add_534: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_524, _unsafe_index_5);  add_524 = _unsafe_index_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_87: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_534);  add_534 = None
    alias_87: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_87)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_93: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_70, primals_280, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_535: "i64[]" = torch.ops.aten.add.Tensor(primals_1263, 1)
    var_mean_93 = torch.ops.aten.var_mean.correction(convolution_93, [0, 2, 3], correction = 0, keepdim = True)
    getitem_186: "f32[1, 36, 1, 1]" = var_mean_93[0]
    getitem_187: "f32[1, 36, 1, 1]" = var_mean_93[1];  var_mean_93 = None
    add_536: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_186, 1e-05)
    rsqrt_93: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_536);  add_536 = None
    sub_93: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_93, getitem_187)
    mul_675: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_93, rsqrt_93);  sub_93 = None
    squeeze_279: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_187, [0, 2, 3]);  getitem_187 = None
    squeeze_280: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_93, [0, 2, 3]);  rsqrt_93 = None
    mul_676: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_279, 0.1)
    mul_677: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1261, 0.9)
    add_537: "f32[36]" = torch.ops.aten.add.Tensor(mul_676, mul_677);  mul_676 = mul_677 = None
    squeeze_281: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_186, [0, 2, 3]);  getitem_186 = None
    mul_678: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_281, 1.0001594642002871);  squeeze_281 = None
    mul_679: "f32[36]" = torch.ops.aten.mul.Tensor(mul_678, 0.1);  mul_678 = None
    mul_680: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1262, 0.9)
    add_538: "f32[36]" = torch.ops.aten.add.Tensor(mul_679, mul_680);  mul_679 = mul_680 = None
    unsqueeze_378: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_281, -1)
    unsqueeze_379: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_378, -1);  unsqueeze_378 = None
    mul_681: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_675, unsqueeze_379);  mul_675 = unsqueeze_379 = None
    unsqueeze_380: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_282, -1);  primals_282 = None
    unsqueeze_381: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_380, -1);  unsqueeze_380 = None
    add_539: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_681, unsqueeze_381);  mul_681 = unsqueeze_381 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_540: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_539, relu_78);  add_539 = None
    convolution_94: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_86, primals_283, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_541: "i64[]" = torch.ops.aten.add.Tensor(primals_1266, 1)
    var_mean_94 = torch.ops.aten.var_mean.correction(convolution_94, [0, 2, 3], correction = 0, keepdim = True)
    getitem_188: "f32[1, 36, 1, 1]" = var_mean_94[0]
    getitem_189: "f32[1, 36, 1, 1]" = var_mean_94[1];  var_mean_94 = None
    add_542: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_188, 1e-05)
    rsqrt_94: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_542);  add_542 = None
    sub_94: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_94, getitem_189)
    mul_682: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_94, rsqrt_94);  sub_94 = None
    squeeze_282: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_189, [0, 2, 3]);  getitem_189 = None
    squeeze_283: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_94, [0, 2, 3]);  rsqrt_94 = None
    mul_683: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_282, 0.1)
    mul_684: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1264, 0.9)
    add_543: "f32[36]" = torch.ops.aten.add.Tensor(mul_683, mul_684);  mul_683 = mul_684 = None
    squeeze_284: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_188, [0, 2, 3]);  getitem_188 = None
    mul_685: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_284, 1.0006381620931717);  squeeze_284 = None
    mul_686: "f32[36]" = torch.ops.aten.mul.Tensor(mul_685, 0.1);  mul_685 = None
    mul_687: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1265, 0.9)
    add_544: "f32[36]" = torch.ops.aten.add.Tensor(mul_686, mul_687);  mul_686 = mul_687 = None
    unsqueeze_382: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_284, -1)
    unsqueeze_383: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_382, -1);  unsqueeze_382 = None
    mul_688: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_682, unsqueeze_383);  mul_682 = unsqueeze_383 = None
    unsqueeze_384: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_285, -1);  primals_285 = None
    unsqueeze_385: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_384, -1);  unsqueeze_384 = None
    add_545: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_688, unsqueeze_385);  mul_688 = unsqueeze_385 = None
    iota_12: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_24: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_12, torch.float32);  iota_12 = None
    mul_689: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_24, 1);  convert_element_type_24 = None
    add_546: "f32[28]" = torch.ops.aten.add.Tensor(mul_689, 0);  mul_689 = None
    add_547: "f32[28]" = torch.ops.aten.add.Tensor(add_546, 0.0);  add_546 = None
    mul_690: "f32[28]" = torch.ops.aten.mul.Tensor(add_547, 0.5);  add_547 = None
    convert_element_type_25: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_690, torch.int64);  mul_690 = None
    unsqueeze_386: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_25, -1);  convert_element_type_25 = None
    iota_13: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_26: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_13, torch.float32);  iota_13 = None
    mul_691: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_26, 1);  convert_element_type_26 = None
    add_548: "f32[28]" = torch.ops.aten.add.Tensor(mul_691, 0);  mul_691 = None
    add_549: "f32[28]" = torch.ops.aten.add.Tensor(add_548, 0.0);  add_548 = None
    mul_692: "f32[28]" = torch.ops.aten.mul.Tensor(add_549, 0.5);  add_549 = None
    convert_element_type_27: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_692, torch.int64);  mul_692 = None
    _unsafe_index_6: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_545, [None, None, unsqueeze_386, convert_element_type_27]);  add_545 = None
    add_550: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_540, _unsafe_index_6);  add_540 = _unsafe_index_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_88: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_550);  add_550 = None
    alias_88: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_88)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_95: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_70, primals_286, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_551: "i64[]" = torch.ops.aten.add.Tensor(primals_1269, 1)
    var_mean_95 = torch.ops.aten.var_mean.correction(convolution_95, [0, 2, 3], correction = 0, keepdim = True)
    getitem_190: "f32[1, 18, 1, 1]" = var_mean_95[0]
    getitem_191: "f32[1, 18, 1, 1]" = var_mean_95[1];  var_mean_95 = None
    add_552: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_190, 1e-05)
    rsqrt_95: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_552);  add_552 = None
    sub_95: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_95, getitem_191)
    mul_693: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_95, rsqrt_95);  sub_95 = None
    squeeze_285: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_191, [0, 2, 3]);  getitem_191 = None
    squeeze_286: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_95, [0, 2, 3]);  rsqrt_95 = None
    mul_694: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_285, 0.1)
    mul_695: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1267, 0.9)
    add_553: "f32[18]" = torch.ops.aten.add.Tensor(mul_694, mul_695);  mul_694 = mul_695 = None
    squeeze_287: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_190, [0, 2, 3]);  getitem_190 = None
    mul_696: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_287, 1.0001594642002871);  squeeze_287 = None
    mul_697: "f32[18]" = torch.ops.aten.mul.Tensor(mul_696, 0.1);  mul_696 = None
    mul_698: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1268, 0.9)
    add_554: "f32[18]" = torch.ops.aten.add.Tensor(mul_697, mul_698);  mul_697 = mul_698 = None
    unsqueeze_387: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_287, -1)
    unsqueeze_388: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_387, -1);  unsqueeze_387 = None
    mul_699: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_693, unsqueeze_388);  mul_693 = unsqueeze_388 = None
    unsqueeze_389: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_288, -1);  primals_288 = None
    unsqueeze_390: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_389, -1);  unsqueeze_389 = None
    add_555: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_699, unsqueeze_390);  mul_699 = unsqueeze_390 = None
    relu_89: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_555);  add_555 = None
    alias_89: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_89)
    convolution_96: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_89, primals_289, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_556: "i64[]" = torch.ops.aten.add.Tensor(primals_1272, 1)
    var_mean_96 = torch.ops.aten.var_mean.correction(convolution_96, [0, 2, 3], correction = 0, keepdim = True)
    getitem_192: "f32[1, 72, 1, 1]" = var_mean_96[0]
    getitem_193: "f32[1, 72, 1, 1]" = var_mean_96[1];  var_mean_96 = None
    add_557: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_192, 1e-05)
    rsqrt_96: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_557);  add_557 = None
    sub_96: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_96, getitem_193)
    mul_700: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_96, rsqrt_96);  sub_96 = None
    squeeze_288: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_193, [0, 2, 3]);  getitem_193 = None
    squeeze_289: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_96, [0, 2, 3]);  rsqrt_96 = None
    mul_701: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_288, 0.1)
    mul_702: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1270, 0.9)
    add_558: "f32[72]" = torch.ops.aten.add.Tensor(mul_701, mul_702);  mul_701 = mul_702 = None
    squeeze_290: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_192, [0, 2, 3]);  getitem_192 = None
    mul_703: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_290, 1.0006381620931717);  squeeze_290 = None
    mul_704: "f32[72]" = torch.ops.aten.mul.Tensor(mul_703, 0.1);  mul_703 = None
    mul_705: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1271, 0.9)
    add_559: "f32[72]" = torch.ops.aten.add.Tensor(mul_704, mul_705);  mul_704 = mul_705 = None
    unsqueeze_391: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_290, -1)
    unsqueeze_392: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_391, -1);  unsqueeze_391 = None
    mul_706: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_700, unsqueeze_392);  mul_700 = unsqueeze_392 = None
    unsqueeze_393: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_291, -1);  primals_291 = None
    unsqueeze_394: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_393, -1);  unsqueeze_393 = None
    add_560: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_706, unsqueeze_394);  mul_706 = unsqueeze_394 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_97: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_78, primals_292, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_561: "i64[]" = torch.ops.aten.add.Tensor(primals_1275, 1)
    var_mean_97 = torch.ops.aten.var_mean.correction(convolution_97, [0, 2, 3], correction = 0, keepdim = True)
    getitem_194: "f32[1, 72, 1, 1]" = var_mean_97[0]
    getitem_195: "f32[1, 72, 1, 1]" = var_mean_97[1];  var_mean_97 = None
    add_562: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_194, 1e-05)
    rsqrt_97: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_562);  add_562 = None
    sub_97: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_97, getitem_195)
    mul_707: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_97, rsqrt_97);  sub_97 = None
    squeeze_291: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_195, [0, 2, 3]);  getitem_195 = None
    squeeze_292: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_97, [0, 2, 3]);  rsqrt_97 = None
    mul_708: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_291, 0.1)
    mul_709: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1273, 0.9)
    add_563: "f32[72]" = torch.ops.aten.add.Tensor(mul_708, mul_709);  mul_708 = mul_709 = None
    squeeze_293: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_194, [0, 2, 3]);  getitem_194 = None
    mul_710: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_293, 1.0006381620931717);  squeeze_293 = None
    mul_711: "f32[72]" = torch.ops.aten.mul.Tensor(mul_710, 0.1);  mul_710 = None
    mul_712: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1274, 0.9)
    add_564: "f32[72]" = torch.ops.aten.add.Tensor(mul_711, mul_712);  mul_711 = mul_712 = None
    unsqueeze_395: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_293, -1)
    unsqueeze_396: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_395, -1);  unsqueeze_395 = None
    mul_713: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_707, unsqueeze_396);  mul_707 = unsqueeze_396 = None
    unsqueeze_397: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_294, -1);  primals_294 = None
    unsqueeze_398: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_397, -1);  unsqueeze_397 = None
    add_565: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_713, unsqueeze_398);  mul_713 = unsqueeze_398 = None
    add_566: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_560, add_565);  add_560 = add_565 = None
    add_567: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_566, relu_86);  add_566 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_90: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_567);  add_567 = None
    alias_90: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_90)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_98: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_87, primals_295, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_568: "i64[]" = torch.ops.aten.add.Tensor(primals_1278, 1)
    var_mean_98 = torch.ops.aten.var_mean.correction(convolution_98, [0, 2, 3], correction = 0, keepdim = True)
    getitem_196: "f32[1, 18, 1, 1]" = var_mean_98[0]
    getitem_197: "f32[1, 18, 1, 1]" = var_mean_98[1];  var_mean_98 = None
    add_569: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_196, 1e-05)
    rsqrt_98: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_569);  add_569 = None
    sub_98: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_98, getitem_197)
    mul_714: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_98, rsqrt_98);  sub_98 = None
    squeeze_294: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_197, [0, 2, 3]);  getitem_197 = None
    squeeze_295: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_98, [0, 2, 3]);  rsqrt_98 = None
    mul_715: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_294, 0.1)
    mul_716: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1276, 0.9)
    add_570: "f32[18]" = torch.ops.aten.add.Tensor(mul_715, mul_716);  mul_715 = mul_716 = None
    squeeze_296: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_196, [0, 2, 3]);  getitem_196 = None
    mul_717: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_296, 1.0000398612827361);  squeeze_296 = None
    mul_718: "f32[18]" = torch.ops.aten.mul.Tensor(mul_717, 0.1);  mul_717 = None
    mul_719: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1277, 0.9)
    add_571: "f32[18]" = torch.ops.aten.add.Tensor(mul_718, mul_719);  mul_718 = mul_719 = None
    unsqueeze_399: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_296, -1)
    unsqueeze_400: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_399, -1);  unsqueeze_399 = None
    mul_720: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_714, unsqueeze_400);  mul_714 = unsqueeze_400 = None
    unsqueeze_401: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_297, -1);  primals_297 = None
    unsqueeze_402: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_401, -1);  unsqueeze_401 = None
    add_572: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_720, unsqueeze_402);  mul_720 = unsqueeze_402 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_91: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_572);  add_572 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_99: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_91, primals_298, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_573: "i64[]" = torch.ops.aten.add.Tensor(primals_1281, 1)
    var_mean_99 = torch.ops.aten.var_mean.correction(convolution_99, [0, 2, 3], correction = 0, keepdim = True)
    getitem_198: "f32[1, 18, 1, 1]" = var_mean_99[0]
    getitem_199: "f32[1, 18, 1, 1]" = var_mean_99[1];  var_mean_99 = None
    add_574: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_198, 1e-05)
    rsqrt_99: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_574);  add_574 = None
    sub_99: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_99, getitem_199)
    mul_721: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_99, rsqrt_99);  sub_99 = None
    squeeze_297: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_199, [0, 2, 3]);  getitem_199 = None
    squeeze_298: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_99, [0, 2, 3]);  rsqrt_99 = None
    mul_722: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_297, 0.1)
    mul_723: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1279, 0.9)
    add_575: "f32[18]" = torch.ops.aten.add.Tensor(mul_722, mul_723);  mul_722 = mul_723 = None
    squeeze_299: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_198, [0, 2, 3]);  getitem_198 = None
    mul_724: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_299, 1.0000398612827361);  squeeze_299 = None
    mul_725: "f32[18]" = torch.ops.aten.mul.Tensor(mul_724, 0.1);  mul_724 = None
    mul_726: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1280, 0.9)
    add_576: "f32[18]" = torch.ops.aten.add.Tensor(mul_725, mul_726);  mul_725 = mul_726 = None
    unsqueeze_403: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_299, -1)
    unsqueeze_404: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_403, -1);  unsqueeze_403 = None
    mul_727: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_721, unsqueeze_404);  mul_721 = unsqueeze_404 = None
    unsqueeze_405: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_300, -1);  primals_300 = None
    unsqueeze_406: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_405, -1);  unsqueeze_405 = None
    add_577: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_727, unsqueeze_406);  mul_727 = unsqueeze_406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_578: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_577, relu_87);  add_577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_92: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_578);  add_578 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_100: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_92, primals_301, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_579: "i64[]" = torch.ops.aten.add.Tensor(primals_1284, 1)
    var_mean_100 = torch.ops.aten.var_mean.correction(convolution_100, [0, 2, 3], correction = 0, keepdim = True)
    getitem_200: "f32[1, 18, 1, 1]" = var_mean_100[0]
    getitem_201: "f32[1, 18, 1, 1]" = var_mean_100[1];  var_mean_100 = None
    add_580: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_200, 1e-05)
    rsqrt_100: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_580);  add_580 = None
    sub_100: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_100, getitem_201)
    mul_728: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_100, rsqrt_100);  sub_100 = None
    squeeze_300: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_201, [0, 2, 3]);  getitem_201 = None
    squeeze_301: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_100, [0, 2, 3]);  rsqrt_100 = None
    mul_729: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_300, 0.1)
    mul_730: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1282, 0.9)
    add_581: "f32[18]" = torch.ops.aten.add.Tensor(mul_729, mul_730);  mul_729 = mul_730 = None
    squeeze_302: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_200, [0, 2, 3]);  getitem_200 = None
    mul_731: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_302, 1.0000398612827361);  squeeze_302 = None
    mul_732: "f32[18]" = torch.ops.aten.mul.Tensor(mul_731, 0.1);  mul_731 = None
    mul_733: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1283, 0.9)
    add_582: "f32[18]" = torch.ops.aten.add.Tensor(mul_732, mul_733);  mul_732 = mul_733 = None
    unsqueeze_407: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_302, -1)
    unsqueeze_408: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_407, -1);  unsqueeze_407 = None
    mul_734: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_728, unsqueeze_408);  mul_728 = unsqueeze_408 = None
    unsqueeze_409: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_303, -1);  primals_303 = None
    unsqueeze_410: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_409, -1);  unsqueeze_409 = None
    add_583: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_734, unsqueeze_410);  mul_734 = unsqueeze_410 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_93: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_583);  add_583 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_101: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_93, primals_304, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_584: "i64[]" = torch.ops.aten.add.Tensor(primals_1287, 1)
    var_mean_101 = torch.ops.aten.var_mean.correction(convolution_101, [0, 2, 3], correction = 0, keepdim = True)
    getitem_202: "f32[1, 18, 1, 1]" = var_mean_101[0]
    getitem_203: "f32[1, 18, 1, 1]" = var_mean_101[1];  var_mean_101 = None
    add_585: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_202, 1e-05)
    rsqrt_101: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_585);  add_585 = None
    sub_101: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_101, getitem_203)
    mul_735: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_101, rsqrt_101);  sub_101 = None
    squeeze_303: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_203, [0, 2, 3]);  getitem_203 = None
    squeeze_304: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_101, [0, 2, 3]);  rsqrt_101 = None
    mul_736: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_303, 0.1)
    mul_737: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1285, 0.9)
    add_586: "f32[18]" = torch.ops.aten.add.Tensor(mul_736, mul_737);  mul_736 = mul_737 = None
    squeeze_305: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_202, [0, 2, 3]);  getitem_202 = None
    mul_738: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_305, 1.0000398612827361);  squeeze_305 = None
    mul_739: "f32[18]" = torch.ops.aten.mul.Tensor(mul_738, 0.1);  mul_738 = None
    mul_740: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1286, 0.9)
    add_587: "f32[18]" = torch.ops.aten.add.Tensor(mul_739, mul_740);  mul_739 = mul_740 = None
    unsqueeze_411: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_305, -1)
    unsqueeze_412: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_411, -1);  unsqueeze_411 = None
    mul_741: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_735, unsqueeze_412);  mul_735 = unsqueeze_412 = None
    unsqueeze_413: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_306, -1);  primals_306 = None
    unsqueeze_414: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_413, -1);  unsqueeze_413 = None
    add_588: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_741, unsqueeze_414);  mul_741 = unsqueeze_414 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_589: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_588, relu_92);  add_588 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_94: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_589);  add_589 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_102: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_94, primals_307, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_590: "i64[]" = torch.ops.aten.add.Tensor(primals_1290, 1)
    var_mean_102 = torch.ops.aten.var_mean.correction(convolution_102, [0, 2, 3], correction = 0, keepdim = True)
    getitem_204: "f32[1, 18, 1, 1]" = var_mean_102[0]
    getitem_205: "f32[1, 18, 1, 1]" = var_mean_102[1];  var_mean_102 = None
    add_591: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_204, 1e-05)
    rsqrt_102: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_591);  add_591 = None
    sub_102: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_102, getitem_205)
    mul_742: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_102, rsqrt_102);  sub_102 = None
    squeeze_306: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_205, [0, 2, 3]);  getitem_205 = None
    squeeze_307: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_102, [0, 2, 3]);  rsqrt_102 = None
    mul_743: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_306, 0.1)
    mul_744: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1288, 0.9)
    add_592: "f32[18]" = torch.ops.aten.add.Tensor(mul_743, mul_744);  mul_743 = mul_744 = None
    squeeze_308: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_204, [0, 2, 3]);  getitem_204 = None
    mul_745: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_308, 1.0000398612827361);  squeeze_308 = None
    mul_746: "f32[18]" = torch.ops.aten.mul.Tensor(mul_745, 0.1);  mul_745 = None
    mul_747: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1289, 0.9)
    add_593: "f32[18]" = torch.ops.aten.add.Tensor(mul_746, mul_747);  mul_746 = mul_747 = None
    unsqueeze_415: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_308, -1)
    unsqueeze_416: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_415, -1);  unsqueeze_415 = None
    mul_748: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_742, unsqueeze_416);  mul_742 = unsqueeze_416 = None
    unsqueeze_417: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_309, -1);  primals_309 = None
    unsqueeze_418: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_417, -1);  unsqueeze_417 = None
    add_594: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_748, unsqueeze_418);  mul_748 = unsqueeze_418 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_95: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_594);  add_594 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_103: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_95, primals_310, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_595: "i64[]" = torch.ops.aten.add.Tensor(primals_1293, 1)
    var_mean_103 = torch.ops.aten.var_mean.correction(convolution_103, [0, 2, 3], correction = 0, keepdim = True)
    getitem_206: "f32[1, 18, 1, 1]" = var_mean_103[0]
    getitem_207: "f32[1, 18, 1, 1]" = var_mean_103[1];  var_mean_103 = None
    add_596: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_206, 1e-05)
    rsqrt_103: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_596);  add_596 = None
    sub_103: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_103, getitem_207)
    mul_749: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_103, rsqrt_103);  sub_103 = None
    squeeze_309: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_207, [0, 2, 3]);  getitem_207 = None
    squeeze_310: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_103, [0, 2, 3]);  rsqrt_103 = None
    mul_750: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_309, 0.1)
    mul_751: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1291, 0.9)
    add_597: "f32[18]" = torch.ops.aten.add.Tensor(mul_750, mul_751);  mul_750 = mul_751 = None
    squeeze_311: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_206, [0, 2, 3]);  getitem_206 = None
    mul_752: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_311, 1.0000398612827361);  squeeze_311 = None
    mul_753: "f32[18]" = torch.ops.aten.mul.Tensor(mul_752, 0.1);  mul_752 = None
    mul_754: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1292, 0.9)
    add_598: "f32[18]" = torch.ops.aten.add.Tensor(mul_753, mul_754);  mul_753 = mul_754 = None
    unsqueeze_419: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_311, -1)
    unsqueeze_420: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_419, -1);  unsqueeze_419 = None
    mul_755: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_749, unsqueeze_420);  mul_749 = unsqueeze_420 = None
    unsqueeze_421: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_312, -1);  primals_312 = None
    unsqueeze_422: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_421, -1);  unsqueeze_421 = None
    add_599: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_755, unsqueeze_422);  mul_755 = unsqueeze_422 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_600: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_599, relu_94);  add_599 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_96: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_600);  add_600 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_104: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_96, primals_313, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_601: "i64[]" = torch.ops.aten.add.Tensor(primals_1296, 1)
    var_mean_104 = torch.ops.aten.var_mean.correction(convolution_104, [0, 2, 3], correction = 0, keepdim = True)
    getitem_208: "f32[1, 18, 1, 1]" = var_mean_104[0]
    getitem_209: "f32[1, 18, 1, 1]" = var_mean_104[1];  var_mean_104 = None
    add_602: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_208, 1e-05)
    rsqrt_104: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_602);  add_602 = None
    sub_104: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_104, getitem_209)
    mul_756: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_104, rsqrt_104);  sub_104 = None
    squeeze_312: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_209, [0, 2, 3]);  getitem_209 = None
    squeeze_313: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_104, [0, 2, 3]);  rsqrt_104 = None
    mul_757: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_312, 0.1)
    mul_758: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1294, 0.9)
    add_603: "f32[18]" = torch.ops.aten.add.Tensor(mul_757, mul_758);  mul_757 = mul_758 = None
    squeeze_314: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_208, [0, 2, 3]);  getitem_208 = None
    mul_759: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_314, 1.0000398612827361);  squeeze_314 = None
    mul_760: "f32[18]" = torch.ops.aten.mul.Tensor(mul_759, 0.1);  mul_759 = None
    mul_761: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1295, 0.9)
    add_604: "f32[18]" = torch.ops.aten.add.Tensor(mul_760, mul_761);  mul_760 = mul_761 = None
    unsqueeze_423: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_314, -1)
    unsqueeze_424: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_423, -1);  unsqueeze_423 = None
    mul_762: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_756, unsqueeze_424);  mul_756 = unsqueeze_424 = None
    unsqueeze_425: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_315, -1);  primals_315 = None
    unsqueeze_426: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_425, -1);  unsqueeze_425 = None
    add_605: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_762, unsqueeze_426);  mul_762 = unsqueeze_426 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_97: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_605);  add_605 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_105: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_97, primals_316, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_606: "i64[]" = torch.ops.aten.add.Tensor(primals_1299, 1)
    var_mean_105 = torch.ops.aten.var_mean.correction(convolution_105, [0, 2, 3], correction = 0, keepdim = True)
    getitem_210: "f32[1, 18, 1, 1]" = var_mean_105[0]
    getitem_211: "f32[1, 18, 1, 1]" = var_mean_105[1];  var_mean_105 = None
    add_607: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_210, 1e-05)
    rsqrt_105: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_607);  add_607 = None
    sub_105: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_105, getitem_211)
    mul_763: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_105, rsqrt_105);  sub_105 = None
    squeeze_315: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_211, [0, 2, 3]);  getitem_211 = None
    squeeze_316: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_105, [0, 2, 3]);  rsqrt_105 = None
    mul_764: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_315, 0.1)
    mul_765: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1297, 0.9)
    add_608: "f32[18]" = torch.ops.aten.add.Tensor(mul_764, mul_765);  mul_764 = mul_765 = None
    squeeze_317: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_210, [0, 2, 3]);  getitem_210 = None
    mul_766: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_317, 1.0000398612827361);  squeeze_317 = None
    mul_767: "f32[18]" = torch.ops.aten.mul.Tensor(mul_766, 0.1);  mul_766 = None
    mul_768: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1298, 0.9)
    add_609: "f32[18]" = torch.ops.aten.add.Tensor(mul_767, mul_768);  mul_767 = mul_768 = None
    unsqueeze_427: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_317, -1)
    unsqueeze_428: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_427, -1);  unsqueeze_427 = None
    mul_769: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_763, unsqueeze_428);  mul_763 = unsqueeze_428 = None
    unsqueeze_429: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_318, -1);  primals_318 = None
    unsqueeze_430: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_429, -1);  unsqueeze_429 = None
    add_610: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_769, unsqueeze_430);  mul_769 = unsqueeze_430 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_611: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_610, relu_96);  add_610 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_98: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_611);  add_611 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_106: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_88, primals_319, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_612: "i64[]" = torch.ops.aten.add.Tensor(primals_1302, 1)
    var_mean_106 = torch.ops.aten.var_mean.correction(convolution_106, [0, 2, 3], correction = 0, keepdim = True)
    getitem_212: "f32[1, 36, 1, 1]" = var_mean_106[0]
    getitem_213: "f32[1, 36, 1, 1]" = var_mean_106[1];  var_mean_106 = None
    add_613: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_212, 1e-05)
    rsqrt_106: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_613);  add_613 = None
    sub_106: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_106, getitem_213)
    mul_770: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_106, rsqrt_106);  sub_106 = None
    squeeze_318: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_213, [0, 2, 3]);  getitem_213 = None
    squeeze_319: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_106, [0, 2, 3]);  rsqrt_106 = None
    mul_771: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_318, 0.1)
    mul_772: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1300, 0.9)
    add_614: "f32[36]" = torch.ops.aten.add.Tensor(mul_771, mul_772);  mul_771 = mul_772 = None
    squeeze_320: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_212, [0, 2, 3]);  getitem_212 = None
    mul_773: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_320, 1.0001594642002871);  squeeze_320 = None
    mul_774: "f32[36]" = torch.ops.aten.mul.Tensor(mul_773, 0.1);  mul_773 = None
    mul_775: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1301, 0.9)
    add_615: "f32[36]" = torch.ops.aten.add.Tensor(mul_774, mul_775);  mul_774 = mul_775 = None
    unsqueeze_431: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_320, -1)
    unsqueeze_432: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_431, -1);  unsqueeze_431 = None
    mul_776: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_770, unsqueeze_432);  mul_770 = unsqueeze_432 = None
    unsqueeze_433: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_321, -1);  primals_321 = None
    unsqueeze_434: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_433, -1);  unsqueeze_433 = None
    add_616: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_776, unsqueeze_434);  mul_776 = unsqueeze_434 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_99: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_616);  add_616 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_107: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_99, primals_322, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_617: "i64[]" = torch.ops.aten.add.Tensor(primals_1305, 1)
    var_mean_107 = torch.ops.aten.var_mean.correction(convolution_107, [0, 2, 3], correction = 0, keepdim = True)
    getitem_214: "f32[1, 36, 1, 1]" = var_mean_107[0]
    getitem_215: "f32[1, 36, 1, 1]" = var_mean_107[1];  var_mean_107 = None
    add_618: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_214, 1e-05)
    rsqrt_107: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_618);  add_618 = None
    sub_107: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_107, getitem_215)
    mul_777: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_107, rsqrt_107);  sub_107 = None
    squeeze_321: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_215, [0, 2, 3]);  getitem_215 = None
    squeeze_322: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_107, [0, 2, 3]);  rsqrt_107 = None
    mul_778: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_321, 0.1)
    mul_779: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1303, 0.9)
    add_619: "f32[36]" = torch.ops.aten.add.Tensor(mul_778, mul_779);  mul_778 = mul_779 = None
    squeeze_323: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_214, [0, 2, 3]);  getitem_214 = None
    mul_780: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_323, 1.0001594642002871);  squeeze_323 = None
    mul_781: "f32[36]" = torch.ops.aten.mul.Tensor(mul_780, 0.1);  mul_780 = None
    mul_782: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1304, 0.9)
    add_620: "f32[36]" = torch.ops.aten.add.Tensor(mul_781, mul_782);  mul_781 = mul_782 = None
    unsqueeze_435: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_323, -1)
    unsqueeze_436: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_435, -1);  unsqueeze_435 = None
    mul_783: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_777, unsqueeze_436);  mul_777 = unsqueeze_436 = None
    unsqueeze_437: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_324, -1);  primals_324 = None
    unsqueeze_438: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_437, -1);  unsqueeze_437 = None
    add_621: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_783, unsqueeze_438);  mul_783 = unsqueeze_438 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_622: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_621, relu_88);  add_621 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_100: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_622);  add_622 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_108: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_100, primals_325, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_623: "i64[]" = torch.ops.aten.add.Tensor(primals_1308, 1)
    var_mean_108 = torch.ops.aten.var_mean.correction(convolution_108, [0, 2, 3], correction = 0, keepdim = True)
    getitem_216: "f32[1, 36, 1, 1]" = var_mean_108[0]
    getitem_217: "f32[1, 36, 1, 1]" = var_mean_108[1];  var_mean_108 = None
    add_624: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_216, 1e-05)
    rsqrt_108: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_624);  add_624 = None
    sub_108: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_108, getitem_217)
    mul_784: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_108, rsqrt_108);  sub_108 = None
    squeeze_324: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_217, [0, 2, 3]);  getitem_217 = None
    squeeze_325: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_108, [0, 2, 3]);  rsqrt_108 = None
    mul_785: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_324, 0.1)
    mul_786: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1306, 0.9)
    add_625: "f32[36]" = torch.ops.aten.add.Tensor(mul_785, mul_786);  mul_785 = mul_786 = None
    squeeze_326: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_216, [0, 2, 3]);  getitem_216 = None
    mul_787: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_326, 1.0001594642002871);  squeeze_326 = None
    mul_788: "f32[36]" = torch.ops.aten.mul.Tensor(mul_787, 0.1);  mul_787 = None
    mul_789: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1307, 0.9)
    add_626: "f32[36]" = torch.ops.aten.add.Tensor(mul_788, mul_789);  mul_788 = mul_789 = None
    unsqueeze_439: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_326, -1)
    unsqueeze_440: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_439, -1);  unsqueeze_439 = None
    mul_790: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_784, unsqueeze_440);  mul_784 = unsqueeze_440 = None
    unsqueeze_441: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_327, -1);  primals_327 = None
    unsqueeze_442: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_441, -1);  unsqueeze_441 = None
    add_627: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_790, unsqueeze_442);  mul_790 = unsqueeze_442 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_101: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_627);  add_627 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_109: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_101, primals_328, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_628: "i64[]" = torch.ops.aten.add.Tensor(primals_1311, 1)
    var_mean_109 = torch.ops.aten.var_mean.correction(convolution_109, [0, 2, 3], correction = 0, keepdim = True)
    getitem_218: "f32[1, 36, 1, 1]" = var_mean_109[0]
    getitem_219: "f32[1, 36, 1, 1]" = var_mean_109[1];  var_mean_109 = None
    add_629: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_218, 1e-05)
    rsqrt_109: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_629);  add_629 = None
    sub_109: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_109, getitem_219)
    mul_791: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_109, rsqrt_109);  sub_109 = None
    squeeze_327: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_219, [0, 2, 3]);  getitem_219 = None
    squeeze_328: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_109, [0, 2, 3]);  rsqrt_109 = None
    mul_792: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_327, 0.1)
    mul_793: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1309, 0.9)
    add_630: "f32[36]" = torch.ops.aten.add.Tensor(mul_792, mul_793);  mul_792 = mul_793 = None
    squeeze_329: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_218, [0, 2, 3]);  getitem_218 = None
    mul_794: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_329, 1.0001594642002871);  squeeze_329 = None
    mul_795: "f32[36]" = torch.ops.aten.mul.Tensor(mul_794, 0.1);  mul_794 = None
    mul_796: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1310, 0.9)
    add_631: "f32[36]" = torch.ops.aten.add.Tensor(mul_795, mul_796);  mul_795 = mul_796 = None
    unsqueeze_443: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_329, -1)
    unsqueeze_444: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_443, -1);  unsqueeze_443 = None
    mul_797: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_791, unsqueeze_444);  mul_791 = unsqueeze_444 = None
    unsqueeze_445: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_330, -1);  primals_330 = None
    unsqueeze_446: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_445, -1);  unsqueeze_445 = None
    add_632: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_797, unsqueeze_446);  mul_797 = unsqueeze_446 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_633: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_632, relu_100);  add_632 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_102: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_633);  add_633 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_110: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_102, primals_331, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_634: "i64[]" = torch.ops.aten.add.Tensor(primals_1314, 1)
    var_mean_110 = torch.ops.aten.var_mean.correction(convolution_110, [0, 2, 3], correction = 0, keepdim = True)
    getitem_220: "f32[1, 36, 1, 1]" = var_mean_110[0]
    getitem_221: "f32[1, 36, 1, 1]" = var_mean_110[1];  var_mean_110 = None
    add_635: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_220, 1e-05)
    rsqrt_110: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_635);  add_635 = None
    sub_110: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_110, getitem_221)
    mul_798: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_110, rsqrt_110);  sub_110 = None
    squeeze_330: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_221, [0, 2, 3]);  getitem_221 = None
    squeeze_331: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_110, [0, 2, 3]);  rsqrt_110 = None
    mul_799: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_330, 0.1)
    mul_800: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1312, 0.9)
    add_636: "f32[36]" = torch.ops.aten.add.Tensor(mul_799, mul_800);  mul_799 = mul_800 = None
    squeeze_332: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_220, [0, 2, 3]);  getitem_220 = None
    mul_801: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_332, 1.0001594642002871);  squeeze_332 = None
    mul_802: "f32[36]" = torch.ops.aten.mul.Tensor(mul_801, 0.1);  mul_801 = None
    mul_803: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1313, 0.9)
    add_637: "f32[36]" = torch.ops.aten.add.Tensor(mul_802, mul_803);  mul_802 = mul_803 = None
    unsqueeze_447: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_332, -1)
    unsqueeze_448: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_447, -1);  unsqueeze_447 = None
    mul_804: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_798, unsqueeze_448);  mul_798 = unsqueeze_448 = None
    unsqueeze_449: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_333, -1);  primals_333 = None
    unsqueeze_450: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_449, -1);  unsqueeze_449 = None
    add_638: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_804, unsqueeze_450);  mul_804 = unsqueeze_450 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_103: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_638);  add_638 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_111: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_103, primals_334, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_639: "i64[]" = torch.ops.aten.add.Tensor(primals_1317, 1)
    var_mean_111 = torch.ops.aten.var_mean.correction(convolution_111, [0, 2, 3], correction = 0, keepdim = True)
    getitem_222: "f32[1, 36, 1, 1]" = var_mean_111[0]
    getitem_223: "f32[1, 36, 1, 1]" = var_mean_111[1];  var_mean_111 = None
    add_640: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_222, 1e-05)
    rsqrt_111: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_640);  add_640 = None
    sub_111: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_111, getitem_223)
    mul_805: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_111, rsqrt_111);  sub_111 = None
    squeeze_333: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_223, [0, 2, 3]);  getitem_223 = None
    squeeze_334: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_111, [0, 2, 3]);  rsqrt_111 = None
    mul_806: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_333, 0.1)
    mul_807: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1315, 0.9)
    add_641: "f32[36]" = torch.ops.aten.add.Tensor(mul_806, mul_807);  mul_806 = mul_807 = None
    squeeze_335: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_222, [0, 2, 3]);  getitem_222 = None
    mul_808: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_335, 1.0001594642002871);  squeeze_335 = None
    mul_809: "f32[36]" = torch.ops.aten.mul.Tensor(mul_808, 0.1);  mul_808 = None
    mul_810: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1316, 0.9)
    add_642: "f32[36]" = torch.ops.aten.add.Tensor(mul_809, mul_810);  mul_809 = mul_810 = None
    unsqueeze_451: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_335, -1)
    unsqueeze_452: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_451, -1);  unsqueeze_451 = None
    mul_811: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_805, unsqueeze_452);  mul_805 = unsqueeze_452 = None
    unsqueeze_453: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_336, -1);  primals_336 = None
    unsqueeze_454: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_453, -1);  unsqueeze_453 = None
    add_643: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_811, unsqueeze_454);  mul_811 = unsqueeze_454 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_644: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_643, relu_102);  add_643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_104: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_644);  add_644 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_112: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_104, primals_337, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_645: "i64[]" = torch.ops.aten.add.Tensor(primals_1320, 1)
    var_mean_112 = torch.ops.aten.var_mean.correction(convolution_112, [0, 2, 3], correction = 0, keepdim = True)
    getitem_224: "f32[1, 36, 1, 1]" = var_mean_112[0]
    getitem_225: "f32[1, 36, 1, 1]" = var_mean_112[1];  var_mean_112 = None
    add_646: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_224, 1e-05)
    rsqrt_112: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_646);  add_646 = None
    sub_112: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_112, getitem_225)
    mul_812: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_112, rsqrt_112);  sub_112 = None
    squeeze_336: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_225, [0, 2, 3]);  getitem_225 = None
    squeeze_337: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_112, [0, 2, 3]);  rsqrt_112 = None
    mul_813: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_336, 0.1)
    mul_814: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1318, 0.9)
    add_647: "f32[36]" = torch.ops.aten.add.Tensor(mul_813, mul_814);  mul_813 = mul_814 = None
    squeeze_338: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_224, [0, 2, 3]);  getitem_224 = None
    mul_815: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_338, 1.0001594642002871);  squeeze_338 = None
    mul_816: "f32[36]" = torch.ops.aten.mul.Tensor(mul_815, 0.1);  mul_815 = None
    mul_817: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1319, 0.9)
    add_648: "f32[36]" = torch.ops.aten.add.Tensor(mul_816, mul_817);  mul_816 = mul_817 = None
    unsqueeze_455: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_338, -1)
    unsqueeze_456: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_455, -1);  unsqueeze_455 = None
    mul_818: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_812, unsqueeze_456);  mul_812 = unsqueeze_456 = None
    unsqueeze_457: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_339, -1);  primals_339 = None
    unsqueeze_458: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_457, -1);  unsqueeze_457 = None
    add_649: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_818, unsqueeze_458);  mul_818 = unsqueeze_458 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_105: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_649);  add_649 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_113: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_105, primals_340, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_650: "i64[]" = torch.ops.aten.add.Tensor(primals_1323, 1)
    var_mean_113 = torch.ops.aten.var_mean.correction(convolution_113, [0, 2, 3], correction = 0, keepdim = True)
    getitem_226: "f32[1, 36, 1, 1]" = var_mean_113[0]
    getitem_227: "f32[1, 36, 1, 1]" = var_mean_113[1];  var_mean_113 = None
    add_651: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_226, 1e-05)
    rsqrt_113: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_651);  add_651 = None
    sub_113: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_113, getitem_227)
    mul_819: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_113, rsqrt_113);  sub_113 = None
    squeeze_339: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_227, [0, 2, 3]);  getitem_227 = None
    squeeze_340: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_113, [0, 2, 3]);  rsqrt_113 = None
    mul_820: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_339, 0.1)
    mul_821: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1321, 0.9)
    add_652: "f32[36]" = torch.ops.aten.add.Tensor(mul_820, mul_821);  mul_820 = mul_821 = None
    squeeze_341: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_226, [0, 2, 3]);  getitem_226 = None
    mul_822: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_341, 1.0001594642002871);  squeeze_341 = None
    mul_823: "f32[36]" = torch.ops.aten.mul.Tensor(mul_822, 0.1);  mul_822 = None
    mul_824: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1322, 0.9)
    add_653: "f32[36]" = torch.ops.aten.add.Tensor(mul_823, mul_824);  mul_823 = mul_824 = None
    unsqueeze_459: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_341, -1)
    unsqueeze_460: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_459, -1);  unsqueeze_459 = None
    mul_825: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_819, unsqueeze_460);  mul_819 = unsqueeze_460 = None
    unsqueeze_461: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_342, -1);  primals_342 = None
    unsqueeze_462: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_461, -1);  unsqueeze_461 = None
    add_654: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_825, unsqueeze_462);  mul_825 = unsqueeze_462 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_655: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_654, relu_104);  add_654 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_106: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_655);  add_655 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_114: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_90, primals_343, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_656: "i64[]" = torch.ops.aten.add.Tensor(primals_1326, 1)
    var_mean_114 = torch.ops.aten.var_mean.correction(convolution_114, [0, 2, 3], correction = 0, keepdim = True)
    getitem_228: "f32[1, 72, 1, 1]" = var_mean_114[0]
    getitem_229: "f32[1, 72, 1, 1]" = var_mean_114[1];  var_mean_114 = None
    add_657: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_228, 1e-05)
    rsqrt_114: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_657);  add_657 = None
    sub_114: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_114, getitem_229)
    mul_826: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_114, rsqrt_114);  sub_114 = None
    squeeze_342: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_229, [0, 2, 3]);  getitem_229 = None
    squeeze_343: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_114, [0, 2, 3]);  rsqrt_114 = None
    mul_827: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_342, 0.1)
    mul_828: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1324, 0.9)
    add_658: "f32[72]" = torch.ops.aten.add.Tensor(mul_827, mul_828);  mul_827 = mul_828 = None
    squeeze_344: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_228, [0, 2, 3]);  getitem_228 = None
    mul_829: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_344, 1.0006381620931717);  squeeze_344 = None
    mul_830: "f32[72]" = torch.ops.aten.mul.Tensor(mul_829, 0.1);  mul_829 = None
    mul_831: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1325, 0.9)
    add_659: "f32[72]" = torch.ops.aten.add.Tensor(mul_830, mul_831);  mul_830 = mul_831 = None
    unsqueeze_463: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_344, -1)
    unsqueeze_464: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_463, -1);  unsqueeze_463 = None
    mul_832: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_826, unsqueeze_464);  mul_826 = unsqueeze_464 = None
    unsqueeze_465: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_345, -1);  primals_345 = None
    unsqueeze_466: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_465, -1);  unsqueeze_465 = None
    add_660: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_832, unsqueeze_466);  mul_832 = unsqueeze_466 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_107: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_660);  add_660 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_115: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_107, primals_346, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_661: "i64[]" = torch.ops.aten.add.Tensor(primals_1329, 1)
    var_mean_115 = torch.ops.aten.var_mean.correction(convolution_115, [0, 2, 3], correction = 0, keepdim = True)
    getitem_230: "f32[1, 72, 1, 1]" = var_mean_115[0]
    getitem_231: "f32[1, 72, 1, 1]" = var_mean_115[1];  var_mean_115 = None
    add_662: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_230, 1e-05)
    rsqrt_115: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_662);  add_662 = None
    sub_115: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_115, getitem_231)
    mul_833: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_115, rsqrt_115);  sub_115 = None
    squeeze_345: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_231, [0, 2, 3]);  getitem_231 = None
    squeeze_346: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_115, [0, 2, 3]);  rsqrt_115 = None
    mul_834: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_345, 0.1)
    mul_835: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1327, 0.9)
    add_663: "f32[72]" = torch.ops.aten.add.Tensor(mul_834, mul_835);  mul_834 = mul_835 = None
    squeeze_347: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_230, [0, 2, 3]);  getitem_230 = None
    mul_836: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_347, 1.0006381620931717);  squeeze_347 = None
    mul_837: "f32[72]" = torch.ops.aten.mul.Tensor(mul_836, 0.1);  mul_836 = None
    mul_838: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1328, 0.9)
    add_664: "f32[72]" = torch.ops.aten.add.Tensor(mul_837, mul_838);  mul_837 = mul_838 = None
    unsqueeze_467: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_347, -1)
    unsqueeze_468: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_467, -1);  unsqueeze_467 = None
    mul_839: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_833, unsqueeze_468);  mul_833 = unsqueeze_468 = None
    unsqueeze_469: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_348, -1);  primals_348 = None
    unsqueeze_470: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_469, -1);  unsqueeze_469 = None
    add_665: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_839, unsqueeze_470);  mul_839 = unsqueeze_470 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_666: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_665, relu_90);  add_665 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_108: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_666);  add_666 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_116: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_108, primals_349, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_667: "i64[]" = torch.ops.aten.add.Tensor(primals_1332, 1)
    var_mean_116 = torch.ops.aten.var_mean.correction(convolution_116, [0, 2, 3], correction = 0, keepdim = True)
    getitem_232: "f32[1, 72, 1, 1]" = var_mean_116[0]
    getitem_233: "f32[1, 72, 1, 1]" = var_mean_116[1];  var_mean_116 = None
    add_668: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_232, 1e-05)
    rsqrt_116: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_668);  add_668 = None
    sub_116: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_116, getitem_233)
    mul_840: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_116, rsqrt_116);  sub_116 = None
    squeeze_348: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_233, [0, 2, 3]);  getitem_233 = None
    squeeze_349: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_116, [0, 2, 3]);  rsqrt_116 = None
    mul_841: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_348, 0.1)
    mul_842: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1330, 0.9)
    add_669: "f32[72]" = torch.ops.aten.add.Tensor(mul_841, mul_842);  mul_841 = mul_842 = None
    squeeze_350: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_232, [0, 2, 3]);  getitem_232 = None
    mul_843: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_350, 1.0006381620931717);  squeeze_350 = None
    mul_844: "f32[72]" = torch.ops.aten.mul.Tensor(mul_843, 0.1);  mul_843 = None
    mul_845: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1331, 0.9)
    add_670: "f32[72]" = torch.ops.aten.add.Tensor(mul_844, mul_845);  mul_844 = mul_845 = None
    unsqueeze_471: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_350, -1)
    unsqueeze_472: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_471, -1);  unsqueeze_471 = None
    mul_846: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_840, unsqueeze_472);  mul_840 = unsqueeze_472 = None
    unsqueeze_473: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_351, -1);  primals_351 = None
    unsqueeze_474: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_473, -1);  unsqueeze_473 = None
    add_671: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_846, unsqueeze_474);  mul_846 = unsqueeze_474 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_109: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_671);  add_671 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_117: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_109, primals_352, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_672: "i64[]" = torch.ops.aten.add.Tensor(primals_1335, 1)
    var_mean_117 = torch.ops.aten.var_mean.correction(convolution_117, [0, 2, 3], correction = 0, keepdim = True)
    getitem_234: "f32[1, 72, 1, 1]" = var_mean_117[0]
    getitem_235: "f32[1, 72, 1, 1]" = var_mean_117[1];  var_mean_117 = None
    add_673: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_234, 1e-05)
    rsqrt_117: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_673);  add_673 = None
    sub_117: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_117, getitem_235)
    mul_847: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_117, rsqrt_117);  sub_117 = None
    squeeze_351: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_235, [0, 2, 3]);  getitem_235 = None
    squeeze_352: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_117, [0, 2, 3]);  rsqrt_117 = None
    mul_848: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_351, 0.1)
    mul_849: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1333, 0.9)
    add_674: "f32[72]" = torch.ops.aten.add.Tensor(mul_848, mul_849);  mul_848 = mul_849 = None
    squeeze_353: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_234, [0, 2, 3]);  getitem_234 = None
    mul_850: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_353, 1.0006381620931717);  squeeze_353 = None
    mul_851: "f32[72]" = torch.ops.aten.mul.Tensor(mul_850, 0.1);  mul_850 = None
    mul_852: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1334, 0.9)
    add_675: "f32[72]" = torch.ops.aten.add.Tensor(mul_851, mul_852);  mul_851 = mul_852 = None
    unsqueeze_475: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_353, -1)
    unsqueeze_476: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_475, -1);  unsqueeze_475 = None
    mul_853: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_847, unsqueeze_476);  mul_847 = unsqueeze_476 = None
    unsqueeze_477: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_354, -1);  primals_354 = None
    unsqueeze_478: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_477, -1);  unsqueeze_477 = None
    add_676: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_853, unsqueeze_478);  mul_853 = unsqueeze_478 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_677: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_676, relu_108);  add_676 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_110: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_677);  add_677 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_118: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_110, primals_355, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_678: "i64[]" = torch.ops.aten.add.Tensor(primals_1338, 1)
    var_mean_118 = torch.ops.aten.var_mean.correction(convolution_118, [0, 2, 3], correction = 0, keepdim = True)
    getitem_236: "f32[1, 72, 1, 1]" = var_mean_118[0]
    getitem_237: "f32[1, 72, 1, 1]" = var_mean_118[1];  var_mean_118 = None
    add_679: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_236, 1e-05)
    rsqrt_118: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_679);  add_679 = None
    sub_118: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_118, getitem_237)
    mul_854: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_118, rsqrt_118);  sub_118 = None
    squeeze_354: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_237, [0, 2, 3]);  getitem_237 = None
    squeeze_355: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_118, [0, 2, 3]);  rsqrt_118 = None
    mul_855: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_354, 0.1)
    mul_856: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1336, 0.9)
    add_680: "f32[72]" = torch.ops.aten.add.Tensor(mul_855, mul_856);  mul_855 = mul_856 = None
    squeeze_356: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_236, [0, 2, 3]);  getitem_236 = None
    mul_857: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_356, 1.0006381620931717);  squeeze_356 = None
    mul_858: "f32[72]" = torch.ops.aten.mul.Tensor(mul_857, 0.1);  mul_857 = None
    mul_859: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1337, 0.9)
    add_681: "f32[72]" = torch.ops.aten.add.Tensor(mul_858, mul_859);  mul_858 = mul_859 = None
    unsqueeze_479: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_356, -1)
    unsqueeze_480: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_479, -1);  unsqueeze_479 = None
    mul_860: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_854, unsqueeze_480);  mul_854 = unsqueeze_480 = None
    unsqueeze_481: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_357, -1);  primals_357 = None
    unsqueeze_482: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_481, -1);  unsqueeze_481 = None
    add_682: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_860, unsqueeze_482);  mul_860 = unsqueeze_482 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_111: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_682);  add_682 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_119: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_111, primals_358, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_683: "i64[]" = torch.ops.aten.add.Tensor(primals_1341, 1)
    var_mean_119 = torch.ops.aten.var_mean.correction(convolution_119, [0, 2, 3], correction = 0, keepdim = True)
    getitem_238: "f32[1, 72, 1, 1]" = var_mean_119[0]
    getitem_239: "f32[1, 72, 1, 1]" = var_mean_119[1];  var_mean_119 = None
    add_684: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_238, 1e-05)
    rsqrt_119: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_684);  add_684 = None
    sub_119: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_119, getitem_239)
    mul_861: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_119, rsqrt_119);  sub_119 = None
    squeeze_357: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_239, [0, 2, 3]);  getitem_239 = None
    squeeze_358: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_119, [0, 2, 3]);  rsqrt_119 = None
    mul_862: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_357, 0.1)
    mul_863: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1339, 0.9)
    add_685: "f32[72]" = torch.ops.aten.add.Tensor(mul_862, mul_863);  mul_862 = mul_863 = None
    squeeze_359: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_238, [0, 2, 3]);  getitem_238 = None
    mul_864: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_359, 1.0006381620931717);  squeeze_359 = None
    mul_865: "f32[72]" = torch.ops.aten.mul.Tensor(mul_864, 0.1);  mul_864 = None
    mul_866: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1340, 0.9)
    add_686: "f32[72]" = torch.ops.aten.add.Tensor(mul_865, mul_866);  mul_865 = mul_866 = None
    unsqueeze_483: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_359, -1)
    unsqueeze_484: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_483, -1);  unsqueeze_483 = None
    mul_867: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_861, unsqueeze_484);  mul_861 = unsqueeze_484 = None
    unsqueeze_485: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_360, -1);  primals_360 = None
    unsqueeze_486: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_485, -1);  unsqueeze_485 = None
    add_687: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_867, unsqueeze_486);  mul_867 = unsqueeze_486 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_688: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_687, relu_110);  add_687 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_112: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_688);  add_688 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_120: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_112, primals_361, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_689: "i64[]" = torch.ops.aten.add.Tensor(primals_1344, 1)
    var_mean_120 = torch.ops.aten.var_mean.correction(convolution_120, [0, 2, 3], correction = 0, keepdim = True)
    getitem_240: "f32[1, 72, 1, 1]" = var_mean_120[0]
    getitem_241: "f32[1, 72, 1, 1]" = var_mean_120[1];  var_mean_120 = None
    add_690: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_240, 1e-05)
    rsqrt_120: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_690);  add_690 = None
    sub_120: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_120, getitem_241)
    mul_868: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_120, rsqrt_120);  sub_120 = None
    squeeze_360: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_241, [0, 2, 3]);  getitem_241 = None
    squeeze_361: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_120, [0, 2, 3]);  rsqrt_120 = None
    mul_869: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_360, 0.1)
    mul_870: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1342, 0.9)
    add_691: "f32[72]" = torch.ops.aten.add.Tensor(mul_869, mul_870);  mul_869 = mul_870 = None
    squeeze_362: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_240, [0, 2, 3]);  getitem_240 = None
    mul_871: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_362, 1.0006381620931717);  squeeze_362 = None
    mul_872: "f32[72]" = torch.ops.aten.mul.Tensor(mul_871, 0.1);  mul_871 = None
    mul_873: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1343, 0.9)
    add_692: "f32[72]" = torch.ops.aten.add.Tensor(mul_872, mul_873);  mul_872 = mul_873 = None
    unsqueeze_487: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_362, -1)
    unsqueeze_488: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_487, -1);  unsqueeze_487 = None
    mul_874: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_868, unsqueeze_488);  mul_868 = unsqueeze_488 = None
    unsqueeze_489: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_363, -1);  primals_363 = None
    unsqueeze_490: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_489, -1);  unsqueeze_489 = None
    add_693: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_874, unsqueeze_490);  mul_874 = unsqueeze_490 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_113: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_693);  add_693 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_121: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_113, primals_364, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_694: "i64[]" = torch.ops.aten.add.Tensor(primals_1347, 1)
    var_mean_121 = torch.ops.aten.var_mean.correction(convolution_121, [0, 2, 3], correction = 0, keepdim = True)
    getitem_242: "f32[1, 72, 1, 1]" = var_mean_121[0]
    getitem_243: "f32[1, 72, 1, 1]" = var_mean_121[1];  var_mean_121 = None
    add_695: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_242, 1e-05)
    rsqrt_121: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_695);  add_695 = None
    sub_121: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_121, getitem_243)
    mul_875: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_121, rsqrt_121);  sub_121 = None
    squeeze_363: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_243, [0, 2, 3]);  getitem_243 = None
    squeeze_364: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_121, [0, 2, 3]);  rsqrt_121 = None
    mul_876: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_363, 0.1)
    mul_877: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1345, 0.9)
    add_696: "f32[72]" = torch.ops.aten.add.Tensor(mul_876, mul_877);  mul_876 = mul_877 = None
    squeeze_365: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_242, [0, 2, 3]);  getitem_242 = None
    mul_878: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_365, 1.0006381620931717);  squeeze_365 = None
    mul_879: "f32[72]" = torch.ops.aten.mul.Tensor(mul_878, 0.1);  mul_878 = None
    mul_880: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1346, 0.9)
    add_697: "f32[72]" = torch.ops.aten.add.Tensor(mul_879, mul_880);  mul_879 = mul_880 = None
    unsqueeze_491: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_365, -1)
    unsqueeze_492: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_491, -1);  unsqueeze_491 = None
    mul_881: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_875, unsqueeze_492);  mul_875 = unsqueeze_492 = None
    unsqueeze_493: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_366, -1);  primals_366 = None
    unsqueeze_494: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_493, -1);  unsqueeze_493 = None
    add_698: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_881, unsqueeze_494);  mul_881 = unsqueeze_494 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_699: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_698, relu_112);  add_698 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_114: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_699);  add_699 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_122: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_106, primals_367, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_700: "i64[]" = torch.ops.aten.add.Tensor(primals_1350, 1)
    var_mean_122 = torch.ops.aten.var_mean.correction(convolution_122, [0, 2, 3], correction = 0, keepdim = True)
    getitem_244: "f32[1, 18, 1, 1]" = var_mean_122[0]
    getitem_245: "f32[1, 18, 1, 1]" = var_mean_122[1];  var_mean_122 = None
    add_701: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_244, 1e-05)
    rsqrt_122: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_701);  add_701 = None
    sub_122: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_122, getitem_245)
    mul_882: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_122, rsqrt_122);  sub_122 = None
    squeeze_366: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_245, [0, 2, 3]);  getitem_245 = None
    squeeze_367: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_122, [0, 2, 3]);  rsqrt_122 = None
    mul_883: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_366, 0.1)
    mul_884: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1348, 0.9)
    add_702: "f32[18]" = torch.ops.aten.add.Tensor(mul_883, mul_884);  mul_883 = mul_884 = None
    squeeze_368: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_244, [0, 2, 3]);  getitem_244 = None
    mul_885: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_368, 1.0001594642002871);  squeeze_368 = None
    mul_886: "f32[18]" = torch.ops.aten.mul.Tensor(mul_885, 0.1);  mul_885 = None
    mul_887: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1349, 0.9)
    add_703: "f32[18]" = torch.ops.aten.add.Tensor(mul_886, mul_887);  mul_886 = mul_887 = None
    unsqueeze_495: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_368, -1)
    unsqueeze_496: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_495, -1);  unsqueeze_495 = None
    mul_888: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_882, unsqueeze_496);  mul_882 = unsqueeze_496 = None
    unsqueeze_497: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_369, -1);  primals_369 = None
    unsqueeze_498: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_497, -1);  unsqueeze_497 = None
    add_704: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_888, unsqueeze_498);  mul_888 = unsqueeze_498 = None
    iota_14: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_28: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_14, torch.float32);  iota_14 = None
    mul_889: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_28, 1);  convert_element_type_28 = None
    add_705: "f32[56]" = torch.ops.aten.add.Tensor(mul_889, 0);  mul_889 = None
    add_706: "f32[56]" = torch.ops.aten.add.Tensor(add_705, 0.0);  add_705 = None
    mul_890: "f32[56]" = torch.ops.aten.mul.Tensor(add_706, 0.5);  add_706 = None
    convert_element_type_29: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_890, torch.int64);  mul_890 = None
    unsqueeze_499: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_29, -1);  convert_element_type_29 = None
    iota_15: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_30: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_15, torch.float32);  iota_15 = None
    mul_891: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_30, 1);  convert_element_type_30 = None
    add_707: "f32[56]" = torch.ops.aten.add.Tensor(mul_891, 0);  mul_891 = None
    add_708: "f32[56]" = torch.ops.aten.add.Tensor(add_707, 0.0);  add_707 = None
    mul_892: "f32[56]" = torch.ops.aten.mul.Tensor(add_708, 0.5);  add_708 = None
    convert_element_type_31: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_892, torch.int64);  mul_892 = None
    _unsafe_index_7: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_704, [None, None, unsqueeze_499, convert_element_type_31]);  add_704 = None
    add_709: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_98, _unsafe_index_7);  _unsafe_index_7 = None
    convolution_123: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_114, primals_370, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_710: "i64[]" = torch.ops.aten.add.Tensor(primals_1353, 1)
    var_mean_123 = torch.ops.aten.var_mean.correction(convolution_123, [0, 2, 3], correction = 0, keepdim = True)
    getitem_246: "f32[1, 18, 1, 1]" = var_mean_123[0]
    getitem_247: "f32[1, 18, 1, 1]" = var_mean_123[1];  var_mean_123 = None
    add_711: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_246, 1e-05)
    rsqrt_123: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_711);  add_711 = None
    sub_123: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_123, getitem_247)
    mul_893: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_123, rsqrt_123);  sub_123 = None
    squeeze_369: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_247, [0, 2, 3]);  getitem_247 = None
    squeeze_370: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_123, [0, 2, 3]);  rsqrt_123 = None
    mul_894: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_369, 0.1)
    mul_895: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1351, 0.9)
    add_712: "f32[18]" = torch.ops.aten.add.Tensor(mul_894, mul_895);  mul_894 = mul_895 = None
    squeeze_371: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_246, [0, 2, 3]);  getitem_246 = None
    mul_896: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_371, 1.0006381620931717);  squeeze_371 = None
    mul_897: "f32[18]" = torch.ops.aten.mul.Tensor(mul_896, 0.1);  mul_896 = None
    mul_898: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1352, 0.9)
    add_713: "f32[18]" = torch.ops.aten.add.Tensor(mul_897, mul_898);  mul_897 = mul_898 = None
    unsqueeze_500: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_371, -1)
    unsqueeze_501: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_500, -1);  unsqueeze_500 = None
    mul_899: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_893, unsqueeze_501);  mul_893 = unsqueeze_501 = None
    unsqueeze_502: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_372, -1);  primals_372 = None
    unsqueeze_503: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_502, -1);  unsqueeze_502 = None
    add_714: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_899, unsqueeze_503);  mul_899 = unsqueeze_503 = None
    iota_16: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_32: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_16, torch.float32);  iota_16 = None
    mul_900: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_32, 1);  convert_element_type_32 = None
    add_715: "f32[56]" = torch.ops.aten.add.Tensor(mul_900, 0);  mul_900 = None
    add_716: "f32[56]" = torch.ops.aten.add.Tensor(add_715, 0.0);  add_715 = None
    mul_901: "f32[56]" = torch.ops.aten.mul.Tensor(add_716, 0.25);  add_716 = None
    convert_element_type_33: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_901, torch.int64);  mul_901 = None
    unsqueeze_504: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_33, -1);  convert_element_type_33 = None
    iota_17: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_34: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_17, torch.float32);  iota_17 = None
    mul_902: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_34, 1);  convert_element_type_34 = None
    add_717: "f32[56]" = torch.ops.aten.add.Tensor(mul_902, 0);  mul_902 = None
    add_718: "f32[56]" = torch.ops.aten.add.Tensor(add_717, 0.0);  add_717 = None
    mul_903: "f32[56]" = torch.ops.aten.mul.Tensor(add_718, 0.25);  add_718 = None
    convert_element_type_35: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_903, torch.int64);  mul_903 = None
    _unsafe_index_8: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_714, [None, None, unsqueeze_504, convert_element_type_35]);  add_714 = None
    add_719: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_709, _unsafe_index_8);  add_709 = _unsafe_index_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_115: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_719);  add_719 = None
    alias_115: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_115)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_124: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_98, primals_373, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_720: "i64[]" = torch.ops.aten.add.Tensor(primals_1356, 1)
    var_mean_124 = torch.ops.aten.var_mean.correction(convolution_124, [0, 2, 3], correction = 0, keepdim = True)
    getitem_248: "f32[1, 36, 1, 1]" = var_mean_124[0]
    getitem_249: "f32[1, 36, 1, 1]" = var_mean_124[1];  var_mean_124 = None
    add_721: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_248, 1e-05)
    rsqrt_124: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_721);  add_721 = None
    sub_124: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_124, getitem_249)
    mul_904: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_124, rsqrt_124);  sub_124 = None
    squeeze_372: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_249, [0, 2, 3]);  getitem_249 = None
    squeeze_373: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_124, [0, 2, 3]);  rsqrt_124 = None
    mul_905: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_372, 0.1)
    mul_906: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1354, 0.9)
    add_722: "f32[36]" = torch.ops.aten.add.Tensor(mul_905, mul_906);  mul_905 = mul_906 = None
    squeeze_374: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_248, [0, 2, 3]);  getitem_248 = None
    mul_907: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_374, 1.0001594642002871);  squeeze_374 = None
    mul_908: "f32[36]" = torch.ops.aten.mul.Tensor(mul_907, 0.1);  mul_907 = None
    mul_909: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1355, 0.9)
    add_723: "f32[36]" = torch.ops.aten.add.Tensor(mul_908, mul_909);  mul_908 = mul_909 = None
    unsqueeze_505: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_374, -1)
    unsqueeze_506: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_505, -1);  unsqueeze_505 = None
    mul_910: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_904, unsqueeze_506);  mul_904 = unsqueeze_506 = None
    unsqueeze_507: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_375, -1);  primals_375 = None
    unsqueeze_508: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_507, -1);  unsqueeze_507 = None
    add_724: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_910, unsqueeze_508);  mul_910 = unsqueeze_508 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_725: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_724, relu_106);  add_724 = None
    convolution_125: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_114, primals_376, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_726: "i64[]" = torch.ops.aten.add.Tensor(primals_1359, 1)
    var_mean_125 = torch.ops.aten.var_mean.correction(convolution_125, [0, 2, 3], correction = 0, keepdim = True)
    getitem_250: "f32[1, 36, 1, 1]" = var_mean_125[0]
    getitem_251: "f32[1, 36, 1, 1]" = var_mean_125[1];  var_mean_125 = None
    add_727: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_250, 1e-05)
    rsqrt_125: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_727);  add_727 = None
    sub_125: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_125, getitem_251)
    mul_911: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_125, rsqrt_125);  sub_125 = None
    squeeze_375: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_251, [0, 2, 3]);  getitem_251 = None
    squeeze_376: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_125, [0, 2, 3]);  rsqrt_125 = None
    mul_912: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_375, 0.1)
    mul_913: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1357, 0.9)
    add_728: "f32[36]" = torch.ops.aten.add.Tensor(mul_912, mul_913);  mul_912 = mul_913 = None
    squeeze_377: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_250, [0, 2, 3]);  getitem_250 = None
    mul_914: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_377, 1.0006381620931717);  squeeze_377 = None
    mul_915: "f32[36]" = torch.ops.aten.mul.Tensor(mul_914, 0.1);  mul_914 = None
    mul_916: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1358, 0.9)
    add_729: "f32[36]" = torch.ops.aten.add.Tensor(mul_915, mul_916);  mul_915 = mul_916 = None
    unsqueeze_509: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_377, -1)
    unsqueeze_510: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_509, -1);  unsqueeze_509 = None
    mul_917: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_911, unsqueeze_510);  mul_911 = unsqueeze_510 = None
    unsqueeze_511: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_378, -1);  primals_378 = None
    unsqueeze_512: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_511, -1);  unsqueeze_511 = None
    add_730: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_917, unsqueeze_512);  mul_917 = unsqueeze_512 = None
    iota_18: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_36: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_18, torch.float32);  iota_18 = None
    mul_918: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_36, 1);  convert_element_type_36 = None
    add_731: "f32[28]" = torch.ops.aten.add.Tensor(mul_918, 0);  mul_918 = None
    add_732: "f32[28]" = torch.ops.aten.add.Tensor(add_731, 0.0);  add_731 = None
    mul_919: "f32[28]" = torch.ops.aten.mul.Tensor(add_732, 0.5);  add_732 = None
    convert_element_type_37: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_919, torch.int64);  mul_919 = None
    unsqueeze_513: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_37, -1);  convert_element_type_37 = None
    iota_19: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_38: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_19, torch.float32);  iota_19 = None
    mul_920: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_38, 1);  convert_element_type_38 = None
    add_733: "f32[28]" = torch.ops.aten.add.Tensor(mul_920, 0);  mul_920 = None
    add_734: "f32[28]" = torch.ops.aten.add.Tensor(add_733, 0.0);  add_733 = None
    mul_921: "f32[28]" = torch.ops.aten.mul.Tensor(add_734, 0.5);  add_734 = None
    convert_element_type_39: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_921, torch.int64);  mul_921 = None
    _unsafe_index_9: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_730, [None, None, unsqueeze_513, convert_element_type_39]);  add_730 = None
    add_735: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_725, _unsafe_index_9);  add_725 = _unsafe_index_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_116: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_735);  add_735 = None
    alias_116: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_116)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_126: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_98, primals_379, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_736: "i64[]" = torch.ops.aten.add.Tensor(primals_1362, 1)
    var_mean_126 = torch.ops.aten.var_mean.correction(convolution_126, [0, 2, 3], correction = 0, keepdim = True)
    getitem_252: "f32[1, 18, 1, 1]" = var_mean_126[0]
    getitem_253: "f32[1, 18, 1, 1]" = var_mean_126[1];  var_mean_126 = None
    add_737: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_252, 1e-05)
    rsqrt_126: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_737);  add_737 = None
    sub_126: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_126, getitem_253)
    mul_922: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_126, rsqrt_126);  sub_126 = None
    squeeze_378: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_253, [0, 2, 3]);  getitem_253 = None
    squeeze_379: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_126, [0, 2, 3]);  rsqrt_126 = None
    mul_923: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_378, 0.1)
    mul_924: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1360, 0.9)
    add_738: "f32[18]" = torch.ops.aten.add.Tensor(mul_923, mul_924);  mul_923 = mul_924 = None
    squeeze_380: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_252, [0, 2, 3]);  getitem_252 = None
    mul_925: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_380, 1.0001594642002871);  squeeze_380 = None
    mul_926: "f32[18]" = torch.ops.aten.mul.Tensor(mul_925, 0.1);  mul_925 = None
    mul_927: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1361, 0.9)
    add_739: "f32[18]" = torch.ops.aten.add.Tensor(mul_926, mul_927);  mul_926 = mul_927 = None
    unsqueeze_514: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_380, -1)
    unsqueeze_515: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_514, -1);  unsqueeze_514 = None
    mul_928: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_922, unsqueeze_515);  mul_922 = unsqueeze_515 = None
    unsqueeze_516: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_381, -1);  primals_381 = None
    unsqueeze_517: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_516, -1);  unsqueeze_516 = None
    add_740: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_928, unsqueeze_517);  mul_928 = unsqueeze_517 = None
    relu_117: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_740);  add_740 = None
    alias_117: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_117)
    convolution_127: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_117, primals_382, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_741: "i64[]" = torch.ops.aten.add.Tensor(primals_1365, 1)
    var_mean_127 = torch.ops.aten.var_mean.correction(convolution_127, [0, 2, 3], correction = 0, keepdim = True)
    getitem_254: "f32[1, 72, 1, 1]" = var_mean_127[0]
    getitem_255: "f32[1, 72, 1, 1]" = var_mean_127[1];  var_mean_127 = None
    add_742: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_254, 1e-05)
    rsqrt_127: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_742);  add_742 = None
    sub_127: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_127, getitem_255)
    mul_929: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_127, rsqrt_127);  sub_127 = None
    squeeze_381: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_255, [0, 2, 3]);  getitem_255 = None
    squeeze_382: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_127, [0, 2, 3]);  rsqrt_127 = None
    mul_930: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_381, 0.1)
    mul_931: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1363, 0.9)
    add_743: "f32[72]" = torch.ops.aten.add.Tensor(mul_930, mul_931);  mul_930 = mul_931 = None
    squeeze_383: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_254, [0, 2, 3]);  getitem_254 = None
    mul_932: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_383, 1.0006381620931717);  squeeze_383 = None
    mul_933: "f32[72]" = torch.ops.aten.mul.Tensor(mul_932, 0.1);  mul_932 = None
    mul_934: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1364, 0.9)
    add_744: "f32[72]" = torch.ops.aten.add.Tensor(mul_933, mul_934);  mul_933 = mul_934 = None
    unsqueeze_518: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_383, -1)
    unsqueeze_519: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_518, -1);  unsqueeze_518 = None
    mul_935: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_929, unsqueeze_519);  mul_929 = unsqueeze_519 = None
    unsqueeze_520: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_384, -1);  primals_384 = None
    unsqueeze_521: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_520, -1);  unsqueeze_520 = None
    add_745: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_935, unsqueeze_521);  mul_935 = unsqueeze_521 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_128: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_106, primals_385, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_746: "i64[]" = torch.ops.aten.add.Tensor(primals_1368, 1)
    var_mean_128 = torch.ops.aten.var_mean.correction(convolution_128, [0, 2, 3], correction = 0, keepdim = True)
    getitem_256: "f32[1, 72, 1, 1]" = var_mean_128[0]
    getitem_257: "f32[1, 72, 1, 1]" = var_mean_128[1];  var_mean_128 = None
    add_747: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_256, 1e-05)
    rsqrt_128: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_747);  add_747 = None
    sub_128: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_128, getitem_257)
    mul_936: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_128, rsqrt_128);  sub_128 = None
    squeeze_384: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_257, [0, 2, 3]);  getitem_257 = None
    squeeze_385: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_128, [0, 2, 3]);  rsqrt_128 = None
    mul_937: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_384, 0.1)
    mul_938: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1366, 0.9)
    add_748: "f32[72]" = torch.ops.aten.add.Tensor(mul_937, mul_938);  mul_937 = mul_938 = None
    squeeze_386: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_256, [0, 2, 3]);  getitem_256 = None
    mul_939: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_386, 1.0006381620931717);  squeeze_386 = None
    mul_940: "f32[72]" = torch.ops.aten.mul.Tensor(mul_939, 0.1);  mul_939 = None
    mul_941: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1367, 0.9)
    add_749: "f32[72]" = torch.ops.aten.add.Tensor(mul_940, mul_941);  mul_940 = mul_941 = None
    unsqueeze_522: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_386, -1)
    unsqueeze_523: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_522, -1);  unsqueeze_522 = None
    mul_942: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_936, unsqueeze_523);  mul_936 = unsqueeze_523 = None
    unsqueeze_524: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_387, -1);  primals_387 = None
    unsqueeze_525: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_524, -1);  unsqueeze_524 = None
    add_750: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_942, unsqueeze_525);  mul_942 = unsqueeze_525 = None
    add_751: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_745, add_750);  add_745 = add_750 = None
    add_752: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_751, relu_114);  add_751 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_118: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_752);  add_752 = None
    alias_118: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_118)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_129: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_115, primals_388, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_753: "i64[]" = torch.ops.aten.add.Tensor(primals_1371, 1)
    var_mean_129 = torch.ops.aten.var_mean.correction(convolution_129, [0, 2, 3], correction = 0, keepdim = True)
    getitem_258: "f32[1, 18, 1, 1]" = var_mean_129[0]
    getitem_259: "f32[1, 18, 1, 1]" = var_mean_129[1];  var_mean_129 = None
    add_754: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_258, 1e-05)
    rsqrt_129: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_754);  add_754 = None
    sub_129: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_129, getitem_259)
    mul_943: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_129, rsqrt_129);  sub_129 = None
    squeeze_387: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_259, [0, 2, 3]);  getitem_259 = None
    squeeze_388: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_129, [0, 2, 3]);  rsqrt_129 = None
    mul_944: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_387, 0.1)
    mul_945: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1369, 0.9)
    add_755: "f32[18]" = torch.ops.aten.add.Tensor(mul_944, mul_945);  mul_944 = mul_945 = None
    squeeze_389: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_258, [0, 2, 3]);  getitem_258 = None
    mul_946: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_389, 1.0000398612827361);  squeeze_389 = None
    mul_947: "f32[18]" = torch.ops.aten.mul.Tensor(mul_946, 0.1);  mul_946 = None
    mul_948: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1370, 0.9)
    add_756: "f32[18]" = torch.ops.aten.add.Tensor(mul_947, mul_948);  mul_947 = mul_948 = None
    unsqueeze_526: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_389, -1)
    unsqueeze_527: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_526, -1);  unsqueeze_526 = None
    mul_949: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_943, unsqueeze_527);  mul_943 = unsqueeze_527 = None
    unsqueeze_528: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_390, -1);  primals_390 = None
    unsqueeze_529: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_528, -1);  unsqueeze_528 = None
    add_757: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_949, unsqueeze_529);  mul_949 = unsqueeze_529 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_119: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_757);  add_757 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_130: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_119, primals_391, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_758: "i64[]" = torch.ops.aten.add.Tensor(primals_1374, 1)
    var_mean_130 = torch.ops.aten.var_mean.correction(convolution_130, [0, 2, 3], correction = 0, keepdim = True)
    getitem_260: "f32[1, 18, 1, 1]" = var_mean_130[0]
    getitem_261: "f32[1, 18, 1, 1]" = var_mean_130[1];  var_mean_130 = None
    add_759: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_260, 1e-05)
    rsqrt_130: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_759);  add_759 = None
    sub_130: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_130, getitem_261)
    mul_950: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_130, rsqrt_130);  sub_130 = None
    squeeze_390: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_261, [0, 2, 3]);  getitem_261 = None
    squeeze_391: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_130, [0, 2, 3]);  rsqrt_130 = None
    mul_951: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_390, 0.1)
    mul_952: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1372, 0.9)
    add_760: "f32[18]" = torch.ops.aten.add.Tensor(mul_951, mul_952);  mul_951 = mul_952 = None
    squeeze_392: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_260, [0, 2, 3]);  getitem_260 = None
    mul_953: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_392, 1.0000398612827361);  squeeze_392 = None
    mul_954: "f32[18]" = torch.ops.aten.mul.Tensor(mul_953, 0.1);  mul_953 = None
    mul_955: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1373, 0.9)
    add_761: "f32[18]" = torch.ops.aten.add.Tensor(mul_954, mul_955);  mul_954 = mul_955 = None
    unsqueeze_530: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_392, -1)
    unsqueeze_531: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_530, -1);  unsqueeze_530 = None
    mul_956: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_950, unsqueeze_531);  mul_950 = unsqueeze_531 = None
    unsqueeze_532: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_393, -1);  primals_393 = None
    unsqueeze_533: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_532, -1);  unsqueeze_532 = None
    add_762: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_956, unsqueeze_533);  mul_956 = unsqueeze_533 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_763: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_762, relu_115);  add_762 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_120: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_763);  add_763 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_131: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_120, primals_394, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_764: "i64[]" = torch.ops.aten.add.Tensor(primals_1377, 1)
    var_mean_131 = torch.ops.aten.var_mean.correction(convolution_131, [0, 2, 3], correction = 0, keepdim = True)
    getitem_262: "f32[1, 18, 1, 1]" = var_mean_131[0]
    getitem_263: "f32[1, 18, 1, 1]" = var_mean_131[1];  var_mean_131 = None
    add_765: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_262, 1e-05)
    rsqrt_131: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_765);  add_765 = None
    sub_131: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_131, getitem_263)
    mul_957: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_131, rsqrt_131);  sub_131 = None
    squeeze_393: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_263, [0, 2, 3]);  getitem_263 = None
    squeeze_394: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_131, [0, 2, 3]);  rsqrt_131 = None
    mul_958: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_393, 0.1)
    mul_959: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1375, 0.9)
    add_766: "f32[18]" = torch.ops.aten.add.Tensor(mul_958, mul_959);  mul_958 = mul_959 = None
    squeeze_395: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_262, [0, 2, 3]);  getitem_262 = None
    mul_960: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_395, 1.0000398612827361);  squeeze_395 = None
    mul_961: "f32[18]" = torch.ops.aten.mul.Tensor(mul_960, 0.1);  mul_960 = None
    mul_962: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1376, 0.9)
    add_767: "f32[18]" = torch.ops.aten.add.Tensor(mul_961, mul_962);  mul_961 = mul_962 = None
    unsqueeze_534: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_395, -1)
    unsqueeze_535: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_534, -1);  unsqueeze_534 = None
    mul_963: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_957, unsqueeze_535);  mul_957 = unsqueeze_535 = None
    unsqueeze_536: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_396, -1);  primals_396 = None
    unsqueeze_537: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_536, -1);  unsqueeze_536 = None
    add_768: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_963, unsqueeze_537);  mul_963 = unsqueeze_537 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_121: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_768);  add_768 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_132: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_121, primals_397, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_769: "i64[]" = torch.ops.aten.add.Tensor(primals_1380, 1)
    var_mean_132 = torch.ops.aten.var_mean.correction(convolution_132, [0, 2, 3], correction = 0, keepdim = True)
    getitem_264: "f32[1, 18, 1, 1]" = var_mean_132[0]
    getitem_265: "f32[1, 18, 1, 1]" = var_mean_132[1];  var_mean_132 = None
    add_770: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_264, 1e-05)
    rsqrt_132: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_770);  add_770 = None
    sub_132: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_132, getitem_265)
    mul_964: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_132, rsqrt_132);  sub_132 = None
    squeeze_396: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_265, [0, 2, 3]);  getitem_265 = None
    squeeze_397: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_132, [0, 2, 3]);  rsqrt_132 = None
    mul_965: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_396, 0.1)
    mul_966: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1378, 0.9)
    add_771: "f32[18]" = torch.ops.aten.add.Tensor(mul_965, mul_966);  mul_965 = mul_966 = None
    squeeze_398: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_264, [0, 2, 3]);  getitem_264 = None
    mul_967: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_398, 1.0000398612827361);  squeeze_398 = None
    mul_968: "f32[18]" = torch.ops.aten.mul.Tensor(mul_967, 0.1);  mul_967 = None
    mul_969: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1379, 0.9)
    add_772: "f32[18]" = torch.ops.aten.add.Tensor(mul_968, mul_969);  mul_968 = mul_969 = None
    unsqueeze_538: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_398, -1)
    unsqueeze_539: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_538, -1);  unsqueeze_538 = None
    mul_970: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_964, unsqueeze_539);  mul_964 = unsqueeze_539 = None
    unsqueeze_540: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_399, -1);  primals_399 = None
    unsqueeze_541: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_540, -1);  unsqueeze_540 = None
    add_773: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_970, unsqueeze_541);  mul_970 = unsqueeze_541 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_774: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_773, relu_120);  add_773 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_122: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_774);  add_774 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_133: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_122, primals_400, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_775: "i64[]" = torch.ops.aten.add.Tensor(primals_1383, 1)
    var_mean_133 = torch.ops.aten.var_mean.correction(convolution_133, [0, 2, 3], correction = 0, keepdim = True)
    getitem_266: "f32[1, 18, 1, 1]" = var_mean_133[0]
    getitem_267: "f32[1, 18, 1, 1]" = var_mean_133[1];  var_mean_133 = None
    add_776: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_266, 1e-05)
    rsqrt_133: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_776);  add_776 = None
    sub_133: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_133, getitem_267)
    mul_971: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_133, rsqrt_133);  sub_133 = None
    squeeze_399: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_267, [0, 2, 3]);  getitem_267 = None
    squeeze_400: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_133, [0, 2, 3]);  rsqrt_133 = None
    mul_972: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_399, 0.1)
    mul_973: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1381, 0.9)
    add_777: "f32[18]" = torch.ops.aten.add.Tensor(mul_972, mul_973);  mul_972 = mul_973 = None
    squeeze_401: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_266, [0, 2, 3]);  getitem_266 = None
    mul_974: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_401, 1.0000398612827361);  squeeze_401 = None
    mul_975: "f32[18]" = torch.ops.aten.mul.Tensor(mul_974, 0.1);  mul_974 = None
    mul_976: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1382, 0.9)
    add_778: "f32[18]" = torch.ops.aten.add.Tensor(mul_975, mul_976);  mul_975 = mul_976 = None
    unsqueeze_542: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_401, -1)
    unsqueeze_543: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_542, -1);  unsqueeze_542 = None
    mul_977: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_971, unsqueeze_543);  mul_971 = unsqueeze_543 = None
    unsqueeze_544: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_402, -1);  primals_402 = None
    unsqueeze_545: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_544, -1);  unsqueeze_544 = None
    add_779: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_977, unsqueeze_545);  mul_977 = unsqueeze_545 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_123: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_779);  add_779 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_134: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_123, primals_403, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_780: "i64[]" = torch.ops.aten.add.Tensor(primals_1386, 1)
    var_mean_134 = torch.ops.aten.var_mean.correction(convolution_134, [0, 2, 3], correction = 0, keepdim = True)
    getitem_268: "f32[1, 18, 1, 1]" = var_mean_134[0]
    getitem_269: "f32[1, 18, 1, 1]" = var_mean_134[1];  var_mean_134 = None
    add_781: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_268, 1e-05)
    rsqrt_134: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_781);  add_781 = None
    sub_134: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_134, getitem_269)
    mul_978: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_134, rsqrt_134);  sub_134 = None
    squeeze_402: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_269, [0, 2, 3]);  getitem_269 = None
    squeeze_403: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_134, [0, 2, 3]);  rsqrt_134 = None
    mul_979: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_402, 0.1)
    mul_980: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1384, 0.9)
    add_782: "f32[18]" = torch.ops.aten.add.Tensor(mul_979, mul_980);  mul_979 = mul_980 = None
    squeeze_404: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_268, [0, 2, 3]);  getitem_268 = None
    mul_981: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_404, 1.0000398612827361);  squeeze_404 = None
    mul_982: "f32[18]" = torch.ops.aten.mul.Tensor(mul_981, 0.1);  mul_981 = None
    mul_983: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1385, 0.9)
    add_783: "f32[18]" = torch.ops.aten.add.Tensor(mul_982, mul_983);  mul_982 = mul_983 = None
    unsqueeze_546: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_404, -1)
    unsqueeze_547: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_546, -1);  unsqueeze_546 = None
    mul_984: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_978, unsqueeze_547);  mul_978 = unsqueeze_547 = None
    unsqueeze_548: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_405, -1);  primals_405 = None
    unsqueeze_549: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_548, -1);  unsqueeze_548 = None
    add_784: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_984, unsqueeze_549);  mul_984 = unsqueeze_549 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_785: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_784, relu_122);  add_784 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_124: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_785);  add_785 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_135: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_124, primals_406, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_786: "i64[]" = torch.ops.aten.add.Tensor(primals_1389, 1)
    var_mean_135 = torch.ops.aten.var_mean.correction(convolution_135, [0, 2, 3], correction = 0, keepdim = True)
    getitem_270: "f32[1, 18, 1, 1]" = var_mean_135[0]
    getitem_271: "f32[1, 18, 1, 1]" = var_mean_135[1];  var_mean_135 = None
    add_787: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_270, 1e-05)
    rsqrt_135: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_787);  add_787 = None
    sub_135: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_135, getitem_271)
    mul_985: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_135, rsqrt_135);  sub_135 = None
    squeeze_405: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_271, [0, 2, 3]);  getitem_271 = None
    squeeze_406: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_135, [0, 2, 3]);  rsqrt_135 = None
    mul_986: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_405, 0.1)
    mul_987: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1387, 0.9)
    add_788: "f32[18]" = torch.ops.aten.add.Tensor(mul_986, mul_987);  mul_986 = mul_987 = None
    squeeze_407: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_270, [0, 2, 3]);  getitem_270 = None
    mul_988: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_407, 1.0000398612827361);  squeeze_407 = None
    mul_989: "f32[18]" = torch.ops.aten.mul.Tensor(mul_988, 0.1);  mul_988 = None
    mul_990: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1388, 0.9)
    add_789: "f32[18]" = torch.ops.aten.add.Tensor(mul_989, mul_990);  mul_989 = mul_990 = None
    unsqueeze_550: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_407, -1)
    unsqueeze_551: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_550, -1);  unsqueeze_550 = None
    mul_991: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_985, unsqueeze_551);  mul_985 = unsqueeze_551 = None
    unsqueeze_552: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_408, -1);  primals_408 = None
    unsqueeze_553: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_552, -1);  unsqueeze_552 = None
    add_790: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_991, unsqueeze_553);  mul_991 = unsqueeze_553 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_125: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_790);  add_790 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_136: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_125, primals_409, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_791: "i64[]" = torch.ops.aten.add.Tensor(primals_1392, 1)
    var_mean_136 = torch.ops.aten.var_mean.correction(convolution_136, [0, 2, 3], correction = 0, keepdim = True)
    getitem_272: "f32[1, 18, 1, 1]" = var_mean_136[0]
    getitem_273: "f32[1, 18, 1, 1]" = var_mean_136[1];  var_mean_136 = None
    add_792: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_272, 1e-05)
    rsqrt_136: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_792);  add_792 = None
    sub_136: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_136, getitem_273)
    mul_992: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_136, rsqrt_136);  sub_136 = None
    squeeze_408: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_273, [0, 2, 3]);  getitem_273 = None
    squeeze_409: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_136, [0, 2, 3]);  rsqrt_136 = None
    mul_993: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_408, 0.1)
    mul_994: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1390, 0.9)
    add_793: "f32[18]" = torch.ops.aten.add.Tensor(mul_993, mul_994);  mul_993 = mul_994 = None
    squeeze_410: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_272, [0, 2, 3]);  getitem_272 = None
    mul_995: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_410, 1.0000398612827361);  squeeze_410 = None
    mul_996: "f32[18]" = torch.ops.aten.mul.Tensor(mul_995, 0.1);  mul_995 = None
    mul_997: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1391, 0.9)
    add_794: "f32[18]" = torch.ops.aten.add.Tensor(mul_996, mul_997);  mul_996 = mul_997 = None
    unsqueeze_554: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_410, -1)
    unsqueeze_555: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_554, -1);  unsqueeze_554 = None
    mul_998: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_992, unsqueeze_555);  mul_992 = unsqueeze_555 = None
    unsqueeze_556: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_411, -1);  primals_411 = None
    unsqueeze_557: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_556, -1);  unsqueeze_556 = None
    add_795: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_998, unsqueeze_557);  mul_998 = unsqueeze_557 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_796: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_795, relu_124);  add_795 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_126: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_796);  add_796 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_137: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_116, primals_412, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_797: "i64[]" = torch.ops.aten.add.Tensor(primals_1395, 1)
    var_mean_137 = torch.ops.aten.var_mean.correction(convolution_137, [0, 2, 3], correction = 0, keepdim = True)
    getitem_274: "f32[1, 36, 1, 1]" = var_mean_137[0]
    getitem_275: "f32[1, 36, 1, 1]" = var_mean_137[1];  var_mean_137 = None
    add_798: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_274, 1e-05)
    rsqrt_137: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_798);  add_798 = None
    sub_137: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_137, getitem_275)
    mul_999: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_137, rsqrt_137);  sub_137 = None
    squeeze_411: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_275, [0, 2, 3]);  getitem_275 = None
    squeeze_412: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_137, [0, 2, 3]);  rsqrt_137 = None
    mul_1000: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_411, 0.1)
    mul_1001: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1393, 0.9)
    add_799: "f32[36]" = torch.ops.aten.add.Tensor(mul_1000, mul_1001);  mul_1000 = mul_1001 = None
    squeeze_413: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_274, [0, 2, 3]);  getitem_274 = None
    mul_1002: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_413, 1.0001594642002871);  squeeze_413 = None
    mul_1003: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1002, 0.1);  mul_1002 = None
    mul_1004: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1394, 0.9)
    add_800: "f32[36]" = torch.ops.aten.add.Tensor(mul_1003, mul_1004);  mul_1003 = mul_1004 = None
    unsqueeze_558: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_413, -1)
    unsqueeze_559: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_558, -1);  unsqueeze_558 = None
    mul_1005: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_999, unsqueeze_559);  mul_999 = unsqueeze_559 = None
    unsqueeze_560: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_414, -1);  primals_414 = None
    unsqueeze_561: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_560, -1);  unsqueeze_560 = None
    add_801: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1005, unsqueeze_561);  mul_1005 = unsqueeze_561 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_127: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_801);  add_801 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_138: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_127, primals_415, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_802: "i64[]" = torch.ops.aten.add.Tensor(primals_1398, 1)
    var_mean_138 = torch.ops.aten.var_mean.correction(convolution_138, [0, 2, 3], correction = 0, keepdim = True)
    getitem_276: "f32[1, 36, 1, 1]" = var_mean_138[0]
    getitem_277: "f32[1, 36, 1, 1]" = var_mean_138[1];  var_mean_138 = None
    add_803: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_276, 1e-05)
    rsqrt_138: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_803);  add_803 = None
    sub_138: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_138, getitem_277)
    mul_1006: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_138, rsqrt_138);  sub_138 = None
    squeeze_414: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_277, [0, 2, 3]);  getitem_277 = None
    squeeze_415: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_138, [0, 2, 3]);  rsqrt_138 = None
    mul_1007: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_414, 0.1)
    mul_1008: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1396, 0.9)
    add_804: "f32[36]" = torch.ops.aten.add.Tensor(mul_1007, mul_1008);  mul_1007 = mul_1008 = None
    squeeze_416: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_276, [0, 2, 3]);  getitem_276 = None
    mul_1009: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_416, 1.0001594642002871);  squeeze_416 = None
    mul_1010: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1009, 0.1);  mul_1009 = None
    mul_1011: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1397, 0.9)
    add_805: "f32[36]" = torch.ops.aten.add.Tensor(mul_1010, mul_1011);  mul_1010 = mul_1011 = None
    unsqueeze_562: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_416, -1)
    unsqueeze_563: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_562, -1);  unsqueeze_562 = None
    mul_1012: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1006, unsqueeze_563);  mul_1006 = unsqueeze_563 = None
    unsqueeze_564: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_417, -1);  primals_417 = None
    unsqueeze_565: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_564, -1);  unsqueeze_564 = None
    add_806: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1012, unsqueeze_565);  mul_1012 = unsqueeze_565 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_807: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_806, relu_116);  add_806 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_128: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_807);  add_807 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_139: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_128, primals_418, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_808: "i64[]" = torch.ops.aten.add.Tensor(primals_1401, 1)
    var_mean_139 = torch.ops.aten.var_mean.correction(convolution_139, [0, 2, 3], correction = 0, keepdim = True)
    getitem_278: "f32[1, 36, 1, 1]" = var_mean_139[0]
    getitem_279: "f32[1, 36, 1, 1]" = var_mean_139[1];  var_mean_139 = None
    add_809: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_278, 1e-05)
    rsqrt_139: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_809);  add_809 = None
    sub_139: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_139, getitem_279)
    mul_1013: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_139, rsqrt_139);  sub_139 = None
    squeeze_417: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_279, [0, 2, 3]);  getitem_279 = None
    squeeze_418: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_139, [0, 2, 3]);  rsqrt_139 = None
    mul_1014: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_417, 0.1)
    mul_1015: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1399, 0.9)
    add_810: "f32[36]" = torch.ops.aten.add.Tensor(mul_1014, mul_1015);  mul_1014 = mul_1015 = None
    squeeze_419: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_278, [0, 2, 3]);  getitem_278 = None
    mul_1016: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_419, 1.0001594642002871);  squeeze_419 = None
    mul_1017: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1016, 0.1);  mul_1016 = None
    mul_1018: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1400, 0.9)
    add_811: "f32[36]" = torch.ops.aten.add.Tensor(mul_1017, mul_1018);  mul_1017 = mul_1018 = None
    unsqueeze_566: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_419, -1)
    unsqueeze_567: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_566, -1);  unsqueeze_566 = None
    mul_1019: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1013, unsqueeze_567);  mul_1013 = unsqueeze_567 = None
    unsqueeze_568: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_420, -1);  primals_420 = None
    unsqueeze_569: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_568, -1);  unsqueeze_568 = None
    add_812: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1019, unsqueeze_569);  mul_1019 = unsqueeze_569 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_129: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_812);  add_812 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_140: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_129, primals_421, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_813: "i64[]" = torch.ops.aten.add.Tensor(primals_1404, 1)
    var_mean_140 = torch.ops.aten.var_mean.correction(convolution_140, [0, 2, 3], correction = 0, keepdim = True)
    getitem_280: "f32[1, 36, 1, 1]" = var_mean_140[0]
    getitem_281: "f32[1, 36, 1, 1]" = var_mean_140[1];  var_mean_140 = None
    add_814: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_280, 1e-05)
    rsqrt_140: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_814);  add_814 = None
    sub_140: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_140, getitem_281)
    mul_1020: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_140, rsqrt_140);  sub_140 = None
    squeeze_420: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_281, [0, 2, 3]);  getitem_281 = None
    squeeze_421: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_140, [0, 2, 3]);  rsqrt_140 = None
    mul_1021: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_420, 0.1)
    mul_1022: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1402, 0.9)
    add_815: "f32[36]" = torch.ops.aten.add.Tensor(mul_1021, mul_1022);  mul_1021 = mul_1022 = None
    squeeze_422: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_280, [0, 2, 3]);  getitem_280 = None
    mul_1023: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_422, 1.0001594642002871);  squeeze_422 = None
    mul_1024: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1023, 0.1);  mul_1023 = None
    mul_1025: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1403, 0.9)
    add_816: "f32[36]" = torch.ops.aten.add.Tensor(mul_1024, mul_1025);  mul_1024 = mul_1025 = None
    unsqueeze_570: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_422, -1)
    unsqueeze_571: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_570, -1);  unsqueeze_570 = None
    mul_1026: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1020, unsqueeze_571);  mul_1020 = unsqueeze_571 = None
    unsqueeze_572: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_423, -1);  primals_423 = None
    unsqueeze_573: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_572, -1);  unsqueeze_572 = None
    add_817: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1026, unsqueeze_573);  mul_1026 = unsqueeze_573 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_818: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_817, relu_128);  add_817 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_130: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_818);  add_818 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_141: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_130, primals_424, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_819: "i64[]" = torch.ops.aten.add.Tensor(primals_1407, 1)
    var_mean_141 = torch.ops.aten.var_mean.correction(convolution_141, [0, 2, 3], correction = 0, keepdim = True)
    getitem_282: "f32[1, 36, 1, 1]" = var_mean_141[0]
    getitem_283: "f32[1, 36, 1, 1]" = var_mean_141[1];  var_mean_141 = None
    add_820: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_282, 1e-05)
    rsqrt_141: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_820);  add_820 = None
    sub_141: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_141, getitem_283)
    mul_1027: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_141, rsqrt_141);  sub_141 = None
    squeeze_423: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_283, [0, 2, 3]);  getitem_283 = None
    squeeze_424: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_141, [0, 2, 3]);  rsqrt_141 = None
    mul_1028: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_423, 0.1)
    mul_1029: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1405, 0.9)
    add_821: "f32[36]" = torch.ops.aten.add.Tensor(mul_1028, mul_1029);  mul_1028 = mul_1029 = None
    squeeze_425: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_282, [0, 2, 3]);  getitem_282 = None
    mul_1030: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_425, 1.0001594642002871);  squeeze_425 = None
    mul_1031: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1030, 0.1);  mul_1030 = None
    mul_1032: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1406, 0.9)
    add_822: "f32[36]" = torch.ops.aten.add.Tensor(mul_1031, mul_1032);  mul_1031 = mul_1032 = None
    unsqueeze_574: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_425, -1)
    unsqueeze_575: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_574, -1);  unsqueeze_574 = None
    mul_1033: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1027, unsqueeze_575);  mul_1027 = unsqueeze_575 = None
    unsqueeze_576: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_426, -1);  primals_426 = None
    unsqueeze_577: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_576, -1);  unsqueeze_576 = None
    add_823: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1033, unsqueeze_577);  mul_1033 = unsqueeze_577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_131: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_823);  add_823 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_142: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_131, primals_427, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_824: "i64[]" = torch.ops.aten.add.Tensor(primals_1410, 1)
    var_mean_142 = torch.ops.aten.var_mean.correction(convolution_142, [0, 2, 3], correction = 0, keepdim = True)
    getitem_284: "f32[1, 36, 1, 1]" = var_mean_142[0]
    getitem_285: "f32[1, 36, 1, 1]" = var_mean_142[1];  var_mean_142 = None
    add_825: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_284, 1e-05)
    rsqrt_142: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_825);  add_825 = None
    sub_142: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_142, getitem_285)
    mul_1034: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_142, rsqrt_142);  sub_142 = None
    squeeze_426: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_285, [0, 2, 3]);  getitem_285 = None
    squeeze_427: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_142, [0, 2, 3]);  rsqrt_142 = None
    mul_1035: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_426, 0.1)
    mul_1036: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1408, 0.9)
    add_826: "f32[36]" = torch.ops.aten.add.Tensor(mul_1035, mul_1036);  mul_1035 = mul_1036 = None
    squeeze_428: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_284, [0, 2, 3]);  getitem_284 = None
    mul_1037: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_428, 1.0001594642002871);  squeeze_428 = None
    mul_1038: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1037, 0.1);  mul_1037 = None
    mul_1039: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1409, 0.9)
    add_827: "f32[36]" = torch.ops.aten.add.Tensor(mul_1038, mul_1039);  mul_1038 = mul_1039 = None
    unsqueeze_578: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_428, -1)
    unsqueeze_579: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_578, -1);  unsqueeze_578 = None
    mul_1040: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1034, unsqueeze_579);  mul_1034 = unsqueeze_579 = None
    unsqueeze_580: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_429, -1);  primals_429 = None
    unsqueeze_581: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_580, -1);  unsqueeze_580 = None
    add_828: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1040, unsqueeze_581);  mul_1040 = unsqueeze_581 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_829: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_828, relu_130);  add_828 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_132: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_829);  add_829 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_143: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_132, primals_430, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_830: "i64[]" = torch.ops.aten.add.Tensor(primals_1413, 1)
    var_mean_143 = torch.ops.aten.var_mean.correction(convolution_143, [0, 2, 3], correction = 0, keepdim = True)
    getitem_286: "f32[1, 36, 1, 1]" = var_mean_143[0]
    getitem_287: "f32[1, 36, 1, 1]" = var_mean_143[1];  var_mean_143 = None
    add_831: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_286, 1e-05)
    rsqrt_143: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_831);  add_831 = None
    sub_143: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_143, getitem_287)
    mul_1041: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_143, rsqrt_143);  sub_143 = None
    squeeze_429: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_287, [0, 2, 3]);  getitem_287 = None
    squeeze_430: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_143, [0, 2, 3]);  rsqrt_143 = None
    mul_1042: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_429, 0.1)
    mul_1043: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1411, 0.9)
    add_832: "f32[36]" = torch.ops.aten.add.Tensor(mul_1042, mul_1043);  mul_1042 = mul_1043 = None
    squeeze_431: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_286, [0, 2, 3]);  getitem_286 = None
    mul_1044: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_431, 1.0001594642002871);  squeeze_431 = None
    mul_1045: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1044, 0.1);  mul_1044 = None
    mul_1046: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1412, 0.9)
    add_833: "f32[36]" = torch.ops.aten.add.Tensor(mul_1045, mul_1046);  mul_1045 = mul_1046 = None
    unsqueeze_582: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_431, -1)
    unsqueeze_583: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_582, -1);  unsqueeze_582 = None
    mul_1047: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1041, unsqueeze_583);  mul_1041 = unsqueeze_583 = None
    unsqueeze_584: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_432, -1);  primals_432 = None
    unsqueeze_585: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_584, -1);  unsqueeze_584 = None
    add_834: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1047, unsqueeze_585);  mul_1047 = unsqueeze_585 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_133: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_834);  add_834 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_144: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_133, primals_433, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_835: "i64[]" = torch.ops.aten.add.Tensor(primals_1416, 1)
    var_mean_144 = torch.ops.aten.var_mean.correction(convolution_144, [0, 2, 3], correction = 0, keepdim = True)
    getitem_288: "f32[1, 36, 1, 1]" = var_mean_144[0]
    getitem_289: "f32[1, 36, 1, 1]" = var_mean_144[1];  var_mean_144 = None
    add_836: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_288, 1e-05)
    rsqrt_144: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_836);  add_836 = None
    sub_144: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_144, getitem_289)
    mul_1048: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_144, rsqrt_144);  sub_144 = None
    squeeze_432: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_289, [0, 2, 3]);  getitem_289 = None
    squeeze_433: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_144, [0, 2, 3]);  rsqrt_144 = None
    mul_1049: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_432, 0.1)
    mul_1050: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1414, 0.9)
    add_837: "f32[36]" = torch.ops.aten.add.Tensor(mul_1049, mul_1050);  mul_1049 = mul_1050 = None
    squeeze_434: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_288, [0, 2, 3]);  getitem_288 = None
    mul_1051: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_434, 1.0001594642002871);  squeeze_434 = None
    mul_1052: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1051, 0.1);  mul_1051 = None
    mul_1053: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1415, 0.9)
    add_838: "f32[36]" = torch.ops.aten.add.Tensor(mul_1052, mul_1053);  mul_1052 = mul_1053 = None
    unsqueeze_586: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_434, -1)
    unsqueeze_587: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_586, -1);  unsqueeze_586 = None
    mul_1054: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1048, unsqueeze_587);  mul_1048 = unsqueeze_587 = None
    unsqueeze_588: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_435, -1);  primals_435 = None
    unsqueeze_589: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_588, -1);  unsqueeze_588 = None
    add_839: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1054, unsqueeze_589);  mul_1054 = unsqueeze_589 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_840: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_839, relu_132);  add_839 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_134: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_840);  add_840 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_145: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_118, primals_436, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_841: "i64[]" = torch.ops.aten.add.Tensor(primals_1419, 1)
    var_mean_145 = torch.ops.aten.var_mean.correction(convolution_145, [0, 2, 3], correction = 0, keepdim = True)
    getitem_290: "f32[1, 72, 1, 1]" = var_mean_145[0]
    getitem_291: "f32[1, 72, 1, 1]" = var_mean_145[1];  var_mean_145 = None
    add_842: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_290, 1e-05)
    rsqrt_145: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_842);  add_842 = None
    sub_145: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_145, getitem_291)
    mul_1055: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_145, rsqrt_145);  sub_145 = None
    squeeze_435: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_291, [0, 2, 3]);  getitem_291 = None
    squeeze_436: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_145, [0, 2, 3]);  rsqrt_145 = None
    mul_1056: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_435, 0.1)
    mul_1057: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1417, 0.9)
    add_843: "f32[72]" = torch.ops.aten.add.Tensor(mul_1056, mul_1057);  mul_1056 = mul_1057 = None
    squeeze_437: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_290, [0, 2, 3]);  getitem_290 = None
    mul_1058: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_437, 1.0006381620931717);  squeeze_437 = None
    mul_1059: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1058, 0.1);  mul_1058 = None
    mul_1060: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1418, 0.9)
    add_844: "f32[72]" = torch.ops.aten.add.Tensor(mul_1059, mul_1060);  mul_1059 = mul_1060 = None
    unsqueeze_590: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_437, -1)
    unsqueeze_591: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_590, -1);  unsqueeze_590 = None
    mul_1061: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1055, unsqueeze_591);  mul_1055 = unsqueeze_591 = None
    unsqueeze_592: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_438, -1);  primals_438 = None
    unsqueeze_593: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_592, -1);  unsqueeze_592 = None
    add_845: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1061, unsqueeze_593);  mul_1061 = unsqueeze_593 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_135: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_845);  add_845 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_146: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_135, primals_439, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_846: "i64[]" = torch.ops.aten.add.Tensor(primals_1422, 1)
    var_mean_146 = torch.ops.aten.var_mean.correction(convolution_146, [0, 2, 3], correction = 0, keepdim = True)
    getitem_292: "f32[1, 72, 1, 1]" = var_mean_146[0]
    getitem_293: "f32[1, 72, 1, 1]" = var_mean_146[1];  var_mean_146 = None
    add_847: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_292, 1e-05)
    rsqrt_146: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_847);  add_847 = None
    sub_146: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_146, getitem_293)
    mul_1062: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_146, rsqrt_146);  sub_146 = None
    squeeze_438: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_293, [0, 2, 3]);  getitem_293 = None
    squeeze_439: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_146, [0, 2, 3]);  rsqrt_146 = None
    mul_1063: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_438, 0.1)
    mul_1064: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1420, 0.9)
    add_848: "f32[72]" = torch.ops.aten.add.Tensor(mul_1063, mul_1064);  mul_1063 = mul_1064 = None
    squeeze_440: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_292, [0, 2, 3]);  getitem_292 = None
    mul_1065: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_440, 1.0006381620931717);  squeeze_440 = None
    mul_1066: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1065, 0.1);  mul_1065 = None
    mul_1067: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1421, 0.9)
    add_849: "f32[72]" = torch.ops.aten.add.Tensor(mul_1066, mul_1067);  mul_1066 = mul_1067 = None
    unsqueeze_594: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_440, -1)
    unsqueeze_595: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_594, -1);  unsqueeze_594 = None
    mul_1068: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1062, unsqueeze_595);  mul_1062 = unsqueeze_595 = None
    unsqueeze_596: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_441, -1);  primals_441 = None
    unsqueeze_597: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_596, -1);  unsqueeze_596 = None
    add_850: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1068, unsqueeze_597);  mul_1068 = unsqueeze_597 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_851: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_850, relu_118);  add_850 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_136: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_851);  add_851 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_147: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_136, primals_442, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_852: "i64[]" = torch.ops.aten.add.Tensor(primals_1425, 1)
    var_mean_147 = torch.ops.aten.var_mean.correction(convolution_147, [0, 2, 3], correction = 0, keepdim = True)
    getitem_294: "f32[1, 72, 1, 1]" = var_mean_147[0]
    getitem_295: "f32[1, 72, 1, 1]" = var_mean_147[1];  var_mean_147 = None
    add_853: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_294, 1e-05)
    rsqrt_147: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_853);  add_853 = None
    sub_147: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_147, getitem_295)
    mul_1069: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_147, rsqrt_147);  sub_147 = None
    squeeze_441: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_295, [0, 2, 3]);  getitem_295 = None
    squeeze_442: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_147, [0, 2, 3]);  rsqrt_147 = None
    mul_1070: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_441, 0.1)
    mul_1071: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1423, 0.9)
    add_854: "f32[72]" = torch.ops.aten.add.Tensor(mul_1070, mul_1071);  mul_1070 = mul_1071 = None
    squeeze_443: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_294, [0, 2, 3]);  getitem_294 = None
    mul_1072: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_443, 1.0006381620931717);  squeeze_443 = None
    mul_1073: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1072, 0.1);  mul_1072 = None
    mul_1074: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1424, 0.9)
    add_855: "f32[72]" = torch.ops.aten.add.Tensor(mul_1073, mul_1074);  mul_1073 = mul_1074 = None
    unsqueeze_598: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_443, -1)
    unsqueeze_599: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_598, -1);  unsqueeze_598 = None
    mul_1075: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1069, unsqueeze_599);  mul_1069 = unsqueeze_599 = None
    unsqueeze_600: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_444, -1);  primals_444 = None
    unsqueeze_601: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_600, -1);  unsqueeze_600 = None
    add_856: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1075, unsqueeze_601);  mul_1075 = unsqueeze_601 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_137: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_856);  add_856 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_148: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_137, primals_445, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_857: "i64[]" = torch.ops.aten.add.Tensor(primals_1428, 1)
    var_mean_148 = torch.ops.aten.var_mean.correction(convolution_148, [0, 2, 3], correction = 0, keepdim = True)
    getitem_296: "f32[1, 72, 1, 1]" = var_mean_148[0]
    getitem_297: "f32[1, 72, 1, 1]" = var_mean_148[1];  var_mean_148 = None
    add_858: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_296, 1e-05)
    rsqrt_148: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_858);  add_858 = None
    sub_148: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_148, getitem_297)
    mul_1076: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_148, rsqrt_148);  sub_148 = None
    squeeze_444: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_297, [0, 2, 3]);  getitem_297 = None
    squeeze_445: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_148, [0, 2, 3]);  rsqrt_148 = None
    mul_1077: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_444, 0.1)
    mul_1078: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1426, 0.9)
    add_859: "f32[72]" = torch.ops.aten.add.Tensor(mul_1077, mul_1078);  mul_1077 = mul_1078 = None
    squeeze_446: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_296, [0, 2, 3]);  getitem_296 = None
    mul_1079: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_446, 1.0006381620931717);  squeeze_446 = None
    mul_1080: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1079, 0.1);  mul_1079 = None
    mul_1081: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1427, 0.9)
    add_860: "f32[72]" = torch.ops.aten.add.Tensor(mul_1080, mul_1081);  mul_1080 = mul_1081 = None
    unsqueeze_602: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_446, -1)
    unsqueeze_603: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_602, -1);  unsqueeze_602 = None
    mul_1082: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1076, unsqueeze_603);  mul_1076 = unsqueeze_603 = None
    unsqueeze_604: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_447, -1);  primals_447 = None
    unsqueeze_605: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_604, -1);  unsqueeze_604 = None
    add_861: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1082, unsqueeze_605);  mul_1082 = unsqueeze_605 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_862: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_861, relu_136);  add_861 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_138: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_862);  add_862 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_149: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_138, primals_448, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_863: "i64[]" = torch.ops.aten.add.Tensor(primals_1431, 1)
    var_mean_149 = torch.ops.aten.var_mean.correction(convolution_149, [0, 2, 3], correction = 0, keepdim = True)
    getitem_298: "f32[1, 72, 1, 1]" = var_mean_149[0]
    getitem_299: "f32[1, 72, 1, 1]" = var_mean_149[1];  var_mean_149 = None
    add_864: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_298, 1e-05)
    rsqrt_149: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_864);  add_864 = None
    sub_149: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_149, getitem_299)
    mul_1083: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_149, rsqrt_149);  sub_149 = None
    squeeze_447: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_299, [0, 2, 3]);  getitem_299 = None
    squeeze_448: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_149, [0, 2, 3]);  rsqrt_149 = None
    mul_1084: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_447, 0.1)
    mul_1085: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1429, 0.9)
    add_865: "f32[72]" = torch.ops.aten.add.Tensor(mul_1084, mul_1085);  mul_1084 = mul_1085 = None
    squeeze_449: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_298, [0, 2, 3]);  getitem_298 = None
    mul_1086: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_449, 1.0006381620931717);  squeeze_449 = None
    mul_1087: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1086, 0.1);  mul_1086 = None
    mul_1088: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1430, 0.9)
    add_866: "f32[72]" = torch.ops.aten.add.Tensor(mul_1087, mul_1088);  mul_1087 = mul_1088 = None
    unsqueeze_606: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_449, -1)
    unsqueeze_607: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_606, -1);  unsqueeze_606 = None
    mul_1089: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1083, unsqueeze_607);  mul_1083 = unsqueeze_607 = None
    unsqueeze_608: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_450, -1);  primals_450 = None
    unsqueeze_609: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_608, -1);  unsqueeze_608 = None
    add_867: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1089, unsqueeze_609);  mul_1089 = unsqueeze_609 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_139: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_867);  add_867 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_150: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_139, primals_451, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_868: "i64[]" = torch.ops.aten.add.Tensor(primals_1434, 1)
    var_mean_150 = torch.ops.aten.var_mean.correction(convolution_150, [0, 2, 3], correction = 0, keepdim = True)
    getitem_300: "f32[1, 72, 1, 1]" = var_mean_150[0]
    getitem_301: "f32[1, 72, 1, 1]" = var_mean_150[1];  var_mean_150 = None
    add_869: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_300, 1e-05)
    rsqrt_150: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_869);  add_869 = None
    sub_150: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_150, getitem_301)
    mul_1090: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_150, rsqrt_150);  sub_150 = None
    squeeze_450: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_301, [0, 2, 3]);  getitem_301 = None
    squeeze_451: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_150, [0, 2, 3]);  rsqrt_150 = None
    mul_1091: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_450, 0.1)
    mul_1092: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1432, 0.9)
    add_870: "f32[72]" = torch.ops.aten.add.Tensor(mul_1091, mul_1092);  mul_1091 = mul_1092 = None
    squeeze_452: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_300, [0, 2, 3]);  getitem_300 = None
    mul_1093: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_452, 1.0006381620931717);  squeeze_452 = None
    mul_1094: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1093, 0.1);  mul_1093 = None
    mul_1095: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1433, 0.9)
    add_871: "f32[72]" = torch.ops.aten.add.Tensor(mul_1094, mul_1095);  mul_1094 = mul_1095 = None
    unsqueeze_610: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_452, -1)
    unsqueeze_611: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_610, -1);  unsqueeze_610 = None
    mul_1096: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1090, unsqueeze_611);  mul_1090 = unsqueeze_611 = None
    unsqueeze_612: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_453, -1);  primals_453 = None
    unsqueeze_613: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_612, -1);  unsqueeze_612 = None
    add_872: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1096, unsqueeze_613);  mul_1096 = unsqueeze_613 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_873: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_872, relu_138);  add_872 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_140: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_873);  add_873 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_151: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_140, primals_454, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_874: "i64[]" = torch.ops.aten.add.Tensor(primals_1437, 1)
    var_mean_151 = torch.ops.aten.var_mean.correction(convolution_151, [0, 2, 3], correction = 0, keepdim = True)
    getitem_302: "f32[1, 72, 1, 1]" = var_mean_151[0]
    getitem_303: "f32[1, 72, 1, 1]" = var_mean_151[1];  var_mean_151 = None
    add_875: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_302, 1e-05)
    rsqrt_151: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_875);  add_875 = None
    sub_151: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_151, getitem_303)
    mul_1097: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_151, rsqrt_151);  sub_151 = None
    squeeze_453: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_303, [0, 2, 3]);  getitem_303 = None
    squeeze_454: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_151, [0, 2, 3]);  rsqrt_151 = None
    mul_1098: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_453, 0.1)
    mul_1099: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1435, 0.9)
    add_876: "f32[72]" = torch.ops.aten.add.Tensor(mul_1098, mul_1099);  mul_1098 = mul_1099 = None
    squeeze_455: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_302, [0, 2, 3]);  getitem_302 = None
    mul_1100: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_455, 1.0006381620931717);  squeeze_455 = None
    mul_1101: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1100, 0.1);  mul_1100 = None
    mul_1102: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1436, 0.9)
    add_877: "f32[72]" = torch.ops.aten.add.Tensor(mul_1101, mul_1102);  mul_1101 = mul_1102 = None
    unsqueeze_614: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_455, -1)
    unsqueeze_615: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_614, -1);  unsqueeze_614 = None
    mul_1103: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1097, unsqueeze_615);  mul_1097 = unsqueeze_615 = None
    unsqueeze_616: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_456, -1);  primals_456 = None
    unsqueeze_617: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_616, -1);  unsqueeze_616 = None
    add_878: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1103, unsqueeze_617);  mul_1103 = unsqueeze_617 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_141: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_878);  add_878 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_152: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_141, primals_457, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_879: "i64[]" = torch.ops.aten.add.Tensor(primals_1440, 1)
    var_mean_152 = torch.ops.aten.var_mean.correction(convolution_152, [0, 2, 3], correction = 0, keepdim = True)
    getitem_304: "f32[1, 72, 1, 1]" = var_mean_152[0]
    getitem_305: "f32[1, 72, 1, 1]" = var_mean_152[1];  var_mean_152 = None
    add_880: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_304, 1e-05)
    rsqrt_152: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_880);  add_880 = None
    sub_152: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_152, getitem_305)
    mul_1104: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_152, rsqrt_152);  sub_152 = None
    squeeze_456: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_305, [0, 2, 3]);  getitem_305 = None
    squeeze_457: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_152, [0, 2, 3]);  rsqrt_152 = None
    mul_1105: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_456, 0.1)
    mul_1106: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1438, 0.9)
    add_881: "f32[72]" = torch.ops.aten.add.Tensor(mul_1105, mul_1106);  mul_1105 = mul_1106 = None
    squeeze_458: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_304, [0, 2, 3]);  getitem_304 = None
    mul_1107: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_458, 1.0006381620931717);  squeeze_458 = None
    mul_1108: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1107, 0.1);  mul_1107 = None
    mul_1109: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1439, 0.9)
    add_882: "f32[72]" = torch.ops.aten.add.Tensor(mul_1108, mul_1109);  mul_1108 = mul_1109 = None
    unsqueeze_618: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_458, -1)
    unsqueeze_619: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_618, -1);  unsqueeze_618 = None
    mul_1110: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1104, unsqueeze_619);  mul_1104 = unsqueeze_619 = None
    unsqueeze_620: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_459, -1);  primals_459 = None
    unsqueeze_621: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_620, -1);  unsqueeze_620 = None
    add_883: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1110, unsqueeze_621);  mul_1110 = unsqueeze_621 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_884: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_883, relu_140);  add_883 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_142: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_884);  add_884 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_153: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_134, primals_460, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_885: "i64[]" = torch.ops.aten.add.Tensor(primals_1443, 1)
    var_mean_153 = torch.ops.aten.var_mean.correction(convolution_153, [0, 2, 3], correction = 0, keepdim = True)
    getitem_306: "f32[1, 18, 1, 1]" = var_mean_153[0]
    getitem_307: "f32[1, 18, 1, 1]" = var_mean_153[1];  var_mean_153 = None
    add_886: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_306, 1e-05)
    rsqrt_153: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_886);  add_886 = None
    sub_153: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_153, getitem_307)
    mul_1111: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_153, rsqrt_153);  sub_153 = None
    squeeze_459: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_307, [0, 2, 3]);  getitem_307 = None
    squeeze_460: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_153, [0, 2, 3]);  rsqrt_153 = None
    mul_1112: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_459, 0.1)
    mul_1113: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1441, 0.9)
    add_887: "f32[18]" = torch.ops.aten.add.Tensor(mul_1112, mul_1113);  mul_1112 = mul_1113 = None
    squeeze_461: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_306, [0, 2, 3]);  getitem_306 = None
    mul_1114: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_461, 1.0001594642002871);  squeeze_461 = None
    mul_1115: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1114, 0.1);  mul_1114 = None
    mul_1116: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1442, 0.9)
    add_888: "f32[18]" = torch.ops.aten.add.Tensor(mul_1115, mul_1116);  mul_1115 = mul_1116 = None
    unsqueeze_622: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_461, -1)
    unsqueeze_623: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_622, -1);  unsqueeze_622 = None
    mul_1117: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1111, unsqueeze_623);  mul_1111 = unsqueeze_623 = None
    unsqueeze_624: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_462, -1);  primals_462 = None
    unsqueeze_625: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_624, -1);  unsqueeze_624 = None
    add_889: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1117, unsqueeze_625);  mul_1117 = unsqueeze_625 = None
    iota_20: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_40: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_20, torch.float32);  iota_20 = None
    mul_1118: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_40, 1);  convert_element_type_40 = None
    add_890: "f32[56]" = torch.ops.aten.add.Tensor(mul_1118, 0);  mul_1118 = None
    add_891: "f32[56]" = torch.ops.aten.add.Tensor(add_890, 0.0);  add_890 = None
    mul_1119: "f32[56]" = torch.ops.aten.mul.Tensor(add_891, 0.5);  add_891 = None
    convert_element_type_41: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1119, torch.int64);  mul_1119 = None
    unsqueeze_626: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_41, -1);  convert_element_type_41 = None
    iota_21: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_42: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_21, torch.float32);  iota_21 = None
    mul_1120: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_42, 1);  convert_element_type_42 = None
    add_892: "f32[56]" = torch.ops.aten.add.Tensor(mul_1120, 0);  mul_1120 = None
    add_893: "f32[56]" = torch.ops.aten.add.Tensor(add_892, 0.0);  add_892 = None
    mul_1121: "f32[56]" = torch.ops.aten.mul.Tensor(add_893, 0.5);  add_893 = None
    convert_element_type_43: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1121, torch.int64);  mul_1121 = None
    _unsafe_index_10: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_889, [None, None, unsqueeze_626, convert_element_type_43]);  add_889 = None
    add_894: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_126, _unsafe_index_10);  _unsafe_index_10 = None
    convolution_154: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_142, primals_463, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_895: "i64[]" = torch.ops.aten.add.Tensor(primals_1446, 1)
    var_mean_154 = torch.ops.aten.var_mean.correction(convolution_154, [0, 2, 3], correction = 0, keepdim = True)
    getitem_308: "f32[1, 18, 1, 1]" = var_mean_154[0]
    getitem_309: "f32[1, 18, 1, 1]" = var_mean_154[1];  var_mean_154 = None
    add_896: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_308, 1e-05)
    rsqrt_154: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_896);  add_896 = None
    sub_154: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_154, getitem_309)
    mul_1122: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_154, rsqrt_154);  sub_154 = None
    squeeze_462: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_309, [0, 2, 3]);  getitem_309 = None
    squeeze_463: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_154, [0, 2, 3]);  rsqrt_154 = None
    mul_1123: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_462, 0.1)
    mul_1124: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1444, 0.9)
    add_897: "f32[18]" = torch.ops.aten.add.Tensor(mul_1123, mul_1124);  mul_1123 = mul_1124 = None
    squeeze_464: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_308, [0, 2, 3]);  getitem_308 = None
    mul_1125: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_464, 1.0006381620931717);  squeeze_464 = None
    mul_1126: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1125, 0.1);  mul_1125 = None
    mul_1127: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1445, 0.9)
    add_898: "f32[18]" = torch.ops.aten.add.Tensor(mul_1126, mul_1127);  mul_1126 = mul_1127 = None
    unsqueeze_627: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_464, -1)
    unsqueeze_628: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_627, -1);  unsqueeze_627 = None
    mul_1128: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1122, unsqueeze_628);  mul_1122 = unsqueeze_628 = None
    unsqueeze_629: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_465, -1);  primals_465 = None
    unsqueeze_630: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_629, -1);  unsqueeze_629 = None
    add_899: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1128, unsqueeze_630);  mul_1128 = unsqueeze_630 = None
    iota_22: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_44: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_22, torch.float32);  iota_22 = None
    mul_1129: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_44, 1);  convert_element_type_44 = None
    add_900: "f32[56]" = torch.ops.aten.add.Tensor(mul_1129, 0);  mul_1129 = None
    add_901: "f32[56]" = torch.ops.aten.add.Tensor(add_900, 0.0);  add_900 = None
    mul_1130: "f32[56]" = torch.ops.aten.mul.Tensor(add_901, 0.25);  add_901 = None
    convert_element_type_45: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1130, torch.int64);  mul_1130 = None
    unsqueeze_631: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_45, -1);  convert_element_type_45 = None
    iota_23: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_46: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_23, torch.float32);  iota_23 = None
    mul_1131: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_46, 1);  convert_element_type_46 = None
    add_902: "f32[56]" = torch.ops.aten.add.Tensor(mul_1131, 0);  mul_1131 = None
    add_903: "f32[56]" = torch.ops.aten.add.Tensor(add_902, 0.0);  add_902 = None
    mul_1132: "f32[56]" = torch.ops.aten.mul.Tensor(add_903, 0.25);  add_903 = None
    convert_element_type_47: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1132, torch.int64);  mul_1132 = None
    _unsafe_index_11: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_899, [None, None, unsqueeze_631, convert_element_type_47]);  add_899 = None
    add_904: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_894, _unsafe_index_11);  add_894 = _unsafe_index_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_143: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_904);  add_904 = None
    alias_143: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_143)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_155: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_126, primals_466, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_905: "i64[]" = torch.ops.aten.add.Tensor(primals_1449, 1)
    var_mean_155 = torch.ops.aten.var_mean.correction(convolution_155, [0, 2, 3], correction = 0, keepdim = True)
    getitem_310: "f32[1, 36, 1, 1]" = var_mean_155[0]
    getitem_311: "f32[1, 36, 1, 1]" = var_mean_155[1];  var_mean_155 = None
    add_906: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_310, 1e-05)
    rsqrt_155: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_906);  add_906 = None
    sub_155: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_155, getitem_311)
    mul_1133: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_155, rsqrt_155);  sub_155 = None
    squeeze_465: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_311, [0, 2, 3]);  getitem_311 = None
    squeeze_466: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_155, [0, 2, 3]);  rsqrt_155 = None
    mul_1134: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_465, 0.1)
    mul_1135: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1447, 0.9)
    add_907: "f32[36]" = torch.ops.aten.add.Tensor(mul_1134, mul_1135);  mul_1134 = mul_1135 = None
    squeeze_467: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_310, [0, 2, 3]);  getitem_310 = None
    mul_1136: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_467, 1.0001594642002871);  squeeze_467 = None
    mul_1137: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1136, 0.1);  mul_1136 = None
    mul_1138: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1448, 0.9)
    add_908: "f32[36]" = torch.ops.aten.add.Tensor(mul_1137, mul_1138);  mul_1137 = mul_1138 = None
    unsqueeze_632: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_467, -1)
    unsqueeze_633: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_632, -1);  unsqueeze_632 = None
    mul_1139: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1133, unsqueeze_633);  mul_1133 = unsqueeze_633 = None
    unsqueeze_634: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_468, -1);  primals_468 = None
    unsqueeze_635: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_634, -1);  unsqueeze_634 = None
    add_909: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1139, unsqueeze_635);  mul_1139 = unsqueeze_635 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_910: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_909, relu_134);  add_909 = None
    convolution_156: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_142, primals_469, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_911: "i64[]" = torch.ops.aten.add.Tensor(primals_1452, 1)
    var_mean_156 = torch.ops.aten.var_mean.correction(convolution_156, [0, 2, 3], correction = 0, keepdim = True)
    getitem_312: "f32[1, 36, 1, 1]" = var_mean_156[0]
    getitem_313: "f32[1, 36, 1, 1]" = var_mean_156[1];  var_mean_156 = None
    add_912: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_312, 1e-05)
    rsqrt_156: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_912);  add_912 = None
    sub_156: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_156, getitem_313)
    mul_1140: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_156, rsqrt_156);  sub_156 = None
    squeeze_468: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_313, [0, 2, 3]);  getitem_313 = None
    squeeze_469: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_156, [0, 2, 3]);  rsqrt_156 = None
    mul_1141: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_468, 0.1)
    mul_1142: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1450, 0.9)
    add_913: "f32[36]" = torch.ops.aten.add.Tensor(mul_1141, mul_1142);  mul_1141 = mul_1142 = None
    squeeze_470: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_312, [0, 2, 3]);  getitem_312 = None
    mul_1143: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_470, 1.0006381620931717);  squeeze_470 = None
    mul_1144: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1143, 0.1);  mul_1143 = None
    mul_1145: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1451, 0.9)
    add_914: "f32[36]" = torch.ops.aten.add.Tensor(mul_1144, mul_1145);  mul_1144 = mul_1145 = None
    unsqueeze_636: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_470, -1)
    unsqueeze_637: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_636, -1);  unsqueeze_636 = None
    mul_1146: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1140, unsqueeze_637);  mul_1140 = unsqueeze_637 = None
    unsqueeze_638: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_471, -1);  primals_471 = None
    unsqueeze_639: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_638, -1);  unsqueeze_638 = None
    add_915: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1146, unsqueeze_639);  mul_1146 = unsqueeze_639 = None
    iota_24: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_48: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_24, torch.float32);  iota_24 = None
    mul_1147: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_48, 1);  convert_element_type_48 = None
    add_916: "f32[28]" = torch.ops.aten.add.Tensor(mul_1147, 0);  mul_1147 = None
    add_917: "f32[28]" = torch.ops.aten.add.Tensor(add_916, 0.0);  add_916 = None
    mul_1148: "f32[28]" = torch.ops.aten.mul.Tensor(add_917, 0.5);  add_917 = None
    convert_element_type_49: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1148, torch.int64);  mul_1148 = None
    unsqueeze_640: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_49, -1);  convert_element_type_49 = None
    iota_25: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_50: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_25, torch.float32);  iota_25 = None
    mul_1149: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_50, 1);  convert_element_type_50 = None
    add_918: "f32[28]" = torch.ops.aten.add.Tensor(mul_1149, 0);  mul_1149 = None
    add_919: "f32[28]" = torch.ops.aten.add.Tensor(add_918, 0.0);  add_918 = None
    mul_1150: "f32[28]" = torch.ops.aten.mul.Tensor(add_919, 0.5);  add_919 = None
    convert_element_type_51: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1150, torch.int64);  mul_1150 = None
    _unsafe_index_12: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_915, [None, None, unsqueeze_640, convert_element_type_51]);  add_915 = None
    add_920: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_910, _unsafe_index_12);  add_910 = _unsafe_index_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_144: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_920);  add_920 = None
    alias_144: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_144)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_157: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_126, primals_472, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_921: "i64[]" = torch.ops.aten.add.Tensor(primals_1455, 1)
    var_mean_157 = torch.ops.aten.var_mean.correction(convolution_157, [0, 2, 3], correction = 0, keepdim = True)
    getitem_314: "f32[1, 18, 1, 1]" = var_mean_157[0]
    getitem_315: "f32[1, 18, 1, 1]" = var_mean_157[1];  var_mean_157 = None
    add_922: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_314, 1e-05)
    rsqrt_157: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_922);  add_922 = None
    sub_157: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_157, getitem_315)
    mul_1151: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_157, rsqrt_157);  sub_157 = None
    squeeze_471: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_315, [0, 2, 3]);  getitem_315 = None
    squeeze_472: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_157, [0, 2, 3]);  rsqrt_157 = None
    mul_1152: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_471, 0.1)
    mul_1153: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1453, 0.9)
    add_923: "f32[18]" = torch.ops.aten.add.Tensor(mul_1152, mul_1153);  mul_1152 = mul_1153 = None
    squeeze_473: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_314, [0, 2, 3]);  getitem_314 = None
    mul_1154: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_473, 1.0001594642002871);  squeeze_473 = None
    mul_1155: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1154, 0.1);  mul_1154 = None
    mul_1156: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1454, 0.9)
    add_924: "f32[18]" = torch.ops.aten.add.Tensor(mul_1155, mul_1156);  mul_1155 = mul_1156 = None
    unsqueeze_641: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_473, -1)
    unsqueeze_642: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_641, -1);  unsqueeze_641 = None
    mul_1157: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1151, unsqueeze_642);  mul_1151 = unsqueeze_642 = None
    unsqueeze_643: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_474, -1);  primals_474 = None
    unsqueeze_644: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_643, -1);  unsqueeze_643 = None
    add_925: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1157, unsqueeze_644);  mul_1157 = unsqueeze_644 = None
    relu_145: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_925);  add_925 = None
    alias_145: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_145)
    convolution_158: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_145, primals_475, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_926: "i64[]" = torch.ops.aten.add.Tensor(primals_1458, 1)
    var_mean_158 = torch.ops.aten.var_mean.correction(convolution_158, [0, 2, 3], correction = 0, keepdim = True)
    getitem_316: "f32[1, 72, 1, 1]" = var_mean_158[0]
    getitem_317: "f32[1, 72, 1, 1]" = var_mean_158[1];  var_mean_158 = None
    add_927: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_316, 1e-05)
    rsqrt_158: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_927);  add_927 = None
    sub_158: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_158, getitem_317)
    mul_1158: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_158, rsqrt_158);  sub_158 = None
    squeeze_474: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_317, [0, 2, 3]);  getitem_317 = None
    squeeze_475: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_158, [0, 2, 3]);  rsqrt_158 = None
    mul_1159: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_474, 0.1)
    mul_1160: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1456, 0.9)
    add_928: "f32[72]" = torch.ops.aten.add.Tensor(mul_1159, mul_1160);  mul_1159 = mul_1160 = None
    squeeze_476: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_316, [0, 2, 3]);  getitem_316 = None
    mul_1161: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_476, 1.0006381620931717);  squeeze_476 = None
    mul_1162: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1161, 0.1);  mul_1161 = None
    mul_1163: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1457, 0.9)
    add_929: "f32[72]" = torch.ops.aten.add.Tensor(mul_1162, mul_1163);  mul_1162 = mul_1163 = None
    unsqueeze_645: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_476, -1)
    unsqueeze_646: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_645, -1);  unsqueeze_645 = None
    mul_1164: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1158, unsqueeze_646);  mul_1158 = unsqueeze_646 = None
    unsqueeze_647: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_477, -1);  primals_477 = None
    unsqueeze_648: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_647, -1);  unsqueeze_647 = None
    add_930: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1164, unsqueeze_648);  mul_1164 = unsqueeze_648 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_159: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_134, primals_478, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_931: "i64[]" = torch.ops.aten.add.Tensor(primals_1461, 1)
    var_mean_159 = torch.ops.aten.var_mean.correction(convolution_159, [0, 2, 3], correction = 0, keepdim = True)
    getitem_318: "f32[1, 72, 1, 1]" = var_mean_159[0]
    getitem_319: "f32[1, 72, 1, 1]" = var_mean_159[1];  var_mean_159 = None
    add_932: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_318, 1e-05)
    rsqrt_159: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_932);  add_932 = None
    sub_159: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_159, getitem_319)
    mul_1165: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_159, rsqrt_159);  sub_159 = None
    squeeze_477: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_319, [0, 2, 3]);  getitem_319 = None
    squeeze_478: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_159, [0, 2, 3]);  rsqrt_159 = None
    mul_1166: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_477, 0.1)
    mul_1167: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1459, 0.9)
    add_933: "f32[72]" = torch.ops.aten.add.Tensor(mul_1166, mul_1167);  mul_1166 = mul_1167 = None
    squeeze_479: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_318, [0, 2, 3]);  getitem_318 = None
    mul_1168: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_479, 1.0006381620931717);  squeeze_479 = None
    mul_1169: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1168, 0.1);  mul_1168 = None
    mul_1170: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1460, 0.9)
    add_934: "f32[72]" = torch.ops.aten.add.Tensor(mul_1169, mul_1170);  mul_1169 = mul_1170 = None
    unsqueeze_649: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_479, -1)
    unsqueeze_650: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_649, -1);  unsqueeze_649 = None
    mul_1171: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1165, unsqueeze_650);  mul_1165 = unsqueeze_650 = None
    unsqueeze_651: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_480, -1);  primals_480 = None
    unsqueeze_652: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_651, -1);  unsqueeze_651 = None
    add_935: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1171, unsqueeze_652);  mul_1171 = unsqueeze_652 = None
    add_936: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_930, add_935);  add_930 = add_935 = None
    add_937: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_936, relu_142);  add_936 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_146: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_937);  add_937 = None
    alias_146: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_146)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:756, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition3)]
    convolution_160: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_146, primals_481, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_938: "i64[]" = torch.ops.aten.add.Tensor(primals_1464, 1)
    var_mean_160 = torch.ops.aten.var_mean.correction(convolution_160, [0, 2, 3], correction = 0, keepdim = True)
    getitem_320: "f32[1, 144, 1, 1]" = var_mean_160[0]
    getitem_321: "f32[1, 144, 1, 1]" = var_mean_160[1];  var_mean_160 = None
    add_939: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_320, 1e-05)
    rsqrt_160: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_939);  add_939 = None
    sub_160: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_160, getitem_321)
    mul_1172: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_160, rsqrt_160);  sub_160 = None
    squeeze_480: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_321, [0, 2, 3]);  getitem_321 = None
    squeeze_481: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_160, [0, 2, 3]);  rsqrt_160 = None
    mul_1173: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_480, 0.1)
    mul_1174: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1462, 0.9)
    add_940: "f32[144]" = torch.ops.aten.add.Tensor(mul_1173, mul_1174);  mul_1173 = mul_1174 = None
    squeeze_482: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_320, [0, 2, 3]);  getitem_320 = None
    mul_1175: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_482, 1.0025575447570332);  squeeze_482 = None
    mul_1176: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1175, 0.1);  mul_1175 = None
    mul_1177: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1463, 0.9)
    add_941: "f32[144]" = torch.ops.aten.add.Tensor(mul_1176, mul_1177);  mul_1176 = mul_1177 = None
    unsqueeze_653: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_482, -1)
    unsqueeze_654: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_653, -1);  unsqueeze_653 = None
    mul_1178: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1172, unsqueeze_654);  mul_1172 = unsqueeze_654 = None
    unsqueeze_655: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_483, -1);  primals_483 = None
    unsqueeze_656: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_655, -1);  unsqueeze_655 = None
    add_942: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1178, unsqueeze_656);  mul_1178 = unsqueeze_656 = None
    relu_147: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_942);  add_942 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_161: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_143, primals_484, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_943: "i64[]" = torch.ops.aten.add.Tensor(primals_1467, 1)
    var_mean_161 = torch.ops.aten.var_mean.correction(convolution_161, [0, 2, 3], correction = 0, keepdim = True)
    getitem_322: "f32[1, 18, 1, 1]" = var_mean_161[0]
    getitem_323: "f32[1, 18, 1, 1]" = var_mean_161[1];  var_mean_161 = None
    add_944: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_322, 1e-05)
    rsqrt_161: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_944);  add_944 = None
    sub_161: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_161, getitem_323)
    mul_1179: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_161, rsqrt_161);  sub_161 = None
    squeeze_483: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_323, [0, 2, 3]);  getitem_323 = None
    squeeze_484: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_161, [0, 2, 3]);  rsqrt_161 = None
    mul_1180: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_483, 0.1)
    mul_1181: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1465, 0.9)
    add_945: "f32[18]" = torch.ops.aten.add.Tensor(mul_1180, mul_1181);  mul_1180 = mul_1181 = None
    squeeze_485: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_322, [0, 2, 3]);  getitem_322 = None
    mul_1182: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_485, 1.0000398612827361);  squeeze_485 = None
    mul_1183: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1182, 0.1);  mul_1182 = None
    mul_1184: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1466, 0.9)
    add_946: "f32[18]" = torch.ops.aten.add.Tensor(mul_1183, mul_1184);  mul_1183 = mul_1184 = None
    unsqueeze_657: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_485, -1)
    unsqueeze_658: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_657, -1);  unsqueeze_657 = None
    mul_1185: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1179, unsqueeze_658);  mul_1179 = unsqueeze_658 = None
    unsqueeze_659: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_486, -1);  primals_486 = None
    unsqueeze_660: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_659, -1);  unsqueeze_659 = None
    add_947: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1185, unsqueeze_660);  mul_1185 = unsqueeze_660 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_148: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_947);  add_947 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_162: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_148, primals_487, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_948: "i64[]" = torch.ops.aten.add.Tensor(primals_1470, 1)
    var_mean_162 = torch.ops.aten.var_mean.correction(convolution_162, [0, 2, 3], correction = 0, keepdim = True)
    getitem_324: "f32[1, 18, 1, 1]" = var_mean_162[0]
    getitem_325: "f32[1, 18, 1, 1]" = var_mean_162[1];  var_mean_162 = None
    add_949: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_324, 1e-05)
    rsqrt_162: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_949);  add_949 = None
    sub_162: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_162, getitem_325)
    mul_1186: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_162, rsqrt_162);  sub_162 = None
    squeeze_486: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_325, [0, 2, 3]);  getitem_325 = None
    squeeze_487: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_162, [0, 2, 3]);  rsqrt_162 = None
    mul_1187: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_486, 0.1)
    mul_1188: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1468, 0.9)
    add_950: "f32[18]" = torch.ops.aten.add.Tensor(mul_1187, mul_1188);  mul_1187 = mul_1188 = None
    squeeze_488: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_324, [0, 2, 3]);  getitem_324 = None
    mul_1189: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_488, 1.0000398612827361);  squeeze_488 = None
    mul_1190: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1189, 0.1);  mul_1189 = None
    mul_1191: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1469, 0.9)
    add_951: "f32[18]" = torch.ops.aten.add.Tensor(mul_1190, mul_1191);  mul_1190 = mul_1191 = None
    unsqueeze_661: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_488, -1)
    unsqueeze_662: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_661, -1);  unsqueeze_661 = None
    mul_1192: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1186, unsqueeze_662);  mul_1186 = unsqueeze_662 = None
    unsqueeze_663: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_489, -1);  primals_489 = None
    unsqueeze_664: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_663, -1);  unsqueeze_663 = None
    add_952: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1192, unsqueeze_664);  mul_1192 = unsqueeze_664 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_953: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_952, relu_143);  add_952 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_149: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_953);  add_953 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_163: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_149, primals_490, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_954: "i64[]" = torch.ops.aten.add.Tensor(primals_1473, 1)
    var_mean_163 = torch.ops.aten.var_mean.correction(convolution_163, [0, 2, 3], correction = 0, keepdim = True)
    getitem_326: "f32[1, 18, 1, 1]" = var_mean_163[0]
    getitem_327: "f32[1, 18, 1, 1]" = var_mean_163[1];  var_mean_163 = None
    add_955: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_326, 1e-05)
    rsqrt_163: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_955);  add_955 = None
    sub_163: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_163, getitem_327)
    mul_1193: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_163, rsqrt_163);  sub_163 = None
    squeeze_489: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_327, [0, 2, 3]);  getitem_327 = None
    squeeze_490: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_163, [0, 2, 3]);  rsqrt_163 = None
    mul_1194: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_489, 0.1)
    mul_1195: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1471, 0.9)
    add_956: "f32[18]" = torch.ops.aten.add.Tensor(mul_1194, mul_1195);  mul_1194 = mul_1195 = None
    squeeze_491: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_326, [0, 2, 3]);  getitem_326 = None
    mul_1196: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_491, 1.0000398612827361);  squeeze_491 = None
    mul_1197: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1196, 0.1);  mul_1196 = None
    mul_1198: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1472, 0.9)
    add_957: "f32[18]" = torch.ops.aten.add.Tensor(mul_1197, mul_1198);  mul_1197 = mul_1198 = None
    unsqueeze_665: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_491, -1)
    unsqueeze_666: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_665, -1);  unsqueeze_665 = None
    mul_1199: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1193, unsqueeze_666);  mul_1193 = unsqueeze_666 = None
    unsqueeze_667: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_492, -1);  primals_492 = None
    unsqueeze_668: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_667, -1);  unsqueeze_667 = None
    add_958: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1199, unsqueeze_668);  mul_1199 = unsqueeze_668 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_150: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_958);  add_958 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_164: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_150, primals_493, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_959: "i64[]" = torch.ops.aten.add.Tensor(primals_1476, 1)
    var_mean_164 = torch.ops.aten.var_mean.correction(convolution_164, [0, 2, 3], correction = 0, keepdim = True)
    getitem_328: "f32[1, 18, 1, 1]" = var_mean_164[0]
    getitem_329: "f32[1, 18, 1, 1]" = var_mean_164[1];  var_mean_164 = None
    add_960: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_328, 1e-05)
    rsqrt_164: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_960);  add_960 = None
    sub_164: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_164, getitem_329)
    mul_1200: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_164, rsqrt_164);  sub_164 = None
    squeeze_492: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_329, [0, 2, 3]);  getitem_329 = None
    squeeze_493: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_164, [0, 2, 3]);  rsqrt_164 = None
    mul_1201: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_492, 0.1)
    mul_1202: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1474, 0.9)
    add_961: "f32[18]" = torch.ops.aten.add.Tensor(mul_1201, mul_1202);  mul_1201 = mul_1202 = None
    squeeze_494: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_328, [0, 2, 3]);  getitem_328 = None
    mul_1203: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_494, 1.0000398612827361);  squeeze_494 = None
    mul_1204: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1203, 0.1);  mul_1203 = None
    mul_1205: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1475, 0.9)
    add_962: "f32[18]" = torch.ops.aten.add.Tensor(mul_1204, mul_1205);  mul_1204 = mul_1205 = None
    unsqueeze_669: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_494, -1)
    unsqueeze_670: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_669, -1);  unsqueeze_669 = None
    mul_1206: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1200, unsqueeze_670);  mul_1200 = unsqueeze_670 = None
    unsqueeze_671: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_495, -1);  primals_495 = None
    unsqueeze_672: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_671, -1);  unsqueeze_671 = None
    add_963: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1206, unsqueeze_672);  mul_1206 = unsqueeze_672 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_964: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_963, relu_149);  add_963 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_151: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_964);  add_964 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_165: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_151, primals_496, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_965: "i64[]" = torch.ops.aten.add.Tensor(primals_1479, 1)
    var_mean_165 = torch.ops.aten.var_mean.correction(convolution_165, [0, 2, 3], correction = 0, keepdim = True)
    getitem_330: "f32[1, 18, 1, 1]" = var_mean_165[0]
    getitem_331: "f32[1, 18, 1, 1]" = var_mean_165[1];  var_mean_165 = None
    add_966: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_330, 1e-05)
    rsqrt_165: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_966);  add_966 = None
    sub_165: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_165, getitem_331)
    mul_1207: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_165, rsqrt_165);  sub_165 = None
    squeeze_495: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_331, [0, 2, 3]);  getitem_331 = None
    squeeze_496: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_165, [0, 2, 3]);  rsqrt_165 = None
    mul_1208: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_495, 0.1)
    mul_1209: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1477, 0.9)
    add_967: "f32[18]" = torch.ops.aten.add.Tensor(mul_1208, mul_1209);  mul_1208 = mul_1209 = None
    squeeze_497: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_330, [0, 2, 3]);  getitem_330 = None
    mul_1210: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_497, 1.0000398612827361);  squeeze_497 = None
    mul_1211: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1210, 0.1);  mul_1210 = None
    mul_1212: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1478, 0.9)
    add_968: "f32[18]" = torch.ops.aten.add.Tensor(mul_1211, mul_1212);  mul_1211 = mul_1212 = None
    unsqueeze_673: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_497, -1)
    unsqueeze_674: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_673, -1);  unsqueeze_673 = None
    mul_1213: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1207, unsqueeze_674);  mul_1207 = unsqueeze_674 = None
    unsqueeze_675: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_498, -1);  primals_498 = None
    unsqueeze_676: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_675, -1);  unsqueeze_675 = None
    add_969: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1213, unsqueeze_676);  mul_1213 = unsqueeze_676 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_152: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_969);  add_969 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_166: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_152, primals_499, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_970: "i64[]" = torch.ops.aten.add.Tensor(primals_1482, 1)
    var_mean_166 = torch.ops.aten.var_mean.correction(convolution_166, [0, 2, 3], correction = 0, keepdim = True)
    getitem_332: "f32[1, 18, 1, 1]" = var_mean_166[0]
    getitem_333: "f32[1, 18, 1, 1]" = var_mean_166[1];  var_mean_166 = None
    add_971: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_332, 1e-05)
    rsqrt_166: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_971);  add_971 = None
    sub_166: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_166, getitem_333)
    mul_1214: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_166, rsqrt_166);  sub_166 = None
    squeeze_498: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_333, [0, 2, 3]);  getitem_333 = None
    squeeze_499: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_166, [0, 2, 3]);  rsqrt_166 = None
    mul_1215: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_498, 0.1)
    mul_1216: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1480, 0.9)
    add_972: "f32[18]" = torch.ops.aten.add.Tensor(mul_1215, mul_1216);  mul_1215 = mul_1216 = None
    squeeze_500: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_332, [0, 2, 3]);  getitem_332 = None
    mul_1217: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_500, 1.0000398612827361);  squeeze_500 = None
    mul_1218: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1217, 0.1);  mul_1217 = None
    mul_1219: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1481, 0.9)
    add_973: "f32[18]" = torch.ops.aten.add.Tensor(mul_1218, mul_1219);  mul_1218 = mul_1219 = None
    unsqueeze_677: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_500, -1)
    unsqueeze_678: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_677, -1);  unsqueeze_677 = None
    mul_1220: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1214, unsqueeze_678);  mul_1214 = unsqueeze_678 = None
    unsqueeze_679: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_501, -1);  primals_501 = None
    unsqueeze_680: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_679, -1);  unsqueeze_679 = None
    add_974: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1220, unsqueeze_680);  mul_1220 = unsqueeze_680 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_975: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_974, relu_151);  add_974 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_153: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_975);  add_975 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_167: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_153, primals_502, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_976: "i64[]" = torch.ops.aten.add.Tensor(primals_1485, 1)
    var_mean_167 = torch.ops.aten.var_mean.correction(convolution_167, [0, 2, 3], correction = 0, keepdim = True)
    getitem_334: "f32[1, 18, 1, 1]" = var_mean_167[0]
    getitem_335: "f32[1, 18, 1, 1]" = var_mean_167[1];  var_mean_167 = None
    add_977: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_334, 1e-05)
    rsqrt_167: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_977);  add_977 = None
    sub_167: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_167, getitem_335)
    mul_1221: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_167, rsqrt_167);  sub_167 = None
    squeeze_501: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_335, [0, 2, 3]);  getitem_335 = None
    squeeze_502: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_167, [0, 2, 3]);  rsqrt_167 = None
    mul_1222: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_501, 0.1)
    mul_1223: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1483, 0.9)
    add_978: "f32[18]" = torch.ops.aten.add.Tensor(mul_1222, mul_1223);  mul_1222 = mul_1223 = None
    squeeze_503: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_334, [0, 2, 3]);  getitem_334 = None
    mul_1224: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_503, 1.0000398612827361);  squeeze_503 = None
    mul_1225: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1224, 0.1);  mul_1224 = None
    mul_1226: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1484, 0.9)
    add_979: "f32[18]" = torch.ops.aten.add.Tensor(mul_1225, mul_1226);  mul_1225 = mul_1226 = None
    unsqueeze_681: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_503, -1)
    unsqueeze_682: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_681, -1);  unsqueeze_681 = None
    mul_1227: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1221, unsqueeze_682);  mul_1221 = unsqueeze_682 = None
    unsqueeze_683: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_504, -1);  primals_504 = None
    unsqueeze_684: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_683, -1);  unsqueeze_683 = None
    add_980: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1227, unsqueeze_684);  mul_1227 = unsqueeze_684 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_154: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_980);  add_980 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_168: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_154, primals_505, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_981: "i64[]" = torch.ops.aten.add.Tensor(primals_1488, 1)
    var_mean_168 = torch.ops.aten.var_mean.correction(convolution_168, [0, 2, 3], correction = 0, keepdim = True)
    getitem_336: "f32[1, 18, 1, 1]" = var_mean_168[0]
    getitem_337: "f32[1, 18, 1, 1]" = var_mean_168[1];  var_mean_168 = None
    add_982: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_336, 1e-05)
    rsqrt_168: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_982);  add_982 = None
    sub_168: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_168, getitem_337)
    mul_1228: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_168, rsqrt_168);  sub_168 = None
    squeeze_504: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_337, [0, 2, 3]);  getitem_337 = None
    squeeze_505: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_168, [0, 2, 3]);  rsqrt_168 = None
    mul_1229: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_504, 0.1)
    mul_1230: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1486, 0.9)
    add_983: "f32[18]" = torch.ops.aten.add.Tensor(mul_1229, mul_1230);  mul_1229 = mul_1230 = None
    squeeze_506: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_336, [0, 2, 3]);  getitem_336 = None
    mul_1231: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_506, 1.0000398612827361);  squeeze_506 = None
    mul_1232: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1231, 0.1);  mul_1231 = None
    mul_1233: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1487, 0.9)
    add_984: "f32[18]" = torch.ops.aten.add.Tensor(mul_1232, mul_1233);  mul_1232 = mul_1233 = None
    unsqueeze_685: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_506, -1)
    unsqueeze_686: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_685, -1);  unsqueeze_685 = None
    mul_1234: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1228, unsqueeze_686);  mul_1228 = unsqueeze_686 = None
    unsqueeze_687: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_507, -1);  primals_507 = None
    unsqueeze_688: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_687, -1);  unsqueeze_687 = None
    add_985: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1234, unsqueeze_688);  mul_1234 = unsqueeze_688 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_986: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_985, relu_153);  add_985 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_155: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_986);  add_986 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_169: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_144, primals_508, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_987: "i64[]" = torch.ops.aten.add.Tensor(primals_1491, 1)
    var_mean_169 = torch.ops.aten.var_mean.correction(convolution_169, [0, 2, 3], correction = 0, keepdim = True)
    getitem_338: "f32[1, 36, 1, 1]" = var_mean_169[0]
    getitem_339: "f32[1, 36, 1, 1]" = var_mean_169[1];  var_mean_169 = None
    add_988: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_338, 1e-05)
    rsqrt_169: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_988);  add_988 = None
    sub_169: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_169, getitem_339)
    mul_1235: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_169, rsqrt_169);  sub_169 = None
    squeeze_507: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_339, [0, 2, 3]);  getitem_339 = None
    squeeze_508: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_169, [0, 2, 3]);  rsqrt_169 = None
    mul_1236: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_507, 0.1)
    mul_1237: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1489, 0.9)
    add_989: "f32[36]" = torch.ops.aten.add.Tensor(mul_1236, mul_1237);  mul_1236 = mul_1237 = None
    squeeze_509: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_338, [0, 2, 3]);  getitem_338 = None
    mul_1238: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_509, 1.0001594642002871);  squeeze_509 = None
    mul_1239: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1238, 0.1);  mul_1238 = None
    mul_1240: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1490, 0.9)
    add_990: "f32[36]" = torch.ops.aten.add.Tensor(mul_1239, mul_1240);  mul_1239 = mul_1240 = None
    unsqueeze_689: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_509, -1)
    unsqueeze_690: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_689, -1);  unsqueeze_689 = None
    mul_1241: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1235, unsqueeze_690);  mul_1235 = unsqueeze_690 = None
    unsqueeze_691: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_510, -1);  primals_510 = None
    unsqueeze_692: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_691, -1);  unsqueeze_691 = None
    add_991: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1241, unsqueeze_692);  mul_1241 = unsqueeze_692 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_156: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_991);  add_991 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_170: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_156, primals_511, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_992: "i64[]" = torch.ops.aten.add.Tensor(primals_1494, 1)
    var_mean_170 = torch.ops.aten.var_mean.correction(convolution_170, [0, 2, 3], correction = 0, keepdim = True)
    getitem_340: "f32[1, 36, 1, 1]" = var_mean_170[0]
    getitem_341: "f32[1, 36, 1, 1]" = var_mean_170[1];  var_mean_170 = None
    add_993: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_340, 1e-05)
    rsqrt_170: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_993);  add_993 = None
    sub_170: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_170, getitem_341)
    mul_1242: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_170, rsqrt_170);  sub_170 = None
    squeeze_510: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_341, [0, 2, 3]);  getitem_341 = None
    squeeze_511: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_170, [0, 2, 3]);  rsqrt_170 = None
    mul_1243: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_510, 0.1)
    mul_1244: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1492, 0.9)
    add_994: "f32[36]" = torch.ops.aten.add.Tensor(mul_1243, mul_1244);  mul_1243 = mul_1244 = None
    squeeze_512: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_340, [0, 2, 3]);  getitem_340 = None
    mul_1245: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_512, 1.0001594642002871);  squeeze_512 = None
    mul_1246: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1245, 0.1);  mul_1245 = None
    mul_1247: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1493, 0.9)
    add_995: "f32[36]" = torch.ops.aten.add.Tensor(mul_1246, mul_1247);  mul_1246 = mul_1247 = None
    unsqueeze_693: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_512, -1)
    unsqueeze_694: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_693, -1);  unsqueeze_693 = None
    mul_1248: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1242, unsqueeze_694);  mul_1242 = unsqueeze_694 = None
    unsqueeze_695: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_513, -1);  primals_513 = None
    unsqueeze_696: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_695, -1);  unsqueeze_695 = None
    add_996: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1248, unsqueeze_696);  mul_1248 = unsqueeze_696 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_997: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_996, relu_144);  add_996 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_157: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_997);  add_997 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_171: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_157, primals_514, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_998: "i64[]" = torch.ops.aten.add.Tensor(primals_1497, 1)
    var_mean_171 = torch.ops.aten.var_mean.correction(convolution_171, [0, 2, 3], correction = 0, keepdim = True)
    getitem_342: "f32[1, 36, 1, 1]" = var_mean_171[0]
    getitem_343: "f32[1, 36, 1, 1]" = var_mean_171[1];  var_mean_171 = None
    add_999: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_342, 1e-05)
    rsqrt_171: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_999);  add_999 = None
    sub_171: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_171, getitem_343)
    mul_1249: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_171, rsqrt_171);  sub_171 = None
    squeeze_513: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_343, [0, 2, 3]);  getitem_343 = None
    squeeze_514: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_171, [0, 2, 3]);  rsqrt_171 = None
    mul_1250: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_513, 0.1)
    mul_1251: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1495, 0.9)
    add_1000: "f32[36]" = torch.ops.aten.add.Tensor(mul_1250, mul_1251);  mul_1250 = mul_1251 = None
    squeeze_515: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_342, [0, 2, 3]);  getitem_342 = None
    mul_1252: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_515, 1.0001594642002871);  squeeze_515 = None
    mul_1253: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1252, 0.1);  mul_1252 = None
    mul_1254: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1496, 0.9)
    add_1001: "f32[36]" = torch.ops.aten.add.Tensor(mul_1253, mul_1254);  mul_1253 = mul_1254 = None
    unsqueeze_697: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_515, -1)
    unsqueeze_698: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_697, -1);  unsqueeze_697 = None
    mul_1255: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1249, unsqueeze_698);  mul_1249 = unsqueeze_698 = None
    unsqueeze_699: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_516, -1);  primals_516 = None
    unsqueeze_700: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_699, -1);  unsqueeze_699 = None
    add_1002: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1255, unsqueeze_700);  mul_1255 = unsqueeze_700 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_158: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1002);  add_1002 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_172: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_158, primals_517, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1003: "i64[]" = torch.ops.aten.add.Tensor(primals_1500, 1)
    var_mean_172 = torch.ops.aten.var_mean.correction(convolution_172, [0, 2, 3], correction = 0, keepdim = True)
    getitem_344: "f32[1, 36, 1, 1]" = var_mean_172[0]
    getitem_345: "f32[1, 36, 1, 1]" = var_mean_172[1];  var_mean_172 = None
    add_1004: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_344, 1e-05)
    rsqrt_172: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1004);  add_1004 = None
    sub_172: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_172, getitem_345)
    mul_1256: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_172, rsqrt_172);  sub_172 = None
    squeeze_516: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_345, [0, 2, 3]);  getitem_345 = None
    squeeze_517: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_172, [0, 2, 3]);  rsqrt_172 = None
    mul_1257: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_516, 0.1)
    mul_1258: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1498, 0.9)
    add_1005: "f32[36]" = torch.ops.aten.add.Tensor(mul_1257, mul_1258);  mul_1257 = mul_1258 = None
    squeeze_518: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_344, [0, 2, 3]);  getitem_344 = None
    mul_1259: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_518, 1.0001594642002871);  squeeze_518 = None
    mul_1260: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1259, 0.1);  mul_1259 = None
    mul_1261: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1499, 0.9)
    add_1006: "f32[36]" = torch.ops.aten.add.Tensor(mul_1260, mul_1261);  mul_1260 = mul_1261 = None
    unsqueeze_701: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_518, -1)
    unsqueeze_702: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_701, -1);  unsqueeze_701 = None
    mul_1262: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1256, unsqueeze_702);  mul_1256 = unsqueeze_702 = None
    unsqueeze_703: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_519, -1);  primals_519 = None
    unsqueeze_704: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_703, -1);  unsqueeze_703 = None
    add_1007: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1262, unsqueeze_704);  mul_1262 = unsqueeze_704 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1008: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1007, relu_157);  add_1007 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_159: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1008);  add_1008 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_173: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_159, primals_520, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1009: "i64[]" = torch.ops.aten.add.Tensor(primals_1503, 1)
    var_mean_173 = torch.ops.aten.var_mean.correction(convolution_173, [0, 2, 3], correction = 0, keepdim = True)
    getitem_346: "f32[1, 36, 1, 1]" = var_mean_173[0]
    getitem_347: "f32[1, 36, 1, 1]" = var_mean_173[1];  var_mean_173 = None
    add_1010: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_346, 1e-05)
    rsqrt_173: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1010);  add_1010 = None
    sub_173: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_173, getitem_347)
    mul_1263: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_173, rsqrt_173);  sub_173 = None
    squeeze_519: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_347, [0, 2, 3]);  getitem_347 = None
    squeeze_520: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_173, [0, 2, 3]);  rsqrt_173 = None
    mul_1264: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_519, 0.1)
    mul_1265: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1501, 0.9)
    add_1011: "f32[36]" = torch.ops.aten.add.Tensor(mul_1264, mul_1265);  mul_1264 = mul_1265 = None
    squeeze_521: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_346, [0, 2, 3]);  getitem_346 = None
    mul_1266: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_521, 1.0001594642002871);  squeeze_521 = None
    mul_1267: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1266, 0.1);  mul_1266 = None
    mul_1268: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1502, 0.9)
    add_1012: "f32[36]" = torch.ops.aten.add.Tensor(mul_1267, mul_1268);  mul_1267 = mul_1268 = None
    unsqueeze_705: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_521, -1)
    unsqueeze_706: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_705, -1);  unsqueeze_705 = None
    mul_1269: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1263, unsqueeze_706);  mul_1263 = unsqueeze_706 = None
    unsqueeze_707: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_522, -1);  primals_522 = None
    unsqueeze_708: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_707, -1);  unsqueeze_707 = None
    add_1013: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1269, unsqueeze_708);  mul_1269 = unsqueeze_708 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_160: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1013);  add_1013 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_174: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_160, primals_523, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1014: "i64[]" = torch.ops.aten.add.Tensor(primals_1506, 1)
    var_mean_174 = torch.ops.aten.var_mean.correction(convolution_174, [0, 2, 3], correction = 0, keepdim = True)
    getitem_348: "f32[1, 36, 1, 1]" = var_mean_174[0]
    getitem_349: "f32[1, 36, 1, 1]" = var_mean_174[1];  var_mean_174 = None
    add_1015: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_348, 1e-05)
    rsqrt_174: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1015);  add_1015 = None
    sub_174: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_174, getitem_349)
    mul_1270: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_174, rsqrt_174);  sub_174 = None
    squeeze_522: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_349, [0, 2, 3]);  getitem_349 = None
    squeeze_523: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_174, [0, 2, 3]);  rsqrt_174 = None
    mul_1271: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_522, 0.1)
    mul_1272: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1504, 0.9)
    add_1016: "f32[36]" = torch.ops.aten.add.Tensor(mul_1271, mul_1272);  mul_1271 = mul_1272 = None
    squeeze_524: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_348, [0, 2, 3]);  getitem_348 = None
    mul_1273: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_524, 1.0001594642002871);  squeeze_524 = None
    mul_1274: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1273, 0.1);  mul_1273 = None
    mul_1275: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1505, 0.9)
    add_1017: "f32[36]" = torch.ops.aten.add.Tensor(mul_1274, mul_1275);  mul_1274 = mul_1275 = None
    unsqueeze_709: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_524, -1)
    unsqueeze_710: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_709, -1);  unsqueeze_709 = None
    mul_1276: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1270, unsqueeze_710);  mul_1270 = unsqueeze_710 = None
    unsqueeze_711: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_525, -1);  primals_525 = None
    unsqueeze_712: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_711, -1);  unsqueeze_711 = None
    add_1018: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1276, unsqueeze_712);  mul_1276 = unsqueeze_712 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1019: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1018, relu_159);  add_1018 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_161: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1019);  add_1019 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_175: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_161, primals_526, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1020: "i64[]" = torch.ops.aten.add.Tensor(primals_1509, 1)
    var_mean_175 = torch.ops.aten.var_mean.correction(convolution_175, [0, 2, 3], correction = 0, keepdim = True)
    getitem_350: "f32[1, 36, 1, 1]" = var_mean_175[0]
    getitem_351: "f32[1, 36, 1, 1]" = var_mean_175[1];  var_mean_175 = None
    add_1021: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_350, 1e-05)
    rsqrt_175: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1021);  add_1021 = None
    sub_175: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_175, getitem_351)
    mul_1277: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_175, rsqrt_175);  sub_175 = None
    squeeze_525: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_351, [0, 2, 3]);  getitem_351 = None
    squeeze_526: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_175, [0, 2, 3]);  rsqrt_175 = None
    mul_1278: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_525, 0.1)
    mul_1279: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1507, 0.9)
    add_1022: "f32[36]" = torch.ops.aten.add.Tensor(mul_1278, mul_1279);  mul_1278 = mul_1279 = None
    squeeze_527: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_350, [0, 2, 3]);  getitem_350 = None
    mul_1280: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_527, 1.0001594642002871);  squeeze_527 = None
    mul_1281: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1280, 0.1);  mul_1280 = None
    mul_1282: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1508, 0.9)
    add_1023: "f32[36]" = torch.ops.aten.add.Tensor(mul_1281, mul_1282);  mul_1281 = mul_1282 = None
    unsqueeze_713: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_527, -1)
    unsqueeze_714: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_713, -1);  unsqueeze_713 = None
    mul_1283: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1277, unsqueeze_714);  mul_1277 = unsqueeze_714 = None
    unsqueeze_715: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_528, -1);  primals_528 = None
    unsqueeze_716: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_715, -1);  unsqueeze_715 = None
    add_1024: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1283, unsqueeze_716);  mul_1283 = unsqueeze_716 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_162: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1024);  add_1024 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_176: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_162, primals_529, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1025: "i64[]" = torch.ops.aten.add.Tensor(primals_1512, 1)
    var_mean_176 = torch.ops.aten.var_mean.correction(convolution_176, [0, 2, 3], correction = 0, keepdim = True)
    getitem_352: "f32[1, 36, 1, 1]" = var_mean_176[0]
    getitem_353: "f32[1, 36, 1, 1]" = var_mean_176[1];  var_mean_176 = None
    add_1026: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_352, 1e-05)
    rsqrt_176: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1026);  add_1026 = None
    sub_176: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_176, getitem_353)
    mul_1284: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_176, rsqrt_176);  sub_176 = None
    squeeze_528: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_353, [0, 2, 3]);  getitem_353 = None
    squeeze_529: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_176, [0, 2, 3]);  rsqrt_176 = None
    mul_1285: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_528, 0.1)
    mul_1286: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1510, 0.9)
    add_1027: "f32[36]" = torch.ops.aten.add.Tensor(mul_1285, mul_1286);  mul_1285 = mul_1286 = None
    squeeze_530: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_352, [0, 2, 3]);  getitem_352 = None
    mul_1287: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_530, 1.0001594642002871);  squeeze_530 = None
    mul_1288: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1287, 0.1);  mul_1287 = None
    mul_1289: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1511, 0.9)
    add_1028: "f32[36]" = torch.ops.aten.add.Tensor(mul_1288, mul_1289);  mul_1288 = mul_1289 = None
    unsqueeze_717: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_530, -1)
    unsqueeze_718: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_717, -1);  unsqueeze_717 = None
    mul_1290: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1284, unsqueeze_718);  mul_1284 = unsqueeze_718 = None
    unsqueeze_719: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_531, -1);  primals_531 = None
    unsqueeze_720: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_719, -1);  unsqueeze_719 = None
    add_1029: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1290, unsqueeze_720);  mul_1290 = unsqueeze_720 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1030: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1029, relu_161);  add_1029 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_163: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1030);  add_1030 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_177: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_146, primals_532, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1031: "i64[]" = torch.ops.aten.add.Tensor(primals_1515, 1)
    var_mean_177 = torch.ops.aten.var_mean.correction(convolution_177, [0, 2, 3], correction = 0, keepdim = True)
    getitem_354: "f32[1, 72, 1, 1]" = var_mean_177[0]
    getitem_355: "f32[1, 72, 1, 1]" = var_mean_177[1];  var_mean_177 = None
    add_1032: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_354, 1e-05)
    rsqrt_177: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1032);  add_1032 = None
    sub_177: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_177, getitem_355)
    mul_1291: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_177, rsqrt_177);  sub_177 = None
    squeeze_531: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_355, [0, 2, 3]);  getitem_355 = None
    squeeze_532: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_177, [0, 2, 3]);  rsqrt_177 = None
    mul_1292: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_531, 0.1)
    mul_1293: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1513, 0.9)
    add_1033: "f32[72]" = torch.ops.aten.add.Tensor(mul_1292, mul_1293);  mul_1292 = mul_1293 = None
    squeeze_533: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_354, [0, 2, 3]);  getitem_354 = None
    mul_1294: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_533, 1.0006381620931717);  squeeze_533 = None
    mul_1295: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1294, 0.1);  mul_1294 = None
    mul_1296: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1514, 0.9)
    add_1034: "f32[72]" = torch.ops.aten.add.Tensor(mul_1295, mul_1296);  mul_1295 = mul_1296 = None
    unsqueeze_721: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_533, -1)
    unsqueeze_722: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_721, -1);  unsqueeze_721 = None
    mul_1297: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1291, unsqueeze_722);  mul_1291 = unsqueeze_722 = None
    unsqueeze_723: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_534, -1);  primals_534 = None
    unsqueeze_724: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_723, -1);  unsqueeze_723 = None
    add_1035: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1297, unsqueeze_724);  mul_1297 = unsqueeze_724 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_164: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1035);  add_1035 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_178: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_164, primals_535, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1036: "i64[]" = torch.ops.aten.add.Tensor(primals_1518, 1)
    var_mean_178 = torch.ops.aten.var_mean.correction(convolution_178, [0, 2, 3], correction = 0, keepdim = True)
    getitem_356: "f32[1, 72, 1, 1]" = var_mean_178[0]
    getitem_357: "f32[1, 72, 1, 1]" = var_mean_178[1];  var_mean_178 = None
    add_1037: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_356, 1e-05)
    rsqrt_178: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1037);  add_1037 = None
    sub_178: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_178, getitem_357)
    mul_1298: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_178, rsqrt_178);  sub_178 = None
    squeeze_534: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_357, [0, 2, 3]);  getitem_357 = None
    squeeze_535: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_178, [0, 2, 3]);  rsqrt_178 = None
    mul_1299: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_534, 0.1)
    mul_1300: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1516, 0.9)
    add_1038: "f32[72]" = torch.ops.aten.add.Tensor(mul_1299, mul_1300);  mul_1299 = mul_1300 = None
    squeeze_536: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_356, [0, 2, 3]);  getitem_356 = None
    mul_1301: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_536, 1.0006381620931717);  squeeze_536 = None
    mul_1302: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1301, 0.1);  mul_1301 = None
    mul_1303: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1517, 0.9)
    add_1039: "f32[72]" = torch.ops.aten.add.Tensor(mul_1302, mul_1303);  mul_1302 = mul_1303 = None
    unsqueeze_725: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_536, -1)
    unsqueeze_726: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_725, -1);  unsqueeze_725 = None
    mul_1304: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1298, unsqueeze_726);  mul_1298 = unsqueeze_726 = None
    unsqueeze_727: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_537, -1);  primals_537 = None
    unsqueeze_728: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_727, -1);  unsqueeze_727 = None
    add_1040: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1304, unsqueeze_728);  mul_1304 = unsqueeze_728 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1041: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1040, relu_146);  add_1040 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_165: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1041);  add_1041 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_179: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_165, primals_538, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1042: "i64[]" = torch.ops.aten.add.Tensor(primals_1521, 1)
    var_mean_179 = torch.ops.aten.var_mean.correction(convolution_179, [0, 2, 3], correction = 0, keepdim = True)
    getitem_358: "f32[1, 72, 1, 1]" = var_mean_179[0]
    getitem_359: "f32[1, 72, 1, 1]" = var_mean_179[1];  var_mean_179 = None
    add_1043: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_358, 1e-05)
    rsqrt_179: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1043);  add_1043 = None
    sub_179: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_179, getitem_359)
    mul_1305: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_179, rsqrt_179);  sub_179 = None
    squeeze_537: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_359, [0, 2, 3]);  getitem_359 = None
    squeeze_538: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_179, [0, 2, 3]);  rsqrt_179 = None
    mul_1306: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_537, 0.1)
    mul_1307: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1519, 0.9)
    add_1044: "f32[72]" = torch.ops.aten.add.Tensor(mul_1306, mul_1307);  mul_1306 = mul_1307 = None
    squeeze_539: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_358, [0, 2, 3]);  getitem_358 = None
    mul_1308: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_539, 1.0006381620931717);  squeeze_539 = None
    mul_1309: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1308, 0.1);  mul_1308 = None
    mul_1310: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1520, 0.9)
    add_1045: "f32[72]" = torch.ops.aten.add.Tensor(mul_1309, mul_1310);  mul_1309 = mul_1310 = None
    unsqueeze_729: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_539, -1)
    unsqueeze_730: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_729, -1);  unsqueeze_729 = None
    mul_1311: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1305, unsqueeze_730);  mul_1305 = unsqueeze_730 = None
    unsqueeze_731: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_540, -1);  primals_540 = None
    unsqueeze_732: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_731, -1);  unsqueeze_731 = None
    add_1046: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1311, unsqueeze_732);  mul_1311 = unsqueeze_732 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_166: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1046);  add_1046 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_180: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_166, primals_541, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1047: "i64[]" = torch.ops.aten.add.Tensor(primals_1524, 1)
    var_mean_180 = torch.ops.aten.var_mean.correction(convolution_180, [0, 2, 3], correction = 0, keepdim = True)
    getitem_360: "f32[1, 72, 1, 1]" = var_mean_180[0]
    getitem_361: "f32[1, 72, 1, 1]" = var_mean_180[1];  var_mean_180 = None
    add_1048: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_360, 1e-05)
    rsqrt_180: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1048);  add_1048 = None
    sub_180: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_180, getitem_361)
    mul_1312: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_180, rsqrt_180);  sub_180 = None
    squeeze_540: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_361, [0, 2, 3]);  getitem_361 = None
    squeeze_541: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_180, [0, 2, 3]);  rsqrt_180 = None
    mul_1313: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_540, 0.1)
    mul_1314: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1522, 0.9)
    add_1049: "f32[72]" = torch.ops.aten.add.Tensor(mul_1313, mul_1314);  mul_1313 = mul_1314 = None
    squeeze_542: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_360, [0, 2, 3]);  getitem_360 = None
    mul_1315: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_542, 1.0006381620931717);  squeeze_542 = None
    mul_1316: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1315, 0.1);  mul_1315 = None
    mul_1317: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1523, 0.9)
    add_1050: "f32[72]" = torch.ops.aten.add.Tensor(mul_1316, mul_1317);  mul_1316 = mul_1317 = None
    unsqueeze_733: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_542, -1)
    unsqueeze_734: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_733, -1);  unsqueeze_733 = None
    mul_1318: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1312, unsqueeze_734);  mul_1312 = unsqueeze_734 = None
    unsqueeze_735: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_543, -1);  primals_543 = None
    unsqueeze_736: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_735, -1);  unsqueeze_735 = None
    add_1051: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1318, unsqueeze_736);  mul_1318 = unsqueeze_736 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1052: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1051, relu_165);  add_1051 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_167: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1052);  add_1052 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_181: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_167, primals_544, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1053: "i64[]" = torch.ops.aten.add.Tensor(primals_1527, 1)
    var_mean_181 = torch.ops.aten.var_mean.correction(convolution_181, [0, 2, 3], correction = 0, keepdim = True)
    getitem_362: "f32[1, 72, 1, 1]" = var_mean_181[0]
    getitem_363: "f32[1, 72, 1, 1]" = var_mean_181[1];  var_mean_181 = None
    add_1054: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_362, 1e-05)
    rsqrt_181: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1054);  add_1054 = None
    sub_181: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_181, getitem_363)
    mul_1319: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_181, rsqrt_181);  sub_181 = None
    squeeze_543: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_363, [0, 2, 3]);  getitem_363 = None
    squeeze_544: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_181, [0, 2, 3]);  rsqrt_181 = None
    mul_1320: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_543, 0.1)
    mul_1321: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1525, 0.9)
    add_1055: "f32[72]" = torch.ops.aten.add.Tensor(mul_1320, mul_1321);  mul_1320 = mul_1321 = None
    squeeze_545: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_362, [0, 2, 3]);  getitem_362 = None
    mul_1322: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_545, 1.0006381620931717);  squeeze_545 = None
    mul_1323: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1322, 0.1);  mul_1322 = None
    mul_1324: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1526, 0.9)
    add_1056: "f32[72]" = torch.ops.aten.add.Tensor(mul_1323, mul_1324);  mul_1323 = mul_1324 = None
    unsqueeze_737: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_545, -1)
    unsqueeze_738: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_737, -1);  unsqueeze_737 = None
    mul_1325: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1319, unsqueeze_738);  mul_1319 = unsqueeze_738 = None
    unsqueeze_739: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_546, -1);  primals_546 = None
    unsqueeze_740: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_739, -1);  unsqueeze_739 = None
    add_1057: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1325, unsqueeze_740);  mul_1325 = unsqueeze_740 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_168: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1057);  add_1057 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_182: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_168, primals_547, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1058: "i64[]" = torch.ops.aten.add.Tensor(primals_1530, 1)
    var_mean_182 = torch.ops.aten.var_mean.correction(convolution_182, [0, 2, 3], correction = 0, keepdim = True)
    getitem_364: "f32[1, 72, 1, 1]" = var_mean_182[0]
    getitem_365: "f32[1, 72, 1, 1]" = var_mean_182[1];  var_mean_182 = None
    add_1059: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_364, 1e-05)
    rsqrt_182: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1059);  add_1059 = None
    sub_182: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_182, getitem_365)
    mul_1326: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_182, rsqrt_182);  sub_182 = None
    squeeze_546: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_365, [0, 2, 3]);  getitem_365 = None
    squeeze_547: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_182, [0, 2, 3]);  rsqrt_182 = None
    mul_1327: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_546, 0.1)
    mul_1328: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1528, 0.9)
    add_1060: "f32[72]" = torch.ops.aten.add.Tensor(mul_1327, mul_1328);  mul_1327 = mul_1328 = None
    squeeze_548: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_364, [0, 2, 3]);  getitem_364 = None
    mul_1329: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_548, 1.0006381620931717);  squeeze_548 = None
    mul_1330: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1329, 0.1);  mul_1329 = None
    mul_1331: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1529, 0.9)
    add_1061: "f32[72]" = torch.ops.aten.add.Tensor(mul_1330, mul_1331);  mul_1330 = mul_1331 = None
    unsqueeze_741: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_548, -1)
    unsqueeze_742: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_741, -1);  unsqueeze_741 = None
    mul_1332: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1326, unsqueeze_742);  mul_1326 = unsqueeze_742 = None
    unsqueeze_743: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_549, -1);  primals_549 = None
    unsqueeze_744: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_743, -1);  unsqueeze_743 = None
    add_1062: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1332, unsqueeze_744);  mul_1332 = unsqueeze_744 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1063: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1062, relu_167);  add_1062 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_169: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1063);  add_1063 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_183: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_169, primals_550, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1064: "i64[]" = torch.ops.aten.add.Tensor(primals_1533, 1)
    var_mean_183 = torch.ops.aten.var_mean.correction(convolution_183, [0, 2, 3], correction = 0, keepdim = True)
    getitem_366: "f32[1, 72, 1, 1]" = var_mean_183[0]
    getitem_367: "f32[1, 72, 1, 1]" = var_mean_183[1];  var_mean_183 = None
    add_1065: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_366, 1e-05)
    rsqrt_183: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1065);  add_1065 = None
    sub_183: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_183, getitem_367)
    mul_1333: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_183, rsqrt_183);  sub_183 = None
    squeeze_549: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_367, [0, 2, 3]);  getitem_367 = None
    squeeze_550: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_183, [0, 2, 3]);  rsqrt_183 = None
    mul_1334: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_549, 0.1)
    mul_1335: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1531, 0.9)
    add_1066: "f32[72]" = torch.ops.aten.add.Tensor(mul_1334, mul_1335);  mul_1334 = mul_1335 = None
    squeeze_551: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_366, [0, 2, 3]);  getitem_366 = None
    mul_1336: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_551, 1.0006381620931717);  squeeze_551 = None
    mul_1337: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1336, 0.1);  mul_1336 = None
    mul_1338: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1532, 0.9)
    add_1067: "f32[72]" = torch.ops.aten.add.Tensor(mul_1337, mul_1338);  mul_1337 = mul_1338 = None
    unsqueeze_745: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_551, -1)
    unsqueeze_746: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_745, -1);  unsqueeze_745 = None
    mul_1339: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1333, unsqueeze_746);  mul_1333 = unsqueeze_746 = None
    unsqueeze_747: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_552, -1);  primals_552 = None
    unsqueeze_748: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_747, -1);  unsqueeze_747 = None
    add_1068: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1339, unsqueeze_748);  mul_1339 = unsqueeze_748 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_170: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1068);  add_1068 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_184: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_170, primals_553, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1069: "i64[]" = torch.ops.aten.add.Tensor(primals_1536, 1)
    var_mean_184 = torch.ops.aten.var_mean.correction(convolution_184, [0, 2, 3], correction = 0, keepdim = True)
    getitem_368: "f32[1, 72, 1, 1]" = var_mean_184[0]
    getitem_369: "f32[1, 72, 1, 1]" = var_mean_184[1];  var_mean_184 = None
    add_1070: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_368, 1e-05)
    rsqrt_184: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1070);  add_1070 = None
    sub_184: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_184, getitem_369)
    mul_1340: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_184, rsqrt_184);  sub_184 = None
    squeeze_552: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_369, [0, 2, 3]);  getitem_369 = None
    squeeze_553: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_184, [0, 2, 3]);  rsqrt_184 = None
    mul_1341: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_552, 0.1)
    mul_1342: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1534, 0.9)
    add_1071: "f32[72]" = torch.ops.aten.add.Tensor(mul_1341, mul_1342);  mul_1341 = mul_1342 = None
    squeeze_554: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_368, [0, 2, 3]);  getitem_368 = None
    mul_1343: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_554, 1.0006381620931717);  squeeze_554 = None
    mul_1344: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1343, 0.1);  mul_1343 = None
    mul_1345: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1535, 0.9)
    add_1072: "f32[72]" = torch.ops.aten.add.Tensor(mul_1344, mul_1345);  mul_1344 = mul_1345 = None
    unsqueeze_749: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_554, -1)
    unsqueeze_750: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_749, -1);  unsqueeze_749 = None
    mul_1346: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1340, unsqueeze_750);  mul_1340 = unsqueeze_750 = None
    unsqueeze_751: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_555, -1);  primals_555 = None
    unsqueeze_752: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_751, -1);  unsqueeze_751 = None
    add_1073: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1346, unsqueeze_752);  mul_1346 = unsqueeze_752 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1074: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1073, relu_169);  add_1073 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_171: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1074);  add_1074 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_185: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_147, primals_556, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1075: "i64[]" = torch.ops.aten.add.Tensor(primals_1539, 1)
    var_mean_185 = torch.ops.aten.var_mean.correction(convolution_185, [0, 2, 3], correction = 0, keepdim = True)
    getitem_370: "f32[1, 144, 1, 1]" = var_mean_185[0]
    getitem_371: "f32[1, 144, 1, 1]" = var_mean_185[1];  var_mean_185 = None
    add_1076: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_370, 1e-05)
    rsqrt_185: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1076);  add_1076 = None
    sub_185: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_185, getitem_371)
    mul_1347: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_185, rsqrt_185);  sub_185 = None
    squeeze_555: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_371, [0, 2, 3]);  getitem_371 = None
    squeeze_556: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_185, [0, 2, 3]);  rsqrt_185 = None
    mul_1348: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_555, 0.1)
    mul_1349: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1537, 0.9)
    add_1077: "f32[144]" = torch.ops.aten.add.Tensor(mul_1348, mul_1349);  mul_1348 = mul_1349 = None
    squeeze_557: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_370, [0, 2, 3]);  getitem_370 = None
    mul_1350: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_557, 1.0025575447570332);  squeeze_557 = None
    mul_1351: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1350, 0.1);  mul_1350 = None
    mul_1352: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1538, 0.9)
    add_1078: "f32[144]" = torch.ops.aten.add.Tensor(mul_1351, mul_1352);  mul_1351 = mul_1352 = None
    unsqueeze_753: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_557, -1)
    unsqueeze_754: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_753, -1);  unsqueeze_753 = None
    mul_1353: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1347, unsqueeze_754);  mul_1347 = unsqueeze_754 = None
    unsqueeze_755: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_558, -1);  primals_558 = None
    unsqueeze_756: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_755, -1);  unsqueeze_755 = None
    add_1079: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1353, unsqueeze_756);  mul_1353 = unsqueeze_756 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_172: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1079);  add_1079 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_186: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_172, primals_559, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1080: "i64[]" = torch.ops.aten.add.Tensor(primals_1542, 1)
    var_mean_186 = torch.ops.aten.var_mean.correction(convolution_186, [0, 2, 3], correction = 0, keepdim = True)
    getitem_372: "f32[1, 144, 1, 1]" = var_mean_186[0]
    getitem_373: "f32[1, 144, 1, 1]" = var_mean_186[1];  var_mean_186 = None
    add_1081: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_372, 1e-05)
    rsqrt_186: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1081);  add_1081 = None
    sub_186: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_186, getitem_373)
    mul_1354: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_186, rsqrt_186);  sub_186 = None
    squeeze_558: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_373, [0, 2, 3]);  getitem_373 = None
    squeeze_559: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_186, [0, 2, 3]);  rsqrt_186 = None
    mul_1355: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_558, 0.1)
    mul_1356: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1540, 0.9)
    add_1082: "f32[144]" = torch.ops.aten.add.Tensor(mul_1355, mul_1356);  mul_1355 = mul_1356 = None
    squeeze_560: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_372, [0, 2, 3]);  getitem_372 = None
    mul_1357: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_560, 1.0025575447570332);  squeeze_560 = None
    mul_1358: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1357, 0.1);  mul_1357 = None
    mul_1359: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1541, 0.9)
    add_1083: "f32[144]" = torch.ops.aten.add.Tensor(mul_1358, mul_1359);  mul_1358 = mul_1359 = None
    unsqueeze_757: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_560, -1)
    unsqueeze_758: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_757, -1);  unsqueeze_757 = None
    mul_1360: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1354, unsqueeze_758);  mul_1354 = unsqueeze_758 = None
    unsqueeze_759: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_561, -1);  primals_561 = None
    unsqueeze_760: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_759, -1);  unsqueeze_759 = None
    add_1084: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1360, unsqueeze_760);  mul_1360 = unsqueeze_760 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1085: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1084, relu_147);  add_1084 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_173: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1085);  add_1085 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_187: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_173, primals_562, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1086: "i64[]" = torch.ops.aten.add.Tensor(primals_1545, 1)
    var_mean_187 = torch.ops.aten.var_mean.correction(convolution_187, [0, 2, 3], correction = 0, keepdim = True)
    getitem_374: "f32[1, 144, 1, 1]" = var_mean_187[0]
    getitem_375: "f32[1, 144, 1, 1]" = var_mean_187[1];  var_mean_187 = None
    add_1087: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_374, 1e-05)
    rsqrt_187: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1087);  add_1087 = None
    sub_187: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_187, getitem_375)
    mul_1361: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_187, rsqrt_187);  sub_187 = None
    squeeze_561: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_375, [0, 2, 3]);  getitem_375 = None
    squeeze_562: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_187, [0, 2, 3]);  rsqrt_187 = None
    mul_1362: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_561, 0.1)
    mul_1363: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1543, 0.9)
    add_1088: "f32[144]" = torch.ops.aten.add.Tensor(mul_1362, mul_1363);  mul_1362 = mul_1363 = None
    squeeze_563: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_374, [0, 2, 3]);  getitem_374 = None
    mul_1364: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_563, 1.0025575447570332);  squeeze_563 = None
    mul_1365: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1364, 0.1);  mul_1364 = None
    mul_1366: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1544, 0.9)
    add_1089: "f32[144]" = torch.ops.aten.add.Tensor(mul_1365, mul_1366);  mul_1365 = mul_1366 = None
    unsqueeze_761: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_563, -1)
    unsqueeze_762: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_761, -1);  unsqueeze_761 = None
    mul_1367: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1361, unsqueeze_762);  mul_1361 = unsqueeze_762 = None
    unsqueeze_763: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_564, -1);  primals_564 = None
    unsqueeze_764: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_763, -1);  unsqueeze_763 = None
    add_1090: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1367, unsqueeze_764);  mul_1367 = unsqueeze_764 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_174: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1090);  add_1090 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_188: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_174, primals_565, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1091: "i64[]" = torch.ops.aten.add.Tensor(primals_1548, 1)
    var_mean_188 = torch.ops.aten.var_mean.correction(convolution_188, [0, 2, 3], correction = 0, keepdim = True)
    getitem_376: "f32[1, 144, 1, 1]" = var_mean_188[0]
    getitem_377: "f32[1, 144, 1, 1]" = var_mean_188[1];  var_mean_188 = None
    add_1092: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_376, 1e-05)
    rsqrt_188: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1092);  add_1092 = None
    sub_188: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_188, getitem_377)
    mul_1368: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_188, rsqrt_188);  sub_188 = None
    squeeze_564: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_377, [0, 2, 3]);  getitem_377 = None
    squeeze_565: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_188, [0, 2, 3]);  rsqrt_188 = None
    mul_1369: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_564, 0.1)
    mul_1370: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1546, 0.9)
    add_1093: "f32[144]" = torch.ops.aten.add.Tensor(mul_1369, mul_1370);  mul_1369 = mul_1370 = None
    squeeze_566: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_376, [0, 2, 3]);  getitem_376 = None
    mul_1371: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_566, 1.0025575447570332);  squeeze_566 = None
    mul_1372: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1371, 0.1);  mul_1371 = None
    mul_1373: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1547, 0.9)
    add_1094: "f32[144]" = torch.ops.aten.add.Tensor(mul_1372, mul_1373);  mul_1372 = mul_1373 = None
    unsqueeze_765: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_566, -1)
    unsqueeze_766: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_765, -1);  unsqueeze_765 = None
    mul_1374: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1368, unsqueeze_766);  mul_1368 = unsqueeze_766 = None
    unsqueeze_767: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_567, -1);  primals_567 = None
    unsqueeze_768: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_767, -1);  unsqueeze_767 = None
    add_1095: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1374, unsqueeze_768);  mul_1374 = unsqueeze_768 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1096: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1095, relu_173);  add_1095 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_175: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1096);  add_1096 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_189: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_175, primals_568, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1097: "i64[]" = torch.ops.aten.add.Tensor(primals_1551, 1)
    var_mean_189 = torch.ops.aten.var_mean.correction(convolution_189, [0, 2, 3], correction = 0, keepdim = True)
    getitem_378: "f32[1, 144, 1, 1]" = var_mean_189[0]
    getitem_379: "f32[1, 144, 1, 1]" = var_mean_189[1];  var_mean_189 = None
    add_1098: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_378, 1e-05)
    rsqrt_189: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1098);  add_1098 = None
    sub_189: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_189, getitem_379)
    mul_1375: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_189, rsqrt_189);  sub_189 = None
    squeeze_567: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_379, [0, 2, 3]);  getitem_379 = None
    squeeze_568: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_189, [0, 2, 3]);  rsqrt_189 = None
    mul_1376: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_567, 0.1)
    mul_1377: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1549, 0.9)
    add_1099: "f32[144]" = torch.ops.aten.add.Tensor(mul_1376, mul_1377);  mul_1376 = mul_1377 = None
    squeeze_569: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_378, [0, 2, 3]);  getitem_378 = None
    mul_1378: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_569, 1.0025575447570332);  squeeze_569 = None
    mul_1379: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1378, 0.1);  mul_1378 = None
    mul_1380: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1550, 0.9)
    add_1100: "f32[144]" = torch.ops.aten.add.Tensor(mul_1379, mul_1380);  mul_1379 = mul_1380 = None
    unsqueeze_769: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_569, -1)
    unsqueeze_770: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_769, -1);  unsqueeze_769 = None
    mul_1381: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1375, unsqueeze_770);  mul_1375 = unsqueeze_770 = None
    unsqueeze_771: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_570, -1);  primals_570 = None
    unsqueeze_772: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_771, -1);  unsqueeze_771 = None
    add_1101: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1381, unsqueeze_772);  mul_1381 = unsqueeze_772 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_176: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1101);  add_1101 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_190: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_176, primals_571, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1102: "i64[]" = torch.ops.aten.add.Tensor(primals_1554, 1)
    var_mean_190 = torch.ops.aten.var_mean.correction(convolution_190, [0, 2, 3], correction = 0, keepdim = True)
    getitem_380: "f32[1, 144, 1, 1]" = var_mean_190[0]
    getitem_381: "f32[1, 144, 1, 1]" = var_mean_190[1];  var_mean_190 = None
    add_1103: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_380, 1e-05)
    rsqrt_190: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1103);  add_1103 = None
    sub_190: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_190, getitem_381)
    mul_1382: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_190, rsqrt_190);  sub_190 = None
    squeeze_570: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_381, [0, 2, 3]);  getitem_381 = None
    squeeze_571: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_190, [0, 2, 3]);  rsqrt_190 = None
    mul_1383: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_570, 0.1)
    mul_1384: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1552, 0.9)
    add_1104: "f32[144]" = torch.ops.aten.add.Tensor(mul_1383, mul_1384);  mul_1383 = mul_1384 = None
    squeeze_572: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_380, [0, 2, 3]);  getitem_380 = None
    mul_1385: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_572, 1.0025575447570332);  squeeze_572 = None
    mul_1386: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1385, 0.1);  mul_1385 = None
    mul_1387: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1553, 0.9)
    add_1105: "f32[144]" = torch.ops.aten.add.Tensor(mul_1386, mul_1387);  mul_1386 = mul_1387 = None
    unsqueeze_773: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_572, -1)
    unsqueeze_774: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_773, -1);  unsqueeze_773 = None
    mul_1388: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1382, unsqueeze_774);  mul_1382 = unsqueeze_774 = None
    unsqueeze_775: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_573, -1);  primals_573 = None
    unsqueeze_776: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_775, -1);  unsqueeze_775 = None
    add_1106: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1388, unsqueeze_776);  mul_1388 = unsqueeze_776 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1107: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1106, relu_175);  add_1106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_177: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1107);  add_1107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_191: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_177, primals_574, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1108: "i64[]" = torch.ops.aten.add.Tensor(primals_1557, 1)
    var_mean_191 = torch.ops.aten.var_mean.correction(convolution_191, [0, 2, 3], correction = 0, keepdim = True)
    getitem_382: "f32[1, 144, 1, 1]" = var_mean_191[0]
    getitem_383: "f32[1, 144, 1, 1]" = var_mean_191[1];  var_mean_191 = None
    add_1109: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_382, 1e-05)
    rsqrt_191: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1109);  add_1109 = None
    sub_191: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_191, getitem_383)
    mul_1389: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_191, rsqrt_191);  sub_191 = None
    squeeze_573: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_383, [0, 2, 3]);  getitem_383 = None
    squeeze_574: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_191, [0, 2, 3]);  rsqrt_191 = None
    mul_1390: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_573, 0.1)
    mul_1391: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1555, 0.9)
    add_1110: "f32[144]" = torch.ops.aten.add.Tensor(mul_1390, mul_1391);  mul_1390 = mul_1391 = None
    squeeze_575: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_382, [0, 2, 3]);  getitem_382 = None
    mul_1392: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_575, 1.0025575447570332);  squeeze_575 = None
    mul_1393: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1392, 0.1);  mul_1392 = None
    mul_1394: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1556, 0.9)
    add_1111: "f32[144]" = torch.ops.aten.add.Tensor(mul_1393, mul_1394);  mul_1393 = mul_1394 = None
    unsqueeze_777: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_575, -1)
    unsqueeze_778: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_777, -1);  unsqueeze_777 = None
    mul_1395: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1389, unsqueeze_778);  mul_1389 = unsqueeze_778 = None
    unsqueeze_779: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_576, -1);  primals_576 = None
    unsqueeze_780: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_779, -1);  unsqueeze_779 = None
    add_1112: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1395, unsqueeze_780);  mul_1395 = unsqueeze_780 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_178: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1112);  add_1112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_192: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_178, primals_577, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1113: "i64[]" = torch.ops.aten.add.Tensor(primals_1560, 1)
    var_mean_192 = torch.ops.aten.var_mean.correction(convolution_192, [0, 2, 3], correction = 0, keepdim = True)
    getitem_384: "f32[1, 144, 1, 1]" = var_mean_192[0]
    getitem_385: "f32[1, 144, 1, 1]" = var_mean_192[1];  var_mean_192 = None
    add_1114: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_384, 1e-05)
    rsqrt_192: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1114);  add_1114 = None
    sub_192: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_192, getitem_385)
    mul_1396: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_192, rsqrt_192);  sub_192 = None
    squeeze_576: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_385, [0, 2, 3]);  getitem_385 = None
    squeeze_577: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_192, [0, 2, 3]);  rsqrt_192 = None
    mul_1397: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_576, 0.1)
    mul_1398: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1558, 0.9)
    add_1115: "f32[144]" = torch.ops.aten.add.Tensor(mul_1397, mul_1398);  mul_1397 = mul_1398 = None
    squeeze_578: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_384, [0, 2, 3]);  getitem_384 = None
    mul_1399: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_578, 1.0025575447570332);  squeeze_578 = None
    mul_1400: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1399, 0.1);  mul_1399 = None
    mul_1401: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1559, 0.9)
    add_1116: "f32[144]" = torch.ops.aten.add.Tensor(mul_1400, mul_1401);  mul_1400 = mul_1401 = None
    unsqueeze_781: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_578, -1)
    unsqueeze_782: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_781, -1);  unsqueeze_781 = None
    mul_1402: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1396, unsqueeze_782);  mul_1396 = unsqueeze_782 = None
    unsqueeze_783: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_579, -1);  primals_579 = None
    unsqueeze_784: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_783, -1);  unsqueeze_783 = None
    add_1117: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1402, unsqueeze_784);  mul_1402 = unsqueeze_784 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1118: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1117, relu_177);  add_1117 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_179: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1118);  add_1118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_193: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_163, primals_580, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1119: "i64[]" = torch.ops.aten.add.Tensor(primals_1563, 1)
    var_mean_193 = torch.ops.aten.var_mean.correction(convolution_193, [0, 2, 3], correction = 0, keepdim = True)
    getitem_386: "f32[1, 18, 1, 1]" = var_mean_193[0]
    getitem_387: "f32[1, 18, 1, 1]" = var_mean_193[1];  var_mean_193 = None
    add_1120: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_386, 1e-05)
    rsqrt_193: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1120);  add_1120 = None
    sub_193: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_193, getitem_387)
    mul_1403: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_193, rsqrt_193);  sub_193 = None
    squeeze_579: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_387, [0, 2, 3]);  getitem_387 = None
    squeeze_580: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_193, [0, 2, 3]);  rsqrt_193 = None
    mul_1404: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_579, 0.1)
    mul_1405: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1561, 0.9)
    add_1121: "f32[18]" = torch.ops.aten.add.Tensor(mul_1404, mul_1405);  mul_1404 = mul_1405 = None
    squeeze_581: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_386, [0, 2, 3]);  getitem_386 = None
    mul_1406: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_581, 1.0001594642002871);  squeeze_581 = None
    mul_1407: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1406, 0.1);  mul_1406 = None
    mul_1408: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1562, 0.9)
    add_1122: "f32[18]" = torch.ops.aten.add.Tensor(mul_1407, mul_1408);  mul_1407 = mul_1408 = None
    unsqueeze_785: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_581, -1)
    unsqueeze_786: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_785, -1);  unsqueeze_785 = None
    mul_1409: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1403, unsqueeze_786);  mul_1403 = unsqueeze_786 = None
    unsqueeze_787: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_582, -1);  primals_582 = None
    unsqueeze_788: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_787, -1);  unsqueeze_787 = None
    add_1123: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1409, unsqueeze_788);  mul_1409 = unsqueeze_788 = None
    iota_26: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_52: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_26, torch.float32);  iota_26 = None
    mul_1410: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_52, 1);  convert_element_type_52 = None
    add_1124: "f32[56]" = torch.ops.aten.add.Tensor(mul_1410, 0);  mul_1410 = None
    add_1125: "f32[56]" = torch.ops.aten.add.Tensor(add_1124, 0.0);  add_1124 = None
    mul_1411: "f32[56]" = torch.ops.aten.mul.Tensor(add_1125, 0.5);  add_1125 = None
    convert_element_type_53: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1411, torch.int64);  mul_1411 = None
    unsqueeze_789: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_53, -1);  convert_element_type_53 = None
    iota_27: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_54: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_27, torch.float32);  iota_27 = None
    mul_1412: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_54, 1);  convert_element_type_54 = None
    add_1126: "f32[56]" = torch.ops.aten.add.Tensor(mul_1412, 0);  mul_1412 = None
    add_1127: "f32[56]" = torch.ops.aten.add.Tensor(add_1126, 0.0);  add_1126 = None
    mul_1413: "f32[56]" = torch.ops.aten.mul.Tensor(add_1127, 0.5);  add_1127 = None
    convert_element_type_55: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1413, torch.int64);  mul_1413 = None
    _unsafe_index_13: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1123, [None, None, unsqueeze_789, convert_element_type_55]);  add_1123 = None
    add_1128: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_155, _unsafe_index_13);  _unsafe_index_13 = None
    convolution_194: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_171, primals_583, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1129: "i64[]" = torch.ops.aten.add.Tensor(primals_1566, 1)
    var_mean_194 = torch.ops.aten.var_mean.correction(convolution_194, [0, 2, 3], correction = 0, keepdim = True)
    getitem_388: "f32[1, 18, 1, 1]" = var_mean_194[0]
    getitem_389: "f32[1, 18, 1, 1]" = var_mean_194[1];  var_mean_194 = None
    add_1130: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_388, 1e-05)
    rsqrt_194: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1130);  add_1130 = None
    sub_194: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_194, getitem_389)
    mul_1414: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_194, rsqrt_194);  sub_194 = None
    squeeze_582: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_389, [0, 2, 3]);  getitem_389 = None
    squeeze_583: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_194, [0, 2, 3]);  rsqrt_194 = None
    mul_1415: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_582, 0.1)
    mul_1416: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1564, 0.9)
    add_1131: "f32[18]" = torch.ops.aten.add.Tensor(mul_1415, mul_1416);  mul_1415 = mul_1416 = None
    squeeze_584: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_388, [0, 2, 3]);  getitem_388 = None
    mul_1417: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_584, 1.0006381620931717);  squeeze_584 = None
    mul_1418: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1417, 0.1);  mul_1417 = None
    mul_1419: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1565, 0.9)
    add_1132: "f32[18]" = torch.ops.aten.add.Tensor(mul_1418, mul_1419);  mul_1418 = mul_1419 = None
    unsqueeze_790: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_584, -1)
    unsqueeze_791: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_790, -1);  unsqueeze_790 = None
    mul_1420: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1414, unsqueeze_791);  mul_1414 = unsqueeze_791 = None
    unsqueeze_792: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_585, -1);  primals_585 = None
    unsqueeze_793: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_792, -1);  unsqueeze_792 = None
    add_1133: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1420, unsqueeze_793);  mul_1420 = unsqueeze_793 = None
    iota_28: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_56: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_28, torch.float32);  iota_28 = None
    mul_1421: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_56, 1);  convert_element_type_56 = None
    add_1134: "f32[56]" = torch.ops.aten.add.Tensor(mul_1421, 0);  mul_1421 = None
    add_1135: "f32[56]" = torch.ops.aten.add.Tensor(add_1134, 0.0);  add_1134 = None
    mul_1422: "f32[56]" = torch.ops.aten.mul.Tensor(add_1135, 0.25);  add_1135 = None
    convert_element_type_57: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1422, torch.int64);  mul_1422 = None
    unsqueeze_794: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_57, -1);  convert_element_type_57 = None
    iota_29: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_58: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_29, torch.float32);  iota_29 = None
    mul_1423: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_58, 1);  convert_element_type_58 = None
    add_1136: "f32[56]" = torch.ops.aten.add.Tensor(mul_1423, 0);  mul_1423 = None
    add_1137: "f32[56]" = torch.ops.aten.add.Tensor(add_1136, 0.0);  add_1136 = None
    mul_1424: "f32[56]" = torch.ops.aten.mul.Tensor(add_1137, 0.25);  add_1137 = None
    convert_element_type_59: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1424, torch.int64);  mul_1424 = None
    _unsafe_index_14: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1133, [None, None, unsqueeze_794, convert_element_type_59]);  add_1133 = None
    add_1138: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1128, _unsafe_index_14);  add_1128 = _unsafe_index_14 = None
    convolution_195: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_179, primals_586, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1139: "i64[]" = torch.ops.aten.add.Tensor(primals_1569, 1)
    var_mean_195 = torch.ops.aten.var_mean.correction(convolution_195, [0, 2, 3], correction = 0, keepdim = True)
    getitem_390: "f32[1, 18, 1, 1]" = var_mean_195[0]
    getitem_391: "f32[1, 18, 1, 1]" = var_mean_195[1];  var_mean_195 = None
    add_1140: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_390, 1e-05)
    rsqrt_195: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1140);  add_1140 = None
    sub_195: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_195, getitem_391)
    mul_1425: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_195, rsqrt_195);  sub_195 = None
    squeeze_585: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_391, [0, 2, 3]);  getitem_391 = None
    squeeze_586: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_195, [0, 2, 3]);  rsqrt_195 = None
    mul_1426: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_585, 0.1)
    mul_1427: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1567, 0.9)
    add_1141: "f32[18]" = torch.ops.aten.add.Tensor(mul_1426, mul_1427);  mul_1426 = mul_1427 = None
    squeeze_587: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_390, [0, 2, 3]);  getitem_390 = None
    mul_1428: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_587, 1.0025575447570332);  squeeze_587 = None
    mul_1429: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1428, 0.1);  mul_1428 = None
    mul_1430: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1568, 0.9)
    add_1142: "f32[18]" = torch.ops.aten.add.Tensor(mul_1429, mul_1430);  mul_1429 = mul_1430 = None
    unsqueeze_795: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_587, -1)
    unsqueeze_796: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_795, -1);  unsqueeze_795 = None
    mul_1431: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1425, unsqueeze_796);  mul_1425 = unsqueeze_796 = None
    unsqueeze_797: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_588, -1);  primals_588 = None
    unsqueeze_798: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_797, -1);  unsqueeze_797 = None
    add_1143: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_1431, unsqueeze_798);  mul_1431 = unsqueeze_798 = None
    iota_30: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_60: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_30, torch.float32);  iota_30 = None
    mul_1432: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_60, 1);  convert_element_type_60 = None
    add_1144: "f32[56]" = torch.ops.aten.add.Tensor(mul_1432, 0);  mul_1432 = None
    add_1145: "f32[56]" = torch.ops.aten.add.Tensor(add_1144, 0.0);  add_1144 = None
    mul_1433: "f32[56]" = torch.ops.aten.mul.Tensor(add_1145, 0.125);  add_1145 = None
    convert_element_type_61: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1433, torch.int64);  mul_1433 = None
    unsqueeze_799: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_61, -1);  convert_element_type_61 = None
    iota_31: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_62: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_31, torch.float32);  iota_31 = None
    mul_1434: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_62, 1);  convert_element_type_62 = None
    add_1146: "f32[56]" = torch.ops.aten.add.Tensor(mul_1434, 0);  mul_1434 = None
    add_1147: "f32[56]" = torch.ops.aten.add.Tensor(add_1146, 0.0);  add_1146 = None
    mul_1435: "f32[56]" = torch.ops.aten.mul.Tensor(add_1147, 0.125);  add_1147 = None
    convert_element_type_63: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1435, torch.int64);  mul_1435 = None
    _unsafe_index_15: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1143, [None, None, unsqueeze_799, convert_element_type_63]);  add_1143 = None
    add_1148: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1138, _unsafe_index_15);  add_1138 = _unsafe_index_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_180: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1148);  add_1148 = None
    alias_180: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_180)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_196: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_155, primals_589, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1149: "i64[]" = torch.ops.aten.add.Tensor(primals_1572, 1)
    var_mean_196 = torch.ops.aten.var_mean.correction(convolution_196, [0, 2, 3], correction = 0, keepdim = True)
    getitem_392: "f32[1, 36, 1, 1]" = var_mean_196[0]
    getitem_393: "f32[1, 36, 1, 1]" = var_mean_196[1];  var_mean_196 = None
    add_1150: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_392, 1e-05)
    rsqrt_196: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1150);  add_1150 = None
    sub_196: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_196, getitem_393)
    mul_1436: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_196, rsqrt_196);  sub_196 = None
    squeeze_588: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_393, [0, 2, 3]);  getitem_393 = None
    squeeze_589: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_196, [0, 2, 3]);  rsqrt_196 = None
    mul_1437: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_588, 0.1)
    mul_1438: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1570, 0.9)
    add_1151: "f32[36]" = torch.ops.aten.add.Tensor(mul_1437, mul_1438);  mul_1437 = mul_1438 = None
    squeeze_590: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_392, [0, 2, 3]);  getitem_392 = None
    mul_1439: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_590, 1.0001594642002871);  squeeze_590 = None
    mul_1440: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1439, 0.1);  mul_1439 = None
    mul_1441: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1571, 0.9)
    add_1152: "f32[36]" = torch.ops.aten.add.Tensor(mul_1440, mul_1441);  mul_1440 = mul_1441 = None
    unsqueeze_800: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_590, -1)
    unsqueeze_801: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_800, -1);  unsqueeze_800 = None
    mul_1442: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1436, unsqueeze_801);  mul_1436 = unsqueeze_801 = None
    unsqueeze_802: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_591, -1);  primals_591 = None
    unsqueeze_803: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_802, -1);  unsqueeze_802 = None
    add_1153: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1442, unsqueeze_803);  mul_1442 = unsqueeze_803 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1154: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1153, relu_163);  add_1153 = None
    convolution_197: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_171, primals_592, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1155: "i64[]" = torch.ops.aten.add.Tensor(primals_1575, 1)
    var_mean_197 = torch.ops.aten.var_mean.correction(convolution_197, [0, 2, 3], correction = 0, keepdim = True)
    getitem_394: "f32[1, 36, 1, 1]" = var_mean_197[0]
    getitem_395: "f32[1, 36, 1, 1]" = var_mean_197[1];  var_mean_197 = None
    add_1156: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_394, 1e-05)
    rsqrt_197: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1156);  add_1156 = None
    sub_197: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_197, getitem_395)
    mul_1443: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_197, rsqrt_197);  sub_197 = None
    squeeze_591: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_395, [0, 2, 3]);  getitem_395 = None
    squeeze_592: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_197, [0, 2, 3]);  rsqrt_197 = None
    mul_1444: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_591, 0.1)
    mul_1445: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1573, 0.9)
    add_1157: "f32[36]" = torch.ops.aten.add.Tensor(mul_1444, mul_1445);  mul_1444 = mul_1445 = None
    squeeze_593: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_394, [0, 2, 3]);  getitem_394 = None
    mul_1446: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_593, 1.0006381620931717);  squeeze_593 = None
    mul_1447: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1446, 0.1);  mul_1446 = None
    mul_1448: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1574, 0.9)
    add_1158: "f32[36]" = torch.ops.aten.add.Tensor(mul_1447, mul_1448);  mul_1447 = mul_1448 = None
    unsqueeze_804: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_593, -1)
    unsqueeze_805: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_804, -1);  unsqueeze_804 = None
    mul_1449: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1443, unsqueeze_805);  mul_1443 = unsqueeze_805 = None
    unsqueeze_806: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_594, -1);  primals_594 = None
    unsqueeze_807: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_806, -1);  unsqueeze_806 = None
    add_1159: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1449, unsqueeze_807);  mul_1449 = unsqueeze_807 = None
    iota_32: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_64: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_32, torch.float32);  iota_32 = None
    mul_1450: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_64, 1);  convert_element_type_64 = None
    add_1160: "f32[28]" = torch.ops.aten.add.Tensor(mul_1450, 0);  mul_1450 = None
    add_1161: "f32[28]" = torch.ops.aten.add.Tensor(add_1160, 0.0);  add_1160 = None
    mul_1451: "f32[28]" = torch.ops.aten.mul.Tensor(add_1161, 0.5);  add_1161 = None
    convert_element_type_65: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1451, torch.int64);  mul_1451 = None
    unsqueeze_808: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_65, -1);  convert_element_type_65 = None
    iota_33: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_66: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_33, torch.float32);  iota_33 = None
    mul_1452: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_66, 1);  convert_element_type_66 = None
    add_1162: "f32[28]" = torch.ops.aten.add.Tensor(mul_1452, 0);  mul_1452 = None
    add_1163: "f32[28]" = torch.ops.aten.add.Tensor(add_1162, 0.0);  add_1162 = None
    mul_1453: "f32[28]" = torch.ops.aten.mul.Tensor(add_1163, 0.5);  add_1163 = None
    convert_element_type_67: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1453, torch.int64);  mul_1453 = None
    _unsafe_index_16: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1159, [None, None, unsqueeze_808, convert_element_type_67]);  add_1159 = None
    add_1164: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1154, _unsafe_index_16);  add_1154 = _unsafe_index_16 = None
    convolution_198: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_179, primals_595, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1165: "i64[]" = torch.ops.aten.add.Tensor(primals_1578, 1)
    var_mean_198 = torch.ops.aten.var_mean.correction(convolution_198, [0, 2, 3], correction = 0, keepdim = True)
    getitem_396: "f32[1, 36, 1, 1]" = var_mean_198[0]
    getitem_397: "f32[1, 36, 1, 1]" = var_mean_198[1];  var_mean_198 = None
    add_1166: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_396, 1e-05)
    rsqrt_198: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1166);  add_1166 = None
    sub_198: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_198, getitem_397)
    mul_1454: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_198, rsqrt_198);  sub_198 = None
    squeeze_594: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_397, [0, 2, 3]);  getitem_397 = None
    squeeze_595: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_198, [0, 2, 3]);  rsqrt_198 = None
    mul_1455: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_594, 0.1)
    mul_1456: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1576, 0.9)
    add_1167: "f32[36]" = torch.ops.aten.add.Tensor(mul_1455, mul_1456);  mul_1455 = mul_1456 = None
    squeeze_596: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_396, [0, 2, 3]);  getitem_396 = None
    mul_1457: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_596, 1.0025575447570332);  squeeze_596 = None
    mul_1458: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1457, 0.1);  mul_1457 = None
    mul_1459: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1577, 0.9)
    add_1168: "f32[36]" = torch.ops.aten.add.Tensor(mul_1458, mul_1459);  mul_1458 = mul_1459 = None
    unsqueeze_809: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_596, -1)
    unsqueeze_810: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_809, -1);  unsqueeze_809 = None
    mul_1460: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1454, unsqueeze_810);  mul_1454 = unsqueeze_810 = None
    unsqueeze_811: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_597, -1);  primals_597 = None
    unsqueeze_812: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_811, -1);  unsqueeze_811 = None
    add_1169: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_1460, unsqueeze_812);  mul_1460 = unsqueeze_812 = None
    iota_34: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_68: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_34, torch.float32);  iota_34 = None
    mul_1461: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_68, 1);  convert_element_type_68 = None
    add_1170: "f32[28]" = torch.ops.aten.add.Tensor(mul_1461, 0);  mul_1461 = None
    add_1171: "f32[28]" = torch.ops.aten.add.Tensor(add_1170, 0.0);  add_1170 = None
    mul_1462: "f32[28]" = torch.ops.aten.mul.Tensor(add_1171, 0.25);  add_1171 = None
    convert_element_type_69: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1462, torch.int64);  mul_1462 = None
    unsqueeze_813: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_69, -1);  convert_element_type_69 = None
    iota_35: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_70: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_35, torch.float32);  iota_35 = None
    mul_1463: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_70, 1);  convert_element_type_70 = None
    add_1172: "f32[28]" = torch.ops.aten.add.Tensor(mul_1463, 0);  mul_1463 = None
    add_1173: "f32[28]" = torch.ops.aten.add.Tensor(add_1172, 0.0);  add_1172 = None
    mul_1464: "f32[28]" = torch.ops.aten.mul.Tensor(add_1173, 0.25);  add_1173 = None
    convert_element_type_71: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1464, torch.int64);  mul_1464 = None
    _unsafe_index_17: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1169, [None, None, unsqueeze_813, convert_element_type_71]);  add_1169 = None
    add_1174: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1164, _unsafe_index_17);  add_1164 = _unsafe_index_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_181: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1174);  add_1174 = None
    alias_181: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_181)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_199: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_155, primals_598, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1175: "i64[]" = torch.ops.aten.add.Tensor(primals_1581, 1)
    var_mean_199 = torch.ops.aten.var_mean.correction(convolution_199, [0, 2, 3], correction = 0, keepdim = True)
    getitem_398: "f32[1, 18, 1, 1]" = var_mean_199[0]
    getitem_399: "f32[1, 18, 1, 1]" = var_mean_199[1];  var_mean_199 = None
    add_1176: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_398, 1e-05)
    rsqrt_199: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1176);  add_1176 = None
    sub_199: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_199, getitem_399)
    mul_1465: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_199, rsqrt_199);  sub_199 = None
    squeeze_597: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_399, [0, 2, 3]);  getitem_399 = None
    squeeze_598: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_199, [0, 2, 3]);  rsqrt_199 = None
    mul_1466: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_597, 0.1)
    mul_1467: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1579, 0.9)
    add_1177: "f32[18]" = torch.ops.aten.add.Tensor(mul_1466, mul_1467);  mul_1466 = mul_1467 = None
    squeeze_599: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_398, [0, 2, 3]);  getitem_398 = None
    mul_1468: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_599, 1.0001594642002871);  squeeze_599 = None
    mul_1469: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1468, 0.1);  mul_1468 = None
    mul_1470: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1580, 0.9)
    add_1178: "f32[18]" = torch.ops.aten.add.Tensor(mul_1469, mul_1470);  mul_1469 = mul_1470 = None
    unsqueeze_814: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_599, -1)
    unsqueeze_815: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_814, -1);  unsqueeze_814 = None
    mul_1471: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1465, unsqueeze_815);  mul_1465 = unsqueeze_815 = None
    unsqueeze_816: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_600, -1);  primals_600 = None
    unsqueeze_817: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_816, -1);  unsqueeze_816 = None
    add_1179: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1471, unsqueeze_817);  mul_1471 = unsqueeze_817 = None
    relu_182: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1179);  add_1179 = None
    alias_182: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_182)
    convolution_200: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_182, primals_601, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1180: "i64[]" = torch.ops.aten.add.Tensor(primals_1584, 1)
    var_mean_200 = torch.ops.aten.var_mean.correction(convolution_200, [0, 2, 3], correction = 0, keepdim = True)
    getitem_400: "f32[1, 72, 1, 1]" = var_mean_200[0]
    getitem_401: "f32[1, 72, 1, 1]" = var_mean_200[1];  var_mean_200 = None
    add_1181: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_400, 1e-05)
    rsqrt_200: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1181);  add_1181 = None
    sub_200: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_200, getitem_401)
    mul_1472: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_200, rsqrt_200);  sub_200 = None
    squeeze_600: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_401, [0, 2, 3]);  getitem_401 = None
    squeeze_601: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_200, [0, 2, 3]);  rsqrt_200 = None
    mul_1473: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_600, 0.1)
    mul_1474: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1582, 0.9)
    add_1182: "f32[72]" = torch.ops.aten.add.Tensor(mul_1473, mul_1474);  mul_1473 = mul_1474 = None
    squeeze_602: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_400, [0, 2, 3]);  getitem_400 = None
    mul_1475: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_602, 1.0006381620931717);  squeeze_602 = None
    mul_1476: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1475, 0.1);  mul_1475 = None
    mul_1477: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1583, 0.9)
    add_1183: "f32[72]" = torch.ops.aten.add.Tensor(mul_1476, mul_1477);  mul_1476 = mul_1477 = None
    unsqueeze_818: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_602, -1)
    unsqueeze_819: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_818, -1);  unsqueeze_818 = None
    mul_1478: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1472, unsqueeze_819);  mul_1472 = unsqueeze_819 = None
    unsqueeze_820: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_603, -1);  primals_603 = None
    unsqueeze_821: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_820, -1);  unsqueeze_820 = None
    add_1184: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1478, unsqueeze_821);  mul_1478 = unsqueeze_821 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_201: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_163, primals_604, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1185: "i64[]" = torch.ops.aten.add.Tensor(primals_1587, 1)
    var_mean_201 = torch.ops.aten.var_mean.correction(convolution_201, [0, 2, 3], correction = 0, keepdim = True)
    getitem_402: "f32[1, 72, 1, 1]" = var_mean_201[0]
    getitem_403: "f32[1, 72, 1, 1]" = var_mean_201[1];  var_mean_201 = None
    add_1186: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_402, 1e-05)
    rsqrt_201: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1186);  add_1186 = None
    sub_201: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_201, getitem_403)
    mul_1479: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_201, rsqrt_201);  sub_201 = None
    squeeze_603: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_403, [0, 2, 3]);  getitem_403 = None
    squeeze_604: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_201, [0, 2, 3]);  rsqrt_201 = None
    mul_1480: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_603, 0.1)
    mul_1481: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1585, 0.9)
    add_1187: "f32[72]" = torch.ops.aten.add.Tensor(mul_1480, mul_1481);  mul_1480 = mul_1481 = None
    squeeze_605: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_402, [0, 2, 3]);  getitem_402 = None
    mul_1482: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_605, 1.0006381620931717);  squeeze_605 = None
    mul_1483: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1482, 0.1);  mul_1482 = None
    mul_1484: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1586, 0.9)
    add_1188: "f32[72]" = torch.ops.aten.add.Tensor(mul_1483, mul_1484);  mul_1483 = mul_1484 = None
    unsqueeze_822: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_605, -1)
    unsqueeze_823: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_822, -1);  unsqueeze_822 = None
    mul_1485: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1479, unsqueeze_823);  mul_1479 = unsqueeze_823 = None
    unsqueeze_824: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_606, -1);  primals_606 = None
    unsqueeze_825: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_824, -1);  unsqueeze_824 = None
    add_1189: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1485, unsqueeze_825);  mul_1485 = unsqueeze_825 = None
    add_1190: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1184, add_1189);  add_1184 = add_1189 = None
    add_1191: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1190, relu_171);  add_1190 = None
    convolution_202: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_179, primals_607, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1192: "i64[]" = torch.ops.aten.add.Tensor(primals_1590, 1)
    var_mean_202 = torch.ops.aten.var_mean.correction(convolution_202, [0, 2, 3], correction = 0, keepdim = True)
    getitem_404: "f32[1, 72, 1, 1]" = var_mean_202[0]
    getitem_405: "f32[1, 72, 1, 1]" = var_mean_202[1];  var_mean_202 = None
    add_1193: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_404, 1e-05)
    rsqrt_202: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1193);  add_1193 = None
    sub_202: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_202, getitem_405)
    mul_1486: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_202, rsqrt_202);  sub_202 = None
    squeeze_606: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_405, [0, 2, 3]);  getitem_405 = None
    squeeze_607: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_202, [0, 2, 3]);  rsqrt_202 = None
    mul_1487: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_606, 0.1)
    mul_1488: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1588, 0.9)
    add_1194: "f32[72]" = torch.ops.aten.add.Tensor(mul_1487, mul_1488);  mul_1487 = mul_1488 = None
    squeeze_608: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_404, [0, 2, 3]);  getitem_404 = None
    mul_1489: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_608, 1.0025575447570332);  squeeze_608 = None
    mul_1490: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1489, 0.1);  mul_1489 = None
    mul_1491: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1589, 0.9)
    add_1195: "f32[72]" = torch.ops.aten.add.Tensor(mul_1490, mul_1491);  mul_1490 = mul_1491 = None
    unsqueeze_826: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_608, -1)
    unsqueeze_827: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_826, -1);  unsqueeze_826 = None
    mul_1492: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1486, unsqueeze_827);  mul_1486 = unsqueeze_827 = None
    unsqueeze_828: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_609, -1);  primals_609 = None
    unsqueeze_829: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_828, -1);  unsqueeze_828 = None
    add_1196: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_1492, unsqueeze_829);  mul_1492 = unsqueeze_829 = None
    iota_36: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_72: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_36, torch.float32);  iota_36 = None
    mul_1493: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_72, 1);  convert_element_type_72 = None
    add_1197: "f32[14]" = torch.ops.aten.add.Tensor(mul_1493, 0);  mul_1493 = None
    add_1198: "f32[14]" = torch.ops.aten.add.Tensor(add_1197, 0.0);  add_1197 = None
    mul_1494: "f32[14]" = torch.ops.aten.mul.Tensor(add_1198, 0.5);  add_1198 = None
    convert_element_type_73: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1494, torch.int64);  mul_1494 = None
    unsqueeze_830: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_73, -1);  convert_element_type_73 = None
    iota_37: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_74: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_37, torch.float32);  iota_37 = None
    mul_1495: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_74, 1);  convert_element_type_74 = None
    add_1199: "f32[14]" = torch.ops.aten.add.Tensor(mul_1495, 0);  mul_1495 = None
    add_1200: "f32[14]" = torch.ops.aten.add.Tensor(add_1199, 0.0);  add_1199 = None
    mul_1496: "f32[14]" = torch.ops.aten.mul.Tensor(add_1200, 0.5);  add_1200 = None
    convert_element_type_75: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1496, torch.int64);  mul_1496 = None
    _unsafe_index_18: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_1196, [None, None, unsqueeze_830, convert_element_type_75]);  add_1196 = None
    add_1201: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1191, _unsafe_index_18);  add_1191 = _unsafe_index_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_183: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1201);  add_1201 = None
    alias_183: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_183)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_203: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_155, primals_610, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1202: "i64[]" = torch.ops.aten.add.Tensor(primals_1593, 1)
    var_mean_203 = torch.ops.aten.var_mean.correction(convolution_203, [0, 2, 3], correction = 0, keepdim = True)
    getitem_406: "f32[1, 18, 1, 1]" = var_mean_203[0]
    getitem_407: "f32[1, 18, 1, 1]" = var_mean_203[1];  var_mean_203 = None
    add_1203: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_406, 1e-05)
    rsqrt_203: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1203);  add_1203 = None
    sub_203: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_203, getitem_407)
    mul_1497: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_203, rsqrt_203);  sub_203 = None
    squeeze_609: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_407, [0, 2, 3]);  getitem_407 = None
    squeeze_610: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_203, [0, 2, 3]);  rsqrt_203 = None
    mul_1498: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_609, 0.1)
    mul_1499: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1591, 0.9)
    add_1204: "f32[18]" = torch.ops.aten.add.Tensor(mul_1498, mul_1499);  mul_1498 = mul_1499 = None
    squeeze_611: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_406, [0, 2, 3]);  getitem_406 = None
    mul_1500: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_611, 1.0001594642002871);  squeeze_611 = None
    mul_1501: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1500, 0.1);  mul_1500 = None
    mul_1502: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1592, 0.9)
    add_1205: "f32[18]" = torch.ops.aten.add.Tensor(mul_1501, mul_1502);  mul_1501 = mul_1502 = None
    unsqueeze_831: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_611, -1)
    unsqueeze_832: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_831, -1);  unsqueeze_831 = None
    mul_1503: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1497, unsqueeze_832);  mul_1497 = unsqueeze_832 = None
    unsqueeze_833: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_612, -1);  primals_612 = None
    unsqueeze_834: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_833, -1);  unsqueeze_833 = None
    add_1206: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1503, unsqueeze_834);  mul_1503 = unsqueeze_834 = None
    relu_184: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1206);  add_1206 = None
    alias_184: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_184)
    convolution_204: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_184, primals_613, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1207: "i64[]" = torch.ops.aten.add.Tensor(primals_1596, 1)
    var_mean_204 = torch.ops.aten.var_mean.correction(convolution_204, [0, 2, 3], correction = 0, keepdim = True)
    getitem_408: "f32[1, 18, 1, 1]" = var_mean_204[0]
    getitem_409: "f32[1, 18, 1, 1]" = var_mean_204[1];  var_mean_204 = None
    add_1208: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_408, 1e-05)
    rsqrt_204: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1208);  add_1208 = None
    sub_204: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_204, getitem_409)
    mul_1504: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_204, rsqrt_204);  sub_204 = None
    squeeze_612: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_409, [0, 2, 3]);  getitem_409 = None
    squeeze_613: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_204, [0, 2, 3]);  rsqrt_204 = None
    mul_1505: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_612, 0.1)
    mul_1506: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1594, 0.9)
    add_1209: "f32[18]" = torch.ops.aten.add.Tensor(mul_1505, mul_1506);  mul_1505 = mul_1506 = None
    squeeze_614: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_408, [0, 2, 3]);  getitem_408 = None
    mul_1507: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_614, 1.0006381620931717);  squeeze_614 = None
    mul_1508: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1507, 0.1);  mul_1507 = None
    mul_1509: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1595, 0.9)
    add_1210: "f32[18]" = torch.ops.aten.add.Tensor(mul_1508, mul_1509);  mul_1508 = mul_1509 = None
    unsqueeze_835: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_614, -1)
    unsqueeze_836: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_835, -1);  unsqueeze_835 = None
    mul_1510: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1504, unsqueeze_836);  mul_1504 = unsqueeze_836 = None
    unsqueeze_837: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_615, -1);  primals_615 = None
    unsqueeze_838: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_837, -1);  unsqueeze_837 = None
    add_1211: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1510, unsqueeze_838);  mul_1510 = unsqueeze_838 = None
    relu_185: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_1211);  add_1211 = None
    alias_185: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(relu_185)
    convolution_205: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_185, primals_616, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1212: "i64[]" = torch.ops.aten.add.Tensor(primals_1599, 1)
    var_mean_205 = torch.ops.aten.var_mean.correction(convolution_205, [0, 2, 3], correction = 0, keepdim = True)
    getitem_410: "f32[1, 144, 1, 1]" = var_mean_205[0]
    getitem_411: "f32[1, 144, 1, 1]" = var_mean_205[1];  var_mean_205 = None
    add_1213: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_410, 1e-05)
    rsqrt_205: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1213);  add_1213 = None
    sub_205: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_205, getitem_411)
    mul_1511: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_205, rsqrt_205);  sub_205 = None
    squeeze_615: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_411, [0, 2, 3]);  getitem_411 = None
    squeeze_616: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_205, [0, 2, 3]);  rsqrt_205 = None
    mul_1512: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_615, 0.1)
    mul_1513: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1597, 0.9)
    add_1214: "f32[144]" = torch.ops.aten.add.Tensor(mul_1512, mul_1513);  mul_1512 = mul_1513 = None
    squeeze_617: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_410, [0, 2, 3]);  getitem_410 = None
    mul_1514: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_617, 1.0025575447570332);  squeeze_617 = None
    mul_1515: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1514, 0.1);  mul_1514 = None
    mul_1516: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1598, 0.9)
    add_1215: "f32[144]" = torch.ops.aten.add.Tensor(mul_1515, mul_1516);  mul_1515 = mul_1516 = None
    unsqueeze_839: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_617, -1)
    unsqueeze_840: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_839, -1);  unsqueeze_839 = None
    mul_1517: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1511, unsqueeze_840);  mul_1511 = unsqueeze_840 = None
    unsqueeze_841: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_618, -1);  primals_618 = None
    unsqueeze_842: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_841, -1);  unsqueeze_841 = None
    add_1216: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1517, unsqueeze_842);  mul_1517 = unsqueeze_842 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_206: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_163, primals_619, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1217: "i64[]" = torch.ops.aten.add.Tensor(primals_1602, 1)
    var_mean_206 = torch.ops.aten.var_mean.correction(convolution_206, [0, 2, 3], correction = 0, keepdim = True)
    getitem_412: "f32[1, 36, 1, 1]" = var_mean_206[0]
    getitem_413: "f32[1, 36, 1, 1]" = var_mean_206[1];  var_mean_206 = None
    add_1218: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_412, 1e-05)
    rsqrt_206: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1218);  add_1218 = None
    sub_206: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_206, getitem_413)
    mul_1518: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_206, rsqrt_206);  sub_206 = None
    squeeze_618: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_413, [0, 2, 3]);  getitem_413 = None
    squeeze_619: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_206, [0, 2, 3]);  rsqrt_206 = None
    mul_1519: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_618, 0.1)
    mul_1520: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1600, 0.9)
    add_1219: "f32[36]" = torch.ops.aten.add.Tensor(mul_1519, mul_1520);  mul_1519 = mul_1520 = None
    squeeze_620: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_412, [0, 2, 3]);  getitem_412 = None
    mul_1521: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_620, 1.0006381620931717);  squeeze_620 = None
    mul_1522: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1521, 0.1);  mul_1521 = None
    mul_1523: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1601, 0.9)
    add_1220: "f32[36]" = torch.ops.aten.add.Tensor(mul_1522, mul_1523);  mul_1522 = mul_1523 = None
    unsqueeze_843: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_620, -1)
    unsqueeze_844: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_843, -1);  unsqueeze_843 = None
    mul_1524: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1518, unsqueeze_844);  mul_1518 = unsqueeze_844 = None
    unsqueeze_845: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_621, -1);  primals_621 = None
    unsqueeze_846: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_845, -1);  unsqueeze_845 = None
    add_1221: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1524, unsqueeze_846);  mul_1524 = unsqueeze_846 = None
    relu_186: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_1221);  add_1221 = None
    alias_186: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(relu_186)
    convolution_207: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_186, primals_622, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1222: "i64[]" = torch.ops.aten.add.Tensor(primals_1605, 1)
    var_mean_207 = torch.ops.aten.var_mean.correction(convolution_207, [0, 2, 3], correction = 0, keepdim = True)
    getitem_414: "f32[1, 144, 1, 1]" = var_mean_207[0]
    getitem_415: "f32[1, 144, 1, 1]" = var_mean_207[1];  var_mean_207 = None
    add_1223: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_414, 1e-05)
    rsqrt_207: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1223);  add_1223 = None
    sub_207: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_207, getitem_415)
    mul_1525: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_207, rsqrt_207);  sub_207 = None
    squeeze_621: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_415, [0, 2, 3]);  getitem_415 = None
    squeeze_622: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_207, [0, 2, 3]);  rsqrt_207 = None
    mul_1526: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_621, 0.1)
    mul_1527: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1603, 0.9)
    add_1224: "f32[144]" = torch.ops.aten.add.Tensor(mul_1526, mul_1527);  mul_1526 = mul_1527 = None
    squeeze_623: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_414, [0, 2, 3]);  getitem_414 = None
    mul_1528: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_623, 1.0025575447570332);  squeeze_623 = None
    mul_1529: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1528, 0.1);  mul_1528 = None
    mul_1530: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1604, 0.9)
    add_1225: "f32[144]" = torch.ops.aten.add.Tensor(mul_1529, mul_1530);  mul_1529 = mul_1530 = None
    unsqueeze_847: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_623, -1)
    unsqueeze_848: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_847, -1);  unsqueeze_847 = None
    mul_1531: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1525, unsqueeze_848);  mul_1525 = unsqueeze_848 = None
    unsqueeze_849: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_624, -1);  primals_624 = None
    unsqueeze_850: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_849, -1);  unsqueeze_849 = None
    add_1226: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1531, unsqueeze_850);  mul_1531 = unsqueeze_850 = None
    add_1227: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1216, add_1226);  add_1216 = add_1226 = None
    convolution_208: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_171, primals_625, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1228: "i64[]" = torch.ops.aten.add.Tensor(primals_1608, 1)
    var_mean_208 = torch.ops.aten.var_mean.correction(convolution_208, [0, 2, 3], correction = 0, keepdim = True)
    getitem_416: "f32[1, 144, 1, 1]" = var_mean_208[0]
    getitem_417: "f32[1, 144, 1, 1]" = var_mean_208[1];  var_mean_208 = None
    add_1229: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_416, 1e-05)
    rsqrt_208: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1229);  add_1229 = None
    sub_208: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_208, getitem_417)
    mul_1532: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_208, rsqrt_208);  sub_208 = None
    squeeze_624: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_417, [0, 2, 3]);  getitem_417 = None
    squeeze_625: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_208, [0, 2, 3]);  rsqrt_208 = None
    mul_1533: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_624, 0.1)
    mul_1534: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1606, 0.9)
    add_1230: "f32[144]" = torch.ops.aten.add.Tensor(mul_1533, mul_1534);  mul_1533 = mul_1534 = None
    squeeze_626: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_416, [0, 2, 3]);  getitem_416 = None
    mul_1535: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_626, 1.0025575447570332);  squeeze_626 = None
    mul_1536: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1535, 0.1);  mul_1535 = None
    mul_1537: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1607, 0.9)
    add_1231: "f32[144]" = torch.ops.aten.add.Tensor(mul_1536, mul_1537);  mul_1536 = mul_1537 = None
    unsqueeze_851: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_626, -1)
    unsqueeze_852: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_851, -1);  unsqueeze_851 = None
    mul_1538: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1532, unsqueeze_852);  mul_1532 = unsqueeze_852 = None
    unsqueeze_853: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_627, -1);  primals_627 = None
    unsqueeze_854: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_853, -1);  unsqueeze_853 = None
    add_1232: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1538, unsqueeze_854);  mul_1538 = unsqueeze_854 = None
    add_1233: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1227, add_1232);  add_1227 = add_1232 = None
    add_1234: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1233, relu_179);  add_1233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_187: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1234);  add_1234 = None
    alias_187: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_187)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_209: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_180, primals_628, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1235: "i64[]" = torch.ops.aten.add.Tensor(primals_1611, 1)
    var_mean_209 = torch.ops.aten.var_mean.correction(convolution_209, [0, 2, 3], correction = 0, keepdim = True)
    getitem_418: "f32[1, 18, 1, 1]" = var_mean_209[0]
    getitem_419: "f32[1, 18, 1, 1]" = var_mean_209[1];  var_mean_209 = None
    add_1236: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_418, 1e-05)
    rsqrt_209: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1236);  add_1236 = None
    sub_209: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_209, getitem_419)
    mul_1539: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_209, rsqrt_209);  sub_209 = None
    squeeze_627: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_419, [0, 2, 3]);  getitem_419 = None
    squeeze_628: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_209, [0, 2, 3]);  rsqrt_209 = None
    mul_1540: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_627, 0.1)
    mul_1541: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1609, 0.9)
    add_1237: "f32[18]" = torch.ops.aten.add.Tensor(mul_1540, mul_1541);  mul_1540 = mul_1541 = None
    squeeze_629: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_418, [0, 2, 3]);  getitem_418 = None
    mul_1542: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_629, 1.0000398612827361);  squeeze_629 = None
    mul_1543: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1542, 0.1);  mul_1542 = None
    mul_1544: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1610, 0.9)
    add_1238: "f32[18]" = torch.ops.aten.add.Tensor(mul_1543, mul_1544);  mul_1543 = mul_1544 = None
    unsqueeze_855: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_629, -1)
    unsqueeze_856: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_855, -1);  unsqueeze_855 = None
    mul_1545: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1539, unsqueeze_856);  mul_1539 = unsqueeze_856 = None
    unsqueeze_857: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_630, -1);  primals_630 = None
    unsqueeze_858: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_857, -1);  unsqueeze_857 = None
    add_1239: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1545, unsqueeze_858);  mul_1545 = unsqueeze_858 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_188: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1239);  add_1239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_210: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_188, primals_631, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1240: "i64[]" = torch.ops.aten.add.Tensor(primals_1614, 1)
    var_mean_210 = torch.ops.aten.var_mean.correction(convolution_210, [0, 2, 3], correction = 0, keepdim = True)
    getitem_420: "f32[1, 18, 1, 1]" = var_mean_210[0]
    getitem_421: "f32[1, 18, 1, 1]" = var_mean_210[1];  var_mean_210 = None
    add_1241: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_420, 1e-05)
    rsqrt_210: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1241);  add_1241 = None
    sub_210: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_210, getitem_421)
    mul_1546: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_210, rsqrt_210);  sub_210 = None
    squeeze_630: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_421, [0, 2, 3]);  getitem_421 = None
    squeeze_631: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_210, [0, 2, 3]);  rsqrt_210 = None
    mul_1547: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_630, 0.1)
    mul_1548: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1612, 0.9)
    add_1242: "f32[18]" = torch.ops.aten.add.Tensor(mul_1547, mul_1548);  mul_1547 = mul_1548 = None
    squeeze_632: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_420, [0, 2, 3]);  getitem_420 = None
    mul_1549: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_632, 1.0000398612827361);  squeeze_632 = None
    mul_1550: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1549, 0.1);  mul_1549 = None
    mul_1551: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1613, 0.9)
    add_1243: "f32[18]" = torch.ops.aten.add.Tensor(mul_1550, mul_1551);  mul_1550 = mul_1551 = None
    unsqueeze_859: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_632, -1)
    unsqueeze_860: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_859, -1);  unsqueeze_859 = None
    mul_1552: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1546, unsqueeze_860);  mul_1546 = unsqueeze_860 = None
    unsqueeze_861: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_633, -1);  primals_633 = None
    unsqueeze_862: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_861, -1);  unsqueeze_861 = None
    add_1244: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1552, unsqueeze_862);  mul_1552 = unsqueeze_862 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1245: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1244, relu_180);  add_1244 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_189: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1245);  add_1245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_211: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_189, primals_634, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1246: "i64[]" = torch.ops.aten.add.Tensor(primals_1617, 1)
    var_mean_211 = torch.ops.aten.var_mean.correction(convolution_211, [0, 2, 3], correction = 0, keepdim = True)
    getitem_422: "f32[1, 18, 1, 1]" = var_mean_211[0]
    getitem_423: "f32[1, 18, 1, 1]" = var_mean_211[1];  var_mean_211 = None
    add_1247: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_422, 1e-05)
    rsqrt_211: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1247);  add_1247 = None
    sub_211: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_211, getitem_423)
    mul_1553: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_211, rsqrt_211);  sub_211 = None
    squeeze_633: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_423, [0, 2, 3]);  getitem_423 = None
    squeeze_634: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_211, [0, 2, 3]);  rsqrt_211 = None
    mul_1554: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_633, 0.1)
    mul_1555: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1615, 0.9)
    add_1248: "f32[18]" = torch.ops.aten.add.Tensor(mul_1554, mul_1555);  mul_1554 = mul_1555 = None
    squeeze_635: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_422, [0, 2, 3]);  getitem_422 = None
    mul_1556: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_635, 1.0000398612827361);  squeeze_635 = None
    mul_1557: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1556, 0.1);  mul_1556 = None
    mul_1558: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1616, 0.9)
    add_1249: "f32[18]" = torch.ops.aten.add.Tensor(mul_1557, mul_1558);  mul_1557 = mul_1558 = None
    unsqueeze_863: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_635, -1)
    unsqueeze_864: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_863, -1);  unsqueeze_863 = None
    mul_1559: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1553, unsqueeze_864);  mul_1553 = unsqueeze_864 = None
    unsqueeze_865: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_636, -1);  primals_636 = None
    unsqueeze_866: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_865, -1);  unsqueeze_865 = None
    add_1250: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1559, unsqueeze_866);  mul_1559 = unsqueeze_866 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_190: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1250);  add_1250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_212: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_190, primals_637, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1251: "i64[]" = torch.ops.aten.add.Tensor(primals_1620, 1)
    var_mean_212 = torch.ops.aten.var_mean.correction(convolution_212, [0, 2, 3], correction = 0, keepdim = True)
    getitem_424: "f32[1, 18, 1, 1]" = var_mean_212[0]
    getitem_425: "f32[1, 18, 1, 1]" = var_mean_212[1];  var_mean_212 = None
    add_1252: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_424, 1e-05)
    rsqrt_212: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1252);  add_1252 = None
    sub_212: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_212, getitem_425)
    mul_1560: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_212, rsqrt_212);  sub_212 = None
    squeeze_636: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_425, [0, 2, 3]);  getitem_425 = None
    squeeze_637: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_212, [0, 2, 3]);  rsqrt_212 = None
    mul_1561: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_636, 0.1)
    mul_1562: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1618, 0.9)
    add_1253: "f32[18]" = torch.ops.aten.add.Tensor(mul_1561, mul_1562);  mul_1561 = mul_1562 = None
    squeeze_638: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_424, [0, 2, 3]);  getitem_424 = None
    mul_1563: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_638, 1.0000398612827361);  squeeze_638 = None
    mul_1564: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1563, 0.1);  mul_1563 = None
    mul_1565: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1619, 0.9)
    add_1254: "f32[18]" = torch.ops.aten.add.Tensor(mul_1564, mul_1565);  mul_1564 = mul_1565 = None
    unsqueeze_867: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_638, -1)
    unsqueeze_868: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_867, -1);  unsqueeze_867 = None
    mul_1566: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1560, unsqueeze_868);  mul_1560 = unsqueeze_868 = None
    unsqueeze_869: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_639, -1);  primals_639 = None
    unsqueeze_870: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_869, -1);  unsqueeze_869 = None
    add_1255: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1566, unsqueeze_870);  mul_1566 = unsqueeze_870 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1256: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1255, relu_189);  add_1255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_191: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1256);  add_1256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_213: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_191, primals_640, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1257: "i64[]" = torch.ops.aten.add.Tensor(primals_1623, 1)
    var_mean_213 = torch.ops.aten.var_mean.correction(convolution_213, [0, 2, 3], correction = 0, keepdim = True)
    getitem_426: "f32[1, 18, 1, 1]" = var_mean_213[0]
    getitem_427: "f32[1, 18, 1, 1]" = var_mean_213[1];  var_mean_213 = None
    add_1258: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_426, 1e-05)
    rsqrt_213: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1258);  add_1258 = None
    sub_213: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_213, getitem_427)
    mul_1567: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_213, rsqrt_213);  sub_213 = None
    squeeze_639: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_427, [0, 2, 3]);  getitem_427 = None
    squeeze_640: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_213, [0, 2, 3]);  rsqrt_213 = None
    mul_1568: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_639, 0.1)
    mul_1569: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1621, 0.9)
    add_1259: "f32[18]" = torch.ops.aten.add.Tensor(mul_1568, mul_1569);  mul_1568 = mul_1569 = None
    squeeze_641: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_426, [0, 2, 3]);  getitem_426 = None
    mul_1570: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_641, 1.0000398612827361);  squeeze_641 = None
    mul_1571: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1570, 0.1);  mul_1570 = None
    mul_1572: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1622, 0.9)
    add_1260: "f32[18]" = torch.ops.aten.add.Tensor(mul_1571, mul_1572);  mul_1571 = mul_1572 = None
    unsqueeze_871: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_641, -1)
    unsqueeze_872: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_871, -1);  unsqueeze_871 = None
    mul_1573: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1567, unsqueeze_872);  mul_1567 = unsqueeze_872 = None
    unsqueeze_873: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_642, -1);  primals_642 = None
    unsqueeze_874: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_873, -1);  unsqueeze_873 = None
    add_1261: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1573, unsqueeze_874);  mul_1573 = unsqueeze_874 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_192: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1261);  add_1261 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_214: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_192, primals_643, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1262: "i64[]" = torch.ops.aten.add.Tensor(primals_1626, 1)
    var_mean_214 = torch.ops.aten.var_mean.correction(convolution_214, [0, 2, 3], correction = 0, keepdim = True)
    getitem_428: "f32[1, 18, 1, 1]" = var_mean_214[0]
    getitem_429: "f32[1, 18, 1, 1]" = var_mean_214[1];  var_mean_214 = None
    add_1263: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_428, 1e-05)
    rsqrt_214: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1263);  add_1263 = None
    sub_214: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_214, getitem_429)
    mul_1574: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_214, rsqrt_214);  sub_214 = None
    squeeze_642: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_429, [0, 2, 3]);  getitem_429 = None
    squeeze_643: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_214, [0, 2, 3]);  rsqrt_214 = None
    mul_1575: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_642, 0.1)
    mul_1576: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1624, 0.9)
    add_1264: "f32[18]" = torch.ops.aten.add.Tensor(mul_1575, mul_1576);  mul_1575 = mul_1576 = None
    squeeze_644: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_428, [0, 2, 3]);  getitem_428 = None
    mul_1577: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_644, 1.0000398612827361);  squeeze_644 = None
    mul_1578: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1577, 0.1);  mul_1577 = None
    mul_1579: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1625, 0.9)
    add_1265: "f32[18]" = torch.ops.aten.add.Tensor(mul_1578, mul_1579);  mul_1578 = mul_1579 = None
    unsqueeze_875: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_644, -1)
    unsqueeze_876: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_875, -1);  unsqueeze_875 = None
    mul_1580: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1574, unsqueeze_876);  mul_1574 = unsqueeze_876 = None
    unsqueeze_877: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_645, -1);  primals_645 = None
    unsqueeze_878: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_877, -1);  unsqueeze_877 = None
    add_1266: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1580, unsqueeze_878);  mul_1580 = unsqueeze_878 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1267: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1266, relu_191);  add_1266 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_193: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1267);  add_1267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_215: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_193, primals_646, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1268: "i64[]" = torch.ops.aten.add.Tensor(primals_1629, 1)
    var_mean_215 = torch.ops.aten.var_mean.correction(convolution_215, [0, 2, 3], correction = 0, keepdim = True)
    getitem_430: "f32[1, 18, 1, 1]" = var_mean_215[0]
    getitem_431: "f32[1, 18, 1, 1]" = var_mean_215[1];  var_mean_215 = None
    add_1269: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_430, 1e-05)
    rsqrt_215: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1269);  add_1269 = None
    sub_215: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_215, getitem_431)
    mul_1581: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_215, rsqrt_215);  sub_215 = None
    squeeze_645: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_431, [0, 2, 3]);  getitem_431 = None
    squeeze_646: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_215, [0, 2, 3]);  rsqrt_215 = None
    mul_1582: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_645, 0.1)
    mul_1583: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1627, 0.9)
    add_1270: "f32[18]" = torch.ops.aten.add.Tensor(mul_1582, mul_1583);  mul_1582 = mul_1583 = None
    squeeze_647: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_430, [0, 2, 3]);  getitem_430 = None
    mul_1584: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_647, 1.0000398612827361);  squeeze_647 = None
    mul_1585: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1584, 0.1);  mul_1584 = None
    mul_1586: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1628, 0.9)
    add_1271: "f32[18]" = torch.ops.aten.add.Tensor(mul_1585, mul_1586);  mul_1585 = mul_1586 = None
    unsqueeze_879: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_647, -1)
    unsqueeze_880: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_879, -1);  unsqueeze_879 = None
    mul_1587: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1581, unsqueeze_880);  mul_1581 = unsqueeze_880 = None
    unsqueeze_881: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_648, -1);  primals_648 = None
    unsqueeze_882: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_881, -1);  unsqueeze_881 = None
    add_1272: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1587, unsqueeze_882);  mul_1587 = unsqueeze_882 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_194: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1272);  add_1272 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_216: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_194, primals_649, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1273: "i64[]" = torch.ops.aten.add.Tensor(primals_1632, 1)
    var_mean_216 = torch.ops.aten.var_mean.correction(convolution_216, [0, 2, 3], correction = 0, keepdim = True)
    getitem_432: "f32[1, 18, 1, 1]" = var_mean_216[0]
    getitem_433: "f32[1, 18, 1, 1]" = var_mean_216[1];  var_mean_216 = None
    add_1274: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_432, 1e-05)
    rsqrt_216: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1274);  add_1274 = None
    sub_216: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_216, getitem_433)
    mul_1588: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_216, rsqrt_216);  sub_216 = None
    squeeze_648: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_433, [0, 2, 3]);  getitem_433 = None
    squeeze_649: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_216, [0, 2, 3]);  rsqrt_216 = None
    mul_1589: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_648, 0.1)
    mul_1590: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1630, 0.9)
    add_1275: "f32[18]" = torch.ops.aten.add.Tensor(mul_1589, mul_1590);  mul_1589 = mul_1590 = None
    squeeze_650: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_432, [0, 2, 3]);  getitem_432 = None
    mul_1591: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_650, 1.0000398612827361);  squeeze_650 = None
    mul_1592: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1591, 0.1);  mul_1591 = None
    mul_1593: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1631, 0.9)
    add_1276: "f32[18]" = torch.ops.aten.add.Tensor(mul_1592, mul_1593);  mul_1592 = mul_1593 = None
    unsqueeze_883: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_650, -1)
    unsqueeze_884: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_883, -1);  unsqueeze_883 = None
    mul_1594: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1588, unsqueeze_884);  mul_1588 = unsqueeze_884 = None
    unsqueeze_885: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_651, -1);  primals_651 = None
    unsqueeze_886: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_885, -1);  unsqueeze_885 = None
    add_1277: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1594, unsqueeze_886);  mul_1594 = unsqueeze_886 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1278: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1277, relu_193);  add_1277 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_195: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1278);  add_1278 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_217: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_181, primals_652, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1279: "i64[]" = torch.ops.aten.add.Tensor(primals_1635, 1)
    var_mean_217 = torch.ops.aten.var_mean.correction(convolution_217, [0, 2, 3], correction = 0, keepdim = True)
    getitem_434: "f32[1, 36, 1, 1]" = var_mean_217[0]
    getitem_435: "f32[1, 36, 1, 1]" = var_mean_217[1];  var_mean_217 = None
    add_1280: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_434, 1e-05)
    rsqrt_217: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1280);  add_1280 = None
    sub_217: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_217, getitem_435)
    mul_1595: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_217, rsqrt_217);  sub_217 = None
    squeeze_651: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_435, [0, 2, 3]);  getitem_435 = None
    squeeze_652: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_217, [0, 2, 3]);  rsqrt_217 = None
    mul_1596: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_651, 0.1)
    mul_1597: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1633, 0.9)
    add_1281: "f32[36]" = torch.ops.aten.add.Tensor(mul_1596, mul_1597);  mul_1596 = mul_1597 = None
    squeeze_653: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_434, [0, 2, 3]);  getitem_434 = None
    mul_1598: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_653, 1.0001594642002871);  squeeze_653 = None
    mul_1599: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1598, 0.1);  mul_1598 = None
    mul_1600: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1634, 0.9)
    add_1282: "f32[36]" = torch.ops.aten.add.Tensor(mul_1599, mul_1600);  mul_1599 = mul_1600 = None
    unsqueeze_887: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_653, -1)
    unsqueeze_888: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_887, -1);  unsqueeze_887 = None
    mul_1601: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1595, unsqueeze_888);  mul_1595 = unsqueeze_888 = None
    unsqueeze_889: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_654, -1);  primals_654 = None
    unsqueeze_890: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_889, -1);  unsqueeze_889 = None
    add_1283: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1601, unsqueeze_890);  mul_1601 = unsqueeze_890 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_196: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1283);  add_1283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_218: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_196, primals_655, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1284: "i64[]" = torch.ops.aten.add.Tensor(primals_1638, 1)
    var_mean_218 = torch.ops.aten.var_mean.correction(convolution_218, [0, 2, 3], correction = 0, keepdim = True)
    getitem_436: "f32[1, 36, 1, 1]" = var_mean_218[0]
    getitem_437: "f32[1, 36, 1, 1]" = var_mean_218[1];  var_mean_218 = None
    add_1285: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_436, 1e-05)
    rsqrt_218: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1285);  add_1285 = None
    sub_218: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_218, getitem_437)
    mul_1602: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_218, rsqrt_218);  sub_218 = None
    squeeze_654: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_437, [0, 2, 3]);  getitem_437 = None
    squeeze_655: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_218, [0, 2, 3]);  rsqrt_218 = None
    mul_1603: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_654, 0.1)
    mul_1604: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1636, 0.9)
    add_1286: "f32[36]" = torch.ops.aten.add.Tensor(mul_1603, mul_1604);  mul_1603 = mul_1604 = None
    squeeze_656: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_436, [0, 2, 3]);  getitem_436 = None
    mul_1605: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_656, 1.0001594642002871);  squeeze_656 = None
    mul_1606: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1605, 0.1);  mul_1605 = None
    mul_1607: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1637, 0.9)
    add_1287: "f32[36]" = torch.ops.aten.add.Tensor(mul_1606, mul_1607);  mul_1606 = mul_1607 = None
    unsqueeze_891: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_656, -1)
    unsqueeze_892: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_891, -1);  unsqueeze_891 = None
    mul_1608: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1602, unsqueeze_892);  mul_1602 = unsqueeze_892 = None
    unsqueeze_893: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_657, -1);  primals_657 = None
    unsqueeze_894: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_893, -1);  unsqueeze_893 = None
    add_1288: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1608, unsqueeze_894);  mul_1608 = unsqueeze_894 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1289: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1288, relu_181);  add_1288 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_197: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1289);  add_1289 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_219: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_197, primals_658, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1290: "i64[]" = torch.ops.aten.add.Tensor(primals_1641, 1)
    var_mean_219 = torch.ops.aten.var_mean.correction(convolution_219, [0, 2, 3], correction = 0, keepdim = True)
    getitem_438: "f32[1, 36, 1, 1]" = var_mean_219[0]
    getitem_439: "f32[1, 36, 1, 1]" = var_mean_219[1];  var_mean_219 = None
    add_1291: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_438, 1e-05)
    rsqrt_219: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1291);  add_1291 = None
    sub_219: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_219, getitem_439)
    mul_1609: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_219, rsqrt_219);  sub_219 = None
    squeeze_657: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_439, [0, 2, 3]);  getitem_439 = None
    squeeze_658: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_219, [0, 2, 3]);  rsqrt_219 = None
    mul_1610: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_657, 0.1)
    mul_1611: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1639, 0.9)
    add_1292: "f32[36]" = torch.ops.aten.add.Tensor(mul_1610, mul_1611);  mul_1610 = mul_1611 = None
    squeeze_659: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_438, [0, 2, 3]);  getitem_438 = None
    mul_1612: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_659, 1.0001594642002871);  squeeze_659 = None
    mul_1613: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1612, 0.1);  mul_1612 = None
    mul_1614: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1640, 0.9)
    add_1293: "f32[36]" = torch.ops.aten.add.Tensor(mul_1613, mul_1614);  mul_1613 = mul_1614 = None
    unsqueeze_895: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_659, -1)
    unsqueeze_896: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_895, -1);  unsqueeze_895 = None
    mul_1615: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1609, unsqueeze_896);  mul_1609 = unsqueeze_896 = None
    unsqueeze_897: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_660, -1);  primals_660 = None
    unsqueeze_898: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_897, -1);  unsqueeze_897 = None
    add_1294: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1615, unsqueeze_898);  mul_1615 = unsqueeze_898 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_198: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1294);  add_1294 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_220: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_198, primals_661, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1295: "i64[]" = torch.ops.aten.add.Tensor(primals_1644, 1)
    var_mean_220 = torch.ops.aten.var_mean.correction(convolution_220, [0, 2, 3], correction = 0, keepdim = True)
    getitem_440: "f32[1, 36, 1, 1]" = var_mean_220[0]
    getitem_441: "f32[1, 36, 1, 1]" = var_mean_220[1];  var_mean_220 = None
    add_1296: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_440, 1e-05)
    rsqrt_220: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1296);  add_1296 = None
    sub_220: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_220, getitem_441)
    mul_1616: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_220, rsqrt_220);  sub_220 = None
    squeeze_660: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_441, [0, 2, 3]);  getitem_441 = None
    squeeze_661: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_220, [0, 2, 3]);  rsqrt_220 = None
    mul_1617: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_660, 0.1)
    mul_1618: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1642, 0.9)
    add_1297: "f32[36]" = torch.ops.aten.add.Tensor(mul_1617, mul_1618);  mul_1617 = mul_1618 = None
    squeeze_662: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_440, [0, 2, 3]);  getitem_440 = None
    mul_1619: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_662, 1.0001594642002871);  squeeze_662 = None
    mul_1620: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1619, 0.1);  mul_1619 = None
    mul_1621: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1643, 0.9)
    add_1298: "f32[36]" = torch.ops.aten.add.Tensor(mul_1620, mul_1621);  mul_1620 = mul_1621 = None
    unsqueeze_899: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_662, -1)
    unsqueeze_900: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_899, -1);  unsqueeze_899 = None
    mul_1622: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1616, unsqueeze_900);  mul_1616 = unsqueeze_900 = None
    unsqueeze_901: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_663, -1);  primals_663 = None
    unsqueeze_902: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_901, -1);  unsqueeze_901 = None
    add_1299: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1622, unsqueeze_902);  mul_1622 = unsqueeze_902 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1300: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1299, relu_197);  add_1299 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_199: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1300);  add_1300 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_221: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_199, primals_664, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1301: "i64[]" = torch.ops.aten.add.Tensor(primals_1647, 1)
    var_mean_221 = torch.ops.aten.var_mean.correction(convolution_221, [0, 2, 3], correction = 0, keepdim = True)
    getitem_442: "f32[1, 36, 1, 1]" = var_mean_221[0]
    getitem_443: "f32[1, 36, 1, 1]" = var_mean_221[1];  var_mean_221 = None
    add_1302: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_442, 1e-05)
    rsqrt_221: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1302);  add_1302 = None
    sub_221: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_221, getitem_443)
    mul_1623: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_221, rsqrt_221);  sub_221 = None
    squeeze_663: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_443, [0, 2, 3]);  getitem_443 = None
    squeeze_664: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_221, [0, 2, 3]);  rsqrt_221 = None
    mul_1624: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_663, 0.1)
    mul_1625: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1645, 0.9)
    add_1303: "f32[36]" = torch.ops.aten.add.Tensor(mul_1624, mul_1625);  mul_1624 = mul_1625 = None
    squeeze_665: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_442, [0, 2, 3]);  getitem_442 = None
    mul_1626: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_665, 1.0001594642002871);  squeeze_665 = None
    mul_1627: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1626, 0.1);  mul_1626 = None
    mul_1628: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1646, 0.9)
    add_1304: "f32[36]" = torch.ops.aten.add.Tensor(mul_1627, mul_1628);  mul_1627 = mul_1628 = None
    unsqueeze_903: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_665, -1)
    unsqueeze_904: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_903, -1);  unsqueeze_903 = None
    mul_1629: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1623, unsqueeze_904);  mul_1623 = unsqueeze_904 = None
    unsqueeze_905: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_666, -1);  primals_666 = None
    unsqueeze_906: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_905, -1);  unsqueeze_905 = None
    add_1305: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1629, unsqueeze_906);  mul_1629 = unsqueeze_906 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_200: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1305);  add_1305 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_222: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_200, primals_667, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1306: "i64[]" = torch.ops.aten.add.Tensor(primals_1650, 1)
    var_mean_222 = torch.ops.aten.var_mean.correction(convolution_222, [0, 2, 3], correction = 0, keepdim = True)
    getitem_444: "f32[1, 36, 1, 1]" = var_mean_222[0]
    getitem_445: "f32[1, 36, 1, 1]" = var_mean_222[1];  var_mean_222 = None
    add_1307: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_444, 1e-05)
    rsqrt_222: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1307);  add_1307 = None
    sub_222: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_222, getitem_445)
    mul_1630: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_222, rsqrt_222);  sub_222 = None
    squeeze_666: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_445, [0, 2, 3]);  getitem_445 = None
    squeeze_667: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_222, [0, 2, 3]);  rsqrt_222 = None
    mul_1631: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_666, 0.1)
    mul_1632: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1648, 0.9)
    add_1308: "f32[36]" = torch.ops.aten.add.Tensor(mul_1631, mul_1632);  mul_1631 = mul_1632 = None
    squeeze_668: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_444, [0, 2, 3]);  getitem_444 = None
    mul_1633: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_668, 1.0001594642002871);  squeeze_668 = None
    mul_1634: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1633, 0.1);  mul_1633 = None
    mul_1635: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1649, 0.9)
    add_1309: "f32[36]" = torch.ops.aten.add.Tensor(mul_1634, mul_1635);  mul_1634 = mul_1635 = None
    unsqueeze_907: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_668, -1)
    unsqueeze_908: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_907, -1);  unsqueeze_907 = None
    mul_1636: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1630, unsqueeze_908);  mul_1630 = unsqueeze_908 = None
    unsqueeze_909: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_669, -1);  primals_669 = None
    unsqueeze_910: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_909, -1);  unsqueeze_909 = None
    add_1310: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1636, unsqueeze_910);  mul_1636 = unsqueeze_910 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1311: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1310, relu_199);  add_1310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_201: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1311);  add_1311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_223: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_201, primals_670, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1312: "i64[]" = torch.ops.aten.add.Tensor(primals_1653, 1)
    var_mean_223 = torch.ops.aten.var_mean.correction(convolution_223, [0, 2, 3], correction = 0, keepdim = True)
    getitem_446: "f32[1, 36, 1, 1]" = var_mean_223[0]
    getitem_447: "f32[1, 36, 1, 1]" = var_mean_223[1];  var_mean_223 = None
    add_1313: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_446, 1e-05)
    rsqrt_223: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1313);  add_1313 = None
    sub_223: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_223, getitem_447)
    mul_1637: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_223, rsqrt_223);  sub_223 = None
    squeeze_669: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_447, [0, 2, 3]);  getitem_447 = None
    squeeze_670: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_223, [0, 2, 3]);  rsqrt_223 = None
    mul_1638: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_669, 0.1)
    mul_1639: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1651, 0.9)
    add_1314: "f32[36]" = torch.ops.aten.add.Tensor(mul_1638, mul_1639);  mul_1638 = mul_1639 = None
    squeeze_671: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_446, [0, 2, 3]);  getitem_446 = None
    mul_1640: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_671, 1.0001594642002871);  squeeze_671 = None
    mul_1641: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1640, 0.1);  mul_1640 = None
    mul_1642: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1652, 0.9)
    add_1315: "f32[36]" = torch.ops.aten.add.Tensor(mul_1641, mul_1642);  mul_1641 = mul_1642 = None
    unsqueeze_911: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_671, -1)
    unsqueeze_912: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_911, -1);  unsqueeze_911 = None
    mul_1643: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1637, unsqueeze_912);  mul_1637 = unsqueeze_912 = None
    unsqueeze_913: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_672, -1);  primals_672 = None
    unsqueeze_914: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_913, -1);  unsqueeze_913 = None
    add_1316: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1643, unsqueeze_914);  mul_1643 = unsqueeze_914 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_202: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1316);  add_1316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_224: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_202, primals_673, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1317: "i64[]" = torch.ops.aten.add.Tensor(primals_1656, 1)
    var_mean_224 = torch.ops.aten.var_mean.correction(convolution_224, [0, 2, 3], correction = 0, keepdim = True)
    getitem_448: "f32[1, 36, 1, 1]" = var_mean_224[0]
    getitem_449: "f32[1, 36, 1, 1]" = var_mean_224[1];  var_mean_224 = None
    add_1318: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_448, 1e-05)
    rsqrt_224: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1318);  add_1318 = None
    sub_224: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_224, getitem_449)
    mul_1644: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_224, rsqrt_224);  sub_224 = None
    squeeze_672: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_449, [0, 2, 3]);  getitem_449 = None
    squeeze_673: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_224, [0, 2, 3]);  rsqrt_224 = None
    mul_1645: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_672, 0.1)
    mul_1646: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1654, 0.9)
    add_1319: "f32[36]" = torch.ops.aten.add.Tensor(mul_1645, mul_1646);  mul_1645 = mul_1646 = None
    squeeze_674: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_448, [0, 2, 3]);  getitem_448 = None
    mul_1647: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_674, 1.0001594642002871);  squeeze_674 = None
    mul_1648: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1647, 0.1);  mul_1647 = None
    mul_1649: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1655, 0.9)
    add_1320: "f32[36]" = torch.ops.aten.add.Tensor(mul_1648, mul_1649);  mul_1648 = mul_1649 = None
    unsqueeze_915: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_674, -1)
    unsqueeze_916: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_915, -1);  unsqueeze_915 = None
    mul_1650: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1644, unsqueeze_916);  mul_1644 = unsqueeze_916 = None
    unsqueeze_917: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_675, -1);  primals_675 = None
    unsqueeze_918: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_917, -1);  unsqueeze_917 = None
    add_1321: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1650, unsqueeze_918);  mul_1650 = unsqueeze_918 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1322: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1321, relu_201);  add_1321 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_203: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1322);  add_1322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_225: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_183, primals_676, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1323: "i64[]" = torch.ops.aten.add.Tensor(primals_1659, 1)
    var_mean_225 = torch.ops.aten.var_mean.correction(convolution_225, [0, 2, 3], correction = 0, keepdim = True)
    getitem_450: "f32[1, 72, 1, 1]" = var_mean_225[0]
    getitem_451: "f32[1, 72, 1, 1]" = var_mean_225[1];  var_mean_225 = None
    add_1324: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_450, 1e-05)
    rsqrt_225: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1324);  add_1324 = None
    sub_225: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_225, getitem_451)
    mul_1651: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_225, rsqrt_225);  sub_225 = None
    squeeze_675: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_451, [0, 2, 3]);  getitem_451 = None
    squeeze_676: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_225, [0, 2, 3]);  rsqrt_225 = None
    mul_1652: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_675, 0.1)
    mul_1653: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1657, 0.9)
    add_1325: "f32[72]" = torch.ops.aten.add.Tensor(mul_1652, mul_1653);  mul_1652 = mul_1653 = None
    squeeze_677: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_450, [0, 2, 3]);  getitem_450 = None
    mul_1654: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_677, 1.0006381620931717);  squeeze_677 = None
    mul_1655: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1654, 0.1);  mul_1654 = None
    mul_1656: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1658, 0.9)
    add_1326: "f32[72]" = torch.ops.aten.add.Tensor(mul_1655, mul_1656);  mul_1655 = mul_1656 = None
    unsqueeze_919: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_677, -1)
    unsqueeze_920: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_919, -1);  unsqueeze_919 = None
    mul_1657: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1651, unsqueeze_920);  mul_1651 = unsqueeze_920 = None
    unsqueeze_921: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_678, -1);  primals_678 = None
    unsqueeze_922: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_921, -1);  unsqueeze_921 = None
    add_1327: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1657, unsqueeze_922);  mul_1657 = unsqueeze_922 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_204: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1327);  add_1327 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_226: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_204, primals_679, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1328: "i64[]" = torch.ops.aten.add.Tensor(primals_1662, 1)
    var_mean_226 = torch.ops.aten.var_mean.correction(convolution_226, [0, 2, 3], correction = 0, keepdim = True)
    getitem_452: "f32[1, 72, 1, 1]" = var_mean_226[0]
    getitem_453: "f32[1, 72, 1, 1]" = var_mean_226[1];  var_mean_226 = None
    add_1329: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_452, 1e-05)
    rsqrt_226: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1329);  add_1329 = None
    sub_226: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_226, getitem_453)
    mul_1658: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_226, rsqrt_226);  sub_226 = None
    squeeze_678: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_453, [0, 2, 3]);  getitem_453 = None
    squeeze_679: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_226, [0, 2, 3]);  rsqrt_226 = None
    mul_1659: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_678, 0.1)
    mul_1660: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1660, 0.9)
    add_1330: "f32[72]" = torch.ops.aten.add.Tensor(mul_1659, mul_1660);  mul_1659 = mul_1660 = None
    squeeze_680: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_452, [0, 2, 3]);  getitem_452 = None
    mul_1661: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_680, 1.0006381620931717);  squeeze_680 = None
    mul_1662: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1661, 0.1);  mul_1661 = None
    mul_1663: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1661, 0.9)
    add_1331: "f32[72]" = torch.ops.aten.add.Tensor(mul_1662, mul_1663);  mul_1662 = mul_1663 = None
    unsqueeze_923: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_680, -1)
    unsqueeze_924: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_923, -1);  unsqueeze_923 = None
    mul_1664: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1658, unsqueeze_924);  mul_1658 = unsqueeze_924 = None
    unsqueeze_925: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_681, -1);  primals_681 = None
    unsqueeze_926: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_925, -1);  unsqueeze_925 = None
    add_1332: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1664, unsqueeze_926);  mul_1664 = unsqueeze_926 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1333: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1332, relu_183);  add_1332 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_205: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1333);  add_1333 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_227: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_205, primals_682, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1334: "i64[]" = torch.ops.aten.add.Tensor(primals_1665, 1)
    var_mean_227 = torch.ops.aten.var_mean.correction(convolution_227, [0, 2, 3], correction = 0, keepdim = True)
    getitem_454: "f32[1, 72, 1, 1]" = var_mean_227[0]
    getitem_455: "f32[1, 72, 1, 1]" = var_mean_227[1];  var_mean_227 = None
    add_1335: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_454, 1e-05)
    rsqrt_227: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1335);  add_1335 = None
    sub_227: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_227, getitem_455)
    mul_1665: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_227, rsqrt_227);  sub_227 = None
    squeeze_681: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_455, [0, 2, 3]);  getitem_455 = None
    squeeze_682: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_227, [0, 2, 3]);  rsqrt_227 = None
    mul_1666: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_681, 0.1)
    mul_1667: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1663, 0.9)
    add_1336: "f32[72]" = torch.ops.aten.add.Tensor(mul_1666, mul_1667);  mul_1666 = mul_1667 = None
    squeeze_683: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_454, [0, 2, 3]);  getitem_454 = None
    mul_1668: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_683, 1.0006381620931717);  squeeze_683 = None
    mul_1669: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1668, 0.1);  mul_1668 = None
    mul_1670: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1664, 0.9)
    add_1337: "f32[72]" = torch.ops.aten.add.Tensor(mul_1669, mul_1670);  mul_1669 = mul_1670 = None
    unsqueeze_927: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_683, -1)
    unsqueeze_928: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_927, -1);  unsqueeze_927 = None
    mul_1671: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1665, unsqueeze_928);  mul_1665 = unsqueeze_928 = None
    unsqueeze_929: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_684, -1);  primals_684 = None
    unsqueeze_930: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_929, -1);  unsqueeze_929 = None
    add_1338: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1671, unsqueeze_930);  mul_1671 = unsqueeze_930 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_206: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1338);  add_1338 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_228: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_206, primals_685, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1339: "i64[]" = torch.ops.aten.add.Tensor(primals_1668, 1)
    var_mean_228 = torch.ops.aten.var_mean.correction(convolution_228, [0, 2, 3], correction = 0, keepdim = True)
    getitem_456: "f32[1, 72, 1, 1]" = var_mean_228[0]
    getitem_457: "f32[1, 72, 1, 1]" = var_mean_228[1];  var_mean_228 = None
    add_1340: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_456, 1e-05)
    rsqrt_228: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1340);  add_1340 = None
    sub_228: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_228, getitem_457)
    mul_1672: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_228, rsqrt_228);  sub_228 = None
    squeeze_684: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_457, [0, 2, 3]);  getitem_457 = None
    squeeze_685: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_228, [0, 2, 3]);  rsqrt_228 = None
    mul_1673: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_684, 0.1)
    mul_1674: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1666, 0.9)
    add_1341: "f32[72]" = torch.ops.aten.add.Tensor(mul_1673, mul_1674);  mul_1673 = mul_1674 = None
    squeeze_686: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_456, [0, 2, 3]);  getitem_456 = None
    mul_1675: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_686, 1.0006381620931717);  squeeze_686 = None
    mul_1676: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1675, 0.1);  mul_1675 = None
    mul_1677: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1667, 0.9)
    add_1342: "f32[72]" = torch.ops.aten.add.Tensor(mul_1676, mul_1677);  mul_1676 = mul_1677 = None
    unsqueeze_931: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_686, -1)
    unsqueeze_932: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_931, -1);  unsqueeze_931 = None
    mul_1678: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1672, unsqueeze_932);  mul_1672 = unsqueeze_932 = None
    unsqueeze_933: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_687, -1);  primals_687 = None
    unsqueeze_934: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_933, -1);  unsqueeze_933 = None
    add_1343: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1678, unsqueeze_934);  mul_1678 = unsqueeze_934 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1344: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1343, relu_205);  add_1343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_207: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1344);  add_1344 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_229: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_207, primals_688, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1345: "i64[]" = torch.ops.aten.add.Tensor(primals_1671, 1)
    var_mean_229 = torch.ops.aten.var_mean.correction(convolution_229, [0, 2, 3], correction = 0, keepdim = True)
    getitem_458: "f32[1, 72, 1, 1]" = var_mean_229[0]
    getitem_459: "f32[1, 72, 1, 1]" = var_mean_229[1];  var_mean_229 = None
    add_1346: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_458, 1e-05)
    rsqrt_229: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1346);  add_1346 = None
    sub_229: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_229, getitem_459)
    mul_1679: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_229, rsqrt_229);  sub_229 = None
    squeeze_687: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_459, [0, 2, 3]);  getitem_459 = None
    squeeze_688: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_229, [0, 2, 3]);  rsqrt_229 = None
    mul_1680: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_687, 0.1)
    mul_1681: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1669, 0.9)
    add_1347: "f32[72]" = torch.ops.aten.add.Tensor(mul_1680, mul_1681);  mul_1680 = mul_1681 = None
    squeeze_689: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_458, [0, 2, 3]);  getitem_458 = None
    mul_1682: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_689, 1.0006381620931717);  squeeze_689 = None
    mul_1683: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1682, 0.1);  mul_1682 = None
    mul_1684: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1670, 0.9)
    add_1348: "f32[72]" = torch.ops.aten.add.Tensor(mul_1683, mul_1684);  mul_1683 = mul_1684 = None
    unsqueeze_935: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_689, -1)
    unsqueeze_936: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_935, -1);  unsqueeze_935 = None
    mul_1685: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1679, unsqueeze_936);  mul_1679 = unsqueeze_936 = None
    unsqueeze_937: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_690, -1);  primals_690 = None
    unsqueeze_938: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_937, -1);  unsqueeze_937 = None
    add_1349: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1685, unsqueeze_938);  mul_1685 = unsqueeze_938 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_208: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1349);  add_1349 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_230: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_208, primals_691, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1350: "i64[]" = torch.ops.aten.add.Tensor(primals_1674, 1)
    var_mean_230 = torch.ops.aten.var_mean.correction(convolution_230, [0, 2, 3], correction = 0, keepdim = True)
    getitem_460: "f32[1, 72, 1, 1]" = var_mean_230[0]
    getitem_461: "f32[1, 72, 1, 1]" = var_mean_230[1];  var_mean_230 = None
    add_1351: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_460, 1e-05)
    rsqrt_230: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1351);  add_1351 = None
    sub_230: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_230, getitem_461)
    mul_1686: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_230, rsqrt_230);  sub_230 = None
    squeeze_690: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_461, [0, 2, 3]);  getitem_461 = None
    squeeze_691: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_230, [0, 2, 3]);  rsqrt_230 = None
    mul_1687: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_690, 0.1)
    mul_1688: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1672, 0.9)
    add_1352: "f32[72]" = torch.ops.aten.add.Tensor(mul_1687, mul_1688);  mul_1687 = mul_1688 = None
    squeeze_692: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_460, [0, 2, 3]);  getitem_460 = None
    mul_1689: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_692, 1.0006381620931717);  squeeze_692 = None
    mul_1690: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1689, 0.1);  mul_1689 = None
    mul_1691: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1673, 0.9)
    add_1353: "f32[72]" = torch.ops.aten.add.Tensor(mul_1690, mul_1691);  mul_1690 = mul_1691 = None
    unsqueeze_939: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_692, -1)
    unsqueeze_940: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_939, -1);  unsqueeze_939 = None
    mul_1692: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1686, unsqueeze_940);  mul_1686 = unsqueeze_940 = None
    unsqueeze_941: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_693, -1);  primals_693 = None
    unsqueeze_942: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_941, -1);  unsqueeze_941 = None
    add_1354: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1692, unsqueeze_942);  mul_1692 = unsqueeze_942 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1355: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1354, relu_207);  add_1354 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_209: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1355);  add_1355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_231: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_209, primals_694, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1356: "i64[]" = torch.ops.aten.add.Tensor(primals_1677, 1)
    var_mean_231 = torch.ops.aten.var_mean.correction(convolution_231, [0, 2, 3], correction = 0, keepdim = True)
    getitem_462: "f32[1, 72, 1, 1]" = var_mean_231[0]
    getitem_463: "f32[1, 72, 1, 1]" = var_mean_231[1];  var_mean_231 = None
    add_1357: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_462, 1e-05)
    rsqrt_231: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1357);  add_1357 = None
    sub_231: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_231, getitem_463)
    mul_1693: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_231, rsqrt_231);  sub_231 = None
    squeeze_693: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_463, [0, 2, 3]);  getitem_463 = None
    squeeze_694: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_231, [0, 2, 3]);  rsqrt_231 = None
    mul_1694: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_693, 0.1)
    mul_1695: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1675, 0.9)
    add_1358: "f32[72]" = torch.ops.aten.add.Tensor(mul_1694, mul_1695);  mul_1694 = mul_1695 = None
    squeeze_695: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_462, [0, 2, 3]);  getitem_462 = None
    mul_1696: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_695, 1.0006381620931717);  squeeze_695 = None
    mul_1697: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1696, 0.1);  mul_1696 = None
    mul_1698: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1676, 0.9)
    add_1359: "f32[72]" = torch.ops.aten.add.Tensor(mul_1697, mul_1698);  mul_1697 = mul_1698 = None
    unsqueeze_943: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_695, -1)
    unsqueeze_944: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_943, -1);  unsqueeze_943 = None
    mul_1699: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1693, unsqueeze_944);  mul_1693 = unsqueeze_944 = None
    unsqueeze_945: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_696, -1);  primals_696 = None
    unsqueeze_946: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_945, -1);  unsqueeze_945 = None
    add_1360: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1699, unsqueeze_946);  mul_1699 = unsqueeze_946 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_210: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1360);  add_1360 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_232: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_210, primals_697, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1361: "i64[]" = torch.ops.aten.add.Tensor(primals_1680, 1)
    var_mean_232 = torch.ops.aten.var_mean.correction(convolution_232, [0, 2, 3], correction = 0, keepdim = True)
    getitem_464: "f32[1, 72, 1, 1]" = var_mean_232[0]
    getitem_465: "f32[1, 72, 1, 1]" = var_mean_232[1];  var_mean_232 = None
    add_1362: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_464, 1e-05)
    rsqrt_232: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1362);  add_1362 = None
    sub_232: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_232, getitem_465)
    mul_1700: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_232, rsqrt_232);  sub_232 = None
    squeeze_696: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_465, [0, 2, 3]);  getitem_465 = None
    squeeze_697: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_232, [0, 2, 3]);  rsqrt_232 = None
    mul_1701: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_696, 0.1)
    mul_1702: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1678, 0.9)
    add_1363: "f32[72]" = torch.ops.aten.add.Tensor(mul_1701, mul_1702);  mul_1701 = mul_1702 = None
    squeeze_698: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_464, [0, 2, 3]);  getitem_464 = None
    mul_1703: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_698, 1.0006381620931717);  squeeze_698 = None
    mul_1704: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1703, 0.1);  mul_1703 = None
    mul_1705: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1679, 0.9)
    add_1364: "f32[72]" = torch.ops.aten.add.Tensor(mul_1704, mul_1705);  mul_1704 = mul_1705 = None
    unsqueeze_947: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_698, -1)
    unsqueeze_948: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_947, -1);  unsqueeze_947 = None
    mul_1706: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1700, unsqueeze_948);  mul_1700 = unsqueeze_948 = None
    unsqueeze_949: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_699, -1);  primals_699 = None
    unsqueeze_950: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_949, -1);  unsqueeze_949 = None
    add_1365: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1706, unsqueeze_950);  mul_1706 = unsqueeze_950 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1366: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1365, relu_209);  add_1365 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_211: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1366);  add_1366 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_233: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_187, primals_700, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1367: "i64[]" = torch.ops.aten.add.Tensor(primals_1683, 1)
    var_mean_233 = torch.ops.aten.var_mean.correction(convolution_233, [0, 2, 3], correction = 0, keepdim = True)
    getitem_466: "f32[1, 144, 1, 1]" = var_mean_233[0]
    getitem_467: "f32[1, 144, 1, 1]" = var_mean_233[1];  var_mean_233 = None
    add_1368: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_466, 1e-05)
    rsqrt_233: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1368);  add_1368 = None
    sub_233: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_233, getitem_467)
    mul_1707: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_233, rsqrt_233);  sub_233 = None
    squeeze_699: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_467, [0, 2, 3]);  getitem_467 = None
    squeeze_700: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_233, [0, 2, 3]);  rsqrt_233 = None
    mul_1708: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_699, 0.1)
    mul_1709: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1681, 0.9)
    add_1369: "f32[144]" = torch.ops.aten.add.Tensor(mul_1708, mul_1709);  mul_1708 = mul_1709 = None
    squeeze_701: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_466, [0, 2, 3]);  getitem_466 = None
    mul_1710: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_701, 1.0025575447570332);  squeeze_701 = None
    mul_1711: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1710, 0.1);  mul_1710 = None
    mul_1712: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1682, 0.9)
    add_1370: "f32[144]" = torch.ops.aten.add.Tensor(mul_1711, mul_1712);  mul_1711 = mul_1712 = None
    unsqueeze_951: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_701, -1)
    unsqueeze_952: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_951, -1);  unsqueeze_951 = None
    mul_1713: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1707, unsqueeze_952);  mul_1707 = unsqueeze_952 = None
    unsqueeze_953: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_702, -1);  primals_702 = None
    unsqueeze_954: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_953, -1);  unsqueeze_953 = None
    add_1371: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1713, unsqueeze_954);  mul_1713 = unsqueeze_954 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_212: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1371);  add_1371 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_234: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_212, primals_703, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1372: "i64[]" = torch.ops.aten.add.Tensor(primals_1686, 1)
    var_mean_234 = torch.ops.aten.var_mean.correction(convolution_234, [0, 2, 3], correction = 0, keepdim = True)
    getitem_468: "f32[1, 144, 1, 1]" = var_mean_234[0]
    getitem_469: "f32[1, 144, 1, 1]" = var_mean_234[1];  var_mean_234 = None
    add_1373: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_468, 1e-05)
    rsqrt_234: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1373);  add_1373 = None
    sub_234: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_234, getitem_469)
    mul_1714: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_234, rsqrt_234);  sub_234 = None
    squeeze_702: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_469, [0, 2, 3]);  getitem_469 = None
    squeeze_703: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_234, [0, 2, 3]);  rsqrt_234 = None
    mul_1715: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_702, 0.1)
    mul_1716: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1684, 0.9)
    add_1374: "f32[144]" = torch.ops.aten.add.Tensor(mul_1715, mul_1716);  mul_1715 = mul_1716 = None
    squeeze_704: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_468, [0, 2, 3]);  getitem_468 = None
    mul_1717: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_704, 1.0025575447570332);  squeeze_704 = None
    mul_1718: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1717, 0.1);  mul_1717 = None
    mul_1719: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1685, 0.9)
    add_1375: "f32[144]" = torch.ops.aten.add.Tensor(mul_1718, mul_1719);  mul_1718 = mul_1719 = None
    unsqueeze_955: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_704, -1)
    unsqueeze_956: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_955, -1);  unsqueeze_955 = None
    mul_1720: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1714, unsqueeze_956);  mul_1714 = unsqueeze_956 = None
    unsqueeze_957: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_705, -1);  primals_705 = None
    unsqueeze_958: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_957, -1);  unsqueeze_957 = None
    add_1376: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1720, unsqueeze_958);  mul_1720 = unsqueeze_958 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1377: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1376, relu_187);  add_1376 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_213: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1377);  add_1377 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_235: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_213, primals_706, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1378: "i64[]" = torch.ops.aten.add.Tensor(primals_1689, 1)
    var_mean_235 = torch.ops.aten.var_mean.correction(convolution_235, [0, 2, 3], correction = 0, keepdim = True)
    getitem_470: "f32[1, 144, 1, 1]" = var_mean_235[0]
    getitem_471: "f32[1, 144, 1, 1]" = var_mean_235[1];  var_mean_235 = None
    add_1379: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_470, 1e-05)
    rsqrt_235: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1379);  add_1379 = None
    sub_235: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_235, getitem_471)
    mul_1721: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_235, rsqrt_235);  sub_235 = None
    squeeze_705: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_471, [0, 2, 3]);  getitem_471 = None
    squeeze_706: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_235, [0, 2, 3]);  rsqrt_235 = None
    mul_1722: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_705, 0.1)
    mul_1723: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1687, 0.9)
    add_1380: "f32[144]" = torch.ops.aten.add.Tensor(mul_1722, mul_1723);  mul_1722 = mul_1723 = None
    squeeze_707: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_470, [0, 2, 3]);  getitem_470 = None
    mul_1724: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_707, 1.0025575447570332);  squeeze_707 = None
    mul_1725: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1724, 0.1);  mul_1724 = None
    mul_1726: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1688, 0.9)
    add_1381: "f32[144]" = torch.ops.aten.add.Tensor(mul_1725, mul_1726);  mul_1725 = mul_1726 = None
    unsqueeze_959: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_707, -1)
    unsqueeze_960: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_959, -1);  unsqueeze_959 = None
    mul_1727: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1721, unsqueeze_960);  mul_1721 = unsqueeze_960 = None
    unsqueeze_961: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_708, -1);  primals_708 = None
    unsqueeze_962: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_961, -1);  unsqueeze_961 = None
    add_1382: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1727, unsqueeze_962);  mul_1727 = unsqueeze_962 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_214: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1382);  add_1382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_236: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_214, primals_709, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1383: "i64[]" = torch.ops.aten.add.Tensor(primals_1692, 1)
    var_mean_236 = torch.ops.aten.var_mean.correction(convolution_236, [0, 2, 3], correction = 0, keepdim = True)
    getitem_472: "f32[1, 144, 1, 1]" = var_mean_236[0]
    getitem_473: "f32[1, 144, 1, 1]" = var_mean_236[1];  var_mean_236 = None
    add_1384: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_472, 1e-05)
    rsqrt_236: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1384);  add_1384 = None
    sub_236: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_236, getitem_473)
    mul_1728: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_236, rsqrt_236);  sub_236 = None
    squeeze_708: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_473, [0, 2, 3]);  getitem_473 = None
    squeeze_709: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_236, [0, 2, 3]);  rsqrt_236 = None
    mul_1729: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_708, 0.1)
    mul_1730: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1690, 0.9)
    add_1385: "f32[144]" = torch.ops.aten.add.Tensor(mul_1729, mul_1730);  mul_1729 = mul_1730 = None
    squeeze_710: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_472, [0, 2, 3]);  getitem_472 = None
    mul_1731: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_710, 1.0025575447570332);  squeeze_710 = None
    mul_1732: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1731, 0.1);  mul_1731 = None
    mul_1733: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1691, 0.9)
    add_1386: "f32[144]" = torch.ops.aten.add.Tensor(mul_1732, mul_1733);  mul_1732 = mul_1733 = None
    unsqueeze_963: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_710, -1)
    unsqueeze_964: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_963, -1);  unsqueeze_963 = None
    mul_1734: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1728, unsqueeze_964);  mul_1728 = unsqueeze_964 = None
    unsqueeze_965: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_711, -1);  primals_711 = None
    unsqueeze_966: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_965, -1);  unsqueeze_965 = None
    add_1387: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1734, unsqueeze_966);  mul_1734 = unsqueeze_966 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1388: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1387, relu_213);  add_1387 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_215: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1388);  add_1388 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_237: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_215, primals_712, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1389: "i64[]" = torch.ops.aten.add.Tensor(primals_1695, 1)
    var_mean_237 = torch.ops.aten.var_mean.correction(convolution_237, [0, 2, 3], correction = 0, keepdim = True)
    getitem_474: "f32[1, 144, 1, 1]" = var_mean_237[0]
    getitem_475: "f32[1, 144, 1, 1]" = var_mean_237[1];  var_mean_237 = None
    add_1390: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_474, 1e-05)
    rsqrt_237: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1390);  add_1390 = None
    sub_237: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_237, getitem_475)
    mul_1735: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_237, rsqrt_237);  sub_237 = None
    squeeze_711: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_475, [0, 2, 3]);  getitem_475 = None
    squeeze_712: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_237, [0, 2, 3]);  rsqrt_237 = None
    mul_1736: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_711, 0.1)
    mul_1737: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1693, 0.9)
    add_1391: "f32[144]" = torch.ops.aten.add.Tensor(mul_1736, mul_1737);  mul_1736 = mul_1737 = None
    squeeze_713: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_474, [0, 2, 3]);  getitem_474 = None
    mul_1738: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_713, 1.0025575447570332);  squeeze_713 = None
    mul_1739: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1738, 0.1);  mul_1738 = None
    mul_1740: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1694, 0.9)
    add_1392: "f32[144]" = torch.ops.aten.add.Tensor(mul_1739, mul_1740);  mul_1739 = mul_1740 = None
    unsqueeze_967: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_713, -1)
    unsqueeze_968: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_967, -1);  unsqueeze_967 = None
    mul_1741: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1735, unsqueeze_968);  mul_1735 = unsqueeze_968 = None
    unsqueeze_969: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_714, -1);  primals_714 = None
    unsqueeze_970: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_969, -1);  unsqueeze_969 = None
    add_1393: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1741, unsqueeze_970);  mul_1741 = unsqueeze_970 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_216: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1393);  add_1393 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_238: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_216, primals_715, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1394: "i64[]" = torch.ops.aten.add.Tensor(primals_1698, 1)
    var_mean_238 = torch.ops.aten.var_mean.correction(convolution_238, [0, 2, 3], correction = 0, keepdim = True)
    getitem_476: "f32[1, 144, 1, 1]" = var_mean_238[0]
    getitem_477: "f32[1, 144, 1, 1]" = var_mean_238[1];  var_mean_238 = None
    add_1395: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_476, 1e-05)
    rsqrt_238: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1395);  add_1395 = None
    sub_238: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_238, getitem_477)
    mul_1742: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_238, rsqrt_238);  sub_238 = None
    squeeze_714: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_477, [0, 2, 3]);  getitem_477 = None
    squeeze_715: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_238, [0, 2, 3]);  rsqrt_238 = None
    mul_1743: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_714, 0.1)
    mul_1744: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1696, 0.9)
    add_1396: "f32[144]" = torch.ops.aten.add.Tensor(mul_1743, mul_1744);  mul_1743 = mul_1744 = None
    squeeze_716: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_476, [0, 2, 3]);  getitem_476 = None
    mul_1745: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_716, 1.0025575447570332);  squeeze_716 = None
    mul_1746: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1745, 0.1);  mul_1745 = None
    mul_1747: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1697, 0.9)
    add_1397: "f32[144]" = torch.ops.aten.add.Tensor(mul_1746, mul_1747);  mul_1746 = mul_1747 = None
    unsqueeze_971: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_716, -1)
    unsqueeze_972: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_971, -1);  unsqueeze_971 = None
    mul_1748: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1742, unsqueeze_972);  mul_1742 = unsqueeze_972 = None
    unsqueeze_973: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_717, -1);  primals_717 = None
    unsqueeze_974: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_973, -1);  unsqueeze_973 = None
    add_1398: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1748, unsqueeze_974);  mul_1748 = unsqueeze_974 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1399: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1398, relu_215);  add_1398 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_217: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1399);  add_1399 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_239: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_217, primals_718, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1400: "i64[]" = torch.ops.aten.add.Tensor(primals_1701, 1)
    var_mean_239 = torch.ops.aten.var_mean.correction(convolution_239, [0, 2, 3], correction = 0, keepdim = True)
    getitem_478: "f32[1, 144, 1, 1]" = var_mean_239[0]
    getitem_479: "f32[1, 144, 1, 1]" = var_mean_239[1];  var_mean_239 = None
    add_1401: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_478, 1e-05)
    rsqrt_239: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1401);  add_1401 = None
    sub_239: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_239, getitem_479)
    mul_1749: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_239, rsqrt_239);  sub_239 = None
    squeeze_717: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_479, [0, 2, 3]);  getitem_479 = None
    squeeze_718: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_239, [0, 2, 3]);  rsqrt_239 = None
    mul_1750: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_717, 0.1)
    mul_1751: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1699, 0.9)
    add_1402: "f32[144]" = torch.ops.aten.add.Tensor(mul_1750, mul_1751);  mul_1750 = mul_1751 = None
    squeeze_719: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_478, [0, 2, 3]);  getitem_478 = None
    mul_1752: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_719, 1.0025575447570332);  squeeze_719 = None
    mul_1753: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1752, 0.1);  mul_1752 = None
    mul_1754: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1700, 0.9)
    add_1403: "f32[144]" = torch.ops.aten.add.Tensor(mul_1753, mul_1754);  mul_1753 = mul_1754 = None
    unsqueeze_975: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_719, -1)
    unsqueeze_976: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_975, -1);  unsqueeze_975 = None
    mul_1755: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1749, unsqueeze_976);  mul_1749 = unsqueeze_976 = None
    unsqueeze_977: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_720, -1);  primals_720 = None
    unsqueeze_978: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_977, -1);  unsqueeze_977 = None
    add_1404: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1755, unsqueeze_978);  mul_1755 = unsqueeze_978 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_218: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1404);  add_1404 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_240: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_218, primals_721, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1405: "i64[]" = torch.ops.aten.add.Tensor(primals_1704, 1)
    var_mean_240 = torch.ops.aten.var_mean.correction(convolution_240, [0, 2, 3], correction = 0, keepdim = True)
    getitem_480: "f32[1, 144, 1, 1]" = var_mean_240[0]
    getitem_481: "f32[1, 144, 1, 1]" = var_mean_240[1];  var_mean_240 = None
    add_1406: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_480, 1e-05)
    rsqrt_240: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1406);  add_1406 = None
    sub_240: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_240, getitem_481)
    mul_1756: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_240, rsqrt_240);  sub_240 = None
    squeeze_720: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_481, [0, 2, 3]);  getitem_481 = None
    squeeze_721: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_240, [0, 2, 3]);  rsqrt_240 = None
    mul_1757: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_720, 0.1)
    mul_1758: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1702, 0.9)
    add_1407: "f32[144]" = torch.ops.aten.add.Tensor(mul_1757, mul_1758);  mul_1757 = mul_1758 = None
    squeeze_722: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_480, [0, 2, 3]);  getitem_480 = None
    mul_1759: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_722, 1.0025575447570332);  squeeze_722 = None
    mul_1760: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1759, 0.1);  mul_1759 = None
    mul_1761: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1703, 0.9)
    add_1408: "f32[144]" = torch.ops.aten.add.Tensor(mul_1760, mul_1761);  mul_1760 = mul_1761 = None
    unsqueeze_979: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_722, -1)
    unsqueeze_980: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_979, -1);  unsqueeze_979 = None
    mul_1762: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1756, unsqueeze_980);  mul_1756 = unsqueeze_980 = None
    unsqueeze_981: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_723, -1);  primals_723 = None
    unsqueeze_982: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_981, -1);  unsqueeze_981 = None
    add_1409: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1762, unsqueeze_982);  mul_1762 = unsqueeze_982 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1410: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1409, relu_217);  add_1409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_219: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1410);  add_1410 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_241: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_203, primals_724, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1411: "i64[]" = torch.ops.aten.add.Tensor(primals_1707, 1)
    var_mean_241 = torch.ops.aten.var_mean.correction(convolution_241, [0, 2, 3], correction = 0, keepdim = True)
    getitem_482: "f32[1, 18, 1, 1]" = var_mean_241[0]
    getitem_483: "f32[1, 18, 1, 1]" = var_mean_241[1];  var_mean_241 = None
    add_1412: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_482, 1e-05)
    rsqrt_241: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1412);  add_1412 = None
    sub_241: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_241, getitem_483)
    mul_1763: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_241, rsqrt_241);  sub_241 = None
    squeeze_723: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_483, [0, 2, 3]);  getitem_483 = None
    squeeze_724: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_241, [0, 2, 3]);  rsqrt_241 = None
    mul_1764: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_723, 0.1)
    mul_1765: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1705, 0.9)
    add_1413: "f32[18]" = torch.ops.aten.add.Tensor(mul_1764, mul_1765);  mul_1764 = mul_1765 = None
    squeeze_725: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_482, [0, 2, 3]);  getitem_482 = None
    mul_1766: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_725, 1.0001594642002871);  squeeze_725 = None
    mul_1767: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1766, 0.1);  mul_1766 = None
    mul_1768: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1706, 0.9)
    add_1414: "f32[18]" = torch.ops.aten.add.Tensor(mul_1767, mul_1768);  mul_1767 = mul_1768 = None
    unsqueeze_983: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_725, -1)
    unsqueeze_984: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_983, -1);  unsqueeze_983 = None
    mul_1769: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1763, unsqueeze_984);  mul_1763 = unsqueeze_984 = None
    unsqueeze_985: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_726, -1);  primals_726 = None
    unsqueeze_986: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_985, -1);  unsqueeze_985 = None
    add_1415: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1769, unsqueeze_986);  mul_1769 = unsqueeze_986 = None
    iota_38: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_76: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_38, torch.float32);  iota_38 = None
    mul_1770: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_76, 1);  convert_element_type_76 = None
    add_1416: "f32[56]" = torch.ops.aten.add.Tensor(mul_1770, 0);  mul_1770 = None
    add_1417: "f32[56]" = torch.ops.aten.add.Tensor(add_1416, 0.0);  add_1416 = None
    mul_1771: "f32[56]" = torch.ops.aten.mul.Tensor(add_1417, 0.5);  add_1417 = None
    convert_element_type_77: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1771, torch.int64);  mul_1771 = None
    unsqueeze_987: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_77, -1);  convert_element_type_77 = None
    iota_39: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_78: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_39, torch.float32);  iota_39 = None
    mul_1772: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_78, 1);  convert_element_type_78 = None
    add_1418: "f32[56]" = torch.ops.aten.add.Tensor(mul_1772, 0);  mul_1772 = None
    add_1419: "f32[56]" = torch.ops.aten.add.Tensor(add_1418, 0.0);  add_1418 = None
    mul_1773: "f32[56]" = torch.ops.aten.mul.Tensor(add_1419, 0.5);  add_1419 = None
    convert_element_type_79: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1773, torch.int64);  mul_1773 = None
    _unsafe_index_19: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1415, [None, None, unsqueeze_987, convert_element_type_79]);  add_1415 = None
    add_1420: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_195, _unsafe_index_19);  _unsafe_index_19 = None
    convolution_242: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_211, primals_727, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1421: "i64[]" = torch.ops.aten.add.Tensor(primals_1710, 1)
    var_mean_242 = torch.ops.aten.var_mean.correction(convolution_242, [0, 2, 3], correction = 0, keepdim = True)
    getitem_484: "f32[1, 18, 1, 1]" = var_mean_242[0]
    getitem_485: "f32[1, 18, 1, 1]" = var_mean_242[1];  var_mean_242 = None
    add_1422: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_484, 1e-05)
    rsqrt_242: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1422);  add_1422 = None
    sub_242: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_242, getitem_485)
    mul_1774: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_242, rsqrt_242);  sub_242 = None
    squeeze_726: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_485, [0, 2, 3]);  getitem_485 = None
    squeeze_727: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_242, [0, 2, 3]);  rsqrt_242 = None
    mul_1775: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_726, 0.1)
    mul_1776: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1708, 0.9)
    add_1423: "f32[18]" = torch.ops.aten.add.Tensor(mul_1775, mul_1776);  mul_1775 = mul_1776 = None
    squeeze_728: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_484, [0, 2, 3]);  getitem_484 = None
    mul_1777: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_728, 1.0006381620931717);  squeeze_728 = None
    mul_1778: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1777, 0.1);  mul_1777 = None
    mul_1779: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1709, 0.9)
    add_1424: "f32[18]" = torch.ops.aten.add.Tensor(mul_1778, mul_1779);  mul_1778 = mul_1779 = None
    unsqueeze_988: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_728, -1)
    unsqueeze_989: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_988, -1);  unsqueeze_988 = None
    mul_1780: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1774, unsqueeze_989);  mul_1774 = unsqueeze_989 = None
    unsqueeze_990: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_729, -1);  primals_729 = None
    unsqueeze_991: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_990, -1);  unsqueeze_990 = None
    add_1425: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1780, unsqueeze_991);  mul_1780 = unsqueeze_991 = None
    iota_40: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_80: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_40, torch.float32);  iota_40 = None
    mul_1781: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_80, 1);  convert_element_type_80 = None
    add_1426: "f32[56]" = torch.ops.aten.add.Tensor(mul_1781, 0);  mul_1781 = None
    add_1427: "f32[56]" = torch.ops.aten.add.Tensor(add_1426, 0.0);  add_1426 = None
    mul_1782: "f32[56]" = torch.ops.aten.mul.Tensor(add_1427, 0.25);  add_1427 = None
    convert_element_type_81: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1782, torch.int64);  mul_1782 = None
    unsqueeze_992: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_81, -1);  convert_element_type_81 = None
    iota_41: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_82: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_41, torch.float32);  iota_41 = None
    mul_1783: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_82, 1);  convert_element_type_82 = None
    add_1428: "f32[56]" = torch.ops.aten.add.Tensor(mul_1783, 0);  mul_1783 = None
    add_1429: "f32[56]" = torch.ops.aten.add.Tensor(add_1428, 0.0);  add_1428 = None
    mul_1784: "f32[56]" = torch.ops.aten.mul.Tensor(add_1429, 0.25);  add_1429 = None
    convert_element_type_83: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1784, torch.int64);  mul_1784 = None
    _unsafe_index_20: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1425, [None, None, unsqueeze_992, convert_element_type_83]);  add_1425 = None
    add_1430: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1420, _unsafe_index_20);  add_1420 = _unsafe_index_20 = None
    convolution_243: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_219, primals_730, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1431: "i64[]" = torch.ops.aten.add.Tensor(primals_1713, 1)
    var_mean_243 = torch.ops.aten.var_mean.correction(convolution_243, [0, 2, 3], correction = 0, keepdim = True)
    getitem_486: "f32[1, 18, 1, 1]" = var_mean_243[0]
    getitem_487: "f32[1, 18, 1, 1]" = var_mean_243[1];  var_mean_243 = None
    add_1432: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_486, 1e-05)
    rsqrt_243: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1432);  add_1432 = None
    sub_243: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_243, getitem_487)
    mul_1785: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_243, rsqrt_243);  sub_243 = None
    squeeze_729: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_487, [0, 2, 3]);  getitem_487 = None
    squeeze_730: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_243, [0, 2, 3]);  rsqrt_243 = None
    mul_1786: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_729, 0.1)
    mul_1787: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1711, 0.9)
    add_1433: "f32[18]" = torch.ops.aten.add.Tensor(mul_1786, mul_1787);  mul_1786 = mul_1787 = None
    squeeze_731: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_486, [0, 2, 3]);  getitem_486 = None
    mul_1788: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_731, 1.0025575447570332);  squeeze_731 = None
    mul_1789: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1788, 0.1);  mul_1788 = None
    mul_1790: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1712, 0.9)
    add_1434: "f32[18]" = torch.ops.aten.add.Tensor(mul_1789, mul_1790);  mul_1789 = mul_1790 = None
    unsqueeze_993: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_731, -1)
    unsqueeze_994: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_993, -1);  unsqueeze_993 = None
    mul_1791: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1785, unsqueeze_994);  mul_1785 = unsqueeze_994 = None
    unsqueeze_995: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_732, -1);  primals_732 = None
    unsqueeze_996: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_995, -1);  unsqueeze_995 = None
    add_1435: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_1791, unsqueeze_996);  mul_1791 = unsqueeze_996 = None
    iota_42: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_84: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_42, torch.float32);  iota_42 = None
    mul_1792: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_84, 1);  convert_element_type_84 = None
    add_1436: "f32[56]" = torch.ops.aten.add.Tensor(mul_1792, 0);  mul_1792 = None
    add_1437: "f32[56]" = torch.ops.aten.add.Tensor(add_1436, 0.0);  add_1436 = None
    mul_1793: "f32[56]" = torch.ops.aten.mul.Tensor(add_1437, 0.125);  add_1437 = None
    convert_element_type_85: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1793, torch.int64);  mul_1793 = None
    unsqueeze_997: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_85, -1);  convert_element_type_85 = None
    iota_43: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_86: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_43, torch.float32);  iota_43 = None
    mul_1794: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_86, 1);  convert_element_type_86 = None
    add_1438: "f32[56]" = torch.ops.aten.add.Tensor(mul_1794, 0);  mul_1794 = None
    add_1439: "f32[56]" = torch.ops.aten.add.Tensor(add_1438, 0.0);  add_1438 = None
    mul_1795: "f32[56]" = torch.ops.aten.mul.Tensor(add_1439, 0.125);  add_1439 = None
    convert_element_type_87: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_1795, torch.int64);  mul_1795 = None
    _unsafe_index_21: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1435, [None, None, unsqueeze_997, convert_element_type_87]);  add_1435 = None
    add_1440: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1430, _unsafe_index_21);  add_1430 = _unsafe_index_21 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_220: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1440);  add_1440 = None
    alias_220: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_220)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_244: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_195, primals_733, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1441: "i64[]" = torch.ops.aten.add.Tensor(primals_1716, 1)
    var_mean_244 = torch.ops.aten.var_mean.correction(convolution_244, [0, 2, 3], correction = 0, keepdim = True)
    getitem_488: "f32[1, 36, 1, 1]" = var_mean_244[0]
    getitem_489: "f32[1, 36, 1, 1]" = var_mean_244[1];  var_mean_244 = None
    add_1442: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_488, 1e-05)
    rsqrt_244: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1442);  add_1442 = None
    sub_244: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_244, getitem_489)
    mul_1796: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_244, rsqrt_244);  sub_244 = None
    squeeze_732: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_489, [0, 2, 3]);  getitem_489 = None
    squeeze_733: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_244, [0, 2, 3]);  rsqrt_244 = None
    mul_1797: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_732, 0.1)
    mul_1798: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1714, 0.9)
    add_1443: "f32[36]" = torch.ops.aten.add.Tensor(mul_1797, mul_1798);  mul_1797 = mul_1798 = None
    squeeze_734: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_488, [0, 2, 3]);  getitem_488 = None
    mul_1799: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_734, 1.0001594642002871);  squeeze_734 = None
    mul_1800: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1799, 0.1);  mul_1799 = None
    mul_1801: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1715, 0.9)
    add_1444: "f32[36]" = torch.ops.aten.add.Tensor(mul_1800, mul_1801);  mul_1800 = mul_1801 = None
    unsqueeze_998: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_734, -1)
    unsqueeze_999: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_998, -1);  unsqueeze_998 = None
    mul_1802: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1796, unsqueeze_999);  mul_1796 = unsqueeze_999 = None
    unsqueeze_1000: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_735, -1);  primals_735 = None
    unsqueeze_1001: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1000, -1);  unsqueeze_1000 = None
    add_1445: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1802, unsqueeze_1001);  mul_1802 = unsqueeze_1001 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1446: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1445, relu_203);  add_1445 = None
    convolution_245: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_211, primals_736, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1447: "i64[]" = torch.ops.aten.add.Tensor(primals_1719, 1)
    var_mean_245 = torch.ops.aten.var_mean.correction(convolution_245, [0, 2, 3], correction = 0, keepdim = True)
    getitem_490: "f32[1, 36, 1, 1]" = var_mean_245[0]
    getitem_491: "f32[1, 36, 1, 1]" = var_mean_245[1];  var_mean_245 = None
    add_1448: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_490, 1e-05)
    rsqrt_245: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1448);  add_1448 = None
    sub_245: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_245, getitem_491)
    mul_1803: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_245, rsqrt_245);  sub_245 = None
    squeeze_735: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_491, [0, 2, 3]);  getitem_491 = None
    squeeze_736: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_245, [0, 2, 3]);  rsqrt_245 = None
    mul_1804: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_735, 0.1)
    mul_1805: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1717, 0.9)
    add_1449: "f32[36]" = torch.ops.aten.add.Tensor(mul_1804, mul_1805);  mul_1804 = mul_1805 = None
    squeeze_737: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_490, [0, 2, 3]);  getitem_490 = None
    mul_1806: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_737, 1.0006381620931717);  squeeze_737 = None
    mul_1807: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1806, 0.1);  mul_1806 = None
    mul_1808: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1718, 0.9)
    add_1450: "f32[36]" = torch.ops.aten.add.Tensor(mul_1807, mul_1808);  mul_1807 = mul_1808 = None
    unsqueeze_1002: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_737, -1)
    unsqueeze_1003: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1002, -1);  unsqueeze_1002 = None
    mul_1809: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1803, unsqueeze_1003);  mul_1803 = unsqueeze_1003 = None
    unsqueeze_1004: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_738, -1);  primals_738 = None
    unsqueeze_1005: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1004, -1);  unsqueeze_1004 = None
    add_1451: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1809, unsqueeze_1005);  mul_1809 = unsqueeze_1005 = None
    iota_44: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_88: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_44, torch.float32);  iota_44 = None
    mul_1810: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_88, 1);  convert_element_type_88 = None
    add_1452: "f32[28]" = torch.ops.aten.add.Tensor(mul_1810, 0);  mul_1810 = None
    add_1453: "f32[28]" = torch.ops.aten.add.Tensor(add_1452, 0.0);  add_1452 = None
    mul_1811: "f32[28]" = torch.ops.aten.mul.Tensor(add_1453, 0.5);  add_1453 = None
    convert_element_type_89: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1811, torch.int64);  mul_1811 = None
    unsqueeze_1006: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_89, -1);  convert_element_type_89 = None
    iota_45: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_90: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_45, torch.float32);  iota_45 = None
    mul_1812: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_90, 1);  convert_element_type_90 = None
    add_1454: "f32[28]" = torch.ops.aten.add.Tensor(mul_1812, 0);  mul_1812 = None
    add_1455: "f32[28]" = torch.ops.aten.add.Tensor(add_1454, 0.0);  add_1454 = None
    mul_1813: "f32[28]" = torch.ops.aten.mul.Tensor(add_1455, 0.5);  add_1455 = None
    convert_element_type_91: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1813, torch.int64);  mul_1813 = None
    _unsafe_index_22: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1451, [None, None, unsqueeze_1006, convert_element_type_91]);  add_1451 = None
    add_1456: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1446, _unsafe_index_22);  add_1446 = _unsafe_index_22 = None
    convolution_246: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_219, primals_739, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1457: "i64[]" = torch.ops.aten.add.Tensor(primals_1722, 1)
    var_mean_246 = torch.ops.aten.var_mean.correction(convolution_246, [0, 2, 3], correction = 0, keepdim = True)
    getitem_492: "f32[1, 36, 1, 1]" = var_mean_246[0]
    getitem_493: "f32[1, 36, 1, 1]" = var_mean_246[1];  var_mean_246 = None
    add_1458: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_492, 1e-05)
    rsqrt_246: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1458);  add_1458 = None
    sub_246: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_246, getitem_493)
    mul_1814: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_246, rsqrt_246);  sub_246 = None
    squeeze_738: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_493, [0, 2, 3]);  getitem_493 = None
    squeeze_739: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_246, [0, 2, 3]);  rsqrt_246 = None
    mul_1815: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_738, 0.1)
    mul_1816: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1720, 0.9)
    add_1459: "f32[36]" = torch.ops.aten.add.Tensor(mul_1815, mul_1816);  mul_1815 = mul_1816 = None
    squeeze_740: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_492, [0, 2, 3]);  getitem_492 = None
    mul_1817: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_740, 1.0025575447570332);  squeeze_740 = None
    mul_1818: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1817, 0.1);  mul_1817 = None
    mul_1819: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1721, 0.9)
    add_1460: "f32[36]" = torch.ops.aten.add.Tensor(mul_1818, mul_1819);  mul_1818 = mul_1819 = None
    unsqueeze_1007: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_740, -1)
    unsqueeze_1008: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1007, -1);  unsqueeze_1007 = None
    mul_1820: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1814, unsqueeze_1008);  mul_1814 = unsqueeze_1008 = None
    unsqueeze_1009: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_741, -1);  primals_741 = None
    unsqueeze_1010: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1009, -1);  unsqueeze_1009 = None
    add_1461: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_1820, unsqueeze_1010);  mul_1820 = unsqueeze_1010 = None
    iota_46: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_92: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_46, torch.float32);  iota_46 = None
    mul_1821: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_92, 1);  convert_element_type_92 = None
    add_1462: "f32[28]" = torch.ops.aten.add.Tensor(mul_1821, 0);  mul_1821 = None
    add_1463: "f32[28]" = torch.ops.aten.add.Tensor(add_1462, 0.0);  add_1462 = None
    mul_1822: "f32[28]" = torch.ops.aten.mul.Tensor(add_1463, 0.25);  add_1463 = None
    convert_element_type_93: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1822, torch.int64);  mul_1822 = None
    unsqueeze_1011: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_93, -1);  convert_element_type_93 = None
    iota_47: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_94: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_47, torch.float32);  iota_47 = None
    mul_1823: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_94, 1);  convert_element_type_94 = None
    add_1464: "f32[28]" = torch.ops.aten.add.Tensor(mul_1823, 0);  mul_1823 = None
    add_1465: "f32[28]" = torch.ops.aten.add.Tensor(add_1464, 0.0);  add_1464 = None
    mul_1824: "f32[28]" = torch.ops.aten.mul.Tensor(add_1465, 0.25);  add_1465 = None
    convert_element_type_95: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_1824, torch.int64);  mul_1824 = None
    _unsafe_index_23: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1461, [None, None, unsqueeze_1011, convert_element_type_95]);  add_1461 = None
    add_1466: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1456, _unsafe_index_23);  add_1456 = _unsafe_index_23 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_221: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1466);  add_1466 = None
    alias_221: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_221)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_247: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_195, primals_742, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1467: "i64[]" = torch.ops.aten.add.Tensor(primals_1725, 1)
    var_mean_247 = torch.ops.aten.var_mean.correction(convolution_247, [0, 2, 3], correction = 0, keepdim = True)
    getitem_494: "f32[1, 18, 1, 1]" = var_mean_247[0]
    getitem_495: "f32[1, 18, 1, 1]" = var_mean_247[1];  var_mean_247 = None
    add_1468: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_494, 1e-05)
    rsqrt_247: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1468);  add_1468 = None
    sub_247: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_247, getitem_495)
    mul_1825: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_247, rsqrt_247);  sub_247 = None
    squeeze_741: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_495, [0, 2, 3]);  getitem_495 = None
    squeeze_742: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_247, [0, 2, 3]);  rsqrt_247 = None
    mul_1826: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_741, 0.1)
    mul_1827: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1723, 0.9)
    add_1469: "f32[18]" = torch.ops.aten.add.Tensor(mul_1826, mul_1827);  mul_1826 = mul_1827 = None
    squeeze_743: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_494, [0, 2, 3]);  getitem_494 = None
    mul_1828: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_743, 1.0001594642002871);  squeeze_743 = None
    mul_1829: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1828, 0.1);  mul_1828 = None
    mul_1830: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1724, 0.9)
    add_1470: "f32[18]" = torch.ops.aten.add.Tensor(mul_1829, mul_1830);  mul_1829 = mul_1830 = None
    unsqueeze_1012: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_743, -1)
    unsqueeze_1013: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1012, -1);  unsqueeze_1012 = None
    mul_1831: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1825, unsqueeze_1013);  mul_1825 = unsqueeze_1013 = None
    unsqueeze_1014: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_744, -1);  primals_744 = None
    unsqueeze_1015: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1014, -1);  unsqueeze_1014 = None
    add_1471: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1831, unsqueeze_1015);  mul_1831 = unsqueeze_1015 = None
    relu_222: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1471);  add_1471 = None
    alias_222: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_222)
    convolution_248: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_222, primals_745, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1472: "i64[]" = torch.ops.aten.add.Tensor(primals_1728, 1)
    var_mean_248 = torch.ops.aten.var_mean.correction(convolution_248, [0, 2, 3], correction = 0, keepdim = True)
    getitem_496: "f32[1, 72, 1, 1]" = var_mean_248[0]
    getitem_497: "f32[1, 72, 1, 1]" = var_mean_248[1];  var_mean_248 = None
    add_1473: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_496, 1e-05)
    rsqrt_248: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1473);  add_1473 = None
    sub_248: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_248, getitem_497)
    mul_1832: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_248, rsqrt_248);  sub_248 = None
    squeeze_744: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_497, [0, 2, 3]);  getitem_497 = None
    squeeze_745: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_248, [0, 2, 3]);  rsqrt_248 = None
    mul_1833: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_744, 0.1)
    mul_1834: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1726, 0.9)
    add_1474: "f32[72]" = torch.ops.aten.add.Tensor(mul_1833, mul_1834);  mul_1833 = mul_1834 = None
    squeeze_746: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_496, [0, 2, 3]);  getitem_496 = None
    mul_1835: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_746, 1.0006381620931717);  squeeze_746 = None
    mul_1836: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1835, 0.1);  mul_1835 = None
    mul_1837: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1727, 0.9)
    add_1475: "f32[72]" = torch.ops.aten.add.Tensor(mul_1836, mul_1837);  mul_1836 = mul_1837 = None
    unsqueeze_1016: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_746, -1)
    unsqueeze_1017: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1016, -1);  unsqueeze_1016 = None
    mul_1838: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1832, unsqueeze_1017);  mul_1832 = unsqueeze_1017 = None
    unsqueeze_1018: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_747, -1);  primals_747 = None
    unsqueeze_1019: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1018, -1);  unsqueeze_1018 = None
    add_1476: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1838, unsqueeze_1019);  mul_1838 = unsqueeze_1019 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_249: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_203, primals_748, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1477: "i64[]" = torch.ops.aten.add.Tensor(primals_1731, 1)
    var_mean_249 = torch.ops.aten.var_mean.correction(convolution_249, [0, 2, 3], correction = 0, keepdim = True)
    getitem_498: "f32[1, 72, 1, 1]" = var_mean_249[0]
    getitem_499: "f32[1, 72, 1, 1]" = var_mean_249[1];  var_mean_249 = None
    add_1478: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_498, 1e-05)
    rsqrt_249: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1478);  add_1478 = None
    sub_249: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_249, getitem_499)
    mul_1839: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_249, rsqrt_249);  sub_249 = None
    squeeze_747: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_499, [0, 2, 3]);  getitem_499 = None
    squeeze_748: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_249, [0, 2, 3]);  rsqrt_249 = None
    mul_1840: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_747, 0.1)
    mul_1841: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1729, 0.9)
    add_1479: "f32[72]" = torch.ops.aten.add.Tensor(mul_1840, mul_1841);  mul_1840 = mul_1841 = None
    squeeze_749: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_498, [0, 2, 3]);  getitem_498 = None
    mul_1842: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_749, 1.0006381620931717);  squeeze_749 = None
    mul_1843: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1842, 0.1);  mul_1842 = None
    mul_1844: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1730, 0.9)
    add_1480: "f32[72]" = torch.ops.aten.add.Tensor(mul_1843, mul_1844);  mul_1843 = mul_1844 = None
    unsqueeze_1020: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_749, -1)
    unsqueeze_1021: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1020, -1);  unsqueeze_1020 = None
    mul_1845: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1839, unsqueeze_1021);  mul_1839 = unsqueeze_1021 = None
    unsqueeze_1022: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_750, -1);  primals_750 = None
    unsqueeze_1023: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1022, -1);  unsqueeze_1022 = None
    add_1481: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_1845, unsqueeze_1023);  mul_1845 = unsqueeze_1023 = None
    add_1482: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1476, add_1481);  add_1476 = add_1481 = None
    add_1483: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1482, relu_211);  add_1482 = None
    convolution_250: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_219, primals_751, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1484: "i64[]" = torch.ops.aten.add.Tensor(primals_1734, 1)
    var_mean_250 = torch.ops.aten.var_mean.correction(convolution_250, [0, 2, 3], correction = 0, keepdim = True)
    getitem_500: "f32[1, 72, 1, 1]" = var_mean_250[0]
    getitem_501: "f32[1, 72, 1, 1]" = var_mean_250[1];  var_mean_250 = None
    add_1485: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_500, 1e-05)
    rsqrt_250: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1485);  add_1485 = None
    sub_250: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_250, getitem_501)
    mul_1846: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_250, rsqrt_250);  sub_250 = None
    squeeze_750: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_501, [0, 2, 3]);  getitem_501 = None
    squeeze_751: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_250, [0, 2, 3]);  rsqrt_250 = None
    mul_1847: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_750, 0.1)
    mul_1848: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1732, 0.9)
    add_1486: "f32[72]" = torch.ops.aten.add.Tensor(mul_1847, mul_1848);  mul_1847 = mul_1848 = None
    squeeze_752: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_500, [0, 2, 3]);  getitem_500 = None
    mul_1849: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_752, 1.0025575447570332);  squeeze_752 = None
    mul_1850: "f32[72]" = torch.ops.aten.mul.Tensor(mul_1849, 0.1);  mul_1849 = None
    mul_1851: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1733, 0.9)
    add_1487: "f32[72]" = torch.ops.aten.add.Tensor(mul_1850, mul_1851);  mul_1850 = mul_1851 = None
    unsqueeze_1024: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_752, -1)
    unsqueeze_1025: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1024, -1);  unsqueeze_1024 = None
    mul_1852: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1846, unsqueeze_1025);  mul_1846 = unsqueeze_1025 = None
    unsqueeze_1026: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_753, -1);  primals_753 = None
    unsqueeze_1027: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1026, -1);  unsqueeze_1026 = None
    add_1488: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_1852, unsqueeze_1027);  mul_1852 = unsqueeze_1027 = None
    iota_48: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_96: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_48, torch.float32);  iota_48 = None
    mul_1853: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_96, 1);  convert_element_type_96 = None
    add_1489: "f32[14]" = torch.ops.aten.add.Tensor(mul_1853, 0);  mul_1853 = None
    add_1490: "f32[14]" = torch.ops.aten.add.Tensor(add_1489, 0.0);  add_1489 = None
    mul_1854: "f32[14]" = torch.ops.aten.mul.Tensor(add_1490, 0.5);  add_1490 = None
    convert_element_type_97: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1854, torch.int64);  mul_1854 = None
    unsqueeze_1028: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_97, -1);  convert_element_type_97 = None
    iota_49: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_98: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_49, torch.float32);  iota_49 = None
    mul_1855: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_98, 1);  convert_element_type_98 = None
    add_1491: "f32[14]" = torch.ops.aten.add.Tensor(mul_1855, 0);  mul_1855 = None
    add_1492: "f32[14]" = torch.ops.aten.add.Tensor(add_1491, 0.0);  add_1491 = None
    mul_1856: "f32[14]" = torch.ops.aten.mul.Tensor(add_1492, 0.5);  add_1492 = None
    convert_element_type_99: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_1856, torch.int64);  mul_1856 = None
    _unsafe_index_24: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_1488, [None, None, unsqueeze_1028, convert_element_type_99]);  add_1488 = None
    add_1493: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1483, _unsafe_index_24);  add_1483 = _unsafe_index_24 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_223: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1493);  add_1493 = None
    alias_223: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_223)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_251: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_195, primals_754, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1494: "i64[]" = torch.ops.aten.add.Tensor(primals_1737, 1)
    var_mean_251 = torch.ops.aten.var_mean.correction(convolution_251, [0, 2, 3], correction = 0, keepdim = True)
    getitem_502: "f32[1, 18, 1, 1]" = var_mean_251[0]
    getitem_503: "f32[1, 18, 1, 1]" = var_mean_251[1];  var_mean_251 = None
    add_1495: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_502, 1e-05)
    rsqrt_251: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1495);  add_1495 = None
    sub_251: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_251, getitem_503)
    mul_1857: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_251, rsqrt_251);  sub_251 = None
    squeeze_753: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_503, [0, 2, 3]);  getitem_503 = None
    squeeze_754: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_251, [0, 2, 3]);  rsqrt_251 = None
    mul_1858: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_753, 0.1)
    mul_1859: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1735, 0.9)
    add_1496: "f32[18]" = torch.ops.aten.add.Tensor(mul_1858, mul_1859);  mul_1858 = mul_1859 = None
    squeeze_755: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_502, [0, 2, 3]);  getitem_502 = None
    mul_1860: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_755, 1.0001594642002871);  squeeze_755 = None
    mul_1861: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1860, 0.1);  mul_1860 = None
    mul_1862: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1736, 0.9)
    add_1497: "f32[18]" = torch.ops.aten.add.Tensor(mul_1861, mul_1862);  mul_1861 = mul_1862 = None
    unsqueeze_1029: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_755, -1)
    unsqueeze_1030: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1029, -1);  unsqueeze_1029 = None
    mul_1863: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1857, unsqueeze_1030);  mul_1857 = unsqueeze_1030 = None
    unsqueeze_1031: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_756, -1);  primals_756 = None
    unsqueeze_1032: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1031, -1);  unsqueeze_1031 = None
    add_1498: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_1863, unsqueeze_1032);  mul_1863 = unsqueeze_1032 = None
    relu_224: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1498);  add_1498 = None
    alias_224: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_224)
    convolution_252: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_224, primals_757, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1499: "i64[]" = torch.ops.aten.add.Tensor(primals_1740, 1)
    var_mean_252 = torch.ops.aten.var_mean.correction(convolution_252, [0, 2, 3], correction = 0, keepdim = True)
    getitem_504: "f32[1, 18, 1, 1]" = var_mean_252[0]
    getitem_505: "f32[1, 18, 1, 1]" = var_mean_252[1];  var_mean_252 = None
    add_1500: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_504, 1e-05)
    rsqrt_252: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1500);  add_1500 = None
    sub_252: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_252, getitem_505)
    mul_1864: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_252, rsqrt_252);  sub_252 = None
    squeeze_756: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_505, [0, 2, 3]);  getitem_505 = None
    squeeze_757: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_252, [0, 2, 3]);  rsqrt_252 = None
    mul_1865: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_756, 0.1)
    mul_1866: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1738, 0.9)
    add_1501: "f32[18]" = torch.ops.aten.add.Tensor(mul_1865, mul_1866);  mul_1865 = mul_1866 = None
    squeeze_758: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_504, [0, 2, 3]);  getitem_504 = None
    mul_1867: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_758, 1.0006381620931717);  squeeze_758 = None
    mul_1868: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1867, 0.1);  mul_1867 = None
    mul_1869: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1739, 0.9)
    add_1502: "f32[18]" = torch.ops.aten.add.Tensor(mul_1868, mul_1869);  mul_1868 = mul_1869 = None
    unsqueeze_1033: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_758, -1)
    unsqueeze_1034: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1033, -1);  unsqueeze_1033 = None
    mul_1870: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1864, unsqueeze_1034);  mul_1864 = unsqueeze_1034 = None
    unsqueeze_1035: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_759, -1);  primals_759 = None
    unsqueeze_1036: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1035, -1);  unsqueeze_1035 = None
    add_1503: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_1870, unsqueeze_1036);  mul_1870 = unsqueeze_1036 = None
    relu_225: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_1503);  add_1503 = None
    alias_225: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(relu_225)
    convolution_253: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_225, primals_760, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1504: "i64[]" = torch.ops.aten.add.Tensor(primals_1743, 1)
    var_mean_253 = torch.ops.aten.var_mean.correction(convolution_253, [0, 2, 3], correction = 0, keepdim = True)
    getitem_506: "f32[1, 144, 1, 1]" = var_mean_253[0]
    getitem_507: "f32[1, 144, 1, 1]" = var_mean_253[1];  var_mean_253 = None
    add_1505: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_506, 1e-05)
    rsqrt_253: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1505);  add_1505 = None
    sub_253: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_253, getitem_507)
    mul_1871: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_253, rsqrt_253);  sub_253 = None
    squeeze_759: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_507, [0, 2, 3]);  getitem_507 = None
    squeeze_760: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_253, [0, 2, 3]);  rsqrt_253 = None
    mul_1872: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_759, 0.1)
    mul_1873: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1741, 0.9)
    add_1506: "f32[144]" = torch.ops.aten.add.Tensor(mul_1872, mul_1873);  mul_1872 = mul_1873 = None
    squeeze_761: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_506, [0, 2, 3]);  getitem_506 = None
    mul_1874: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_761, 1.0025575447570332);  squeeze_761 = None
    mul_1875: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1874, 0.1);  mul_1874 = None
    mul_1876: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1742, 0.9)
    add_1507: "f32[144]" = torch.ops.aten.add.Tensor(mul_1875, mul_1876);  mul_1875 = mul_1876 = None
    unsqueeze_1037: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_761, -1)
    unsqueeze_1038: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1037, -1);  unsqueeze_1037 = None
    mul_1877: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1871, unsqueeze_1038);  mul_1871 = unsqueeze_1038 = None
    unsqueeze_1039: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_762, -1);  primals_762 = None
    unsqueeze_1040: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1039, -1);  unsqueeze_1039 = None
    add_1508: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1877, unsqueeze_1040);  mul_1877 = unsqueeze_1040 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_254: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_203, primals_763, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1509: "i64[]" = torch.ops.aten.add.Tensor(primals_1746, 1)
    var_mean_254 = torch.ops.aten.var_mean.correction(convolution_254, [0, 2, 3], correction = 0, keepdim = True)
    getitem_508: "f32[1, 36, 1, 1]" = var_mean_254[0]
    getitem_509: "f32[1, 36, 1, 1]" = var_mean_254[1];  var_mean_254 = None
    add_1510: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_508, 1e-05)
    rsqrt_254: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1510);  add_1510 = None
    sub_254: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_254, getitem_509)
    mul_1878: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_254, rsqrt_254);  sub_254 = None
    squeeze_762: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_509, [0, 2, 3]);  getitem_509 = None
    squeeze_763: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_254, [0, 2, 3]);  rsqrt_254 = None
    mul_1879: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_762, 0.1)
    mul_1880: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1744, 0.9)
    add_1511: "f32[36]" = torch.ops.aten.add.Tensor(mul_1879, mul_1880);  mul_1879 = mul_1880 = None
    squeeze_764: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_508, [0, 2, 3]);  getitem_508 = None
    mul_1881: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_764, 1.0006381620931717);  squeeze_764 = None
    mul_1882: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1881, 0.1);  mul_1881 = None
    mul_1883: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1745, 0.9)
    add_1512: "f32[36]" = torch.ops.aten.add.Tensor(mul_1882, mul_1883);  mul_1882 = mul_1883 = None
    unsqueeze_1041: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_764, -1)
    unsqueeze_1042: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1041, -1);  unsqueeze_1041 = None
    mul_1884: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_1878, unsqueeze_1042);  mul_1878 = unsqueeze_1042 = None
    unsqueeze_1043: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_765, -1);  primals_765 = None
    unsqueeze_1044: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1043, -1);  unsqueeze_1043 = None
    add_1513: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_1884, unsqueeze_1044);  mul_1884 = unsqueeze_1044 = None
    relu_226: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_1513);  add_1513 = None
    alias_226: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(relu_226)
    convolution_255: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_226, primals_766, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1514: "i64[]" = torch.ops.aten.add.Tensor(primals_1749, 1)
    var_mean_255 = torch.ops.aten.var_mean.correction(convolution_255, [0, 2, 3], correction = 0, keepdim = True)
    getitem_510: "f32[1, 144, 1, 1]" = var_mean_255[0]
    getitem_511: "f32[1, 144, 1, 1]" = var_mean_255[1];  var_mean_255 = None
    add_1515: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_510, 1e-05)
    rsqrt_255: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1515);  add_1515 = None
    sub_255: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_255, getitem_511)
    mul_1885: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_255, rsqrt_255);  sub_255 = None
    squeeze_765: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_511, [0, 2, 3]);  getitem_511 = None
    squeeze_766: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_255, [0, 2, 3]);  rsqrt_255 = None
    mul_1886: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_765, 0.1)
    mul_1887: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1747, 0.9)
    add_1516: "f32[144]" = torch.ops.aten.add.Tensor(mul_1886, mul_1887);  mul_1886 = mul_1887 = None
    squeeze_767: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_510, [0, 2, 3]);  getitem_510 = None
    mul_1888: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_767, 1.0025575447570332);  squeeze_767 = None
    mul_1889: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1888, 0.1);  mul_1888 = None
    mul_1890: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1748, 0.9)
    add_1517: "f32[144]" = torch.ops.aten.add.Tensor(mul_1889, mul_1890);  mul_1889 = mul_1890 = None
    unsqueeze_1045: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_767, -1)
    unsqueeze_1046: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1045, -1);  unsqueeze_1045 = None
    mul_1891: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1885, unsqueeze_1046);  mul_1885 = unsqueeze_1046 = None
    unsqueeze_1047: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_768, -1);  primals_768 = None
    unsqueeze_1048: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1047, -1);  unsqueeze_1047 = None
    add_1518: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1891, unsqueeze_1048);  mul_1891 = unsqueeze_1048 = None
    add_1519: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1508, add_1518);  add_1508 = add_1518 = None
    convolution_256: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_211, primals_769, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1520: "i64[]" = torch.ops.aten.add.Tensor(primals_1752, 1)
    var_mean_256 = torch.ops.aten.var_mean.correction(convolution_256, [0, 2, 3], correction = 0, keepdim = True)
    getitem_512: "f32[1, 144, 1, 1]" = var_mean_256[0]
    getitem_513: "f32[1, 144, 1, 1]" = var_mean_256[1];  var_mean_256 = None
    add_1521: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_512, 1e-05)
    rsqrt_256: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1521);  add_1521 = None
    sub_256: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_256, getitem_513)
    mul_1892: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_256, rsqrt_256);  sub_256 = None
    squeeze_768: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_513, [0, 2, 3]);  getitem_513 = None
    squeeze_769: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_256, [0, 2, 3]);  rsqrt_256 = None
    mul_1893: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_768, 0.1)
    mul_1894: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1750, 0.9)
    add_1522: "f32[144]" = torch.ops.aten.add.Tensor(mul_1893, mul_1894);  mul_1893 = mul_1894 = None
    squeeze_770: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_512, [0, 2, 3]);  getitem_512 = None
    mul_1895: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_770, 1.0025575447570332);  squeeze_770 = None
    mul_1896: "f32[144]" = torch.ops.aten.mul.Tensor(mul_1895, 0.1);  mul_1895 = None
    mul_1897: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1751, 0.9)
    add_1523: "f32[144]" = torch.ops.aten.add.Tensor(mul_1896, mul_1897);  mul_1896 = mul_1897 = None
    unsqueeze_1049: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_770, -1)
    unsqueeze_1050: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1049, -1);  unsqueeze_1049 = None
    mul_1898: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_1892, unsqueeze_1050);  mul_1892 = unsqueeze_1050 = None
    unsqueeze_1051: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_771, -1);  primals_771 = None
    unsqueeze_1052: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1051, -1);  unsqueeze_1051 = None
    add_1524: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_1898, unsqueeze_1052);  mul_1898 = unsqueeze_1052 = None
    add_1525: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1519, add_1524);  add_1519 = add_1524 = None
    add_1526: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1525, relu_219);  add_1525 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_227: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1526);  add_1526 = None
    alias_227: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_227)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_257: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_220, primals_772, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1527: "i64[]" = torch.ops.aten.add.Tensor(primals_1755, 1)
    var_mean_257 = torch.ops.aten.var_mean.correction(convolution_257, [0, 2, 3], correction = 0, keepdim = True)
    getitem_514: "f32[1, 18, 1, 1]" = var_mean_257[0]
    getitem_515: "f32[1, 18, 1, 1]" = var_mean_257[1];  var_mean_257 = None
    add_1528: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_514, 1e-05)
    rsqrt_257: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1528);  add_1528 = None
    sub_257: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_257, getitem_515)
    mul_1899: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_257, rsqrt_257);  sub_257 = None
    squeeze_771: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_515, [0, 2, 3]);  getitem_515 = None
    squeeze_772: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_257, [0, 2, 3]);  rsqrt_257 = None
    mul_1900: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_771, 0.1)
    mul_1901: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1753, 0.9)
    add_1529: "f32[18]" = torch.ops.aten.add.Tensor(mul_1900, mul_1901);  mul_1900 = mul_1901 = None
    squeeze_773: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_514, [0, 2, 3]);  getitem_514 = None
    mul_1902: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_773, 1.0000398612827361);  squeeze_773 = None
    mul_1903: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1902, 0.1);  mul_1902 = None
    mul_1904: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1754, 0.9)
    add_1530: "f32[18]" = torch.ops.aten.add.Tensor(mul_1903, mul_1904);  mul_1903 = mul_1904 = None
    unsqueeze_1053: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_773, -1)
    unsqueeze_1054: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1053, -1);  unsqueeze_1053 = None
    mul_1905: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1899, unsqueeze_1054);  mul_1899 = unsqueeze_1054 = None
    unsqueeze_1055: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_774, -1);  primals_774 = None
    unsqueeze_1056: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1055, -1);  unsqueeze_1055 = None
    add_1531: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1905, unsqueeze_1056);  mul_1905 = unsqueeze_1056 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_228: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1531);  add_1531 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_258: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_228, primals_775, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1532: "i64[]" = torch.ops.aten.add.Tensor(primals_1758, 1)
    var_mean_258 = torch.ops.aten.var_mean.correction(convolution_258, [0, 2, 3], correction = 0, keepdim = True)
    getitem_516: "f32[1, 18, 1, 1]" = var_mean_258[0]
    getitem_517: "f32[1, 18, 1, 1]" = var_mean_258[1];  var_mean_258 = None
    add_1533: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_516, 1e-05)
    rsqrt_258: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1533);  add_1533 = None
    sub_258: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_258, getitem_517)
    mul_1906: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_258, rsqrt_258);  sub_258 = None
    squeeze_774: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_517, [0, 2, 3]);  getitem_517 = None
    squeeze_775: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_258, [0, 2, 3]);  rsqrt_258 = None
    mul_1907: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_774, 0.1)
    mul_1908: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1756, 0.9)
    add_1534: "f32[18]" = torch.ops.aten.add.Tensor(mul_1907, mul_1908);  mul_1907 = mul_1908 = None
    squeeze_776: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_516, [0, 2, 3]);  getitem_516 = None
    mul_1909: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_776, 1.0000398612827361);  squeeze_776 = None
    mul_1910: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1909, 0.1);  mul_1909 = None
    mul_1911: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1757, 0.9)
    add_1535: "f32[18]" = torch.ops.aten.add.Tensor(mul_1910, mul_1911);  mul_1910 = mul_1911 = None
    unsqueeze_1057: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_776, -1)
    unsqueeze_1058: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1057, -1);  unsqueeze_1057 = None
    mul_1912: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1906, unsqueeze_1058);  mul_1906 = unsqueeze_1058 = None
    unsqueeze_1059: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_777, -1);  primals_777 = None
    unsqueeze_1060: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1059, -1);  unsqueeze_1059 = None
    add_1536: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1912, unsqueeze_1060);  mul_1912 = unsqueeze_1060 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1537: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1536, relu_220);  add_1536 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_229: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1537);  add_1537 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_259: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_229, primals_778, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1538: "i64[]" = torch.ops.aten.add.Tensor(primals_1761, 1)
    var_mean_259 = torch.ops.aten.var_mean.correction(convolution_259, [0, 2, 3], correction = 0, keepdim = True)
    getitem_518: "f32[1, 18, 1, 1]" = var_mean_259[0]
    getitem_519: "f32[1, 18, 1, 1]" = var_mean_259[1];  var_mean_259 = None
    add_1539: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_518, 1e-05)
    rsqrt_259: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1539);  add_1539 = None
    sub_259: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_259, getitem_519)
    mul_1913: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_259, rsqrt_259);  sub_259 = None
    squeeze_777: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_519, [0, 2, 3]);  getitem_519 = None
    squeeze_778: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_259, [0, 2, 3]);  rsqrt_259 = None
    mul_1914: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_777, 0.1)
    mul_1915: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1759, 0.9)
    add_1540: "f32[18]" = torch.ops.aten.add.Tensor(mul_1914, mul_1915);  mul_1914 = mul_1915 = None
    squeeze_779: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_518, [0, 2, 3]);  getitem_518 = None
    mul_1916: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_779, 1.0000398612827361);  squeeze_779 = None
    mul_1917: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1916, 0.1);  mul_1916 = None
    mul_1918: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1760, 0.9)
    add_1541: "f32[18]" = torch.ops.aten.add.Tensor(mul_1917, mul_1918);  mul_1917 = mul_1918 = None
    unsqueeze_1061: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_779, -1)
    unsqueeze_1062: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1061, -1);  unsqueeze_1061 = None
    mul_1919: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1913, unsqueeze_1062);  mul_1913 = unsqueeze_1062 = None
    unsqueeze_1063: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_780, -1);  primals_780 = None
    unsqueeze_1064: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1063, -1);  unsqueeze_1063 = None
    add_1542: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1919, unsqueeze_1064);  mul_1919 = unsqueeze_1064 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_230: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1542);  add_1542 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_260: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_230, primals_781, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1543: "i64[]" = torch.ops.aten.add.Tensor(primals_1764, 1)
    var_mean_260 = torch.ops.aten.var_mean.correction(convolution_260, [0, 2, 3], correction = 0, keepdim = True)
    getitem_520: "f32[1, 18, 1, 1]" = var_mean_260[0]
    getitem_521: "f32[1, 18, 1, 1]" = var_mean_260[1];  var_mean_260 = None
    add_1544: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_520, 1e-05)
    rsqrt_260: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1544);  add_1544 = None
    sub_260: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_260, getitem_521)
    mul_1920: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_260, rsqrt_260);  sub_260 = None
    squeeze_780: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_521, [0, 2, 3]);  getitem_521 = None
    squeeze_781: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_260, [0, 2, 3]);  rsqrt_260 = None
    mul_1921: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_780, 0.1)
    mul_1922: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1762, 0.9)
    add_1545: "f32[18]" = torch.ops.aten.add.Tensor(mul_1921, mul_1922);  mul_1921 = mul_1922 = None
    squeeze_782: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_520, [0, 2, 3]);  getitem_520 = None
    mul_1923: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_782, 1.0000398612827361);  squeeze_782 = None
    mul_1924: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1923, 0.1);  mul_1923 = None
    mul_1925: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1763, 0.9)
    add_1546: "f32[18]" = torch.ops.aten.add.Tensor(mul_1924, mul_1925);  mul_1924 = mul_1925 = None
    unsqueeze_1065: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_782, -1)
    unsqueeze_1066: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1065, -1);  unsqueeze_1065 = None
    mul_1926: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1920, unsqueeze_1066);  mul_1920 = unsqueeze_1066 = None
    unsqueeze_1067: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_783, -1);  primals_783 = None
    unsqueeze_1068: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1067, -1);  unsqueeze_1067 = None
    add_1547: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1926, unsqueeze_1068);  mul_1926 = unsqueeze_1068 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1548: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1547, relu_229);  add_1547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_231: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1548);  add_1548 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_261: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_231, primals_784, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1549: "i64[]" = torch.ops.aten.add.Tensor(primals_1767, 1)
    var_mean_261 = torch.ops.aten.var_mean.correction(convolution_261, [0, 2, 3], correction = 0, keepdim = True)
    getitem_522: "f32[1, 18, 1, 1]" = var_mean_261[0]
    getitem_523: "f32[1, 18, 1, 1]" = var_mean_261[1];  var_mean_261 = None
    add_1550: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_522, 1e-05)
    rsqrt_261: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1550);  add_1550 = None
    sub_261: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_261, getitem_523)
    mul_1927: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_261, rsqrt_261);  sub_261 = None
    squeeze_783: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_523, [0, 2, 3]);  getitem_523 = None
    squeeze_784: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_261, [0, 2, 3]);  rsqrt_261 = None
    mul_1928: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_783, 0.1)
    mul_1929: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1765, 0.9)
    add_1551: "f32[18]" = torch.ops.aten.add.Tensor(mul_1928, mul_1929);  mul_1928 = mul_1929 = None
    squeeze_785: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_522, [0, 2, 3]);  getitem_522 = None
    mul_1930: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_785, 1.0000398612827361);  squeeze_785 = None
    mul_1931: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1930, 0.1);  mul_1930 = None
    mul_1932: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1766, 0.9)
    add_1552: "f32[18]" = torch.ops.aten.add.Tensor(mul_1931, mul_1932);  mul_1931 = mul_1932 = None
    unsqueeze_1069: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_785, -1)
    unsqueeze_1070: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1069, -1);  unsqueeze_1069 = None
    mul_1933: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1927, unsqueeze_1070);  mul_1927 = unsqueeze_1070 = None
    unsqueeze_1071: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_786, -1);  primals_786 = None
    unsqueeze_1072: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1071, -1);  unsqueeze_1071 = None
    add_1553: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1933, unsqueeze_1072);  mul_1933 = unsqueeze_1072 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_232: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1553);  add_1553 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_262: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_232, primals_787, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1554: "i64[]" = torch.ops.aten.add.Tensor(primals_1770, 1)
    var_mean_262 = torch.ops.aten.var_mean.correction(convolution_262, [0, 2, 3], correction = 0, keepdim = True)
    getitem_524: "f32[1, 18, 1, 1]" = var_mean_262[0]
    getitem_525: "f32[1, 18, 1, 1]" = var_mean_262[1];  var_mean_262 = None
    add_1555: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_524, 1e-05)
    rsqrt_262: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1555);  add_1555 = None
    sub_262: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_262, getitem_525)
    mul_1934: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_262, rsqrt_262);  sub_262 = None
    squeeze_786: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_525, [0, 2, 3]);  getitem_525 = None
    squeeze_787: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_262, [0, 2, 3]);  rsqrt_262 = None
    mul_1935: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_786, 0.1)
    mul_1936: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1768, 0.9)
    add_1556: "f32[18]" = torch.ops.aten.add.Tensor(mul_1935, mul_1936);  mul_1935 = mul_1936 = None
    squeeze_788: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_524, [0, 2, 3]);  getitem_524 = None
    mul_1937: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_788, 1.0000398612827361);  squeeze_788 = None
    mul_1938: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1937, 0.1);  mul_1937 = None
    mul_1939: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1769, 0.9)
    add_1557: "f32[18]" = torch.ops.aten.add.Tensor(mul_1938, mul_1939);  mul_1938 = mul_1939 = None
    unsqueeze_1073: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_788, -1)
    unsqueeze_1074: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1073, -1);  unsqueeze_1073 = None
    mul_1940: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1934, unsqueeze_1074);  mul_1934 = unsqueeze_1074 = None
    unsqueeze_1075: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_789, -1);  primals_789 = None
    unsqueeze_1076: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1075, -1);  unsqueeze_1075 = None
    add_1558: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1940, unsqueeze_1076);  mul_1940 = unsqueeze_1076 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1559: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1558, relu_231);  add_1558 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_233: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1559);  add_1559 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_263: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_233, primals_790, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1560: "i64[]" = torch.ops.aten.add.Tensor(primals_1773, 1)
    var_mean_263 = torch.ops.aten.var_mean.correction(convolution_263, [0, 2, 3], correction = 0, keepdim = True)
    getitem_526: "f32[1, 18, 1, 1]" = var_mean_263[0]
    getitem_527: "f32[1, 18, 1, 1]" = var_mean_263[1];  var_mean_263 = None
    add_1561: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_526, 1e-05)
    rsqrt_263: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1561);  add_1561 = None
    sub_263: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_263, getitem_527)
    mul_1941: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_263, rsqrt_263);  sub_263 = None
    squeeze_789: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_527, [0, 2, 3]);  getitem_527 = None
    squeeze_790: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_263, [0, 2, 3]);  rsqrt_263 = None
    mul_1942: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_789, 0.1)
    mul_1943: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1771, 0.9)
    add_1562: "f32[18]" = torch.ops.aten.add.Tensor(mul_1942, mul_1943);  mul_1942 = mul_1943 = None
    squeeze_791: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_526, [0, 2, 3]);  getitem_526 = None
    mul_1944: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_791, 1.0000398612827361);  squeeze_791 = None
    mul_1945: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1944, 0.1);  mul_1944 = None
    mul_1946: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1772, 0.9)
    add_1563: "f32[18]" = torch.ops.aten.add.Tensor(mul_1945, mul_1946);  mul_1945 = mul_1946 = None
    unsqueeze_1077: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_791, -1)
    unsqueeze_1078: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1077, -1);  unsqueeze_1077 = None
    mul_1947: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1941, unsqueeze_1078);  mul_1941 = unsqueeze_1078 = None
    unsqueeze_1079: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_792, -1);  primals_792 = None
    unsqueeze_1080: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1079, -1);  unsqueeze_1079 = None
    add_1564: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1947, unsqueeze_1080);  mul_1947 = unsqueeze_1080 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_234: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1564);  add_1564 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_264: "f32[8, 18, 56, 56]" = torch.ops.aten.convolution.default(relu_234, primals_793, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1565: "i64[]" = torch.ops.aten.add.Tensor(primals_1776, 1)
    var_mean_264 = torch.ops.aten.var_mean.correction(convolution_264, [0, 2, 3], correction = 0, keepdim = True)
    getitem_528: "f32[1, 18, 1, 1]" = var_mean_264[0]
    getitem_529: "f32[1, 18, 1, 1]" = var_mean_264[1];  var_mean_264 = None
    add_1566: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_528, 1e-05)
    rsqrt_264: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1566);  add_1566 = None
    sub_264: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_264, getitem_529)
    mul_1948: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_264, rsqrt_264);  sub_264 = None
    squeeze_792: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_529, [0, 2, 3]);  getitem_529 = None
    squeeze_793: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_264, [0, 2, 3]);  rsqrt_264 = None
    mul_1949: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_792, 0.1)
    mul_1950: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1774, 0.9)
    add_1567: "f32[18]" = torch.ops.aten.add.Tensor(mul_1949, mul_1950);  mul_1949 = mul_1950 = None
    squeeze_794: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_528, [0, 2, 3]);  getitem_528 = None
    mul_1951: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_794, 1.0000398612827361);  squeeze_794 = None
    mul_1952: "f32[18]" = torch.ops.aten.mul.Tensor(mul_1951, 0.1);  mul_1951 = None
    mul_1953: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1775, 0.9)
    add_1568: "f32[18]" = torch.ops.aten.add.Tensor(mul_1952, mul_1953);  mul_1952 = mul_1953 = None
    unsqueeze_1081: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_794, -1)
    unsqueeze_1082: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1081, -1);  unsqueeze_1081 = None
    mul_1954: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(mul_1948, unsqueeze_1082);  mul_1948 = unsqueeze_1082 = None
    unsqueeze_1083: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_795, -1);  primals_795 = None
    unsqueeze_1084: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1083, -1);  unsqueeze_1083 = None
    add_1569: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(mul_1954, unsqueeze_1084);  mul_1954 = unsqueeze_1084 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1570: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1569, relu_233);  add_1569 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_235: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1570);  add_1570 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_265: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_221, primals_796, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1571: "i64[]" = torch.ops.aten.add.Tensor(primals_1779, 1)
    var_mean_265 = torch.ops.aten.var_mean.correction(convolution_265, [0, 2, 3], correction = 0, keepdim = True)
    getitem_530: "f32[1, 36, 1, 1]" = var_mean_265[0]
    getitem_531: "f32[1, 36, 1, 1]" = var_mean_265[1];  var_mean_265 = None
    add_1572: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_530, 1e-05)
    rsqrt_265: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1572);  add_1572 = None
    sub_265: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_265, getitem_531)
    mul_1955: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_265, rsqrt_265);  sub_265 = None
    squeeze_795: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_531, [0, 2, 3]);  getitem_531 = None
    squeeze_796: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_265, [0, 2, 3]);  rsqrt_265 = None
    mul_1956: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_795, 0.1)
    mul_1957: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1777, 0.9)
    add_1573: "f32[36]" = torch.ops.aten.add.Tensor(mul_1956, mul_1957);  mul_1956 = mul_1957 = None
    squeeze_797: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_530, [0, 2, 3]);  getitem_530 = None
    mul_1958: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_797, 1.0001594642002871);  squeeze_797 = None
    mul_1959: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1958, 0.1);  mul_1958 = None
    mul_1960: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1778, 0.9)
    add_1574: "f32[36]" = torch.ops.aten.add.Tensor(mul_1959, mul_1960);  mul_1959 = mul_1960 = None
    unsqueeze_1085: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_797, -1)
    unsqueeze_1086: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1085, -1);  unsqueeze_1085 = None
    mul_1961: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1955, unsqueeze_1086);  mul_1955 = unsqueeze_1086 = None
    unsqueeze_1087: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_798, -1);  primals_798 = None
    unsqueeze_1088: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1087, -1);  unsqueeze_1087 = None
    add_1575: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1961, unsqueeze_1088);  mul_1961 = unsqueeze_1088 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_236: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1575);  add_1575 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_266: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_236, primals_799, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1576: "i64[]" = torch.ops.aten.add.Tensor(primals_1782, 1)
    var_mean_266 = torch.ops.aten.var_mean.correction(convolution_266, [0, 2, 3], correction = 0, keepdim = True)
    getitem_532: "f32[1, 36, 1, 1]" = var_mean_266[0]
    getitem_533: "f32[1, 36, 1, 1]" = var_mean_266[1];  var_mean_266 = None
    add_1577: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_532, 1e-05)
    rsqrt_266: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1577);  add_1577 = None
    sub_266: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_266, getitem_533)
    mul_1962: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_266, rsqrt_266);  sub_266 = None
    squeeze_798: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_533, [0, 2, 3]);  getitem_533 = None
    squeeze_799: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_266, [0, 2, 3]);  rsqrt_266 = None
    mul_1963: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_798, 0.1)
    mul_1964: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1780, 0.9)
    add_1578: "f32[36]" = torch.ops.aten.add.Tensor(mul_1963, mul_1964);  mul_1963 = mul_1964 = None
    squeeze_800: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_532, [0, 2, 3]);  getitem_532 = None
    mul_1965: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_800, 1.0001594642002871);  squeeze_800 = None
    mul_1966: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1965, 0.1);  mul_1965 = None
    mul_1967: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1781, 0.9)
    add_1579: "f32[36]" = torch.ops.aten.add.Tensor(mul_1966, mul_1967);  mul_1966 = mul_1967 = None
    unsqueeze_1089: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_800, -1)
    unsqueeze_1090: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1089, -1);  unsqueeze_1089 = None
    mul_1968: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1962, unsqueeze_1090);  mul_1962 = unsqueeze_1090 = None
    unsqueeze_1091: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_801, -1);  primals_801 = None
    unsqueeze_1092: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1091, -1);  unsqueeze_1091 = None
    add_1580: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1968, unsqueeze_1092);  mul_1968 = unsqueeze_1092 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1581: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1580, relu_221);  add_1580 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_237: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1581);  add_1581 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_267: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_237, primals_802, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1582: "i64[]" = torch.ops.aten.add.Tensor(primals_1785, 1)
    var_mean_267 = torch.ops.aten.var_mean.correction(convolution_267, [0, 2, 3], correction = 0, keepdim = True)
    getitem_534: "f32[1, 36, 1, 1]" = var_mean_267[0]
    getitem_535: "f32[1, 36, 1, 1]" = var_mean_267[1];  var_mean_267 = None
    add_1583: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_534, 1e-05)
    rsqrt_267: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1583);  add_1583 = None
    sub_267: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_267, getitem_535)
    mul_1969: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_267, rsqrt_267);  sub_267 = None
    squeeze_801: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_535, [0, 2, 3]);  getitem_535 = None
    squeeze_802: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_267, [0, 2, 3]);  rsqrt_267 = None
    mul_1970: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_801, 0.1)
    mul_1971: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1783, 0.9)
    add_1584: "f32[36]" = torch.ops.aten.add.Tensor(mul_1970, mul_1971);  mul_1970 = mul_1971 = None
    squeeze_803: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_534, [0, 2, 3]);  getitem_534 = None
    mul_1972: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_803, 1.0001594642002871);  squeeze_803 = None
    mul_1973: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1972, 0.1);  mul_1972 = None
    mul_1974: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1784, 0.9)
    add_1585: "f32[36]" = torch.ops.aten.add.Tensor(mul_1973, mul_1974);  mul_1973 = mul_1974 = None
    unsqueeze_1093: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_803, -1)
    unsqueeze_1094: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1093, -1);  unsqueeze_1093 = None
    mul_1975: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1969, unsqueeze_1094);  mul_1969 = unsqueeze_1094 = None
    unsqueeze_1095: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_804, -1);  primals_804 = None
    unsqueeze_1096: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1095, -1);  unsqueeze_1095 = None
    add_1586: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1975, unsqueeze_1096);  mul_1975 = unsqueeze_1096 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_238: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1586);  add_1586 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_268: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_238, primals_805, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1587: "i64[]" = torch.ops.aten.add.Tensor(primals_1788, 1)
    var_mean_268 = torch.ops.aten.var_mean.correction(convolution_268, [0, 2, 3], correction = 0, keepdim = True)
    getitem_536: "f32[1, 36, 1, 1]" = var_mean_268[0]
    getitem_537: "f32[1, 36, 1, 1]" = var_mean_268[1];  var_mean_268 = None
    add_1588: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_536, 1e-05)
    rsqrt_268: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1588);  add_1588 = None
    sub_268: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_268, getitem_537)
    mul_1976: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_268, rsqrt_268);  sub_268 = None
    squeeze_804: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_537, [0, 2, 3]);  getitem_537 = None
    squeeze_805: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_268, [0, 2, 3]);  rsqrt_268 = None
    mul_1977: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_804, 0.1)
    mul_1978: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1786, 0.9)
    add_1589: "f32[36]" = torch.ops.aten.add.Tensor(mul_1977, mul_1978);  mul_1977 = mul_1978 = None
    squeeze_806: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_536, [0, 2, 3]);  getitem_536 = None
    mul_1979: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_806, 1.0001594642002871);  squeeze_806 = None
    mul_1980: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1979, 0.1);  mul_1979 = None
    mul_1981: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1787, 0.9)
    add_1590: "f32[36]" = torch.ops.aten.add.Tensor(mul_1980, mul_1981);  mul_1980 = mul_1981 = None
    unsqueeze_1097: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_806, -1)
    unsqueeze_1098: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1097, -1);  unsqueeze_1097 = None
    mul_1982: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1976, unsqueeze_1098);  mul_1976 = unsqueeze_1098 = None
    unsqueeze_1099: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_807, -1);  primals_807 = None
    unsqueeze_1100: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1099, -1);  unsqueeze_1099 = None
    add_1591: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1982, unsqueeze_1100);  mul_1982 = unsqueeze_1100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1592: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1591, relu_237);  add_1591 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_239: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1592);  add_1592 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_269: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_239, primals_808, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1593: "i64[]" = torch.ops.aten.add.Tensor(primals_1791, 1)
    var_mean_269 = torch.ops.aten.var_mean.correction(convolution_269, [0, 2, 3], correction = 0, keepdim = True)
    getitem_538: "f32[1, 36, 1, 1]" = var_mean_269[0]
    getitem_539: "f32[1, 36, 1, 1]" = var_mean_269[1];  var_mean_269 = None
    add_1594: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_538, 1e-05)
    rsqrt_269: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1594);  add_1594 = None
    sub_269: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_269, getitem_539)
    mul_1983: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_269, rsqrt_269);  sub_269 = None
    squeeze_807: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_539, [0, 2, 3]);  getitem_539 = None
    squeeze_808: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_269, [0, 2, 3]);  rsqrt_269 = None
    mul_1984: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_807, 0.1)
    mul_1985: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1789, 0.9)
    add_1595: "f32[36]" = torch.ops.aten.add.Tensor(mul_1984, mul_1985);  mul_1984 = mul_1985 = None
    squeeze_809: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_538, [0, 2, 3]);  getitem_538 = None
    mul_1986: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_809, 1.0001594642002871);  squeeze_809 = None
    mul_1987: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1986, 0.1);  mul_1986 = None
    mul_1988: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1790, 0.9)
    add_1596: "f32[36]" = torch.ops.aten.add.Tensor(mul_1987, mul_1988);  mul_1987 = mul_1988 = None
    unsqueeze_1101: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_809, -1)
    unsqueeze_1102: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1101, -1);  unsqueeze_1101 = None
    mul_1989: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1983, unsqueeze_1102);  mul_1983 = unsqueeze_1102 = None
    unsqueeze_1103: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_810, -1);  primals_810 = None
    unsqueeze_1104: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1103, -1);  unsqueeze_1103 = None
    add_1597: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1989, unsqueeze_1104);  mul_1989 = unsqueeze_1104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_240: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1597);  add_1597 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_270: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_240, primals_811, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1598: "i64[]" = torch.ops.aten.add.Tensor(primals_1794, 1)
    var_mean_270 = torch.ops.aten.var_mean.correction(convolution_270, [0, 2, 3], correction = 0, keepdim = True)
    getitem_540: "f32[1, 36, 1, 1]" = var_mean_270[0]
    getitem_541: "f32[1, 36, 1, 1]" = var_mean_270[1];  var_mean_270 = None
    add_1599: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_540, 1e-05)
    rsqrt_270: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1599);  add_1599 = None
    sub_270: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_270, getitem_541)
    mul_1990: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_270, rsqrt_270);  sub_270 = None
    squeeze_810: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_541, [0, 2, 3]);  getitem_541 = None
    squeeze_811: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_270, [0, 2, 3]);  rsqrt_270 = None
    mul_1991: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_810, 0.1)
    mul_1992: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1792, 0.9)
    add_1600: "f32[36]" = torch.ops.aten.add.Tensor(mul_1991, mul_1992);  mul_1991 = mul_1992 = None
    squeeze_812: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_540, [0, 2, 3]);  getitem_540 = None
    mul_1993: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_812, 1.0001594642002871);  squeeze_812 = None
    mul_1994: "f32[36]" = torch.ops.aten.mul.Tensor(mul_1993, 0.1);  mul_1993 = None
    mul_1995: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1793, 0.9)
    add_1601: "f32[36]" = torch.ops.aten.add.Tensor(mul_1994, mul_1995);  mul_1994 = mul_1995 = None
    unsqueeze_1105: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_812, -1)
    unsqueeze_1106: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1105, -1);  unsqueeze_1105 = None
    mul_1996: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1990, unsqueeze_1106);  mul_1990 = unsqueeze_1106 = None
    unsqueeze_1107: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_813, -1);  primals_813 = None
    unsqueeze_1108: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1107, -1);  unsqueeze_1107 = None
    add_1602: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_1996, unsqueeze_1108);  mul_1996 = unsqueeze_1108 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1603: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1602, relu_239);  add_1602 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_241: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1603);  add_1603 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_271: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_241, primals_814, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1604: "i64[]" = torch.ops.aten.add.Tensor(primals_1797, 1)
    var_mean_271 = torch.ops.aten.var_mean.correction(convolution_271, [0, 2, 3], correction = 0, keepdim = True)
    getitem_542: "f32[1, 36, 1, 1]" = var_mean_271[0]
    getitem_543: "f32[1, 36, 1, 1]" = var_mean_271[1];  var_mean_271 = None
    add_1605: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_542, 1e-05)
    rsqrt_271: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1605);  add_1605 = None
    sub_271: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_271, getitem_543)
    mul_1997: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_271, rsqrt_271);  sub_271 = None
    squeeze_813: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_543, [0, 2, 3]);  getitem_543 = None
    squeeze_814: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_271, [0, 2, 3]);  rsqrt_271 = None
    mul_1998: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_813, 0.1)
    mul_1999: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1795, 0.9)
    add_1606: "f32[36]" = torch.ops.aten.add.Tensor(mul_1998, mul_1999);  mul_1998 = mul_1999 = None
    squeeze_815: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_542, [0, 2, 3]);  getitem_542 = None
    mul_2000: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_815, 1.0001594642002871);  squeeze_815 = None
    mul_2001: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2000, 0.1);  mul_2000 = None
    mul_2002: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1796, 0.9)
    add_1607: "f32[36]" = torch.ops.aten.add.Tensor(mul_2001, mul_2002);  mul_2001 = mul_2002 = None
    unsqueeze_1109: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_815, -1)
    unsqueeze_1110: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1109, -1);  unsqueeze_1109 = None
    mul_2003: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_1997, unsqueeze_1110);  mul_1997 = unsqueeze_1110 = None
    unsqueeze_1111: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_816, -1);  primals_816 = None
    unsqueeze_1112: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1111, -1);  unsqueeze_1111 = None
    add_1608: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_2003, unsqueeze_1112);  mul_2003 = unsqueeze_1112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_242: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1608);  add_1608 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_272: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_242, primals_817, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1609: "i64[]" = torch.ops.aten.add.Tensor(primals_1800, 1)
    var_mean_272 = torch.ops.aten.var_mean.correction(convolution_272, [0, 2, 3], correction = 0, keepdim = True)
    getitem_544: "f32[1, 36, 1, 1]" = var_mean_272[0]
    getitem_545: "f32[1, 36, 1, 1]" = var_mean_272[1];  var_mean_272 = None
    add_1610: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_544, 1e-05)
    rsqrt_272: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1610);  add_1610 = None
    sub_272: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_272, getitem_545)
    mul_2004: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_272, rsqrt_272);  sub_272 = None
    squeeze_816: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_545, [0, 2, 3]);  getitem_545 = None
    squeeze_817: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_272, [0, 2, 3]);  rsqrt_272 = None
    mul_2005: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_816, 0.1)
    mul_2006: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1798, 0.9)
    add_1611: "f32[36]" = torch.ops.aten.add.Tensor(mul_2005, mul_2006);  mul_2005 = mul_2006 = None
    squeeze_818: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_544, [0, 2, 3]);  getitem_544 = None
    mul_2007: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_818, 1.0001594642002871);  squeeze_818 = None
    mul_2008: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2007, 0.1);  mul_2007 = None
    mul_2009: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1799, 0.9)
    add_1612: "f32[36]" = torch.ops.aten.add.Tensor(mul_2008, mul_2009);  mul_2008 = mul_2009 = None
    unsqueeze_1113: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_818, -1)
    unsqueeze_1114: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1113, -1);  unsqueeze_1113 = None
    mul_2010: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2004, unsqueeze_1114);  mul_2004 = unsqueeze_1114 = None
    unsqueeze_1115: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_819, -1);  primals_819 = None
    unsqueeze_1116: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1115, -1);  unsqueeze_1115 = None
    add_1613: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_2010, unsqueeze_1116);  mul_2010 = unsqueeze_1116 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1614: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1613, relu_241);  add_1613 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_243: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1614);  add_1614 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_273: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_223, primals_820, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1615: "i64[]" = torch.ops.aten.add.Tensor(primals_1803, 1)
    var_mean_273 = torch.ops.aten.var_mean.correction(convolution_273, [0, 2, 3], correction = 0, keepdim = True)
    getitem_546: "f32[1, 72, 1, 1]" = var_mean_273[0]
    getitem_547: "f32[1, 72, 1, 1]" = var_mean_273[1];  var_mean_273 = None
    add_1616: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_546, 1e-05)
    rsqrt_273: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1616);  add_1616 = None
    sub_273: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_273, getitem_547)
    mul_2011: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_273, rsqrt_273);  sub_273 = None
    squeeze_819: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_547, [0, 2, 3]);  getitem_547 = None
    squeeze_820: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_273, [0, 2, 3]);  rsqrt_273 = None
    mul_2012: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_819, 0.1)
    mul_2013: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1801, 0.9)
    add_1617: "f32[72]" = torch.ops.aten.add.Tensor(mul_2012, mul_2013);  mul_2012 = mul_2013 = None
    squeeze_821: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_546, [0, 2, 3]);  getitem_546 = None
    mul_2014: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_821, 1.0006381620931717);  squeeze_821 = None
    mul_2015: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2014, 0.1);  mul_2014 = None
    mul_2016: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1802, 0.9)
    add_1618: "f32[72]" = torch.ops.aten.add.Tensor(mul_2015, mul_2016);  mul_2015 = mul_2016 = None
    unsqueeze_1117: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_821, -1)
    unsqueeze_1118: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1117, -1);  unsqueeze_1117 = None
    mul_2017: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2011, unsqueeze_1118);  mul_2011 = unsqueeze_1118 = None
    unsqueeze_1119: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_822, -1);  primals_822 = None
    unsqueeze_1120: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1119, -1);  unsqueeze_1119 = None
    add_1619: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2017, unsqueeze_1120);  mul_2017 = unsqueeze_1120 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_244: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1619);  add_1619 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_274: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_244, primals_823, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1620: "i64[]" = torch.ops.aten.add.Tensor(primals_1806, 1)
    var_mean_274 = torch.ops.aten.var_mean.correction(convolution_274, [0, 2, 3], correction = 0, keepdim = True)
    getitem_548: "f32[1, 72, 1, 1]" = var_mean_274[0]
    getitem_549: "f32[1, 72, 1, 1]" = var_mean_274[1];  var_mean_274 = None
    add_1621: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_548, 1e-05)
    rsqrt_274: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1621);  add_1621 = None
    sub_274: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_274, getitem_549)
    mul_2018: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_274, rsqrt_274);  sub_274 = None
    squeeze_822: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_549, [0, 2, 3]);  getitem_549 = None
    squeeze_823: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_274, [0, 2, 3]);  rsqrt_274 = None
    mul_2019: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_822, 0.1)
    mul_2020: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1804, 0.9)
    add_1622: "f32[72]" = torch.ops.aten.add.Tensor(mul_2019, mul_2020);  mul_2019 = mul_2020 = None
    squeeze_824: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_548, [0, 2, 3]);  getitem_548 = None
    mul_2021: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_824, 1.0006381620931717);  squeeze_824 = None
    mul_2022: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2021, 0.1);  mul_2021 = None
    mul_2023: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1805, 0.9)
    add_1623: "f32[72]" = torch.ops.aten.add.Tensor(mul_2022, mul_2023);  mul_2022 = mul_2023 = None
    unsqueeze_1121: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_824, -1)
    unsqueeze_1122: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1121, -1);  unsqueeze_1121 = None
    mul_2024: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2018, unsqueeze_1122);  mul_2018 = unsqueeze_1122 = None
    unsqueeze_1123: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_825, -1);  primals_825 = None
    unsqueeze_1124: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1123, -1);  unsqueeze_1123 = None
    add_1624: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2024, unsqueeze_1124);  mul_2024 = unsqueeze_1124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1625: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1624, relu_223);  add_1624 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_245: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1625);  add_1625 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_275: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_245, primals_826, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1626: "i64[]" = torch.ops.aten.add.Tensor(primals_1809, 1)
    var_mean_275 = torch.ops.aten.var_mean.correction(convolution_275, [0, 2, 3], correction = 0, keepdim = True)
    getitem_550: "f32[1, 72, 1, 1]" = var_mean_275[0]
    getitem_551: "f32[1, 72, 1, 1]" = var_mean_275[1];  var_mean_275 = None
    add_1627: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_550, 1e-05)
    rsqrt_275: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1627);  add_1627 = None
    sub_275: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_275, getitem_551)
    mul_2025: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_275, rsqrt_275);  sub_275 = None
    squeeze_825: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_551, [0, 2, 3]);  getitem_551 = None
    squeeze_826: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_275, [0, 2, 3]);  rsqrt_275 = None
    mul_2026: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_825, 0.1)
    mul_2027: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1807, 0.9)
    add_1628: "f32[72]" = torch.ops.aten.add.Tensor(mul_2026, mul_2027);  mul_2026 = mul_2027 = None
    squeeze_827: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_550, [0, 2, 3]);  getitem_550 = None
    mul_2028: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_827, 1.0006381620931717);  squeeze_827 = None
    mul_2029: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2028, 0.1);  mul_2028 = None
    mul_2030: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1808, 0.9)
    add_1629: "f32[72]" = torch.ops.aten.add.Tensor(mul_2029, mul_2030);  mul_2029 = mul_2030 = None
    unsqueeze_1125: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_827, -1)
    unsqueeze_1126: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1125, -1);  unsqueeze_1125 = None
    mul_2031: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2025, unsqueeze_1126);  mul_2025 = unsqueeze_1126 = None
    unsqueeze_1127: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_828, -1);  primals_828 = None
    unsqueeze_1128: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1127, -1);  unsqueeze_1127 = None
    add_1630: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2031, unsqueeze_1128);  mul_2031 = unsqueeze_1128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_246: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1630);  add_1630 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_276: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_246, primals_829, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1631: "i64[]" = torch.ops.aten.add.Tensor(primals_1812, 1)
    var_mean_276 = torch.ops.aten.var_mean.correction(convolution_276, [0, 2, 3], correction = 0, keepdim = True)
    getitem_552: "f32[1, 72, 1, 1]" = var_mean_276[0]
    getitem_553: "f32[1, 72, 1, 1]" = var_mean_276[1];  var_mean_276 = None
    add_1632: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_552, 1e-05)
    rsqrt_276: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1632);  add_1632 = None
    sub_276: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_276, getitem_553)
    mul_2032: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_276, rsqrt_276);  sub_276 = None
    squeeze_828: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_553, [0, 2, 3]);  getitem_553 = None
    squeeze_829: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_276, [0, 2, 3]);  rsqrt_276 = None
    mul_2033: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_828, 0.1)
    mul_2034: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1810, 0.9)
    add_1633: "f32[72]" = torch.ops.aten.add.Tensor(mul_2033, mul_2034);  mul_2033 = mul_2034 = None
    squeeze_830: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_552, [0, 2, 3]);  getitem_552 = None
    mul_2035: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_830, 1.0006381620931717);  squeeze_830 = None
    mul_2036: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2035, 0.1);  mul_2035 = None
    mul_2037: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1811, 0.9)
    add_1634: "f32[72]" = torch.ops.aten.add.Tensor(mul_2036, mul_2037);  mul_2036 = mul_2037 = None
    unsqueeze_1129: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_830, -1)
    unsqueeze_1130: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1129, -1);  unsqueeze_1129 = None
    mul_2038: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2032, unsqueeze_1130);  mul_2032 = unsqueeze_1130 = None
    unsqueeze_1131: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_831, -1);  primals_831 = None
    unsqueeze_1132: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1131, -1);  unsqueeze_1131 = None
    add_1635: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2038, unsqueeze_1132);  mul_2038 = unsqueeze_1132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1636: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1635, relu_245);  add_1635 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_247: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1636);  add_1636 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_277: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_247, primals_832, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1637: "i64[]" = torch.ops.aten.add.Tensor(primals_1815, 1)
    var_mean_277 = torch.ops.aten.var_mean.correction(convolution_277, [0, 2, 3], correction = 0, keepdim = True)
    getitem_554: "f32[1, 72, 1, 1]" = var_mean_277[0]
    getitem_555: "f32[1, 72, 1, 1]" = var_mean_277[1];  var_mean_277 = None
    add_1638: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_554, 1e-05)
    rsqrt_277: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1638);  add_1638 = None
    sub_277: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_277, getitem_555)
    mul_2039: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_277, rsqrt_277);  sub_277 = None
    squeeze_831: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_555, [0, 2, 3]);  getitem_555 = None
    squeeze_832: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_277, [0, 2, 3]);  rsqrt_277 = None
    mul_2040: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_831, 0.1)
    mul_2041: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1813, 0.9)
    add_1639: "f32[72]" = torch.ops.aten.add.Tensor(mul_2040, mul_2041);  mul_2040 = mul_2041 = None
    squeeze_833: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_554, [0, 2, 3]);  getitem_554 = None
    mul_2042: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_833, 1.0006381620931717);  squeeze_833 = None
    mul_2043: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2042, 0.1);  mul_2042 = None
    mul_2044: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1814, 0.9)
    add_1640: "f32[72]" = torch.ops.aten.add.Tensor(mul_2043, mul_2044);  mul_2043 = mul_2044 = None
    unsqueeze_1133: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_833, -1)
    unsqueeze_1134: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1133, -1);  unsqueeze_1133 = None
    mul_2045: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2039, unsqueeze_1134);  mul_2039 = unsqueeze_1134 = None
    unsqueeze_1135: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_834, -1);  primals_834 = None
    unsqueeze_1136: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1135, -1);  unsqueeze_1135 = None
    add_1641: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2045, unsqueeze_1136);  mul_2045 = unsqueeze_1136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_248: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1641);  add_1641 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_278: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_248, primals_835, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1642: "i64[]" = torch.ops.aten.add.Tensor(primals_1818, 1)
    var_mean_278 = torch.ops.aten.var_mean.correction(convolution_278, [0, 2, 3], correction = 0, keepdim = True)
    getitem_556: "f32[1, 72, 1, 1]" = var_mean_278[0]
    getitem_557: "f32[1, 72, 1, 1]" = var_mean_278[1];  var_mean_278 = None
    add_1643: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_556, 1e-05)
    rsqrt_278: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1643);  add_1643 = None
    sub_278: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_278, getitem_557)
    mul_2046: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_278, rsqrt_278);  sub_278 = None
    squeeze_834: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_557, [0, 2, 3]);  getitem_557 = None
    squeeze_835: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_278, [0, 2, 3]);  rsqrt_278 = None
    mul_2047: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_834, 0.1)
    mul_2048: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1816, 0.9)
    add_1644: "f32[72]" = torch.ops.aten.add.Tensor(mul_2047, mul_2048);  mul_2047 = mul_2048 = None
    squeeze_836: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_556, [0, 2, 3]);  getitem_556 = None
    mul_2049: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_836, 1.0006381620931717);  squeeze_836 = None
    mul_2050: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2049, 0.1);  mul_2049 = None
    mul_2051: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1817, 0.9)
    add_1645: "f32[72]" = torch.ops.aten.add.Tensor(mul_2050, mul_2051);  mul_2050 = mul_2051 = None
    unsqueeze_1137: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_836, -1)
    unsqueeze_1138: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1137, -1);  unsqueeze_1137 = None
    mul_2052: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2046, unsqueeze_1138);  mul_2046 = unsqueeze_1138 = None
    unsqueeze_1139: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_837, -1);  primals_837 = None
    unsqueeze_1140: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1139, -1);  unsqueeze_1139 = None
    add_1646: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2052, unsqueeze_1140);  mul_2052 = unsqueeze_1140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1647: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1646, relu_247);  add_1646 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_249: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1647);  add_1647 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_279: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_249, primals_838, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1648: "i64[]" = torch.ops.aten.add.Tensor(primals_1821, 1)
    var_mean_279 = torch.ops.aten.var_mean.correction(convolution_279, [0, 2, 3], correction = 0, keepdim = True)
    getitem_558: "f32[1, 72, 1, 1]" = var_mean_279[0]
    getitem_559: "f32[1, 72, 1, 1]" = var_mean_279[1];  var_mean_279 = None
    add_1649: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_558, 1e-05)
    rsqrt_279: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1649);  add_1649 = None
    sub_279: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_279, getitem_559)
    mul_2053: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_279, rsqrt_279);  sub_279 = None
    squeeze_837: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_559, [0, 2, 3]);  getitem_559 = None
    squeeze_838: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_279, [0, 2, 3]);  rsqrt_279 = None
    mul_2054: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_837, 0.1)
    mul_2055: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1819, 0.9)
    add_1650: "f32[72]" = torch.ops.aten.add.Tensor(mul_2054, mul_2055);  mul_2054 = mul_2055 = None
    squeeze_839: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_558, [0, 2, 3]);  getitem_558 = None
    mul_2056: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_839, 1.0006381620931717);  squeeze_839 = None
    mul_2057: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2056, 0.1);  mul_2056 = None
    mul_2058: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1820, 0.9)
    add_1651: "f32[72]" = torch.ops.aten.add.Tensor(mul_2057, mul_2058);  mul_2057 = mul_2058 = None
    unsqueeze_1141: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_839, -1)
    unsqueeze_1142: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1141, -1);  unsqueeze_1141 = None
    mul_2059: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2053, unsqueeze_1142);  mul_2053 = unsqueeze_1142 = None
    unsqueeze_1143: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_840, -1);  primals_840 = None
    unsqueeze_1144: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1143, -1);  unsqueeze_1143 = None
    add_1652: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2059, unsqueeze_1144);  mul_2059 = unsqueeze_1144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_250: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1652);  add_1652 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_280: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_250, primals_841, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1653: "i64[]" = torch.ops.aten.add.Tensor(primals_1824, 1)
    var_mean_280 = torch.ops.aten.var_mean.correction(convolution_280, [0, 2, 3], correction = 0, keepdim = True)
    getitem_560: "f32[1, 72, 1, 1]" = var_mean_280[0]
    getitem_561: "f32[1, 72, 1, 1]" = var_mean_280[1];  var_mean_280 = None
    add_1654: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_560, 1e-05)
    rsqrt_280: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1654);  add_1654 = None
    sub_280: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_280, getitem_561)
    mul_2060: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_280, rsqrt_280);  sub_280 = None
    squeeze_840: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_561, [0, 2, 3]);  getitem_561 = None
    squeeze_841: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_280, [0, 2, 3]);  rsqrt_280 = None
    mul_2061: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_840, 0.1)
    mul_2062: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1822, 0.9)
    add_1655: "f32[72]" = torch.ops.aten.add.Tensor(mul_2061, mul_2062);  mul_2061 = mul_2062 = None
    squeeze_842: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_560, [0, 2, 3]);  getitem_560 = None
    mul_2063: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_842, 1.0006381620931717);  squeeze_842 = None
    mul_2064: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2063, 0.1);  mul_2063 = None
    mul_2065: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1823, 0.9)
    add_1656: "f32[72]" = torch.ops.aten.add.Tensor(mul_2064, mul_2065);  mul_2064 = mul_2065 = None
    unsqueeze_1145: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_842, -1)
    unsqueeze_1146: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1145, -1);  unsqueeze_1145 = None
    mul_2066: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2060, unsqueeze_1146);  mul_2060 = unsqueeze_1146 = None
    unsqueeze_1147: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_843, -1);  primals_843 = None
    unsqueeze_1148: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1147, -1);  unsqueeze_1147 = None
    add_1657: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2066, unsqueeze_1148);  mul_2066 = unsqueeze_1148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1658: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1657, relu_249);  add_1657 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_251: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1658);  add_1658 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_281: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_227, primals_844, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1659: "i64[]" = torch.ops.aten.add.Tensor(primals_1827, 1)
    var_mean_281 = torch.ops.aten.var_mean.correction(convolution_281, [0, 2, 3], correction = 0, keepdim = True)
    getitem_562: "f32[1, 144, 1, 1]" = var_mean_281[0]
    getitem_563: "f32[1, 144, 1, 1]" = var_mean_281[1];  var_mean_281 = None
    add_1660: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_562, 1e-05)
    rsqrt_281: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1660);  add_1660 = None
    sub_281: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_281, getitem_563)
    mul_2067: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_281, rsqrt_281);  sub_281 = None
    squeeze_843: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_563, [0, 2, 3]);  getitem_563 = None
    squeeze_844: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_281, [0, 2, 3]);  rsqrt_281 = None
    mul_2068: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_843, 0.1)
    mul_2069: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1825, 0.9)
    add_1661: "f32[144]" = torch.ops.aten.add.Tensor(mul_2068, mul_2069);  mul_2068 = mul_2069 = None
    squeeze_845: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_562, [0, 2, 3]);  getitem_562 = None
    mul_2070: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_845, 1.0025575447570332);  squeeze_845 = None
    mul_2071: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2070, 0.1);  mul_2070 = None
    mul_2072: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1826, 0.9)
    add_1662: "f32[144]" = torch.ops.aten.add.Tensor(mul_2071, mul_2072);  mul_2071 = mul_2072 = None
    unsqueeze_1149: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_845, -1)
    unsqueeze_1150: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1149, -1);  unsqueeze_1149 = None
    mul_2073: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2067, unsqueeze_1150);  mul_2067 = unsqueeze_1150 = None
    unsqueeze_1151: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_846, -1);  primals_846 = None
    unsqueeze_1152: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1151, -1);  unsqueeze_1151 = None
    add_1663: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2073, unsqueeze_1152);  mul_2073 = unsqueeze_1152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_252: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1663);  add_1663 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_282: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_252, primals_847, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1664: "i64[]" = torch.ops.aten.add.Tensor(primals_1830, 1)
    var_mean_282 = torch.ops.aten.var_mean.correction(convolution_282, [0, 2, 3], correction = 0, keepdim = True)
    getitem_564: "f32[1, 144, 1, 1]" = var_mean_282[0]
    getitem_565: "f32[1, 144, 1, 1]" = var_mean_282[1];  var_mean_282 = None
    add_1665: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_564, 1e-05)
    rsqrt_282: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1665);  add_1665 = None
    sub_282: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_282, getitem_565)
    mul_2074: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_282, rsqrt_282);  sub_282 = None
    squeeze_846: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_565, [0, 2, 3]);  getitem_565 = None
    squeeze_847: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_282, [0, 2, 3]);  rsqrt_282 = None
    mul_2075: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_846, 0.1)
    mul_2076: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1828, 0.9)
    add_1666: "f32[144]" = torch.ops.aten.add.Tensor(mul_2075, mul_2076);  mul_2075 = mul_2076 = None
    squeeze_848: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_564, [0, 2, 3]);  getitem_564 = None
    mul_2077: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_848, 1.0025575447570332);  squeeze_848 = None
    mul_2078: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2077, 0.1);  mul_2077 = None
    mul_2079: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1829, 0.9)
    add_1667: "f32[144]" = torch.ops.aten.add.Tensor(mul_2078, mul_2079);  mul_2078 = mul_2079 = None
    unsqueeze_1153: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_848, -1)
    unsqueeze_1154: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1153, -1);  unsqueeze_1153 = None
    mul_2080: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2074, unsqueeze_1154);  mul_2074 = unsqueeze_1154 = None
    unsqueeze_1155: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_849, -1);  primals_849 = None
    unsqueeze_1156: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1155, -1);  unsqueeze_1155 = None
    add_1668: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2080, unsqueeze_1156);  mul_2080 = unsqueeze_1156 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1669: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1668, relu_227);  add_1668 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_253: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1669);  add_1669 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_283: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_253, primals_850, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1670: "i64[]" = torch.ops.aten.add.Tensor(primals_1833, 1)
    var_mean_283 = torch.ops.aten.var_mean.correction(convolution_283, [0, 2, 3], correction = 0, keepdim = True)
    getitem_566: "f32[1, 144, 1, 1]" = var_mean_283[0]
    getitem_567: "f32[1, 144, 1, 1]" = var_mean_283[1];  var_mean_283 = None
    add_1671: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_566, 1e-05)
    rsqrt_283: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1671);  add_1671 = None
    sub_283: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_283, getitem_567)
    mul_2081: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_283, rsqrt_283);  sub_283 = None
    squeeze_849: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_567, [0, 2, 3]);  getitem_567 = None
    squeeze_850: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_283, [0, 2, 3]);  rsqrt_283 = None
    mul_2082: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_849, 0.1)
    mul_2083: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1831, 0.9)
    add_1672: "f32[144]" = torch.ops.aten.add.Tensor(mul_2082, mul_2083);  mul_2082 = mul_2083 = None
    squeeze_851: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_566, [0, 2, 3]);  getitem_566 = None
    mul_2084: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_851, 1.0025575447570332);  squeeze_851 = None
    mul_2085: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2084, 0.1);  mul_2084 = None
    mul_2086: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1832, 0.9)
    add_1673: "f32[144]" = torch.ops.aten.add.Tensor(mul_2085, mul_2086);  mul_2085 = mul_2086 = None
    unsqueeze_1157: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_851, -1)
    unsqueeze_1158: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1157, -1);  unsqueeze_1157 = None
    mul_2087: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2081, unsqueeze_1158);  mul_2081 = unsqueeze_1158 = None
    unsqueeze_1159: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_852, -1);  primals_852 = None
    unsqueeze_1160: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1159, -1);  unsqueeze_1159 = None
    add_1674: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2087, unsqueeze_1160);  mul_2087 = unsqueeze_1160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_254: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1674);  add_1674 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_284: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_254, primals_853, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1675: "i64[]" = torch.ops.aten.add.Tensor(primals_1836, 1)
    var_mean_284 = torch.ops.aten.var_mean.correction(convolution_284, [0, 2, 3], correction = 0, keepdim = True)
    getitem_568: "f32[1, 144, 1, 1]" = var_mean_284[0]
    getitem_569: "f32[1, 144, 1, 1]" = var_mean_284[1];  var_mean_284 = None
    add_1676: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_568, 1e-05)
    rsqrt_284: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1676);  add_1676 = None
    sub_284: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_284, getitem_569)
    mul_2088: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_284, rsqrt_284);  sub_284 = None
    squeeze_852: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_569, [0, 2, 3]);  getitem_569 = None
    squeeze_853: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_284, [0, 2, 3]);  rsqrt_284 = None
    mul_2089: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_852, 0.1)
    mul_2090: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1834, 0.9)
    add_1677: "f32[144]" = torch.ops.aten.add.Tensor(mul_2089, mul_2090);  mul_2089 = mul_2090 = None
    squeeze_854: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_568, [0, 2, 3]);  getitem_568 = None
    mul_2091: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_854, 1.0025575447570332);  squeeze_854 = None
    mul_2092: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2091, 0.1);  mul_2091 = None
    mul_2093: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1835, 0.9)
    add_1678: "f32[144]" = torch.ops.aten.add.Tensor(mul_2092, mul_2093);  mul_2092 = mul_2093 = None
    unsqueeze_1161: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_854, -1)
    unsqueeze_1162: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1161, -1);  unsqueeze_1161 = None
    mul_2094: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2088, unsqueeze_1162);  mul_2088 = unsqueeze_1162 = None
    unsqueeze_1163: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_855, -1);  primals_855 = None
    unsqueeze_1164: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1163, -1);  unsqueeze_1163 = None
    add_1679: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2094, unsqueeze_1164);  mul_2094 = unsqueeze_1164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1680: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1679, relu_253);  add_1679 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_255: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1680);  add_1680 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_285: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_255, primals_856, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1681: "i64[]" = torch.ops.aten.add.Tensor(primals_1839, 1)
    var_mean_285 = torch.ops.aten.var_mean.correction(convolution_285, [0, 2, 3], correction = 0, keepdim = True)
    getitem_570: "f32[1, 144, 1, 1]" = var_mean_285[0]
    getitem_571: "f32[1, 144, 1, 1]" = var_mean_285[1];  var_mean_285 = None
    add_1682: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_570, 1e-05)
    rsqrt_285: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1682);  add_1682 = None
    sub_285: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_285, getitem_571)
    mul_2095: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_285, rsqrt_285);  sub_285 = None
    squeeze_855: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_571, [0, 2, 3]);  getitem_571 = None
    squeeze_856: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_285, [0, 2, 3]);  rsqrt_285 = None
    mul_2096: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_855, 0.1)
    mul_2097: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1837, 0.9)
    add_1683: "f32[144]" = torch.ops.aten.add.Tensor(mul_2096, mul_2097);  mul_2096 = mul_2097 = None
    squeeze_857: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_570, [0, 2, 3]);  getitem_570 = None
    mul_2098: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_857, 1.0025575447570332);  squeeze_857 = None
    mul_2099: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2098, 0.1);  mul_2098 = None
    mul_2100: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1838, 0.9)
    add_1684: "f32[144]" = torch.ops.aten.add.Tensor(mul_2099, mul_2100);  mul_2099 = mul_2100 = None
    unsqueeze_1165: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_857, -1)
    unsqueeze_1166: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1165, -1);  unsqueeze_1165 = None
    mul_2101: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2095, unsqueeze_1166);  mul_2095 = unsqueeze_1166 = None
    unsqueeze_1167: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_858, -1);  primals_858 = None
    unsqueeze_1168: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1167, -1);  unsqueeze_1167 = None
    add_1685: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2101, unsqueeze_1168);  mul_2101 = unsqueeze_1168 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_256: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1685);  add_1685 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_286: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_256, primals_859, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1686: "i64[]" = torch.ops.aten.add.Tensor(primals_1842, 1)
    var_mean_286 = torch.ops.aten.var_mean.correction(convolution_286, [0, 2, 3], correction = 0, keepdim = True)
    getitem_572: "f32[1, 144, 1, 1]" = var_mean_286[0]
    getitem_573: "f32[1, 144, 1, 1]" = var_mean_286[1];  var_mean_286 = None
    add_1687: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_572, 1e-05)
    rsqrt_286: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1687);  add_1687 = None
    sub_286: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_286, getitem_573)
    mul_2102: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_286, rsqrt_286);  sub_286 = None
    squeeze_858: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_573, [0, 2, 3]);  getitem_573 = None
    squeeze_859: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_286, [0, 2, 3]);  rsqrt_286 = None
    mul_2103: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_858, 0.1)
    mul_2104: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1840, 0.9)
    add_1688: "f32[144]" = torch.ops.aten.add.Tensor(mul_2103, mul_2104);  mul_2103 = mul_2104 = None
    squeeze_860: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_572, [0, 2, 3]);  getitem_572 = None
    mul_2105: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_860, 1.0025575447570332);  squeeze_860 = None
    mul_2106: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2105, 0.1);  mul_2105 = None
    mul_2107: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1841, 0.9)
    add_1689: "f32[144]" = torch.ops.aten.add.Tensor(mul_2106, mul_2107);  mul_2106 = mul_2107 = None
    unsqueeze_1169: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_860, -1)
    unsqueeze_1170: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1169, -1);  unsqueeze_1169 = None
    mul_2108: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2102, unsqueeze_1170);  mul_2102 = unsqueeze_1170 = None
    unsqueeze_1171: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_861, -1);  primals_861 = None
    unsqueeze_1172: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1171, -1);  unsqueeze_1171 = None
    add_1690: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2108, unsqueeze_1172);  mul_2108 = unsqueeze_1172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1691: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1690, relu_255);  add_1690 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_257: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1691);  add_1691 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_287: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_257, primals_862, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    add_1692: "i64[]" = torch.ops.aten.add.Tensor(primals_1845, 1)
    var_mean_287 = torch.ops.aten.var_mean.correction(convolution_287, [0, 2, 3], correction = 0, keepdim = True)
    getitem_574: "f32[1, 144, 1, 1]" = var_mean_287[0]
    getitem_575: "f32[1, 144, 1, 1]" = var_mean_287[1];  var_mean_287 = None
    add_1693: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_574, 1e-05)
    rsqrt_287: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1693);  add_1693 = None
    sub_287: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_287, getitem_575)
    mul_2109: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_287, rsqrt_287);  sub_287 = None
    squeeze_861: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_575, [0, 2, 3]);  getitem_575 = None
    squeeze_862: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_287, [0, 2, 3]);  rsqrt_287 = None
    mul_2110: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_861, 0.1)
    mul_2111: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1843, 0.9)
    add_1694: "f32[144]" = torch.ops.aten.add.Tensor(mul_2110, mul_2111);  mul_2110 = mul_2111 = None
    squeeze_863: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_574, [0, 2, 3]);  getitem_574 = None
    mul_2112: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_863, 1.0025575447570332);  squeeze_863 = None
    mul_2113: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2112, 0.1);  mul_2112 = None
    mul_2114: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1844, 0.9)
    add_1695: "f32[144]" = torch.ops.aten.add.Tensor(mul_2113, mul_2114);  mul_2113 = mul_2114 = None
    unsqueeze_1173: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_863, -1)
    unsqueeze_1174: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1173, -1);  unsqueeze_1173 = None
    mul_2115: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2109, unsqueeze_1174);  mul_2109 = unsqueeze_1174 = None
    unsqueeze_1175: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_864, -1);  primals_864 = None
    unsqueeze_1176: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1175, -1);  unsqueeze_1175 = None
    add_1696: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2115, unsqueeze_1176);  mul_2115 = unsqueeze_1176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    relu_258: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1696);  add_1696 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_288: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_258, primals_865, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    add_1697: "i64[]" = torch.ops.aten.add.Tensor(primals_1848, 1)
    var_mean_288 = torch.ops.aten.var_mean.correction(convolution_288, [0, 2, 3], correction = 0, keepdim = True)
    getitem_576: "f32[1, 144, 1, 1]" = var_mean_288[0]
    getitem_577: "f32[1, 144, 1, 1]" = var_mean_288[1];  var_mean_288 = None
    add_1698: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_576, 1e-05)
    rsqrt_288: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1698);  add_1698 = None
    sub_288: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_288, getitem_577)
    mul_2116: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_288, rsqrt_288);  sub_288 = None
    squeeze_864: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_577, [0, 2, 3]);  getitem_577 = None
    squeeze_865: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_288, [0, 2, 3]);  rsqrt_288 = None
    mul_2117: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_864, 0.1)
    mul_2118: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1846, 0.9)
    add_1699: "f32[144]" = torch.ops.aten.add.Tensor(mul_2117, mul_2118);  mul_2117 = mul_2118 = None
    squeeze_866: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_576, [0, 2, 3]);  getitem_576 = None
    mul_2119: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_866, 1.0025575447570332);  squeeze_866 = None
    mul_2120: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2119, 0.1);  mul_2119 = None
    mul_2121: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1847, 0.9)
    add_1700: "f32[144]" = torch.ops.aten.add.Tensor(mul_2120, mul_2121);  mul_2120 = mul_2121 = None
    unsqueeze_1177: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_866, -1)
    unsqueeze_1178: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1177, -1);  unsqueeze_1177 = None
    mul_2122: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2116, unsqueeze_1178);  mul_2116 = unsqueeze_1178 = None
    unsqueeze_1179: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_867, -1);  primals_867 = None
    unsqueeze_1180: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1179, -1);  unsqueeze_1179 = None
    add_1701: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2122, unsqueeze_1180);  mul_2122 = unsqueeze_1180 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:115, code: x += shortcut
    add_1702: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1701, relu_257);  add_1701 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    relu_259: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1702);  add_1702 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_289: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_243, primals_868, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1703: "i64[]" = torch.ops.aten.add.Tensor(primals_1851, 1)
    var_mean_289 = torch.ops.aten.var_mean.correction(convolution_289, [0, 2, 3], correction = 0, keepdim = True)
    getitem_578: "f32[1, 18, 1, 1]" = var_mean_289[0]
    getitem_579: "f32[1, 18, 1, 1]" = var_mean_289[1];  var_mean_289 = None
    add_1704: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_578, 1e-05)
    rsqrt_289: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1704);  add_1704 = None
    sub_289: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_289, getitem_579)
    mul_2123: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_289, rsqrt_289);  sub_289 = None
    squeeze_867: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_579, [0, 2, 3]);  getitem_579 = None
    squeeze_868: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_289, [0, 2, 3]);  rsqrt_289 = None
    mul_2124: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_867, 0.1)
    mul_2125: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1849, 0.9)
    add_1705: "f32[18]" = torch.ops.aten.add.Tensor(mul_2124, mul_2125);  mul_2124 = mul_2125 = None
    squeeze_869: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_578, [0, 2, 3]);  getitem_578 = None
    mul_2126: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_869, 1.0001594642002871);  squeeze_869 = None
    mul_2127: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2126, 0.1);  mul_2126 = None
    mul_2128: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1850, 0.9)
    add_1706: "f32[18]" = torch.ops.aten.add.Tensor(mul_2127, mul_2128);  mul_2127 = mul_2128 = None
    unsqueeze_1181: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_869, -1)
    unsqueeze_1182: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1181, -1);  unsqueeze_1181 = None
    mul_2129: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2123, unsqueeze_1182);  mul_2123 = unsqueeze_1182 = None
    unsqueeze_1183: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_870, -1);  primals_870 = None
    unsqueeze_1184: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1183, -1);  unsqueeze_1183 = None
    add_1707: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_2129, unsqueeze_1184);  mul_2129 = unsqueeze_1184 = None
    iota_50: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_100: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_50, torch.float32);  iota_50 = None
    mul_2130: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_100, 1);  convert_element_type_100 = None
    add_1708: "f32[56]" = torch.ops.aten.add.Tensor(mul_2130, 0);  mul_2130 = None
    add_1709: "f32[56]" = torch.ops.aten.add.Tensor(add_1708, 0.0);  add_1708 = None
    mul_2131: "f32[56]" = torch.ops.aten.mul.Tensor(add_1709, 0.5);  add_1709 = None
    convert_element_type_101: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2131, torch.int64);  mul_2131 = None
    unsqueeze_1185: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_101, -1);  convert_element_type_101 = None
    iota_51: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_102: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_51, torch.float32);  iota_51 = None
    mul_2132: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_102, 1);  convert_element_type_102 = None
    add_1710: "f32[56]" = torch.ops.aten.add.Tensor(mul_2132, 0);  mul_2132 = None
    add_1711: "f32[56]" = torch.ops.aten.add.Tensor(add_1710, 0.0);  add_1710 = None
    mul_2133: "f32[56]" = torch.ops.aten.mul.Tensor(add_1711, 0.5);  add_1711 = None
    convert_element_type_103: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2133, torch.int64);  mul_2133 = None
    _unsafe_index_25: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1707, [None, None, unsqueeze_1185, convert_element_type_103]);  add_1707 = None
    add_1712: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(relu_235, _unsafe_index_25);  _unsafe_index_25 = None
    convolution_290: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_251, primals_871, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1713: "i64[]" = torch.ops.aten.add.Tensor(primals_1854, 1)
    var_mean_290 = torch.ops.aten.var_mean.correction(convolution_290, [0, 2, 3], correction = 0, keepdim = True)
    getitem_580: "f32[1, 18, 1, 1]" = var_mean_290[0]
    getitem_581: "f32[1, 18, 1, 1]" = var_mean_290[1];  var_mean_290 = None
    add_1714: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_580, 1e-05)
    rsqrt_290: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1714);  add_1714 = None
    sub_290: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_290, getitem_581)
    mul_2134: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_290, rsqrt_290);  sub_290 = None
    squeeze_870: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_581, [0, 2, 3]);  getitem_581 = None
    squeeze_871: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_290, [0, 2, 3]);  rsqrt_290 = None
    mul_2135: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_870, 0.1)
    mul_2136: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1852, 0.9)
    add_1715: "f32[18]" = torch.ops.aten.add.Tensor(mul_2135, mul_2136);  mul_2135 = mul_2136 = None
    squeeze_872: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_580, [0, 2, 3]);  getitem_580 = None
    mul_2137: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_872, 1.0006381620931717);  squeeze_872 = None
    mul_2138: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2137, 0.1);  mul_2137 = None
    mul_2139: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1853, 0.9)
    add_1716: "f32[18]" = torch.ops.aten.add.Tensor(mul_2138, mul_2139);  mul_2138 = mul_2139 = None
    unsqueeze_1186: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_872, -1)
    unsqueeze_1187: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1186, -1);  unsqueeze_1186 = None
    mul_2140: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2134, unsqueeze_1187);  mul_2134 = unsqueeze_1187 = None
    unsqueeze_1188: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_873, -1);  primals_873 = None
    unsqueeze_1189: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1188, -1);  unsqueeze_1188 = None
    add_1717: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_2140, unsqueeze_1189);  mul_2140 = unsqueeze_1189 = None
    iota_52: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_104: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_52, torch.float32);  iota_52 = None
    mul_2141: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_104, 1);  convert_element_type_104 = None
    add_1718: "f32[56]" = torch.ops.aten.add.Tensor(mul_2141, 0);  mul_2141 = None
    add_1719: "f32[56]" = torch.ops.aten.add.Tensor(add_1718, 0.0);  add_1718 = None
    mul_2142: "f32[56]" = torch.ops.aten.mul.Tensor(add_1719, 0.25);  add_1719 = None
    convert_element_type_105: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2142, torch.int64);  mul_2142 = None
    unsqueeze_1190: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_105, -1);  convert_element_type_105 = None
    iota_53: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_106: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_53, torch.float32);  iota_53 = None
    mul_2143: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_106, 1);  convert_element_type_106 = None
    add_1720: "f32[56]" = torch.ops.aten.add.Tensor(mul_2143, 0);  mul_2143 = None
    add_1721: "f32[56]" = torch.ops.aten.add.Tensor(add_1720, 0.0);  add_1720 = None
    mul_2144: "f32[56]" = torch.ops.aten.mul.Tensor(add_1721, 0.25);  add_1721 = None
    convert_element_type_107: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2144, torch.int64);  mul_2144 = None
    _unsafe_index_26: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1717, [None, None, unsqueeze_1190, convert_element_type_107]);  add_1717 = None
    add_1722: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1712, _unsafe_index_26);  add_1712 = _unsafe_index_26 = None
    convolution_291: "f32[8, 18, 7, 7]" = torch.ops.aten.convolution.default(relu_259, primals_874, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1723: "i64[]" = torch.ops.aten.add.Tensor(primals_1857, 1)
    var_mean_291 = torch.ops.aten.var_mean.correction(convolution_291, [0, 2, 3], correction = 0, keepdim = True)
    getitem_582: "f32[1, 18, 1, 1]" = var_mean_291[0]
    getitem_583: "f32[1, 18, 1, 1]" = var_mean_291[1];  var_mean_291 = None
    add_1724: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_582, 1e-05)
    rsqrt_291: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1724);  add_1724 = None
    sub_291: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_291, getitem_583)
    mul_2145: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_291, rsqrt_291);  sub_291 = None
    squeeze_873: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_583, [0, 2, 3]);  getitem_583 = None
    squeeze_874: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_291, [0, 2, 3]);  rsqrt_291 = None
    mul_2146: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_873, 0.1)
    mul_2147: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1855, 0.9)
    add_1725: "f32[18]" = torch.ops.aten.add.Tensor(mul_2146, mul_2147);  mul_2146 = mul_2147 = None
    squeeze_875: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_582, [0, 2, 3]);  getitem_582 = None
    mul_2148: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_875, 1.0025575447570332);  squeeze_875 = None
    mul_2149: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2148, 0.1);  mul_2148 = None
    mul_2150: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1856, 0.9)
    add_1726: "f32[18]" = torch.ops.aten.add.Tensor(mul_2149, mul_2150);  mul_2149 = mul_2150 = None
    unsqueeze_1191: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_875, -1)
    unsqueeze_1192: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1191, -1);  unsqueeze_1191 = None
    mul_2151: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2145, unsqueeze_1192);  mul_2145 = unsqueeze_1192 = None
    unsqueeze_1193: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_876, -1);  primals_876 = None
    unsqueeze_1194: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1193, -1);  unsqueeze_1193 = None
    add_1727: "f32[8, 18, 7, 7]" = torch.ops.aten.add.Tensor(mul_2151, unsqueeze_1194);  mul_2151 = unsqueeze_1194 = None
    iota_54: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_108: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_54, torch.float32);  iota_54 = None
    mul_2152: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_108, 1);  convert_element_type_108 = None
    add_1728: "f32[56]" = torch.ops.aten.add.Tensor(mul_2152, 0);  mul_2152 = None
    add_1729: "f32[56]" = torch.ops.aten.add.Tensor(add_1728, 0.0);  add_1728 = None
    mul_2153: "f32[56]" = torch.ops.aten.mul.Tensor(add_1729, 0.125);  add_1729 = None
    convert_element_type_109: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2153, torch.int64);  mul_2153 = None
    unsqueeze_1195: "i64[56, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_109, -1);  convert_element_type_109 = None
    iota_55: "i64[56]" = torch.ops.prims.iota.default(56, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_110: "f32[56]" = torch.ops.prims.convert_element_type.default(iota_55, torch.float32);  iota_55 = None
    mul_2154: "f32[56]" = torch.ops.aten.mul.Tensor(convert_element_type_110, 1);  convert_element_type_110 = None
    add_1730: "f32[56]" = torch.ops.aten.add.Tensor(mul_2154, 0);  mul_2154 = None
    add_1731: "f32[56]" = torch.ops.aten.add.Tensor(add_1730, 0.0);  add_1730 = None
    mul_2155: "f32[56]" = torch.ops.aten.mul.Tensor(add_1731, 0.125);  add_1731 = None
    convert_element_type_111: "i64[56]" = torch.ops.prims.convert_element_type.default(mul_2155, torch.int64);  mul_2155 = None
    _unsafe_index_27: "f32[8, 18, 56, 56]" = torch.ops.aten._unsafe_index.Tensor(add_1727, [None, None, unsqueeze_1195, convert_element_type_111]);  add_1727 = None
    add_1732: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1722, _unsafe_index_27);  add_1722 = _unsafe_index_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_260: "f32[8, 18, 56, 56]" = torch.ops.aten.relu.default(add_1732);  add_1732 = None
    alias_260: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_260)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_292: "f32[8, 36, 28, 28]" = torch.ops.aten.convolution.default(relu_235, primals_877, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1733: "i64[]" = torch.ops.aten.add.Tensor(primals_1860, 1)
    var_mean_292 = torch.ops.aten.var_mean.correction(convolution_292, [0, 2, 3], correction = 0, keepdim = True)
    getitem_584: "f32[1, 36, 1, 1]" = var_mean_292[0]
    getitem_585: "f32[1, 36, 1, 1]" = var_mean_292[1];  var_mean_292 = None
    add_1734: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_584, 1e-05)
    rsqrt_292: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1734);  add_1734 = None
    sub_292: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_292, getitem_585)
    mul_2156: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_292, rsqrt_292);  sub_292 = None
    squeeze_876: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_585, [0, 2, 3]);  getitem_585 = None
    squeeze_877: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_292, [0, 2, 3]);  rsqrt_292 = None
    mul_2157: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_876, 0.1)
    mul_2158: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1858, 0.9)
    add_1735: "f32[36]" = torch.ops.aten.add.Tensor(mul_2157, mul_2158);  mul_2157 = mul_2158 = None
    squeeze_878: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_584, [0, 2, 3]);  getitem_584 = None
    mul_2159: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_878, 1.0001594642002871);  squeeze_878 = None
    mul_2160: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2159, 0.1);  mul_2159 = None
    mul_2161: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1859, 0.9)
    add_1736: "f32[36]" = torch.ops.aten.add.Tensor(mul_2160, mul_2161);  mul_2160 = mul_2161 = None
    unsqueeze_1196: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_878, -1)
    unsqueeze_1197: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1196, -1);  unsqueeze_1196 = None
    mul_2162: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2156, unsqueeze_1197);  mul_2156 = unsqueeze_1197 = None
    unsqueeze_1198: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_879, -1);  primals_879 = None
    unsqueeze_1199: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1198, -1);  unsqueeze_1198 = None
    add_1737: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(mul_2162, unsqueeze_1199);  mul_2162 = unsqueeze_1199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1738: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1737, relu_243);  add_1737 = None
    convolution_293: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_251, primals_880, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1739: "i64[]" = torch.ops.aten.add.Tensor(primals_1863, 1)
    var_mean_293 = torch.ops.aten.var_mean.correction(convolution_293, [0, 2, 3], correction = 0, keepdim = True)
    getitem_586: "f32[1, 36, 1, 1]" = var_mean_293[0]
    getitem_587: "f32[1, 36, 1, 1]" = var_mean_293[1];  var_mean_293 = None
    add_1740: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_586, 1e-05)
    rsqrt_293: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1740);  add_1740 = None
    sub_293: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_293, getitem_587)
    mul_2163: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_293, rsqrt_293);  sub_293 = None
    squeeze_879: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_587, [0, 2, 3]);  getitem_587 = None
    squeeze_880: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_293, [0, 2, 3]);  rsqrt_293 = None
    mul_2164: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_879, 0.1)
    mul_2165: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1861, 0.9)
    add_1741: "f32[36]" = torch.ops.aten.add.Tensor(mul_2164, mul_2165);  mul_2164 = mul_2165 = None
    squeeze_881: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_586, [0, 2, 3]);  getitem_586 = None
    mul_2166: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_881, 1.0006381620931717);  squeeze_881 = None
    mul_2167: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2166, 0.1);  mul_2166 = None
    mul_2168: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1862, 0.9)
    add_1742: "f32[36]" = torch.ops.aten.add.Tensor(mul_2167, mul_2168);  mul_2167 = mul_2168 = None
    unsqueeze_1200: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_881, -1)
    unsqueeze_1201: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1200, -1);  unsqueeze_1200 = None
    mul_2169: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2163, unsqueeze_1201);  mul_2163 = unsqueeze_1201 = None
    unsqueeze_1202: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_882, -1);  primals_882 = None
    unsqueeze_1203: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1202, -1);  unsqueeze_1202 = None
    add_1743: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_2169, unsqueeze_1203);  mul_2169 = unsqueeze_1203 = None
    iota_56: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_112: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_56, torch.float32);  iota_56 = None
    mul_2170: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_112, 1);  convert_element_type_112 = None
    add_1744: "f32[28]" = torch.ops.aten.add.Tensor(mul_2170, 0);  mul_2170 = None
    add_1745: "f32[28]" = torch.ops.aten.add.Tensor(add_1744, 0.0);  add_1744 = None
    mul_2171: "f32[28]" = torch.ops.aten.mul.Tensor(add_1745, 0.5);  add_1745 = None
    convert_element_type_113: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_2171, torch.int64);  mul_2171 = None
    unsqueeze_1204: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_113, -1);  convert_element_type_113 = None
    iota_57: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_114: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_57, torch.float32);  iota_57 = None
    mul_2172: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_114, 1);  convert_element_type_114 = None
    add_1746: "f32[28]" = torch.ops.aten.add.Tensor(mul_2172, 0);  mul_2172 = None
    add_1747: "f32[28]" = torch.ops.aten.add.Tensor(add_1746, 0.0);  add_1746 = None
    mul_2173: "f32[28]" = torch.ops.aten.mul.Tensor(add_1747, 0.5);  add_1747 = None
    convert_element_type_115: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_2173, torch.int64);  mul_2173 = None
    _unsafe_index_28: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1743, [None, None, unsqueeze_1204, convert_element_type_115]);  add_1743 = None
    add_1748: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1738, _unsafe_index_28);  add_1738 = _unsafe_index_28 = None
    convolution_294: "f32[8, 36, 7, 7]" = torch.ops.aten.convolution.default(relu_259, primals_883, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1749: "i64[]" = torch.ops.aten.add.Tensor(primals_1866, 1)
    var_mean_294 = torch.ops.aten.var_mean.correction(convolution_294, [0, 2, 3], correction = 0, keepdim = True)
    getitem_588: "f32[1, 36, 1, 1]" = var_mean_294[0]
    getitem_589: "f32[1, 36, 1, 1]" = var_mean_294[1];  var_mean_294 = None
    add_1750: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_588, 1e-05)
    rsqrt_294: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1750);  add_1750 = None
    sub_294: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_294, getitem_589)
    mul_2174: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_294, rsqrt_294);  sub_294 = None
    squeeze_882: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_589, [0, 2, 3]);  getitem_589 = None
    squeeze_883: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_294, [0, 2, 3]);  rsqrt_294 = None
    mul_2175: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_882, 0.1)
    mul_2176: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1864, 0.9)
    add_1751: "f32[36]" = torch.ops.aten.add.Tensor(mul_2175, mul_2176);  mul_2175 = mul_2176 = None
    squeeze_884: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_588, [0, 2, 3]);  getitem_588 = None
    mul_2177: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_884, 1.0025575447570332);  squeeze_884 = None
    mul_2178: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2177, 0.1);  mul_2177 = None
    mul_2179: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1865, 0.9)
    add_1752: "f32[36]" = torch.ops.aten.add.Tensor(mul_2178, mul_2179);  mul_2178 = mul_2179 = None
    unsqueeze_1205: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_884, -1)
    unsqueeze_1206: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1205, -1);  unsqueeze_1205 = None
    mul_2180: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2174, unsqueeze_1206);  mul_2174 = unsqueeze_1206 = None
    unsqueeze_1207: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_885, -1);  primals_885 = None
    unsqueeze_1208: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1207, -1);  unsqueeze_1207 = None
    add_1753: "f32[8, 36, 7, 7]" = torch.ops.aten.add.Tensor(mul_2180, unsqueeze_1208);  mul_2180 = unsqueeze_1208 = None
    iota_58: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_116: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_58, torch.float32);  iota_58 = None
    mul_2181: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_116, 1);  convert_element_type_116 = None
    add_1754: "f32[28]" = torch.ops.aten.add.Tensor(mul_2181, 0);  mul_2181 = None
    add_1755: "f32[28]" = torch.ops.aten.add.Tensor(add_1754, 0.0);  add_1754 = None
    mul_2182: "f32[28]" = torch.ops.aten.mul.Tensor(add_1755, 0.25);  add_1755 = None
    convert_element_type_117: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_2182, torch.int64);  mul_2182 = None
    unsqueeze_1209: "i64[28, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_117, -1);  convert_element_type_117 = None
    iota_59: "i64[28]" = torch.ops.prims.iota.default(28, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_118: "f32[28]" = torch.ops.prims.convert_element_type.default(iota_59, torch.float32);  iota_59 = None
    mul_2183: "f32[28]" = torch.ops.aten.mul.Tensor(convert_element_type_118, 1);  convert_element_type_118 = None
    add_1756: "f32[28]" = torch.ops.aten.add.Tensor(mul_2183, 0);  mul_2183 = None
    add_1757: "f32[28]" = torch.ops.aten.add.Tensor(add_1756, 0.0);  add_1756 = None
    mul_2184: "f32[28]" = torch.ops.aten.mul.Tensor(add_1757, 0.25);  add_1757 = None
    convert_element_type_119: "i64[28]" = torch.ops.prims.convert_element_type.default(mul_2184, torch.int64);  mul_2184 = None
    _unsafe_index_29: "f32[8, 36, 28, 28]" = torch.ops.aten._unsafe_index.Tensor(add_1753, [None, None, unsqueeze_1209, convert_element_type_119]);  add_1753 = None
    add_1758: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1748, _unsafe_index_29);  add_1748 = _unsafe_index_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_261: "f32[8, 36, 28, 28]" = torch.ops.aten.relu.default(add_1758);  add_1758 = None
    alias_261: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_261)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_295: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_235, primals_886, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1759: "i64[]" = torch.ops.aten.add.Tensor(primals_1869, 1)
    var_mean_295 = torch.ops.aten.var_mean.correction(convolution_295, [0, 2, 3], correction = 0, keepdim = True)
    getitem_590: "f32[1, 18, 1, 1]" = var_mean_295[0]
    getitem_591: "f32[1, 18, 1, 1]" = var_mean_295[1];  var_mean_295 = None
    add_1760: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_590, 1e-05)
    rsqrt_295: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1760);  add_1760 = None
    sub_295: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_295, getitem_591)
    mul_2185: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_295, rsqrt_295);  sub_295 = None
    squeeze_885: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_591, [0, 2, 3]);  getitem_591 = None
    squeeze_886: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_295, [0, 2, 3]);  rsqrt_295 = None
    mul_2186: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_885, 0.1)
    mul_2187: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1867, 0.9)
    add_1761: "f32[18]" = torch.ops.aten.add.Tensor(mul_2186, mul_2187);  mul_2186 = mul_2187 = None
    squeeze_887: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_590, [0, 2, 3]);  getitem_590 = None
    mul_2188: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_887, 1.0001594642002871);  squeeze_887 = None
    mul_2189: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2188, 0.1);  mul_2188 = None
    mul_2190: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1868, 0.9)
    add_1762: "f32[18]" = torch.ops.aten.add.Tensor(mul_2189, mul_2190);  mul_2189 = mul_2190 = None
    unsqueeze_1210: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_887, -1)
    unsqueeze_1211: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1210, -1);  unsqueeze_1210 = None
    mul_2191: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2185, unsqueeze_1211);  mul_2185 = unsqueeze_1211 = None
    unsqueeze_1212: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_888, -1);  primals_888 = None
    unsqueeze_1213: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1212, -1);  unsqueeze_1212 = None
    add_1763: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_2191, unsqueeze_1213);  mul_2191 = unsqueeze_1213 = None
    relu_262: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1763);  add_1763 = None
    alias_262: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_262)
    convolution_296: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_262, primals_889, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1764: "i64[]" = torch.ops.aten.add.Tensor(primals_1872, 1)
    var_mean_296 = torch.ops.aten.var_mean.correction(convolution_296, [0, 2, 3], correction = 0, keepdim = True)
    getitem_592: "f32[1, 72, 1, 1]" = var_mean_296[0]
    getitem_593: "f32[1, 72, 1, 1]" = var_mean_296[1];  var_mean_296 = None
    add_1765: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_592, 1e-05)
    rsqrt_296: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1765);  add_1765 = None
    sub_296: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_296, getitem_593)
    mul_2192: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_296, rsqrt_296);  sub_296 = None
    squeeze_888: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_593, [0, 2, 3]);  getitem_593 = None
    squeeze_889: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_296, [0, 2, 3]);  rsqrt_296 = None
    mul_2193: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_888, 0.1)
    mul_2194: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1870, 0.9)
    add_1766: "f32[72]" = torch.ops.aten.add.Tensor(mul_2193, mul_2194);  mul_2193 = mul_2194 = None
    squeeze_890: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_592, [0, 2, 3]);  getitem_592 = None
    mul_2195: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_890, 1.0006381620931717);  squeeze_890 = None
    mul_2196: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2195, 0.1);  mul_2195 = None
    mul_2197: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1871, 0.9)
    add_1767: "f32[72]" = torch.ops.aten.add.Tensor(mul_2196, mul_2197);  mul_2196 = mul_2197 = None
    unsqueeze_1214: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_890, -1)
    unsqueeze_1215: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1214, -1);  unsqueeze_1214 = None
    mul_2198: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2192, unsqueeze_1215);  mul_2192 = unsqueeze_1215 = None
    unsqueeze_1216: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_891, -1);  primals_891 = None
    unsqueeze_1217: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1216, -1);  unsqueeze_1216 = None
    add_1768: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2198, unsqueeze_1217);  mul_2198 = unsqueeze_1217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_297: "f32[8, 72, 14, 14]" = torch.ops.aten.convolution.default(relu_243, primals_892, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1769: "i64[]" = torch.ops.aten.add.Tensor(primals_1875, 1)
    var_mean_297 = torch.ops.aten.var_mean.correction(convolution_297, [0, 2, 3], correction = 0, keepdim = True)
    getitem_594: "f32[1, 72, 1, 1]" = var_mean_297[0]
    getitem_595: "f32[1, 72, 1, 1]" = var_mean_297[1];  var_mean_297 = None
    add_1770: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_594, 1e-05)
    rsqrt_297: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1770);  add_1770 = None
    sub_297: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_297, getitem_595)
    mul_2199: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_297, rsqrt_297);  sub_297 = None
    squeeze_891: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_595, [0, 2, 3]);  getitem_595 = None
    squeeze_892: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_297, [0, 2, 3]);  rsqrt_297 = None
    mul_2200: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_891, 0.1)
    mul_2201: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1873, 0.9)
    add_1771: "f32[72]" = torch.ops.aten.add.Tensor(mul_2200, mul_2201);  mul_2200 = mul_2201 = None
    squeeze_893: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_594, [0, 2, 3]);  getitem_594 = None
    mul_2202: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_893, 1.0006381620931717);  squeeze_893 = None
    mul_2203: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2202, 0.1);  mul_2202 = None
    mul_2204: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1874, 0.9)
    add_1772: "f32[72]" = torch.ops.aten.add.Tensor(mul_2203, mul_2204);  mul_2203 = mul_2204 = None
    unsqueeze_1218: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_893, -1)
    unsqueeze_1219: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1218, -1);  unsqueeze_1218 = None
    mul_2205: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2199, unsqueeze_1219);  mul_2199 = unsqueeze_1219 = None
    unsqueeze_1220: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_894, -1);  primals_894 = None
    unsqueeze_1221: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1220, -1);  unsqueeze_1220 = None
    add_1773: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(mul_2205, unsqueeze_1221);  mul_2205 = unsqueeze_1221 = None
    add_1774: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1768, add_1773);  add_1768 = add_1773 = None
    add_1775: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1774, relu_251);  add_1774 = None
    convolution_298: "f32[8, 72, 7, 7]" = torch.ops.aten.convolution.default(relu_259, primals_895, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1776: "i64[]" = torch.ops.aten.add.Tensor(primals_1878, 1)
    var_mean_298 = torch.ops.aten.var_mean.correction(convolution_298, [0, 2, 3], correction = 0, keepdim = True)
    getitem_596: "f32[1, 72, 1, 1]" = var_mean_298[0]
    getitem_597: "f32[1, 72, 1, 1]" = var_mean_298[1];  var_mean_298 = None
    add_1777: "f32[1, 72, 1, 1]" = torch.ops.aten.add.Tensor(getitem_596, 1e-05)
    rsqrt_298: "f32[1, 72, 1, 1]" = torch.ops.aten.rsqrt.default(add_1777);  add_1777 = None
    sub_298: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_298, getitem_597)
    mul_2206: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_298, rsqrt_298);  sub_298 = None
    squeeze_894: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_597, [0, 2, 3]);  getitem_597 = None
    squeeze_895: "f32[72]" = torch.ops.aten.squeeze.dims(rsqrt_298, [0, 2, 3]);  rsqrt_298 = None
    mul_2207: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_894, 0.1)
    mul_2208: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1876, 0.9)
    add_1778: "f32[72]" = torch.ops.aten.add.Tensor(mul_2207, mul_2208);  mul_2207 = mul_2208 = None
    squeeze_896: "f32[72]" = torch.ops.aten.squeeze.dims(getitem_596, [0, 2, 3]);  getitem_596 = None
    mul_2209: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_896, 1.0025575447570332);  squeeze_896 = None
    mul_2210: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2209, 0.1);  mul_2209 = None
    mul_2211: "f32[72]" = torch.ops.aten.mul.Tensor(primals_1877, 0.9)
    add_1779: "f32[72]" = torch.ops.aten.add.Tensor(mul_2210, mul_2211);  mul_2210 = mul_2211 = None
    unsqueeze_1222: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_896, -1)
    unsqueeze_1223: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1222, -1);  unsqueeze_1222 = None
    mul_2212: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2206, unsqueeze_1223);  mul_2206 = unsqueeze_1223 = None
    unsqueeze_1224: "f32[72, 1]" = torch.ops.aten.unsqueeze.default(primals_897, -1);  primals_897 = None
    unsqueeze_1225: "f32[72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1224, -1);  unsqueeze_1224 = None
    add_1780: "f32[8, 72, 7, 7]" = torch.ops.aten.add.Tensor(mul_2212, unsqueeze_1225);  mul_2212 = unsqueeze_1225 = None
    iota_60: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_120: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_60, torch.float32);  iota_60 = None
    mul_2213: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_120, 1);  convert_element_type_120 = None
    add_1781: "f32[14]" = torch.ops.aten.add.Tensor(mul_2213, 0);  mul_2213 = None
    add_1782: "f32[14]" = torch.ops.aten.add.Tensor(add_1781, 0.0);  add_1781 = None
    mul_2214: "f32[14]" = torch.ops.aten.mul.Tensor(add_1782, 0.5);  add_1782 = None
    convert_element_type_121: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_2214, torch.int64);  mul_2214 = None
    unsqueeze_1226: "i64[14, 1]" = torch.ops.aten.unsqueeze.default(convert_element_type_121, -1);  convert_element_type_121 = None
    iota_61: "i64[14]" = torch.ops.prims.iota.default(14, start = 0, step = 1, dtype = torch.int64, device = device(type='cuda', index=0), requires_grad = False)
    convert_element_type_122: "f32[14]" = torch.ops.prims.convert_element_type.default(iota_61, torch.float32);  iota_61 = None
    mul_2215: "f32[14]" = torch.ops.aten.mul.Tensor(convert_element_type_122, 1);  convert_element_type_122 = None
    add_1783: "f32[14]" = torch.ops.aten.add.Tensor(mul_2215, 0);  mul_2215 = None
    add_1784: "f32[14]" = torch.ops.aten.add.Tensor(add_1783, 0.0);  add_1783 = None
    mul_2216: "f32[14]" = torch.ops.aten.mul.Tensor(add_1784, 0.5);  add_1784 = None
    convert_element_type_123: "i64[14]" = torch.ops.prims.convert_element_type.default(mul_2216, torch.int64);  mul_2216 = None
    _unsafe_index_30: "f32[8, 72, 14, 14]" = torch.ops.aten._unsafe_index.Tensor(add_1780, [None, None, unsqueeze_1226, convert_element_type_123]);  add_1780 = None
    add_1785: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1775, _unsafe_index_30);  add_1775 = _unsafe_index_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_263: "f32[8, 72, 14, 14]" = torch.ops.aten.relu.default(add_1785);  add_1785 = None
    alias_263: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_263)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    convolution_299: "f32[8, 18, 28, 28]" = torch.ops.aten.convolution.default(relu_235, primals_898, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1786: "i64[]" = torch.ops.aten.add.Tensor(primals_1881, 1)
    var_mean_299 = torch.ops.aten.var_mean.correction(convolution_299, [0, 2, 3], correction = 0, keepdim = True)
    getitem_598: "f32[1, 18, 1, 1]" = var_mean_299[0]
    getitem_599: "f32[1, 18, 1, 1]" = var_mean_299[1];  var_mean_299 = None
    add_1787: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_598, 1e-05)
    rsqrt_299: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1787);  add_1787 = None
    sub_299: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_299, getitem_599)
    mul_2217: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_299, rsqrt_299);  sub_299 = None
    squeeze_897: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_599, [0, 2, 3]);  getitem_599 = None
    squeeze_898: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_299, [0, 2, 3]);  rsqrt_299 = None
    mul_2218: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_897, 0.1)
    mul_2219: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1879, 0.9)
    add_1788: "f32[18]" = torch.ops.aten.add.Tensor(mul_2218, mul_2219);  mul_2218 = mul_2219 = None
    squeeze_899: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_598, [0, 2, 3]);  getitem_598 = None
    mul_2220: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_899, 1.0001594642002871);  squeeze_899 = None
    mul_2221: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2220, 0.1);  mul_2220 = None
    mul_2222: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1880, 0.9)
    add_1789: "f32[18]" = torch.ops.aten.add.Tensor(mul_2221, mul_2222);  mul_2221 = mul_2222 = None
    unsqueeze_1227: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_899, -1)
    unsqueeze_1228: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1227, -1);  unsqueeze_1227 = None
    mul_2223: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2217, unsqueeze_1228);  mul_2217 = unsqueeze_1228 = None
    unsqueeze_1229: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_900, -1);  primals_900 = None
    unsqueeze_1230: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1229, -1);  unsqueeze_1229 = None
    add_1790: "f32[8, 18, 28, 28]" = torch.ops.aten.add.Tensor(mul_2223, unsqueeze_1230);  mul_2223 = unsqueeze_1230 = None
    relu_264: "f32[8, 18, 28, 28]" = torch.ops.aten.relu.default(add_1790);  add_1790 = None
    alias_264: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(relu_264)
    convolution_300: "f32[8, 18, 14, 14]" = torch.ops.aten.convolution.default(relu_264, primals_901, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1791: "i64[]" = torch.ops.aten.add.Tensor(primals_1884, 1)
    var_mean_300 = torch.ops.aten.var_mean.correction(convolution_300, [0, 2, 3], correction = 0, keepdim = True)
    getitem_600: "f32[1, 18, 1, 1]" = var_mean_300[0]
    getitem_601: "f32[1, 18, 1, 1]" = var_mean_300[1];  var_mean_300 = None
    add_1792: "f32[1, 18, 1, 1]" = torch.ops.aten.add.Tensor(getitem_600, 1e-05)
    rsqrt_300: "f32[1, 18, 1, 1]" = torch.ops.aten.rsqrt.default(add_1792);  add_1792 = None
    sub_300: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_300, getitem_601)
    mul_2224: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_300, rsqrt_300);  sub_300 = None
    squeeze_900: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_601, [0, 2, 3]);  getitem_601 = None
    squeeze_901: "f32[18]" = torch.ops.aten.squeeze.dims(rsqrt_300, [0, 2, 3]);  rsqrt_300 = None
    mul_2225: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_900, 0.1)
    mul_2226: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1882, 0.9)
    add_1793: "f32[18]" = torch.ops.aten.add.Tensor(mul_2225, mul_2226);  mul_2225 = mul_2226 = None
    squeeze_902: "f32[18]" = torch.ops.aten.squeeze.dims(getitem_600, [0, 2, 3]);  getitem_600 = None
    mul_2227: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_902, 1.0006381620931717);  squeeze_902 = None
    mul_2228: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2227, 0.1);  mul_2227 = None
    mul_2229: "f32[18]" = torch.ops.aten.mul.Tensor(primals_1883, 0.9)
    add_1794: "f32[18]" = torch.ops.aten.add.Tensor(mul_2228, mul_2229);  mul_2228 = mul_2229 = None
    unsqueeze_1231: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_902, -1)
    unsqueeze_1232: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1231, -1);  unsqueeze_1231 = None
    mul_2230: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2224, unsqueeze_1232);  mul_2224 = unsqueeze_1232 = None
    unsqueeze_1233: "f32[18, 1]" = torch.ops.aten.unsqueeze.default(primals_903, -1);  primals_903 = None
    unsqueeze_1234: "f32[18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1233, -1);  unsqueeze_1233 = None
    add_1795: "f32[8, 18, 14, 14]" = torch.ops.aten.add.Tensor(mul_2230, unsqueeze_1234);  mul_2230 = unsqueeze_1234 = None
    relu_265: "f32[8, 18, 14, 14]" = torch.ops.aten.relu.default(add_1795);  add_1795 = None
    alias_265: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(relu_265)
    convolution_301: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_265, primals_904, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1796: "i64[]" = torch.ops.aten.add.Tensor(primals_1887, 1)
    var_mean_301 = torch.ops.aten.var_mean.correction(convolution_301, [0, 2, 3], correction = 0, keepdim = True)
    getitem_602: "f32[1, 144, 1, 1]" = var_mean_301[0]
    getitem_603: "f32[1, 144, 1, 1]" = var_mean_301[1];  var_mean_301 = None
    add_1797: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_602, 1e-05)
    rsqrt_301: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1797);  add_1797 = None
    sub_301: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_301, getitem_603)
    mul_2231: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_301, rsqrt_301);  sub_301 = None
    squeeze_903: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_603, [0, 2, 3]);  getitem_603 = None
    squeeze_904: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_301, [0, 2, 3]);  rsqrt_301 = None
    mul_2232: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_903, 0.1)
    mul_2233: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1885, 0.9)
    add_1798: "f32[144]" = torch.ops.aten.add.Tensor(mul_2232, mul_2233);  mul_2232 = mul_2233 = None
    squeeze_905: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_602, [0, 2, 3]);  getitem_602 = None
    mul_2234: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_905, 1.0025575447570332);  squeeze_905 = None
    mul_2235: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2234, 0.1);  mul_2234 = None
    mul_2236: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1886, 0.9)
    add_1799: "f32[144]" = torch.ops.aten.add.Tensor(mul_2235, mul_2236);  mul_2235 = mul_2236 = None
    unsqueeze_1235: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_905, -1)
    unsqueeze_1236: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1235, -1);  unsqueeze_1235 = None
    mul_2237: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2231, unsqueeze_1236);  mul_2231 = unsqueeze_1236 = None
    unsqueeze_1237: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_906, -1);  primals_906 = None
    unsqueeze_1238: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1237, -1);  unsqueeze_1237 = None
    add_1800: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2237, unsqueeze_1238);  mul_2237 = unsqueeze_1238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    convolution_302: "f32[8, 36, 14, 14]" = torch.ops.aten.convolution.default(relu_243, primals_907, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1801: "i64[]" = torch.ops.aten.add.Tensor(primals_1890, 1)
    var_mean_302 = torch.ops.aten.var_mean.correction(convolution_302, [0, 2, 3], correction = 0, keepdim = True)
    getitem_604: "f32[1, 36, 1, 1]" = var_mean_302[0]
    getitem_605: "f32[1, 36, 1, 1]" = var_mean_302[1];  var_mean_302 = None
    add_1802: "f32[1, 36, 1, 1]" = torch.ops.aten.add.Tensor(getitem_604, 1e-05)
    rsqrt_302: "f32[1, 36, 1, 1]" = torch.ops.aten.rsqrt.default(add_1802);  add_1802 = None
    sub_302: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_302, getitem_605)
    mul_2238: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_302, rsqrt_302);  sub_302 = None
    squeeze_906: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_605, [0, 2, 3]);  getitem_605 = None
    squeeze_907: "f32[36]" = torch.ops.aten.squeeze.dims(rsqrt_302, [0, 2, 3]);  rsqrt_302 = None
    mul_2239: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_906, 0.1)
    mul_2240: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1888, 0.9)
    add_1803: "f32[36]" = torch.ops.aten.add.Tensor(mul_2239, mul_2240);  mul_2239 = mul_2240 = None
    squeeze_908: "f32[36]" = torch.ops.aten.squeeze.dims(getitem_604, [0, 2, 3]);  getitem_604 = None
    mul_2241: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_908, 1.0006381620931717);  squeeze_908 = None
    mul_2242: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2241, 0.1);  mul_2241 = None
    mul_2243: "f32[36]" = torch.ops.aten.mul.Tensor(primals_1889, 0.9)
    add_1804: "f32[36]" = torch.ops.aten.add.Tensor(mul_2242, mul_2243);  mul_2242 = mul_2243 = None
    unsqueeze_1239: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_908, -1)
    unsqueeze_1240: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1239, -1);  unsqueeze_1239 = None
    mul_2244: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2238, unsqueeze_1240);  mul_2238 = unsqueeze_1240 = None
    unsqueeze_1241: "f32[36, 1]" = torch.ops.aten.unsqueeze.default(primals_909, -1);  primals_909 = None
    unsqueeze_1242: "f32[36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1241, -1);  unsqueeze_1241 = None
    add_1805: "f32[8, 36, 14, 14]" = torch.ops.aten.add.Tensor(mul_2244, unsqueeze_1242);  mul_2244 = unsqueeze_1242 = None
    relu_266: "f32[8, 36, 14, 14]" = torch.ops.aten.relu.default(add_1805);  add_1805 = None
    alias_266: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(relu_266)
    convolution_303: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_266, primals_910, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1806: "i64[]" = torch.ops.aten.add.Tensor(primals_1893, 1)
    var_mean_303 = torch.ops.aten.var_mean.correction(convolution_303, [0, 2, 3], correction = 0, keepdim = True)
    getitem_606: "f32[1, 144, 1, 1]" = var_mean_303[0]
    getitem_607: "f32[1, 144, 1, 1]" = var_mean_303[1];  var_mean_303 = None
    add_1807: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_606, 1e-05)
    rsqrt_303: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1807);  add_1807 = None
    sub_303: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_303, getitem_607)
    mul_2245: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_303, rsqrt_303);  sub_303 = None
    squeeze_909: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_607, [0, 2, 3]);  getitem_607 = None
    squeeze_910: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_303, [0, 2, 3]);  rsqrt_303 = None
    mul_2246: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_909, 0.1)
    mul_2247: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1891, 0.9)
    add_1808: "f32[144]" = torch.ops.aten.add.Tensor(mul_2246, mul_2247);  mul_2246 = mul_2247 = None
    squeeze_911: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_606, [0, 2, 3]);  getitem_606 = None
    mul_2248: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_911, 1.0025575447570332);  squeeze_911 = None
    mul_2249: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2248, 0.1);  mul_2248 = None
    mul_2250: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1892, 0.9)
    add_1809: "f32[144]" = torch.ops.aten.add.Tensor(mul_2249, mul_2250);  mul_2249 = mul_2250 = None
    unsqueeze_1243: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_911, -1)
    unsqueeze_1244: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1243, -1);  unsqueeze_1243 = None
    mul_2251: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2245, unsqueeze_1244);  mul_2245 = unsqueeze_1244 = None
    unsqueeze_1245: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_912, -1);  primals_912 = None
    unsqueeze_1246: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1245, -1);  unsqueeze_1245 = None
    add_1810: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2251, unsqueeze_1246);  mul_2251 = unsqueeze_1246 = None
    add_1811: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1800, add_1810);  add_1800 = add_1810 = None
    convolution_304: "f32[8, 144, 7, 7]" = torch.ops.aten.convolution.default(relu_251, primals_913, None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1)
    add_1812: "i64[]" = torch.ops.aten.add.Tensor(primals_1896, 1)
    var_mean_304 = torch.ops.aten.var_mean.correction(convolution_304, [0, 2, 3], correction = 0, keepdim = True)
    getitem_608: "f32[1, 144, 1, 1]" = var_mean_304[0]
    getitem_609: "f32[1, 144, 1, 1]" = var_mean_304[1];  var_mean_304 = None
    add_1813: "f32[1, 144, 1, 1]" = torch.ops.aten.add.Tensor(getitem_608, 1e-05)
    rsqrt_304: "f32[1, 144, 1, 1]" = torch.ops.aten.rsqrt.default(add_1813);  add_1813 = None
    sub_304: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_304, getitem_609)
    mul_2252: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_304, rsqrt_304);  sub_304 = None
    squeeze_912: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_609, [0, 2, 3]);  getitem_609 = None
    squeeze_913: "f32[144]" = torch.ops.aten.squeeze.dims(rsqrt_304, [0, 2, 3]);  rsqrt_304 = None
    mul_2253: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_912, 0.1)
    mul_2254: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1894, 0.9)
    add_1814: "f32[144]" = torch.ops.aten.add.Tensor(mul_2253, mul_2254);  mul_2253 = mul_2254 = None
    squeeze_914: "f32[144]" = torch.ops.aten.squeeze.dims(getitem_608, [0, 2, 3]);  getitem_608 = None
    mul_2255: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_914, 1.0025575447570332);  squeeze_914 = None
    mul_2256: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2255, 0.1);  mul_2255 = None
    mul_2257: "f32[144]" = torch.ops.aten.mul.Tensor(primals_1895, 0.9)
    add_1815: "f32[144]" = torch.ops.aten.add.Tensor(mul_2256, mul_2257);  mul_2256 = mul_2257 = None
    unsqueeze_1247: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_914, -1)
    unsqueeze_1248: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1247, -1);  unsqueeze_1247 = None
    mul_2258: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2252, unsqueeze_1248);  mul_2252 = unsqueeze_1248 = None
    unsqueeze_1249: "f32[144, 1]" = torch.ops.aten.unsqueeze.default(primals_915, -1);  primals_915 = None
    unsqueeze_1250: "f32[144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1249, -1);  unsqueeze_1249 = None
    add_1816: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(mul_2258, unsqueeze_1250);  mul_2258 = unsqueeze_1250 = None
    add_1817: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1811, add_1816);  add_1811 = add_1816 = None
    add_1818: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1817, relu_259);  add_1817 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    relu_267: "f32[8, 144, 7, 7]" = torch.ops.aten.relu.default(add_1818);  add_1818 = None
    alias_267: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_267)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_305: "f32[8, 32, 56, 56]" = torch.ops.aten.convolution.default(relu_260, primals_916, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_1819: "i64[]" = torch.ops.aten.add.Tensor(primals_1899, 1)
    var_mean_305 = torch.ops.aten.var_mean.correction(convolution_305, [0, 2, 3], correction = 0, keepdim = True)
    getitem_610: "f32[1, 32, 1, 1]" = var_mean_305[0]
    getitem_611: "f32[1, 32, 1, 1]" = var_mean_305[1];  var_mean_305 = None
    add_1820: "f32[1, 32, 1, 1]" = torch.ops.aten.add.Tensor(getitem_610, 1e-05)
    rsqrt_305: "f32[1, 32, 1, 1]" = torch.ops.aten.rsqrt.default(add_1820);  add_1820 = None
    sub_305: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_305, getitem_611)
    mul_2259: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_305, rsqrt_305);  sub_305 = None
    squeeze_915: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_611, [0, 2, 3]);  getitem_611 = None
    squeeze_916: "f32[32]" = torch.ops.aten.squeeze.dims(rsqrt_305, [0, 2, 3]);  rsqrt_305 = None
    mul_2260: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_915, 0.1)
    mul_2261: "f32[32]" = torch.ops.aten.mul.Tensor(primals_1897, 0.9)
    add_1821: "f32[32]" = torch.ops.aten.add.Tensor(mul_2260, mul_2261);  mul_2260 = mul_2261 = None
    squeeze_917: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_610, [0, 2, 3]);  getitem_610 = None
    mul_2262: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_917, 1.0000398612827361);  squeeze_917 = None
    mul_2263: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2262, 0.1);  mul_2262 = None
    mul_2264: "f32[32]" = torch.ops.aten.mul.Tensor(primals_1898, 0.9)
    add_1822: "f32[32]" = torch.ops.aten.add.Tensor(mul_2263, mul_2264);  mul_2263 = mul_2264 = None
    unsqueeze_1251: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_917, -1)
    unsqueeze_1252: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1251, -1);  unsqueeze_1251 = None
    mul_2265: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(mul_2259, unsqueeze_1252);  mul_2259 = unsqueeze_1252 = None
    unsqueeze_1253: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_918, -1);  primals_918 = None
    unsqueeze_1254: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1253, -1);  unsqueeze_1253 = None
    add_1823: "f32[8, 32, 56, 56]" = torch.ops.aten.add.Tensor(mul_2265, unsqueeze_1254);  mul_2265 = unsqueeze_1254 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_268: "f32[8, 32, 56, 56]" = torch.ops.aten.relu.default(add_1823);  add_1823 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_306: "f32[8, 32, 56, 56]" = torch.ops.aten.convolution.default(relu_268, primals_919, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_1824: "i64[]" = torch.ops.aten.add.Tensor(primals_1902, 1)
    var_mean_306 = torch.ops.aten.var_mean.correction(convolution_306, [0, 2, 3], correction = 0, keepdim = True)
    getitem_612: "f32[1, 32, 1, 1]" = var_mean_306[0]
    getitem_613: "f32[1, 32, 1, 1]" = var_mean_306[1];  var_mean_306 = None
    add_1825: "f32[1, 32, 1, 1]" = torch.ops.aten.add.Tensor(getitem_612, 1e-05)
    rsqrt_306: "f32[1, 32, 1, 1]" = torch.ops.aten.rsqrt.default(add_1825);  add_1825 = None
    sub_306: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_306, getitem_613)
    mul_2266: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_306, rsqrt_306);  sub_306 = None
    squeeze_918: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_613, [0, 2, 3]);  getitem_613 = None
    squeeze_919: "f32[32]" = torch.ops.aten.squeeze.dims(rsqrt_306, [0, 2, 3]);  rsqrt_306 = None
    mul_2267: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_918, 0.1)
    mul_2268: "f32[32]" = torch.ops.aten.mul.Tensor(primals_1900, 0.9)
    add_1826: "f32[32]" = torch.ops.aten.add.Tensor(mul_2267, mul_2268);  mul_2267 = mul_2268 = None
    squeeze_920: "f32[32]" = torch.ops.aten.squeeze.dims(getitem_612, [0, 2, 3]);  getitem_612 = None
    mul_2269: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_920, 1.0000398612827361);  squeeze_920 = None
    mul_2270: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2269, 0.1);  mul_2269 = None
    mul_2271: "f32[32]" = torch.ops.aten.mul.Tensor(primals_1901, 0.9)
    add_1827: "f32[32]" = torch.ops.aten.add.Tensor(mul_2270, mul_2271);  mul_2270 = mul_2271 = None
    unsqueeze_1255: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_920, -1)
    unsqueeze_1256: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1255, -1);  unsqueeze_1255 = None
    mul_2272: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(mul_2266, unsqueeze_1256);  mul_2266 = unsqueeze_1256 = None
    unsqueeze_1257: "f32[32, 1]" = torch.ops.aten.unsqueeze.default(primals_921, -1);  primals_921 = None
    unsqueeze_1258: "f32[32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1257, -1);  unsqueeze_1257 = None
    add_1828: "f32[8, 32, 56, 56]" = torch.ops.aten.add.Tensor(mul_2272, unsqueeze_1258);  mul_2272 = unsqueeze_1258 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_269: "f32[8, 32, 56, 56]" = torch.ops.aten.relu.default(add_1828);  add_1828 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_307: "f32[8, 128, 56, 56]" = torch.ops.aten.convolution.default(relu_269, primals_922, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_1829: "i64[]" = torch.ops.aten.add.Tensor(primals_1905, 1)
    var_mean_307 = torch.ops.aten.var_mean.correction(convolution_307, [0, 2, 3], correction = 0, keepdim = True)
    getitem_614: "f32[1, 128, 1, 1]" = var_mean_307[0]
    getitem_615: "f32[1, 128, 1, 1]" = var_mean_307[1];  var_mean_307 = None
    add_1830: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_614, 1e-05)
    rsqrt_307: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_1830);  add_1830 = None
    sub_307: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_307, getitem_615)
    mul_2273: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_307, rsqrt_307);  sub_307 = None
    squeeze_921: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_615, [0, 2, 3]);  getitem_615 = None
    squeeze_922: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_307, [0, 2, 3]);  rsqrt_307 = None
    mul_2274: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_921, 0.1)
    mul_2275: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1903, 0.9)
    add_1831: "f32[128]" = torch.ops.aten.add.Tensor(mul_2274, mul_2275);  mul_2274 = mul_2275 = None
    squeeze_923: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_614, [0, 2, 3]);  getitem_614 = None
    mul_2276: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_923, 1.0000398612827361);  squeeze_923 = None
    mul_2277: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2276, 0.1);  mul_2276 = None
    mul_2278: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1904, 0.9)
    add_1832: "f32[128]" = torch.ops.aten.add.Tensor(mul_2277, mul_2278);  mul_2277 = mul_2278 = None
    unsqueeze_1259: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_923, -1)
    unsqueeze_1260: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1259, -1);  unsqueeze_1259 = None
    mul_2279: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(mul_2273, unsqueeze_1260);  mul_2273 = unsqueeze_1260 = None
    unsqueeze_1261: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_924, -1);  primals_924 = None
    unsqueeze_1262: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1261, -1);  unsqueeze_1261 = None
    add_1833: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(mul_2279, unsqueeze_1262);  mul_2279 = unsqueeze_1262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_308: "f32[8, 128, 56, 56]" = torch.ops.aten.convolution.default(relu_260, primals_925, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1834: "i64[]" = torch.ops.aten.add.Tensor(primals_1908, 1)
    var_mean_308 = torch.ops.aten.var_mean.correction(convolution_308, [0, 2, 3], correction = 0, keepdim = True)
    getitem_616: "f32[1, 128, 1, 1]" = var_mean_308[0]
    getitem_617: "f32[1, 128, 1, 1]" = var_mean_308[1];  var_mean_308 = None
    add_1835: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_616, 1e-05)
    rsqrt_308: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_1835);  add_1835 = None
    sub_308: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_308, getitem_617)
    mul_2280: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_308, rsqrt_308);  sub_308 = None
    squeeze_924: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_617, [0, 2, 3]);  getitem_617 = None
    squeeze_925: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_308, [0, 2, 3]);  rsqrt_308 = None
    mul_2281: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_924, 0.1)
    mul_2282: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1906, 0.9)
    add_1836: "f32[128]" = torch.ops.aten.add.Tensor(mul_2281, mul_2282);  mul_2281 = mul_2282 = None
    squeeze_926: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_616, [0, 2, 3]);  getitem_616 = None
    mul_2283: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_926, 1.0000398612827361);  squeeze_926 = None
    mul_2284: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2283, 0.1);  mul_2283 = None
    mul_2285: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1907, 0.9)
    add_1837: "f32[128]" = torch.ops.aten.add.Tensor(mul_2284, mul_2285);  mul_2284 = mul_2285 = None
    unsqueeze_1263: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_926, -1)
    unsqueeze_1264: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1263, -1);  unsqueeze_1263 = None
    mul_2286: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(mul_2280, unsqueeze_1264);  mul_2280 = unsqueeze_1264 = None
    unsqueeze_1265: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_927, -1);  primals_927 = None
    unsqueeze_1266: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1265, -1);  unsqueeze_1265 = None
    add_1838: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(mul_2286, unsqueeze_1266);  mul_2286 = unsqueeze_1266 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_1839: "f32[8, 128, 56, 56]" = torch.ops.aten.add.Tensor(add_1833, add_1838);  add_1833 = add_1838 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_270: "f32[8, 128, 56, 56]" = torch.ops.aten.relu.default(add_1839);  add_1839 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_309: "f32[8, 64, 28, 28]" = torch.ops.aten.convolution.default(relu_261, primals_928, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_1840: "i64[]" = torch.ops.aten.add.Tensor(primals_1911, 1)
    var_mean_309 = torch.ops.aten.var_mean.correction(convolution_309, [0, 2, 3], correction = 0, keepdim = True)
    getitem_618: "f32[1, 64, 1, 1]" = var_mean_309[0]
    getitem_619: "f32[1, 64, 1, 1]" = var_mean_309[1];  var_mean_309 = None
    add_1841: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_618, 1e-05)
    rsqrt_309: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_1841);  add_1841 = None
    sub_309: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_309, getitem_619)
    mul_2287: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_309, rsqrt_309);  sub_309 = None
    squeeze_927: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_619, [0, 2, 3]);  getitem_619 = None
    squeeze_928: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_309, [0, 2, 3]);  rsqrt_309 = None
    mul_2288: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_927, 0.1)
    mul_2289: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1909, 0.9)
    add_1842: "f32[64]" = torch.ops.aten.add.Tensor(mul_2288, mul_2289);  mul_2288 = mul_2289 = None
    squeeze_929: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_618, [0, 2, 3]);  getitem_618 = None
    mul_2290: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_929, 1.0001594642002871);  squeeze_929 = None
    mul_2291: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2290, 0.1);  mul_2290 = None
    mul_2292: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1910, 0.9)
    add_1843: "f32[64]" = torch.ops.aten.add.Tensor(mul_2291, mul_2292);  mul_2291 = mul_2292 = None
    unsqueeze_1267: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_929, -1)
    unsqueeze_1268: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1267, -1);  unsqueeze_1267 = None
    mul_2293: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2287, unsqueeze_1268);  mul_2287 = unsqueeze_1268 = None
    unsqueeze_1269: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_930, -1);  primals_930 = None
    unsqueeze_1270: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1269, -1);  unsqueeze_1269 = None
    add_1844: "f32[8, 64, 28, 28]" = torch.ops.aten.add.Tensor(mul_2293, unsqueeze_1270);  mul_2293 = unsqueeze_1270 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_271: "f32[8, 64, 28, 28]" = torch.ops.aten.relu.default(add_1844);  add_1844 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_310: "f32[8, 64, 28, 28]" = torch.ops.aten.convolution.default(relu_271, primals_931, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_1845: "i64[]" = torch.ops.aten.add.Tensor(primals_1914, 1)
    var_mean_310 = torch.ops.aten.var_mean.correction(convolution_310, [0, 2, 3], correction = 0, keepdim = True)
    getitem_620: "f32[1, 64, 1, 1]" = var_mean_310[0]
    getitem_621: "f32[1, 64, 1, 1]" = var_mean_310[1];  var_mean_310 = None
    add_1846: "f32[1, 64, 1, 1]" = torch.ops.aten.add.Tensor(getitem_620, 1e-05)
    rsqrt_310: "f32[1, 64, 1, 1]" = torch.ops.aten.rsqrt.default(add_1846);  add_1846 = None
    sub_310: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_310, getitem_621)
    mul_2294: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_310, rsqrt_310);  sub_310 = None
    squeeze_930: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_621, [0, 2, 3]);  getitem_621 = None
    squeeze_931: "f32[64]" = torch.ops.aten.squeeze.dims(rsqrt_310, [0, 2, 3]);  rsqrt_310 = None
    mul_2295: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_930, 0.1)
    mul_2296: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1912, 0.9)
    add_1847: "f32[64]" = torch.ops.aten.add.Tensor(mul_2295, mul_2296);  mul_2295 = mul_2296 = None
    squeeze_932: "f32[64]" = torch.ops.aten.squeeze.dims(getitem_620, [0, 2, 3]);  getitem_620 = None
    mul_2297: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_932, 1.0001594642002871);  squeeze_932 = None
    mul_2298: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2297, 0.1);  mul_2297 = None
    mul_2299: "f32[64]" = torch.ops.aten.mul.Tensor(primals_1913, 0.9)
    add_1848: "f32[64]" = torch.ops.aten.add.Tensor(mul_2298, mul_2299);  mul_2298 = mul_2299 = None
    unsqueeze_1271: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_932, -1)
    unsqueeze_1272: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1271, -1);  unsqueeze_1271 = None
    mul_2300: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2294, unsqueeze_1272);  mul_2294 = unsqueeze_1272 = None
    unsqueeze_1273: "f32[64, 1]" = torch.ops.aten.unsqueeze.default(primals_933, -1);  primals_933 = None
    unsqueeze_1274: "f32[64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1273, -1);  unsqueeze_1273 = None
    add_1849: "f32[8, 64, 28, 28]" = torch.ops.aten.add.Tensor(mul_2300, unsqueeze_1274);  mul_2300 = unsqueeze_1274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_272: "f32[8, 64, 28, 28]" = torch.ops.aten.relu.default(add_1849);  add_1849 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_311: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_272, primals_934, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_1850: "i64[]" = torch.ops.aten.add.Tensor(primals_1917, 1)
    var_mean_311 = torch.ops.aten.var_mean.correction(convolution_311, [0, 2, 3], correction = 0, keepdim = True)
    getitem_622: "f32[1, 256, 1, 1]" = var_mean_311[0]
    getitem_623: "f32[1, 256, 1, 1]" = var_mean_311[1];  var_mean_311 = None
    add_1851: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_622, 1e-05)
    rsqrt_311: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_1851);  add_1851 = None
    sub_311: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_311, getitem_623)
    mul_2301: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_311, rsqrt_311);  sub_311 = None
    squeeze_933: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_623, [0, 2, 3]);  getitem_623 = None
    squeeze_934: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_311, [0, 2, 3]);  rsqrt_311 = None
    mul_2302: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_933, 0.1)
    mul_2303: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1915, 0.9)
    add_1852: "f32[256]" = torch.ops.aten.add.Tensor(mul_2302, mul_2303);  mul_2302 = mul_2303 = None
    squeeze_935: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_622, [0, 2, 3]);  getitem_622 = None
    mul_2304: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_935, 1.0001594642002871);  squeeze_935 = None
    mul_2305: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2304, 0.1);  mul_2304 = None
    mul_2306: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1916, 0.9)
    add_1853: "f32[256]" = torch.ops.aten.add.Tensor(mul_2305, mul_2306);  mul_2305 = mul_2306 = None
    unsqueeze_1275: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_935, -1)
    unsqueeze_1276: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1275, -1);  unsqueeze_1275 = None
    mul_2307: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2301, unsqueeze_1276);  mul_2301 = unsqueeze_1276 = None
    unsqueeze_1277: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_936, -1);  primals_936 = None
    unsqueeze_1278: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1277, -1);  unsqueeze_1277 = None
    add_1854: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_2307, unsqueeze_1278);  mul_2307 = unsqueeze_1278 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_312: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_261, primals_937, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1855: "i64[]" = torch.ops.aten.add.Tensor(primals_1920, 1)
    var_mean_312 = torch.ops.aten.var_mean.correction(convolution_312, [0, 2, 3], correction = 0, keepdim = True)
    getitem_624: "f32[1, 256, 1, 1]" = var_mean_312[0]
    getitem_625: "f32[1, 256, 1, 1]" = var_mean_312[1];  var_mean_312 = None
    add_1856: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_624, 1e-05)
    rsqrt_312: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_1856);  add_1856 = None
    sub_312: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_312, getitem_625)
    mul_2308: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_312, rsqrt_312);  sub_312 = None
    squeeze_936: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_625, [0, 2, 3]);  getitem_625 = None
    squeeze_937: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_312, [0, 2, 3]);  rsqrt_312 = None
    mul_2309: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_936, 0.1)
    mul_2310: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1918, 0.9)
    add_1857: "f32[256]" = torch.ops.aten.add.Tensor(mul_2309, mul_2310);  mul_2309 = mul_2310 = None
    squeeze_938: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_624, [0, 2, 3]);  getitem_624 = None
    mul_2311: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_938, 1.0001594642002871);  squeeze_938 = None
    mul_2312: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2311, 0.1);  mul_2311 = None
    mul_2313: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1919, 0.9)
    add_1858: "f32[256]" = torch.ops.aten.add.Tensor(mul_2312, mul_2313);  mul_2312 = mul_2313 = None
    unsqueeze_1279: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_938, -1)
    unsqueeze_1280: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1279, -1);  unsqueeze_1279 = None
    mul_2314: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2308, unsqueeze_1280);  mul_2308 = unsqueeze_1280 = None
    unsqueeze_1281: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_939, -1);  primals_939 = None
    unsqueeze_1282: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1281, -1);  unsqueeze_1281 = None
    add_1859: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_2314, unsqueeze_1282);  mul_2314 = unsqueeze_1282 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_1860: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(add_1854, add_1859);  add_1854 = add_1859 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_273: "f32[8, 256, 28, 28]" = torch.ops.aten.relu.default(add_1860);  add_1860 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_313: "f32[8, 256, 28, 28]" = torch.ops.aten.convolution.default(relu_270, primals_940, primals_941, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  primals_941 = None
    add_1861: "i64[]" = torch.ops.aten.add.Tensor(primals_1923, 1)
    var_mean_313 = torch.ops.aten.var_mean.correction(convolution_313, [0, 2, 3], correction = 0, keepdim = True)
    getitem_626: "f32[1, 256, 1, 1]" = var_mean_313[0]
    getitem_627: "f32[1, 256, 1, 1]" = var_mean_313[1];  var_mean_313 = None
    add_1862: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_626, 1e-05)
    rsqrt_313: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_1862);  add_1862 = None
    sub_313: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_313, getitem_627)
    mul_2315: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_313, rsqrt_313);  sub_313 = None
    squeeze_939: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_627, [0, 2, 3]);  getitem_627 = None
    squeeze_940: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_313, [0, 2, 3]);  rsqrt_313 = None
    mul_2316: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_939, 0.1)
    mul_2317: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1921, 0.9)
    add_1863: "f32[256]" = torch.ops.aten.add.Tensor(mul_2316, mul_2317);  mul_2316 = mul_2317 = None
    squeeze_941: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_626, [0, 2, 3]);  getitem_626 = None
    mul_2318: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_941, 1.0001594642002871);  squeeze_941 = None
    mul_2319: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2318, 0.1);  mul_2318 = None
    mul_2320: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1922, 0.9)
    add_1864: "f32[256]" = torch.ops.aten.add.Tensor(mul_2319, mul_2320);  mul_2319 = mul_2320 = None
    unsqueeze_1283: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_942, -1)
    unsqueeze_1284: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1283, -1);  unsqueeze_1283 = None
    mul_2321: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(mul_2315, unsqueeze_1284);  mul_2315 = unsqueeze_1284 = None
    unsqueeze_1285: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_943, -1);  primals_943 = None
    unsqueeze_1286: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1285, -1);  unsqueeze_1285 = None
    add_1865: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(mul_2321, unsqueeze_1286);  mul_2321 = unsqueeze_1286 = None
    relu_274: "f32[8, 256, 28, 28]" = torch.ops.aten.relu.default(add_1865);  add_1865 = None
    add_1866: "f32[8, 256, 28, 28]" = torch.ops.aten.add.Tensor(relu_273, relu_274)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_314: "f32[8, 128, 14, 14]" = torch.ops.aten.convolution.default(relu_263, primals_944, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_1867: "i64[]" = torch.ops.aten.add.Tensor(primals_1926, 1)
    var_mean_314 = torch.ops.aten.var_mean.correction(convolution_314, [0, 2, 3], correction = 0, keepdim = True)
    getitem_628: "f32[1, 128, 1, 1]" = var_mean_314[0]
    getitem_629: "f32[1, 128, 1, 1]" = var_mean_314[1];  var_mean_314 = None
    add_1868: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_628, 1e-05)
    rsqrt_314: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_1868);  add_1868 = None
    sub_314: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_314, getitem_629)
    mul_2322: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_314, rsqrt_314);  sub_314 = None
    squeeze_942: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_629, [0, 2, 3]);  getitem_629 = None
    squeeze_943: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_314, [0, 2, 3]);  rsqrt_314 = None
    mul_2323: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_942, 0.1)
    mul_2324: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1924, 0.9)
    add_1869: "f32[128]" = torch.ops.aten.add.Tensor(mul_2323, mul_2324);  mul_2323 = mul_2324 = None
    squeeze_944: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_628, [0, 2, 3]);  getitem_628 = None
    mul_2325: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_944, 1.0006381620931717);  squeeze_944 = None
    mul_2326: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2325, 0.1);  mul_2325 = None
    mul_2327: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1925, 0.9)
    add_1870: "f32[128]" = torch.ops.aten.add.Tensor(mul_2326, mul_2327);  mul_2326 = mul_2327 = None
    unsqueeze_1287: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_945, -1)
    unsqueeze_1288: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1287, -1);  unsqueeze_1287 = None
    mul_2328: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2322, unsqueeze_1288);  mul_2322 = unsqueeze_1288 = None
    unsqueeze_1289: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_946, -1);  primals_946 = None
    unsqueeze_1290: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1289, -1);  unsqueeze_1289 = None
    add_1871: "f32[8, 128, 14, 14]" = torch.ops.aten.add.Tensor(mul_2328, unsqueeze_1290);  mul_2328 = unsqueeze_1290 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_275: "f32[8, 128, 14, 14]" = torch.ops.aten.relu.default(add_1871);  add_1871 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_315: "f32[8, 128, 14, 14]" = torch.ops.aten.convolution.default(relu_275, primals_947, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_1872: "i64[]" = torch.ops.aten.add.Tensor(primals_1929, 1)
    var_mean_315 = torch.ops.aten.var_mean.correction(convolution_315, [0, 2, 3], correction = 0, keepdim = True)
    getitem_630: "f32[1, 128, 1, 1]" = var_mean_315[0]
    getitem_631: "f32[1, 128, 1, 1]" = var_mean_315[1];  var_mean_315 = None
    add_1873: "f32[1, 128, 1, 1]" = torch.ops.aten.add.Tensor(getitem_630, 1e-05)
    rsqrt_315: "f32[1, 128, 1, 1]" = torch.ops.aten.rsqrt.default(add_1873);  add_1873 = None
    sub_315: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_315, getitem_631)
    mul_2329: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_315, rsqrt_315);  sub_315 = None
    squeeze_945: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_631, [0, 2, 3]);  getitem_631 = None
    squeeze_946: "f32[128]" = torch.ops.aten.squeeze.dims(rsqrt_315, [0, 2, 3]);  rsqrt_315 = None
    mul_2330: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_945, 0.1)
    mul_2331: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1927, 0.9)
    add_1874: "f32[128]" = torch.ops.aten.add.Tensor(mul_2330, mul_2331);  mul_2330 = mul_2331 = None
    squeeze_947: "f32[128]" = torch.ops.aten.squeeze.dims(getitem_630, [0, 2, 3]);  getitem_630 = None
    mul_2332: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_947, 1.0006381620931717);  squeeze_947 = None
    mul_2333: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2332, 0.1);  mul_2332 = None
    mul_2334: "f32[128]" = torch.ops.aten.mul.Tensor(primals_1928, 0.9)
    add_1875: "f32[128]" = torch.ops.aten.add.Tensor(mul_2333, mul_2334);  mul_2333 = mul_2334 = None
    unsqueeze_1291: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_948, -1)
    unsqueeze_1292: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1291, -1);  unsqueeze_1291 = None
    mul_2335: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2329, unsqueeze_1292);  mul_2329 = unsqueeze_1292 = None
    unsqueeze_1293: "f32[128, 1]" = torch.ops.aten.unsqueeze.default(primals_949, -1);  primals_949 = None
    unsqueeze_1294: "f32[128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1293, -1);  unsqueeze_1293 = None
    add_1876: "f32[8, 128, 14, 14]" = torch.ops.aten.add.Tensor(mul_2335, unsqueeze_1294);  mul_2335 = unsqueeze_1294 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_276: "f32[8, 128, 14, 14]" = torch.ops.aten.relu.default(add_1876);  add_1876 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_316: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(relu_276, primals_950, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_1877: "i64[]" = torch.ops.aten.add.Tensor(primals_1932, 1)
    var_mean_316 = torch.ops.aten.var_mean.correction(convolution_316, [0, 2, 3], correction = 0, keepdim = True)
    getitem_632: "f32[1, 512, 1, 1]" = var_mean_316[0]
    getitem_633: "f32[1, 512, 1, 1]" = var_mean_316[1];  var_mean_316 = None
    add_1878: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_632, 1e-05)
    rsqrt_316: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_1878);  add_1878 = None
    sub_316: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_316, getitem_633)
    mul_2336: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_316, rsqrt_316);  sub_316 = None
    squeeze_948: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_633, [0, 2, 3]);  getitem_633 = None
    squeeze_949: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_316, [0, 2, 3]);  rsqrt_316 = None
    mul_2337: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_948, 0.1)
    mul_2338: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1930, 0.9)
    add_1879: "f32[512]" = torch.ops.aten.add.Tensor(mul_2337, mul_2338);  mul_2337 = mul_2338 = None
    squeeze_950: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_632, [0, 2, 3]);  getitem_632 = None
    mul_2339: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_950, 1.0006381620931717);  squeeze_950 = None
    mul_2340: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2339, 0.1);  mul_2339 = None
    mul_2341: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1931, 0.9)
    add_1880: "f32[512]" = torch.ops.aten.add.Tensor(mul_2340, mul_2341);  mul_2340 = mul_2341 = None
    unsqueeze_1295: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_951, -1)
    unsqueeze_1296: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1295, -1);  unsqueeze_1295 = None
    mul_2342: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2336, unsqueeze_1296);  mul_2336 = unsqueeze_1296 = None
    unsqueeze_1297: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_952, -1);  primals_952 = None
    unsqueeze_1298: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1297, -1);  unsqueeze_1297 = None
    add_1881: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_2342, unsqueeze_1298);  mul_2342 = unsqueeze_1298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_317: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(relu_263, primals_953, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1882: "i64[]" = torch.ops.aten.add.Tensor(primals_1935, 1)
    var_mean_317 = torch.ops.aten.var_mean.correction(convolution_317, [0, 2, 3], correction = 0, keepdim = True)
    getitem_634: "f32[1, 512, 1, 1]" = var_mean_317[0]
    getitem_635: "f32[1, 512, 1, 1]" = var_mean_317[1];  var_mean_317 = None
    add_1883: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_634, 1e-05)
    rsqrt_317: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_1883);  add_1883 = None
    sub_317: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_317, getitem_635)
    mul_2343: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_317, rsqrt_317);  sub_317 = None
    squeeze_951: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_635, [0, 2, 3]);  getitem_635 = None
    squeeze_952: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_317, [0, 2, 3]);  rsqrt_317 = None
    mul_2344: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_951, 0.1)
    mul_2345: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1933, 0.9)
    add_1884: "f32[512]" = torch.ops.aten.add.Tensor(mul_2344, mul_2345);  mul_2344 = mul_2345 = None
    squeeze_953: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_634, [0, 2, 3]);  getitem_634 = None
    mul_2346: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_953, 1.0006381620931717);  squeeze_953 = None
    mul_2347: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2346, 0.1);  mul_2346 = None
    mul_2348: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1934, 0.9)
    add_1885: "f32[512]" = torch.ops.aten.add.Tensor(mul_2347, mul_2348);  mul_2347 = mul_2348 = None
    unsqueeze_1299: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_954, -1)
    unsqueeze_1300: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1299, -1);  unsqueeze_1299 = None
    mul_2349: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2343, unsqueeze_1300);  mul_2343 = unsqueeze_1300 = None
    unsqueeze_1301: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_955, -1);  primals_955 = None
    unsqueeze_1302: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1301, -1);  unsqueeze_1301 = None
    add_1886: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_2349, unsqueeze_1302);  mul_2349 = unsqueeze_1302 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_1887: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(add_1881, add_1886);  add_1881 = add_1886 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_277: "f32[8, 512, 14, 14]" = torch.ops.aten.relu.default(add_1887);  add_1887 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_318: "f32[8, 512, 14, 14]" = torch.ops.aten.convolution.default(add_1866, primals_956, primals_957, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  primals_957 = None
    add_1888: "i64[]" = torch.ops.aten.add.Tensor(primals_1938, 1)
    var_mean_318 = torch.ops.aten.var_mean.correction(convolution_318, [0, 2, 3], correction = 0, keepdim = True)
    getitem_636: "f32[1, 512, 1, 1]" = var_mean_318[0]
    getitem_637: "f32[1, 512, 1, 1]" = var_mean_318[1];  var_mean_318 = None
    add_1889: "f32[1, 512, 1, 1]" = torch.ops.aten.add.Tensor(getitem_636, 1e-05)
    rsqrt_318: "f32[1, 512, 1, 1]" = torch.ops.aten.rsqrt.default(add_1889);  add_1889 = None
    sub_318: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_318, getitem_637)
    mul_2350: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_318, rsqrt_318);  sub_318 = None
    squeeze_954: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_637, [0, 2, 3]);  getitem_637 = None
    squeeze_955: "f32[512]" = torch.ops.aten.squeeze.dims(rsqrt_318, [0, 2, 3]);  rsqrt_318 = None
    mul_2351: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_954, 0.1)
    mul_2352: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1936, 0.9)
    add_1890: "f32[512]" = torch.ops.aten.add.Tensor(mul_2351, mul_2352);  mul_2351 = mul_2352 = None
    squeeze_956: "f32[512]" = torch.ops.aten.squeeze.dims(getitem_636, [0, 2, 3]);  getitem_636 = None
    mul_2353: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_956, 1.0006381620931717);  squeeze_956 = None
    mul_2354: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2353, 0.1);  mul_2353 = None
    mul_2355: "f32[512]" = torch.ops.aten.mul.Tensor(primals_1937, 0.9)
    add_1891: "f32[512]" = torch.ops.aten.add.Tensor(mul_2354, mul_2355);  mul_2354 = mul_2355 = None
    unsqueeze_1303: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_958, -1)
    unsqueeze_1304: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1303, -1);  unsqueeze_1303 = None
    mul_2356: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(mul_2350, unsqueeze_1304);  mul_2350 = unsqueeze_1304 = None
    unsqueeze_1305: "f32[512, 1]" = torch.ops.aten.unsqueeze.default(primals_959, -1);  primals_959 = None
    unsqueeze_1306: "f32[512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1305, -1);  unsqueeze_1305 = None
    add_1892: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(mul_2356, unsqueeze_1306);  mul_2356 = unsqueeze_1306 = None
    relu_278: "f32[8, 512, 14, 14]" = torch.ops.aten.relu.default(add_1892);  add_1892 = None
    add_1893: "f32[8, 512, 14, 14]" = torch.ops.aten.add.Tensor(relu_277, relu_278)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_319: "f32[8, 256, 7, 7]" = torch.ops.aten.convolution.default(relu_267, primals_960, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    add_1894: "i64[]" = torch.ops.aten.add.Tensor(primals_1941, 1)
    var_mean_319 = torch.ops.aten.var_mean.correction(convolution_319, [0, 2, 3], correction = 0, keepdim = True)
    getitem_638: "f32[1, 256, 1, 1]" = var_mean_319[0]
    getitem_639: "f32[1, 256, 1, 1]" = var_mean_319[1];  var_mean_319 = None
    add_1895: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_638, 1e-05)
    rsqrt_319: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_1895);  add_1895 = None
    sub_319: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_319, getitem_639)
    mul_2357: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_319, rsqrt_319);  sub_319 = None
    squeeze_957: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_639, [0, 2, 3]);  getitem_639 = None
    squeeze_958: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_319, [0, 2, 3]);  rsqrt_319 = None
    mul_2358: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_957, 0.1)
    mul_2359: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1939, 0.9)
    add_1896: "f32[256]" = torch.ops.aten.add.Tensor(mul_2358, mul_2359);  mul_2358 = mul_2359 = None
    squeeze_959: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_638, [0, 2, 3]);  getitem_638 = None
    mul_2360: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_959, 1.0025575447570332);  squeeze_959 = None
    mul_2361: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2360, 0.1);  mul_2360 = None
    mul_2362: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1940, 0.9)
    add_1897: "f32[256]" = torch.ops.aten.add.Tensor(mul_2361, mul_2362);  mul_2361 = mul_2362 = None
    unsqueeze_1307: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_961, -1)
    unsqueeze_1308: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1307, -1);  unsqueeze_1307 = None
    mul_2363: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2357, unsqueeze_1308);  mul_2357 = unsqueeze_1308 = None
    unsqueeze_1309: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_962, -1);  primals_962 = None
    unsqueeze_1310: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1309, -1);  unsqueeze_1309 = None
    add_1898: "f32[8, 256, 7, 7]" = torch.ops.aten.add.Tensor(mul_2363, unsqueeze_1310);  mul_2363 = unsqueeze_1310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    relu_279: "f32[8, 256, 7, 7]" = torch.ops.aten.relu.default(add_1898);  add_1898 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_320: "f32[8, 256, 7, 7]" = torch.ops.aten.convolution.default(relu_279, primals_963, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    add_1899: "i64[]" = torch.ops.aten.add.Tensor(primals_1944, 1)
    var_mean_320 = torch.ops.aten.var_mean.correction(convolution_320, [0, 2, 3], correction = 0, keepdim = True)
    getitem_640: "f32[1, 256, 1, 1]" = var_mean_320[0]
    getitem_641: "f32[1, 256, 1, 1]" = var_mean_320[1];  var_mean_320 = None
    add_1900: "f32[1, 256, 1, 1]" = torch.ops.aten.add.Tensor(getitem_640, 1e-05)
    rsqrt_320: "f32[1, 256, 1, 1]" = torch.ops.aten.rsqrt.default(add_1900);  add_1900 = None
    sub_320: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_320, getitem_641)
    mul_2364: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_320, rsqrt_320);  sub_320 = None
    squeeze_960: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_641, [0, 2, 3]);  getitem_641 = None
    squeeze_961: "f32[256]" = torch.ops.aten.squeeze.dims(rsqrt_320, [0, 2, 3]);  rsqrt_320 = None
    mul_2365: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_960, 0.1)
    mul_2366: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1942, 0.9)
    add_1901: "f32[256]" = torch.ops.aten.add.Tensor(mul_2365, mul_2366);  mul_2365 = mul_2366 = None
    squeeze_962: "f32[256]" = torch.ops.aten.squeeze.dims(getitem_640, [0, 2, 3]);  getitem_640 = None
    mul_2367: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_962, 1.0025575447570332);  squeeze_962 = None
    mul_2368: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2367, 0.1);  mul_2367 = None
    mul_2369: "f32[256]" = torch.ops.aten.mul.Tensor(primals_1943, 0.9)
    add_1902: "f32[256]" = torch.ops.aten.add.Tensor(mul_2368, mul_2369);  mul_2368 = mul_2369 = None
    unsqueeze_1311: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_964, -1)
    unsqueeze_1312: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1311, -1);  unsqueeze_1311 = None
    mul_2370: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2364, unsqueeze_1312);  mul_2364 = unsqueeze_1312 = None
    unsqueeze_1313: "f32[256, 1]" = torch.ops.aten.unsqueeze.default(primals_965, -1);  primals_965 = None
    unsqueeze_1314: "f32[256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1313, -1);  unsqueeze_1313 = None
    add_1903: "f32[8, 256, 7, 7]" = torch.ops.aten.add.Tensor(mul_2370, unsqueeze_1314);  mul_2370 = unsqueeze_1314 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    relu_280: "f32[8, 256, 7, 7]" = torch.ops.aten.relu.default(add_1903);  add_1903 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_321: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(relu_280, primals_966, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    add_1904: "i64[]" = torch.ops.aten.add.Tensor(primals_1947, 1)
    var_mean_321 = torch.ops.aten.var_mean.correction(convolution_321, [0, 2, 3], correction = 0, keepdim = True)
    getitem_642: "f32[1, 1024, 1, 1]" = var_mean_321[0]
    getitem_643: "f32[1, 1024, 1, 1]" = var_mean_321[1];  var_mean_321 = None
    add_1905: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_642, 1e-05)
    rsqrt_321: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_1905);  add_1905 = None
    sub_321: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_321, getitem_643)
    mul_2371: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_321, rsqrt_321);  sub_321 = None
    squeeze_963: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_643, [0, 2, 3]);  getitem_643 = None
    squeeze_964: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_321, [0, 2, 3]);  rsqrt_321 = None
    mul_2372: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_963, 0.1)
    mul_2373: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1945, 0.9)
    add_1906: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2372, mul_2373);  mul_2372 = mul_2373 = None
    squeeze_965: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_642, [0, 2, 3]);  getitem_642 = None
    mul_2374: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_965, 1.0025575447570332);  squeeze_965 = None
    mul_2375: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2374, 0.1);  mul_2374 = None
    mul_2376: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1946, 0.9)
    add_1907: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2375, mul_2376);  mul_2375 = mul_2376 = None
    unsqueeze_1315: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_967, -1)
    unsqueeze_1316: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1315, -1);  unsqueeze_1315 = None
    mul_2377: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2371, unsqueeze_1316);  mul_2371 = unsqueeze_1316 = None
    unsqueeze_1317: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_968, -1);  primals_968 = None
    unsqueeze_1318: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1317, -1);  unsqueeze_1317 = None
    add_1908: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_2377, unsqueeze_1318);  mul_2377 = unsqueeze_1318 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    convolution_322: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(relu_267, primals_969, None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1)
    add_1909: "i64[]" = torch.ops.aten.add.Tensor(primals_1950, 1)
    var_mean_322 = torch.ops.aten.var_mean.correction(convolution_322, [0, 2, 3], correction = 0, keepdim = True)
    getitem_644: "f32[1, 1024, 1, 1]" = var_mean_322[0]
    getitem_645: "f32[1, 1024, 1, 1]" = var_mean_322[1];  var_mean_322 = None
    add_1910: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_644, 1e-05)
    rsqrt_322: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_1910);  add_1910 = None
    sub_322: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_322, getitem_645)
    mul_2378: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_322, rsqrt_322);  sub_322 = None
    squeeze_966: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_645, [0, 2, 3]);  getitem_645 = None
    squeeze_967: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_322, [0, 2, 3]);  rsqrt_322 = None
    mul_2379: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_966, 0.1)
    mul_2380: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1948, 0.9)
    add_1911: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2379, mul_2380);  mul_2379 = mul_2380 = None
    squeeze_968: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_644, [0, 2, 3]);  getitem_644 = None
    mul_2381: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_968, 1.0025575447570332);  squeeze_968 = None
    mul_2382: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2381, 0.1);  mul_2381 = None
    mul_2383: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1949, 0.9)
    add_1912: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2382, mul_2383);  mul_2382 = mul_2383 = None
    unsqueeze_1319: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_970, -1)
    unsqueeze_1320: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1319, -1);  unsqueeze_1319 = None
    mul_2384: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2378, unsqueeze_1320);  mul_2378 = unsqueeze_1320 = None
    unsqueeze_1321: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_971, -1);  primals_971 = None
    unsqueeze_1322: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1321, -1);  unsqueeze_1321 = None
    add_1913: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_2384, unsqueeze_1322);  mul_2384 = unsqueeze_1322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:201, code: x += shortcut
    add_1914: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(add_1908, add_1913);  add_1908 = add_1913 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    relu_281: "f32[8, 1024, 7, 7]" = torch.ops.aten.relu.default(add_1914);  add_1914 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    convolution_323: "f32[8, 1024, 7, 7]" = torch.ops.aten.convolution.default(add_1893, primals_972, primals_973, [2, 2], [1, 1], [1, 1], False, [0, 0], 1);  primals_973 = None
    add_1915: "i64[]" = torch.ops.aten.add.Tensor(primals_1953, 1)
    var_mean_323 = torch.ops.aten.var_mean.correction(convolution_323, [0, 2, 3], correction = 0, keepdim = True)
    getitem_646: "f32[1, 1024, 1, 1]" = var_mean_323[0]
    getitem_647: "f32[1, 1024, 1, 1]" = var_mean_323[1];  var_mean_323 = None
    add_1916: "f32[1, 1024, 1, 1]" = torch.ops.aten.add.Tensor(getitem_646, 1e-05)
    rsqrt_323: "f32[1, 1024, 1, 1]" = torch.ops.aten.rsqrt.default(add_1916);  add_1916 = None
    sub_323: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_323, getitem_647)
    mul_2385: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_323, rsqrt_323);  sub_323 = None
    squeeze_969: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_647, [0, 2, 3]);  getitem_647 = None
    squeeze_970: "f32[1024]" = torch.ops.aten.squeeze.dims(rsqrt_323, [0, 2, 3]);  rsqrt_323 = None
    mul_2386: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_969, 0.1)
    mul_2387: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1951, 0.9)
    add_1917: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2386, mul_2387);  mul_2386 = mul_2387 = None
    squeeze_971: "f32[1024]" = torch.ops.aten.squeeze.dims(getitem_646, [0, 2, 3]);  getitem_646 = None
    mul_2388: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_971, 1.0025575447570332);  squeeze_971 = None
    mul_2389: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2388, 0.1);  mul_2388 = None
    mul_2390: "f32[1024]" = torch.ops.aten.mul.Tensor(primals_1952, 0.9)
    add_1918: "f32[1024]" = torch.ops.aten.add.Tensor(mul_2389, mul_2390);  mul_2389 = mul_2390 = None
    unsqueeze_1323: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_974, -1)
    unsqueeze_1324: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1323, -1);  unsqueeze_1323 = None
    mul_2391: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2385, unsqueeze_1324);  mul_2385 = unsqueeze_1324 = None
    unsqueeze_1325: "f32[1024, 1]" = torch.ops.aten.unsqueeze.default(primals_975, -1);  primals_975 = None
    unsqueeze_1326: "f32[1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1325, -1);  unsqueeze_1325 = None
    add_1919: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(mul_2391, unsqueeze_1326);  mul_2391 = unsqueeze_1326 = None
    relu_282: "f32[8, 1024, 7, 7]" = torch.ops.aten.relu.default(add_1919);  add_1919 = None
    add_1920: "f32[8, 1024, 7, 7]" = torch.ops.aten.add.Tensor(relu_281, relu_282)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:782, code: y = self.final_layer(y)
    convolution_324: "f32[8, 2048, 7, 7]" = torch.ops.aten.convolution.default(add_1920, primals_976, primals_977, [1, 1], [0, 0], [1, 1], False, [0, 0], 1);  primals_977 = None
    add_1921: "i64[]" = torch.ops.aten.add.Tensor(primals_1956, 1)
    var_mean_324 = torch.ops.aten.var_mean.correction(convolution_324, [0, 2, 3], correction = 0, keepdim = True)
    getitem_648: "f32[1, 2048, 1, 1]" = var_mean_324[0]
    getitem_649: "f32[1, 2048, 1, 1]" = var_mean_324[1];  var_mean_324 = None
    add_1922: "f32[1, 2048, 1, 1]" = torch.ops.aten.add.Tensor(getitem_648, 1e-05)
    rsqrt_324: "f32[1, 2048, 1, 1]" = torch.ops.aten.rsqrt.default(add_1922);  add_1922 = None
    sub_324: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_324, getitem_649)
    mul_2392: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(sub_324, rsqrt_324);  sub_324 = None
    squeeze_972: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_649, [0, 2, 3]);  getitem_649 = None
    squeeze_973: "f32[2048]" = torch.ops.aten.squeeze.dims(rsqrt_324, [0, 2, 3]);  rsqrt_324 = None
    mul_2393: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_972, 0.1)
    mul_2394: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_1954, 0.9)
    add_1923: "f32[2048]" = torch.ops.aten.add.Tensor(mul_2393, mul_2394);  mul_2393 = mul_2394 = None
    squeeze_974: "f32[2048]" = torch.ops.aten.squeeze.dims(getitem_648, [0, 2, 3]);  getitem_648 = None
    mul_2395: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_974, 1.0025575447570332);  squeeze_974 = None
    mul_2396: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_2395, 0.1);  mul_2395 = None
    mul_2397: "f32[2048]" = torch.ops.aten.mul.Tensor(primals_1955, 0.9)
    add_1924: "f32[2048]" = torch.ops.aten.add.Tensor(mul_2396, mul_2397);  mul_2396 = mul_2397 = None
    unsqueeze_1327: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_978, -1)
    unsqueeze_1328: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1327, -1);  unsqueeze_1327 = None
    mul_2398: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(mul_2392, unsqueeze_1328);  mul_2392 = unsqueeze_1328 = None
    unsqueeze_1329: "f32[2048, 1]" = torch.ops.aten.unsqueeze.default(primals_979, -1);  primals_979 = None
    unsqueeze_1330: "f32[2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1329, -1);  unsqueeze_1329 = None
    add_1925: "f32[8, 2048, 7, 7]" = torch.ops.aten.add.Tensor(mul_2398, unsqueeze_1330);  mul_2398 = unsqueeze_1330 = None
    relu_283: "f32[8, 2048, 7, 7]" = torch.ops.aten.relu.default(add_1925);  add_1925 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:167, code: x = self.pool(x)
    mean: "f32[8, 2048, 1, 1]" = torch.ops.aten.mean.dim(relu_283, [-1, -2], True)
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:168, code: x = self.flatten(x)
    view: "f32[8, 2048]" = torch.ops.aten.view.default(mean, [8, 2048]);  mean = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:788, code: x = self.head_drop(x)
    clone: "f32[8, 2048]" = torch.ops.aten.clone.default(view);  view = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:789, code: return x if pre_logits else self.classifier(x)
    permute: "f32[2048, 1000]" = torch.ops.aten.permute.default(primals_980, [1, 0]);  primals_980 = None
    addmm: "f32[8, 1000]" = torch.ops.aten.addmm.default(primals_981, clone, permute);  primals_981 = None
    permute_1: "f32[1000, 2048]" = torch.ops.aten.permute.default(permute, [1, 0]);  permute = None
    mm: "f32[8, 2048]" = torch.ops.aten.mm.default(tangents_1, permute_1);  permute_1 = None
    permute_2: "f32[1000, 8]" = torch.ops.aten.permute.default(tangents_1, [1, 0])
    mm_1: "f32[1000, 2048]" = torch.ops.aten.mm.default(permute_2, clone);  permute_2 = clone = None
    permute_3: "f32[2048, 1000]" = torch.ops.aten.permute.default(mm_1, [1, 0]);  mm_1 = None
    sum_1: "f32[1, 1000]" = torch.ops.aten.sum.dim_IntList(tangents_1, [0], True);  tangents_1 = None
    view_1: "f32[1000]" = torch.ops.aten.view.default(sum_1, [1000]);  sum_1 = None
    permute_4: "f32[1000, 2048]" = torch.ops.aten.permute.default(permute_3, [1, 0]);  permute_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:168, code: x = self.flatten(x)
    view_2: "f32[8, 2048, 1, 1]" = torch.ops.aten.view.default(mm, [8, 2048, 1, 1]);  mm = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/layers/adaptive_avgmax_pool.py:167, code: x = self.pool(x)
    expand: "f32[8, 2048, 7, 7]" = torch.ops.aten.expand.default(view_2, [8, 2048, 7, 7]);  view_2 = None
    div: "f32[8, 2048, 7, 7]" = torch.ops.aten.div.Scalar(expand, 49);  expand = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:782, code: y = self.final_layer(y)
    alias_285: "f32[8, 2048, 7, 7]" = torch.ops.aten.alias.default(relu_283);  relu_283 = None
    alias_286: "f32[8, 2048, 7, 7]" = torch.ops.aten.alias.default(alias_285);  alias_285 = None
    le: "b8[8, 2048, 7, 7]" = torch.ops.aten.le.Scalar(alias_286, 0);  alias_286 = None
    scalar_tensor: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where: "f32[8, 2048, 7, 7]" = torch.ops.aten.where.self(le, scalar_tensor, div);  le = scalar_tensor = div = None
    unsqueeze_1331: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(squeeze_972, 0);  squeeze_972 = None
    unsqueeze_1332: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1331, 2);  unsqueeze_1331 = None
    unsqueeze_1333: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1332, 3);  unsqueeze_1332 = None
    sum_2: "f32[2048]" = torch.ops.aten.sum.dim_IntList(where, [0, 2, 3])
    sub_325: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_324, unsqueeze_1333)
    mul_2399: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(where, sub_325);  sub_325 = None
    sum_3: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_2399, [0, 2, 3]);  mul_2399 = None
    mul_2400: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_2, 0.002551020408163265)
    unsqueeze_1334: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_2400, 0);  mul_2400 = None
    unsqueeze_1335: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1334, 2);  unsqueeze_1334 = None
    unsqueeze_1336: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1335, 3);  unsqueeze_1335 = None
    mul_2401: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_3, 0.002551020408163265)
    mul_2402: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_973, squeeze_973)
    mul_2403: "f32[2048]" = torch.ops.aten.mul.Tensor(mul_2401, mul_2402);  mul_2401 = mul_2402 = None
    unsqueeze_1337: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_2403, 0);  mul_2403 = None
    unsqueeze_1338: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1337, 2);  unsqueeze_1337 = None
    unsqueeze_1339: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1338, 3);  unsqueeze_1338 = None
    mul_2404: "f32[2048]" = torch.ops.aten.mul.Tensor(squeeze_973, primals_978);  primals_978 = None
    unsqueeze_1340: "f32[1, 2048]" = torch.ops.aten.unsqueeze.default(mul_2404, 0);  mul_2404 = None
    unsqueeze_1341: "f32[1, 2048, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1340, 2);  unsqueeze_1340 = None
    unsqueeze_1342: "f32[1, 2048, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1341, 3);  unsqueeze_1341 = None
    sub_326: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_324, unsqueeze_1333);  convolution_324 = unsqueeze_1333 = None
    mul_2405: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(sub_326, unsqueeze_1339);  sub_326 = unsqueeze_1339 = None
    sub_327: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(where, mul_2405);  where = mul_2405 = None
    sub_328: "f32[8, 2048, 7, 7]" = torch.ops.aten.sub.Tensor(sub_327, unsqueeze_1336);  sub_327 = unsqueeze_1336 = None
    mul_2406: "f32[8, 2048, 7, 7]" = torch.ops.aten.mul.Tensor(sub_328, unsqueeze_1342);  sub_328 = unsqueeze_1342 = None
    mul_2407: "f32[2048]" = torch.ops.aten.mul.Tensor(sum_3, squeeze_973);  sum_3 = squeeze_973 = None
    sum_4: "f32[2048]" = torch.ops.aten.sum.dim_IntList(mul_2406, [0, 2, 3])
    convolution_backward = torch.ops.aten.convolution_backward.default(mul_2406, add_1920, primals_976, [2048], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2406 = add_1920 = primals_976 = None
    getitem_650: "f32[8, 1024, 7, 7]" = convolution_backward[0]
    getitem_651: "f32[2048, 1024, 1, 1]" = convolution_backward[1];  convolution_backward = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    alias_288: "f32[8, 1024, 7, 7]" = torch.ops.aten.alias.default(relu_282);  relu_282 = None
    alias_289: "f32[8, 1024, 7, 7]" = torch.ops.aten.alias.default(alias_288);  alias_288 = None
    le_1: "b8[8, 1024, 7, 7]" = torch.ops.aten.le.Scalar(alias_289, 0);  alias_289 = None
    scalar_tensor_1: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_1: "f32[8, 1024, 7, 7]" = torch.ops.aten.where.self(le_1, scalar_tensor_1, getitem_650);  le_1 = scalar_tensor_1 = None
    unsqueeze_1343: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_969, 0);  squeeze_969 = None
    unsqueeze_1344: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1343, 2);  unsqueeze_1343 = None
    unsqueeze_1345: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1344, 3);  unsqueeze_1344 = None
    sum_5: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_1, [0, 2, 3])
    sub_329: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_323, unsqueeze_1345)
    mul_2408: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(where_1, sub_329);  sub_329 = None
    sum_6: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2408, [0, 2, 3]);  mul_2408 = None
    mul_2409: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_5, 0.002551020408163265)
    unsqueeze_1346: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2409, 0);  mul_2409 = None
    unsqueeze_1347: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1346, 2);  unsqueeze_1346 = None
    unsqueeze_1348: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1347, 3);  unsqueeze_1347 = None
    mul_2410: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_6, 0.002551020408163265)
    mul_2411: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_970, squeeze_970)
    mul_2412: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2410, mul_2411);  mul_2410 = mul_2411 = None
    unsqueeze_1349: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2412, 0);  mul_2412 = None
    unsqueeze_1350: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1349, 2);  unsqueeze_1349 = None
    unsqueeze_1351: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1350, 3);  unsqueeze_1350 = None
    mul_2413: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_970, primals_974);  primals_974 = None
    unsqueeze_1352: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2413, 0);  mul_2413 = None
    unsqueeze_1353: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1352, 2);  unsqueeze_1352 = None
    unsqueeze_1354: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1353, 3);  unsqueeze_1353 = None
    sub_330: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_323, unsqueeze_1345);  convolution_323 = unsqueeze_1345 = None
    mul_2414: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_330, unsqueeze_1351);  sub_330 = unsqueeze_1351 = None
    sub_331: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(where_1, mul_2414);  where_1 = mul_2414 = None
    sub_332: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(sub_331, unsqueeze_1348);  sub_331 = unsqueeze_1348 = None
    mul_2415: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_332, unsqueeze_1354);  sub_332 = unsqueeze_1354 = None
    mul_2416: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_6, squeeze_970);  sum_6 = squeeze_970 = None
    sum_7: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2415, [0, 2, 3])
    convolution_backward_1 = torch.ops.aten.convolution_backward.default(mul_2415, add_1893, primals_972, [1024], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2415 = add_1893 = primals_972 = None
    getitem_653: "f32[8, 512, 14, 14]" = convolution_backward_1[0]
    getitem_654: "f32[1024, 512, 3, 3]" = convolution_backward_1[1];  convolution_backward_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_291: "f32[8, 1024, 7, 7]" = torch.ops.aten.alias.default(relu_281);  relu_281 = None
    alias_292: "f32[8, 1024, 7, 7]" = torch.ops.aten.alias.default(alias_291);  alias_291 = None
    le_2: "b8[8, 1024, 7, 7]" = torch.ops.aten.le.Scalar(alias_292, 0);  alias_292 = None
    scalar_tensor_2: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_2: "f32[8, 1024, 7, 7]" = torch.ops.aten.where.self(le_2, scalar_tensor_2, getitem_650);  le_2 = scalar_tensor_2 = getitem_650 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    unsqueeze_1355: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_966, 0);  squeeze_966 = None
    unsqueeze_1356: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1355, 2);  unsqueeze_1355 = None
    unsqueeze_1357: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1356, 3);  unsqueeze_1356 = None
    sum_8: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_2, [0, 2, 3])
    sub_333: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_322, unsqueeze_1357)
    mul_2417: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(where_2, sub_333);  sub_333 = None
    sum_9: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2417, [0, 2, 3]);  mul_2417 = None
    mul_2418: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_8, 0.002551020408163265)
    unsqueeze_1358: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2418, 0);  mul_2418 = None
    unsqueeze_1359: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1358, 2);  unsqueeze_1358 = None
    unsqueeze_1360: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1359, 3);  unsqueeze_1359 = None
    mul_2419: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_9, 0.002551020408163265)
    mul_2420: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_967, squeeze_967)
    mul_2421: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2419, mul_2420);  mul_2419 = mul_2420 = None
    unsqueeze_1361: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2421, 0);  mul_2421 = None
    unsqueeze_1362: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1361, 2);  unsqueeze_1361 = None
    unsqueeze_1363: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1362, 3);  unsqueeze_1362 = None
    mul_2422: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_967, primals_970);  primals_970 = None
    unsqueeze_1364: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2422, 0);  mul_2422 = None
    unsqueeze_1365: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1364, 2);  unsqueeze_1364 = None
    unsqueeze_1366: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1365, 3);  unsqueeze_1365 = None
    sub_334: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_322, unsqueeze_1357);  convolution_322 = unsqueeze_1357 = None
    mul_2423: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_334, unsqueeze_1363);  sub_334 = unsqueeze_1363 = None
    sub_335: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(where_2, mul_2423);  mul_2423 = None
    sub_336: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(sub_335, unsqueeze_1360);  sub_335 = unsqueeze_1360 = None
    mul_2424: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_336, unsqueeze_1366);  sub_336 = unsqueeze_1366 = None
    mul_2425: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_9, squeeze_967);  sum_9 = squeeze_967 = None
    convolution_backward_2 = torch.ops.aten.convolution_backward.default(mul_2424, relu_267, primals_969, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2424 = primals_969 = None
    getitem_656: "f32[8, 144, 7, 7]" = convolution_backward_2[0]
    getitem_657: "f32[1024, 144, 1, 1]" = convolution_backward_2[1];  convolution_backward_2 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_1367: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(squeeze_963, 0);  squeeze_963 = None
    unsqueeze_1368: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1367, 2);  unsqueeze_1367 = None
    unsqueeze_1369: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1368, 3);  unsqueeze_1368 = None
    sum_10: "f32[1024]" = torch.ops.aten.sum.dim_IntList(where_2, [0, 2, 3])
    sub_337: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_321, unsqueeze_1369)
    mul_2426: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(where_2, sub_337);  sub_337 = None
    sum_11: "f32[1024]" = torch.ops.aten.sum.dim_IntList(mul_2426, [0, 2, 3]);  mul_2426 = None
    mul_2427: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_10, 0.002551020408163265)
    unsqueeze_1370: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2427, 0);  mul_2427 = None
    unsqueeze_1371: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1370, 2);  unsqueeze_1370 = None
    unsqueeze_1372: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1371, 3);  unsqueeze_1371 = None
    mul_2428: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_11, 0.002551020408163265)
    mul_2429: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_964, squeeze_964)
    mul_2430: "f32[1024]" = torch.ops.aten.mul.Tensor(mul_2428, mul_2429);  mul_2428 = mul_2429 = None
    unsqueeze_1373: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2430, 0);  mul_2430 = None
    unsqueeze_1374: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1373, 2);  unsqueeze_1373 = None
    unsqueeze_1375: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1374, 3);  unsqueeze_1374 = None
    mul_2431: "f32[1024]" = torch.ops.aten.mul.Tensor(squeeze_964, primals_967);  primals_967 = None
    unsqueeze_1376: "f32[1, 1024]" = torch.ops.aten.unsqueeze.default(mul_2431, 0);  mul_2431 = None
    unsqueeze_1377: "f32[1, 1024, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1376, 2);  unsqueeze_1376 = None
    unsqueeze_1378: "f32[1, 1024, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1377, 3);  unsqueeze_1377 = None
    sub_338: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_321, unsqueeze_1369);  convolution_321 = unsqueeze_1369 = None
    mul_2432: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_338, unsqueeze_1375);  sub_338 = unsqueeze_1375 = None
    sub_339: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(where_2, mul_2432);  where_2 = mul_2432 = None
    sub_340: "f32[8, 1024, 7, 7]" = torch.ops.aten.sub.Tensor(sub_339, unsqueeze_1372);  sub_339 = unsqueeze_1372 = None
    mul_2433: "f32[8, 1024, 7, 7]" = torch.ops.aten.mul.Tensor(sub_340, unsqueeze_1378);  sub_340 = unsqueeze_1378 = None
    mul_2434: "f32[1024]" = torch.ops.aten.mul.Tensor(sum_11, squeeze_964);  sum_11 = squeeze_964 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_3 = torch.ops.aten.convolution_backward.default(mul_2433, relu_280, primals_966, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2433 = primals_966 = None
    getitem_659: "f32[8, 256, 7, 7]" = convolution_backward_3[0]
    getitem_660: "f32[1024, 256, 1, 1]" = convolution_backward_3[1];  convolution_backward_3 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_294: "f32[8, 256, 7, 7]" = torch.ops.aten.alias.default(relu_280);  relu_280 = None
    alias_295: "f32[8, 256, 7, 7]" = torch.ops.aten.alias.default(alias_294);  alias_294 = None
    le_3: "b8[8, 256, 7, 7]" = torch.ops.aten.le.Scalar(alias_295, 0);  alias_295 = None
    scalar_tensor_3: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_3: "f32[8, 256, 7, 7]" = torch.ops.aten.where.self(le_3, scalar_tensor_3, getitem_659);  le_3 = scalar_tensor_3 = getitem_659 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_1379: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_960, 0);  squeeze_960 = None
    unsqueeze_1380: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1379, 2);  unsqueeze_1379 = None
    unsqueeze_1381: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1380, 3);  unsqueeze_1380 = None
    sum_12: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_3, [0, 2, 3])
    sub_341: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_320, unsqueeze_1381)
    mul_2435: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(where_3, sub_341);  sub_341 = None
    sum_13: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2435, [0, 2, 3]);  mul_2435 = None
    mul_2436: "f32[256]" = torch.ops.aten.mul.Tensor(sum_12, 0.002551020408163265)
    unsqueeze_1382: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2436, 0);  mul_2436 = None
    unsqueeze_1383: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1382, 2);  unsqueeze_1382 = None
    unsqueeze_1384: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1383, 3);  unsqueeze_1383 = None
    mul_2437: "f32[256]" = torch.ops.aten.mul.Tensor(sum_13, 0.002551020408163265)
    mul_2438: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_961, squeeze_961)
    mul_2439: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2437, mul_2438);  mul_2437 = mul_2438 = None
    unsqueeze_1385: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2439, 0);  mul_2439 = None
    unsqueeze_1386: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1385, 2);  unsqueeze_1385 = None
    unsqueeze_1387: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1386, 3);  unsqueeze_1386 = None
    mul_2440: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_961, primals_964);  primals_964 = None
    unsqueeze_1388: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2440, 0);  mul_2440 = None
    unsqueeze_1389: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1388, 2);  unsqueeze_1388 = None
    unsqueeze_1390: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1389, 3);  unsqueeze_1389 = None
    sub_342: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_320, unsqueeze_1381);  convolution_320 = unsqueeze_1381 = None
    mul_2441: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_342, unsqueeze_1387);  sub_342 = unsqueeze_1387 = None
    sub_343: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(where_3, mul_2441);  where_3 = mul_2441 = None
    sub_344: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(sub_343, unsqueeze_1384);  sub_343 = unsqueeze_1384 = None
    mul_2442: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_344, unsqueeze_1390);  sub_344 = unsqueeze_1390 = None
    mul_2443: "f32[256]" = torch.ops.aten.mul.Tensor(sum_13, squeeze_961);  sum_13 = squeeze_961 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_4 = torch.ops.aten.convolution_backward.default(mul_2442, relu_279, primals_963, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2442 = primals_963 = None
    getitem_662: "f32[8, 256, 7, 7]" = convolution_backward_4[0]
    getitem_663: "f32[256, 256, 3, 3]" = convolution_backward_4[1];  convolution_backward_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_297: "f32[8, 256, 7, 7]" = torch.ops.aten.alias.default(relu_279);  relu_279 = None
    alias_298: "f32[8, 256, 7, 7]" = torch.ops.aten.alias.default(alias_297);  alias_297 = None
    le_4: "b8[8, 256, 7, 7]" = torch.ops.aten.le.Scalar(alias_298, 0);  alias_298 = None
    scalar_tensor_4: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_4: "f32[8, 256, 7, 7]" = torch.ops.aten.where.self(le_4, scalar_tensor_4, getitem_662);  le_4 = scalar_tensor_4 = getitem_662 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_1391: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_957, 0);  squeeze_957 = None
    unsqueeze_1392: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1391, 2);  unsqueeze_1391 = None
    unsqueeze_1393: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1392, 3);  unsqueeze_1392 = None
    sum_14: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_4, [0, 2, 3])
    sub_345: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_319, unsqueeze_1393)
    mul_2444: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(where_4, sub_345);  sub_345 = None
    sum_15: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2444, [0, 2, 3]);  mul_2444 = None
    mul_2445: "f32[256]" = torch.ops.aten.mul.Tensor(sum_14, 0.002551020408163265)
    unsqueeze_1394: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2445, 0);  mul_2445 = None
    unsqueeze_1395: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1394, 2);  unsqueeze_1394 = None
    unsqueeze_1396: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1395, 3);  unsqueeze_1395 = None
    mul_2446: "f32[256]" = torch.ops.aten.mul.Tensor(sum_15, 0.002551020408163265)
    mul_2447: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_958, squeeze_958)
    mul_2448: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2446, mul_2447);  mul_2446 = mul_2447 = None
    unsqueeze_1397: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2448, 0);  mul_2448 = None
    unsqueeze_1398: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1397, 2);  unsqueeze_1397 = None
    unsqueeze_1399: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1398, 3);  unsqueeze_1398 = None
    mul_2449: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_958, primals_961);  primals_961 = None
    unsqueeze_1400: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2449, 0);  mul_2449 = None
    unsqueeze_1401: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1400, 2);  unsqueeze_1400 = None
    unsqueeze_1402: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1401, 3);  unsqueeze_1401 = None
    sub_346: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_319, unsqueeze_1393);  convolution_319 = unsqueeze_1393 = None
    mul_2450: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_346, unsqueeze_1399);  sub_346 = unsqueeze_1399 = None
    sub_347: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(where_4, mul_2450);  where_4 = mul_2450 = None
    sub_348: "f32[8, 256, 7, 7]" = torch.ops.aten.sub.Tensor(sub_347, unsqueeze_1396);  sub_347 = unsqueeze_1396 = None
    mul_2451: "f32[8, 256, 7, 7]" = torch.ops.aten.mul.Tensor(sub_348, unsqueeze_1402);  sub_348 = unsqueeze_1402 = None
    mul_2452: "f32[256]" = torch.ops.aten.mul.Tensor(sum_15, squeeze_958);  sum_15 = squeeze_958 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_5 = torch.ops.aten.convolution_backward.default(mul_2451, relu_267, primals_960, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2451 = relu_267 = primals_960 = None
    getitem_665: "f32[8, 144, 7, 7]" = convolution_backward_5[0]
    getitem_666: "f32[256, 144, 1, 1]" = convolution_backward_5[1];  convolution_backward_5 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_1926: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(getitem_656, getitem_665);  getitem_656 = getitem_665 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    alias_300: "f32[8, 512, 14, 14]" = torch.ops.aten.alias.default(relu_278);  relu_278 = None
    alias_301: "f32[8, 512, 14, 14]" = torch.ops.aten.alias.default(alias_300);  alias_300 = None
    le_5: "b8[8, 512, 14, 14]" = torch.ops.aten.le.Scalar(alias_301, 0);  alias_301 = None
    scalar_tensor_5: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_5: "f32[8, 512, 14, 14]" = torch.ops.aten.where.self(le_5, scalar_tensor_5, getitem_653);  le_5 = scalar_tensor_5 = None
    unsqueeze_1403: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_954, 0);  squeeze_954 = None
    unsqueeze_1404: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1403, 2);  unsqueeze_1403 = None
    unsqueeze_1405: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1404, 3);  unsqueeze_1404 = None
    sum_16: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_5, [0, 2, 3])
    sub_349: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_318, unsqueeze_1405)
    mul_2453: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(where_5, sub_349);  sub_349 = None
    sum_17: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2453, [0, 2, 3]);  mul_2453 = None
    mul_2454: "f32[512]" = torch.ops.aten.mul.Tensor(sum_16, 0.0006377551020408163)
    unsqueeze_1406: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2454, 0);  mul_2454 = None
    unsqueeze_1407: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1406, 2);  unsqueeze_1406 = None
    unsqueeze_1408: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1407, 3);  unsqueeze_1407 = None
    mul_2455: "f32[512]" = torch.ops.aten.mul.Tensor(sum_17, 0.0006377551020408163)
    mul_2456: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_955, squeeze_955)
    mul_2457: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2455, mul_2456);  mul_2455 = mul_2456 = None
    unsqueeze_1409: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2457, 0);  mul_2457 = None
    unsqueeze_1410: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1409, 2);  unsqueeze_1409 = None
    unsqueeze_1411: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1410, 3);  unsqueeze_1410 = None
    mul_2458: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_955, primals_958);  primals_958 = None
    unsqueeze_1412: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2458, 0);  mul_2458 = None
    unsqueeze_1413: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1412, 2);  unsqueeze_1412 = None
    unsqueeze_1414: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1413, 3);  unsqueeze_1413 = None
    sub_350: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_318, unsqueeze_1405);  convolution_318 = unsqueeze_1405 = None
    mul_2459: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_350, unsqueeze_1411);  sub_350 = unsqueeze_1411 = None
    sub_351: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(where_5, mul_2459);  where_5 = mul_2459 = None
    sub_352: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(sub_351, unsqueeze_1408);  sub_351 = unsqueeze_1408 = None
    mul_2460: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_352, unsqueeze_1414);  sub_352 = unsqueeze_1414 = None
    mul_2461: "f32[512]" = torch.ops.aten.mul.Tensor(sum_17, squeeze_955);  sum_17 = squeeze_955 = None
    sum_18: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2460, [0, 2, 3])
    convolution_backward_6 = torch.ops.aten.convolution_backward.default(mul_2460, add_1866, primals_956, [512], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2460 = add_1866 = primals_956 = None
    getitem_668: "f32[8, 256, 28, 28]" = convolution_backward_6[0]
    getitem_669: "f32[512, 256, 3, 3]" = convolution_backward_6[1];  convolution_backward_6 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_303: "f32[8, 512, 14, 14]" = torch.ops.aten.alias.default(relu_277);  relu_277 = None
    alias_304: "f32[8, 512, 14, 14]" = torch.ops.aten.alias.default(alias_303);  alias_303 = None
    le_6: "b8[8, 512, 14, 14]" = torch.ops.aten.le.Scalar(alias_304, 0);  alias_304 = None
    scalar_tensor_6: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_6: "f32[8, 512, 14, 14]" = torch.ops.aten.where.self(le_6, scalar_tensor_6, getitem_653);  le_6 = scalar_tensor_6 = getitem_653 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    unsqueeze_1415: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_951, 0);  squeeze_951 = None
    unsqueeze_1416: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1415, 2);  unsqueeze_1415 = None
    unsqueeze_1417: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1416, 3);  unsqueeze_1416 = None
    sum_19: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_6, [0, 2, 3])
    sub_353: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_317, unsqueeze_1417)
    mul_2462: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(where_6, sub_353);  sub_353 = None
    sum_20: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2462, [0, 2, 3]);  mul_2462 = None
    mul_2463: "f32[512]" = torch.ops.aten.mul.Tensor(sum_19, 0.0006377551020408163)
    unsqueeze_1418: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2463, 0);  mul_2463 = None
    unsqueeze_1419: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1418, 2);  unsqueeze_1418 = None
    unsqueeze_1420: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1419, 3);  unsqueeze_1419 = None
    mul_2464: "f32[512]" = torch.ops.aten.mul.Tensor(sum_20, 0.0006377551020408163)
    mul_2465: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_952, squeeze_952)
    mul_2466: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2464, mul_2465);  mul_2464 = mul_2465 = None
    unsqueeze_1421: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2466, 0);  mul_2466 = None
    unsqueeze_1422: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1421, 2);  unsqueeze_1421 = None
    unsqueeze_1423: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1422, 3);  unsqueeze_1422 = None
    mul_2467: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_952, primals_954);  primals_954 = None
    unsqueeze_1424: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2467, 0);  mul_2467 = None
    unsqueeze_1425: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1424, 2);  unsqueeze_1424 = None
    unsqueeze_1426: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1425, 3);  unsqueeze_1425 = None
    sub_354: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_317, unsqueeze_1417);  convolution_317 = unsqueeze_1417 = None
    mul_2468: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_354, unsqueeze_1423);  sub_354 = unsqueeze_1423 = None
    sub_355: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(where_6, mul_2468);  mul_2468 = None
    sub_356: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(sub_355, unsqueeze_1420);  sub_355 = unsqueeze_1420 = None
    mul_2469: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_356, unsqueeze_1426);  sub_356 = unsqueeze_1426 = None
    mul_2470: "f32[512]" = torch.ops.aten.mul.Tensor(sum_20, squeeze_952);  sum_20 = squeeze_952 = None
    convolution_backward_7 = torch.ops.aten.convolution_backward.default(mul_2469, relu_263, primals_953, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2469 = primals_953 = None
    getitem_671: "f32[8, 72, 14, 14]" = convolution_backward_7[0]
    getitem_672: "f32[512, 72, 1, 1]" = convolution_backward_7[1];  convolution_backward_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_1427: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(squeeze_948, 0);  squeeze_948 = None
    unsqueeze_1428: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1427, 2);  unsqueeze_1427 = None
    unsqueeze_1429: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1428, 3);  unsqueeze_1428 = None
    sum_21: "f32[512]" = torch.ops.aten.sum.dim_IntList(where_6, [0, 2, 3])
    sub_357: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_316, unsqueeze_1429)
    mul_2471: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(where_6, sub_357);  sub_357 = None
    sum_22: "f32[512]" = torch.ops.aten.sum.dim_IntList(mul_2471, [0, 2, 3]);  mul_2471 = None
    mul_2472: "f32[512]" = torch.ops.aten.mul.Tensor(sum_21, 0.0006377551020408163)
    unsqueeze_1430: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2472, 0);  mul_2472 = None
    unsqueeze_1431: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1430, 2);  unsqueeze_1430 = None
    unsqueeze_1432: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1431, 3);  unsqueeze_1431 = None
    mul_2473: "f32[512]" = torch.ops.aten.mul.Tensor(sum_22, 0.0006377551020408163)
    mul_2474: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_949, squeeze_949)
    mul_2475: "f32[512]" = torch.ops.aten.mul.Tensor(mul_2473, mul_2474);  mul_2473 = mul_2474 = None
    unsqueeze_1433: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2475, 0);  mul_2475 = None
    unsqueeze_1434: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1433, 2);  unsqueeze_1433 = None
    unsqueeze_1435: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1434, 3);  unsqueeze_1434 = None
    mul_2476: "f32[512]" = torch.ops.aten.mul.Tensor(squeeze_949, primals_951);  primals_951 = None
    unsqueeze_1436: "f32[1, 512]" = torch.ops.aten.unsqueeze.default(mul_2476, 0);  mul_2476 = None
    unsqueeze_1437: "f32[1, 512, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1436, 2);  unsqueeze_1436 = None
    unsqueeze_1438: "f32[1, 512, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1437, 3);  unsqueeze_1437 = None
    sub_358: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_316, unsqueeze_1429);  convolution_316 = unsqueeze_1429 = None
    mul_2477: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_358, unsqueeze_1435);  sub_358 = unsqueeze_1435 = None
    sub_359: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(where_6, mul_2477);  where_6 = mul_2477 = None
    sub_360: "f32[8, 512, 14, 14]" = torch.ops.aten.sub.Tensor(sub_359, unsqueeze_1432);  sub_359 = unsqueeze_1432 = None
    mul_2478: "f32[8, 512, 14, 14]" = torch.ops.aten.mul.Tensor(sub_360, unsqueeze_1438);  sub_360 = unsqueeze_1438 = None
    mul_2479: "f32[512]" = torch.ops.aten.mul.Tensor(sum_22, squeeze_949);  sum_22 = squeeze_949 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_8 = torch.ops.aten.convolution_backward.default(mul_2478, relu_276, primals_950, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2478 = primals_950 = None
    getitem_674: "f32[8, 128, 14, 14]" = convolution_backward_8[0]
    getitem_675: "f32[512, 128, 1, 1]" = convolution_backward_8[1];  convolution_backward_8 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_306: "f32[8, 128, 14, 14]" = torch.ops.aten.alias.default(relu_276);  relu_276 = None
    alias_307: "f32[8, 128, 14, 14]" = torch.ops.aten.alias.default(alias_306);  alias_306 = None
    le_7: "b8[8, 128, 14, 14]" = torch.ops.aten.le.Scalar(alias_307, 0);  alias_307 = None
    scalar_tensor_7: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_7: "f32[8, 128, 14, 14]" = torch.ops.aten.where.self(le_7, scalar_tensor_7, getitem_674);  le_7 = scalar_tensor_7 = getitem_674 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_1439: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_945, 0);  squeeze_945 = None
    unsqueeze_1440: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1439, 2);  unsqueeze_1439 = None
    unsqueeze_1441: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1440, 3);  unsqueeze_1440 = None
    sum_23: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_7, [0, 2, 3])
    sub_361: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_315, unsqueeze_1441)
    mul_2480: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(where_7, sub_361);  sub_361 = None
    sum_24: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2480, [0, 2, 3]);  mul_2480 = None
    mul_2481: "f32[128]" = torch.ops.aten.mul.Tensor(sum_23, 0.0006377551020408163)
    unsqueeze_1442: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2481, 0);  mul_2481 = None
    unsqueeze_1443: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1442, 2);  unsqueeze_1442 = None
    unsqueeze_1444: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1443, 3);  unsqueeze_1443 = None
    mul_2482: "f32[128]" = torch.ops.aten.mul.Tensor(sum_24, 0.0006377551020408163)
    mul_2483: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_946, squeeze_946)
    mul_2484: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2482, mul_2483);  mul_2482 = mul_2483 = None
    unsqueeze_1445: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2484, 0);  mul_2484 = None
    unsqueeze_1446: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1445, 2);  unsqueeze_1445 = None
    unsqueeze_1447: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1446, 3);  unsqueeze_1446 = None
    mul_2485: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_946, primals_948);  primals_948 = None
    unsqueeze_1448: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2485, 0);  mul_2485 = None
    unsqueeze_1449: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1448, 2);  unsqueeze_1448 = None
    unsqueeze_1450: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1449, 3);  unsqueeze_1449 = None
    sub_362: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_315, unsqueeze_1441);  convolution_315 = unsqueeze_1441 = None
    mul_2486: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_362, unsqueeze_1447);  sub_362 = unsqueeze_1447 = None
    sub_363: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(where_7, mul_2486);  where_7 = mul_2486 = None
    sub_364: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(sub_363, unsqueeze_1444);  sub_363 = unsqueeze_1444 = None
    mul_2487: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_364, unsqueeze_1450);  sub_364 = unsqueeze_1450 = None
    mul_2488: "f32[128]" = torch.ops.aten.mul.Tensor(sum_24, squeeze_946);  sum_24 = squeeze_946 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_9 = torch.ops.aten.convolution_backward.default(mul_2487, relu_275, primals_947, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2487 = primals_947 = None
    getitem_677: "f32[8, 128, 14, 14]" = convolution_backward_9[0]
    getitem_678: "f32[128, 128, 3, 3]" = convolution_backward_9[1];  convolution_backward_9 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_309: "f32[8, 128, 14, 14]" = torch.ops.aten.alias.default(relu_275);  relu_275 = None
    alias_310: "f32[8, 128, 14, 14]" = torch.ops.aten.alias.default(alias_309);  alias_309 = None
    le_8: "b8[8, 128, 14, 14]" = torch.ops.aten.le.Scalar(alias_310, 0);  alias_310 = None
    scalar_tensor_8: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_8: "f32[8, 128, 14, 14]" = torch.ops.aten.where.self(le_8, scalar_tensor_8, getitem_677);  le_8 = scalar_tensor_8 = getitem_677 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_1451: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_942, 0);  squeeze_942 = None
    unsqueeze_1452: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1451, 2);  unsqueeze_1451 = None
    unsqueeze_1453: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1452, 3);  unsqueeze_1452 = None
    sum_25: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_8, [0, 2, 3])
    sub_365: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_314, unsqueeze_1453)
    mul_2489: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(where_8, sub_365);  sub_365 = None
    sum_26: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2489, [0, 2, 3]);  mul_2489 = None
    mul_2490: "f32[128]" = torch.ops.aten.mul.Tensor(sum_25, 0.0006377551020408163)
    unsqueeze_1454: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2490, 0);  mul_2490 = None
    unsqueeze_1455: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1454, 2);  unsqueeze_1454 = None
    unsqueeze_1456: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1455, 3);  unsqueeze_1455 = None
    mul_2491: "f32[128]" = torch.ops.aten.mul.Tensor(sum_26, 0.0006377551020408163)
    mul_2492: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_943, squeeze_943)
    mul_2493: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2491, mul_2492);  mul_2491 = mul_2492 = None
    unsqueeze_1457: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2493, 0);  mul_2493 = None
    unsqueeze_1458: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1457, 2);  unsqueeze_1457 = None
    unsqueeze_1459: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1458, 3);  unsqueeze_1458 = None
    mul_2494: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_943, primals_945);  primals_945 = None
    unsqueeze_1460: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2494, 0);  mul_2494 = None
    unsqueeze_1461: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1460, 2);  unsqueeze_1460 = None
    unsqueeze_1462: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1461, 3);  unsqueeze_1461 = None
    sub_366: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_314, unsqueeze_1453);  convolution_314 = unsqueeze_1453 = None
    mul_2495: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_366, unsqueeze_1459);  sub_366 = unsqueeze_1459 = None
    sub_367: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(where_8, mul_2495);  where_8 = mul_2495 = None
    sub_368: "f32[8, 128, 14, 14]" = torch.ops.aten.sub.Tensor(sub_367, unsqueeze_1456);  sub_367 = unsqueeze_1456 = None
    mul_2496: "f32[8, 128, 14, 14]" = torch.ops.aten.mul.Tensor(sub_368, unsqueeze_1462);  sub_368 = unsqueeze_1462 = None
    mul_2497: "f32[128]" = torch.ops.aten.mul.Tensor(sum_26, squeeze_943);  sum_26 = squeeze_943 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_10 = torch.ops.aten.convolution_backward.default(mul_2496, relu_263, primals_944, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2496 = relu_263 = primals_944 = None
    getitem_680: "f32[8, 72, 14, 14]" = convolution_backward_10[0]
    getitem_681: "f32[128, 72, 1, 1]" = convolution_backward_10[1];  convolution_backward_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_1927: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(getitem_671, getitem_680);  getitem_671 = getitem_680 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:780, code: y = incre(yl[i]) + down.forward(y)
    alias_312: "f32[8, 256, 28, 28]" = torch.ops.aten.alias.default(relu_274);  relu_274 = None
    alias_313: "f32[8, 256, 28, 28]" = torch.ops.aten.alias.default(alias_312);  alias_312 = None
    le_9: "b8[8, 256, 28, 28]" = torch.ops.aten.le.Scalar(alias_313, 0);  alias_313 = None
    scalar_tensor_9: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_9: "f32[8, 256, 28, 28]" = torch.ops.aten.where.self(le_9, scalar_tensor_9, getitem_668);  le_9 = scalar_tensor_9 = None
    unsqueeze_1463: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_939, 0);  squeeze_939 = None
    unsqueeze_1464: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1463, 2);  unsqueeze_1463 = None
    unsqueeze_1465: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1464, 3);  unsqueeze_1464 = None
    sum_27: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_9, [0, 2, 3])
    sub_369: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_313, unsqueeze_1465)
    mul_2498: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(where_9, sub_369);  sub_369 = None
    sum_28: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2498, [0, 2, 3]);  mul_2498 = None
    mul_2499: "f32[256]" = torch.ops.aten.mul.Tensor(sum_27, 0.00015943877551020407)
    unsqueeze_1466: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2499, 0);  mul_2499 = None
    unsqueeze_1467: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1466, 2);  unsqueeze_1466 = None
    unsqueeze_1468: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1467, 3);  unsqueeze_1467 = None
    mul_2500: "f32[256]" = torch.ops.aten.mul.Tensor(sum_28, 0.00015943877551020407)
    mul_2501: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_940, squeeze_940)
    mul_2502: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2500, mul_2501);  mul_2500 = mul_2501 = None
    unsqueeze_1469: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2502, 0);  mul_2502 = None
    unsqueeze_1470: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1469, 2);  unsqueeze_1469 = None
    unsqueeze_1471: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1470, 3);  unsqueeze_1470 = None
    mul_2503: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_940, primals_942);  primals_942 = None
    unsqueeze_1472: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2503, 0);  mul_2503 = None
    unsqueeze_1473: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1472, 2);  unsqueeze_1472 = None
    unsqueeze_1474: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1473, 3);  unsqueeze_1473 = None
    sub_370: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_313, unsqueeze_1465);  convolution_313 = unsqueeze_1465 = None
    mul_2504: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_370, unsqueeze_1471);  sub_370 = unsqueeze_1471 = None
    sub_371: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(where_9, mul_2504);  where_9 = mul_2504 = None
    sub_372: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(sub_371, unsqueeze_1468);  sub_371 = unsqueeze_1468 = None
    mul_2505: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_372, unsqueeze_1474);  sub_372 = unsqueeze_1474 = None
    mul_2506: "f32[256]" = torch.ops.aten.mul.Tensor(sum_28, squeeze_940);  sum_28 = squeeze_940 = None
    sum_29: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2505, [0, 2, 3])
    convolution_backward_11 = torch.ops.aten.convolution_backward.default(mul_2505, relu_270, primals_940, [256], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2505 = primals_940 = None
    getitem_683: "f32[8, 128, 56, 56]" = convolution_backward_11[0]
    getitem_684: "f32[256, 128, 3, 3]" = convolution_backward_11[1];  convolution_backward_11 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_315: "f32[8, 256, 28, 28]" = torch.ops.aten.alias.default(relu_273);  relu_273 = None
    alias_316: "f32[8, 256, 28, 28]" = torch.ops.aten.alias.default(alias_315);  alias_315 = None
    le_10: "b8[8, 256, 28, 28]" = torch.ops.aten.le.Scalar(alias_316, 0);  alias_316 = None
    scalar_tensor_10: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_10: "f32[8, 256, 28, 28]" = torch.ops.aten.where.self(le_10, scalar_tensor_10, getitem_668);  le_10 = scalar_tensor_10 = getitem_668 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    unsqueeze_1475: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_936, 0);  squeeze_936 = None
    unsqueeze_1476: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1475, 2);  unsqueeze_1475 = None
    unsqueeze_1477: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1476, 3);  unsqueeze_1476 = None
    sum_30: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_10, [0, 2, 3])
    sub_373: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_312, unsqueeze_1477)
    mul_2507: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(where_10, sub_373);  sub_373 = None
    sum_31: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2507, [0, 2, 3]);  mul_2507 = None
    mul_2508: "f32[256]" = torch.ops.aten.mul.Tensor(sum_30, 0.00015943877551020407)
    unsqueeze_1478: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2508, 0);  mul_2508 = None
    unsqueeze_1479: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1478, 2);  unsqueeze_1478 = None
    unsqueeze_1480: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1479, 3);  unsqueeze_1479 = None
    mul_2509: "f32[256]" = torch.ops.aten.mul.Tensor(sum_31, 0.00015943877551020407)
    mul_2510: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_937, squeeze_937)
    mul_2511: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2509, mul_2510);  mul_2509 = mul_2510 = None
    unsqueeze_1481: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2511, 0);  mul_2511 = None
    unsqueeze_1482: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1481, 2);  unsqueeze_1481 = None
    unsqueeze_1483: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1482, 3);  unsqueeze_1482 = None
    mul_2512: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_937, primals_938);  primals_938 = None
    unsqueeze_1484: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2512, 0);  mul_2512 = None
    unsqueeze_1485: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1484, 2);  unsqueeze_1484 = None
    unsqueeze_1486: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1485, 3);  unsqueeze_1485 = None
    sub_374: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_312, unsqueeze_1477);  convolution_312 = unsqueeze_1477 = None
    mul_2513: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_374, unsqueeze_1483);  sub_374 = unsqueeze_1483 = None
    sub_375: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(where_10, mul_2513);  mul_2513 = None
    sub_376: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(sub_375, unsqueeze_1480);  sub_375 = unsqueeze_1480 = None
    mul_2514: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_376, unsqueeze_1486);  sub_376 = unsqueeze_1486 = None
    mul_2515: "f32[256]" = torch.ops.aten.mul.Tensor(sum_31, squeeze_937);  sum_31 = squeeze_937 = None
    convolution_backward_12 = torch.ops.aten.convolution_backward.default(mul_2514, relu_261, primals_937, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2514 = primals_937 = None
    getitem_686: "f32[8, 36, 28, 28]" = convolution_backward_12[0]
    getitem_687: "f32[256, 36, 1, 1]" = convolution_backward_12[1];  convolution_backward_12 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_1487: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_933, 0);  squeeze_933 = None
    unsqueeze_1488: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1487, 2);  unsqueeze_1487 = None
    unsqueeze_1489: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1488, 3);  unsqueeze_1488 = None
    sum_32: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_10, [0, 2, 3])
    sub_377: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_311, unsqueeze_1489)
    mul_2516: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(where_10, sub_377);  sub_377 = None
    sum_33: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_2516, [0, 2, 3]);  mul_2516 = None
    mul_2517: "f32[256]" = torch.ops.aten.mul.Tensor(sum_32, 0.00015943877551020407)
    unsqueeze_1490: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2517, 0);  mul_2517 = None
    unsqueeze_1491: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1490, 2);  unsqueeze_1490 = None
    unsqueeze_1492: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1491, 3);  unsqueeze_1491 = None
    mul_2518: "f32[256]" = torch.ops.aten.mul.Tensor(sum_33, 0.00015943877551020407)
    mul_2519: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_934, squeeze_934)
    mul_2520: "f32[256]" = torch.ops.aten.mul.Tensor(mul_2518, mul_2519);  mul_2518 = mul_2519 = None
    unsqueeze_1493: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2520, 0);  mul_2520 = None
    unsqueeze_1494: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1493, 2);  unsqueeze_1493 = None
    unsqueeze_1495: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1494, 3);  unsqueeze_1494 = None
    mul_2521: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_934, primals_935);  primals_935 = None
    unsqueeze_1496: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_2521, 0);  mul_2521 = None
    unsqueeze_1497: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1496, 2);  unsqueeze_1496 = None
    unsqueeze_1498: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1497, 3);  unsqueeze_1497 = None
    sub_378: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_311, unsqueeze_1489);  convolution_311 = unsqueeze_1489 = None
    mul_2522: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_378, unsqueeze_1495);  sub_378 = unsqueeze_1495 = None
    sub_379: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(where_10, mul_2522);  where_10 = mul_2522 = None
    sub_380: "f32[8, 256, 28, 28]" = torch.ops.aten.sub.Tensor(sub_379, unsqueeze_1492);  sub_379 = unsqueeze_1492 = None
    mul_2523: "f32[8, 256, 28, 28]" = torch.ops.aten.mul.Tensor(sub_380, unsqueeze_1498);  sub_380 = unsqueeze_1498 = None
    mul_2524: "f32[256]" = torch.ops.aten.mul.Tensor(sum_33, squeeze_934);  sum_33 = squeeze_934 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_13 = torch.ops.aten.convolution_backward.default(mul_2523, relu_272, primals_934, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2523 = primals_934 = None
    getitem_689: "f32[8, 64, 28, 28]" = convolution_backward_13[0]
    getitem_690: "f32[256, 64, 1, 1]" = convolution_backward_13[1];  convolution_backward_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_318: "f32[8, 64, 28, 28]" = torch.ops.aten.alias.default(relu_272);  relu_272 = None
    alias_319: "f32[8, 64, 28, 28]" = torch.ops.aten.alias.default(alias_318);  alias_318 = None
    le_11: "b8[8, 64, 28, 28]" = torch.ops.aten.le.Scalar(alias_319, 0);  alias_319 = None
    scalar_tensor_11: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_11: "f32[8, 64, 28, 28]" = torch.ops.aten.where.self(le_11, scalar_tensor_11, getitem_689);  le_11 = scalar_tensor_11 = getitem_689 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_1499: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_930, 0);  squeeze_930 = None
    unsqueeze_1500: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1499, 2);  unsqueeze_1499 = None
    unsqueeze_1501: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1500, 3);  unsqueeze_1500 = None
    sum_34: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_11, [0, 2, 3])
    sub_381: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_310, unsqueeze_1501)
    mul_2525: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(where_11, sub_381);  sub_381 = None
    sum_35: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2525, [0, 2, 3]);  mul_2525 = None
    mul_2526: "f32[64]" = torch.ops.aten.mul.Tensor(sum_34, 0.00015943877551020407)
    unsqueeze_1502: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2526, 0);  mul_2526 = None
    unsqueeze_1503: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1502, 2);  unsqueeze_1502 = None
    unsqueeze_1504: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1503, 3);  unsqueeze_1503 = None
    mul_2527: "f32[64]" = torch.ops.aten.mul.Tensor(sum_35, 0.00015943877551020407)
    mul_2528: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_931, squeeze_931)
    mul_2529: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2527, mul_2528);  mul_2527 = mul_2528 = None
    unsqueeze_1505: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2529, 0);  mul_2529 = None
    unsqueeze_1506: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1505, 2);  unsqueeze_1505 = None
    unsqueeze_1507: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1506, 3);  unsqueeze_1506 = None
    mul_2530: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_931, primals_932);  primals_932 = None
    unsqueeze_1508: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2530, 0);  mul_2530 = None
    unsqueeze_1509: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1508, 2);  unsqueeze_1508 = None
    unsqueeze_1510: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1509, 3);  unsqueeze_1509 = None
    sub_382: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_310, unsqueeze_1501);  convolution_310 = unsqueeze_1501 = None
    mul_2531: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_382, unsqueeze_1507);  sub_382 = unsqueeze_1507 = None
    sub_383: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(where_11, mul_2531);  where_11 = mul_2531 = None
    sub_384: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(sub_383, unsqueeze_1504);  sub_383 = unsqueeze_1504 = None
    mul_2532: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_384, unsqueeze_1510);  sub_384 = unsqueeze_1510 = None
    mul_2533: "f32[64]" = torch.ops.aten.mul.Tensor(sum_35, squeeze_931);  sum_35 = squeeze_931 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_14 = torch.ops.aten.convolution_backward.default(mul_2532, relu_271, primals_931, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2532 = primals_931 = None
    getitem_692: "f32[8, 64, 28, 28]" = convolution_backward_14[0]
    getitem_693: "f32[64, 64, 3, 3]" = convolution_backward_14[1];  convolution_backward_14 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_321: "f32[8, 64, 28, 28]" = torch.ops.aten.alias.default(relu_271);  relu_271 = None
    alias_322: "f32[8, 64, 28, 28]" = torch.ops.aten.alias.default(alias_321);  alias_321 = None
    le_12: "b8[8, 64, 28, 28]" = torch.ops.aten.le.Scalar(alias_322, 0);  alias_322 = None
    scalar_tensor_12: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_12: "f32[8, 64, 28, 28]" = torch.ops.aten.where.self(le_12, scalar_tensor_12, getitem_692);  le_12 = scalar_tensor_12 = getitem_692 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_1511: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_927, 0);  squeeze_927 = None
    unsqueeze_1512: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1511, 2);  unsqueeze_1511 = None
    unsqueeze_1513: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1512, 3);  unsqueeze_1512 = None
    sum_36: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_12, [0, 2, 3])
    sub_385: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_309, unsqueeze_1513)
    mul_2534: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(where_12, sub_385);  sub_385 = None
    sum_37: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_2534, [0, 2, 3]);  mul_2534 = None
    mul_2535: "f32[64]" = torch.ops.aten.mul.Tensor(sum_36, 0.00015943877551020407)
    unsqueeze_1514: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2535, 0);  mul_2535 = None
    unsqueeze_1515: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1514, 2);  unsqueeze_1514 = None
    unsqueeze_1516: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1515, 3);  unsqueeze_1515 = None
    mul_2536: "f32[64]" = torch.ops.aten.mul.Tensor(sum_37, 0.00015943877551020407)
    mul_2537: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_928, squeeze_928)
    mul_2538: "f32[64]" = torch.ops.aten.mul.Tensor(mul_2536, mul_2537);  mul_2536 = mul_2537 = None
    unsqueeze_1517: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2538, 0);  mul_2538 = None
    unsqueeze_1518: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1517, 2);  unsqueeze_1517 = None
    unsqueeze_1519: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1518, 3);  unsqueeze_1518 = None
    mul_2539: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_928, primals_929);  primals_929 = None
    unsqueeze_1520: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_2539, 0);  mul_2539 = None
    unsqueeze_1521: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1520, 2);  unsqueeze_1520 = None
    unsqueeze_1522: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1521, 3);  unsqueeze_1521 = None
    sub_386: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_309, unsqueeze_1513);  convolution_309 = unsqueeze_1513 = None
    mul_2540: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_386, unsqueeze_1519);  sub_386 = unsqueeze_1519 = None
    sub_387: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(where_12, mul_2540);  where_12 = mul_2540 = None
    sub_388: "f32[8, 64, 28, 28]" = torch.ops.aten.sub.Tensor(sub_387, unsqueeze_1516);  sub_387 = unsqueeze_1516 = None
    mul_2541: "f32[8, 64, 28, 28]" = torch.ops.aten.mul.Tensor(sub_388, unsqueeze_1522);  sub_388 = unsqueeze_1522 = None
    mul_2542: "f32[64]" = torch.ops.aten.mul.Tensor(sum_37, squeeze_928);  sum_37 = squeeze_928 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_15 = torch.ops.aten.convolution_backward.default(mul_2541, relu_261, primals_928, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2541 = relu_261 = primals_928 = None
    getitem_695: "f32[8, 36, 28, 28]" = convolution_backward_15[0]
    getitem_696: "f32[64, 36, 1, 1]" = convolution_backward_15[1];  convolution_backward_15 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_1928: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_686, getitem_695);  getitem_686 = getitem_695 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_324: "f32[8, 128, 56, 56]" = torch.ops.aten.alias.default(relu_270);  relu_270 = None
    alias_325: "f32[8, 128, 56, 56]" = torch.ops.aten.alias.default(alias_324);  alias_324 = None
    le_13: "b8[8, 128, 56, 56]" = torch.ops.aten.le.Scalar(alias_325, 0);  alias_325 = None
    scalar_tensor_13: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_13: "f32[8, 128, 56, 56]" = torch.ops.aten.where.self(le_13, scalar_tensor_13, getitem_683);  le_13 = scalar_tensor_13 = getitem_683 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    unsqueeze_1523: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_924, 0);  squeeze_924 = None
    unsqueeze_1524: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1523, 2);  unsqueeze_1523 = None
    unsqueeze_1525: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1524, 3);  unsqueeze_1524 = None
    sum_38: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_13, [0, 2, 3])
    sub_389: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_308, unsqueeze_1525)
    mul_2543: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(where_13, sub_389);  sub_389 = None
    sum_39: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2543, [0, 2, 3]);  mul_2543 = None
    mul_2544: "f32[128]" = torch.ops.aten.mul.Tensor(sum_38, 3.985969387755102e-05)
    unsqueeze_1526: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2544, 0);  mul_2544 = None
    unsqueeze_1527: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1526, 2);  unsqueeze_1526 = None
    unsqueeze_1528: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1527, 3);  unsqueeze_1527 = None
    mul_2545: "f32[128]" = torch.ops.aten.mul.Tensor(sum_39, 3.985969387755102e-05)
    mul_2546: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_925, squeeze_925)
    mul_2547: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2545, mul_2546);  mul_2545 = mul_2546 = None
    unsqueeze_1529: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2547, 0);  mul_2547 = None
    unsqueeze_1530: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1529, 2);  unsqueeze_1529 = None
    unsqueeze_1531: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1530, 3);  unsqueeze_1530 = None
    mul_2548: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_925, primals_926);  primals_926 = None
    unsqueeze_1532: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2548, 0);  mul_2548 = None
    unsqueeze_1533: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1532, 2);  unsqueeze_1532 = None
    unsqueeze_1534: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1533, 3);  unsqueeze_1533 = None
    sub_390: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_308, unsqueeze_1525);  convolution_308 = unsqueeze_1525 = None
    mul_2549: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_390, unsqueeze_1531);  sub_390 = unsqueeze_1531 = None
    sub_391: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(where_13, mul_2549);  mul_2549 = None
    sub_392: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(sub_391, unsqueeze_1528);  sub_391 = unsqueeze_1528 = None
    mul_2550: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_392, unsqueeze_1534);  sub_392 = unsqueeze_1534 = None
    mul_2551: "f32[128]" = torch.ops.aten.mul.Tensor(sum_39, squeeze_925);  sum_39 = squeeze_925 = None
    convolution_backward_16 = torch.ops.aten.convolution_backward.default(mul_2550, relu_260, primals_925, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2550 = primals_925 = None
    getitem_698: "f32[8, 18, 56, 56]" = convolution_backward_16[0]
    getitem_699: "f32[128, 18, 1, 1]" = convolution_backward_16[1];  convolution_backward_16 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_1535: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(squeeze_921, 0);  squeeze_921 = None
    unsqueeze_1536: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1535, 2);  unsqueeze_1535 = None
    unsqueeze_1537: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1536, 3);  unsqueeze_1536 = None
    sum_40: "f32[128]" = torch.ops.aten.sum.dim_IntList(where_13, [0, 2, 3])
    sub_393: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_307, unsqueeze_1537)
    mul_2552: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(where_13, sub_393);  sub_393 = None
    sum_41: "f32[128]" = torch.ops.aten.sum.dim_IntList(mul_2552, [0, 2, 3]);  mul_2552 = None
    mul_2553: "f32[128]" = torch.ops.aten.mul.Tensor(sum_40, 3.985969387755102e-05)
    unsqueeze_1538: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2553, 0);  mul_2553 = None
    unsqueeze_1539: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1538, 2);  unsqueeze_1538 = None
    unsqueeze_1540: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1539, 3);  unsqueeze_1539 = None
    mul_2554: "f32[128]" = torch.ops.aten.mul.Tensor(sum_41, 3.985969387755102e-05)
    mul_2555: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_922, squeeze_922)
    mul_2556: "f32[128]" = torch.ops.aten.mul.Tensor(mul_2554, mul_2555);  mul_2554 = mul_2555 = None
    unsqueeze_1541: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2556, 0);  mul_2556 = None
    unsqueeze_1542: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1541, 2);  unsqueeze_1541 = None
    unsqueeze_1543: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1542, 3);  unsqueeze_1542 = None
    mul_2557: "f32[128]" = torch.ops.aten.mul.Tensor(squeeze_922, primals_923);  primals_923 = None
    unsqueeze_1544: "f32[1, 128]" = torch.ops.aten.unsqueeze.default(mul_2557, 0);  mul_2557 = None
    unsqueeze_1545: "f32[1, 128, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1544, 2);  unsqueeze_1544 = None
    unsqueeze_1546: "f32[1, 128, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1545, 3);  unsqueeze_1545 = None
    sub_394: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_307, unsqueeze_1537);  convolution_307 = unsqueeze_1537 = None
    mul_2558: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_394, unsqueeze_1543);  sub_394 = unsqueeze_1543 = None
    sub_395: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(where_13, mul_2558);  where_13 = mul_2558 = None
    sub_396: "f32[8, 128, 56, 56]" = torch.ops.aten.sub.Tensor(sub_395, unsqueeze_1540);  sub_395 = unsqueeze_1540 = None
    mul_2559: "f32[8, 128, 56, 56]" = torch.ops.aten.mul.Tensor(sub_396, unsqueeze_1546);  sub_396 = unsqueeze_1546 = None
    mul_2560: "f32[128]" = torch.ops.aten.mul.Tensor(sum_41, squeeze_922);  sum_41 = squeeze_922 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_17 = torch.ops.aten.convolution_backward.default(mul_2559, relu_269, primals_922, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2559 = primals_922 = None
    getitem_701: "f32[8, 32, 56, 56]" = convolution_backward_17[0]
    getitem_702: "f32[128, 32, 1, 1]" = convolution_backward_17[1];  convolution_backward_17 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_327: "f32[8, 32, 56, 56]" = torch.ops.aten.alias.default(relu_269);  relu_269 = None
    alias_328: "f32[8, 32, 56, 56]" = torch.ops.aten.alias.default(alias_327);  alias_327 = None
    le_14: "b8[8, 32, 56, 56]" = torch.ops.aten.le.Scalar(alias_328, 0);  alias_328 = None
    scalar_tensor_14: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_14: "f32[8, 32, 56, 56]" = torch.ops.aten.where.self(le_14, scalar_tensor_14, getitem_701);  le_14 = scalar_tensor_14 = getitem_701 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_1547: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(squeeze_918, 0);  squeeze_918 = None
    unsqueeze_1548: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1547, 2);  unsqueeze_1547 = None
    unsqueeze_1549: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1548, 3);  unsqueeze_1548 = None
    sum_42: "f32[32]" = torch.ops.aten.sum.dim_IntList(where_14, [0, 2, 3])
    sub_397: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_306, unsqueeze_1549)
    mul_2561: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(where_14, sub_397);  sub_397 = None
    sum_43: "f32[32]" = torch.ops.aten.sum.dim_IntList(mul_2561, [0, 2, 3]);  mul_2561 = None
    mul_2562: "f32[32]" = torch.ops.aten.mul.Tensor(sum_42, 3.985969387755102e-05)
    unsqueeze_1550: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2562, 0);  mul_2562 = None
    unsqueeze_1551: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1550, 2);  unsqueeze_1550 = None
    unsqueeze_1552: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1551, 3);  unsqueeze_1551 = None
    mul_2563: "f32[32]" = torch.ops.aten.mul.Tensor(sum_43, 3.985969387755102e-05)
    mul_2564: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_919, squeeze_919)
    mul_2565: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2563, mul_2564);  mul_2563 = mul_2564 = None
    unsqueeze_1553: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2565, 0);  mul_2565 = None
    unsqueeze_1554: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1553, 2);  unsqueeze_1553 = None
    unsqueeze_1555: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1554, 3);  unsqueeze_1554 = None
    mul_2566: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_919, primals_920);  primals_920 = None
    unsqueeze_1556: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2566, 0);  mul_2566 = None
    unsqueeze_1557: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1556, 2);  unsqueeze_1556 = None
    unsqueeze_1558: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1557, 3);  unsqueeze_1557 = None
    sub_398: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_306, unsqueeze_1549);  convolution_306 = unsqueeze_1549 = None
    mul_2567: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_398, unsqueeze_1555);  sub_398 = unsqueeze_1555 = None
    sub_399: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(where_14, mul_2567);  where_14 = mul_2567 = None
    sub_400: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(sub_399, unsqueeze_1552);  sub_399 = unsqueeze_1552 = None
    mul_2568: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_400, unsqueeze_1558);  sub_400 = unsqueeze_1558 = None
    mul_2569: "f32[32]" = torch.ops.aten.mul.Tensor(sum_43, squeeze_919);  sum_43 = squeeze_919 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_18 = torch.ops.aten.convolution_backward.default(mul_2568, relu_268, primals_919, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2568 = primals_919 = None
    getitem_704: "f32[8, 32, 56, 56]" = convolution_backward_18[0]
    getitem_705: "f32[32, 32, 3, 3]" = convolution_backward_18[1];  convolution_backward_18 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_330: "f32[8, 32, 56, 56]" = torch.ops.aten.alias.default(relu_268);  relu_268 = None
    alias_331: "f32[8, 32, 56, 56]" = torch.ops.aten.alias.default(alias_330);  alias_330 = None
    le_15: "b8[8, 32, 56, 56]" = torch.ops.aten.le.Scalar(alias_331, 0);  alias_331 = None
    scalar_tensor_15: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_15: "f32[8, 32, 56, 56]" = torch.ops.aten.where.self(le_15, scalar_tensor_15, getitem_704);  le_15 = scalar_tensor_15 = getitem_704 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_1559: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(squeeze_915, 0);  squeeze_915 = None
    unsqueeze_1560: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1559, 2);  unsqueeze_1559 = None
    unsqueeze_1561: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1560, 3);  unsqueeze_1560 = None
    sum_44: "f32[32]" = torch.ops.aten.sum.dim_IntList(where_15, [0, 2, 3])
    sub_401: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_305, unsqueeze_1561)
    mul_2570: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(where_15, sub_401);  sub_401 = None
    sum_45: "f32[32]" = torch.ops.aten.sum.dim_IntList(mul_2570, [0, 2, 3]);  mul_2570 = None
    mul_2571: "f32[32]" = torch.ops.aten.mul.Tensor(sum_44, 3.985969387755102e-05)
    unsqueeze_1562: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2571, 0);  mul_2571 = None
    unsqueeze_1563: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1562, 2);  unsqueeze_1562 = None
    unsqueeze_1564: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1563, 3);  unsqueeze_1563 = None
    mul_2572: "f32[32]" = torch.ops.aten.mul.Tensor(sum_45, 3.985969387755102e-05)
    mul_2573: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_916, squeeze_916)
    mul_2574: "f32[32]" = torch.ops.aten.mul.Tensor(mul_2572, mul_2573);  mul_2572 = mul_2573 = None
    unsqueeze_1565: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2574, 0);  mul_2574 = None
    unsqueeze_1566: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1565, 2);  unsqueeze_1565 = None
    unsqueeze_1567: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1566, 3);  unsqueeze_1566 = None
    mul_2575: "f32[32]" = torch.ops.aten.mul.Tensor(squeeze_916, primals_917);  primals_917 = None
    unsqueeze_1568: "f32[1, 32]" = torch.ops.aten.unsqueeze.default(mul_2575, 0);  mul_2575 = None
    unsqueeze_1569: "f32[1, 32, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1568, 2);  unsqueeze_1568 = None
    unsqueeze_1570: "f32[1, 32, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1569, 3);  unsqueeze_1569 = None
    sub_402: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_305, unsqueeze_1561);  convolution_305 = unsqueeze_1561 = None
    mul_2576: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_402, unsqueeze_1567);  sub_402 = unsqueeze_1567 = None
    sub_403: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(where_15, mul_2576);  where_15 = mul_2576 = None
    sub_404: "f32[8, 32, 56, 56]" = torch.ops.aten.sub.Tensor(sub_403, unsqueeze_1564);  sub_403 = unsqueeze_1564 = None
    mul_2577: "f32[8, 32, 56, 56]" = torch.ops.aten.mul.Tensor(sub_404, unsqueeze_1570);  sub_404 = unsqueeze_1570 = None
    mul_2578: "f32[32]" = torch.ops.aten.mul.Tensor(sum_45, squeeze_916);  sum_45 = squeeze_916 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_19 = torch.ops.aten.convolution_backward.default(mul_2577, relu_260, primals_916, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2577 = relu_260 = primals_916 = None
    getitem_707: "f32[8, 18, 56, 56]" = convolution_backward_19[0]
    getitem_708: "f32[32, 18, 1, 1]" = convolution_backward_19[1];  convolution_backward_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_1929: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_698, getitem_707);  getitem_698 = getitem_707 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_332: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_267);  alias_267 = None
    le_16: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_332, 0);  alias_332 = None
    scalar_tensor_16: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_16: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_16, scalar_tensor_16, add_1926);  le_16 = scalar_tensor_16 = add_1926 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_1571: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_912, 0);  squeeze_912 = None
    unsqueeze_1572: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1571, 2);  unsqueeze_1571 = None
    unsqueeze_1573: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1572, 3);  unsqueeze_1572 = None
    sum_46: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_16, [0, 2, 3])
    sub_405: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_304, unsqueeze_1573)
    mul_2579: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_16, sub_405);  sub_405 = None
    sum_47: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2579, [0, 2, 3]);  mul_2579 = None
    mul_2580: "f32[144]" = torch.ops.aten.mul.Tensor(sum_46, 0.002551020408163265)
    unsqueeze_1574: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2580, 0);  mul_2580 = None
    unsqueeze_1575: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1574, 2);  unsqueeze_1574 = None
    unsqueeze_1576: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1575, 3);  unsqueeze_1575 = None
    mul_2581: "f32[144]" = torch.ops.aten.mul.Tensor(sum_47, 0.002551020408163265)
    mul_2582: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_913, squeeze_913)
    mul_2583: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2581, mul_2582);  mul_2581 = mul_2582 = None
    unsqueeze_1577: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2583, 0);  mul_2583 = None
    unsqueeze_1578: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1577, 2);  unsqueeze_1577 = None
    unsqueeze_1579: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1578, 3);  unsqueeze_1578 = None
    mul_2584: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_913, primals_914);  primals_914 = None
    unsqueeze_1580: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2584, 0);  mul_2584 = None
    unsqueeze_1581: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1580, 2);  unsqueeze_1580 = None
    unsqueeze_1582: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1581, 3);  unsqueeze_1581 = None
    sub_406: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_304, unsqueeze_1573);  convolution_304 = unsqueeze_1573 = None
    mul_2585: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_406, unsqueeze_1579);  sub_406 = unsqueeze_1579 = None
    sub_407: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_16, mul_2585);  mul_2585 = None
    sub_408: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_407, unsqueeze_1576);  sub_407 = unsqueeze_1576 = None
    mul_2586: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_408, unsqueeze_1582);  sub_408 = unsqueeze_1582 = None
    mul_2587: "f32[144]" = torch.ops.aten.mul.Tensor(sum_47, squeeze_913);  sum_47 = squeeze_913 = None
    convolution_backward_20 = torch.ops.aten.convolution_backward.default(mul_2586, relu_251, primals_913, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2586 = primals_913 = None
    getitem_710: "f32[8, 72, 14, 14]" = convolution_backward_20[0]
    getitem_711: "f32[144, 72, 3, 3]" = convolution_backward_20[1];  convolution_backward_20 = None
    unsqueeze_1583: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_909, 0);  squeeze_909 = None
    unsqueeze_1584: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1583, 2);  unsqueeze_1583 = None
    unsqueeze_1585: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1584, 3);  unsqueeze_1584 = None
    sum_48: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_16, [0, 2, 3])
    sub_409: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_303, unsqueeze_1585)
    mul_2588: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_16, sub_409);  sub_409 = None
    sum_49: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2588, [0, 2, 3]);  mul_2588 = None
    mul_2589: "f32[144]" = torch.ops.aten.mul.Tensor(sum_48, 0.002551020408163265)
    unsqueeze_1586: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2589, 0);  mul_2589 = None
    unsqueeze_1587: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1586, 2);  unsqueeze_1586 = None
    unsqueeze_1588: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1587, 3);  unsqueeze_1587 = None
    mul_2590: "f32[144]" = torch.ops.aten.mul.Tensor(sum_49, 0.002551020408163265)
    mul_2591: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_910, squeeze_910)
    mul_2592: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2590, mul_2591);  mul_2590 = mul_2591 = None
    unsqueeze_1589: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2592, 0);  mul_2592 = None
    unsqueeze_1590: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1589, 2);  unsqueeze_1589 = None
    unsqueeze_1591: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1590, 3);  unsqueeze_1590 = None
    mul_2593: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_910, primals_911);  primals_911 = None
    unsqueeze_1592: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2593, 0);  mul_2593 = None
    unsqueeze_1593: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1592, 2);  unsqueeze_1592 = None
    unsqueeze_1594: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1593, 3);  unsqueeze_1593 = None
    sub_410: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_303, unsqueeze_1585);  convolution_303 = unsqueeze_1585 = None
    mul_2594: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_410, unsqueeze_1591);  sub_410 = unsqueeze_1591 = None
    sub_411: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_16, mul_2594);  mul_2594 = None
    sub_412: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_411, unsqueeze_1588);  sub_411 = unsqueeze_1588 = None
    mul_2595: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_412, unsqueeze_1594);  sub_412 = unsqueeze_1594 = None
    mul_2596: "f32[144]" = torch.ops.aten.mul.Tensor(sum_49, squeeze_910);  sum_49 = squeeze_910 = None
    convolution_backward_21 = torch.ops.aten.convolution_backward.default(mul_2595, relu_266, primals_910, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2595 = relu_266 = primals_910 = None
    getitem_713: "f32[8, 36, 14, 14]" = convolution_backward_21[0]
    getitem_714: "f32[144, 36, 3, 3]" = convolution_backward_21[1];  convolution_backward_21 = None
    alias_333: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(alias_266);  alias_266 = None
    le_17: "b8[8, 36, 14, 14]" = torch.ops.aten.le.Scalar(alias_333, 0);  alias_333 = None
    scalar_tensor_17: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_17: "f32[8, 36, 14, 14]" = torch.ops.aten.where.self(le_17, scalar_tensor_17, getitem_713);  le_17 = scalar_tensor_17 = getitem_713 = None
    unsqueeze_1595: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_906, 0);  squeeze_906 = None
    unsqueeze_1596: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1595, 2);  unsqueeze_1595 = None
    unsqueeze_1597: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1596, 3);  unsqueeze_1596 = None
    sum_50: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_17, [0, 2, 3])
    sub_413: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_302, unsqueeze_1597)
    mul_2597: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(where_17, sub_413);  sub_413 = None
    sum_51: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2597, [0, 2, 3]);  mul_2597 = None
    mul_2598: "f32[36]" = torch.ops.aten.mul.Tensor(sum_50, 0.0006377551020408163)
    unsqueeze_1598: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2598, 0);  mul_2598 = None
    unsqueeze_1599: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1598, 2);  unsqueeze_1598 = None
    unsqueeze_1600: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1599, 3);  unsqueeze_1599 = None
    mul_2599: "f32[36]" = torch.ops.aten.mul.Tensor(sum_51, 0.0006377551020408163)
    mul_2600: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_907, squeeze_907)
    mul_2601: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2599, mul_2600);  mul_2599 = mul_2600 = None
    unsqueeze_1601: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2601, 0);  mul_2601 = None
    unsqueeze_1602: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1601, 2);  unsqueeze_1601 = None
    unsqueeze_1603: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1602, 3);  unsqueeze_1602 = None
    mul_2602: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_907, primals_908);  primals_908 = None
    unsqueeze_1604: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2602, 0);  mul_2602 = None
    unsqueeze_1605: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1604, 2);  unsqueeze_1604 = None
    unsqueeze_1606: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1605, 3);  unsqueeze_1605 = None
    sub_414: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_302, unsqueeze_1597);  convolution_302 = unsqueeze_1597 = None
    mul_2603: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_414, unsqueeze_1603);  sub_414 = unsqueeze_1603 = None
    sub_415: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(where_17, mul_2603);  where_17 = mul_2603 = None
    sub_416: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_415, unsqueeze_1600);  sub_415 = unsqueeze_1600 = None
    mul_2604: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_416, unsqueeze_1606);  sub_416 = unsqueeze_1606 = None
    mul_2605: "f32[36]" = torch.ops.aten.mul.Tensor(sum_51, squeeze_907);  sum_51 = squeeze_907 = None
    convolution_backward_22 = torch.ops.aten.convolution_backward.default(mul_2604, relu_243, primals_907, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2604 = primals_907 = None
    getitem_716: "f32[8, 36, 28, 28]" = convolution_backward_22[0]
    getitem_717: "f32[36, 36, 3, 3]" = convolution_backward_22[1];  convolution_backward_22 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_1607: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_903, 0);  squeeze_903 = None
    unsqueeze_1608: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1607, 2);  unsqueeze_1607 = None
    unsqueeze_1609: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1608, 3);  unsqueeze_1608 = None
    sum_52: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_16, [0, 2, 3])
    sub_417: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_301, unsqueeze_1609)
    mul_2606: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_16, sub_417);  sub_417 = None
    sum_53: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2606, [0, 2, 3]);  mul_2606 = None
    mul_2607: "f32[144]" = torch.ops.aten.mul.Tensor(sum_52, 0.002551020408163265)
    unsqueeze_1610: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2607, 0);  mul_2607 = None
    unsqueeze_1611: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1610, 2);  unsqueeze_1610 = None
    unsqueeze_1612: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1611, 3);  unsqueeze_1611 = None
    mul_2608: "f32[144]" = torch.ops.aten.mul.Tensor(sum_53, 0.002551020408163265)
    mul_2609: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_904, squeeze_904)
    mul_2610: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2608, mul_2609);  mul_2608 = mul_2609 = None
    unsqueeze_1613: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2610, 0);  mul_2610 = None
    unsqueeze_1614: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1613, 2);  unsqueeze_1613 = None
    unsqueeze_1615: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1614, 3);  unsqueeze_1614 = None
    mul_2611: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_904, primals_905);  primals_905 = None
    unsqueeze_1616: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2611, 0);  mul_2611 = None
    unsqueeze_1617: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1616, 2);  unsqueeze_1616 = None
    unsqueeze_1618: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1617, 3);  unsqueeze_1617 = None
    sub_418: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_301, unsqueeze_1609);  convolution_301 = unsqueeze_1609 = None
    mul_2612: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_418, unsqueeze_1615);  sub_418 = unsqueeze_1615 = None
    sub_419: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_16, mul_2612);  mul_2612 = None
    sub_420: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_419, unsqueeze_1612);  sub_419 = unsqueeze_1612 = None
    mul_2613: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_420, unsqueeze_1618);  sub_420 = unsqueeze_1618 = None
    mul_2614: "f32[144]" = torch.ops.aten.mul.Tensor(sum_53, squeeze_904);  sum_53 = squeeze_904 = None
    convolution_backward_23 = torch.ops.aten.convolution_backward.default(mul_2613, relu_265, primals_904, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2613 = relu_265 = primals_904 = None
    getitem_719: "f32[8, 18, 14, 14]" = convolution_backward_23[0]
    getitem_720: "f32[144, 18, 3, 3]" = convolution_backward_23[1];  convolution_backward_23 = None
    alias_334: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(alias_265);  alias_265 = None
    le_18: "b8[8, 18, 14, 14]" = torch.ops.aten.le.Scalar(alias_334, 0);  alias_334 = None
    scalar_tensor_18: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_18: "f32[8, 18, 14, 14]" = torch.ops.aten.where.self(le_18, scalar_tensor_18, getitem_719);  le_18 = scalar_tensor_18 = getitem_719 = None
    unsqueeze_1619: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_900, 0);  squeeze_900 = None
    unsqueeze_1620: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1619, 2);  unsqueeze_1619 = None
    unsqueeze_1621: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1620, 3);  unsqueeze_1620 = None
    sum_54: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_18, [0, 2, 3])
    sub_421: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_300, unsqueeze_1621)
    mul_2615: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(where_18, sub_421);  sub_421 = None
    sum_55: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2615, [0, 2, 3]);  mul_2615 = None
    mul_2616: "f32[18]" = torch.ops.aten.mul.Tensor(sum_54, 0.0006377551020408163)
    unsqueeze_1622: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2616, 0);  mul_2616 = None
    unsqueeze_1623: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1622, 2);  unsqueeze_1622 = None
    unsqueeze_1624: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1623, 3);  unsqueeze_1623 = None
    mul_2617: "f32[18]" = torch.ops.aten.mul.Tensor(sum_55, 0.0006377551020408163)
    mul_2618: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_901, squeeze_901)
    mul_2619: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2617, mul_2618);  mul_2617 = mul_2618 = None
    unsqueeze_1625: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2619, 0);  mul_2619 = None
    unsqueeze_1626: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1625, 2);  unsqueeze_1625 = None
    unsqueeze_1627: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1626, 3);  unsqueeze_1626 = None
    mul_2620: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_901, primals_902);  primals_902 = None
    unsqueeze_1628: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2620, 0);  mul_2620 = None
    unsqueeze_1629: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1628, 2);  unsqueeze_1628 = None
    unsqueeze_1630: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1629, 3);  unsqueeze_1629 = None
    sub_422: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_300, unsqueeze_1621);  convolution_300 = unsqueeze_1621 = None
    mul_2621: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_422, unsqueeze_1627);  sub_422 = unsqueeze_1627 = None
    sub_423: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(where_18, mul_2621);  where_18 = mul_2621 = None
    sub_424: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_423, unsqueeze_1624);  sub_423 = unsqueeze_1624 = None
    mul_2622: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_424, unsqueeze_1630);  sub_424 = unsqueeze_1630 = None
    mul_2623: "f32[18]" = torch.ops.aten.mul.Tensor(sum_55, squeeze_901);  sum_55 = squeeze_901 = None
    convolution_backward_24 = torch.ops.aten.convolution_backward.default(mul_2622, relu_264, primals_901, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2622 = relu_264 = primals_901 = None
    getitem_722: "f32[8, 18, 28, 28]" = convolution_backward_24[0]
    getitem_723: "f32[18, 18, 3, 3]" = convolution_backward_24[1];  convolution_backward_24 = None
    alias_335: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_264);  alias_264 = None
    le_19: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_335, 0);  alias_335 = None
    scalar_tensor_19: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_19: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_19, scalar_tensor_19, getitem_722);  le_19 = scalar_tensor_19 = getitem_722 = None
    unsqueeze_1631: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_897, 0);  squeeze_897 = None
    unsqueeze_1632: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1631, 2);  unsqueeze_1631 = None
    unsqueeze_1633: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1632, 3);  unsqueeze_1632 = None
    sum_56: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_19, [0, 2, 3])
    sub_425: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_299, unsqueeze_1633)
    mul_2624: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_19, sub_425);  sub_425 = None
    sum_57: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2624, [0, 2, 3]);  mul_2624 = None
    mul_2625: "f32[18]" = torch.ops.aten.mul.Tensor(sum_56, 0.00015943877551020407)
    unsqueeze_1634: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2625, 0);  mul_2625 = None
    unsqueeze_1635: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1634, 2);  unsqueeze_1634 = None
    unsqueeze_1636: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1635, 3);  unsqueeze_1635 = None
    mul_2626: "f32[18]" = torch.ops.aten.mul.Tensor(sum_57, 0.00015943877551020407)
    mul_2627: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_898, squeeze_898)
    mul_2628: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2626, mul_2627);  mul_2626 = mul_2627 = None
    unsqueeze_1637: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2628, 0);  mul_2628 = None
    unsqueeze_1638: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1637, 2);  unsqueeze_1637 = None
    unsqueeze_1639: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1638, 3);  unsqueeze_1638 = None
    mul_2629: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_898, primals_899);  primals_899 = None
    unsqueeze_1640: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2629, 0);  mul_2629 = None
    unsqueeze_1641: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1640, 2);  unsqueeze_1640 = None
    unsqueeze_1642: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1641, 3);  unsqueeze_1641 = None
    sub_426: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_299, unsqueeze_1633);  convolution_299 = unsqueeze_1633 = None
    mul_2630: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_426, unsqueeze_1639);  sub_426 = unsqueeze_1639 = None
    sub_427: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_19, mul_2630);  where_19 = mul_2630 = None
    sub_428: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_427, unsqueeze_1636);  sub_427 = unsqueeze_1636 = None
    mul_2631: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_428, unsqueeze_1642);  sub_428 = unsqueeze_1642 = None
    mul_2632: "f32[18]" = torch.ops.aten.mul.Tensor(sum_57, squeeze_898);  sum_57 = squeeze_898 = None
    convolution_backward_25 = torch.ops.aten.convolution_backward.default(mul_2631, relu_235, primals_898, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2631 = primals_898 = None
    getitem_725: "f32[8, 18, 56, 56]" = convolution_backward_25[0]
    getitem_726: "f32[18, 18, 3, 3]" = convolution_backward_25[1];  convolution_backward_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_336: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_263);  alias_263 = None
    le_20: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_336, 0);  alias_336 = None
    scalar_tensor_20: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_20: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_20, scalar_tensor_20, add_1927);  le_20 = scalar_tensor_20 = add_1927 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full: "f32[8, 72, 7, 7]" = torch.ops.aten.full.default([8, 72, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put: "f32[8, 72, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full, [None, None, unsqueeze_1226, convert_element_type_123], where_20, True);  full = unsqueeze_1226 = convert_element_type_123 = None
    unsqueeze_1643: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_894, 0);  squeeze_894 = None
    unsqueeze_1644: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1643, 2);  unsqueeze_1643 = None
    unsqueeze_1645: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1644, 3);  unsqueeze_1644 = None
    sum_58: "f32[72]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put, [0, 2, 3])
    sub_429: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_298, unsqueeze_1645)
    mul_2633: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put, sub_429);  sub_429 = None
    sum_59: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2633, [0, 2, 3]);  mul_2633 = None
    mul_2634: "f32[72]" = torch.ops.aten.mul.Tensor(sum_58, 0.002551020408163265)
    unsqueeze_1646: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2634, 0);  mul_2634 = None
    unsqueeze_1647: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1646, 2);  unsqueeze_1646 = None
    unsqueeze_1648: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1647, 3);  unsqueeze_1647 = None
    mul_2635: "f32[72]" = torch.ops.aten.mul.Tensor(sum_59, 0.002551020408163265)
    mul_2636: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_895, squeeze_895)
    mul_2637: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2635, mul_2636);  mul_2635 = mul_2636 = None
    unsqueeze_1649: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2637, 0);  mul_2637 = None
    unsqueeze_1650: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1649, 2);  unsqueeze_1649 = None
    unsqueeze_1651: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1650, 3);  unsqueeze_1650 = None
    mul_2638: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_895, primals_896);  primals_896 = None
    unsqueeze_1652: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2638, 0);  mul_2638 = None
    unsqueeze_1653: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1652, 2);  unsqueeze_1652 = None
    unsqueeze_1654: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1653, 3);  unsqueeze_1653 = None
    sub_430: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_298, unsqueeze_1645);  convolution_298 = unsqueeze_1645 = None
    mul_2639: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_430, unsqueeze_1651);  sub_430 = unsqueeze_1651 = None
    sub_431: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put, mul_2639);  _unsafe_index_put = mul_2639 = None
    sub_432: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(sub_431, unsqueeze_1648);  sub_431 = unsqueeze_1648 = None
    mul_2640: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_432, unsqueeze_1654);  sub_432 = unsqueeze_1654 = None
    mul_2641: "f32[72]" = torch.ops.aten.mul.Tensor(sum_59, squeeze_895);  sum_59 = squeeze_895 = None
    convolution_backward_26 = torch.ops.aten.convolution_backward.default(mul_2640, relu_259, primals_895, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2640 = primals_895 = None
    getitem_728: "f32[8, 144, 7, 7]" = convolution_backward_26[0]
    getitem_729: "f32[72, 144, 1, 1]" = convolution_backward_26[1];  convolution_backward_26 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1930: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_16, getitem_728);  where_16 = getitem_728 = None
    add_1931: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(getitem_710, where_20);  getitem_710 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_1655: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_891, 0);  squeeze_891 = None
    unsqueeze_1656: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1655, 2);  unsqueeze_1655 = None
    unsqueeze_1657: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1656, 3);  unsqueeze_1656 = None
    sum_60: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_20, [0, 2, 3])
    sub_433: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_297, unsqueeze_1657)
    mul_2642: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_20, sub_433);  sub_433 = None
    sum_61: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2642, [0, 2, 3]);  mul_2642 = None
    mul_2643: "f32[72]" = torch.ops.aten.mul.Tensor(sum_60, 0.0006377551020408163)
    unsqueeze_1658: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2643, 0);  mul_2643 = None
    unsqueeze_1659: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1658, 2);  unsqueeze_1658 = None
    unsqueeze_1660: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1659, 3);  unsqueeze_1659 = None
    mul_2644: "f32[72]" = torch.ops.aten.mul.Tensor(sum_61, 0.0006377551020408163)
    mul_2645: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_892, squeeze_892)
    mul_2646: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2644, mul_2645);  mul_2644 = mul_2645 = None
    unsqueeze_1661: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2646, 0);  mul_2646 = None
    unsqueeze_1662: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1661, 2);  unsqueeze_1661 = None
    unsqueeze_1663: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1662, 3);  unsqueeze_1662 = None
    mul_2647: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_892, primals_893);  primals_893 = None
    unsqueeze_1664: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2647, 0);  mul_2647 = None
    unsqueeze_1665: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1664, 2);  unsqueeze_1664 = None
    unsqueeze_1666: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1665, 3);  unsqueeze_1665 = None
    sub_434: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_297, unsqueeze_1657);  convolution_297 = unsqueeze_1657 = None
    mul_2648: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_434, unsqueeze_1663);  sub_434 = unsqueeze_1663 = None
    sub_435: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_20, mul_2648);  mul_2648 = None
    sub_436: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_435, unsqueeze_1660);  sub_435 = unsqueeze_1660 = None
    mul_2649: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_436, unsqueeze_1666);  sub_436 = unsqueeze_1666 = None
    mul_2650: "f32[72]" = torch.ops.aten.mul.Tensor(sum_61, squeeze_892);  sum_61 = squeeze_892 = None
    convolution_backward_27 = torch.ops.aten.convolution_backward.default(mul_2649, relu_243, primals_892, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2649 = primals_892 = None
    getitem_731: "f32[8, 36, 28, 28]" = convolution_backward_27[0]
    getitem_732: "f32[72, 36, 3, 3]" = convolution_backward_27[1];  convolution_backward_27 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1932: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_716, getitem_731);  getitem_716 = getitem_731 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_1667: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_888, 0);  squeeze_888 = None
    unsqueeze_1668: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1667, 2);  unsqueeze_1667 = None
    unsqueeze_1669: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1668, 3);  unsqueeze_1668 = None
    sum_62: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_20, [0, 2, 3])
    sub_437: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_296, unsqueeze_1669)
    mul_2651: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_20, sub_437);  sub_437 = None
    sum_63: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2651, [0, 2, 3]);  mul_2651 = None
    mul_2652: "f32[72]" = torch.ops.aten.mul.Tensor(sum_62, 0.0006377551020408163)
    unsqueeze_1670: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2652, 0);  mul_2652 = None
    unsqueeze_1671: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1670, 2);  unsqueeze_1670 = None
    unsqueeze_1672: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1671, 3);  unsqueeze_1671 = None
    mul_2653: "f32[72]" = torch.ops.aten.mul.Tensor(sum_63, 0.0006377551020408163)
    mul_2654: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_889, squeeze_889)
    mul_2655: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2653, mul_2654);  mul_2653 = mul_2654 = None
    unsqueeze_1673: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2655, 0);  mul_2655 = None
    unsqueeze_1674: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1673, 2);  unsqueeze_1673 = None
    unsqueeze_1675: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1674, 3);  unsqueeze_1674 = None
    mul_2656: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_889, primals_890);  primals_890 = None
    unsqueeze_1676: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2656, 0);  mul_2656 = None
    unsqueeze_1677: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1676, 2);  unsqueeze_1676 = None
    unsqueeze_1678: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1677, 3);  unsqueeze_1677 = None
    sub_438: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_296, unsqueeze_1669);  convolution_296 = unsqueeze_1669 = None
    mul_2657: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_438, unsqueeze_1675);  sub_438 = unsqueeze_1675 = None
    sub_439: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_20, mul_2657);  where_20 = mul_2657 = None
    sub_440: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_439, unsqueeze_1672);  sub_439 = unsqueeze_1672 = None
    mul_2658: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_440, unsqueeze_1678);  sub_440 = unsqueeze_1678 = None
    mul_2659: "f32[72]" = torch.ops.aten.mul.Tensor(sum_63, squeeze_889);  sum_63 = squeeze_889 = None
    convolution_backward_28 = torch.ops.aten.convolution_backward.default(mul_2658, relu_262, primals_889, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2658 = relu_262 = primals_889 = None
    getitem_734: "f32[8, 18, 28, 28]" = convolution_backward_28[0]
    getitem_735: "f32[72, 18, 3, 3]" = convolution_backward_28[1];  convolution_backward_28 = None
    alias_337: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_262);  alias_262 = None
    le_21: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_337, 0);  alias_337 = None
    scalar_tensor_21: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_21: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_21, scalar_tensor_21, getitem_734);  le_21 = scalar_tensor_21 = getitem_734 = None
    unsqueeze_1679: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_885, 0);  squeeze_885 = None
    unsqueeze_1680: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1679, 2);  unsqueeze_1679 = None
    unsqueeze_1681: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1680, 3);  unsqueeze_1680 = None
    sum_64: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_21, [0, 2, 3])
    sub_441: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_295, unsqueeze_1681)
    mul_2660: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_21, sub_441);  sub_441 = None
    sum_65: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2660, [0, 2, 3]);  mul_2660 = None
    mul_2661: "f32[18]" = torch.ops.aten.mul.Tensor(sum_64, 0.00015943877551020407)
    unsqueeze_1682: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2661, 0);  mul_2661 = None
    unsqueeze_1683: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1682, 2);  unsqueeze_1682 = None
    unsqueeze_1684: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1683, 3);  unsqueeze_1683 = None
    mul_2662: "f32[18]" = torch.ops.aten.mul.Tensor(sum_65, 0.00015943877551020407)
    mul_2663: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_886, squeeze_886)
    mul_2664: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2662, mul_2663);  mul_2662 = mul_2663 = None
    unsqueeze_1685: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2664, 0);  mul_2664 = None
    unsqueeze_1686: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1685, 2);  unsqueeze_1685 = None
    unsqueeze_1687: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1686, 3);  unsqueeze_1686 = None
    mul_2665: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_886, primals_887);  primals_887 = None
    unsqueeze_1688: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2665, 0);  mul_2665 = None
    unsqueeze_1689: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1688, 2);  unsqueeze_1688 = None
    unsqueeze_1690: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1689, 3);  unsqueeze_1689 = None
    sub_442: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_295, unsqueeze_1681);  convolution_295 = unsqueeze_1681 = None
    mul_2666: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_442, unsqueeze_1687);  sub_442 = unsqueeze_1687 = None
    sub_443: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_21, mul_2666);  where_21 = mul_2666 = None
    sub_444: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_443, unsqueeze_1684);  sub_443 = unsqueeze_1684 = None
    mul_2667: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_444, unsqueeze_1690);  sub_444 = unsqueeze_1690 = None
    mul_2668: "f32[18]" = torch.ops.aten.mul.Tensor(sum_65, squeeze_886);  sum_65 = squeeze_886 = None
    convolution_backward_29 = torch.ops.aten.convolution_backward.default(mul_2667, relu_235, primals_886, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2667 = primals_886 = None
    getitem_737: "f32[8, 18, 56, 56]" = convolution_backward_29[0]
    getitem_738: "f32[18, 18, 3, 3]" = convolution_backward_29[1];  convolution_backward_29 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1933: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_725, getitem_737);  getitem_725 = getitem_737 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_338: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_261);  alias_261 = None
    le_22: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_338, 0);  alias_338 = None
    scalar_tensor_22: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_22: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_22, scalar_tensor_22, add_1928);  le_22 = scalar_tensor_22 = add_1928 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_1: "f32[8, 36, 7, 7]" = torch.ops.aten.full.default([8, 36, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_1: "f32[8, 36, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_1, [None, None, unsqueeze_1209, convert_element_type_119], where_22, True);  full_1 = unsqueeze_1209 = convert_element_type_119 = None
    unsqueeze_1691: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_882, 0);  squeeze_882 = None
    unsqueeze_1692: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1691, 2);  unsqueeze_1691 = None
    unsqueeze_1693: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1692, 3);  unsqueeze_1692 = None
    sum_66: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_1, [0, 2, 3])
    sub_445: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_294, unsqueeze_1693)
    mul_2669: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_1, sub_445);  sub_445 = None
    sum_67: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2669, [0, 2, 3]);  mul_2669 = None
    mul_2670: "f32[36]" = torch.ops.aten.mul.Tensor(sum_66, 0.002551020408163265)
    unsqueeze_1694: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2670, 0);  mul_2670 = None
    unsqueeze_1695: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1694, 2);  unsqueeze_1694 = None
    unsqueeze_1696: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1695, 3);  unsqueeze_1695 = None
    mul_2671: "f32[36]" = torch.ops.aten.mul.Tensor(sum_67, 0.002551020408163265)
    mul_2672: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_883, squeeze_883)
    mul_2673: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2671, mul_2672);  mul_2671 = mul_2672 = None
    unsqueeze_1697: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2673, 0);  mul_2673 = None
    unsqueeze_1698: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1697, 2);  unsqueeze_1697 = None
    unsqueeze_1699: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1698, 3);  unsqueeze_1698 = None
    mul_2674: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_883, primals_884);  primals_884 = None
    unsqueeze_1700: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2674, 0);  mul_2674 = None
    unsqueeze_1701: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1700, 2);  unsqueeze_1700 = None
    unsqueeze_1702: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1701, 3);  unsqueeze_1701 = None
    sub_446: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_294, unsqueeze_1693);  convolution_294 = unsqueeze_1693 = None
    mul_2675: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_446, unsqueeze_1699);  sub_446 = unsqueeze_1699 = None
    sub_447: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_1, mul_2675);  _unsafe_index_put_1 = mul_2675 = None
    sub_448: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(sub_447, unsqueeze_1696);  sub_447 = unsqueeze_1696 = None
    mul_2676: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_448, unsqueeze_1702);  sub_448 = unsqueeze_1702 = None
    mul_2677: "f32[36]" = torch.ops.aten.mul.Tensor(sum_67, squeeze_883);  sum_67 = squeeze_883 = None
    convolution_backward_30 = torch.ops.aten.convolution_backward.default(mul_2676, relu_259, primals_883, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2676 = primals_883 = None
    getitem_740: "f32[8, 144, 7, 7]" = convolution_backward_30[0]
    getitem_741: "f32[36, 144, 1, 1]" = convolution_backward_30[1];  convolution_backward_30 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1934: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1930, getitem_740);  add_1930 = getitem_740 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_2: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_2: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_2, [None, None, unsqueeze_1204, convert_element_type_115], where_22, True);  full_2 = unsqueeze_1204 = convert_element_type_115 = None
    unsqueeze_1703: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_879, 0);  squeeze_879 = None
    unsqueeze_1704: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1703, 2);  unsqueeze_1703 = None
    unsqueeze_1705: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1704, 3);  unsqueeze_1704 = None
    sum_68: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_2, [0, 2, 3])
    sub_449: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_293, unsqueeze_1705)
    mul_2678: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_2, sub_449);  sub_449 = None
    sum_69: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2678, [0, 2, 3]);  mul_2678 = None
    mul_2679: "f32[36]" = torch.ops.aten.mul.Tensor(sum_68, 0.0006377551020408163)
    unsqueeze_1706: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2679, 0);  mul_2679 = None
    unsqueeze_1707: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1706, 2);  unsqueeze_1706 = None
    unsqueeze_1708: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1707, 3);  unsqueeze_1707 = None
    mul_2680: "f32[36]" = torch.ops.aten.mul.Tensor(sum_69, 0.0006377551020408163)
    mul_2681: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_880, squeeze_880)
    mul_2682: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2680, mul_2681);  mul_2680 = mul_2681 = None
    unsqueeze_1709: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2682, 0);  mul_2682 = None
    unsqueeze_1710: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1709, 2);  unsqueeze_1709 = None
    unsqueeze_1711: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1710, 3);  unsqueeze_1710 = None
    mul_2683: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_880, primals_881);  primals_881 = None
    unsqueeze_1712: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2683, 0);  mul_2683 = None
    unsqueeze_1713: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1712, 2);  unsqueeze_1712 = None
    unsqueeze_1714: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1713, 3);  unsqueeze_1713 = None
    sub_450: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_293, unsqueeze_1705);  convolution_293 = unsqueeze_1705 = None
    mul_2684: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_450, unsqueeze_1711);  sub_450 = unsqueeze_1711 = None
    sub_451: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_2, mul_2684);  _unsafe_index_put_2 = mul_2684 = None
    sub_452: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_451, unsqueeze_1708);  sub_451 = unsqueeze_1708 = None
    mul_2685: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_452, unsqueeze_1714);  sub_452 = unsqueeze_1714 = None
    mul_2686: "f32[36]" = torch.ops.aten.mul.Tensor(sum_69, squeeze_880);  sum_69 = squeeze_880 = None
    convolution_backward_31 = torch.ops.aten.convolution_backward.default(mul_2685, relu_251, primals_880, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2685 = primals_880 = None
    getitem_743: "f32[8, 72, 14, 14]" = convolution_backward_31[0]
    getitem_744: "f32[36, 72, 1, 1]" = convolution_backward_31[1];  convolution_backward_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1935: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1931, getitem_743);  add_1931 = getitem_743 = None
    add_1936: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1932, where_22);  add_1932 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_1715: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_876, 0);  squeeze_876 = None
    unsqueeze_1716: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1715, 2);  unsqueeze_1715 = None
    unsqueeze_1717: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1716, 3);  unsqueeze_1716 = None
    sum_70: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_22, [0, 2, 3])
    sub_453: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_292, unsqueeze_1717)
    mul_2687: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_22, sub_453);  sub_453 = None
    sum_71: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2687, [0, 2, 3]);  mul_2687 = None
    mul_2688: "f32[36]" = torch.ops.aten.mul.Tensor(sum_70, 0.00015943877551020407)
    unsqueeze_1718: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2688, 0);  mul_2688 = None
    unsqueeze_1719: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1718, 2);  unsqueeze_1718 = None
    unsqueeze_1720: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1719, 3);  unsqueeze_1719 = None
    mul_2689: "f32[36]" = torch.ops.aten.mul.Tensor(sum_71, 0.00015943877551020407)
    mul_2690: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_877, squeeze_877)
    mul_2691: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2689, mul_2690);  mul_2689 = mul_2690 = None
    unsqueeze_1721: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2691, 0);  mul_2691 = None
    unsqueeze_1722: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1721, 2);  unsqueeze_1721 = None
    unsqueeze_1723: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1722, 3);  unsqueeze_1722 = None
    mul_2692: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_877, primals_878);  primals_878 = None
    unsqueeze_1724: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2692, 0);  mul_2692 = None
    unsqueeze_1725: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1724, 2);  unsqueeze_1724 = None
    unsqueeze_1726: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1725, 3);  unsqueeze_1725 = None
    sub_454: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_292, unsqueeze_1717);  convolution_292 = unsqueeze_1717 = None
    mul_2693: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_454, unsqueeze_1723);  sub_454 = unsqueeze_1723 = None
    sub_455: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_22, mul_2693);  where_22 = mul_2693 = None
    sub_456: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_455, unsqueeze_1720);  sub_455 = unsqueeze_1720 = None
    mul_2694: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_456, unsqueeze_1726);  sub_456 = unsqueeze_1726 = None
    mul_2695: "f32[36]" = torch.ops.aten.mul.Tensor(sum_71, squeeze_877);  sum_71 = squeeze_877 = None
    convolution_backward_32 = torch.ops.aten.convolution_backward.default(mul_2694, relu_235, primals_877, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2694 = primals_877 = None
    getitem_746: "f32[8, 18, 56, 56]" = convolution_backward_32[0]
    getitem_747: "f32[36, 18, 3, 3]" = convolution_backward_32[1];  convolution_backward_32 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1937: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1933, getitem_746);  add_1933 = getitem_746 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_339: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_260);  alias_260 = None
    le_23: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_339, 0);  alias_339 = None
    scalar_tensor_23: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_23: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_23, scalar_tensor_23, add_1929);  le_23 = scalar_tensor_23 = add_1929 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_3: "f32[8, 18, 7, 7]" = torch.ops.aten.full.default([8, 18, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_3: "f32[8, 18, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_3, [None, None, unsqueeze_1195, convert_element_type_111], where_23, True);  full_3 = unsqueeze_1195 = convert_element_type_111 = None
    unsqueeze_1727: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_873, 0);  squeeze_873 = None
    unsqueeze_1728: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1727, 2);  unsqueeze_1727 = None
    unsqueeze_1729: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1728, 3);  unsqueeze_1728 = None
    sum_72: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_3, [0, 2, 3])
    sub_457: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_291, unsqueeze_1729)
    mul_2696: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_3, sub_457);  sub_457 = None
    sum_73: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2696, [0, 2, 3]);  mul_2696 = None
    mul_2697: "f32[18]" = torch.ops.aten.mul.Tensor(sum_72, 0.002551020408163265)
    unsqueeze_1730: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2697, 0);  mul_2697 = None
    unsqueeze_1731: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1730, 2);  unsqueeze_1730 = None
    unsqueeze_1732: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1731, 3);  unsqueeze_1731 = None
    mul_2698: "f32[18]" = torch.ops.aten.mul.Tensor(sum_73, 0.002551020408163265)
    mul_2699: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_874, squeeze_874)
    mul_2700: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2698, mul_2699);  mul_2698 = mul_2699 = None
    unsqueeze_1733: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2700, 0);  mul_2700 = None
    unsqueeze_1734: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1733, 2);  unsqueeze_1733 = None
    unsqueeze_1735: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1734, 3);  unsqueeze_1734 = None
    mul_2701: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_874, primals_875);  primals_875 = None
    unsqueeze_1736: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2701, 0);  mul_2701 = None
    unsqueeze_1737: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1736, 2);  unsqueeze_1736 = None
    unsqueeze_1738: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1737, 3);  unsqueeze_1737 = None
    sub_458: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_291, unsqueeze_1729);  convolution_291 = unsqueeze_1729 = None
    mul_2702: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_458, unsqueeze_1735);  sub_458 = unsqueeze_1735 = None
    sub_459: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_3, mul_2702);  _unsafe_index_put_3 = mul_2702 = None
    sub_460: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(sub_459, unsqueeze_1732);  sub_459 = unsqueeze_1732 = None
    mul_2703: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_460, unsqueeze_1738);  sub_460 = unsqueeze_1738 = None
    mul_2704: "f32[18]" = torch.ops.aten.mul.Tensor(sum_73, squeeze_874);  sum_73 = squeeze_874 = None
    convolution_backward_33 = torch.ops.aten.convolution_backward.default(mul_2703, relu_259, primals_874, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2703 = primals_874 = None
    getitem_749: "f32[8, 144, 7, 7]" = convolution_backward_33[0]
    getitem_750: "f32[18, 144, 1, 1]" = convolution_backward_33[1];  convolution_backward_33 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1938: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1934, getitem_749);  add_1934 = getitem_749 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_4: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_4: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_4, [None, None, unsqueeze_1190, convert_element_type_107], where_23, True);  full_4 = unsqueeze_1190 = convert_element_type_107 = None
    unsqueeze_1739: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_870, 0);  squeeze_870 = None
    unsqueeze_1740: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1739, 2);  unsqueeze_1739 = None
    unsqueeze_1741: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1740, 3);  unsqueeze_1740 = None
    sum_74: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_4, [0, 2, 3])
    sub_461: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_290, unsqueeze_1741)
    mul_2705: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_4, sub_461);  sub_461 = None
    sum_75: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2705, [0, 2, 3]);  mul_2705 = None
    mul_2706: "f32[18]" = torch.ops.aten.mul.Tensor(sum_74, 0.0006377551020408163)
    unsqueeze_1742: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2706, 0);  mul_2706 = None
    unsqueeze_1743: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1742, 2);  unsqueeze_1742 = None
    unsqueeze_1744: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1743, 3);  unsqueeze_1743 = None
    mul_2707: "f32[18]" = torch.ops.aten.mul.Tensor(sum_75, 0.0006377551020408163)
    mul_2708: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_871, squeeze_871)
    mul_2709: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2707, mul_2708);  mul_2707 = mul_2708 = None
    unsqueeze_1745: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2709, 0);  mul_2709 = None
    unsqueeze_1746: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1745, 2);  unsqueeze_1745 = None
    unsqueeze_1747: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1746, 3);  unsqueeze_1746 = None
    mul_2710: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_871, primals_872);  primals_872 = None
    unsqueeze_1748: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2710, 0);  mul_2710 = None
    unsqueeze_1749: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1748, 2);  unsqueeze_1748 = None
    unsqueeze_1750: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1749, 3);  unsqueeze_1749 = None
    sub_462: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_290, unsqueeze_1741);  convolution_290 = unsqueeze_1741 = None
    mul_2711: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_462, unsqueeze_1747);  sub_462 = unsqueeze_1747 = None
    sub_463: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_4, mul_2711);  _unsafe_index_put_4 = mul_2711 = None
    sub_464: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_463, unsqueeze_1744);  sub_463 = unsqueeze_1744 = None
    mul_2712: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_464, unsqueeze_1750);  sub_464 = unsqueeze_1750 = None
    mul_2713: "f32[18]" = torch.ops.aten.mul.Tensor(sum_75, squeeze_871);  sum_75 = squeeze_871 = None
    convolution_backward_34 = torch.ops.aten.convolution_backward.default(mul_2712, relu_251, primals_871, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2712 = primals_871 = None
    getitem_752: "f32[8, 72, 14, 14]" = convolution_backward_34[0]
    getitem_753: "f32[18, 72, 1, 1]" = convolution_backward_34[1];  convolution_backward_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1939: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1935, getitem_752);  add_1935 = getitem_752 = None
    add_1940: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1937, where_23);  add_1937 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_5: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_5: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_5, [None, None, unsqueeze_1185, convert_element_type_103], where_23, True);  full_5 = unsqueeze_1185 = convert_element_type_103 = where_23 = None
    unsqueeze_1751: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_867, 0);  squeeze_867 = None
    unsqueeze_1752: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1751, 2);  unsqueeze_1751 = None
    unsqueeze_1753: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1752, 3);  unsqueeze_1752 = None
    sum_76: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_5, [0, 2, 3])
    sub_465: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_289, unsqueeze_1753)
    mul_2714: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_5, sub_465);  sub_465 = None
    sum_77: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2714, [0, 2, 3]);  mul_2714 = None
    mul_2715: "f32[18]" = torch.ops.aten.mul.Tensor(sum_76, 0.00015943877551020407)
    unsqueeze_1754: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2715, 0);  mul_2715 = None
    unsqueeze_1755: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1754, 2);  unsqueeze_1754 = None
    unsqueeze_1756: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1755, 3);  unsqueeze_1755 = None
    mul_2716: "f32[18]" = torch.ops.aten.mul.Tensor(sum_77, 0.00015943877551020407)
    mul_2717: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_868, squeeze_868)
    mul_2718: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2716, mul_2717);  mul_2716 = mul_2717 = None
    unsqueeze_1757: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2718, 0);  mul_2718 = None
    unsqueeze_1758: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1757, 2);  unsqueeze_1757 = None
    unsqueeze_1759: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1758, 3);  unsqueeze_1758 = None
    mul_2719: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_868, primals_869);  primals_869 = None
    unsqueeze_1760: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2719, 0);  mul_2719 = None
    unsqueeze_1761: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1760, 2);  unsqueeze_1760 = None
    unsqueeze_1762: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1761, 3);  unsqueeze_1761 = None
    sub_466: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_289, unsqueeze_1753);  convolution_289 = unsqueeze_1753 = None
    mul_2720: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_466, unsqueeze_1759);  sub_466 = unsqueeze_1759 = None
    sub_467: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_5, mul_2720);  _unsafe_index_put_5 = mul_2720 = None
    sub_468: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_467, unsqueeze_1756);  sub_467 = unsqueeze_1756 = None
    mul_2721: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_468, unsqueeze_1762);  sub_468 = unsqueeze_1762 = None
    mul_2722: "f32[18]" = torch.ops.aten.mul.Tensor(sum_77, squeeze_868);  sum_77 = squeeze_868 = None
    convolution_backward_35 = torch.ops.aten.convolution_backward.default(mul_2721, relu_243, primals_868, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2721 = primals_868 = None
    getitem_755: "f32[8, 36, 28, 28]" = convolution_backward_35[0]
    getitem_756: "f32[18, 36, 1, 1]" = convolution_backward_35[1];  convolution_backward_35 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1941: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1936, getitem_755);  add_1936 = getitem_755 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_341: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_259);  relu_259 = None
    alias_342: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_341);  alias_341 = None
    le_24: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_342, 0);  alias_342 = None
    scalar_tensor_24: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_24: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_24, scalar_tensor_24, add_1938);  le_24 = scalar_tensor_24 = add_1938 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1763: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_864, 0);  squeeze_864 = None
    unsqueeze_1764: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1763, 2);  unsqueeze_1763 = None
    unsqueeze_1765: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1764, 3);  unsqueeze_1764 = None
    sum_78: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_24, [0, 2, 3])
    sub_469: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_288, unsqueeze_1765)
    mul_2723: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_24, sub_469);  sub_469 = None
    sum_79: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2723, [0, 2, 3]);  mul_2723 = None
    mul_2724: "f32[144]" = torch.ops.aten.mul.Tensor(sum_78, 0.002551020408163265)
    unsqueeze_1766: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2724, 0);  mul_2724 = None
    unsqueeze_1767: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1766, 2);  unsqueeze_1766 = None
    unsqueeze_1768: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1767, 3);  unsqueeze_1767 = None
    mul_2725: "f32[144]" = torch.ops.aten.mul.Tensor(sum_79, 0.002551020408163265)
    mul_2726: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_865, squeeze_865)
    mul_2727: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2725, mul_2726);  mul_2725 = mul_2726 = None
    unsqueeze_1769: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2727, 0);  mul_2727 = None
    unsqueeze_1770: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1769, 2);  unsqueeze_1769 = None
    unsqueeze_1771: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1770, 3);  unsqueeze_1770 = None
    mul_2728: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_865, primals_866);  primals_866 = None
    unsqueeze_1772: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2728, 0);  mul_2728 = None
    unsqueeze_1773: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1772, 2);  unsqueeze_1772 = None
    unsqueeze_1774: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1773, 3);  unsqueeze_1773 = None
    sub_470: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_288, unsqueeze_1765);  convolution_288 = unsqueeze_1765 = None
    mul_2729: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_470, unsqueeze_1771);  sub_470 = unsqueeze_1771 = None
    sub_471: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_24, mul_2729);  mul_2729 = None
    sub_472: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_471, unsqueeze_1768);  sub_471 = unsqueeze_1768 = None
    mul_2730: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_472, unsqueeze_1774);  sub_472 = unsqueeze_1774 = None
    mul_2731: "f32[144]" = torch.ops.aten.mul.Tensor(sum_79, squeeze_865);  sum_79 = squeeze_865 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_36 = torch.ops.aten.convolution_backward.default(mul_2730, relu_258, primals_865, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2730 = primals_865 = None
    getitem_758: "f32[8, 144, 7, 7]" = convolution_backward_36[0]
    getitem_759: "f32[144, 144, 3, 3]" = convolution_backward_36[1];  convolution_backward_36 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_344: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_258);  relu_258 = None
    alias_345: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_344);  alias_344 = None
    le_25: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_345, 0);  alias_345 = None
    scalar_tensor_25: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_25: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_25, scalar_tensor_25, getitem_758);  le_25 = scalar_tensor_25 = getitem_758 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1775: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_861, 0);  squeeze_861 = None
    unsqueeze_1776: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1775, 2);  unsqueeze_1775 = None
    unsqueeze_1777: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1776, 3);  unsqueeze_1776 = None
    sum_80: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_25, [0, 2, 3])
    sub_473: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_287, unsqueeze_1777)
    mul_2732: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_25, sub_473);  sub_473 = None
    sum_81: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2732, [0, 2, 3]);  mul_2732 = None
    mul_2733: "f32[144]" = torch.ops.aten.mul.Tensor(sum_80, 0.002551020408163265)
    unsqueeze_1778: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2733, 0);  mul_2733 = None
    unsqueeze_1779: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1778, 2);  unsqueeze_1778 = None
    unsqueeze_1780: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1779, 3);  unsqueeze_1779 = None
    mul_2734: "f32[144]" = torch.ops.aten.mul.Tensor(sum_81, 0.002551020408163265)
    mul_2735: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_862, squeeze_862)
    mul_2736: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2734, mul_2735);  mul_2734 = mul_2735 = None
    unsqueeze_1781: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2736, 0);  mul_2736 = None
    unsqueeze_1782: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1781, 2);  unsqueeze_1781 = None
    unsqueeze_1783: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1782, 3);  unsqueeze_1782 = None
    mul_2737: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_862, primals_863);  primals_863 = None
    unsqueeze_1784: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2737, 0);  mul_2737 = None
    unsqueeze_1785: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1784, 2);  unsqueeze_1784 = None
    unsqueeze_1786: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1785, 3);  unsqueeze_1785 = None
    sub_474: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_287, unsqueeze_1777);  convolution_287 = unsqueeze_1777 = None
    mul_2738: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_474, unsqueeze_1783);  sub_474 = unsqueeze_1783 = None
    sub_475: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_25, mul_2738);  where_25 = mul_2738 = None
    sub_476: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_475, unsqueeze_1780);  sub_475 = unsqueeze_1780 = None
    mul_2739: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_476, unsqueeze_1786);  sub_476 = unsqueeze_1786 = None
    mul_2740: "f32[144]" = torch.ops.aten.mul.Tensor(sum_81, squeeze_862);  sum_81 = squeeze_862 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_37 = torch.ops.aten.convolution_backward.default(mul_2739, relu_257, primals_862, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2739 = primals_862 = None
    getitem_761: "f32[8, 144, 7, 7]" = convolution_backward_37[0]
    getitem_762: "f32[144, 144, 3, 3]" = convolution_backward_37[1];  convolution_backward_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1942: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_24, getitem_761);  where_24 = getitem_761 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_347: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_257);  relu_257 = None
    alias_348: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_347);  alias_347 = None
    le_26: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_348, 0);  alias_348 = None
    scalar_tensor_26: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_26: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_26, scalar_tensor_26, add_1942);  le_26 = scalar_tensor_26 = add_1942 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1787: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_858, 0);  squeeze_858 = None
    unsqueeze_1788: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1787, 2);  unsqueeze_1787 = None
    unsqueeze_1789: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1788, 3);  unsqueeze_1788 = None
    sum_82: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_26, [0, 2, 3])
    sub_477: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_286, unsqueeze_1789)
    mul_2741: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_26, sub_477);  sub_477 = None
    sum_83: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2741, [0, 2, 3]);  mul_2741 = None
    mul_2742: "f32[144]" = torch.ops.aten.mul.Tensor(sum_82, 0.002551020408163265)
    unsqueeze_1790: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2742, 0);  mul_2742 = None
    unsqueeze_1791: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1790, 2);  unsqueeze_1790 = None
    unsqueeze_1792: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1791, 3);  unsqueeze_1791 = None
    mul_2743: "f32[144]" = torch.ops.aten.mul.Tensor(sum_83, 0.002551020408163265)
    mul_2744: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_859, squeeze_859)
    mul_2745: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2743, mul_2744);  mul_2743 = mul_2744 = None
    unsqueeze_1793: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2745, 0);  mul_2745 = None
    unsqueeze_1794: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1793, 2);  unsqueeze_1793 = None
    unsqueeze_1795: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1794, 3);  unsqueeze_1794 = None
    mul_2746: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_859, primals_860);  primals_860 = None
    unsqueeze_1796: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2746, 0);  mul_2746 = None
    unsqueeze_1797: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1796, 2);  unsqueeze_1796 = None
    unsqueeze_1798: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1797, 3);  unsqueeze_1797 = None
    sub_478: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_286, unsqueeze_1789);  convolution_286 = unsqueeze_1789 = None
    mul_2747: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_478, unsqueeze_1795);  sub_478 = unsqueeze_1795 = None
    sub_479: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_26, mul_2747);  mul_2747 = None
    sub_480: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_479, unsqueeze_1792);  sub_479 = unsqueeze_1792 = None
    mul_2748: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_480, unsqueeze_1798);  sub_480 = unsqueeze_1798 = None
    mul_2749: "f32[144]" = torch.ops.aten.mul.Tensor(sum_83, squeeze_859);  sum_83 = squeeze_859 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_38 = torch.ops.aten.convolution_backward.default(mul_2748, relu_256, primals_859, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2748 = primals_859 = None
    getitem_764: "f32[8, 144, 7, 7]" = convolution_backward_38[0]
    getitem_765: "f32[144, 144, 3, 3]" = convolution_backward_38[1];  convolution_backward_38 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_350: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_256);  relu_256 = None
    alias_351: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_350);  alias_350 = None
    le_27: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_351, 0);  alias_351 = None
    scalar_tensor_27: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_27: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_27, scalar_tensor_27, getitem_764);  le_27 = scalar_tensor_27 = getitem_764 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1799: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_855, 0);  squeeze_855 = None
    unsqueeze_1800: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1799, 2);  unsqueeze_1799 = None
    unsqueeze_1801: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1800, 3);  unsqueeze_1800 = None
    sum_84: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_27, [0, 2, 3])
    sub_481: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_285, unsqueeze_1801)
    mul_2750: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_27, sub_481);  sub_481 = None
    sum_85: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2750, [0, 2, 3]);  mul_2750 = None
    mul_2751: "f32[144]" = torch.ops.aten.mul.Tensor(sum_84, 0.002551020408163265)
    unsqueeze_1802: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2751, 0);  mul_2751 = None
    unsqueeze_1803: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1802, 2);  unsqueeze_1802 = None
    unsqueeze_1804: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1803, 3);  unsqueeze_1803 = None
    mul_2752: "f32[144]" = torch.ops.aten.mul.Tensor(sum_85, 0.002551020408163265)
    mul_2753: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_856, squeeze_856)
    mul_2754: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2752, mul_2753);  mul_2752 = mul_2753 = None
    unsqueeze_1805: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2754, 0);  mul_2754 = None
    unsqueeze_1806: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1805, 2);  unsqueeze_1805 = None
    unsqueeze_1807: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1806, 3);  unsqueeze_1806 = None
    mul_2755: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_856, primals_857);  primals_857 = None
    unsqueeze_1808: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2755, 0);  mul_2755 = None
    unsqueeze_1809: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1808, 2);  unsqueeze_1808 = None
    unsqueeze_1810: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1809, 3);  unsqueeze_1809 = None
    sub_482: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_285, unsqueeze_1801);  convolution_285 = unsqueeze_1801 = None
    mul_2756: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_482, unsqueeze_1807);  sub_482 = unsqueeze_1807 = None
    sub_483: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_27, mul_2756);  where_27 = mul_2756 = None
    sub_484: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_483, unsqueeze_1804);  sub_483 = unsqueeze_1804 = None
    mul_2757: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_484, unsqueeze_1810);  sub_484 = unsqueeze_1810 = None
    mul_2758: "f32[144]" = torch.ops.aten.mul.Tensor(sum_85, squeeze_856);  sum_85 = squeeze_856 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_39 = torch.ops.aten.convolution_backward.default(mul_2757, relu_255, primals_856, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2757 = primals_856 = None
    getitem_767: "f32[8, 144, 7, 7]" = convolution_backward_39[0]
    getitem_768: "f32[144, 144, 3, 3]" = convolution_backward_39[1];  convolution_backward_39 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1943: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_26, getitem_767);  where_26 = getitem_767 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_353: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_255);  relu_255 = None
    alias_354: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_353);  alias_353 = None
    le_28: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_354, 0);  alias_354 = None
    scalar_tensor_28: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_28: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_28, scalar_tensor_28, add_1943);  le_28 = scalar_tensor_28 = add_1943 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1811: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_852, 0);  squeeze_852 = None
    unsqueeze_1812: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1811, 2);  unsqueeze_1811 = None
    unsqueeze_1813: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1812, 3);  unsqueeze_1812 = None
    sum_86: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_28, [0, 2, 3])
    sub_485: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_284, unsqueeze_1813)
    mul_2759: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_28, sub_485);  sub_485 = None
    sum_87: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2759, [0, 2, 3]);  mul_2759 = None
    mul_2760: "f32[144]" = torch.ops.aten.mul.Tensor(sum_86, 0.002551020408163265)
    unsqueeze_1814: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2760, 0);  mul_2760 = None
    unsqueeze_1815: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1814, 2);  unsqueeze_1814 = None
    unsqueeze_1816: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1815, 3);  unsqueeze_1815 = None
    mul_2761: "f32[144]" = torch.ops.aten.mul.Tensor(sum_87, 0.002551020408163265)
    mul_2762: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_853, squeeze_853)
    mul_2763: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2761, mul_2762);  mul_2761 = mul_2762 = None
    unsqueeze_1817: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2763, 0);  mul_2763 = None
    unsqueeze_1818: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1817, 2);  unsqueeze_1817 = None
    unsqueeze_1819: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1818, 3);  unsqueeze_1818 = None
    mul_2764: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_853, primals_854);  primals_854 = None
    unsqueeze_1820: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2764, 0);  mul_2764 = None
    unsqueeze_1821: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1820, 2);  unsqueeze_1820 = None
    unsqueeze_1822: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1821, 3);  unsqueeze_1821 = None
    sub_486: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_284, unsqueeze_1813);  convolution_284 = unsqueeze_1813 = None
    mul_2765: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_486, unsqueeze_1819);  sub_486 = unsqueeze_1819 = None
    sub_487: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_28, mul_2765);  mul_2765 = None
    sub_488: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_487, unsqueeze_1816);  sub_487 = unsqueeze_1816 = None
    mul_2766: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_488, unsqueeze_1822);  sub_488 = unsqueeze_1822 = None
    mul_2767: "f32[144]" = torch.ops.aten.mul.Tensor(sum_87, squeeze_853);  sum_87 = squeeze_853 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_40 = torch.ops.aten.convolution_backward.default(mul_2766, relu_254, primals_853, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2766 = primals_853 = None
    getitem_770: "f32[8, 144, 7, 7]" = convolution_backward_40[0]
    getitem_771: "f32[144, 144, 3, 3]" = convolution_backward_40[1];  convolution_backward_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_356: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_254);  relu_254 = None
    alias_357: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_356);  alias_356 = None
    le_29: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_357, 0);  alias_357 = None
    scalar_tensor_29: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_29: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_29, scalar_tensor_29, getitem_770);  le_29 = scalar_tensor_29 = getitem_770 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1823: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_849, 0);  squeeze_849 = None
    unsqueeze_1824: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1823, 2);  unsqueeze_1823 = None
    unsqueeze_1825: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1824, 3);  unsqueeze_1824 = None
    sum_88: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_29, [0, 2, 3])
    sub_489: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_283, unsqueeze_1825)
    mul_2768: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_29, sub_489);  sub_489 = None
    sum_89: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2768, [0, 2, 3]);  mul_2768 = None
    mul_2769: "f32[144]" = torch.ops.aten.mul.Tensor(sum_88, 0.002551020408163265)
    unsqueeze_1826: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2769, 0);  mul_2769 = None
    unsqueeze_1827: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1826, 2);  unsqueeze_1826 = None
    unsqueeze_1828: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1827, 3);  unsqueeze_1827 = None
    mul_2770: "f32[144]" = torch.ops.aten.mul.Tensor(sum_89, 0.002551020408163265)
    mul_2771: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_850, squeeze_850)
    mul_2772: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2770, mul_2771);  mul_2770 = mul_2771 = None
    unsqueeze_1829: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2772, 0);  mul_2772 = None
    unsqueeze_1830: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1829, 2);  unsqueeze_1829 = None
    unsqueeze_1831: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1830, 3);  unsqueeze_1830 = None
    mul_2773: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_850, primals_851);  primals_851 = None
    unsqueeze_1832: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2773, 0);  mul_2773 = None
    unsqueeze_1833: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1832, 2);  unsqueeze_1832 = None
    unsqueeze_1834: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1833, 3);  unsqueeze_1833 = None
    sub_490: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_283, unsqueeze_1825);  convolution_283 = unsqueeze_1825 = None
    mul_2774: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_490, unsqueeze_1831);  sub_490 = unsqueeze_1831 = None
    sub_491: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_29, mul_2774);  where_29 = mul_2774 = None
    sub_492: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_491, unsqueeze_1828);  sub_491 = unsqueeze_1828 = None
    mul_2775: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_492, unsqueeze_1834);  sub_492 = unsqueeze_1834 = None
    mul_2776: "f32[144]" = torch.ops.aten.mul.Tensor(sum_89, squeeze_850);  sum_89 = squeeze_850 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_41 = torch.ops.aten.convolution_backward.default(mul_2775, relu_253, primals_850, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2775 = primals_850 = None
    getitem_773: "f32[8, 144, 7, 7]" = convolution_backward_41[0]
    getitem_774: "f32[144, 144, 3, 3]" = convolution_backward_41[1];  convolution_backward_41 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1944: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_28, getitem_773);  where_28 = getitem_773 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_359: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_253);  relu_253 = None
    alias_360: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_359);  alias_359 = None
    le_30: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_360, 0);  alias_360 = None
    scalar_tensor_30: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_30: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_30, scalar_tensor_30, add_1944);  le_30 = scalar_tensor_30 = add_1944 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1835: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_846, 0);  squeeze_846 = None
    unsqueeze_1836: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1835, 2);  unsqueeze_1835 = None
    unsqueeze_1837: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1836, 3);  unsqueeze_1836 = None
    sum_90: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_30, [0, 2, 3])
    sub_493: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_282, unsqueeze_1837)
    mul_2777: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_30, sub_493);  sub_493 = None
    sum_91: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2777, [0, 2, 3]);  mul_2777 = None
    mul_2778: "f32[144]" = torch.ops.aten.mul.Tensor(sum_90, 0.002551020408163265)
    unsqueeze_1838: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2778, 0);  mul_2778 = None
    unsqueeze_1839: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1838, 2);  unsqueeze_1838 = None
    unsqueeze_1840: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1839, 3);  unsqueeze_1839 = None
    mul_2779: "f32[144]" = torch.ops.aten.mul.Tensor(sum_91, 0.002551020408163265)
    mul_2780: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_847, squeeze_847)
    mul_2781: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2779, mul_2780);  mul_2779 = mul_2780 = None
    unsqueeze_1841: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2781, 0);  mul_2781 = None
    unsqueeze_1842: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1841, 2);  unsqueeze_1841 = None
    unsqueeze_1843: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1842, 3);  unsqueeze_1842 = None
    mul_2782: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_847, primals_848);  primals_848 = None
    unsqueeze_1844: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2782, 0);  mul_2782 = None
    unsqueeze_1845: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1844, 2);  unsqueeze_1844 = None
    unsqueeze_1846: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1845, 3);  unsqueeze_1845 = None
    sub_494: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_282, unsqueeze_1837);  convolution_282 = unsqueeze_1837 = None
    mul_2783: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_494, unsqueeze_1843);  sub_494 = unsqueeze_1843 = None
    sub_495: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_30, mul_2783);  mul_2783 = None
    sub_496: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_495, unsqueeze_1840);  sub_495 = unsqueeze_1840 = None
    mul_2784: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_496, unsqueeze_1846);  sub_496 = unsqueeze_1846 = None
    mul_2785: "f32[144]" = torch.ops.aten.mul.Tensor(sum_91, squeeze_847);  sum_91 = squeeze_847 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_42 = torch.ops.aten.convolution_backward.default(mul_2784, relu_252, primals_847, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2784 = primals_847 = None
    getitem_776: "f32[8, 144, 7, 7]" = convolution_backward_42[0]
    getitem_777: "f32[144, 144, 3, 3]" = convolution_backward_42[1];  convolution_backward_42 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_362: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_252);  relu_252 = None
    alias_363: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_362);  alias_362 = None
    le_31: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_363, 0);  alias_363 = None
    scalar_tensor_31: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_31: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_31, scalar_tensor_31, getitem_776);  le_31 = scalar_tensor_31 = getitem_776 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1847: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_843, 0);  squeeze_843 = None
    unsqueeze_1848: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1847, 2);  unsqueeze_1847 = None
    unsqueeze_1849: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1848, 3);  unsqueeze_1848 = None
    sum_92: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_31, [0, 2, 3])
    sub_497: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_281, unsqueeze_1849)
    mul_2786: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_31, sub_497);  sub_497 = None
    sum_93: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_2786, [0, 2, 3]);  mul_2786 = None
    mul_2787: "f32[144]" = torch.ops.aten.mul.Tensor(sum_92, 0.002551020408163265)
    unsqueeze_1850: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2787, 0);  mul_2787 = None
    unsqueeze_1851: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1850, 2);  unsqueeze_1850 = None
    unsqueeze_1852: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1851, 3);  unsqueeze_1851 = None
    mul_2788: "f32[144]" = torch.ops.aten.mul.Tensor(sum_93, 0.002551020408163265)
    mul_2789: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_844, squeeze_844)
    mul_2790: "f32[144]" = torch.ops.aten.mul.Tensor(mul_2788, mul_2789);  mul_2788 = mul_2789 = None
    unsqueeze_1853: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2790, 0);  mul_2790 = None
    unsqueeze_1854: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1853, 2);  unsqueeze_1853 = None
    unsqueeze_1855: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1854, 3);  unsqueeze_1854 = None
    mul_2791: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_844, primals_845);  primals_845 = None
    unsqueeze_1856: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_2791, 0);  mul_2791 = None
    unsqueeze_1857: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1856, 2);  unsqueeze_1856 = None
    unsqueeze_1858: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1857, 3);  unsqueeze_1857 = None
    sub_498: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_281, unsqueeze_1849);  convolution_281 = unsqueeze_1849 = None
    mul_2792: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_498, unsqueeze_1855);  sub_498 = unsqueeze_1855 = None
    sub_499: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_31, mul_2792);  where_31 = mul_2792 = None
    sub_500: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_499, unsqueeze_1852);  sub_499 = unsqueeze_1852 = None
    mul_2793: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_500, unsqueeze_1858);  sub_500 = unsqueeze_1858 = None
    mul_2794: "f32[144]" = torch.ops.aten.mul.Tensor(sum_93, squeeze_844);  sum_93 = squeeze_844 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_43 = torch.ops.aten.convolution_backward.default(mul_2793, relu_227, primals_844, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2793 = relu_227 = primals_844 = None
    getitem_779: "f32[8, 144, 7, 7]" = convolution_backward_43[0]
    getitem_780: "f32[144, 144, 3, 3]" = convolution_backward_43[1];  convolution_backward_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1945: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_30, getitem_779);  where_30 = getitem_779 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_365: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_251);  relu_251 = None
    alias_366: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_365);  alias_365 = None
    le_32: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_366, 0);  alias_366 = None
    scalar_tensor_32: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_32: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_32, scalar_tensor_32, add_1939);  le_32 = scalar_tensor_32 = add_1939 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1859: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_840, 0);  squeeze_840 = None
    unsqueeze_1860: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1859, 2);  unsqueeze_1859 = None
    unsqueeze_1861: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1860, 3);  unsqueeze_1860 = None
    sum_94: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_32, [0, 2, 3])
    sub_501: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_280, unsqueeze_1861)
    mul_2795: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_32, sub_501);  sub_501 = None
    sum_95: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2795, [0, 2, 3]);  mul_2795 = None
    mul_2796: "f32[72]" = torch.ops.aten.mul.Tensor(sum_94, 0.0006377551020408163)
    unsqueeze_1862: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2796, 0);  mul_2796 = None
    unsqueeze_1863: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1862, 2);  unsqueeze_1862 = None
    unsqueeze_1864: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1863, 3);  unsqueeze_1863 = None
    mul_2797: "f32[72]" = torch.ops.aten.mul.Tensor(sum_95, 0.0006377551020408163)
    mul_2798: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_841, squeeze_841)
    mul_2799: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2797, mul_2798);  mul_2797 = mul_2798 = None
    unsqueeze_1865: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2799, 0);  mul_2799 = None
    unsqueeze_1866: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1865, 2);  unsqueeze_1865 = None
    unsqueeze_1867: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1866, 3);  unsqueeze_1866 = None
    mul_2800: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_841, primals_842);  primals_842 = None
    unsqueeze_1868: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2800, 0);  mul_2800 = None
    unsqueeze_1869: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1868, 2);  unsqueeze_1868 = None
    unsqueeze_1870: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1869, 3);  unsqueeze_1869 = None
    sub_502: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_280, unsqueeze_1861);  convolution_280 = unsqueeze_1861 = None
    mul_2801: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_502, unsqueeze_1867);  sub_502 = unsqueeze_1867 = None
    sub_503: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_32, mul_2801);  mul_2801 = None
    sub_504: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_503, unsqueeze_1864);  sub_503 = unsqueeze_1864 = None
    mul_2802: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_504, unsqueeze_1870);  sub_504 = unsqueeze_1870 = None
    mul_2803: "f32[72]" = torch.ops.aten.mul.Tensor(sum_95, squeeze_841);  sum_95 = squeeze_841 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_44 = torch.ops.aten.convolution_backward.default(mul_2802, relu_250, primals_841, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2802 = primals_841 = None
    getitem_782: "f32[8, 72, 14, 14]" = convolution_backward_44[0]
    getitem_783: "f32[72, 72, 3, 3]" = convolution_backward_44[1];  convolution_backward_44 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_368: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_250);  relu_250 = None
    alias_369: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_368);  alias_368 = None
    le_33: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_369, 0);  alias_369 = None
    scalar_tensor_33: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_33: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_33, scalar_tensor_33, getitem_782);  le_33 = scalar_tensor_33 = getitem_782 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1871: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_837, 0);  squeeze_837 = None
    unsqueeze_1872: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1871, 2);  unsqueeze_1871 = None
    unsqueeze_1873: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1872, 3);  unsqueeze_1872 = None
    sum_96: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_33, [0, 2, 3])
    sub_505: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_279, unsqueeze_1873)
    mul_2804: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_33, sub_505);  sub_505 = None
    sum_97: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2804, [0, 2, 3]);  mul_2804 = None
    mul_2805: "f32[72]" = torch.ops.aten.mul.Tensor(sum_96, 0.0006377551020408163)
    unsqueeze_1874: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2805, 0);  mul_2805 = None
    unsqueeze_1875: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1874, 2);  unsqueeze_1874 = None
    unsqueeze_1876: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1875, 3);  unsqueeze_1875 = None
    mul_2806: "f32[72]" = torch.ops.aten.mul.Tensor(sum_97, 0.0006377551020408163)
    mul_2807: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_838, squeeze_838)
    mul_2808: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2806, mul_2807);  mul_2806 = mul_2807 = None
    unsqueeze_1877: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2808, 0);  mul_2808 = None
    unsqueeze_1878: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1877, 2);  unsqueeze_1877 = None
    unsqueeze_1879: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1878, 3);  unsqueeze_1878 = None
    mul_2809: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_838, primals_839);  primals_839 = None
    unsqueeze_1880: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2809, 0);  mul_2809 = None
    unsqueeze_1881: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1880, 2);  unsqueeze_1880 = None
    unsqueeze_1882: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1881, 3);  unsqueeze_1881 = None
    sub_506: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_279, unsqueeze_1873);  convolution_279 = unsqueeze_1873 = None
    mul_2810: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_506, unsqueeze_1879);  sub_506 = unsqueeze_1879 = None
    sub_507: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_33, mul_2810);  where_33 = mul_2810 = None
    sub_508: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_507, unsqueeze_1876);  sub_507 = unsqueeze_1876 = None
    mul_2811: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_508, unsqueeze_1882);  sub_508 = unsqueeze_1882 = None
    mul_2812: "f32[72]" = torch.ops.aten.mul.Tensor(sum_97, squeeze_838);  sum_97 = squeeze_838 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_45 = torch.ops.aten.convolution_backward.default(mul_2811, relu_249, primals_838, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2811 = primals_838 = None
    getitem_785: "f32[8, 72, 14, 14]" = convolution_backward_45[0]
    getitem_786: "f32[72, 72, 3, 3]" = convolution_backward_45[1];  convolution_backward_45 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1946: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_32, getitem_785);  where_32 = getitem_785 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_371: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_249);  relu_249 = None
    alias_372: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_371);  alias_371 = None
    le_34: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_372, 0);  alias_372 = None
    scalar_tensor_34: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_34: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_34, scalar_tensor_34, add_1946);  le_34 = scalar_tensor_34 = add_1946 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1883: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_834, 0);  squeeze_834 = None
    unsqueeze_1884: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1883, 2);  unsqueeze_1883 = None
    unsqueeze_1885: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1884, 3);  unsqueeze_1884 = None
    sum_98: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_34, [0, 2, 3])
    sub_509: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_278, unsqueeze_1885)
    mul_2813: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_34, sub_509);  sub_509 = None
    sum_99: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2813, [0, 2, 3]);  mul_2813 = None
    mul_2814: "f32[72]" = torch.ops.aten.mul.Tensor(sum_98, 0.0006377551020408163)
    unsqueeze_1886: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2814, 0);  mul_2814 = None
    unsqueeze_1887: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1886, 2);  unsqueeze_1886 = None
    unsqueeze_1888: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1887, 3);  unsqueeze_1887 = None
    mul_2815: "f32[72]" = torch.ops.aten.mul.Tensor(sum_99, 0.0006377551020408163)
    mul_2816: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_835, squeeze_835)
    mul_2817: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2815, mul_2816);  mul_2815 = mul_2816 = None
    unsqueeze_1889: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2817, 0);  mul_2817 = None
    unsqueeze_1890: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1889, 2);  unsqueeze_1889 = None
    unsqueeze_1891: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1890, 3);  unsqueeze_1890 = None
    mul_2818: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_835, primals_836);  primals_836 = None
    unsqueeze_1892: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2818, 0);  mul_2818 = None
    unsqueeze_1893: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1892, 2);  unsqueeze_1892 = None
    unsqueeze_1894: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1893, 3);  unsqueeze_1893 = None
    sub_510: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_278, unsqueeze_1885);  convolution_278 = unsqueeze_1885 = None
    mul_2819: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_510, unsqueeze_1891);  sub_510 = unsqueeze_1891 = None
    sub_511: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_34, mul_2819);  mul_2819 = None
    sub_512: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_511, unsqueeze_1888);  sub_511 = unsqueeze_1888 = None
    mul_2820: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_512, unsqueeze_1894);  sub_512 = unsqueeze_1894 = None
    mul_2821: "f32[72]" = torch.ops.aten.mul.Tensor(sum_99, squeeze_835);  sum_99 = squeeze_835 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_46 = torch.ops.aten.convolution_backward.default(mul_2820, relu_248, primals_835, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2820 = primals_835 = None
    getitem_788: "f32[8, 72, 14, 14]" = convolution_backward_46[0]
    getitem_789: "f32[72, 72, 3, 3]" = convolution_backward_46[1];  convolution_backward_46 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_374: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_248);  relu_248 = None
    alias_375: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_374);  alias_374 = None
    le_35: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_375, 0);  alias_375 = None
    scalar_tensor_35: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_35: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_35, scalar_tensor_35, getitem_788);  le_35 = scalar_tensor_35 = getitem_788 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1895: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_831, 0);  squeeze_831 = None
    unsqueeze_1896: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1895, 2);  unsqueeze_1895 = None
    unsqueeze_1897: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1896, 3);  unsqueeze_1896 = None
    sum_100: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_35, [0, 2, 3])
    sub_513: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_277, unsqueeze_1897)
    mul_2822: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_35, sub_513);  sub_513 = None
    sum_101: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2822, [0, 2, 3]);  mul_2822 = None
    mul_2823: "f32[72]" = torch.ops.aten.mul.Tensor(sum_100, 0.0006377551020408163)
    unsqueeze_1898: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2823, 0);  mul_2823 = None
    unsqueeze_1899: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1898, 2);  unsqueeze_1898 = None
    unsqueeze_1900: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1899, 3);  unsqueeze_1899 = None
    mul_2824: "f32[72]" = torch.ops.aten.mul.Tensor(sum_101, 0.0006377551020408163)
    mul_2825: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_832, squeeze_832)
    mul_2826: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2824, mul_2825);  mul_2824 = mul_2825 = None
    unsqueeze_1901: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2826, 0);  mul_2826 = None
    unsqueeze_1902: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1901, 2);  unsqueeze_1901 = None
    unsqueeze_1903: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1902, 3);  unsqueeze_1902 = None
    mul_2827: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_832, primals_833);  primals_833 = None
    unsqueeze_1904: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2827, 0);  mul_2827 = None
    unsqueeze_1905: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1904, 2);  unsqueeze_1904 = None
    unsqueeze_1906: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1905, 3);  unsqueeze_1905 = None
    sub_514: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_277, unsqueeze_1897);  convolution_277 = unsqueeze_1897 = None
    mul_2828: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_514, unsqueeze_1903);  sub_514 = unsqueeze_1903 = None
    sub_515: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_35, mul_2828);  where_35 = mul_2828 = None
    sub_516: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_515, unsqueeze_1900);  sub_515 = unsqueeze_1900 = None
    mul_2829: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_516, unsqueeze_1906);  sub_516 = unsqueeze_1906 = None
    mul_2830: "f32[72]" = torch.ops.aten.mul.Tensor(sum_101, squeeze_832);  sum_101 = squeeze_832 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_47 = torch.ops.aten.convolution_backward.default(mul_2829, relu_247, primals_832, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2829 = primals_832 = None
    getitem_791: "f32[8, 72, 14, 14]" = convolution_backward_47[0]
    getitem_792: "f32[72, 72, 3, 3]" = convolution_backward_47[1];  convolution_backward_47 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1947: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_34, getitem_791);  where_34 = getitem_791 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_377: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_247);  relu_247 = None
    alias_378: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_377);  alias_377 = None
    le_36: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_378, 0);  alias_378 = None
    scalar_tensor_36: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_36: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_36, scalar_tensor_36, add_1947);  le_36 = scalar_tensor_36 = add_1947 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1907: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_828, 0);  squeeze_828 = None
    unsqueeze_1908: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1907, 2);  unsqueeze_1907 = None
    unsqueeze_1909: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1908, 3);  unsqueeze_1908 = None
    sum_102: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_36, [0, 2, 3])
    sub_517: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_276, unsqueeze_1909)
    mul_2831: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_36, sub_517);  sub_517 = None
    sum_103: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2831, [0, 2, 3]);  mul_2831 = None
    mul_2832: "f32[72]" = torch.ops.aten.mul.Tensor(sum_102, 0.0006377551020408163)
    unsqueeze_1910: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2832, 0);  mul_2832 = None
    unsqueeze_1911: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1910, 2);  unsqueeze_1910 = None
    unsqueeze_1912: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1911, 3);  unsqueeze_1911 = None
    mul_2833: "f32[72]" = torch.ops.aten.mul.Tensor(sum_103, 0.0006377551020408163)
    mul_2834: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_829, squeeze_829)
    mul_2835: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2833, mul_2834);  mul_2833 = mul_2834 = None
    unsqueeze_1913: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2835, 0);  mul_2835 = None
    unsqueeze_1914: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1913, 2);  unsqueeze_1913 = None
    unsqueeze_1915: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1914, 3);  unsqueeze_1914 = None
    mul_2836: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_829, primals_830);  primals_830 = None
    unsqueeze_1916: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2836, 0);  mul_2836 = None
    unsqueeze_1917: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1916, 2);  unsqueeze_1916 = None
    unsqueeze_1918: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1917, 3);  unsqueeze_1917 = None
    sub_518: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_276, unsqueeze_1909);  convolution_276 = unsqueeze_1909 = None
    mul_2837: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_518, unsqueeze_1915);  sub_518 = unsqueeze_1915 = None
    sub_519: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_36, mul_2837);  mul_2837 = None
    sub_520: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_519, unsqueeze_1912);  sub_519 = unsqueeze_1912 = None
    mul_2838: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_520, unsqueeze_1918);  sub_520 = unsqueeze_1918 = None
    mul_2839: "f32[72]" = torch.ops.aten.mul.Tensor(sum_103, squeeze_829);  sum_103 = squeeze_829 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_48 = torch.ops.aten.convolution_backward.default(mul_2838, relu_246, primals_829, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2838 = primals_829 = None
    getitem_794: "f32[8, 72, 14, 14]" = convolution_backward_48[0]
    getitem_795: "f32[72, 72, 3, 3]" = convolution_backward_48[1];  convolution_backward_48 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_380: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_246);  relu_246 = None
    alias_381: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_380);  alias_380 = None
    le_37: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_381, 0);  alias_381 = None
    scalar_tensor_37: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_37: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_37, scalar_tensor_37, getitem_794);  le_37 = scalar_tensor_37 = getitem_794 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1919: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_825, 0);  squeeze_825 = None
    unsqueeze_1920: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1919, 2);  unsqueeze_1919 = None
    unsqueeze_1921: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1920, 3);  unsqueeze_1920 = None
    sum_104: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_37, [0, 2, 3])
    sub_521: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_275, unsqueeze_1921)
    mul_2840: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_37, sub_521);  sub_521 = None
    sum_105: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2840, [0, 2, 3]);  mul_2840 = None
    mul_2841: "f32[72]" = torch.ops.aten.mul.Tensor(sum_104, 0.0006377551020408163)
    unsqueeze_1922: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2841, 0);  mul_2841 = None
    unsqueeze_1923: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1922, 2);  unsqueeze_1922 = None
    unsqueeze_1924: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1923, 3);  unsqueeze_1923 = None
    mul_2842: "f32[72]" = torch.ops.aten.mul.Tensor(sum_105, 0.0006377551020408163)
    mul_2843: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_826, squeeze_826)
    mul_2844: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2842, mul_2843);  mul_2842 = mul_2843 = None
    unsqueeze_1925: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2844, 0);  mul_2844 = None
    unsqueeze_1926: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1925, 2);  unsqueeze_1925 = None
    unsqueeze_1927: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1926, 3);  unsqueeze_1926 = None
    mul_2845: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_826, primals_827);  primals_827 = None
    unsqueeze_1928: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2845, 0);  mul_2845 = None
    unsqueeze_1929: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1928, 2);  unsqueeze_1928 = None
    unsqueeze_1930: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1929, 3);  unsqueeze_1929 = None
    sub_522: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_275, unsqueeze_1921);  convolution_275 = unsqueeze_1921 = None
    mul_2846: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_522, unsqueeze_1927);  sub_522 = unsqueeze_1927 = None
    sub_523: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_37, mul_2846);  where_37 = mul_2846 = None
    sub_524: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_523, unsqueeze_1924);  sub_523 = unsqueeze_1924 = None
    mul_2847: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_524, unsqueeze_1930);  sub_524 = unsqueeze_1930 = None
    mul_2848: "f32[72]" = torch.ops.aten.mul.Tensor(sum_105, squeeze_826);  sum_105 = squeeze_826 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_49 = torch.ops.aten.convolution_backward.default(mul_2847, relu_245, primals_826, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2847 = primals_826 = None
    getitem_797: "f32[8, 72, 14, 14]" = convolution_backward_49[0]
    getitem_798: "f32[72, 72, 3, 3]" = convolution_backward_49[1];  convolution_backward_49 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1948: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_36, getitem_797);  where_36 = getitem_797 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_383: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_245);  relu_245 = None
    alias_384: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_383);  alias_383 = None
    le_38: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_384, 0);  alias_384 = None
    scalar_tensor_38: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_38: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_38, scalar_tensor_38, add_1948);  le_38 = scalar_tensor_38 = add_1948 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1931: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_822, 0);  squeeze_822 = None
    unsqueeze_1932: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1931, 2);  unsqueeze_1931 = None
    unsqueeze_1933: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1932, 3);  unsqueeze_1932 = None
    sum_106: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_38, [0, 2, 3])
    sub_525: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_274, unsqueeze_1933)
    mul_2849: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_38, sub_525);  sub_525 = None
    sum_107: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2849, [0, 2, 3]);  mul_2849 = None
    mul_2850: "f32[72]" = torch.ops.aten.mul.Tensor(sum_106, 0.0006377551020408163)
    unsqueeze_1934: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2850, 0);  mul_2850 = None
    unsqueeze_1935: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1934, 2);  unsqueeze_1934 = None
    unsqueeze_1936: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1935, 3);  unsqueeze_1935 = None
    mul_2851: "f32[72]" = torch.ops.aten.mul.Tensor(sum_107, 0.0006377551020408163)
    mul_2852: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_823, squeeze_823)
    mul_2853: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2851, mul_2852);  mul_2851 = mul_2852 = None
    unsqueeze_1937: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2853, 0);  mul_2853 = None
    unsqueeze_1938: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1937, 2);  unsqueeze_1937 = None
    unsqueeze_1939: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1938, 3);  unsqueeze_1938 = None
    mul_2854: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_823, primals_824);  primals_824 = None
    unsqueeze_1940: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2854, 0);  mul_2854 = None
    unsqueeze_1941: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1940, 2);  unsqueeze_1940 = None
    unsqueeze_1942: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1941, 3);  unsqueeze_1941 = None
    sub_526: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_274, unsqueeze_1933);  convolution_274 = unsqueeze_1933 = None
    mul_2855: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_526, unsqueeze_1939);  sub_526 = unsqueeze_1939 = None
    sub_527: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_38, mul_2855);  mul_2855 = None
    sub_528: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_527, unsqueeze_1936);  sub_527 = unsqueeze_1936 = None
    mul_2856: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_528, unsqueeze_1942);  sub_528 = unsqueeze_1942 = None
    mul_2857: "f32[72]" = torch.ops.aten.mul.Tensor(sum_107, squeeze_823);  sum_107 = squeeze_823 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_50 = torch.ops.aten.convolution_backward.default(mul_2856, relu_244, primals_823, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2856 = primals_823 = None
    getitem_800: "f32[8, 72, 14, 14]" = convolution_backward_50[0]
    getitem_801: "f32[72, 72, 3, 3]" = convolution_backward_50[1];  convolution_backward_50 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_386: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_244);  relu_244 = None
    alias_387: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_386);  alias_386 = None
    le_39: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_387, 0);  alias_387 = None
    scalar_tensor_39: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_39: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_39, scalar_tensor_39, getitem_800);  le_39 = scalar_tensor_39 = getitem_800 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1943: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_819, 0);  squeeze_819 = None
    unsqueeze_1944: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1943, 2);  unsqueeze_1943 = None
    unsqueeze_1945: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1944, 3);  unsqueeze_1944 = None
    sum_108: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_39, [0, 2, 3])
    sub_529: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_273, unsqueeze_1945)
    mul_2858: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_39, sub_529);  sub_529 = None
    sum_109: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_2858, [0, 2, 3]);  mul_2858 = None
    mul_2859: "f32[72]" = torch.ops.aten.mul.Tensor(sum_108, 0.0006377551020408163)
    unsqueeze_1946: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2859, 0);  mul_2859 = None
    unsqueeze_1947: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1946, 2);  unsqueeze_1946 = None
    unsqueeze_1948: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1947, 3);  unsqueeze_1947 = None
    mul_2860: "f32[72]" = torch.ops.aten.mul.Tensor(sum_109, 0.0006377551020408163)
    mul_2861: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_820, squeeze_820)
    mul_2862: "f32[72]" = torch.ops.aten.mul.Tensor(mul_2860, mul_2861);  mul_2860 = mul_2861 = None
    unsqueeze_1949: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2862, 0);  mul_2862 = None
    unsqueeze_1950: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1949, 2);  unsqueeze_1949 = None
    unsqueeze_1951: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1950, 3);  unsqueeze_1950 = None
    mul_2863: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_820, primals_821);  primals_821 = None
    unsqueeze_1952: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_2863, 0);  mul_2863 = None
    unsqueeze_1953: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1952, 2);  unsqueeze_1952 = None
    unsqueeze_1954: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1953, 3);  unsqueeze_1953 = None
    sub_530: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_273, unsqueeze_1945);  convolution_273 = unsqueeze_1945 = None
    mul_2864: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_530, unsqueeze_1951);  sub_530 = unsqueeze_1951 = None
    sub_531: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_39, mul_2864);  where_39 = mul_2864 = None
    sub_532: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_531, unsqueeze_1948);  sub_531 = unsqueeze_1948 = None
    mul_2865: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_532, unsqueeze_1954);  sub_532 = unsqueeze_1954 = None
    mul_2866: "f32[72]" = torch.ops.aten.mul.Tensor(sum_109, squeeze_820);  sum_109 = squeeze_820 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_51 = torch.ops.aten.convolution_backward.default(mul_2865, relu_223, primals_820, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2865 = relu_223 = primals_820 = None
    getitem_803: "f32[8, 72, 14, 14]" = convolution_backward_51[0]
    getitem_804: "f32[72, 72, 3, 3]" = convolution_backward_51[1];  convolution_backward_51 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1949: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_38, getitem_803);  where_38 = getitem_803 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_389: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_243);  relu_243 = None
    alias_390: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_389);  alias_389 = None
    le_40: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_390, 0);  alias_390 = None
    scalar_tensor_40: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_40: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_40, scalar_tensor_40, add_1941);  le_40 = scalar_tensor_40 = add_1941 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1955: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_816, 0);  squeeze_816 = None
    unsqueeze_1956: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1955, 2);  unsqueeze_1955 = None
    unsqueeze_1957: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1956, 3);  unsqueeze_1956 = None
    sum_110: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_40, [0, 2, 3])
    sub_533: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_272, unsqueeze_1957)
    mul_2867: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_40, sub_533);  sub_533 = None
    sum_111: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2867, [0, 2, 3]);  mul_2867 = None
    mul_2868: "f32[36]" = torch.ops.aten.mul.Tensor(sum_110, 0.00015943877551020407)
    unsqueeze_1958: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2868, 0);  mul_2868 = None
    unsqueeze_1959: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1958, 2);  unsqueeze_1958 = None
    unsqueeze_1960: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1959, 3);  unsqueeze_1959 = None
    mul_2869: "f32[36]" = torch.ops.aten.mul.Tensor(sum_111, 0.00015943877551020407)
    mul_2870: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_817, squeeze_817)
    mul_2871: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2869, mul_2870);  mul_2869 = mul_2870 = None
    unsqueeze_1961: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2871, 0);  mul_2871 = None
    unsqueeze_1962: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1961, 2);  unsqueeze_1961 = None
    unsqueeze_1963: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1962, 3);  unsqueeze_1962 = None
    mul_2872: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_817, primals_818);  primals_818 = None
    unsqueeze_1964: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2872, 0);  mul_2872 = None
    unsqueeze_1965: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1964, 2);  unsqueeze_1964 = None
    unsqueeze_1966: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1965, 3);  unsqueeze_1965 = None
    sub_534: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_272, unsqueeze_1957);  convolution_272 = unsqueeze_1957 = None
    mul_2873: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_534, unsqueeze_1963);  sub_534 = unsqueeze_1963 = None
    sub_535: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_40, mul_2873);  mul_2873 = None
    sub_536: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_535, unsqueeze_1960);  sub_535 = unsqueeze_1960 = None
    mul_2874: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_536, unsqueeze_1966);  sub_536 = unsqueeze_1966 = None
    mul_2875: "f32[36]" = torch.ops.aten.mul.Tensor(sum_111, squeeze_817);  sum_111 = squeeze_817 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_52 = torch.ops.aten.convolution_backward.default(mul_2874, relu_242, primals_817, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2874 = primals_817 = None
    getitem_806: "f32[8, 36, 28, 28]" = convolution_backward_52[0]
    getitem_807: "f32[36, 36, 3, 3]" = convolution_backward_52[1];  convolution_backward_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_392: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_242);  relu_242 = None
    alias_393: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_392);  alias_392 = None
    le_41: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_393, 0);  alias_393 = None
    scalar_tensor_41: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_41: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_41, scalar_tensor_41, getitem_806);  le_41 = scalar_tensor_41 = getitem_806 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1967: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_813, 0);  squeeze_813 = None
    unsqueeze_1968: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1967, 2);  unsqueeze_1967 = None
    unsqueeze_1969: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1968, 3);  unsqueeze_1968 = None
    sum_112: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_41, [0, 2, 3])
    sub_537: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_271, unsqueeze_1969)
    mul_2876: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_41, sub_537);  sub_537 = None
    sum_113: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2876, [0, 2, 3]);  mul_2876 = None
    mul_2877: "f32[36]" = torch.ops.aten.mul.Tensor(sum_112, 0.00015943877551020407)
    unsqueeze_1970: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2877, 0);  mul_2877 = None
    unsqueeze_1971: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1970, 2);  unsqueeze_1970 = None
    unsqueeze_1972: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1971, 3);  unsqueeze_1971 = None
    mul_2878: "f32[36]" = torch.ops.aten.mul.Tensor(sum_113, 0.00015943877551020407)
    mul_2879: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_814, squeeze_814)
    mul_2880: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2878, mul_2879);  mul_2878 = mul_2879 = None
    unsqueeze_1973: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2880, 0);  mul_2880 = None
    unsqueeze_1974: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1973, 2);  unsqueeze_1973 = None
    unsqueeze_1975: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1974, 3);  unsqueeze_1974 = None
    mul_2881: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_814, primals_815);  primals_815 = None
    unsqueeze_1976: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2881, 0);  mul_2881 = None
    unsqueeze_1977: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1976, 2);  unsqueeze_1976 = None
    unsqueeze_1978: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1977, 3);  unsqueeze_1977 = None
    sub_538: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_271, unsqueeze_1969);  convolution_271 = unsqueeze_1969 = None
    mul_2882: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_538, unsqueeze_1975);  sub_538 = unsqueeze_1975 = None
    sub_539: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_41, mul_2882);  where_41 = mul_2882 = None
    sub_540: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_539, unsqueeze_1972);  sub_539 = unsqueeze_1972 = None
    mul_2883: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_540, unsqueeze_1978);  sub_540 = unsqueeze_1978 = None
    mul_2884: "f32[36]" = torch.ops.aten.mul.Tensor(sum_113, squeeze_814);  sum_113 = squeeze_814 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_53 = torch.ops.aten.convolution_backward.default(mul_2883, relu_241, primals_814, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2883 = primals_814 = None
    getitem_809: "f32[8, 36, 28, 28]" = convolution_backward_53[0]
    getitem_810: "f32[36, 36, 3, 3]" = convolution_backward_53[1];  convolution_backward_53 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1950: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_40, getitem_809);  where_40 = getitem_809 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_395: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_241);  relu_241 = None
    alias_396: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_395);  alias_395 = None
    le_42: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_396, 0);  alias_396 = None
    scalar_tensor_42: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_42: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_42, scalar_tensor_42, add_1950);  le_42 = scalar_tensor_42 = add_1950 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_1979: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_810, 0);  squeeze_810 = None
    unsqueeze_1980: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1979, 2);  unsqueeze_1979 = None
    unsqueeze_1981: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1980, 3);  unsqueeze_1980 = None
    sum_114: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_42, [0, 2, 3])
    sub_541: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_270, unsqueeze_1981)
    mul_2885: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_42, sub_541);  sub_541 = None
    sum_115: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2885, [0, 2, 3]);  mul_2885 = None
    mul_2886: "f32[36]" = torch.ops.aten.mul.Tensor(sum_114, 0.00015943877551020407)
    unsqueeze_1982: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2886, 0);  mul_2886 = None
    unsqueeze_1983: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1982, 2);  unsqueeze_1982 = None
    unsqueeze_1984: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1983, 3);  unsqueeze_1983 = None
    mul_2887: "f32[36]" = torch.ops.aten.mul.Tensor(sum_115, 0.00015943877551020407)
    mul_2888: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_811, squeeze_811)
    mul_2889: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2887, mul_2888);  mul_2887 = mul_2888 = None
    unsqueeze_1985: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2889, 0);  mul_2889 = None
    unsqueeze_1986: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1985, 2);  unsqueeze_1985 = None
    unsqueeze_1987: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1986, 3);  unsqueeze_1986 = None
    mul_2890: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_811, primals_812);  primals_812 = None
    unsqueeze_1988: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2890, 0);  mul_2890 = None
    unsqueeze_1989: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1988, 2);  unsqueeze_1988 = None
    unsqueeze_1990: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1989, 3);  unsqueeze_1989 = None
    sub_542: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_270, unsqueeze_1981);  convolution_270 = unsqueeze_1981 = None
    mul_2891: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_542, unsqueeze_1987);  sub_542 = unsqueeze_1987 = None
    sub_543: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_42, mul_2891);  mul_2891 = None
    sub_544: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_543, unsqueeze_1984);  sub_543 = unsqueeze_1984 = None
    mul_2892: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_544, unsqueeze_1990);  sub_544 = unsqueeze_1990 = None
    mul_2893: "f32[36]" = torch.ops.aten.mul.Tensor(sum_115, squeeze_811);  sum_115 = squeeze_811 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_54 = torch.ops.aten.convolution_backward.default(mul_2892, relu_240, primals_811, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2892 = primals_811 = None
    getitem_812: "f32[8, 36, 28, 28]" = convolution_backward_54[0]
    getitem_813: "f32[36, 36, 3, 3]" = convolution_backward_54[1];  convolution_backward_54 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_398: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_240);  relu_240 = None
    alias_399: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_398);  alias_398 = None
    le_43: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_399, 0);  alias_399 = None
    scalar_tensor_43: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_43: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_43, scalar_tensor_43, getitem_812);  le_43 = scalar_tensor_43 = getitem_812 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_1991: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_807, 0);  squeeze_807 = None
    unsqueeze_1992: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1991, 2);  unsqueeze_1991 = None
    unsqueeze_1993: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1992, 3);  unsqueeze_1992 = None
    sum_116: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_43, [0, 2, 3])
    sub_545: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_269, unsqueeze_1993)
    mul_2894: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_43, sub_545);  sub_545 = None
    sum_117: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2894, [0, 2, 3]);  mul_2894 = None
    mul_2895: "f32[36]" = torch.ops.aten.mul.Tensor(sum_116, 0.00015943877551020407)
    unsqueeze_1994: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2895, 0);  mul_2895 = None
    unsqueeze_1995: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1994, 2);  unsqueeze_1994 = None
    unsqueeze_1996: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1995, 3);  unsqueeze_1995 = None
    mul_2896: "f32[36]" = torch.ops.aten.mul.Tensor(sum_117, 0.00015943877551020407)
    mul_2897: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_808, squeeze_808)
    mul_2898: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2896, mul_2897);  mul_2896 = mul_2897 = None
    unsqueeze_1997: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2898, 0);  mul_2898 = None
    unsqueeze_1998: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1997, 2);  unsqueeze_1997 = None
    unsqueeze_1999: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_1998, 3);  unsqueeze_1998 = None
    mul_2899: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_808, primals_809);  primals_809 = None
    unsqueeze_2000: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2899, 0);  mul_2899 = None
    unsqueeze_2001: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2000, 2);  unsqueeze_2000 = None
    unsqueeze_2002: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2001, 3);  unsqueeze_2001 = None
    sub_546: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_269, unsqueeze_1993);  convolution_269 = unsqueeze_1993 = None
    mul_2900: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_546, unsqueeze_1999);  sub_546 = unsqueeze_1999 = None
    sub_547: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_43, mul_2900);  where_43 = mul_2900 = None
    sub_548: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_547, unsqueeze_1996);  sub_547 = unsqueeze_1996 = None
    mul_2901: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_548, unsqueeze_2002);  sub_548 = unsqueeze_2002 = None
    mul_2902: "f32[36]" = torch.ops.aten.mul.Tensor(sum_117, squeeze_808);  sum_117 = squeeze_808 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_55 = torch.ops.aten.convolution_backward.default(mul_2901, relu_239, primals_808, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2901 = primals_808 = None
    getitem_815: "f32[8, 36, 28, 28]" = convolution_backward_55[0]
    getitem_816: "f32[36, 36, 3, 3]" = convolution_backward_55[1];  convolution_backward_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1951: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_42, getitem_815);  where_42 = getitem_815 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_401: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_239);  relu_239 = None
    alias_402: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_401);  alias_401 = None
    le_44: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_402, 0);  alias_402 = None
    scalar_tensor_44: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_44: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_44, scalar_tensor_44, add_1951);  le_44 = scalar_tensor_44 = add_1951 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2003: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_804, 0);  squeeze_804 = None
    unsqueeze_2004: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2003, 2);  unsqueeze_2003 = None
    unsqueeze_2005: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2004, 3);  unsqueeze_2004 = None
    sum_118: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_44, [0, 2, 3])
    sub_549: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_268, unsqueeze_2005)
    mul_2903: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_44, sub_549);  sub_549 = None
    sum_119: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2903, [0, 2, 3]);  mul_2903 = None
    mul_2904: "f32[36]" = torch.ops.aten.mul.Tensor(sum_118, 0.00015943877551020407)
    unsqueeze_2006: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2904, 0);  mul_2904 = None
    unsqueeze_2007: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2006, 2);  unsqueeze_2006 = None
    unsqueeze_2008: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2007, 3);  unsqueeze_2007 = None
    mul_2905: "f32[36]" = torch.ops.aten.mul.Tensor(sum_119, 0.00015943877551020407)
    mul_2906: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_805, squeeze_805)
    mul_2907: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2905, mul_2906);  mul_2905 = mul_2906 = None
    unsqueeze_2009: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2907, 0);  mul_2907 = None
    unsqueeze_2010: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2009, 2);  unsqueeze_2009 = None
    unsqueeze_2011: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2010, 3);  unsqueeze_2010 = None
    mul_2908: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_805, primals_806);  primals_806 = None
    unsqueeze_2012: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2908, 0);  mul_2908 = None
    unsqueeze_2013: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2012, 2);  unsqueeze_2012 = None
    unsqueeze_2014: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2013, 3);  unsqueeze_2013 = None
    sub_550: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_268, unsqueeze_2005);  convolution_268 = unsqueeze_2005 = None
    mul_2909: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_550, unsqueeze_2011);  sub_550 = unsqueeze_2011 = None
    sub_551: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_44, mul_2909);  mul_2909 = None
    sub_552: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_551, unsqueeze_2008);  sub_551 = unsqueeze_2008 = None
    mul_2910: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_552, unsqueeze_2014);  sub_552 = unsqueeze_2014 = None
    mul_2911: "f32[36]" = torch.ops.aten.mul.Tensor(sum_119, squeeze_805);  sum_119 = squeeze_805 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_56 = torch.ops.aten.convolution_backward.default(mul_2910, relu_238, primals_805, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2910 = primals_805 = None
    getitem_818: "f32[8, 36, 28, 28]" = convolution_backward_56[0]
    getitem_819: "f32[36, 36, 3, 3]" = convolution_backward_56[1];  convolution_backward_56 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_404: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_238);  relu_238 = None
    alias_405: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_404);  alias_404 = None
    le_45: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_405, 0);  alias_405 = None
    scalar_tensor_45: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_45: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_45, scalar_tensor_45, getitem_818);  le_45 = scalar_tensor_45 = getitem_818 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2015: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_801, 0);  squeeze_801 = None
    unsqueeze_2016: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2015, 2);  unsqueeze_2015 = None
    unsqueeze_2017: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2016, 3);  unsqueeze_2016 = None
    sum_120: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_45, [0, 2, 3])
    sub_553: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_267, unsqueeze_2017)
    mul_2912: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_45, sub_553);  sub_553 = None
    sum_121: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2912, [0, 2, 3]);  mul_2912 = None
    mul_2913: "f32[36]" = torch.ops.aten.mul.Tensor(sum_120, 0.00015943877551020407)
    unsqueeze_2018: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2913, 0);  mul_2913 = None
    unsqueeze_2019: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2018, 2);  unsqueeze_2018 = None
    unsqueeze_2020: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2019, 3);  unsqueeze_2019 = None
    mul_2914: "f32[36]" = torch.ops.aten.mul.Tensor(sum_121, 0.00015943877551020407)
    mul_2915: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_802, squeeze_802)
    mul_2916: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2914, mul_2915);  mul_2914 = mul_2915 = None
    unsqueeze_2021: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2916, 0);  mul_2916 = None
    unsqueeze_2022: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2021, 2);  unsqueeze_2021 = None
    unsqueeze_2023: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2022, 3);  unsqueeze_2022 = None
    mul_2917: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_802, primals_803);  primals_803 = None
    unsqueeze_2024: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2917, 0);  mul_2917 = None
    unsqueeze_2025: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2024, 2);  unsqueeze_2024 = None
    unsqueeze_2026: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2025, 3);  unsqueeze_2025 = None
    sub_554: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_267, unsqueeze_2017);  convolution_267 = unsqueeze_2017 = None
    mul_2918: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_554, unsqueeze_2023);  sub_554 = unsqueeze_2023 = None
    sub_555: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_45, mul_2918);  where_45 = mul_2918 = None
    sub_556: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_555, unsqueeze_2020);  sub_555 = unsqueeze_2020 = None
    mul_2919: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_556, unsqueeze_2026);  sub_556 = unsqueeze_2026 = None
    mul_2920: "f32[36]" = torch.ops.aten.mul.Tensor(sum_121, squeeze_802);  sum_121 = squeeze_802 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_57 = torch.ops.aten.convolution_backward.default(mul_2919, relu_237, primals_802, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2919 = primals_802 = None
    getitem_821: "f32[8, 36, 28, 28]" = convolution_backward_57[0]
    getitem_822: "f32[36, 36, 3, 3]" = convolution_backward_57[1];  convolution_backward_57 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1952: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_44, getitem_821);  where_44 = getitem_821 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_407: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_237);  relu_237 = None
    alias_408: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_407);  alias_407 = None
    le_46: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_408, 0);  alias_408 = None
    scalar_tensor_46: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_46: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_46, scalar_tensor_46, add_1952);  le_46 = scalar_tensor_46 = add_1952 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2027: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_798, 0);  squeeze_798 = None
    unsqueeze_2028: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2027, 2);  unsqueeze_2027 = None
    unsqueeze_2029: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2028, 3);  unsqueeze_2028 = None
    sum_122: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_46, [0, 2, 3])
    sub_557: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_266, unsqueeze_2029)
    mul_2921: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_46, sub_557);  sub_557 = None
    sum_123: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2921, [0, 2, 3]);  mul_2921 = None
    mul_2922: "f32[36]" = torch.ops.aten.mul.Tensor(sum_122, 0.00015943877551020407)
    unsqueeze_2030: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2922, 0);  mul_2922 = None
    unsqueeze_2031: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2030, 2);  unsqueeze_2030 = None
    unsqueeze_2032: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2031, 3);  unsqueeze_2031 = None
    mul_2923: "f32[36]" = torch.ops.aten.mul.Tensor(sum_123, 0.00015943877551020407)
    mul_2924: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_799, squeeze_799)
    mul_2925: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2923, mul_2924);  mul_2923 = mul_2924 = None
    unsqueeze_2033: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2925, 0);  mul_2925 = None
    unsqueeze_2034: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2033, 2);  unsqueeze_2033 = None
    unsqueeze_2035: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2034, 3);  unsqueeze_2034 = None
    mul_2926: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_799, primals_800);  primals_800 = None
    unsqueeze_2036: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2926, 0);  mul_2926 = None
    unsqueeze_2037: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2036, 2);  unsqueeze_2036 = None
    unsqueeze_2038: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2037, 3);  unsqueeze_2037 = None
    sub_558: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_266, unsqueeze_2029);  convolution_266 = unsqueeze_2029 = None
    mul_2927: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_558, unsqueeze_2035);  sub_558 = unsqueeze_2035 = None
    sub_559: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_46, mul_2927);  mul_2927 = None
    sub_560: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_559, unsqueeze_2032);  sub_559 = unsqueeze_2032 = None
    mul_2928: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_560, unsqueeze_2038);  sub_560 = unsqueeze_2038 = None
    mul_2929: "f32[36]" = torch.ops.aten.mul.Tensor(sum_123, squeeze_799);  sum_123 = squeeze_799 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_58 = torch.ops.aten.convolution_backward.default(mul_2928, relu_236, primals_799, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2928 = primals_799 = None
    getitem_824: "f32[8, 36, 28, 28]" = convolution_backward_58[0]
    getitem_825: "f32[36, 36, 3, 3]" = convolution_backward_58[1];  convolution_backward_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_410: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_236);  relu_236 = None
    alias_411: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_410);  alias_410 = None
    le_47: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_411, 0);  alias_411 = None
    scalar_tensor_47: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_47: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_47, scalar_tensor_47, getitem_824);  le_47 = scalar_tensor_47 = getitem_824 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2039: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_795, 0);  squeeze_795 = None
    unsqueeze_2040: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2039, 2);  unsqueeze_2039 = None
    unsqueeze_2041: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2040, 3);  unsqueeze_2040 = None
    sum_124: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_47, [0, 2, 3])
    sub_561: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_265, unsqueeze_2041)
    mul_2930: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_47, sub_561);  sub_561 = None
    sum_125: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_2930, [0, 2, 3]);  mul_2930 = None
    mul_2931: "f32[36]" = torch.ops.aten.mul.Tensor(sum_124, 0.00015943877551020407)
    unsqueeze_2042: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2931, 0);  mul_2931 = None
    unsqueeze_2043: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2042, 2);  unsqueeze_2042 = None
    unsqueeze_2044: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2043, 3);  unsqueeze_2043 = None
    mul_2932: "f32[36]" = torch.ops.aten.mul.Tensor(sum_125, 0.00015943877551020407)
    mul_2933: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_796, squeeze_796)
    mul_2934: "f32[36]" = torch.ops.aten.mul.Tensor(mul_2932, mul_2933);  mul_2932 = mul_2933 = None
    unsqueeze_2045: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2934, 0);  mul_2934 = None
    unsqueeze_2046: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2045, 2);  unsqueeze_2045 = None
    unsqueeze_2047: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2046, 3);  unsqueeze_2046 = None
    mul_2935: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_796, primals_797);  primals_797 = None
    unsqueeze_2048: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_2935, 0);  mul_2935 = None
    unsqueeze_2049: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2048, 2);  unsqueeze_2048 = None
    unsqueeze_2050: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2049, 3);  unsqueeze_2049 = None
    sub_562: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_265, unsqueeze_2041);  convolution_265 = unsqueeze_2041 = None
    mul_2936: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_562, unsqueeze_2047);  sub_562 = unsqueeze_2047 = None
    sub_563: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_47, mul_2936);  where_47 = mul_2936 = None
    sub_564: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_563, unsqueeze_2044);  sub_563 = unsqueeze_2044 = None
    mul_2937: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_564, unsqueeze_2050);  sub_564 = unsqueeze_2050 = None
    mul_2938: "f32[36]" = torch.ops.aten.mul.Tensor(sum_125, squeeze_796);  sum_125 = squeeze_796 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_59 = torch.ops.aten.convolution_backward.default(mul_2937, relu_221, primals_796, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2937 = relu_221 = primals_796 = None
    getitem_827: "f32[8, 36, 28, 28]" = convolution_backward_59[0]
    getitem_828: "f32[36, 36, 3, 3]" = convolution_backward_59[1];  convolution_backward_59 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1953: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_46, getitem_827);  where_46 = getitem_827 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_413: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_235);  relu_235 = None
    alias_414: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_413);  alias_413 = None
    le_48: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_414, 0);  alias_414 = None
    scalar_tensor_48: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_48: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_48, scalar_tensor_48, add_1940);  le_48 = scalar_tensor_48 = add_1940 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2051: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_792, 0);  squeeze_792 = None
    unsqueeze_2052: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2051, 2);  unsqueeze_2051 = None
    unsqueeze_2053: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2052, 3);  unsqueeze_2052 = None
    sum_126: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_48, [0, 2, 3])
    sub_565: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_264, unsqueeze_2053)
    mul_2939: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_48, sub_565);  sub_565 = None
    sum_127: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2939, [0, 2, 3]);  mul_2939 = None
    mul_2940: "f32[18]" = torch.ops.aten.mul.Tensor(sum_126, 3.985969387755102e-05)
    unsqueeze_2054: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2940, 0);  mul_2940 = None
    unsqueeze_2055: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2054, 2);  unsqueeze_2054 = None
    unsqueeze_2056: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2055, 3);  unsqueeze_2055 = None
    mul_2941: "f32[18]" = torch.ops.aten.mul.Tensor(sum_127, 3.985969387755102e-05)
    mul_2942: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_793, squeeze_793)
    mul_2943: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2941, mul_2942);  mul_2941 = mul_2942 = None
    unsqueeze_2057: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2943, 0);  mul_2943 = None
    unsqueeze_2058: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2057, 2);  unsqueeze_2057 = None
    unsqueeze_2059: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2058, 3);  unsqueeze_2058 = None
    mul_2944: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_793, primals_794);  primals_794 = None
    unsqueeze_2060: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2944, 0);  mul_2944 = None
    unsqueeze_2061: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2060, 2);  unsqueeze_2060 = None
    unsqueeze_2062: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2061, 3);  unsqueeze_2061 = None
    sub_566: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_264, unsqueeze_2053);  convolution_264 = unsqueeze_2053 = None
    mul_2945: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_566, unsqueeze_2059);  sub_566 = unsqueeze_2059 = None
    sub_567: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_48, mul_2945);  mul_2945 = None
    sub_568: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_567, unsqueeze_2056);  sub_567 = unsqueeze_2056 = None
    mul_2946: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_568, unsqueeze_2062);  sub_568 = unsqueeze_2062 = None
    mul_2947: "f32[18]" = torch.ops.aten.mul.Tensor(sum_127, squeeze_793);  sum_127 = squeeze_793 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_60 = torch.ops.aten.convolution_backward.default(mul_2946, relu_234, primals_793, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2946 = primals_793 = None
    getitem_830: "f32[8, 18, 56, 56]" = convolution_backward_60[0]
    getitem_831: "f32[18, 18, 3, 3]" = convolution_backward_60[1];  convolution_backward_60 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_416: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_234);  relu_234 = None
    alias_417: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_416);  alias_416 = None
    le_49: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_417, 0);  alias_417 = None
    scalar_tensor_49: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_49: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_49, scalar_tensor_49, getitem_830);  le_49 = scalar_tensor_49 = getitem_830 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2063: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_789, 0);  squeeze_789 = None
    unsqueeze_2064: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2063, 2);  unsqueeze_2063 = None
    unsqueeze_2065: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2064, 3);  unsqueeze_2064 = None
    sum_128: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_49, [0, 2, 3])
    sub_569: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_263, unsqueeze_2065)
    mul_2948: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_49, sub_569);  sub_569 = None
    sum_129: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2948, [0, 2, 3]);  mul_2948 = None
    mul_2949: "f32[18]" = torch.ops.aten.mul.Tensor(sum_128, 3.985969387755102e-05)
    unsqueeze_2066: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2949, 0);  mul_2949 = None
    unsqueeze_2067: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2066, 2);  unsqueeze_2066 = None
    unsqueeze_2068: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2067, 3);  unsqueeze_2067 = None
    mul_2950: "f32[18]" = torch.ops.aten.mul.Tensor(sum_129, 3.985969387755102e-05)
    mul_2951: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_790, squeeze_790)
    mul_2952: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2950, mul_2951);  mul_2950 = mul_2951 = None
    unsqueeze_2069: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2952, 0);  mul_2952 = None
    unsqueeze_2070: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2069, 2);  unsqueeze_2069 = None
    unsqueeze_2071: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2070, 3);  unsqueeze_2070 = None
    mul_2953: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_790, primals_791);  primals_791 = None
    unsqueeze_2072: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2953, 0);  mul_2953 = None
    unsqueeze_2073: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2072, 2);  unsqueeze_2072 = None
    unsqueeze_2074: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2073, 3);  unsqueeze_2073 = None
    sub_570: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_263, unsqueeze_2065);  convolution_263 = unsqueeze_2065 = None
    mul_2954: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_570, unsqueeze_2071);  sub_570 = unsqueeze_2071 = None
    sub_571: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_49, mul_2954);  where_49 = mul_2954 = None
    sub_572: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_571, unsqueeze_2068);  sub_571 = unsqueeze_2068 = None
    mul_2955: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_572, unsqueeze_2074);  sub_572 = unsqueeze_2074 = None
    mul_2956: "f32[18]" = torch.ops.aten.mul.Tensor(sum_129, squeeze_790);  sum_129 = squeeze_790 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_61 = torch.ops.aten.convolution_backward.default(mul_2955, relu_233, primals_790, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2955 = primals_790 = None
    getitem_833: "f32[8, 18, 56, 56]" = convolution_backward_61[0]
    getitem_834: "f32[18, 18, 3, 3]" = convolution_backward_61[1];  convolution_backward_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1954: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_48, getitem_833);  where_48 = getitem_833 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_419: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_233);  relu_233 = None
    alias_420: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_419);  alias_419 = None
    le_50: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_420, 0);  alias_420 = None
    scalar_tensor_50: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_50: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_50, scalar_tensor_50, add_1954);  le_50 = scalar_tensor_50 = add_1954 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2075: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_786, 0);  squeeze_786 = None
    unsqueeze_2076: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2075, 2);  unsqueeze_2075 = None
    unsqueeze_2077: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2076, 3);  unsqueeze_2076 = None
    sum_130: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_50, [0, 2, 3])
    sub_573: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_262, unsqueeze_2077)
    mul_2957: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_50, sub_573);  sub_573 = None
    sum_131: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2957, [0, 2, 3]);  mul_2957 = None
    mul_2958: "f32[18]" = torch.ops.aten.mul.Tensor(sum_130, 3.985969387755102e-05)
    unsqueeze_2078: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2958, 0);  mul_2958 = None
    unsqueeze_2079: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2078, 2);  unsqueeze_2078 = None
    unsqueeze_2080: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2079, 3);  unsqueeze_2079 = None
    mul_2959: "f32[18]" = torch.ops.aten.mul.Tensor(sum_131, 3.985969387755102e-05)
    mul_2960: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_787, squeeze_787)
    mul_2961: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2959, mul_2960);  mul_2959 = mul_2960 = None
    unsqueeze_2081: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2961, 0);  mul_2961 = None
    unsqueeze_2082: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2081, 2);  unsqueeze_2081 = None
    unsqueeze_2083: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2082, 3);  unsqueeze_2082 = None
    mul_2962: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_787, primals_788);  primals_788 = None
    unsqueeze_2084: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2962, 0);  mul_2962 = None
    unsqueeze_2085: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2084, 2);  unsqueeze_2084 = None
    unsqueeze_2086: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2085, 3);  unsqueeze_2085 = None
    sub_574: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_262, unsqueeze_2077);  convolution_262 = unsqueeze_2077 = None
    mul_2963: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_574, unsqueeze_2083);  sub_574 = unsqueeze_2083 = None
    sub_575: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_50, mul_2963);  mul_2963 = None
    sub_576: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_575, unsqueeze_2080);  sub_575 = unsqueeze_2080 = None
    mul_2964: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_576, unsqueeze_2086);  sub_576 = unsqueeze_2086 = None
    mul_2965: "f32[18]" = torch.ops.aten.mul.Tensor(sum_131, squeeze_787);  sum_131 = squeeze_787 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_62 = torch.ops.aten.convolution_backward.default(mul_2964, relu_232, primals_787, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2964 = primals_787 = None
    getitem_836: "f32[8, 18, 56, 56]" = convolution_backward_62[0]
    getitem_837: "f32[18, 18, 3, 3]" = convolution_backward_62[1];  convolution_backward_62 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_422: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_232);  relu_232 = None
    alias_423: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_422);  alias_422 = None
    le_51: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_423, 0);  alias_423 = None
    scalar_tensor_51: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_51: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_51, scalar_tensor_51, getitem_836);  le_51 = scalar_tensor_51 = getitem_836 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2087: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_783, 0);  squeeze_783 = None
    unsqueeze_2088: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2087, 2);  unsqueeze_2087 = None
    unsqueeze_2089: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2088, 3);  unsqueeze_2088 = None
    sum_132: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_51, [0, 2, 3])
    sub_577: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_261, unsqueeze_2089)
    mul_2966: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_51, sub_577);  sub_577 = None
    sum_133: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2966, [0, 2, 3]);  mul_2966 = None
    mul_2967: "f32[18]" = torch.ops.aten.mul.Tensor(sum_132, 3.985969387755102e-05)
    unsqueeze_2090: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2967, 0);  mul_2967 = None
    unsqueeze_2091: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2090, 2);  unsqueeze_2090 = None
    unsqueeze_2092: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2091, 3);  unsqueeze_2091 = None
    mul_2968: "f32[18]" = torch.ops.aten.mul.Tensor(sum_133, 3.985969387755102e-05)
    mul_2969: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_784, squeeze_784)
    mul_2970: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2968, mul_2969);  mul_2968 = mul_2969 = None
    unsqueeze_2093: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2970, 0);  mul_2970 = None
    unsqueeze_2094: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2093, 2);  unsqueeze_2093 = None
    unsqueeze_2095: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2094, 3);  unsqueeze_2094 = None
    mul_2971: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_784, primals_785);  primals_785 = None
    unsqueeze_2096: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2971, 0);  mul_2971 = None
    unsqueeze_2097: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2096, 2);  unsqueeze_2096 = None
    unsqueeze_2098: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2097, 3);  unsqueeze_2097 = None
    sub_578: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_261, unsqueeze_2089);  convolution_261 = unsqueeze_2089 = None
    mul_2972: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_578, unsqueeze_2095);  sub_578 = unsqueeze_2095 = None
    sub_579: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_51, mul_2972);  where_51 = mul_2972 = None
    sub_580: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_579, unsqueeze_2092);  sub_579 = unsqueeze_2092 = None
    mul_2973: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_580, unsqueeze_2098);  sub_580 = unsqueeze_2098 = None
    mul_2974: "f32[18]" = torch.ops.aten.mul.Tensor(sum_133, squeeze_784);  sum_133 = squeeze_784 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_63 = torch.ops.aten.convolution_backward.default(mul_2973, relu_231, primals_784, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2973 = primals_784 = None
    getitem_839: "f32[8, 18, 56, 56]" = convolution_backward_63[0]
    getitem_840: "f32[18, 18, 3, 3]" = convolution_backward_63[1];  convolution_backward_63 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1955: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_50, getitem_839);  where_50 = getitem_839 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_425: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_231);  relu_231 = None
    alias_426: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_425);  alias_425 = None
    le_52: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_426, 0);  alias_426 = None
    scalar_tensor_52: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_52: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_52, scalar_tensor_52, add_1955);  le_52 = scalar_tensor_52 = add_1955 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2099: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_780, 0);  squeeze_780 = None
    unsqueeze_2100: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2099, 2);  unsqueeze_2099 = None
    unsqueeze_2101: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2100, 3);  unsqueeze_2100 = None
    sum_134: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_52, [0, 2, 3])
    sub_581: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_260, unsqueeze_2101)
    mul_2975: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_52, sub_581);  sub_581 = None
    sum_135: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2975, [0, 2, 3]);  mul_2975 = None
    mul_2976: "f32[18]" = torch.ops.aten.mul.Tensor(sum_134, 3.985969387755102e-05)
    unsqueeze_2102: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2976, 0);  mul_2976 = None
    unsqueeze_2103: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2102, 2);  unsqueeze_2102 = None
    unsqueeze_2104: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2103, 3);  unsqueeze_2103 = None
    mul_2977: "f32[18]" = torch.ops.aten.mul.Tensor(sum_135, 3.985969387755102e-05)
    mul_2978: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_781, squeeze_781)
    mul_2979: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2977, mul_2978);  mul_2977 = mul_2978 = None
    unsqueeze_2105: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2979, 0);  mul_2979 = None
    unsqueeze_2106: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2105, 2);  unsqueeze_2105 = None
    unsqueeze_2107: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2106, 3);  unsqueeze_2106 = None
    mul_2980: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_781, primals_782);  primals_782 = None
    unsqueeze_2108: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2980, 0);  mul_2980 = None
    unsqueeze_2109: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2108, 2);  unsqueeze_2108 = None
    unsqueeze_2110: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2109, 3);  unsqueeze_2109 = None
    sub_582: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_260, unsqueeze_2101);  convolution_260 = unsqueeze_2101 = None
    mul_2981: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_582, unsqueeze_2107);  sub_582 = unsqueeze_2107 = None
    sub_583: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_52, mul_2981);  mul_2981 = None
    sub_584: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_583, unsqueeze_2104);  sub_583 = unsqueeze_2104 = None
    mul_2982: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_584, unsqueeze_2110);  sub_584 = unsqueeze_2110 = None
    mul_2983: "f32[18]" = torch.ops.aten.mul.Tensor(sum_135, squeeze_781);  sum_135 = squeeze_781 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_64 = torch.ops.aten.convolution_backward.default(mul_2982, relu_230, primals_781, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2982 = primals_781 = None
    getitem_842: "f32[8, 18, 56, 56]" = convolution_backward_64[0]
    getitem_843: "f32[18, 18, 3, 3]" = convolution_backward_64[1];  convolution_backward_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_428: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_230);  relu_230 = None
    alias_429: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_428);  alias_428 = None
    le_53: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_429, 0);  alias_429 = None
    scalar_tensor_53: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_53: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_53, scalar_tensor_53, getitem_842);  le_53 = scalar_tensor_53 = getitem_842 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2111: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_777, 0);  squeeze_777 = None
    unsqueeze_2112: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2111, 2);  unsqueeze_2111 = None
    unsqueeze_2113: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2112, 3);  unsqueeze_2112 = None
    sum_136: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_53, [0, 2, 3])
    sub_585: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_259, unsqueeze_2113)
    mul_2984: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_53, sub_585);  sub_585 = None
    sum_137: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2984, [0, 2, 3]);  mul_2984 = None
    mul_2985: "f32[18]" = torch.ops.aten.mul.Tensor(sum_136, 3.985969387755102e-05)
    unsqueeze_2114: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2985, 0);  mul_2985 = None
    unsqueeze_2115: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2114, 2);  unsqueeze_2114 = None
    unsqueeze_2116: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2115, 3);  unsqueeze_2115 = None
    mul_2986: "f32[18]" = torch.ops.aten.mul.Tensor(sum_137, 3.985969387755102e-05)
    mul_2987: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_778, squeeze_778)
    mul_2988: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2986, mul_2987);  mul_2986 = mul_2987 = None
    unsqueeze_2117: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2988, 0);  mul_2988 = None
    unsqueeze_2118: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2117, 2);  unsqueeze_2117 = None
    unsqueeze_2119: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2118, 3);  unsqueeze_2118 = None
    mul_2989: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_778, primals_779);  primals_779 = None
    unsqueeze_2120: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2989, 0);  mul_2989 = None
    unsqueeze_2121: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2120, 2);  unsqueeze_2120 = None
    unsqueeze_2122: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2121, 3);  unsqueeze_2121 = None
    sub_586: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_259, unsqueeze_2113);  convolution_259 = unsqueeze_2113 = None
    mul_2990: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_586, unsqueeze_2119);  sub_586 = unsqueeze_2119 = None
    sub_587: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_53, mul_2990);  where_53 = mul_2990 = None
    sub_588: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_587, unsqueeze_2116);  sub_587 = unsqueeze_2116 = None
    mul_2991: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_588, unsqueeze_2122);  sub_588 = unsqueeze_2122 = None
    mul_2992: "f32[18]" = torch.ops.aten.mul.Tensor(sum_137, squeeze_778);  sum_137 = squeeze_778 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_65 = torch.ops.aten.convolution_backward.default(mul_2991, relu_229, primals_778, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_2991 = primals_778 = None
    getitem_845: "f32[8, 18, 56, 56]" = convolution_backward_65[0]
    getitem_846: "f32[18, 18, 3, 3]" = convolution_backward_65[1];  convolution_backward_65 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1956: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_52, getitem_845);  where_52 = getitem_845 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_431: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_229);  relu_229 = None
    alias_432: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_431);  alias_431 = None
    le_54: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_432, 0);  alias_432 = None
    scalar_tensor_54: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_54: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_54, scalar_tensor_54, add_1956);  le_54 = scalar_tensor_54 = add_1956 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2123: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_774, 0);  squeeze_774 = None
    unsqueeze_2124: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2123, 2);  unsqueeze_2123 = None
    unsqueeze_2125: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2124, 3);  unsqueeze_2124 = None
    sum_138: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_54, [0, 2, 3])
    sub_589: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_258, unsqueeze_2125)
    mul_2993: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_54, sub_589);  sub_589 = None
    sum_139: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_2993, [0, 2, 3]);  mul_2993 = None
    mul_2994: "f32[18]" = torch.ops.aten.mul.Tensor(sum_138, 3.985969387755102e-05)
    unsqueeze_2126: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2994, 0);  mul_2994 = None
    unsqueeze_2127: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2126, 2);  unsqueeze_2126 = None
    unsqueeze_2128: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2127, 3);  unsqueeze_2127 = None
    mul_2995: "f32[18]" = torch.ops.aten.mul.Tensor(sum_139, 3.985969387755102e-05)
    mul_2996: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_775, squeeze_775)
    mul_2997: "f32[18]" = torch.ops.aten.mul.Tensor(mul_2995, mul_2996);  mul_2995 = mul_2996 = None
    unsqueeze_2129: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2997, 0);  mul_2997 = None
    unsqueeze_2130: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2129, 2);  unsqueeze_2129 = None
    unsqueeze_2131: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2130, 3);  unsqueeze_2130 = None
    mul_2998: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_775, primals_776);  primals_776 = None
    unsqueeze_2132: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_2998, 0);  mul_2998 = None
    unsqueeze_2133: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2132, 2);  unsqueeze_2132 = None
    unsqueeze_2134: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2133, 3);  unsqueeze_2133 = None
    sub_590: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_258, unsqueeze_2125);  convolution_258 = unsqueeze_2125 = None
    mul_2999: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_590, unsqueeze_2131);  sub_590 = unsqueeze_2131 = None
    sub_591: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_54, mul_2999);  mul_2999 = None
    sub_592: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_591, unsqueeze_2128);  sub_591 = unsqueeze_2128 = None
    mul_3000: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_592, unsqueeze_2134);  sub_592 = unsqueeze_2134 = None
    mul_3001: "f32[18]" = torch.ops.aten.mul.Tensor(sum_139, squeeze_775);  sum_139 = squeeze_775 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_66 = torch.ops.aten.convolution_backward.default(mul_3000, relu_228, primals_775, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3000 = primals_775 = None
    getitem_848: "f32[8, 18, 56, 56]" = convolution_backward_66[0]
    getitem_849: "f32[18, 18, 3, 3]" = convolution_backward_66[1];  convolution_backward_66 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_434: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_228);  relu_228 = None
    alias_435: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_434);  alias_434 = None
    le_55: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_435, 0);  alias_435 = None
    scalar_tensor_55: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_55: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_55, scalar_tensor_55, getitem_848);  le_55 = scalar_tensor_55 = getitem_848 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2135: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_771, 0);  squeeze_771 = None
    unsqueeze_2136: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2135, 2);  unsqueeze_2135 = None
    unsqueeze_2137: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2136, 3);  unsqueeze_2136 = None
    sum_140: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_55, [0, 2, 3])
    sub_593: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_257, unsqueeze_2137)
    mul_3002: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_55, sub_593);  sub_593 = None
    sum_141: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3002, [0, 2, 3]);  mul_3002 = None
    mul_3003: "f32[18]" = torch.ops.aten.mul.Tensor(sum_140, 3.985969387755102e-05)
    unsqueeze_2138: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3003, 0);  mul_3003 = None
    unsqueeze_2139: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2138, 2);  unsqueeze_2138 = None
    unsqueeze_2140: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2139, 3);  unsqueeze_2139 = None
    mul_3004: "f32[18]" = torch.ops.aten.mul.Tensor(sum_141, 3.985969387755102e-05)
    mul_3005: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_772, squeeze_772)
    mul_3006: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3004, mul_3005);  mul_3004 = mul_3005 = None
    unsqueeze_2141: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3006, 0);  mul_3006 = None
    unsqueeze_2142: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2141, 2);  unsqueeze_2141 = None
    unsqueeze_2143: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2142, 3);  unsqueeze_2142 = None
    mul_3007: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_772, primals_773);  primals_773 = None
    unsqueeze_2144: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3007, 0);  mul_3007 = None
    unsqueeze_2145: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2144, 2);  unsqueeze_2144 = None
    unsqueeze_2146: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2145, 3);  unsqueeze_2145 = None
    sub_594: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_257, unsqueeze_2137);  convolution_257 = unsqueeze_2137 = None
    mul_3008: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_594, unsqueeze_2143);  sub_594 = unsqueeze_2143 = None
    sub_595: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_55, mul_3008);  where_55 = mul_3008 = None
    sub_596: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_595, unsqueeze_2140);  sub_595 = unsqueeze_2140 = None
    mul_3009: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_596, unsqueeze_2146);  sub_596 = unsqueeze_2146 = None
    mul_3010: "f32[18]" = torch.ops.aten.mul.Tensor(sum_141, squeeze_772);  sum_141 = squeeze_772 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_67 = torch.ops.aten.convolution_backward.default(mul_3009, relu_220, primals_772, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3009 = relu_220 = primals_772 = None
    getitem_851: "f32[8, 18, 56, 56]" = convolution_backward_67[0]
    getitem_852: "f32[18, 18, 3, 3]" = convolution_backward_67[1];  convolution_backward_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1957: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_54, getitem_851);  where_54 = getitem_851 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_436: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_227);  alias_227 = None
    le_56: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_436, 0);  alias_436 = None
    scalar_tensor_56: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_56: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_56, scalar_tensor_56, add_1945);  le_56 = scalar_tensor_56 = add_1945 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_2147: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_768, 0);  squeeze_768 = None
    unsqueeze_2148: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2147, 2);  unsqueeze_2147 = None
    unsqueeze_2149: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2148, 3);  unsqueeze_2148 = None
    sum_142: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_56, [0, 2, 3])
    sub_597: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_256, unsqueeze_2149)
    mul_3011: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_56, sub_597);  sub_597 = None
    sum_143: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3011, [0, 2, 3]);  mul_3011 = None
    mul_3012: "f32[144]" = torch.ops.aten.mul.Tensor(sum_142, 0.002551020408163265)
    unsqueeze_2150: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3012, 0);  mul_3012 = None
    unsqueeze_2151: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2150, 2);  unsqueeze_2150 = None
    unsqueeze_2152: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2151, 3);  unsqueeze_2151 = None
    mul_3013: "f32[144]" = torch.ops.aten.mul.Tensor(sum_143, 0.002551020408163265)
    mul_3014: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_769, squeeze_769)
    mul_3015: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3013, mul_3014);  mul_3013 = mul_3014 = None
    unsqueeze_2153: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3015, 0);  mul_3015 = None
    unsqueeze_2154: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2153, 2);  unsqueeze_2153 = None
    unsqueeze_2155: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2154, 3);  unsqueeze_2154 = None
    mul_3016: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_769, primals_770);  primals_770 = None
    unsqueeze_2156: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3016, 0);  mul_3016 = None
    unsqueeze_2157: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2156, 2);  unsqueeze_2156 = None
    unsqueeze_2158: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2157, 3);  unsqueeze_2157 = None
    sub_598: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_256, unsqueeze_2149);  convolution_256 = unsqueeze_2149 = None
    mul_3017: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_598, unsqueeze_2155);  sub_598 = unsqueeze_2155 = None
    sub_599: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_56, mul_3017);  mul_3017 = None
    sub_600: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_599, unsqueeze_2152);  sub_599 = unsqueeze_2152 = None
    mul_3018: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_600, unsqueeze_2158);  sub_600 = unsqueeze_2158 = None
    mul_3019: "f32[144]" = torch.ops.aten.mul.Tensor(sum_143, squeeze_769);  sum_143 = squeeze_769 = None
    convolution_backward_68 = torch.ops.aten.convolution_backward.default(mul_3018, relu_211, primals_769, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3018 = primals_769 = None
    getitem_854: "f32[8, 72, 14, 14]" = convolution_backward_68[0]
    getitem_855: "f32[144, 72, 3, 3]" = convolution_backward_68[1];  convolution_backward_68 = None
    unsqueeze_2159: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_765, 0);  squeeze_765 = None
    unsqueeze_2160: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2159, 2);  unsqueeze_2159 = None
    unsqueeze_2161: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2160, 3);  unsqueeze_2160 = None
    sum_144: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_56, [0, 2, 3])
    sub_601: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_255, unsqueeze_2161)
    mul_3020: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_56, sub_601);  sub_601 = None
    sum_145: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3020, [0, 2, 3]);  mul_3020 = None
    mul_3021: "f32[144]" = torch.ops.aten.mul.Tensor(sum_144, 0.002551020408163265)
    unsqueeze_2162: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3021, 0);  mul_3021 = None
    unsqueeze_2163: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2162, 2);  unsqueeze_2162 = None
    unsqueeze_2164: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2163, 3);  unsqueeze_2163 = None
    mul_3022: "f32[144]" = torch.ops.aten.mul.Tensor(sum_145, 0.002551020408163265)
    mul_3023: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_766, squeeze_766)
    mul_3024: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3022, mul_3023);  mul_3022 = mul_3023 = None
    unsqueeze_2165: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3024, 0);  mul_3024 = None
    unsqueeze_2166: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2165, 2);  unsqueeze_2165 = None
    unsqueeze_2167: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2166, 3);  unsqueeze_2166 = None
    mul_3025: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_766, primals_767);  primals_767 = None
    unsqueeze_2168: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3025, 0);  mul_3025 = None
    unsqueeze_2169: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2168, 2);  unsqueeze_2168 = None
    unsqueeze_2170: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2169, 3);  unsqueeze_2169 = None
    sub_602: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_255, unsqueeze_2161);  convolution_255 = unsqueeze_2161 = None
    mul_3026: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_602, unsqueeze_2167);  sub_602 = unsqueeze_2167 = None
    sub_603: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_56, mul_3026);  mul_3026 = None
    sub_604: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_603, unsqueeze_2164);  sub_603 = unsqueeze_2164 = None
    mul_3027: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_604, unsqueeze_2170);  sub_604 = unsqueeze_2170 = None
    mul_3028: "f32[144]" = torch.ops.aten.mul.Tensor(sum_145, squeeze_766);  sum_145 = squeeze_766 = None
    convolution_backward_69 = torch.ops.aten.convolution_backward.default(mul_3027, relu_226, primals_766, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3027 = relu_226 = primals_766 = None
    getitem_857: "f32[8, 36, 14, 14]" = convolution_backward_69[0]
    getitem_858: "f32[144, 36, 3, 3]" = convolution_backward_69[1];  convolution_backward_69 = None
    alias_437: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(alias_226);  alias_226 = None
    le_57: "b8[8, 36, 14, 14]" = torch.ops.aten.le.Scalar(alias_437, 0);  alias_437 = None
    scalar_tensor_57: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_57: "f32[8, 36, 14, 14]" = torch.ops.aten.where.self(le_57, scalar_tensor_57, getitem_857);  le_57 = scalar_tensor_57 = getitem_857 = None
    unsqueeze_2171: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_762, 0);  squeeze_762 = None
    unsqueeze_2172: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2171, 2);  unsqueeze_2171 = None
    unsqueeze_2173: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2172, 3);  unsqueeze_2172 = None
    sum_146: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_57, [0, 2, 3])
    sub_605: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_254, unsqueeze_2173)
    mul_3029: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(where_57, sub_605);  sub_605 = None
    sum_147: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3029, [0, 2, 3]);  mul_3029 = None
    mul_3030: "f32[36]" = torch.ops.aten.mul.Tensor(sum_146, 0.0006377551020408163)
    unsqueeze_2174: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3030, 0);  mul_3030 = None
    unsqueeze_2175: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2174, 2);  unsqueeze_2174 = None
    unsqueeze_2176: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2175, 3);  unsqueeze_2175 = None
    mul_3031: "f32[36]" = torch.ops.aten.mul.Tensor(sum_147, 0.0006377551020408163)
    mul_3032: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_763, squeeze_763)
    mul_3033: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3031, mul_3032);  mul_3031 = mul_3032 = None
    unsqueeze_2177: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3033, 0);  mul_3033 = None
    unsqueeze_2178: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2177, 2);  unsqueeze_2177 = None
    unsqueeze_2179: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2178, 3);  unsqueeze_2178 = None
    mul_3034: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_763, primals_764);  primals_764 = None
    unsqueeze_2180: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3034, 0);  mul_3034 = None
    unsqueeze_2181: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2180, 2);  unsqueeze_2180 = None
    unsqueeze_2182: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2181, 3);  unsqueeze_2181 = None
    sub_606: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_254, unsqueeze_2173);  convolution_254 = unsqueeze_2173 = None
    mul_3035: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_606, unsqueeze_2179);  sub_606 = unsqueeze_2179 = None
    sub_607: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(where_57, mul_3035);  where_57 = mul_3035 = None
    sub_608: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_607, unsqueeze_2176);  sub_607 = unsqueeze_2176 = None
    mul_3036: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_608, unsqueeze_2182);  sub_608 = unsqueeze_2182 = None
    mul_3037: "f32[36]" = torch.ops.aten.mul.Tensor(sum_147, squeeze_763);  sum_147 = squeeze_763 = None
    convolution_backward_70 = torch.ops.aten.convolution_backward.default(mul_3036, relu_203, primals_763, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3036 = primals_763 = None
    getitem_860: "f32[8, 36, 28, 28]" = convolution_backward_70[0]
    getitem_861: "f32[36, 36, 3, 3]" = convolution_backward_70[1];  convolution_backward_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2183: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_759, 0);  squeeze_759 = None
    unsqueeze_2184: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2183, 2);  unsqueeze_2183 = None
    unsqueeze_2185: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2184, 3);  unsqueeze_2184 = None
    sum_148: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_56, [0, 2, 3])
    sub_609: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_253, unsqueeze_2185)
    mul_3038: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_56, sub_609);  sub_609 = None
    sum_149: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3038, [0, 2, 3]);  mul_3038 = None
    mul_3039: "f32[144]" = torch.ops.aten.mul.Tensor(sum_148, 0.002551020408163265)
    unsqueeze_2186: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3039, 0);  mul_3039 = None
    unsqueeze_2187: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2186, 2);  unsqueeze_2186 = None
    unsqueeze_2188: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2187, 3);  unsqueeze_2187 = None
    mul_3040: "f32[144]" = torch.ops.aten.mul.Tensor(sum_149, 0.002551020408163265)
    mul_3041: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_760, squeeze_760)
    mul_3042: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3040, mul_3041);  mul_3040 = mul_3041 = None
    unsqueeze_2189: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3042, 0);  mul_3042 = None
    unsqueeze_2190: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2189, 2);  unsqueeze_2189 = None
    unsqueeze_2191: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2190, 3);  unsqueeze_2190 = None
    mul_3043: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_760, primals_761);  primals_761 = None
    unsqueeze_2192: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3043, 0);  mul_3043 = None
    unsqueeze_2193: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2192, 2);  unsqueeze_2192 = None
    unsqueeze_2194: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2193, 3);  unsqueeze_2193 = None
    sub_610: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_253, unsqueeze_2185);  convolution_253 = unsqueeze_2185 = None
    mul_3044: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_610, unsqueeze_2191);  sub_610 = unsqueeze_2191 = None
    sub_611: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_56, mul_3044);  mul_3044 = None
    sub_612: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_611, unsqueeze_2188);  sub_611 = unsqueeze_2188 = None
    mul_3045: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_612, unsqueeze_2194);  sub_612 = unsqueeze_2194 = None
    mul_3046: "f32[144]" = torch.ops.aten.mul.Tensor(sum_149, squeeze_760);  sum_149 = squeeze_760 = None
    convolution_backward_71 = torch.ops.aten.convolution_backward.default(mul_3045, relu_225, primals_760, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3045 = relu_225 = primals_760 = None
    getitem_863: "f32[8, 18, 14, 14]" = convolution_backward_71[0]
    getitem_864: "f32[144, 18, 3, 3]" = convolution_backward_71[1];  convolution_backward_71 = None
    alias_438: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(alias_225);  alias_225 = None
    le_58: "b8[8, 18, 14, 14]" = torch.ops.aten.le.Scalar(alias_438, 0);  alias_438 = None
    scalar_tensor_58: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_58: "f32[8, 18, 14, 14]" = torch.ops.aten.where.self(le_58, scalar_tensor_58, getitem_863);  le_58 = scalar_tensor_58 = getitem_863 = None
    unsqueeze_2195: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_756, 0);  squeeze_756 = None
    unsqueeze_2196: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2195, 2);  unsqueeze_2195 = None
    unsqueeze_2197: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2196, 3);  unsqueeze_2196 = None
    sum_150: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_58, [0, 2, 3])
    sub_613: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_252, unsqueeze_2197)
    mul_3047: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(where_58, sub_613);  sub_613 = None
    sum_151: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3047, [0, 2, 3]);  mul_3047 = None
    mul_3048: "f32[18]" = torch.ops.aten.mul.Tensor(sum_150, 0.0006377551020408163)
    unsqueeze_2198: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3048, 0);  mul_3048 = None
    unsqueeze_2199: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2198, 2);  unsqueeze_2198 = None
    unsqueeze_2200: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2199, 3);  unsqueeze_2199 = None
    mul_3049: "f32[18]" = torch.ops.aten.mul.Tensor(sum_151, 0.0006377551020408163)
    mul_3050: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_757, squeeze_757)
    mul_3051: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3049, mul_3050);  mul_3049 = mul_3050 = None
    unsqueeze_2201: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3051, 0);  mul_3051 = None
    unsqueeze_2202: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2201, 2);  unsqueeze_2201 = None
    unsqueeze_2203: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2202, 3);  unsqueeze_2202 = None
    mul_3052: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_757, primals_758);  primals_758 = None
    unsqueeze_2204: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3052, 0);  mul_3052 = None
    unsqueeze_2205: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2204, 2);  unsqueeze_2204 = None
    unsqueeze_2206: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2205, 3);  unsqueeze_2205 = None
    sub_614: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_252, unsqueeze_2197);  convolution_252 = unsqueeze_2197 = None
    mul_3053: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_614, unsqueeze_2203);  sub_614 = unsqueeze_2203 = None
    sub_615: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(where_58, mul_3053);  where_58 = mul_3053 = None
    sub_616: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_615, unsqueeze_2200);  sub_615 = unsqueeze_2200 = None
    mul_3054: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_616, unsqueeze_2206);  sub_616 = unsqueeze_2206 = None
    mul_3055: "f32[18]" = torch.ops.aten.mul.Tensor(sum_151, squeeze_757);  sum_151 = squeeze_757 = None
    convolution_backward_72 = torch.ops.aten.convolution_backward.default(mul_3054, relu_224, primals_757, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3054 = relu_224 = primals_757 = None
    getitem_866: "f32[8, 18, 28, 28]" = convolution_backward_72[0]
    getitem_867: "f32[18, 18, 3, 3]" = convolution_backward_72[1];  convolution_backward_72 = None
    alias_439: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_224);  alias_224 = None
    le_59: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_439, 0);  alias_439 = None
    scalar_tensor_59: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_59: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_59, scalar_tensor_59, getitem_866);  le_59 = scalar_tensor_59 = getitem_866 = None
    unsqueeze_2207: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_753, 0);  squeeze_753 = None
    unsqueeze_2208: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2207, 2);  unsqueeze_2207 = None
    unsqueeze_2209: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2208, 3);  unsqueeze_2208 = None
    sum_152: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_59, [0, 2, 3])
    sub_617: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_251, unsqueeze_2209)
    mul_3056: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_59, sub_617);  sub_617 = None
    sum_153: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3056, [0, 2, 3]);  mul_3056 = None
    mul_3057: "f32[18]" = torch.ops.aten.mul.Tensor(sum_152, 0.00015943877551020407)
    unsqueeze_2210: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3057, 0);  mul_3057 = None
    unsqueeze_2211: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2210, 2);  unsqueeze_2210 = None
    unsqueeze_2212: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2211, 3);  unsqueeze_2211 = None
    mul_3058: "f32[18]" = torch.ops.aten.mul.Tensor(sum_153, 0.00015943877551020407)
    mul_3059: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_754, squeeze_754)
    mul_3060: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3058, mul_3059);  mul_3058 = mul_3059 = None
    unsqueeze_2213: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3060, 0);  mul_3060 = None
    unsqueeze_2214: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2213, 2);  unsqueeze_2213 = None
    unsqueeze_2215: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2214, 3);  unsqueeze_2214 = None
    mul_3061: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_754, primals_755);  primals_755 = None
    unsqueeze_2216: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3061, 0);  mul_3061 = None
    unsqueeze_2217: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2216, 2);  unsqueeze_2216 = None
    unsqueeze_2218: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2217, 3);  unsqueeze_2217 = None
    sub_618: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_251, unsqueeze_2209);  convolution_251 = unsqueeze_2209 = None
    mul_3062: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_618, unsqueeze_2215);  sub_618 = unsqueeze_2215 = None
    sub_619: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_59, mul_3062);  where_59 = mul_3062 = None
    sub_620: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_619, unsqueeze_2212);  sub_619 = unsqueeze_2212 = None
    mul_3063: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_620, unsqueeze_2218);  sub_620 = unsqueeze_2218 = None
    mul_3064: "f32[18]" = torch.ops.aten.mul.Tensor(sum_153, squeeze_754);  sum_153 = squeeze_754 = None
    convolution_backward_73 = torch.ops.aten.convolution_backward.default(mul_3063, relu_195, primals_754, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3063 = primals_754 = None
    getitem_869: "f32[8, 18, 56, 56]" = convolution_backward_73[0]
    getitem_870: "f32[18, 18, 3, 3]" = convolution_backward_73[1];  convolution_backward_73 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_440: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_223);  alias_223 = None
    le_60: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_440, 0);  alias_440 = None
    scalar_tensor_60: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_60: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_60, scalar_tensor_60, add_1949);  le_60 = scalar_tensor_60 = add_1949 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_6: "f32[8, 72, 7, 7]" = torch.ops.aten.full.default([8, 72, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_6: "f32[8, 72, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_6, [None, None, unsqueeze_1028, convert_element_type_99], where_60, True);  full_6 = unsqueeze_1028 = convert_element_type_99 = None
    unsqueeze_2219: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_750, 0);  squeeze_750 = None
    unsqueeze_2220: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2219, 2);  unsqueeze_2219 = None
    unsqueeze_2221: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2220, 3);  unsqueeze_2220 = None
    sum_154: "f32[72]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_6, [0, 2, 3])
    sub_621: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_250, unsqueeze_2221)
    mul_3065: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_6, sub_621);  sub_621 = None
    sum_155: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3065, [0, 2, 3]);  mul_3065 = None
    mul_3066: "f32[72]" = torch.ops.aten.mul.Tensor(sum_154, 0.002551020408163265)
    unsqueeze_2222: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3066, 0);  mul_3066 = None
    unsqueeze_2223: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2222, 2);  unsqueeze_2222 = None
    unsqueeze_2224: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2223, 3);  unsqueeze_2223 = None
    mul_3067: "f32[72]" = torch.ops.aten.mul.Tensor(sum_155, 0.002551020408163265)
    mul_3068: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_751, squeeze_751)
    mul_3069: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3067, mul_3068);  mul_3067 = mul_3068 = None
    unsqueeze_2225: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3069, 0);  mul_3069 = None
    unsqueeze_2226: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2225, 2);  unsqueeze_2225 = None
    unsqueeze_2227: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2226, 3);  unsqueeze_2226 = None
    mul_3070: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_751, primals_752);  primals_752 = None
    unsqueeze_2228: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3070, 0);  mul_3070 = None
    unsqueeze_2229: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2228, 2);  unsqueeze_2228 = None
    unsqueeze_2230: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2229, 3);  unsqueeze_2229 = None
    sub_622: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_250, unsqueeze_2221);  convolution_250 = unsqueeze_2221 = None
    mul_3071: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_622, unsqueeze_2227);  sub_622 = unsqueeze_2227 = None
    sub_623: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_6, mul_3071);  _unsafe_index_put_6 = mul_3071 = None
    sub_624: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(sub_623, unsqueeze_2224);  sub_623 = unsqueeze_2224 = None
    mul_3072: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_624, unsqueeze_2230);  sub_624 = unsqueeze_2230 = None
    mul_3073: "f32[72]" = torch.ops.aten.mul.Tensor(sum_155, squeeze_751);  sum_155 = squeeze_751 = None
    convolution_backward_74 = torch.ops.aten.convolution_backward.default(mul_3072, relu_219, primals_751, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3072 = primals_751 = None
    getitem_872: "f32[8, 144, 7, 7]" = convolution_backward_74[0]
    getitem_873: "f32[72, 144, 1, 1]" = convolution_backward_74[1];  convolution_backward_74 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1958: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_56, getitem_872);  where_56 = getitem_872 = None
    add_1959: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(getitem_854, where_60);  getitem_854 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_2231: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_747, 0);  squeeze_747 = None
    unsqueeze_2232: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2231, 2);  unsqueeze_2231 = None
    unsqueeze_2233: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2232, 3);  unsqueeze_2232 = None
    sum_156: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_60, [0, 2, 3])
    sub_625: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_249, unsqueeze_2233)
    mul_3074: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_60, sub_625);  sub_625 = None
    sum_157: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3074, [0, 2, 3]);  mul_3074 = None
    mul_3075: "f32[72]" = torch.ops.aten.mul.Tensor(sum_156, 0.0006377551020408163)
    unsqueeze_2234: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3075, 0);  mul_3075 = None
    unsqueeze_2235: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2234, 2);  unsqueeze_2234 = None
    unsqueeze_2236: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2235, 3);  unsqueeze_2235 = None
    mul_3076: "f32[72]" = torch.ops.aten.mul.Tensor(sum_157, 0.0006377551020408163)
    mul_3077: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_748, squeeze_748)
    mul_3078: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3076, mul_3077);  mul_3076 = mul_3077 = None
    unsqueeze_2237: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3078, 0);  mul_3078 = None
    unsqueeze_2238: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2237, 2);  unsqueeze_2237 = None
    unsqueeze_2239: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2238, 3);  unsqueeze_2238 = None
    mul_3079: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_748, primals_749);  primals_749 = None
    unsqueeze_2240: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3079, 0);  mul_3079 = None
    unsqueeze_2241: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2240, 2);  unsqueeze_2240 = None
    unsqueeze_2242: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2241, 3);  unsqueeze_2241 = None
    sub_626: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_249, unsqueeze_2233);  convolution_249 = unsqueeze_2233 = None
    mul_3080: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_626, unsqueeze_2239);  sub_626 = unsqueeze_2239 = None
    sub_627: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_60, mul_3080);  mul_3080 = None
    sub_628: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_627, unsqueeze_2236);  sub_627 = unsqueeze_2236 = None
    mul_3081: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_628, unsqueeze_2242);  sub_628 = unsqueeze_2242 = None
    mul_3082: "f32[72]" = torch.ops.aten.mul.Tensor(sum_157, squeeze_748);  sum_157 = squeeze_748 = None
    convolution_backward_75 = torch.ops.aten.convolution_backward.default(mul_3081, relu_203, primals_748, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3081 = primals_748 = None
    getitem_875: "f32[8, 36, 28, 28]" = convolution_backward_75[0]
    getitem_876: "f32[72, 36, 3, 3]" = convolution_backward_75[1];  convolution_backward_75 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1960: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_860, getitem_875);  getitem_860 = getitem_875 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2243: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_744, 0);  squeeze_744 = None
    unsqueeze_2244: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2243, 2);  unsqueeze_2243 = None
    unsqueeze_2245: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2244, 3);  unsqueeze_2244 = None
    sum_158: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_60, [0, 2, 3])
    sub_629: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_248, unsqueeze_2245)
    mul_3083: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_60, sub_629);  sub_629 = None
    sum_159: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3083, [0, 2, 3]);  mul_3083 = None
    mul_3084: "f32[72]" = torch.ops.aten.mul.Tensor(sum_158, 0.0006377551020408163)
    unsqueeze_2246: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3084, 0);  mul_3084 = None
    unsqueeze_2247: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2246, 2);  unsqueeze_2246 = None
    unsqueeze_2248: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2247, 3);  unsqueeze_2247 = None
    mul_3085: "f32[72]" = torch.ops.aten.mul.Tensor(sum_159, 0.0006377551020408163)
    mul_3086: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_745, squeeze_745)
    mul_3087: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3085, mul_3086);  mul_3085 = mul_3086 = None
    unsqueeze_2249: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3087, 0);  mul_3087 = None
    unsqueeze_2250: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2249, 2);  unsqueeze_2249 = None
    unsqueeze_2251: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2250, 3);  unsqueeze_2250 = None
    mul_3088: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_745, primals_746);  primals_746 = None
    unsqueeze_2252: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3088, 0);  mul_3088 = None
    unsqueeze_2253: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2252, 2);  unsqueeze_2252 = None
    unsqueeze_2254: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2253, 3);  unsqueeze_2253 = None
    sub_630: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_248, unsqueeze_2245);  convolution_248 = unsqueeze_2245 = None
    mul_3089: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_630, unsqueeze_2251);  sub_630 = unsqueeze_2251 = None
    sub_631: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_60, mul_3089);  where_60 = mul_3089 = None
    sub_632: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_631, unsqueeze_2248);  sub_631 = unsqueeze_2248 = None
    mul_3090: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_632, unsqueeze_2254);  sub_632 = unsqueeze_2254 = None
    mul_3091: "f32[72]" = torch.ops.aten.mul.Tensor(sum_159, squeeze_745);  sum_159 = squeeze_745 = None
    convolution_backward_76 = torch.ops.aten.convolution_backward.default(mul_3090, relu_222, primals_745, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3090 = relu_222 = primals_745 = None
    getitem_878: "f32[8, 18, 28, 28]" = convolution_backward_76[0]
    getitem_879: "f32[72, 18, 3, 3]" = convolution_backward_76[1];  convolution_backward_76 = None
    alias_441: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_222);  alias_222 = None
    le_61: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_441, 0);  alias_441 = None
    scalar_tensor_61: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_61: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_61, scalar_tensor_61, getitem_878);  le_61 = scalar_tensor_61 = getitem_878 = None
    unsqueeze_2255: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_741, 0);  squeeze_741 = None
    unsqueeze_2256: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2255, 2);  unsqueeze_2255 = None
    unsqueeze_2257: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2256, 3);  unsqueeze_2256 = None
    sum_160: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_61, [0, 2, 3])
    sub_633: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_247, unsqueeze_2257)
    mul_3092: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_61, sub_633);  sub_633 = None
    sum_161: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3092, [0, 2, 3]);  mul_3092 = None
    mul_3093: "f32[18]" = torch.ops.aten.mul.Tensor(sum_160, 0.00015943877551020407)
    unsqueeze_2258: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3093, 0);  mul_3093 = None
    unsqueeze_2259: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2258, 2);  unsqueeze_2258 = None
    unsqueeze_2260: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2259, 3);  unsqueeze_2259 = None
    mul_3094: "f32[18]" = torch.ops.aten.mul.Tensor(sum_161, 0.00015943877551020407)
    mul_3095: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_742, squeeze_742)
    mul_3096: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3094, mul_3095);  mul_3094 = mul_3095 = None
    unsqueeze_2261: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3096, 0);  mul_3096 = None
    unsqueeze_2262: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2261, 2);  unsqueeze_2261 = None
    unsqueeze_2263: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2262, 3);  unsqueeze_2262 = None
    mul_3097: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_742, primals_743);  primals_743 = None
    unsqueeze_2264: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3097, 0);  mul_3097 = None
    unsqueeze_2265: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2264, 2);  unsqueeze_2264 = None
    unsqueeze_2266: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2265, 3);  unsqueeze_2265 = None
    sub_634: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_247, unsqueeze_2257);  convolution_247 = unsqueeze_2257 = None
    mul_3098: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_634, unsqueeze_2263);  sub_634 = unsqueeze_2263 = None
    sub_635: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_61, mul_3098);  where_61 = mul_3098 = None
    sub_636: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_635, unsqueeze_2260);  sub_635 = unsqueeze_2260 = None
    mul_3099: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_636, unsqueeze_2266);  sub_636 = unsqueeze_2266 = None
    mul_3100: "f32[18]" = torch.ops.aten.mul.Tensor(sum_161, squeeze_742);  sum_161 = squeeze_742 = None
    convolution_backward_77 = torch.ops.aten.convolution_backward.default(mul_3099, relu_195, primals_742, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3099 = primals_742 = None
    getitem_881: "f32[8, 18, 56, 56]" = convolution_backward_77[0]
    getitem_882: "f32[18, 18, 3, 3]" = convolution_backward_77[1];  convolution_backward_77 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1961: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_869, getitem_881);  getitem_869 = getitem_881 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_442: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_221);  alias_221 = None
    le_62: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_442, 0);  alias_442 = None
    scalar_tensor_62: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_62: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_62, scalar_tensor_62, add_1953);  le_62 = scalar_tensor_62 = add_1953 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_7: "f32[8, 36, 7, 7]" = torch.ops.aten.full.default([8, 36, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_7: "f32[8, 36, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_7, [None, None, unsqueeze_1011, convert_element_type_95], where_62, True);  full_7 = unsqueeze_1011 = convert_element_type_95 = None
    unsqueeze_2267: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_738, 0);  squeeze_738 = None
    unsqueeze_2268: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2267, 2);  unsqueeze_2267 = None
    unsqueeze_2269: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2268, 3);  unsqueeze_2268 = None
    sum_162: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_7, [0, 2, 3])
    sub_637: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_246, unsqueeze_2269)
    mul_3101: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_7, sub_637);  sub_637 = None
    sum_163: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3101, [0, 2, 3]);  mul_3101 = None
    mul_3102: "f32[36]" = torch.ops.aten.mul.Tensor(sum_162, 0.002551020408163265)
    unsqueeze_2270: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3102, 0);  mul_3102 = None
    unsqueeze_2271: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2270, 2);  unsqueeze_2270 = None
    unsqueeze_2272: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2271, 3);  unsqueeze_2271 = None
    mul_3103: "f32[36]" = torch.ops.aten.mul.Tensor(sum_163, 0.002551020408163265)
    mul_3104: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_739, squeeze_739)
    mul_3105: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3103, mul_3104);  mul_3103 = mul_3104 = None
    unsqueeze_2273: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3105, 0);  mul_3105 = None
    unsqueeze_2274: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2273, 2);  unsqueeze_2273 = None
    unsqueeze_2275: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2274, 3);  unsqueeze_2274 = None
    mul_3106: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_739, primals_740);  primals_740 = None
    unsqueeze_2276: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3106, 0);  mul_3106 = None
    unsqueeze_2277: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2276, 2);  unsqueeze_2276 = None
    unsqueeze_2278: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2277, 3);  unsqueeze_2277 = None
    sub_638: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_246, unsqueeze_2269);  convolution_246 = unsqueeze_2269 = None
    mul_3107: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_638, unsqueeze_2275);  sub_638 = unsqueeze_2275 = None
    sub_639: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_7, mul_3107);  _unsafe_index_put_7 = mul_3107 = None
    sub_640: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(sub_639, unsqueeze_2272);  sub_639 = unsqueeze_2272 = None
    mul_3108: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_640, unsqueeze_2278);  sub_640 = unsqueeze_2278 = None
    mul_3109: "f32[36]" = torch.ops.aten.mul.Tensor(sum_163, squeeze_739);  sum_163 = squeeze_739 = None
    convolution_backward_78 = torch.ops.aten.convolution_backward.default(mul_3108, relu_219, primals_739, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3108 = primals_739 = None
    getitem_884: "f32[8, 144, 7, 7]" = convolution_backward_78[0]
    getitem_885: "f32[36, 144, 1, 1]" = convolution_backward_78[1];  convolution_backward_78 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1962: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1958, getitem_884);  add_1958 = getitem_884 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_8: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_8: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_8, [None, None, unsqueeze_1006, convert_element_type_91], where_62, True);  full_8 = unsqueeze_1006 = convert_element_type_91 = None
    unsqueeze_2279: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_735, 0);  squeeze_735 = None
    unsqueeze_2280: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2279, 2);  unsqueeze_2279 = None
    unsqueeze_2281: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2280, 3);  unsqueeze_2280 = None
    sum_164: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_8, [0, 2, 3])
    sub_641: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_245, unsqueeze_2281)
    mul_3110: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_8, sub_641);  sub_641 = None
    sum_165: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3110, [0, 2, 3]);  mul_3110 = None
    mul_3111: "f32[36]" = torch.ops.aten.mul.Tensor(sum_164, 0.0006377551020408163)
    unsqueeze_2282: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3111, 0);  mul_3111 = None
    unsqueeze_2283: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2282, 2);  unsqueeze_2282 = None
    unsqueeze_2284: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2283, 3);  unsqueeze_2283 = None
    mul_3112: "f32[36]" = torch.ops.aten.mul.Tensor(sum_165, 0.0006377551020408163)
    mul_3113: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_736, squeeze_736)
    mul_3114: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3112, mul_3113);  mul_3112 = mul_3113 = None
    unsqueeze_2285: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3114, 0);  mul_3114 = None
    unsqueeze_2286: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2285, 2);  unsqueeze_2285 = None
    unsqueeze_2287: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2286, 3);  unsqueeze_2286 = None
    mul_3115: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_736, primals_737);  primals_737 = None
    unsqueeze_2288: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3115, 0);  mul_3115 = None
    unsqueeze_2289: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2288, 2);  unsqueeze_2288 = None
    unsqueeze_2290: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2289, 3);  unsqueeze_2289 = None
    sub_642: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_245, unsqueeze_2281);  convolution_245 = unsqueeze_2281 = None
    mul_3116: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_642, unsqueeze_2287);  sub_642 = unsqueeze_2287 = None
    sub_643: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_8, mul_3116);  _unsafe_index_put_8 = mul_3116 = None
    sub_644: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_643, unsqueeze_2284);  sub_643 = unsqueeze_2284 = None
    mul_3117: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_644, unsqueeze_2290);  sub_644 = unsqueeze_2290 = None
    mul_3118: "f32[36]" = torch.ops.aten.mul.Tensor(sum_165, squeeze_736);  sum_165 = squeeze_736 = None
    convolution_backward_79 = torch.ops.aten.convolution_backward.default(mul_3117, relu_211, primals_736, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3117 = primals_736 = None
    getitem_887: "f32[8, 72, 14, 14]" = convolution_backward_79[0]
    getitem_888: "f32[36, 72, 1, 1]" = convolution_backward_79[1];  convolution_backward_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1963: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1959, getitem_887);  add_1959 = getitem_887 = None
    add_1964: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1960, where_62);  add_1960 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2291: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_732, 0);  squeeze_732 = None
    unsqueeze_2292: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2291, 2);  unsqueeze_2291 = None
    unsqueeze_2293: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2292, 3);  unsqueeze_2292 = None
    sum_166: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_62, [0, 2, 3])
    sub_645: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_244, unsqueeze_2293)
    mul_3119: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_62, sub_645);  sub_645 = None
    sum_167: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3119, [0, 2, 3]);  mul_3119 = None
    mul_3120: "f32[36]" = torch.ops.aten.mul.Tensor(sum_166, 0.00015943877551020407)
    unsqueeze_2294: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3120, 0);  mul_3120 = None
    unsqueeze_2295: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2294, 2);  unsqueeze_2294 = None
    unsqueeze_2296: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2295, 3);  unsqueeze_2295 = None
    mul_3121: "f32[36]" = torch.ops.aten.mul.Tensor(sum_167, 0.00015943877551020407)
    mul_3122: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_733, squeeze_733)
    mul_3123: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3121, mul_3122);  mul_3121 = mul_3122 = None
    unsqueeze_2297: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3123, 0);  mul_3123 = None
    unsqueeze_2298: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2297, 2);  unsqueeze_2297 = None
    unsqueeze_2299: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2298, 3);  unsqueeze_2298 = None
    mul_3124: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_733, primals_734);  primals_734 = None
    unsqueeze_2300: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3124, 0);  mul_3124 = None
    unsqueeze_2301: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2300, 2);  unsqueeze_2300 = None
    unsqueeze_2302: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2301, 3);  unsqueeze_2301 = None
    sub_646: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_244, unsqueeze_2293);  convolution_244 = unsqueeze_2293 = None
    mul_3125: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_646, unsqueeze_2299);  sub_646 = unsqueeze_2299 = None
    sub_647: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_62, mul_3125);  where_62 = mul_3125 = None
    sub_648: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_647, unsqueeze_2296);  sub_647 = unsqueeze_2296 = None
    mul_3126: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_648, unsqueeze_2302);  sub_648 = unsqueeze_2302 = None
    mul_3127: "f32[36]" = torch.ops.aten.mul.Tensor(sum_167, squeeze_733);  sum_167 = squeeze_733 = None
    convolution_backward_80 = torch.ops.aten.convolution_backward.default(mul_3126, relu_195, primals_733, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3126 = primals_733 = None
    getitem_890: "f32[8, 18, 56, 56]" = convolution_backward_80[0]
    getitem_891: "f32[36, 18, 3, 3]" = convolution_backward_80[1];  convolution_backward_80 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1965: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1961, getitem_890);  add_1961 = getitem_890 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_443: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_220);  alias_220 = None
    le_63: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_443, 0);  alias_443 = None
    scalar_tensor_63: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_63: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_63, scalar_tensor_63, add_1957);  le_63 = scalar_tensor_63 = add_1957 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_9: "f32[8, 18, 7, 7]" = torch.ops.aten.full.default([8, 18, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_9: "f32[8, 18, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_9, [None, None, unsqueeze_997, convert_element_type_87], where_63, True);  full_9 = unsqueeze_997 = convert_element_type_87 = None
    unsqueeze_2303: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_729, 0);  squeeze_729 = None
    unsqueeze_2304: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2303, 2);  unsqueeze_2303 = None
    unsqueeze_2305: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2304, 3);  unsqueeze_2304 = None
    sum_168: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_9, [0, 2, 3])
    sub_649: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_243, unsqueeze_2305)
    mul_3128: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_9, sub_649);  sub_649 = None
    sum_169: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3128, [0, 2, 3]);  mul_3128 = None
    mul_3129: "f32[18]" = torch.ops.aten.mul.Tensor(sum_168, 0.002551020408163265)
    unsqueeze_2306: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3129, 0);  mul_3129 = None
    unsqueeze_2307: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2306, 2);  unsqueeze_2306 = None
    unsqueeze_2308: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2307, 3);  unsqueeze_2307 = None
    mul_3130: "f32[18]" = torch.ops.aten.mul.Tensor(sum_169, 0.002551020408163265)
    mul_3131: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_730, squeeze_730)
    mul_3132: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3130, mul_3131);  mul_3130 = mul_3131 = None
    unsqueeze_2309: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3132, 0);  mul_3132 = None
    unsqueeze_2310: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2309, 2);  unsqueeze_2309 = None
    unsqueeze_2311: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2310, 3);  unsqueeze_2310 = None
    mul_3133: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_730, primals_731);  primals_731 = None
    unsqueeze_2312: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3133, 0);  mul_3133 = None
    unsqueeze_2313: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2312, 2);  unsqueeze_2312 = None
    unsqueeze_2314: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2313, 3);  unsqueeze_2313 = None
    sub_650: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_243, unsqueeze_2305);  convolution_243 = unsqueeze_2305 = None
    mul_3134: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_650, unsqueeze_2311);  sub_650 = unsqueeze_2311 = None
    sub_651: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_9, mul_3134);  _unsafe_index_put_9 = mul_3134 = None
    sub_652: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(sub_651, unsqueeze_2308);  sub_651 = unsqueeze_2308 = None
    mul_3135: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_652, unsqueeze_2314);  sub_652 = unsqueeze_2314 = None
    mul_3136: "f32[18]" = torch.ops.aten.mul.Tensor(sum_169, squeeze_730);  sum_169 = squeeze_730 = None
    convolution_backward_81 = torch.ops.aten.convolution_backward.default(mul_3135, relu_219, primals_730, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3135 = primals_730 = None
    getitem_893: "f32[8, 144, 7, 7]" = convolution_backward_81[0]
    getitem_894: "f32[18, 144, 1, 1]" = convolution_backward_81[1];  convolution_backward_81 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1966: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1962, getitem_893);  add_1962 = getitem_893 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_10: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_10: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_10, [None, None, unsqueeze_992, convert_element_type_83], where_63, True);  full_10 = unsqueeze_992 = convert_element_type_83 = None
    unsqueeze_2315: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_726, 0);  squeeze_726 = None
    unsqueeze_2316: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2315, 2);  unsqueeze_2315 = None
    unsqueeze_2317: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2316, 3);  unsqueeze_2316 = None
    sum_170: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_10, [0, 2, 3])
    sub_653: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_242, unsqueeze_2317)
    mul_3137: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_10, sub_653);  sub_653 = None
    sum_171: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3137, [0, 2, 3]);  mul_3137 = None
    mul_3138: "f32[18]" = torch.ops.aten.mul.Tensor(sum_170, 0.0006377551020408163)
    unsqueeze_2318: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3138, 0);  mul_3138 = None
    unsqueeze_2319: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2318, 2);  unsqueeze_2318 = None
    unsqueeze_2320: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2319, 3);  unsqueeze_2319 = None
    mul_3139: "f32[18]" = torch.ops.aten.mul.Tensor(sum_171, 0.0006377551020408163)
    mul_3140: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_727, squeeze_727)
    mul_3141: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3139, mul_3140);  mul_3139 = mul_3140 = None
    unsqueeze_2321: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3141, 0);  mul_3141 = None
    unsqueeze_2322: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2321, 2);  unsqueeze_2321 = None
    unsqueeze_2323: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2322, 3);  unsqueeze_2322 = None
    mul_3142: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_727, primals_728);  primals_728 = None
    unsqueeze_2324: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3142, 0);  mul_3142 = None
    unsqueeze_2325: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2324, 2);  unsqueeze_2324 = None
    unsqueeze_2326: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2325, 3);  unsqueeze_2325 = None
    sub_654: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_242, unsqueeze_2317);  convolution_242 = unsqueeze_2317 = None
    mul_3143: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_654, unsqueeze_2323);  sub_654 = unsqueeze_2323 = None
    sub_655: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_10, mul_3143);  _unsafe_index_put_10 = mul_3143 = None
    sub_656: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_655, unsqueeze_2320);  sub_655 = unsqueeze_2320 = None
    mul_3144: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_656, unsqueeze_2326);  sub_656 = unsqueeze_2326 = None
    mul_3145: "f32[18]" = torch.ops.aten.mul.Tensor(sum_171, squeeze_727);  sum_171 = squeeze_727 = None
    convolution_backward_82 = torch.ops.aten.convolution_backward.default(mul_3144, relu_211, primals_727, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3144 = primals_727 = None
    getitem_896: "f32[8, 72, 14, 14]" = convolution_backward_82[0]
    getitem_897: "f32[18, 72, 1, 1]" = convolution_backward_82[1];  convolution_backward_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1967: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1963, getitem_896);  add_1963 = getitem_896 = None
    add_1968: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1965, where_63);  add_1965 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_11: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_11: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_11, [None, None, unsqueeze_987, convert_element_type_79], where_63, True);  full_11 = unsqueeze_987 = convert_element_type_79 = where_63 = None
    unsqueeze_2327: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_723, 0);  squeeze_723 = None
    unsqueeze_2328: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2327, 2);  unsqueeze_2327 = None
    unsqueeze_2329: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2328, 3);  unsqueeze_2328 = None
    sum_172: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_11, [0, 2, 3])
    sub_657: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_241, unsqueeze_2329)
    mul_3146: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_11, sub_657);  sub_657 = None
    sum_173: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3146, [0, 2, 3]);  mul_3146 = None
    mul_3147: "f32[18]" = torch.ops.aten.mul.Tensor(sum_172, 0.00015943877551020407)
    unsqueeze_2330: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3147, 0);  mul_3147 = None
    unsqueeze_2331: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2330, 2);  unsqueeze_2330 = None
    unsqueeze_2332: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2331, 3);  unsqueeze_2331 = None
    mul_3148: "f32[18]" = torch.ops.aten.mul.Tensor(sum_173, 0.00015943877551020407)
    mul_3149: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_724, squeeze_724)
    mul_3150: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3148, mul_3149);  mul_3148 = mul_3149 = None
    unsqueeze_2333: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3150, 0);  mul_3150 = None
    unsqueeze_2334: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2333, 2);  unsqueeze_2333 = None
    unsqueeze_2335: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2334, 3);  unsqueeze_2334 = None
    mul_3151: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_724, primals_725);  primals_725 = None
    unsqueeze_2336: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3151, 0);  mul_3151 = None
    unsqueeze_2337: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2336, 2);  unsqueeze_2336 = None
    unsqueeze_2338: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2337, 3);  unsqueeze_2337 = None
    sub_658: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_241, unsqueeze_2329);  convolution_241 = unsqueeze_2329 = None
    mul_3152: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_658, unsqueeze_2335);  sub_658 = unsqueeze_2335 = None
    sub_659: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_11, mul_3152);  _unsafe_index_put_11 = mul_3152 = None
    sub_660: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_659, unsqueeze_2332);  sub_659 = unsqueeze_2332 = None
    mul_3153: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_660, unsqueeze_2338);  sub_660 = unsqueeze_2338 = None
    mul_3154: "f32[18]" = torch.ops.aten.mul.Tensor(sum_173, squeeze_724);  sum_173 = squeeze_724 = None
    convolution_backward_83 = torch.ops.aten.convolution_backward.default(mul_3153, relu_203, primals_724, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3153 = primals_724 = None
    getitem_899: "f32[8, 36, 28, 28]" = convolution_backward_83[0]
    getitem_900: "f32[18, 36, 1, 1]" = convolution_backward_83[1];  convolution_backward_83 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1969: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1964, getitem_899);  add_1964 = getitem_899 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_445: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_219);  relu_219 = None
    alias_446: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_445);  alias_445 = None
    le_64: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_446, 0);  alias_446 = None
    scalar_tensor_64: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_64: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_64, scalar_tensor_64, add_1966);  le_64 = scalar_tensor_64 = add_1966 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2339: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_720, 0);  squeeze_720 = None
    unsqueeze_2340: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2339, 2);  unsqueeze_2339 = None
    unsqueeze_2341: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2340, 3);  unsqueeze_2340 = None
    sum_174: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_64, [0, 2, 3])
    sub_661: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_240, unsqueeze_2341)
    mul_3155: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_64, sub_661);  sub_661 = None
    sum_175: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3155, [0, 2, 3]);  mul_3155 = None
    mul_3156: "f32[144]" = torch.ops.aten.mul.Tensor(sum_174, 0.002551020408163265)
    unsqueeze_2342: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3156, 0);  mul_3156 = None
    unsqueeze_2343: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2342, 2);  unsqueeze_2342 = None
    unsqueeze_2344: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2343, 3);  unsqueeze_2343 = None
    mul_3157: "f32[144]" = torch.ops.aten.mul.Tensor(sum_175, 0.002551020408163265)
    mul_3158: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_721, squeeze_721)
    mul_3159: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3157, mul_3158);  mul_3157 = mul_3158 = None
    unsqueeze_2345: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3159, 0);  mul_3159 = None
    unsqueeze_2346: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2345, 2);  unsqueeze_2345 = None
    unsqueeze_2347: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2346, 3);  unsqueeze_2346 = None
    mul_3160: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_721, primals_722);  primals_722 = None
    unsqueeze_2348: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3160, 0);  mul_3160 = None
    unsqueeze_2349: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2348, 2);  unsqueeze_2348 = None
    unsqueeze_2350: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2349, 3);  unsqueeze_2349 = None
    sub_662: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_240, unsqueeze_2341);  convolution_240 = unsqueeze_2341 = None
    mul_3161: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_662, unsqueeze_2347);  sub_662 = unsqueeze_2347 = None
    sub_663: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_64, mul_3161);  mul_3161 = None
    sub_664: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_663, unsqueeze_2344);  sub_663 = unsqueeze_2344 = None
    mul_3162: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_664, unsqueeze_2350);  sub_664 = unsqueeze_2350 = None
    mul_3163: "f32[144]" = torch.ops.aten.mul.Tensor(sum_175, squeeze_721);  sum_175 = squeeze_721 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_84 = torch.ops.aten.convolution_backward.default(mul_3162, relu_218, primals_721, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3162 = primals_721 = None
    getitem_902: "f32[8, 144, 7, 7]" = convolution_backward_84[0]
    getitem_903: "f32[144, 144, 3, 3]" = convolution_backward_84[1];  convolution_backward_84 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_448: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_218);  relu_218 = None
    alias_449: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_448);  alias_448 = None
    le_65: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_449, 0);  alias_449 = None
    scalar_tensor_65: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_65: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_65, scalar_tensor_65, getitem_902);  le_65 = scalar_tensor_65 = getitem_902 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2351: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_717, 0);  squeeze_717 = None
    unsqueeze_2352: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2351, 2);  unsqueeze_2351 = None
    unsqueeze_2353: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2352, 3);  unsqueeze_2352 = None
    sum_176: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_65, [0, 2, 3])
    sub_665: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_239, unsqueeze_2353)
    mul_3164: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_65, sub_665);  sub_665 = None
    sum_177: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3164, [0, 2, 3]);  mul_3164 = None
    mul_3165: "f32[144]" = torch.ops.aten.mul.Tensor(sum_176, 0.002551020408163265)
    unsqueeze_2354: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3165, 0);  mul_3165 = None
    unsqueeze_2355: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2354, 2);  unsqueeze_2354 = None
    unsqueeze_2356: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2355, 3);  unsqueeze_2355 = None
    mul_3166: "f32[144]" = torch.ops.aten.mul.Tensor(sum_177, 0.002551020408163265)
    mul_3167: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_718, squeeze_718)
    mul_3168: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3166, mul_3167);  mul_3166 = mul_3167 = None
    unsqueeze_2357: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3168, 0);  mul_3168 = None
    unsqueeze_2358: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2357, 2);  unsqueeze_2357 = None
    unsqueeze_2359: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2358, 3);  unsqueeze_2358 = None
    mul_3169: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_718, primals_719);  primals_719 = None
    unsqueeze_2360: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3169, 0);  mul_3169 = None
    unsqueeze_2361: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2360, 2);  unsqueeze_2360 = None
    unsqueeze_2362: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2361, 3);  unsqueeze_2361 = None
    sub_666: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_239, unsqueeze_2353);  convolution_239 = unsqueeze_2353 = None
    mul_3170: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_666, unsqueeze_2359);  sub_666 = unsqueeze_2359 = None
    sub_667: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_65, mul_3170);  where_65 = mul_3170 = None
    sub_668: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_667, unsqueeze_2356);  sub_667 = unsqueeze_2356 = None
    mul_3171: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_668, unsqueeze_2362);  sub_668 = unsqueeze_2362 = None
    mul_3172: "f32[144]" = torch.ops.aten.mul.Tensor(sum_177, squeeze_718);  sum_177 = squeeze_718 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_85 = torch.ops.aten.convolution_backward.default(mul_3171, relu_217, primals_718, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3171 = primals_718 = None
    getitem_905: "f32[8, 144, 7, 7]" = convolution_backward_85[0]
    getitem_906: "f32[144, 144, 3, 3]" = convolution_backward_85[1];  convolution_backward_85 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1970: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_64, getitem_905);  where_64 = getitem_905 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_451: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_217);  relu_217 = None
    alias_452: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_451);  alias_451 = None
    le_66: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_452, 0);  alias_452 = None
    scalar_tensor_66: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_66: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_66, scalar_tensor_66, add_1970);  le_66 = scalar_tensor_66 = add_1970 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2363: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_714, 0);  squeeze_714 = None
    unsqueeze_2364: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2363, 2);  unsqueeze_2363 = None
    unsqueeze_2365: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2364, 3);  unsqueeze_2364 = None
    sum_178: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_66, [0, 2, 3])
    sub_669: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_238, unsqueeze_2365)
    mul_3173: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_66, sub_669);  sub_669 = None
    sum_179: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3173, [0, 2, 3]);  mul_3173 = None
    mul_3174: "f32[144]" = torch.ops.aten.mul.Tensor(sum_178, 0.002551020408163265)
    unsqueeze_2366: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3174, 0);  mul_3174 = None
    unsqueeze_2367: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2366, 2);  unsqueeze_2366 = None
    unsqueeze_2368: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2367, 3);  unsqueeze_2367 = None
    mul_3175: "f32[144]" = torch.ops.aten.mul.Tensor(sum_179, 0.002551020408163265)
    mul_3176: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_715, squeeze_715)
    mul_3177: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3175, mul_3176);  mul_3175 = mul_3176 = None
    unsqueeze_2369: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3177, 0);  mul_3177 = None
    unsqueeze_2370: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2369, 2);  unsqueeze_2369 = None
    unsqueeze_2371: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2370, 3);  unsqueeze_2370 = None
    mul_3178: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_715, primals_716);  primals_716 = None
    unsqueeze_2372: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3178, 0);  mul_3178 = None
    unsqueeze_2373: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2372, 2);  unsqueeze_2372 = None
    unsqueeze_2374: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2373, 3);  unsqueeze_2373 = None
    sub_670: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_238, unsqueeze_2365);  convolution_238 = unsqueeze_2365 = None
    mul_3179: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_670, unsqueeze_2371);  sub_670 = unsqueeze_2371 = None
    sub_671: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_66, mul_3179);  mul_3179 = None
    sub_672: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_671, unsqueeze_2368);  sub_671 = unsqueeze_2368 = None
    mul_3180: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_672, unsqueeze_2374);  sub_672 = unsqueeze_2374 = None
    mul_3181: "f32[144]" = torch.ops.aten.mul.Tensor(sum_179, squeeze_715);  sum_179 = squeeze_715 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_86 = torch.ops.aten.convolution_backward.default(mul_3180, relu_216, primals_715, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3180 = primals_715 = None
    getitem_908: "f32[8, 144, 7, 7]" = convolution_backward_86[0]
    getitem_909: "f32[144, 144, 3, 3]" = convolution_backward_86[1];  convolution_backward_86 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_454: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_216);  relu_216 = None
    alias_455: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_454);  alias_454 = None
    le_67: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_455, 0);  alias_455 = None
    scalar_tensor_67: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_67: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_67, scalar_tensor_67, getitem_908);  le_67 = scalar_tensor_67 = getitem_908 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2375: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_711, 0);  squeeze_711 = None
    unsqueeze_2376: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2375, 2);  unsqueeze_2375 = None
    unsqueeze_2377: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2376, 3);  unsqueeze_2376 = None
    sum_180: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_67, [0, 2, 3])
    sub_673: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_237, unsqueeze_2377)
    mul_3182: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_67, sub_673);  sub_673 = None
    sum_181: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3182, [0, 2, 3]);  mul_3182 = None
    mul_3183: "f32[144]" = torch.ops.aten.mul.Tensor(sum_180, 0.002551020408163265)
    unsqueeze_2378: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3183, 0);  mul_3183 = None
    unsqueeze_2379: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2378, 2);  unsqueeze_2378 = None
    unsqueeze_2380: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2379, 3);  unsqueeze_2379 = None
    mul_3184: "f32[144]" = torch.ops.aten.mul.Tensor(sum_181, 0.002551020408163265)
    mul_3185: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_712, squeeze_712)
    mul_3186: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3184, mul_3185);  mul_3184 = mul_3185 = None
    unsqueeze_2381: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3186, 0);  mul_3186 = None
    unsqueeze_2382: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2381, 2);  unsqueeze_2381 = None
    unsqueeze_2383: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2382, 3);  unsqueeze_2382 = None
    mul_3187: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_712, primals_713);  primals_713 = None
    unsqueeze_2384: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3187, 0);  mul_3187 = None
    unsqueeze_2385: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2384, 2);  unsqueeze_2384 = None
    unsqueeze_2386: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2385, 3);  unsqueeze_2385 = None
    sub_674: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_237, unsqueeze_2377);  convolution_237 = unsqueeze_2377 = None
    mul_3188: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_674, unsqueeze_2383);  sub_674 = unsqueeze_2383 = None
    sub_675: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_67, mul_3188);  where_67 = mul_3188 = None
    sub_676: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_675, unsqueeze_2380);  sub_675 = unsqueeze_2380 = None
    mul_3189: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_676, unsqueeze_2386);  sub_676 = unsqueeze_2386 = None
    mul_3190: "f32[144]" = torch.ops.aten.mul.Tensor(sum_181, squeeze_712);  sum_181 = squeeze_712 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_87 = torch.ops.aten.convolution_backward.default(mul_3189, relu_215, primals_712, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3189 = primals_712 = None
    getitem_911: "f32[8, 144, 7, 7]" = convolution_backward_87[0]
    getitem_912: "f32[144, 144, 3, 3]" = convolution_backward_87[1];  convolution_backward_87 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1971: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_66, getitem_911);  where_66 = getitem_911 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_457: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_215);  relu_215 = None
    alias_458: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_457);  alias_457 = None
    le_68: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_458, 0);  alias_458 = None
    scalar_tensor_68: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_68: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_68, scalar_tensor_68, add_1971);  le_68 = scalar_tensor_68 = add_1971 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2387: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_708, 0);  squeeze_708 = None
    unsqueeze_2388: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2387, 2);  unsqueeze_2387 = None
    unsqueeze_2389: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2388, 3);  unsqueeze_2388 = None
    sum_182: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_68, [0, 2, 3])
    sub_677: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_236, unsqueeze_2389)
    mul_3191: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_68, sub_677);  sub_677 = None
    sum_183: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3191, [0, 2, 3]);  mul_3191 = None
    mul_3192: "f32[144]" = torch.ops.aten.mul.Tensor(sum_182, 0.002551020408163265)
    unsqueeze_2390: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3192, 0);  mul_3192 = None
    unsqueeze_2391: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2390, 2);  unsqueeze_2390 = None
    unsqueeze_2392: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2391, 3);  unsqueeze_2391 = None
    mul_3193: "f32[144]" = torch.ops.aten.mul.Tensor(sum_183, 0.002551020408163265)
    mul_3194: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_709, squeeze_709)
    mul_3195: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3193, mul_3194);  mul_3193 = mul_3194 = None
    unsqueeze_2393: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3195, 0);  mul_3195 = None
    unsqueeze_2394: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2393, 2);  unsqueeze_2393 = None
    unsqueeze_2395: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2394, 3);  unsqueeze_2394 = None
    mul_3196: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_709, primals_710);  primals_710 = None
    unsqueeze_2396: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3196, 0);  mul_3196 = None
    unsqueeze_2397: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2396, 2);  unsqueeze_2396 = None
    unsqueeze_2398: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2397, 3);  unsqueeze_2397 = None
    sub_678: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_236, unsqueeze_2389);  convolution_236 = unsqueeze_2389 = None
    mul_3197: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_678, unsqueeze_2395);  sub_678 = unsqueeze_2395 = None
    sub_679: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_68, mul_3197);  mul_3197 = None
    sub_680: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_679, unsqueeze_2392);  sub_679 = unsqueeze_2392 = None
    mul_3198: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_680, unsqueeze_2398);  sub_680 = unsqueeze_2398 = None
    mul_3199: "f32[144]" = torch.ops.aten.mul.Tensor(sum_183, squeeze_709);  sum_183 = squeeze_709 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_88 = torch.ops.aten.convolution_backward.default(mul_3198, relu_214, primals_709, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3198 = primals_709 = None
    getitem_914: "f32[8, 144, 7, 7]" = convolution_backward_88[0]
    getitem_915: "f32[144, 144, 3, 3]" = convolution_backward_88[1];  convolution_backward_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_460: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_214);  relu_214 = None
    alias_461: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_460);  alias_460 = None
    le_69: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_461, 0);  alias_461 = None
    scalar_tensor_69: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_69: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_69, scalar_tensor_69, getitem_914);  le_69 = scalar_tensor_69 = getitem_914 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2399: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_705, 0);  squeeze_705 = None
    unsqueeze_2400: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2399, 2);  unsqueeze_2399 = None
    unsqueeze_2401: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2400, 3);  unsqueeze_2400 = None
    sum_184: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_69, [0, 2, 3])
    sub_681: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_235, unsqueeze_2401)
    mul_3200: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_69, sub_681);  sub_681 = None
    sum_185: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3200, [0, 2, 3]);  mul_3200 = None
    mul_3201: "f32[144]" = torch.ops.aten.mul.Tensor(sum_184, 0.002551020408163265)
    unsqueeze_2402: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3201, 0);  mul_3201 = None
    unsqueeze_2403: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2402, 2);  unsqueeze_2402 = None
    unsqueeze_2404: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2403, 3);  unsqueeze_2403 = None
    mul_3202: "f32[144]" = torch.ops.aten.mul.Tensor(sum_185, 0.002551020408163265)
    mul_3203: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_706, squeeze_706)
    mul_3204: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3202, mul_3203);  mul_3202 = mul_3203 = None
    unsqueeze_2405: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3204, 0);  mul_3204 = None
    unsqueeze_2406: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2405, 2);  unsqueeze_2405 = None
    unsqueeze_2407: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2406, 3);  unsqueeze_2406 = None
    mul_3205: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_706, primals_707);  primals_707 = None
    unsqueeze_2408: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3205, 0);  mul_3205 = None
    unsqueeze_2409: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2408, 2);  unsqueeze_2408 = None
    unsqueeze_2410: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2409, 3);  unsqueeze_2409 = None
    sub_682: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_235, unsqueeze_2401);  convolution_235 = unsqueeze_2401 = None
    mul_3206: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_682, unsqueeze_2407);  sub_682 = unsqueeze_2407 = None
    sub_683: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_69, mul_3206);  where_69 = mul_3206 = None
    sub_684: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_683, unsqueeze_2404);  sub_683 = unsqueeze_2404 = None
    mul_3207: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_684, unsqueeze_2410);  sub_684 = unsqueeze_2410 = None
    mul_3208: "f32[144]" = torch.ops.aten.mul.Tensor(sum_185, squeeze_706);  sum_185 = squeeze_706 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_89 = torch.ops.aten.convolution_backward.default(mul_3207, relu_213, primals_706, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3207 = primals_706 = None
    getitem_917: "f32[8, 144, 7, 7]" = convolution_backward_89[0]
    getitem_918: "f32[144, 144, 3, 3]" = convolution_backward_89[1];  convolution_backward_89 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1972: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_68, getitem_917);  where_68 = getitem_917 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_463: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_213);  relu_213 = None
    alias_464: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_463);  alias_463 = None
    le_70: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_464, 0);  alias_464 = None
    scalar_tensor_70: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_70: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_70, scalar_tensor_70, add_1972);  le_70 = scalar_tensor_70 = add_1972 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2411: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_702, 0);  squeeze_702 = None
    unsqueeze_2412: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2411, 2);  unsqueeze_2411 = None
    unsqueeze_2413: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2412, 3);  unsqueeze_2412 = None
    sum_186: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_70, [0, 2, 3])
    sub_685: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_234, unsqueeze_2413)
    mul_3209: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_70, sub_685);  sub_685 = None
    sum_187: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3209, [0, 2, 3]);  mul_3209 = None
    mul_3210: "f32[144]" = torch.ops.aten.mul.Tensor(sum_186, 0.002551020408163265)
    unsqueeze_2414: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3210, 0);  mul_3210 = None
    unsqueeze_2415: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2414, 2);  unsqueeze_2414 = None
    unsqueeze_2416: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2415, 3);  unsqueeze_2415 = None
    mul_3211: "f32[144]" = torch.ops.aten.mul.Tensor(sum_187, 0.002551020408163265)
    mul_3212: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_703, squeeze_703)
    mul_3213: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3211, mul_3212);  mul_3211 = mul_3212 = None
    unsqueeze_2417: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3213, 0);  mul_3213 = None
    unsqueeze_2418: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2417, 2);  unsqueeze_2417 = None
    unsqueeze_2419: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2418, 3);  unsqueeze_2418 = None
    mul_3214: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_703, primals_704);  primals_704 = None
    unsqueeze_2420: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3214, 0);  mul_3214 = None
    unsqueeze_2421: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2420, 2);  unsqueeze_2420 = None
    unsqueeze_2422: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2421, 3);  unsqueeze_2421 = None
    sub_686: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_234, unsqueeze_2413);  convolution_234 = unsqueeze_2413 = None
    mul_3215: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_686, unsqueeze_2419);  sub_686 = unsqueeze_2419 = None
    sub_687: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_70, mul_3215);  mul_3215 = None
    sub_688: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_687, unsqueeze_2416);  sub_687 = unsqueeze_2416 = None
    mul_3216: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_688, unsqueeze_2422);  sub_688 = unsqueeze_2422 = None
    mul_3217: "f32[144]" = torch.ops.aten.mul.Tensor(sum_187, squeeze_703);  sum_187 = squeeze_703 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_90 = torch.ops.aten.convolution_backward.default(mul_3216, relu_212, primals_703, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3216 = primals_703 = None
    getitem_920: "f32[8, 144, 7, 7]" = convolution_backward_90[0]
    getitem_921: "f32[144, 144, 3, 3]" = convolution_backward_90[1];  convolution_backward_90 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_466: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_212);  relu_212 = None
    alias_467: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_466);  alias_466 = None
    le_71: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_467, 0);  alias_467 = None
    scalar_tensor_71: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_71: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_71, scalar_tensor_71, getitem_920);  le_71 = scalar_tensor_71 = getitem_920 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2423: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_699, 0);  squeeze_699 = None
    unsqueeze_2424: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2423, 2);  unsqueeze_2423 = None
    unsqueeze_2425: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2424, 3);  unsqueeze_2424 = None
    sum_188: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_71, [0, 2, 3])
    sub_689: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_233, unsqueeze_2425)
    mul_3218: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_71, sub_689);  sub_689 = None
    sum_189: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3218, [0, 2, 3]);  mul_3218 = None
    mul_3219: "f32[144]" = torch.ops.aten.mul.Tensor(sum_188, 0.002551020408163265)
    unsqueeze_2426: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3219, 0);  mul_3219 = None
    unsqueeze_2427: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2426, 2);  unsqueeze_2426 = None
    unsqueeze_2428: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2427, 3);  unsqueeze_2427 = None
    mul_3220: "f32[144]" = torch.ops.aten.mul.Tensor(sum_189, 0.002551020408163265)
    mul_3221: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_700, squeeze_700)
    mul_3222: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3220, mul_3221);  mul_3220 = mul_3221 = None
    unsqueeze_2429: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3222, 0);  mul_3222 = None
    unsqueeze_2430: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2429, 2);  unsqueeze_2429 = None
    unsqueeze_2431: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2430, 3);  unsqueeze_2430 = None
    mul_3223: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_700, primals_701);  primals_701 = None
    unsqueeze_2432: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3223, 0);  mul_3223 = None
    unsqueeze_2433: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2432, 2);  unsqueeze_2432 = None
    unsqueeze_2434: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2433, 3);  unsqueeze_2433 = None
    sub_690: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_233, unsqueeze_2425);  convolution_233 = unsqueeze_2425 = None
    mul_3224: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_690, unsqueeze_2431);  sub_690 = unsqueeze_2431 = None
    sub_691: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_71, mul_3224);  where_71 = mul_3224 = None
    sub_692: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_691, unsqueeze_2428);  sub_691 = unsqueeze_2428 = None
    mul_3225: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_692, unsqueeze_2434);  sub_692 = unsqueeze_2434 = None
    mul_3226: "f32[144]" = torch.ops.aten.mul.Tensor(sum_189, squeeze_700);  sum_189 = squeeze_700 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_91 = torch.ops.aten.convolution_backward.default(mul_3225, relu_187, primals_700, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3225 = relu_187 = primals_700 = None
    getitem_923: "f32[8, 144, 7, 7]" = convolution_backward_91[0]
    getitem_924: "f32[144, 144, 3, 3]" = convolution_backward_91[1];  convolution_backward_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1973: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_70, getitem_923);  where_70 = getitem_923 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_469: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_211);  relu_211 = None
    alias_470: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_469);  alias_469 = None
    le_72: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_470, 0);  alias_470 = None
    scalar_tensor_72: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_72: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_72, scalar_tensor_72, add_1967);  le_72 = scalar_tensor_72 = add_1967 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2435: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_696, 0);  squeeze_696 = None
    unsqueeze_2436: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2435, 2);  unsqueeze_2435 = None
    unsqueeze_2437: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2436, 3);  unsqueeze_2436 = None
    sum_190: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_72, [0, 2, 3])
    sub_693: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_232, unsqueeze_2437)
    mul_3227: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_72, sub_693);  sub_693 = None
    sum_191: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3227, [0, 2, 3]);  mul_3227 = None
    mul_3228: "f32[72]" = torch.ops.aten.mul.Tensor(sum_190, 0.0006377551020408163)
    unsqueeze_2438: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3228, 0);  mul_3228 = None
    unsqueeze_2439: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2438, 2);  unsqueeze_2438 = None
    unsqueeze_2440: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2439, 3);  unsqueeze_2439 = None
    mul_3229: "f32[72]" = torch.ops.aten.mul.Tensor(sum_191, 0.0006377551020408163)
    mul_3230: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_697, squeeze_697)
    mul_3231: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3229, mul_3230);  mul_3229 = mul_3230 = None
    unsqueeze_2441: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3231, 0);  mul_3231 = None
    unsqueeze_2442: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2441, 2);  unsqueeze_2441 = None
    unsqueeze_2443: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2442, 3);  unsqueeze_2442 = None
    mul_3232: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_697, primals_698);  primals_698 = None
    unsqueeze_2444: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3232, 0);  mul_3232 = None
    unsqueeze_2445: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2444, 2);  unsqueeze_2444 = None
    unsqueeze_2446: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2445, 3);  unsqueeze_2445 = None
    sub_694: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_232, unsqueeze_2437);  convolution_232 = unsqueeze_2437 = None
    mul_3233: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_694, unsqueeze_2443);  sub_694 = unsqueeze_2443 = None
    sub_695: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_72, mul_3233);  mul_3233 = None
    sub_696: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_695, unsqueeze_2440);  sub_695 = unsqueeze_2440 = None
    mul_3234: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_696, unsqueeze_2446);  sub_696 = unsqueeze_2446 = None
    mul_3235: "f32[72]" = torch.ops.aten.mul.Tensor(sum_191, squeeze_697);  sum_191 = squeeze_697 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_92 = torch.ops.aten.convolution_backward.default(mul_3234, relu_210, primals_697, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3234 = primals_697 = None
    getitem_926: "f32[8, 72, 14, 14]" = convolution_backward_92[0]
    getitem_927: "f32[72, 72, 3, 3]" = convolution_backward_92[1];  convolution_backward_92 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_472: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_210);  relu_210 = None
    alias_473: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_472);  alias_472 = None
    le_73: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_473, 0);  alias_473 = None
    scalar_tensor_73: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_73: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_73, scalar_tensor_73, getitem_926);  le_73 = scalar_tensor_73 = getitem_926 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2447: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_693, 0);  squeeze_693 = None
    unsqueeze_2448: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2447, 2);  unsqueeze_2447 = None
    unsqueeze_2449: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2448, 3);  unsqueeze_2448 = None
    sum_192: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_73, [0, 2, 3])
    sub_697: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_231, unsqueeze_2449)
    mul_3236: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_73, sub_697);  sub_697 = None
    sum_193: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3236, [0, 2, 3]);  mul_3236 = None
    mul_3237: "f32[72]" = torch.ops.aten.mul.Tensor(sum_192, 0.0006377551020408163)
    unsqueeze_2450: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3237, 0);  mul_3237 = None
    unsqueeze_2451: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2450, 2);  unsqueeze_2450 = None
    unsqueeze_2452: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2451, 3);  unsqueeze_2451 = None
    mul_3238: "f32[72]" = torch.ops.aten.mul.Tensor(sum_193, 0.0006377551020408163)
    mul_3239: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_694, squeeze_694)
    mul_3240: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3238, mul_3239);  mul_3238 = mul_3239 = None
    unsqueeze_2453: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3240, 0);  mul_3240 = None
    unsqueeze_2454: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2453, 2);  unsqueeze_2453 = None
    unsqueeze_2455: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2454, 3);  unsqueeze_2454 = None
    mul_3241: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_694, primals_695);  primals_695 = None
    unsqueeze_2456: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3241, 0);  mul_3241 = None
    unsqueeze_2457: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2456, 2);  unsqueeze_2456 = None
    unsqueeze_2458: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2457, 3);  unsqueeze_2457 = None
    sub_698: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_231, unsqueeze_2449);  convolution_231 = unsqueeze_2449 = None
    mul_3242: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_698, unsqueeze_2455);  sub_698 = unsqueeze_2455 = None
    sub_699: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_73, mul_3242);  where_73 = mul_3242 = None
    sub_700: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_699, unsqueeze_2452);  sub_699 = unsqueeze_2452 = None
    mul_3243: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_700, unsqueeze_2458);  sub_700 = unsqueeze_2458 = None
    mul_3244: "f32[72]" = torch.ops.aten.mul.Tensor(sum_193, squeeze_694);  sum_193 = squeeze_694 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_93 = torch.ops.aten.convolution_backward.default(mul_3243, relu_209, primals_694, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3243 = primals_694 = None
    getitem_929: "f32[8, 72, 14, 14]" = convolution_backward_93[0]
    getitem_930: "f32[72, 72, 3, 3]" = convolution_backward_93[1];  convolution_backward_93 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1974: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_72, getitem_929);  where_72 = getitem_929 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_475: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_209);  relu_209 = None
    alias_476: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_475);  alias_475 = None
    le_74: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_476, 0);  alias_476 = None
    scalar_tensor_74: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_74: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_74, scalar_tensor_74, add_1974);  le_74 = scalar_tensor_74 = add_1974 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2459: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_690, 0);  squeeze_690 = None
    unsqueeze_2460: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2459, 2);  unsqueeze_2459 = None
    unsqueeze_2461: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2460, 3);  unsqueeze_2460 = None
    sum_194: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_74, [0, 2, 3])
    sub_701: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_230, unsqueeze_2461)
    mul_3245: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_74, sub_701);  sub_701 = None
    sum_195: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3245, [0, 2, 3]);  mul_3245 = None
    mul_3246: "f32[72]" = torch.ops.aten.mul.Tensor(sum_194, 0.0006377551020408163)
    unsqueeze_2462: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3246, 0);  mul_3246 = None
    unsqueeze_2463: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2462, 2);  unsqueeze_2462 = None
    unsqueeze_2464: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2463, 3);  unsqueeze_2463 = None
    mul_3247: "f32[72]" = torch.ops.aten.mul.Tensor(sum_195, 0.0006377551020408163)
    mul_3248: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_691, squeeze_691)
    mul_3249: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3247, mul_3248);  mul_3247 = mul_3248 = None
    unsqueeze_2465: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3249, 0);  mul_3249 = None
    unsqueeze_2466: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2465, 2);  unsqueeze_2465 = None
    unsqueeze_2467: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2466, 3);  unsqueeze_2466 = None
    mul_3250: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_691, primals_692);  primals_692 = None
    unsqueeze_2468: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3250, 0);  mul_3250 = None
    unsqueeze_2469: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2468, 2);  unsqueeze_2468 = None
    unsqueeze_2470: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2469, 3);  unsqueeze_2469 = None
    sub_702: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_230, unsqueeze_2461);  convolution_230 = unsqueeze_2461 = None
    mul_3251: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_702, unsqueeze_2467);  sub_702 = unsqueeze_2467 = None
    sub_703: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_74, mul_3251);  mul_3251 = None
    sub_704: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_703, unsqueeze_2464);  sub_703 = unsqueeze_2464 = None
    mul_3252: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_704, unsqueeze_2470);  sub_704 = unsqueeze_2470 = None
    mul_3253: "f32[72]" = torch.ops.aten.mul.Tensor(sum_195, squeeze_691);  sum_195 = squeeze_691 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_94 = torch.ops.aten.convolution_backward.default(mul_3252, relu_208, primals_691, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3252 = primals_691 = None
    getitem_932: "f32[8, 72, 14, 14]" = convolution_backward_94[0]
    getitem_933: "f32[72, 72, 3, 3]" = convolution_backward_94[1];  convolution_backward_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_478: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_208);  relu_208 = None
    alias_479: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_478);  alias_478 = None
    le_75: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_479, 0);  alias_479 = None
    scalar_tensor_75: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_75: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_75, scalar_tensor_75, getitem_932);  le_75 = scalar_tensor_75 = getitem_932 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2471: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_687, 0);  squeeze_687 = None
    unsqueeze_2472: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2471, 2);  unsqueeze_2471 = None
    unsqueeze_2473: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2472, 3);  unsqueeze_2472 = None
    sum_196: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_75, [0, 2, 3])
    sub_705: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_229, unsqueeze_2473)
    mul_3254: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_75, sub_705);  sub_705 = None
    sum_197: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3254, [0, 2, 3]);  mul_3254 = None
    mul_3255: "f32[72]" = torch.ops.aten.mul.Tensor(sum_196, 0.0006377551020408163)
    unsqueeze_2474: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3255, 0);  mul_3255 = None
    unsqueeze_2475: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2474, 2);  unsqueeze_2474 = None
    unsqueeze_2476: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2475, 3);  unsqueeze_2475 = None
    mul_3256: "f32[72]" = torch.ops.aten.mul.Tensor(sum_197, 0.0006377551020408163)
    mul_3257: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_688, squeeze_688)
    mul_3258: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3256, mul_3257);  mul_3256 = mul_3257 = None
    unsqueeze_2477: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3258, 0);  mul_3258 = None
    unsqueeze_2478: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2477, 2);  unsqueeze_2477 = None
    unsqueeze_2479: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2478, 3);  unsqueeze_2478 = None
    mul_3259: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_688, primals_689);  primals_689 = None
    unsqueeze_2480: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3259, 0);  mul_3259 = None
    unsqueeze_2481: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2480, 2);  unsqueeze_2480 = None
    unsqueeze_2482: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2481, 3);  unsqueeze_2481 = None
    sub_706: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_229, unsqueeze_2473);  convolution_229 = unsqueeze_2473 = None
    mul_3260: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_706, unsqueeze_2479);  sub_706 = unsqueeze_2479 = None
    sub_707: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_75, mul_3260);  where_75 = mul_3260 = None
    sub_708: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_707, unsqueeze_2476);  sub_707 = unsqueeze_2476 = None
    mul_3261: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_708, unsqueeze_2482);  sub_708 = unsqueeze_2482 = None
    mul_3262: "f32[72]" = torch.ops.aten.mul.Tensor(sum_197, squeeze_688);  sum_197 = squeeze_688 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_95 = torch.ops.aten.convolution_backward.default(mul_3261, relu_207, primals_688, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3261 = primals_688 = None
    getitem_935: "f32[8, 72, 14, 14]" = convolution_backward_95[0]
    getitem_936: "f32[72, 72, 3, 3]" = convolution_backward_95[1];  convolution_backward_95 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1975: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_74, getitem_935);  where_74 = getitem_935 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_481: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_207);  relu_207 = None
    alias_482: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_481);  alias_481 = None
    le_76: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_482, 0);  alias_482 = None
    scalar_tensor_76: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_76: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_76, scalar_tensor_76, add_1975);  le_76 = scalar_tensor_76 = add_1975 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2483: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_684, 0);  squeeze_684 = None
    unsqueeze_2484: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2483, 2);  unsqueeze_2483 = None
    unsqueeze_2485: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2484, 3);  unsqueeze_2484 = None
    sum_198: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_76, [0, 2, 3])
    sub_709: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_228, unsqueeze_2485)
    mul_3263: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_76, sub_709);  sub_709 = None
    sum_199: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3263, [0, 2, 3]);  mul_3263 = None
    mul_3264: "f32[72]" = torch.ops.aten.mul.Tensor(sum_198, 0.0006377551020408163)
    unsqueeze_2486: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3264, 0);  mul_3264 = None
    unsqueeze_2487: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2486, 2);  unsqueeze_2486 = None
    unsqueeze_2488: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2487, 3);  unsqueeze_2487 = None
    mul_3265: "f32[72]" = torch.ops.aten.mul.Tensor(sum_199, 0.0006377551020408163)
    mul_3266: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_685, squeeze_685)
    mul_3267: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3265, mul_3266);  mul_3265 = mul_3266 = None
    unsqueeze_2489: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3267, 0);  mul_3267 = None
    unsqueeze_2490: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2489, 2);  unsqueeze_2489 = None
    unsqueeze_2491: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2490, 3);  unsqueeze_2490 = None
    mul_3268: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_685, primals_686);  primals_686 = None
    unsqueeze_2492: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3268, 0);  mul_3268 = None
    unsqueeze_2493: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2492, 2);  unsqueeze_2492 = None
    unsqueeze_2494: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2493, 3);  unsqueeze_2493 = None
    sub_710: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_228, unsqueeze_2485);  convolution_228 = unsqueeze_2485 = None
    mul_3269: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_710, unsqueeze_2491);  sub_710 = unsqueeze_2491 = None
    sub_711: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_76, mul_3269);  mul_3269 = None
    sub_712: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_711, unsqueeze_2488);  sub_711 = unsqueeze_2488 = None
    mul_3270: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_712, unsqueeze_2494);  sub_712 = unsqueeze_2494 = None
    mul_3271: "f32[72]" = torch.ops.aten.mul.Tensor(sum_199, squeeze_685);  sum_199 = squeeze_685 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_96 = torch.ops.aten.convolution_backward.default(mul_3270, relu_206, primals_685, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3270 = primals_685 = None
    getitem_938: "f32[8, 72, 14, 14]" = convolution_backward_96[0]
    getitem_939: "f32[72, 72, 3, 3]" = convolution_backward_96[1];  convolution_backward_96 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_484: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_206);  relu_206 = None
    alias_485: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_484);  alias_484 = None
    le_77: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_485, 0);  alias_485 = None
    scalar_tensor_77: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_77: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_77, scalar_tensor_77, getitem_938);  le_77 = scalar_tensor_77 = getitem_938 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2495: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_681, 0);  squeeze_681 = None
    unsqueeze_2496: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2495, 2);  unsqueeze_2495 = None
    unsqueeze_2497: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2496, 3);  unsqueeze_2496 = None
    sum_200: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_77, [0, 2, 3])
    sub_713: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_227, unsqueeze_2497)
    mul_3272: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_77, sub_713);  sub_713 = None
    sum_201: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3272, [0, 2, 3]);  mul_3272 = None
    mul_3273: "f32[72]" = torch.ops.aten.mul.Tensor(sum_200, 0.0006377551020408163)
    unsqueeze_2498: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3273, 0);  mul_3273 = None
    unsqueeze_2499: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2498, 2);  unsqueeze_2498 = None
    unsqueeze_2500: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2499, 3);  unsqueeze_2499 = None
    mul_3274: "f32[72]" = torch.ops.aten.mul.Tensor(sum_201, 0.0006377551020408163)
    mul_3275: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_682, squeeze_682)
    mul_3276: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3274, mul_3275);  mul_3274 = mul_3275 = None
    unsqueeze_2501: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3276, 0);  mul_3276 = None
    unsqueeze_2502: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2501, 2);  unsqueeze_2501 = None
    unsqueeze_2503: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2502, 3);  unsqueeze_2502 = None
    mul_3277: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_682, primals_683);  primals_683 = None
    unsqueeze_2504: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3277, 0);  mul_3277 = None
    unsqueeze_2505: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2504, 2);  unsqueeze_2504 = None
    unsqueeze_2506: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2505, 3);  unsqueeze_2505 = None
    sub_714: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_227, unsqueeze_2497);  convolution_227 = unsqueeze_2497 = None
    mul_3278: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_714, unsqueeze_2503);  sub_714 = unsqueeze_2503 = None
    sub_715: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_77, mul_3278);  where_77 = mul_3278 = None
    sub_716: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_715, unsqueeze_2500);  sub_715 = unsqueeze_2500 = None
    mul_3279: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_716, unsqueeze_2506);  sub_716 = unsqueeze_2506 = None
    mul_3280: "f32[72]" = torch.ops.aten.mul.Tensor(sum_201, squeeze_682);  sum_201 = squeeze_682 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_97 = torch.ops.aten.convolution_backward.default(mul_3279, relu_205, primals_682, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3279 = primals_682 = None
    getitem_941: "f32[8, 72, 14, 14]" = convolution_backward_97[0]
    getitem_942: "f32[72, 72, 3, 3]" = convolution_backward_97[1];  convolution_backward_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1976: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_76, getitem_941);  where_76 = getitem_941 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_487: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_205);  relu_205 = None
    alias_488: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_487);  alias_487 = None
    le_78: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_488, 0);  alias_488 = None
    scalar_tensor_78: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_78: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_78, scalar_tensor_78, add_1976);  le_78 = scalar_tensor_78 = add_1976 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2507: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_678, 0);  squeeze_678 = None
    unsqueeze_2508: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2507, 2);  unsqueeze_2507 = None
    unsqueeze_2509: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2508, 3);  unsqueeze_2508 = None
    sum_202: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_78, [0, 2, 3])
    sub_717: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_226, unsqueeze_2509)
    mul_3281: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_78, sub_717);  sub_717 = None
    sum_203: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3281, [0, 2, 3]);  mul_3281 = None
    mul_3282: "f32[72]" = torch.ops.aten.mul.Tensor(sum_202, 0.0006377551020408163)
    unsqueeze_2510: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3282, 0);  mul_3282 = None
    unsqueeze_2511: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2510, 2);  unsqueeze_2510 = None
    unsqueeze_2512: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2511, 3);  unsqueeze_2511 = None
    mul_3283: "f32[72]" = torch.ops.aten.mul.Tensor(sum_203, 0.0006377551020408163)
    mul_3284: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_679, squeeze_679)
    mul_3285: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3283, mul_3284);  mul_3283 = mul_3284 = None
    unsqueeze_2513: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3285, 0);  mul_3285 = None
    unsqueeze_2514: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2513, 2);  unsqueeze_2513 = None
    unsqueeze_2515: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2514, 3);  unsqueeze_2514 = None
    mul_3286: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_679, primals_680);  primals_680 = None
    unsqueeze_2516: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3286, 0);  mul_3286 = None
    unsqueeze_2517: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2516, 2);  unsqueeze_2516 = None
    unsqueeze_2518: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2517, 3);  unsqueeze_2517 = None
    sub_718: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_226, unsqueeze_2509);  convolution_226 = unsqueeze_2509 = None
    mul_3287: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_718, unsqueeze_2515);  sub_718 = unsqueeze_2515 = None
    sub_719: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_78, mul_3287);  mul_3287 = None
    sub_720: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_719, unsqueeze_2512);  sub_719 = unsqueeze_2512 = None
    mul_3288: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_720, unsqueeze_2518);  sub_720 = unsqueeze_2518 = None
    mul_3289: "f32[72]" = torch.ops.aten.mul.Tensor(sum_203, squeeze_679);  sum_203 = squeeze_679 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_98 = torch.ops.aten.convolution_backward.default(mul_3288, relu_204, primals_679, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3288 = primals_679 = None
    getitem_944: "f32[8, 72, 14, 14]" = convolution_backward_98[0]
    getitem_945: "f32[72, 72, 3, 3]" = convolution_backward_98[1];  convolution_backward_98 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_490: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_204);  relu_204 = None
    alias_491: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_490);  alias_490 = None
    le_79: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_491, 0);  alias_491 = None
    scalar_tensor_79: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_79: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_79, scalar_tensor_79, getitem_944);  le_79 = scalar_tensor_79 = getitem_944 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2519: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_675, 0);  squeeze_675 = None
    unsqueeze_2520: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2519, 2);  unsqueeze_2519 = None
    unsqueeze_2521: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2520, 3);  unsqueeze_2520 = None
    sum_204: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_79, [0, 2, 3])
    sub_721: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_225, unsqueeze_2521)
    mul_3290: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_79, sub_721);  sub_721 = None
    sum_205: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3290, [0, 2, 3]);  mul_3290 = None
    mul_3291: "f32[72]" = torch.ops.aten.mul.Tensor(sum_204, 0.0006377551020408163)
    unsqueeze_2522: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3291, 0);  mul_3291 = None
    unsqueeze_2523: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2522, 2);  unsqueeze_2522 = None
    unsqueeze_2524: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2523, 3);  unsqueeze_2523 = None
    mul_3292: "f32[72]" = torch.ops.aten.mul.Tensor(sum_205, 0.0006377551020408163)
    mul_3293: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_676, squeeze_676)
    mul_3294: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3292, mul_3293);  mul_3292 = mul_3293 = None
    unsqueeze_2525: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3294, 0);  mul_3294 = None
    unsqueeze_2526: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2525, 2);  unsqueeze_2525 = None
    unsqueeze_2527: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2526, 3);  unsqueeze_2526 = None
    mul_3295: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_676, primals_677);  primals_677 = None
    unsqueeze_2528: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3295, 0);  mul_3295 = None
    unsqueeze_2529: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2528, 2);  unsqueeze_2528 = None
    unsqueeze_2530: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2529, 3);  unsqueeze_2529 = None
    sub_722: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_225, unsqueeze_2521);  convolution_225 = unsqueeze_2521 = None
    mul_3296: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_722, unsqueeze_2527);  sub_722 = unsqueeze_2527 = None
    sub_723: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_79, mul_3296);  where_79 = mul_3296 = None
    sub_724: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_723, unsqueeze_2524);  sub_723 = unsqueeze_2524 = None
    mul_3297: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_724, unsqueeze_2530);  sub_724 = unsqueeze_2530 = None
    mul_3298: "f32[72]" = torch.ops.aten.mul.Tensor(sum_205, squeeze_676);  sum_205 = squeeze_676 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_99 = torch.ops.aten.convolution_backward.default(mul_3297, relu_183, primals_676, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3297 = relu_183 = primals_676 = None
    getitem_947: "f32[8, 72, 14, 14]" = convolution_backward_99[0]
    getitem_948: "f32[72, 72, 3, 3]" = convolution_backward_99[1];  convolution_backward_99 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1977: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_78, getitem_947);  where_78 = getitem_947 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_493: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_203);  relu_203 = None
    alias_494: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_493);  alias_493 = None
    le_80: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_494, 0);  alias_494 = None
    scalar_tensor_80: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_80: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_80, scalar_tensor_80, add_1969);  le_80 = scalar_tensor_80 = add_1969 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2531: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_672, 0);  squeeze_672 = None
    unsqueeze_2532: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2531, 2);  unsqueeze_2531 = None
    unsqueeze_2533: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2532, 3);  unsqueeze_2532 = None
    sum_206: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_80, [0, 2, 3])
    sub_725: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_224, unsqueeze_2533)
    mul_3299: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_80, sub_725);  sub_725 = None
    sum_207: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3299, [0, 2, 3]);  mul_3299 = None
    mul_3300: "f32[36]" = torch.ops.aten.mul.Tensor(sum_206, 0.00015943877551020407)
    unsqueeze_2534: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3300, 0);  mul_3300 = None
    unsqueeze_2535: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2534, 2);  unsqueeze_2534 = None
    unsqueeze_2536: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2535, 3);  unsqueeze_2535 = None
    mul_3301: "f32[36]" = torch.ops.aten.mul.Tensor(sum_207, 0.00015943877551020407)
    mul_3302: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_673, squeeze_673)
    mul_3303: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3301, mul_3302);  mul_3301 = mul_3302 = None
    unsqueeze_2537: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3303, 0);  mul_3303 = None
    unsqueeze_2538: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2537, 2);  unsqueeze_2537 = None
    unsqueeze_2539: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2538, 3);  unsqueeze_2538 = None
    mul_3304: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_673, primals_674);  primals_674 = None
    unsqueeze_2540: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3304, 0);  mul_3304 = None
    unsqueeze_2541: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2540, 2);  unsqueeze_2540 = None
    unsqueeze_2542: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2541, 3);  unsqueeze_2541 = None
    sub_726: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_224, unsqueeze_2533);  convolution_224 = unsqueeze_2533 = None
    mul_3305: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_726, unsqueeze_2539);  sub_726 = unsqueeze_2539 = None
    sub_727: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_80, mul_3305);  mul_3305 = None
    sub_728: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_727, unsqueeze_2536);  sub_727 = unsqueeze_2536 = None
    mul_3306: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_728, unsqueeze_2542);  sub_728 = unsqueeze_2542 = None
    mul_3307: "f32[36]" = torch.ops.aten.mul.Tensor(sum_207, squeeze_673);  sum_207 = squeeze_673 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_100 = torch.ops.aten.convolution_backward.default(mul_3306, relu_202, primals_673, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3306 = primals_673 = None
    getitem_950: "f32[8, 36, 28, 28]" = convolution_backward_100[0]
    getitem_951: "f32[36, 36, 3, 3]" = convolution_backward_100[1];  convolution_backward_100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_496: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_202);  relu_202 = None
    alias_497: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_496);  alias_496 = None
    le_81: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_497, 0);  alias_497 = None
    scalar_tensor_81: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_81: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_81, scalar_tensor_81, getitem_950);  le_81 = scalar_tensor_81 = getitem_950 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2543: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_669, 0);  squeeze_669 = None
    unsqueeze_2544: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2543, 2);  unsqueeze_2543 = None
    unsqueeze_2545: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2544, 3);  unsqueeze_2544 = None
    sum_208: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_81, [0, 2, 3])
    sub_729: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_223, unsqueeze_2545)
    mul_3308: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_81, sub_729);  sub_729 = None
    sum_209: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3308, [0, 2, 3]);  mul_3308 = None
    mul_3309: "f32[36]" = torch.ops.aten.mul.Tensor(sum_208, 0.00015943877551020407)
    unsqueeze_2546: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3309, 0);  mul_3309 = None
    unsqueeze_2547: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2546, 2);  unsqueeze_2546 = None
    unsqueeze_2548: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2547, 3);  unsqueeze_2547 = None
    mul_3310: "f32[36]" = torch.ops.aten.mul.Tensor(sum_209, 0.00015943877551020407)
    mul_3311: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_670, squeeze_670)
    mul_3312: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3310, mul_3311);  mul_3310 = mul_3311 = None
    unsqueeze_2549: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3312, 0);  mul_3312 = None
    unsqueeze_2550: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2549, 2);  unsqueeze_2549 = None
    unsqueeze_2551: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2550, 3);  unsqueeze_2550 = None
    mul_3313: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_670, primals_671);  primals_671 = None
    unsqueeze_2552: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3313, 0);  mul_3313 = None
    unsqueeze_2553: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2552, 2);  unsqueeze_2552 = None
    unsqueeze_2554: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2553, 3);  unsqueeze_2553 = None
    sub_730: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_223, unsqueeze_2545);  convolution_223 = unsqueeze_2545 = None
    mul_3314: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_730, unsqueeze_2551);  sub_730 = unsqueeze_2551 = None
    sub_731: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_81, mul_3314);  where_81 = mul_3314 = None
    sub_732: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_731, unsqueeze_2548);  sub_731 = unsqueeze_2548 = None
    mul_3315: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_732, unsqueeze_2554);  sub_732 = unsqueeze_2554 = None
    mul_3316: "f32[36]" = torch.ops.aten.mul.Tensor(sum_209, squeeze_670);  sum_209 = squeeze_670 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_101 = torch.ops.aten.convolution_backward.default(mul_3315, relu_201, primals_670, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3315 = primals_670 = None
    getitem_953: "f32[8, 36, 28, 28]" = convolution_backward_101[0]
    getitem_954: "f32[36, 36, 3, 3]" = convolution_backward_101[1];  convolution_backward_101 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1978: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_80, getitem_953);  where_80 = getitem_953 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_499: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_201);  relu_201 = None
    alias_500: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_499);  alias_499 = None
    le_82: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_500, 0);  alias_500 = None
    scalar_tensor_82: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_82: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_82, scalar_tensor_82, add_1978);  le_82 = scalar_tensor_82 = add_1978 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2555: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_666, 0);  squeeze_666 = None
    unsqueeze_2556: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2555, 2);  unsqueeze_2555 = None
    unsqueeze_2557: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2556, 3);  unsqueeze_2556 = None
    sum_210: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_82, [0, 2, 3])
    sub_733: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_222, unsqueeze_2557)
    mul_3317: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_82, sub_733);  sub_733 = None
    sum_211: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3317, [0, 2, 3]);  mul_3317 = None
    mul_3318: "f32[36]" = torch.ops.aten.mul.Tensor(sum_210, 0.00015943877551020407)
    unsqueeze_2558: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3318, 0);  mul_3318 = None
    unsqueeze_2559: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2558, 2);  unsqueeze_2558 = None
    unsqueeze_2560: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2559, 3);  unsqueeze_2559 = None
    mul_3319: "f32[36]" = torch.ops.aten.mul.Tensor(sum_211, 0.00015943877551020407)
    mul_3320: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_667, squeeze_667)
    mul_3321: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3319, mul_3320);  mul_3319 = mul_3320 = None
    unsqueeze_2561: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3321, 0);  mul_3321 = None
    unsqueeze_2562: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2561, 2);  unsqueeze_2561 = None
    unsqueeze_2563: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2562, 3);  unsqueeze_2562 = None
    mul_3322: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_667, primals_668);  primals_668 = None
    unsqueeze_2564: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3322, 0);  mul_3322 = None
    unsqueeze_2565: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2564, 2);  unsqueeze_2564 = None
    unsqueeze_2566: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2565, 3);  unsqueeze_2565 = None
    sub_734: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_222, unsqueeze_2557);  convolution_222 = unsqueeze_2557 = None
    mul_3323: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_734, unsqueeze_2563);  sub_734 = unsqueeze_2563 = None
    sub_735: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_82, mul_3323);  mul_3323 = None
    sub_736: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_735, unsqueeze_2560);  sub_735 = unsqueeze_2560 = None
    mul_3324: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_736, unsqueeze_2566);  sub_736 = unsqueeze_2566 = None
    mul_3325: "f32[36]" = torch.ops.aten.mul.Tensor(sum_211, squeeze_667);  sum_211 = squeeze_667 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_102 = torch.ops.aten.convolution_backward.default(mul_3324, relu_200, primals_667, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3324 = primals_667 = None
    getitem_956: "f32[8, 36, 28, 28]" = convolution_backward_102[0]
    getitem_957: "f32[36, 36, 3, 3]" = convolution_backward_102[1];  convolution_backward_102 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_502: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_200);  relu_200 = None
    alias_503: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_502);  alias_502 = None
    le_83: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_503, 0);  alias_503 = None
    scalar_tensor_83: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_83: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_83, scalar_tensor_83, getitem_956);  le_83 = scalar_tensor_83 = getitem_956 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2567: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_663, 0);  squeeze_663 = None
    unsqueeze_2568: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2567, 2);  unsqueeze_2567 = None
    unsqueeze_2569: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2568, 3);  unsqueeze_2568 = None
    sum_212: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_83, [0, 2, 3])
    sub_737: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_221, unsqueeze_2569)
    mul_3326: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_83, sub_737);  sub_737 = None
    sum_213: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3326, [0, 2, 3]);  mul_3326 = None
    mul_3327: "f32[36]" = torch.ops.aten.mul.Tensor(sum_212, 0.00015943877551020407)
    unsqueeze_2570: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3327, 0);  mul_3327 = None
    unsqueeze_2571: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2570, 2);  unsqueeze_2570 = None
    unsqueeze_2572: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2571, 3);  unsqueeze_2571 = None
    mul_3328: "f32[36]" = torch.ops.aten.mul.Tensor(sum_213, 0.00015943877551020407)
    mul_3329: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_664, squeeze_664)
    mul_3330: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3328, mul_3329);  mul_3328 = mul_3329 = None
    unsqueeze_2573: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3330, 0);  mul_3330 = None
    unsqueeze_2574: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2573, 2);  unsqueeze_2573 = None
    unsqueeze_2575: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2574, 3);  unsqueeze_2574 = None
    mul_3331: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_664, primals_665);  primals_665 = None
    unsqueeze_2576: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3331, 0);  mul_3331 = None
    unsqueeze_2577: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2576, 2);  unsqueeze_2576 = None
    unsqueeze_2578: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2577, 3);  unsqueeze_2577 = None
    sub_738: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_221, unsqueeze_2569);  convolution_221 = unsqueeze_2569 = None
    mul_3332: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_738, unsqueeze_2575);  sub_738 = unsqueeze_2575 = None
    sub_739: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_83, mul_3332);  where_83 = mul_3332 = None
    sub_740: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_739, unsqueeze_2572);  sub_739 = unsqueeze_2572 = None
    mul_3333: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_740, unsqueeze_2578);  sub_740 = unsqueeze_2578 = None
    mul_3334: "f32[36]" = torch.ops.aten.mul.Tensor(sum_213, squeeze_664);  sum_213 = squeeze_664 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_103 = torch.ops.aten.convolution_backward.default(mul_3333, relu_199, primals_664, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3333 = primals_664 = None
    getitem_959: "f32[8, 36, 28, 28]" = convolution_backward_103[0]
    getitem_960: "f32[36, 36, 3, 3]" = convolution_backward_103[1];  convolution_backward_103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1979: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_82, getitem_959);  where_82 = getitem_959 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_505: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_199);  relu_199 = None
    alias_506: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_505);  alias_505 = None
    le_84: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_506, 0);  alias_506 = None
    scalar_tensor_84: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_84: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_84, scalar_tensor_84, add_1979);  le_84 = scalar_tensor_84 = add_1979 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2579: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_660, 0);  squeeze_660 = None
    unsqueeze_2580: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2579, 2);  unsqueeze_2579 = None
    unsqueeze_2581: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2580, 3);  unsqueeze_2580 = None
    sum_214: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_84, [0, 2, 3])
    sub_741: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_220, unsqueeze_2581)
    mul_3335: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_84, sub_741);  sub_741 = None
    sum_215: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3335, [0, 2, 3]);  mul_3335 = None
    mul_3336: "f32[36]" = torch.ops.aten.mul.Tensor(sum_214, 0.00015943877551020407)
    unsqueeze_2582: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3336, 0);  mul_3336 = None
    unsqueeze_2583: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2582, 2);  unsqueeze_2582 = None
    unsqueeze_2584: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2583, 3);  unsqueeze_2583 = None
    mul_3337: "f32[36]" = torch.ops.aten.mul.Tensor(sum_215, 0.00015943877551020407)
    mul_3338: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_661, squeeze_661)
    mul_3339: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3337, mul_3338);  mul_3337 = mul_3338 = None
    unsqueeze_2585: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3339, 0);  mul_3339 = None
    unsqueeze_2586: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2585, 2);  unsqueeze_2585 = None
    unsqueeze_2587: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2586, 3);  unsqueeze_2586 = None
    mul_3340: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_661, primals_662);  primals_662 = None
    unsqueeze_2588: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3340, 0);  mul_3340 = None
    unsqueeze_2589: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2588, 2);  unsqueeze_2588 = None
    unsqueeze_2590: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2589, 3);  unsqueeze_2589 = None
    sub_742: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_220, unsqueeze_2581);  convolution_220 = unsqueeze_2581 = None
    mul_3341: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_742, unsqueeze_2587);  sub_742 = unsqueeze_2587 = None
    sub_743: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_84, mul_3341);  mul_3341 = None
    sub_744: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_743, unsqueeze_2584);  sub_743 = unsqueeze_2584 = None
    mul_3342: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_744, unsqueeze_2590);  sub_744 = unsqueeze_2590 = None
    mul_3343: "f32[36]" = torch.ops.aten.mul.Tensor(sum_215, squeeze_661);  sum_215 = squeeze_661 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_104 = torch.ops.aten.convolution_backward.default(mul_3342, relu_198, primals_661, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3342 = primals_661 = None
    getitem_962: "f32[8, 36, 28, 28]" = convolution_backward_104[0]
    getitem_963: "f32[36, 36, 3, 3]" = convolution_backward_104[1];  convolution_backward_104 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_508: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_198);  relu_198 = None
    alias_509: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_508);  alias_508 = None
    le_85: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_509, 0);  alias_509 = None
    scalar_tensor_85: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_85: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_85, scalar_tensor_85, getitem_962);  le_85 = scalar_tensor_85 = getitem_962 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2591: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_657, 0);  squeeze_657 = None
    unsqueeze_2592: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2591, 2);  unsqueeze_2591 = None
    unsqueeze_2593: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2592, 3);  unsqueeze_2592 = None
    sum_216: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_85, [0, 2, 3])
    sub_745: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_219, unsqueeze_2593)
    mul_3344: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_85, sub_745);  sub_745 = None
    sum_217: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3344, [0, 2, 3]);  mul_3344 = None
    mul_3345: "f32[36]" = torch.ops.aten.mul.Tensor(sum_216, 0.00015943877551020407)
    unsqueeze_2594: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3345, 0);  mul_3345 = None
    unsqueeze_2595: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2594, 2);  unsqueeze_2594 = None
    unsqueeze_2596: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2595, 3);  unsqueeze_2595 = None
    mul_3346: "f32[36]" = torch.ops.aten.mul.Tensor(sum_217, 0.00015943877551020407)
    mul_3347: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_658, squeeze_658)
    mul_3348: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3346, mul_3347);  mul_3346 = mul_3347 = None
    unsqueeze_2597: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3348, 0);  mul_3348 = None
    unsqueeze_2598: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2597, 2);  unsqueeze_2597 = None
    unsqueeze_2599: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2598, 3);  unsqueeze_2598 = None
    mul_3349: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_658, primals_659);  primals_659 = None
    unsqueeze_2600: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3349, 0);  mul_3349 = None
    unsqueeze_2601: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2600, 2);  unsqueeze_2600 = None
    unsqueeze_2602: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2601, 3);  unsqueeze_2601 = None
    sub_746: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_219, unsqueeze_2593);  convolution_219 = unsqueeze_2593 = None
    mul_3350: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_746, unsqueeze_2599);  sub_746 = unsqueeze_2599 = None
    sub_747: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_85, mul_3350);  where_85 = mul_3350 = None
    sub_748: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_747, unsqueeze_2596);  sub_747 = unsqueeze_2596 = None
    mul_3351: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_748, unsqueeze_2602);  sub_748 = unsqueeze_2602 = None
    mul_3352: "f32[36]" = torch.ops.aten.mul.Tensor(sum_217, squeeze_658);  sum_217 = squeeze_658 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_105 = torch.ops.aten.convolution_backward.default(mul_3351, relu_197, primals_658, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3351 = primals_658 = None
    getitem_965: "f32[8, 36, 28, 28]" = convolution_backward_105[0]
    getitem_966: "f32[36, 36, 3, 3]" = convolution_backward_105[1];  convolution_backward_105 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1980: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_84, getitem_965);  where_84 = getitem_965 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_511: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_197);  relu_197 = None
    alias_512: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_511);  alias_511 = None
    le_86: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_512, 0);  alias_512 = None
    scalar_tensor_86: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_86: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_86, scalar_tensor_86, add_1980);  le_86 = scalar_tensor_86 = add_1980 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2603: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_654, 0);  squeeze_654 = None
    unsqueeze_2604: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2603, 2);  unsqueeze_2603 = None
    unsqueeze_2605: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2604, 3);  unsqueeze_2604 = None
    sum_218: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_86, [0, 2, 3])
    sub_749: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_218, unsqueeze_2605)
    mul_3353: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_86, sub_749);  sub_749 = None
    sum_219: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3353, [0, 2, 3]);  mul_3353 = None
    mul_3354: "f32[36]" = torch.ops.aten.mul.Tensor(sum_218, 0.00015943877551020407)
    unsqueeze_2606: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3354, 0);  mul_3354 = None
    unsqueeze_2607: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2606, 2);  unsqueeze_2606 = None
    unsqueeze_2608: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2607, 3);  unsqueeze_2607 = None
    mul_3355: "f32[36]" = torch.ops.aten.mul.Tensor(sum_219, 0.00015943877551020407)
    mul_3356: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_655, squeeze_655)
    mul_3357: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3355, mul_3356);  mul_3355 = mul_3356 = None
    unsqueeze_2609: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3357, 0);  mul_3357 = None
    unsqueeze_2610: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2609, 2);  unsqueeze_2609 = None
    unsqueeze_2611: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2610, 3);  unsqueeze_2610 = None
    mul_3358: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_655, primals_656);  primals_656 = None
    unsqueeze_2612: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3358, 0);  mul_3358 = None
    unsqueeze_2613: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2612, 2);  unsqueeze_2612 = None
    unsqueeze_2614: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2613, 3);  unsqueeze_2613 = None
    sub_750: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_218, unsqueeze_2605);  convolution_218 = unsqueeze_2605 = None
    mul_3359: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_750, unsqueeze_2611);  sub_750 = unsqueeze_2611 = None
    sub_751: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_86, mul_3359);  mul_3359 = None
    sub_752: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_751, unsqueeze_2608);  sub_751 = unsqueeze_2608 = None
    mul_3360: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_752, unsqueeze_2614);  sub_752 = unsqueeze_2614 = None
    mul_3361: "f32[36]" = torch.ops.aten.mul.Tensor(sum_219, squeeze_655);  sum_219 = squeeze_655 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_106 = torch.ops.aten.convolution_backward.default(mul_3360, relu_196, primals_655, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3360 = primals_655 = None
    getitem_968: "f32[8, 36, 28, 28]" = convolution_backward_106[0]
    getitem_969: "f32[36, 36, 3, 3]" = convolution_backward_106[1];  convolution_backward_106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_514: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_196);  relu_196 = None
    alias_515: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_514);  alias_514 = None
    le_87: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_515, 0);  alias_515 = None
    scalar_tensor_87: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_87: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_87, scalar_tensor_87, getitem_968);  le_87 = scalar_tensor_87 = getitem_968 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2615: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_651, 0);  squeeze_651 = None
    unsqueeze_2616: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2615, 2);  unsqueeze_2615 = None
    unsqueeze_2617: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2616, 3);  unsqueeze_2616 = None
    sum_220: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_87, [0, 2, 3])
    sub_753: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_217, unsqueeze_2617)
    mul_3362: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_87, sub_753);  sub_753 = None
    sum_221: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3362, [0, 2, 3]);  mul_3362 = None
    mul_3363: "f32[36]" = torch.ops.aten.mul.Tensor(sum_220, 0.00015943877551020407)
    unsqueeze_2618: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3363, 0);  mul_3363 = None
    unsqueeze_2619: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2618, 2);  unsqueeze_2618 = None
    unsqueeze_2620: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2619, 3);  unsqueeze_2619 = None
    mul_3364: "f32[36]" = torch.ops.aten.mul.Tensor(sum_221, 0.00015943877551020407)
    mul_3365: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_652, squeeze_652)
    mul_3366: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3364, mul_3365);  mul_3364 = mul_3365 = None
    unsqueeze_2621: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3366, 0);  mul_3366 = None
    unsqueeze_2622: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2621, 2);  unsqueeze_2621 = None
    unsqueeze_2623: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2622, 3);  unsqueeze_2622 = None
    mul_3367: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_652, primals_653);  primals_653 = None
    unsqueeze_2624: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3367, 0);  mul_3367 = None
    unsqueeze_2625: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2624, 2);  unsqueeze_2624 = None
    unsqueeze_2626: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2625, 3);  unsqueeze_2625 = None
    sub_754: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_217, unsqueeze_2617);  convolution_217 = unsqueeze_2617 = None
    mul_3368: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_754, unsqueeze_2623);  sub_754 = unsqueeze_2623 = None
    sub_755: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_87, mul_3368);  where_87 = mul_3368 = None
    sub_756: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_755, unsqueeze_2620);  sub_755 = unsqueeze_2620 = None
    mul_3369: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_756, unsqueeze_2626);  sub_756 = unsqueeze_2626 = None
    mul_3370: "f32[36]" = torch.ops.aten.mul.Tensor(sum_221, squeeze_652);  sum_221 = squeeze_652 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_107 = torch.ops.aten.convolution_backward.default(mul_3369, relu_181, primals_652, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3369 = relu_181 = primals_652 = None
    getitem_971: "f32[8, 36, 28, 28]" = convolution_backward_107[0]
    getitem_972: "f32[36, 36, 3, 3]" = convolution_backward_107[1];  convolution_backward_107 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1981: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_86, getitem_971);  where_86 = getitem_971 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_517: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_195);  relu_195 = None
    alias_518: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_517);  alias_517 = None
    le_88: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_518, 0);  alias_518 = None
    scalar_tensor_88: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_88: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_88, scalar_tensor_88, add_1968);  le_88 = scalar_tensor_88 = add_1968 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2627: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_648, 0);  squeeze_648 = None
    unsqueeze_2628: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2627, 2);  unsqueeze_2627 = None
    unsqueeze_2629: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2628, 3);  unsqueeze_2628 = None
    sum_222: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_88, [0, 2, 3])
    sub_757: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_216, unsqueeze_2629)
    mul_3371: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_88, sub_757);  sub_757 = None
    sum_223: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3371, [0, 2, 3]);  mul_3371 = None
    mul_3372: "f32[18]" = torch.ops.aten.mul.Tensor(sum_222, 3.985969387755102e-05)
    unsqueeze_2630: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3372, 0);  mul_3372 = None
    unsqueeze_2631: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2630, 2);  unsqueeze_2630 = None
    unsqueeze_2632: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2631, 3);  unsqueeze_2631 = None
    mul_3373: "f32[18]" = torch.ops.aten.mul.Tensor(sum_223, 3.985969387755102e-05)
    mul_3374: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_649, squeeze_649)
    mul_3375: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3373, mul_3374);  mul_3373 = mul_3374 = None
    unsqueeze_2633: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3375, 0);  mul_3375 = None
    unsqueeze_2634: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2633, 2);  unsqueeze_2633 = None
    unsqueeze_2635: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2634, 3);  unsqueeze_2634 = None
    mul_3376: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_649, primals_650);  primals_650 = None
    unsqueeze_2636: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3376, 0);  mul_3376 = None
    unsqueeze_2637: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2636, 2);  unsqueeze_2636 = None
    unsqueeze_2638: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2637, 3);  unsqueeze_2637 = None
    sub_758: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_216, unsqueeze_2629);  convolution_216 = unsqueeze_2629 = None
    mul_3377: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_758, unsqueeze_2635);  sub_758 = unsqueeze_2635 = None
    sub_759: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_88, mul_3377);  mul_3377 = None
    sub_760: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_759, unsqueeze_2632);  sub_759 = unsqueeze_2632 = None
    mul_3378: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_760, unsqueeze_2638);  sub_760 = unsqueeze_2638 = None
    mul_3379: "f32[18]" = torch.ops.aten.mul.Tensor(sum_223, squeeze_649);  sum_223 = squeeze_649 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_108 = torch.ops.aten.convolution_backward.default(mul_3378, relu_194, primals_649, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3378 = primals_649 = None
    getitem_974: "f32[8, 18, 56, 56]" = convolution_backward_108[0]
    getitem_975: "f32[18, 18, 3, 3]" = convolution_backward_108[1];  convolution_backward_108 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_520: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_194);  relu_194 = None
    alias_521: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_520);  alias_520 = None
    le_89: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_521, 0);  alias_521 = None
    scalar_tensor_89: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_89: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_89, scalar_tensor_89, getitem_974);  le_89 = scalar_tensor_89 = getitem_974 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2639: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_645, 0);  squeeze_645 = None
    unsqueeze_2640: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2639, 2);  unsqueeze_2639 = None
    unsqueeze_2641: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2640, 3);  unsqueeze_2640 = None
    sum_224: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_89, [0, 2, 3])
    sub_761: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_215, unsqueeze_2641)
    mul_3380: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_89, sub_761);  sub_761 = None
    sum_225: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3380, [0, 2, 3]);  mul_3380 = None
    mul_3381: "f32[18]" = torch.ops.aten.mul.Tensor(sum_224, 3.985969387755102e-05)
    unsqueeze_2642: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3381, 0);  mul_3381 = None
    unsqueeze_2643: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2642, 2);  unsqueeze_2642 = None
    unsqueeze_2644: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2643, 3);  unsqueeze_2643 = None
    mul_3382: "f32[18]" = torch.ops.aten.mul.Tensor(sum_225, 3.985969387755102e-05)
    mul_3383: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_646, squeeze_646)
    mul_3384: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3382, mul_3383);  mul_3382 = mul_3383 = None
    unsqueeze_2645: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3384, 0);  mul_3384 = None
    unsqueeze_2646: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2645, 2);  unsqueeze_2645 = None
    unsqueeze_2647: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2646, 3);  unsqueeze_2646 = None
    mul_3385: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_646, primals_647);  primals_647 = None
    unsqueeze_2648: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3385, 0);  mul_3385 = None
    unsqueeze_2649: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2648, 2);  unsqueeze_2648 = None
    unsqueeze_2650: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2649, 3);  unsqueeze_2649 = None
    sub_762: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_215, unsqueeze_2641);  convolution_215 = unsqueeze_2641 = None
    mul_3386: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_762, unsqueeze_2647);  sub_762 = unsqueeze_2647 = None
    sub_763: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_89, mul_3386);  where_89 = mul_3386 = None
    sub_764: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_763, unsqueeze_2644);  sub_763 = unsqueeze_2644 = None
    mul_3387: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_764, unsqueeze_2650);  sub_764 = unsqueeze_2650 = None
    mul_3388: "f32[18]" = torch.ops.aten.mul.Tensor(sum_225, squeeze_646);  sum_225 = squeeze_646 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_109 = torch.ops.aten.convolution_backward.default(mul_3387, relu_193, primals_646, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3387 = primals_646 = None
    getitem_977: "f32[8, 18, 56, 56]" = convolution_backward_109[0]
    getitem_978: "f32[18, 18, 3, 3]" = convolution_backward_109[1];  convolution_backward_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1982: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_88, getitem_977);  where_88 = getitem_977 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_523: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_193);  relu_193 = None
    alias_524: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_523);  alias_523 = None
    le_90: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_524, 0);  alias_524 = None
    scalar_tensor_90: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_90: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_90, scalar_tensor_90, add_1982);  le_90 = scalar_tensor_90 = add_1982 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2651: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_642, 0);  squeeze_642 = None
    unsqueeze_2652: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2651, 2);  unsqueeze_2651 = None
    unsqueeze_2653: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2652, 3);  unsqueeze_2652 = None
    sum_226: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_90, [0, 2, 3])
    sub_765: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_214, unsqueeze_2653)
    mul_3389: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_90, sub_765);  sub_765 = None
    sum_227: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3389, [0, 2, 3]);  mul_3389 = None
    mul_3390: "f32[18]" = torch.ops.aten.mul.Tensor(sum_226, 3.985969387755102e-05)
    unsqueeze_2654: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3390, 0);  mul_3390 = None
    unsqueeze_2655: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2654, 2);  unsqueeze_2654 = None
    unsqueeze_2656: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2655, 3);  unsqueeze_2655 = None
    mul_3391: "f32[18]" = torch.ops.aten.mul.Tensor(sum_227, 3.985969387755102e-05)
    mul_3392: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_643, squeeze_643)
    mul_3393: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3391, mul_3392);  mul_3391 = mul_3392 = None
    unsqueeze_2657: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3393, 0);  mul_3393 = None
    unsqueeze_2658: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2657, 2);  unsqueeze_2657 = None
    unsqueeze_2659: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2658, 3);  unsqueeze_2658 = None
    mul_3394: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_643, primals_644);  primals_644 = None
    unsqueeze_2660: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3394, 0);  mul_3394 = None
    unsqueeze_2661: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2660, 2);  unsqueeze_2660 = None
    unsqueeze_2662: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2661, 3);  unsqueeze_2661 = None
    sub_766: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_214, unsqueeze_2653);  convolution_214 = unsqueeze_2653 = None
    mul_3395: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_766, unsqueeze_2659);  sub_766 = unsqueeze_2659 = None
    sub_767: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_90, mul_3395);  mul_3395 = None
    sub_768: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_767, unsqueeze_2656);  sub_767 = unsqueeze_2656 = None
    mul_3396: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_768, unsqueeze_2662);  sub_768 = unsqueeze_2662 = None
    mul_3397: "f32[18]" = torch.ops.aten.mul.Tensor(sum_227, squeeze_643);  sum_227 = squeeze_643 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_110 = torch.ops.aten.convolution_backward.default(mul_3396, relu_192, primals_643, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3396 = primals_643 = None
    getitem_980: "f32[8, 18, 56, 56]" = convolution_backward_110[0]
    getitem_981: "f32[18, 18, 3, 3]" = convolution_backward_110[1];  convolution_backward_110 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_526: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_192);  relu_192 = None
    alias_527: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_526);  alias_526 = None
    le_91: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_527, 0);  alias_527 = None
    scalar_tensor_91: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_91: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_91, scalar_tensor_91, getitem_980);  le_91 = scalar_tensor_91 = getitem_980 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2663: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_639, 0);  squeeze_639 = None
    unsqueeze_2664: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2663, 2);  unsqueeze_2663 = None
    unsqueeze_2665: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2664, 3);  unsqueeze_2664 = None
    sum_228: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_91, [0, 2, 3])
    sub_769: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_213, unsqueeze_2665)
    mul_3398: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_91, sub_769);  sub_769 = None
    sum_229: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3398, [0, 2, 3]);  mul_3398 = None
    mul_3399: "f32[18]" = torch.ops.aten.mul.Tensor(sum_228, 3.985969387755102e-05)
    unsqueeze_2666: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3399, 0);  mul_3399 = None
    unsqueeze_2667: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2666, 2);  unsqueeze_2666 = None
    unsqueeze_2668: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2667, 3);  unsqueeze_2667 = None
    mul_3400: "f32[18]" = torch.ops.aten.mul.Tensor(sum_229, 3.985969387755102e-05)
    mul_3401: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_640, squeeze_640)
    mul_3402: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3400, mul_3401);  mul_3400 = mul_3401 = None
    unsqueeze_2669: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3402, 0);  mul_3402 = None
    unsqueeze_2670: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2669, 2);  unsqueeze_2669 = None
    unsqueeze_2671: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2670, 3);  unsqueeze_2670 = None
    mul_3403: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_640, primals_641);  primals_641 = None
    unsqueeze_2672: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3403, 0);  mul_3403 = None
    unsqueeze_2673: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2672, 2);  unsqueeze_2672 = None
    unsqueeze_2674: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2673, 3);  unsqueeze_2673 = None
    sub_770: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_213, unsqueeze_2665);  convolution_213 = unsqueeze_2665 = None
    mul_3404: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_770, unsqueeze_2671);  sub_770 = unsqueeze_2671 = None
    sub_771: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_91, mul_3404);  where_91 = mul_3404 = None
    sub_772: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_771, unsqueeze_2668);  sub_771 = unsqueeze_2668 = None
    mul_3405: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_772, unsqueeze_2674);  sub_772 = unsqueeze_2674 = None
    mul_3406: "f32[18]" = torch.ops.aten.mul.Tensor(sum_229, squeeze_640);  sum_229 = squeeze_640 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_111 = torch.ops.aten.convolution_backward.default(mul_3405, relu_191, primals_640, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3405 = primals_640 = None
    getitem_983: "f32[8, 18, 56, 56]" = convolution_backward_111[0]
    getitem_984: "f32[18, 18, 3, 3]" = convolution_backward_111[1];  convolution_backward_111 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1983: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_90, getitem_983);  where_90 = getitem_983 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_529: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_191);  relu_191 = None
    alias_530: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_529);  alias_529 = None
    le_92: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_530, 0);  alias_530 = None
    scalar_tensor_92: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_92: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_92, scalar_tensor_92, add_1983);  le_92 = scalar_tensor_92 = add_1983 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2675: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_636, 0);  squeeze_636 = None
    unsqueeze_2676: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2675, 2);  unsqueeze_2675 = None
    unsqueeze_2677: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2676, 3);  unsqueeze_2676 = None
    sum_230: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_92, [0, 2, 3])
    sub_773: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_212, unsqueeze_2677)
    mul_3407: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_92, sub_773);  sub_773 = None
    sum_231: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3407, [0, 2, 3]);  mul_3407 = None
    mul_3408: "f32[18]" = torch.ops.aten.mul.Tensor(sum_230, 3.985969387755102e-05)
    unsqueeze_2678: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3408, 0);  mul_3408 = None
    unsqueeze_2679: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2678, 2);  unsqueeze_2678 = None
    unsqueeze_2680: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2679, 3);  unsqueeze_2679 = None
    mul_3409: "f32[18]" = torch.ops.aten.mul.Tensor(sum_231, 3.985969387755102e-05)
    mul_3410: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_637, squeeze_637)
    mul_3411: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3409, mul_3410);  mul_3409 = mul_3410 = None
    unsqueeze_2681: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3411, 0);  mul_3411 = None
    unsqueeze_2682: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2681, 2);  unsqueeze_2681 = None
    unsqueeze_2683: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2682, 3);  unsqueeze_2682 = None
    mul_3412: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_637, primals_638);  primals_638 = None
    unsqueeze_2684: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3412, 0);  mul_3412 = None
    unsqueeze_2685: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2684, 2);  unsqueeze_2684 = None
    unsqueeze_2686: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2685, 3);  unsqueeze_2685 = None
    sub_774: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_212, unsqueeze_2677);  convolution_212 = unsqueeze_2677 = None
    mul_3413: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_774, unsqueeze_2683);  sub_774 = unsqueeze_2683 = None
    sub_775: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_92, mul_3413);  mul_3413 = None
    sub_776: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_775, unsqueeze_2680);  sub_775 = unsqueeze_2680 = None
    mul_3414: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_776, unsqueeze_2686);  sub_776 = unsqueeze_2686 = None
    mul_3415: "f32[18]" = torch.ops.aten.mul.Tensor(sum_231, squeeze_637);  sum_231 = squeeze_637 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_112 = torch.ops.aten.convolution_backward.default(mul_3414, relu_190, primals_637, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3414 = primals_637 = None
    getitem_986: "f32[8, 18, 56, 56]" = convolution_backward_112[0]
    getitem_987: "f32[18, 18, 3, 3]" = convolution_backward_112[1];  convolution_backward_112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_532: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_190);  relu_190 = None
    alias_533: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_532);  alias_532 = None
    le_93: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_533, 0);  alias_533 = None
    scalar_tensor_93: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_93: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_93, scalar_tensor_93, getitem_986);  le_93 = scalar_tensor_93 = getitem_986 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2687: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_633, 0);  squeeze_633 = None
    unsqueeze_2688: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2687, 2);  unsqueeze_2687 = None
    unsqueeze_2689: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2688, 3);  unsqueeze_2688 = None
    sum_232: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_93, [0, 2, 3])
    sub_777: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_211, unsqueeze_2689)
    mul_3416: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_93, sub_777);  sub_777 = None
    sum_233: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3416, [0, 2, 3]);  mul_3416 = None
    mul_3417: "f32[18]" = torch.ops.aten.mul.Tensor(sum_232, 3.985969387755102e-05)
    unsqueeze_2690: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3417, 0);  mul_3417 = None
    unsqueeze_2691: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2690, 2);  unsqueeze_2690 = None
    unsqueeze_2692: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2691, 3);  unsqueeze_2691 = None
    mul_3418: "f32[18]" = torch.ops.aten.mul.Tensor(sum_233, 3.985969387755102e-05)
    mul_3419: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_634, squeeze_634)
    mul_3420: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3418, mul_3419);  mul_3418 = mul_3419 = None
    unsqueeze_2693: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3420, 0);  mul_3420 = None
    unsqueeze_2694: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2693, 2);  unsqueeze_2693 = None
    unsqueeze_2695: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2694, 3);  unsqueeze_2694 = None
    mul_3421: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_634, primals_635);  primals_635 = None
    unsqueeze_2696: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3421, 0);  mul_3421 = None
    unsqueeze_2697: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2696, 2);  unsqueeze_2696 = None
    unsqueeze_2698: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2697, 3);  unsqueeze_2697 = None
    sub_778: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_211, unsqueeze_2689);  convolution_211 = unsqueeze_2689 = None
    mul_3422: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_778, unsqueeze_2695);  sub_778 = unsqueeze_2695 = None
    sub_779: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_93, mul_3422);  where_93 = mul_3422 = None
    sub_780: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_779, unsqueeze_2692);  sub_779 = unsqueeze_2692 = None
    mul_3423: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_780, unsqueeze_2698);  sub_780 = unsqueeze_2698 = None
    mul_3424: "f32[18]" = torch.ops.aten.mul.Tensor(sum_233, squeeze_634);  sum_233 = squeeze_634 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_113 = torch.ops.aten.convolution_backward.default(mul_3423, relu_189, primals_634, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3423 = primals_634 = None
    getitem_989: "f32[8, 18, 56, 56]" = convolution_backward_113[0]
    getitem_990: "f32[18, 18, 3, 3]" = convolution_backward_113[1];  convolution_backward_113 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1984: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_92, getitem_989);  where_92 = getitem_989 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_535: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_189);  relu_189 = None
    alias_536: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_535);  alias_535 = None
    le_94: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_536, 0);  alias_536 = None
    scalar_tensor_94: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_94: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_94, scalar_tensor_94, add_1984);  le_94 = scalar_tensor_94 = add_1984 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2699: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_630, 0);  squeeze_630 = None
    unsqueeze_2700: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2699, 2);  unsqueeze_2699 = None
    unsqueeze_2701: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2700, 3);  unsqueeze_2700 = None
    sum_234: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_94, [0, 2, 3])
    sub_781: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_210, unsqueeze_2701)
    mul_3425: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_94, sub_781);  sub_781 = None
    sum_235: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3425, [0, 2, 3]);  mul_3425 = None
    mul_3426: "f32[18]" = torch.ops.aten.mul.Tensor(sum_234, 3.985969387755102e-05)
    unsqueeze_2702: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3426, 0);  mul_3426 = None
    unsqueeze_2703: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2702, 2);  unsqueeze_2702 = None
    unsqueeze_2704: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2703, 3);  unsqueeze_2703 = None
    mul_3427: "f32[18]" = torch.ops.aten.mul.Tensor(sum_235, 3.985969387755102e-05)
    mul_3428: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_631, squeeze_631)
    mul_3429: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3427, mul_3428);  mul_3427 = mul_3428 = None
    unsqueeze_2705: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3429, 0);  mul_3429 = None
    unsqueeze_2706: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2705, 2);  unsqueeze_2705 = None
    unsqueeze_2707: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2706, 3);  unsqueeze_2706 = None
    mul_3430: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_631, primals_632);  primals_632 = None
    unsqueeze_2708: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3430, 0);  mul_3430 = None
    unsqueeze_2709: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2708, 2);  unsqueeze_2708 = None
    unsqueeze_2710: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2709, 3);  unsqueeze_2709 = None
    sub_782: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_210, unsqueeze_2701);  convolution_210 = unsqueeze_2701 = None
    mul_3431: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_782, unsqueeze_2707);  sub_782 = unsqueeze_2707 = None
    sub_783: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_94, mul_3431);  mul_3431 = None
    sub_784: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_783, unsqueeze_2704);  sub_783 = unsqueeze_2704 = None
    mul_3432: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_784, unsqueeze_2710);  sub_784 = unsqueeze_2710 = None
    mul_3433: "f32[18]" = torch.ops.aten.mul.Tensor(sum_235, squeeze_631);  sum_235 = squeeze_631 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_114 = torch.ops.aten.convolution_backward.default(mul_3432, relu_188, primals_631, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3432 = primals_631 = None
    getitem_992: "f32[8, 18, 56, 56]" = convolution_backward_114[0]
    getitem_993: "f32[18, 18, 3, 3]" = convolution_backward_114[1];  convolution_backward_114 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_538: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_188);  relu_188 = None
    alias_539: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_538);  alias_538 = None
    le_95: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_539, 0);  alias_539 = None
    scalar_tensor_95: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_95: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_95, scalar_tensor_95, getitem_992);  le_95 = scalar_tensor_95 = getitem_992 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2711: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_627, 0);  squeeze_627 = None
    unsqueeze_2712: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2711, 2);  unsqueeze_2711 = None
    unsqueeze_2713: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2712, 3);  unsqueeze_2712 = None
    sum_236: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_95, [0, 2, 3])
    sub_785: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_209, unsqueeze_2713)
    mul_3434: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_95, sub_785);  sub_785 = None
    sum_237: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3434, [0, 2, 3]);  mul_3434 = None
    mul_3435: "f32[18]" = torch.ops.aten.mul.Tensor(sum_236, 3.985969387755102e-05)
    unsqueeze_2714: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3435, 0);  mul_3435 = None
    unsqueeze_2715: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2714, 2);  unsqueeze_2714 = None
    unsqueeze_2716: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2715, 3);  unsqueeze_2715 = None
    mul_3436: "f32[18]" = torch.ops.aten.mul.Tensor(sum_237, 3.985969387755102e-05)
    mul_3437: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_628, squeeze_628)
    mul_3438: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3436, mul_3437);  mul_3436 = mul_3437 = None
    unsqueeze_2717: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3438, 0);  mul_3438 = None
    unsqueeze_2718: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2717, 2);  unsqueeze_2717 = None
    unsqueeze_2719: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2718, 3);  unsqueeze_2718 = None
    mul_3439: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_628, primals_629);  primals_629 = None
    unsqueeze_2720: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3439, 0);  mul_3439 = None
    unsqueeze_2721: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2720, 2);  unsqueeze_2720 = None
    unsqueeze_2722: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2721, 3);  unsqueeze_2721 = None
    sub_786: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_209, unsqueeze_2713);  convolution_209 = unsqueeze_2713 = None
    mul_3440: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_786, unsqueeze_2719);  sub_786 = unsqueeze_2719 = None
    sub_787: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_95, mul_3440);  where_95 = mul_3440 = None
    sub_788: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_787, unsqueeze_2716);  sub_787 = unsqueeze_2716 = None
    mul_3441: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_788, unsqueeze_2722);  sub_788 = unsqueeze_2722 = None
    mul_3442: "f32[18]" = torch.ops.aten.mul.Tensor(sum_237, squeeze_628);  sum_237 = squeeze_628 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_115 = torch.ops.aten.convolution_backward.default(mul_3441, relu_180, primals_628, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3441 = relu_180 = primals_628 = None
    getitem_995: "f32[8, 18, 56, 56]" = convolution_backward_115[0]
    getitem_996: "f32[18, 18, 3, 3]" = convolution_backward_115[1];  convolution_backward_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1985: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_94, getitem_995);  where_94 = getitem_995 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_540: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_187);  alias_187 = None
    le_96: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_540, 0);  alias_540 = None
    scalar_tensor_96: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_96: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_96, scalar_tensor_96, add_1973);  le_96 = scalar_tensor_96 = add_1973 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_2723: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_624, 0);  squeeze_624 = None
    unsqueeze_2724: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2723, 2);  unsqueeze_2723 = None
    unsqueeze_2725: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2724, 3);  unsqueeze_2724 = None
    sum_238: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_96, [0, 2, 3])
    sub_789: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_208, unsqueeze_2725)
    mul_3443: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_96, sub_789);  sub_789 = None
    sum_239: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3443, [0, 2, 3]);  mul_3443 = None
    mul_3444: "f32[144]" = torch.ops.aten.mul.Tensor(sum_238, 0.002551020408163265)
    unsqueeze_2726: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3444, 0);  mul_3444 = None
    unsqueeze_2727: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2726, 2);  unsqueeze_2726 = None
    unsqueeze_2728: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2727, 3);  unsqueeze_2727 = None
    mul_3445: "f32[144]" = torch.ops.aten.mul.Tensor(sum_239, 0.002551020408163265)
    mul_3446: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_625, squeeze_625)
    mul_3447: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3445, mul_3446);  mul_3445 = mul_3446 = None
    unsqueeze_2729: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3447, 0);  mul_3447 = None
    unsqueeze_2730: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2729, 2);  unsqueeze_2729 = None
    unsqueeze_2731: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2730, 3);  unsqueeze_2730 = None
    mul_3448: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_625, primals_626);  primals_626 = None
    unsqueeze_2732: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3448, 0);  mul_3448 = None
    unsqueeze_2733: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2732, 2);  unsqueeze_2732 = None
    unsqueeze_2734: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2733, 3);  unsqueeze_2733 = None
    sub_790: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_208, unsqueeze_2725);  convolution_208 = unsqueeze_2725 = None
    mul_3449: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_790, unsqueeze_2731);  sub_790 = unsqueeze_2731 = None
    sub_791: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_96, mul_3449);  mul_3449 = None
    sub_792: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_791, unsqueeze_2728);  sub_791 = unsqueeze_2728 = None
    mul_3450: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_792, unsqueeze_2734);  sub_792 = unsqueeze_2734 = None
    mul_3451: "f32[144]" = torch.ops.aten.mul.Tensor(sum_239, squeeze_625);  sum_239 = squeeze_625 = None
    convolution_backward_116 = torch.ops.aten.convolution_backward.default(mul_3450, relu_171, primals_625, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3450 = primals_625 = None
    getitem_998: "f32[8, 72, 14, 14]" = convolution_backward_116[0]
    getitem_999: "f32[144, 72, 3, 3]" = convolution_backward_116[1];  convolution_backward_116 = None
    unsqueeze_2735: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_621, 0);  squeeze_621 = None
    unsqueeze_2736: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2735, 2);  unsqueeze_2735 = None
    unsqueeze_2737: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2736, 3);  unsqueeze_2736 = None
    sum_240: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_96, [0, 2, 3])
    sub_793: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_207, unsqueeze_2737)
    mul_3452: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_96, sub_793);  sub_793 = None
    sum_241: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3452, [0, 2, 3]);  mul_3452 = None
    mul_3453: "f32[144]" = torch.ops.aten.mul.Tensor(sum_240, 0.002551020408163265)
    unsqueeze_2738: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3453, 0);  mul_3453 = None
    unsqueeze_2739: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2738, 2);  unsqueeze_2738 = None
    unsqueeze_2740: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2739, 3);  unsqueeze_2739 = None
    mul_3454: "f32[144]" = torch.ops.aten.mul.Tensor(sum_241, 0.002551020408163265)
    mul_3455: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_622, squeeze_622)
    mul_3456: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3454, mul_3455);  mul_3454 = mul_3455 = None
    unsqueeze_2741: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3456, 0);  mul_3456 = None
    unsqueeze_2742: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2741, 2);  unsqueeze_2741 = None
    unsqueeze_2743: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2742, 3);  unsqueeze_2742 = None
    mul_3457: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_622, primals_623);  primals_623 = None
    unsqueeze_2744: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3457, 0);  mul_3457 = None
    unsqueeze_2745: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2744, 2);  unsqueeze_2744 = None
    unsqueeze_2746: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2745, 3);  unsqueeze_2745 = None
    sub_794: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_207, unsqueeze_2737);  convolution_207 = unsqueeze_2737 = None
    mul_3458: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_794, unsqueeze_2743);  sub_794 = unsqueeze_2743 = None
    sub_795: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_96, mul_3458);  mul_3458 = None
    sub_796: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_795, unsqueeze_2740);  sub_795 = unsqueeze_2740 = None
    mul_3459: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_796, unsqueeze_2746);  sub_796 = unsqueeze_2746 = None
    mul_3460: "f32[144]" = torch.ops.aten.mul.Tensor(sum_241, squeeze_622);  sum_241 = squeeze_622 = None
    convolution_backward_117 = torch.ops.aten.convolution_backward.default(mul_3459, relu_186, primals_622, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3459 = relu_186 = primals_622 = None
    getitem_1001: "f32[8, 36, 14, 14]" = convolution_backward_117[0]
    getitem_1002: "f32[144, 36, 3, 3]" = convolution_backward_117[1];  convolution_backward_117 = None
    alias_541: "f32[8, 36, 14, 14]" = torch.ops.aten.alias.default(alias_186);  alias_186 = None
    le_97: "b8[8, 36, 14, 14]" = torch.ops.aten.le.Scalar(alias_541, 0);  alias_541 = None
    scalar_tensor_97: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_97: "f32[8, 36, 14, 14]" = torch.ops.aten.where.self(le_97, scalar_tensor_97, getitem_1001);  le_97 = scalar_tensor_97 = getitem_1001 = None
    unsqueeze_2747: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_618, 0);  squeeze_618 = None
    unsqueeze_2748: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2747, 2);  unsqueeze_2747 = None
    unsqueeze_2749: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2748, 3);  unsqueeze_2748 = None
    sum_242: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_97, [0, 2, 3])
    sub_797: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_206, unsqueeze_2749)
    mul_3461: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(where_97, sub_797);  sub_797 = None
    sum_243: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3461, [0, 2, 3]);  mul_3461 = None
    mul_3462: "f32[36]" = torch.ops.aten.mul.Tensor(sum_242, 0.0006377551020408163)
    unsqueeze_2750: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3462, 0);  mul_3462 = None
    unsqueeze_2751: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2750, 2);  unsqueeze_2750 = None
    unsqueeze_2752: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2751, 3);  unsqueeze_2751 = None
    mul_3463: "f32[36]" = torch.ops.aten.mul.Tensor(sum_243, 0.0006377551020408163)
    mul_3464: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_619, squeeze_619)
    mul_3465: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3463, mul_3464);  mul_3463 = mul_3464 = None
    unsqueeze_2753: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3465, 0);  mul_3465 = None
    unsqueeze_2754: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2753, 2);  unsqueeze_2753 = None
    unsqueeze_2755: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2754, 3);  unsqueeze_2754 = None
    mul_3466: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_619, primals_620);  primals_620 = None
    unsqueeze_2756: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3466, 0);  mul_3466 = None
    unsqueeze_2757: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2756, 2);  unsqueeze_2756 = None
    unsqueeze_2758: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2757, 3);  unsqueeze_2757 = None
    sub_798: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_206, unsqueeze_2749);  convolution_206 = unsqueeze_2749 = None
    mul_3467: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_798, unsqueeze_2755);  sub_798 = unsqueeze_2755 = None
    sub_799: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(where_97, mul_3467);  where_97 = mul_3467 = None
    sub_800: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_799, unsqueeze_2752);  sub_799 = unsqueeze_2752 = None
    mul_3468: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_800, unsqueeze_2758);  sub_800 = unsqueeze_2758 = None
    mul_3469: "f32[36]" = torch.ops.aten.mul.Tensor(sum_243, squeeze_619);  sum_243 = squeeze_619 = None
    convolution_backward_118 = torch.ops.aten.convolution_backward.default(mul_3468, relu_163, primals_619, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3468 = primals_619 = None
    getitem_1004: "f32[8, 36, 28, 28]" = convolution_backward_118[0]
    getitem_1005: "f32[36, 36, 3, 3]" = convolution_backward_118[1];  convolution_backward_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2759: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_615, 0);  squeeze_615 = None
    unsqueeze_2760: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2759, 2);  unsqueeze_2759 = None
    unsqueeze_2761: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2760, 3);  unsqueeze_2760 = None
    sum_244: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_96, [0, 2, 3])
    sub_801: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_205, unsqueeze_2761)
    mul_3470: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_96, sub_801);  sub_801 = None
    sum_245: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3470, [0, 2, 3]);  mul_3470 = None
    mul_3471: "f32[144]" = torch.ops.aten.mul.Tensor(sum_244, 0.002551020408163265)
    unsqueeze_2762: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3471, 0);  mul_3471 = None
    unsqueeze_2763: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2762, 2);  unsqueeze_2762 = None
    unsqueeze_2764: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2763, 3);  unsqueeze_2763 = None
    mul_3472: "f32[144]" = torch.ops.aten.mul.Tensor(sum_245, 0.002551020408163265)
    mul_3473: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_616, squeeze_616)
    mul_3474: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3472, mul_3473);  mul_3472 = mul_3473 = None
    unsqueeze_2765: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3474, 0);  mul_3474 = None
    unsqueeze_2766: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2765, 2);  unsqueeze_2765 = None
    unsqueeze_2767: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2766, 3);  unsqueeze_2766 = None
    mul_3475: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_616, primals_617);  primals_617 = None
    unsqueeze_2768: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3475, 0);  mul_3475 = None
    unsqueeze_2769: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2768, 2);  unsqueeze_2768 = None
    unsqueeze_2770: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2769, 3);  unsqueeze_2769 = None
    sub_802: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_205, unsqueeze_2761);  convolution_205 = unsqueeze_2761 = None
    mul_3476: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_802, unsqueeze_2767);  sub_802 = unsqueeze_2767 = None
    sub_803: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_96, mul_3476);  mul_3476 = None
    sub_804: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_803, unsqueeze_2764);  sub_803 = unsqueeze_2764 = None
    mul_3477: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_804, unsqueeze_2770);  sub_804 = unsqueeze_2770 = None
    mul_3478: "f32[144]" = torch.ops.aten.mul.Tensor(sum_245, squeeze_616);  sum_245 = squeeze_616 = None
    convolution_backward_119 = torch.ops.aten.convolution_backward.default(mul_3477, relu_185, primals_616, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3477 = relu_185 = primals_616 = None
    getitem_1007: "f32[8, 18, 14, 14]" = convolution_backward_119[0]
    getitem_1008: "f32[144, 18, 3, 3]" = convolution_backward_119[1];  convolution_backward_119 = None
    alias_542: "f32[8, 18, 14, 14]" = torch.ops.aten.alias.default(alias_185);  alias_185 = None
    le_98: "b8[8, 18, 14, 14]" = torch.ops.aten.le.Scalar(alias_542, 0);  alias_542 = None
    scalar_tensor_98: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_98: "f32[8, 18, 14, 14]" = torch.ops.aten.where.self(le_98, scalar_tensor_98, getitem_1007);  le_98 = scalar_tensor_98 = getitem_1007 = None
    unsqueeze_2771: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_612, 0);  squeeze_612 = None
    unsqueeze_2772: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2771, 2);  unsqueeze_2771 = None
    unsqueeze_2773: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2772, 3);  unsqueeze_2772 = None
    sum_246: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_98, [0, 2, 3])
    sub_805: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_204, unsqueeze_2773)
    mul_3479: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(where_98, sub_805);  sub_805 = None
    sum_247: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3479, [0, 2, 3]);  mul_3479 = None
    mul_3480: "f32[18]" = torch.ops.aten.mul.Tensor(sum_246, 0.0006377551020408163)
    unsqueeze_2774: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3480, 0);  mul_3480 = None
    unsqueeze_2775: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2774, 2);  unsqueeze_2774 = None
    unsqueeze_2776: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2775, 3);  unsqueeze_2775 = None
    mul_3481: "f32[18]" = torch.ops.aten.mul.Tensor(sum_247, 0.0006377551020408163)
    mul_3482: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_613, squeeze_613)
    mul_3483: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3481, mul_3482);  mul_3481 = mul_3482 = None
    unsqueeze_2777: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3483, 0);  mul_3483 = None
    unsqueeze_2778: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2777, 2);  unsqueeze_2777 = None
    unsqueeze_2779: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2778, 3);  unsqueeze_2778 = None
    mul_3484: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_613, primals_614);  primals_614 = None
    unsqueeze_2780: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3484, 0);  mul_3484 = None
    unsqueeze_2781: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2780, 2);  unsqueeze_2780 = None
    unsqueeze_2782: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2781, 3);  unsqueeze_2781 = None
    sub_806: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_204, unsqueeze_2773);  convolution_204 = unsqueeze_2773 = None
    mul_3485: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_806, unsqueeze_2779);  sub_806 = unsqueeze_2779 = None
    sub_807: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(where_98, mul_3485);  where_98 = mul_3485 = None
    sub_808: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_807, unsqueeze_2776);  sub_807 = unsqueeze_2776 = None
    mul_3486: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_808, unsqueeze_2782);  sub_808 = unsqueeze_2782 = None
    mul_3487: "f32[18]" = torch.ops.aten.mul.Tensor(sum_247, squeeze_613);  sum_247 = squeeze_613 = None
    convolution_backward_120 = torch.ops.aten.convolution_backward.default(mul_3486, relu_184, primals_613, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3486 = relu_184 = primals_613 = None
    getitem_1010: "f32[8, 18, 28, 28]" = convolution_backward_120[0]
    getitem_1011: "f32[18, 18, 3, 3]" = convolution_backward_120[1];  convolution_backward_120 = None
    alias_543: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_184);  alias_184 = None
    le_99: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_543, 0);  alias_543 = None
    scalar_tensor_99: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_99: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_99, scalar_tensor_99, getitem_1010);  le_99 = scalar_tensor_99 = getitem_1010 = None
    unsqueeze_2783: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_609, 0);  squeeze_609 = None
    unsqueeze_2784: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2783, 2);  unsqueeze_2783 = None
    unsqueeze_2785: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2784, 3);  unsqueeze_2784 = None
    sum_248: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_99, [0, 2, 3])
    sub_809: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_203, unsqueeze_2785)
    mul_3488: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_99, sub_809);  sub_809 = None
    sum_249: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3488, [0, 2, 3]);  mul_3488 = None
    mul_3489: "f32[18]" = torch.ops.aten.mul.Tensor(sum_248, 0.00015943877551020407)
    unsqueeze_2786: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3489, 0);  mul_3489 = None
    unsqueeze_2787: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2786, 2);  unsqueeze_2786 = None
    unsqueeze_2788: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2787, 3);  unsqueeze_2787 = None
    mul_3490: "f32[18]" = torch.ops.aten.mul.Tensor(sum_249, 0.00015943877551020407)
    mul_3491: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_610, squeeze_610)
    mul_3492: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3490, mul_3491);  mul_3490 = mul_3491 = None
    unsqueeze_2789: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3492, 0);  mul_3492 = None
    unsqueeze_2790: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2789, 2);  unsqueeze_2789 = None
    unsqueeze_2791: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2790, 3);  unsqueeze_2790 = None
    mul_3493: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_610, primals_611);  primals_611 = None
    unsqueeze_2792: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3493, 0);  mul_3493 = None
    unsqueeze_2793: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2792, 2);  unsqueeze_2792 = None
    unsqueeze_2794: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2793, 3);  unsqueeze_2793 = None
    sub_810: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_203, unsqueeze_2785);  convolution_203 = unsqueeze_2785 = None
    mul_3494: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_810, unsqueeze_2791);  sub_810 = unsqueeze_2791 = None
    sub_811: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_99, mul_3494);  where_99 = mul_3494 = None
    sub_812: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_811, unsqueeze_2788);  sub_811 = unsqueeze_2788 = None
    mul_3495: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_812, unsqueeze_2794);  sub_812 = unsqueeze_2794 = None
    mul_3496: "f32[18]" = torch.ops.aten.mul.Tensor(sum_249, squeeze_610);  sum_249 = squeeze_610 = None
    convolution_backward_121 = torch.ops.aten.convolution_backward.default(mul_3495, relu_155, primals_610, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3495 = primals_610 = None
    getitem_1013: "f32[8, 18, 56, 56]" = convolution_backward_121[0]
    getitem_1014: "f32[18, 18, 3, 3]" = convolution_backward_121[1];  convolution_backward_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_544: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_183);  alias_183 = None
    le_100: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_544, 0);  alias_544 = None
    scalar_tensor_100: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_100: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_100, scalar_tensor_100, add_1977);  le_100 = scalar_tensor_100 = add_1977 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_12: "f32[8, 72, 7, 7]" = torch.ops.aten.full.default([8, 72, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_12: "f32[8, 72, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_12, [None, None, unsqueeze_830, convert_element_type_75], where_100, True);  full_12 = unsqueeze_830 = convert_element_type_75 = None
    unsqueeze_2795: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_606, 0);  squeeze_606 = None
    unsqueeze_2796: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2795, 2);  unsqueeze_2795 = None
    unsqueeze_2797: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2796, 3);  unsqueeze_2796 = None
    sum_250: "f32[72]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_12, [0, 2, 3])
    sub_813: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_202, unsqueeze_2797)
    mul_3497: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_12, sub_813);  sub_813 = None
    sum_251: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3497, [0, 2, 3]);  mul_3497 = None
    mul_3498: "f32[72]" = torch.ops.aten.mul.Tensor(sum_250, 0.002551020408163265)
    unsqueeze_2798: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3498, 0);  mul_3498 = None
    unsqueeze_2799: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2798, 2);  unsqueeze_2798 = None
    unsqueeze_2800: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2799, 3);  unsqueeze_2799 = None
    mul_3499: "f32[72]" = torch.ops.aten.mul.Tensor(sum_251, 0.002551020408163265)
    mul_3500: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_607, squeeze_607)
    mul_3501: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3499, mul_3500);  mul_3499 = mul_3500 = None
    unsqueeze_2801: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3501, 0);  mul_3501 = None
    unsqueeze_2802: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2801, 2);  unsqueeze_2801 = None
    unsqueeze_2803: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2802, 3);  unsqueeze_2802 = None
    mul_3502: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_607, primals_608);  primals_608 = None
    unsqueeze_2804: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3502, 0);  mul_3502 = None
    unsqueeze_2805: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2804, 2);  unsqueeze_2804 = None
    unsqueeze_2806: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2805, 3);  unsqueeze_2805 = None
    sub_814: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_202, unsqueeze_2797);  convolution_202 = unsqueeze_2797 = None
    mul_3503: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_814, unsqueeze_2803);  sub_814 = unsqueeze_2803 = None
    sub_815: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_12, mul_3503);  _unsafe_index_put_12 = mul_3503 = None
    sub_816: "f32[8, 72, 7, 7]" = torch.ops.aten.sub.Tensor(sub_815, unsqueeze_2800);  sub_815 = unsqueeze_2800 = None
    mul_3504: "f32[8, 72, 7, 7]" = torch.ops.aten.mul.Tensor(sub_816, unsqueeze_2806);  sub_816 = unsqueeze_2806 = None
    mul_3505: "f32[72]" = torch.ops.aten.mul.Tensor(sum_251, squeeze_607);  sum_251 = squeeze_607 = None
    convolution_backward_122 = torch.ops.aten.convolution_backward.default(mul_3504, relu_179, primals_607, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3504 = primals_607 = None
    getitem_1016: "f32[8, 144, 7, 7]" = convolution_backward_122[0]
    getitem_1017: "f32[72, 144, 1, 1]" = convolution_backward_122[1];  convolution_backward_122 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1986: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_96, getitem_1016);  where_96 = getitem_1016 = None
    add_1987: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(getitem_998, where_100);  getitem_998 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_2807: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_603, 0);  squeeze_603 = None
    unsqueeze_2808: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2807, 2);  unsqueeze_2807 = None
    unsqueeze_2809: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2808, 3);  unsqueeze_2808 = None
    sum_252: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_100, [0, 2, 3])
    sub_817: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_201, unsqueeze_2809)
    mul_3506: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_100, sub_817);  sub_817 = None
    sum_253: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3506, [0, 2, 3]);  mul_3506 = None
    mul_3507: "f32[72]" = torch.ops.aten.mul.Tensor(sum_252, 0.0006377551020408163)
    unsqueeze_2810: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3507, 0);  mul_3507 = None
    unsqueeze_2811: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2810, 2);  unsqueeze_2810 = None
    unsqueeze_2812: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2811, 3);  unsqueeze_2811 = None
    mul_3508: "f32[72]" = torch.ops.aten.mul.Tensor(sum_253, 0.0006377551020408163)
    mul_3509: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_604, squeeze_604)
    mul_3510: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3508, mul_3509);  mul_3508 = mul_3509 = None
    unsqueeze_2813: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3510, 0);  mul_3510 = None
    unsqueeze_2814: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2813, 2);  unsqueeze_2813 = None
    unsqueeze_2815: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2814, 3);  unsqueeze_2814 = None
    mul_3511: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_604, primals_605);  primals_605 = None
    unsqueeze_2816: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3511, 0);  mul_3511 = None
    unsqueeze_2817: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2816, 2);  unsqueeze_2816 = None
    unsqueeze_2818: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2817, 3);  unsqueeze_2817 = None
    sub_818: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_201, unsqueeze_2809);  convolution_201 = unsqueeze_2809 = None
    mul_3512: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_818, unsqueeze_2815);  sub_818 = unsqueeze_2815 = None
    sub_819: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_100, mul_3512);  mul_3512 = None
    sub_820: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_819, unsqueeze_2812);  sub_819 = unsqueeze_2812 = None
    mul_3513: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_820, unsqueeze_2818);  sub_820 = unsqueeze_2818 = None
    mul_3514: "f32[72]" = torch.ops.aten.mul.Tensor(sum_253, squeeze_604);  sum_253 = squeeze_604 = None
    convolution_backward_123 = torch.ops.aten.convolution_backward.default(mul_3513, relu_163, primals_604, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3513 = primals_604 = None
    getitem_1019: "f32[8, 36, 28, 28]" = convolution_backward_123[0]
    getitem_1020: "f32[72, 36, 3, 3]" = convolution_backward_123[1];  convolution_backward_123 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1988: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_1004, getitem_1019);  getitem_1004 = getitem_1019 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2819: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_600, 0);  squeeze_600 = None
    unsqueeze_2820: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2819, 2);  unsqueeze_2819 = None
    unsqueeze_2821: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2820, 3);  unsqueeze_2820 = None
    sum_254: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_100, [0, 2, 3])
    sub_821: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_200, unsqueeze_2821)
    mul_3515: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_100, sub_821);  sub_821 = None
    sum_255: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3515, [0, 2, 3]);  mul_3515 = None
    mul_3516: "f32[72]" = torch.ops.aten.mul.Tensor(sum_254, 0.0006377551020408163)
    unsqueeze_2822: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3516, 0);  mul_3516 = None
    unsqueeze_2823: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2822, 2);  unsqueeze_2822 = None
    unsqueeze_2824: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2823, 3);  unsqueeze_2823 = None
    mul_3517: "f32[72]" = torch.ops.aten.mul.Tensor(sum_255, 0.0006377551020408163)
    mul_3518: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_601, squeeze_601)
    mul_3519: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3517, mul_3518);  mul_3517 = mul_3518 = None
    unsqueeze_2825: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3519, 0);  mul_3519 = None
    unsqueeze_2826: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2825, 2);  unsqueeze_2825 = None
    unsqueeze_2827: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2826, 3);  unsqueeze_2826 = None
    mul_3520: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_601, primals_602);  primals_602 = None
    unsqueeze_2828: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3520, 0);  mul_3520 = None
    unsqueeze_2829: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2828, 2);  unsqueeze_2828 = None
    unsqueeze_2830: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2829, 3);  unsqueeze_2829 = None
    sub_822: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_200, unsqueeze_2821);  convolution_200 = unsqueeze_2821 = None
    mul_3521: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_822, unsqueeze_2827);  sub_822 = unsqueeze_2827 = None
    sub_823: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_100, mul_3521);  where_100 = mul_3521 = None
    sub_824: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_823, unsqueeze_2824);  sub_823 = unsqueeze_2824 = None
    mul_3522: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_824, unsqueeze_2830);  sub_824 = unsqueeze_2830 = None
    mul_3523: "f32[72]" = torch.ops.aten.mul.Tensor(sum_255, squeeze_601);  sum_255 = squeeze_601 = None
    convolution_backward_124 = torch.ops.aten.convolution_backward.default(mul_3522, relu_182, primals_601, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3522 = relu_182 = primals_601 = None
    getitem_1022: "f32[8, 18, 28, 28]" = convolution_backward_124[0]
    getitem_1023: "f32[72, 18, 3, 3]" = convolution_backward_124[1];  convolution_backward_124 = None
    alias_545: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_182);  alias_182 = None
    le_101: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_545, 0);  alias_545 = None
    scalar_tensor_101: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_101: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_101, scalar_tensor_101, getitem_1022);  le_101 = scalar_tensor_101 = getitem_1022 = None
    unsqueeze_2831: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_597, 0);  squeeze_597 = None
    unsqueeze_2832: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2831, 2);  unsqueeze_2831 = None
    unsqueeze_2833: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2832, 3);  unsqueeze_2832 = None
    sum_256: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_101, [0, 2, 3])
    sub_825: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_199, unsqueeze_2833)
    mul_3524: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_101, sub_825);  sub_825 = None
    sum_257: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3524, [0, 2, 3]);  mul_3524 = None
    mul_3525: "f32[18]" = torch.ops.aten.mul.Tensor(sum_256, 0.00015943877551020407)
    unsqueeze_2834: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3525, 0);  mul_3525 = None
    unsqueeze_2835: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2834, 2);  unsqueeze_2834 = None
    unsqueeze_2836: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2835, 3);  unsqueeze_2835 = None
    mul_3526: "f32[18]" = torch.ops.aten.mul.Tensor(sum_257, 0.00015943877551020407)
    mul_3527: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_598, squeeze_598)
    mul_3528: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3526, mul_3527);  mul_3526 = mul_3527 = None
    unsqueeze_2837: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3528, 0);  mul_3528 = None
    unsqueeze_2838: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2837, 2);  unsqueeze_2837 = None
    unsqueeze_2839: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2838, 3);  unsqueeze_2838 = None
    mul_3529: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_598, primals_599);  primals_599 = None
    unsqueeze_2840: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3529, 0);  mul_3529 = None
    unsqueeze_2841: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2840, 2);  unsqueeze_2840 = None
    unsqueeze_2842: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2841, 3);  unsqueeze_2841 = None
    sub_826: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_199, unsqueeze_2833);  convolution_199 = unsqueeze_2833 = None
    mul_3530: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_826, unsqueeze_2839);  sub_826 = unsqueeze_2839 = None
    sub_827: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_101, mul_3530);  where_101 = mul_3530 = None
    sub_828: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_827, unsqueeze_2836);  sub_827 = unsqueeze_2836 = None
    mul_3531: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_828, unsqueeze_2842);  sub_828 = unsqueeze_2842 = None
    mul_3532: "f32[18]" = torch.ops.aten.mul.Tensor(sum_257, squeeze_598);  sum_257 = squeeze_598 = None
    convolution_backward_125 = torch.ops.aten.convolution_backward.default(mul_3531, relu_155, primals_598, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3531 = primals_598 = None
    getitem_1025: "f32[8, 18, 56, 56]" = convolution_backward_125[0]
    getitem_1026: "f32[18, 18, 3, 3]" = convolution_backward_125[1];  convolution_backward_125 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1989: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1013, getitem_1025);  getitem_1013 = getitem_1025 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_546: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_181);  alias_181 = None
    le_102: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_546, 0);  alias_546 = None
    scalar_tensor_102: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_102: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_102, scalar_tensor_102, add_1981);  le_102 = scalar_tensor_102 = add_1981 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_13: "f32[8, 36, 7, 7]" = torch.ops.aten.full.default([8, 36, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_13: "f32[8, 36, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_13, [None, None, unsqueeze_813, convert_element_type_71], where_102, True);  full_13 = unsqueeze_813 = convert_element_type_71 = None
    unsqueeze_2843: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_594, 0);  squeeze_594 = None
    unsqueeze_2844: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2843, 2);  unsqueeze_2843 = None
    unsqueeze_2845: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2844, 3);  unsqueeze_2844 = None
    sum_258: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_13, [0, 2, 3])
    sub_829: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_198, unsqueeze_2845)
    mul_3533: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_13, sub_829);  sub_829 = None
    sum_259: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3533, [0, 2, 3]);  mul_3533 = None
    mul_3534: "f32[36]" = torch.ops.aten.mul.Tensor(sum_258, 0.002551020408163265)
    unsqueeze_2846: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3534, 0);  mul_3534 = None
    unsqueeze_2847: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2846, 2);  unsqueeze_2846 = None
    unsqueeze_2848: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2847, 3);  unsqueeze_2847 = None
    mul_3535: "f32[36]" = torch.ops.aten.mul.Tensor(sum_259, 0.002551020408163265)
    mul_3536: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_595, squeeze_595)
    mul_3537: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3535, mul_3536);  mul_3535 = mul_3536 = None
    unsqueeze_2849: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3537, 0);  mul_3537 = None
    unsqueeze_2850: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2849, 2);  unsqueeze_2849 = None
    unsqueeze_2851: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2850, 3);  unsqueeze_2850 = None
    mul_3538: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_595, primals_596);  primals_596 = None
    unsqueeze_2852: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3538, 0);  mul_3538 = None
    unsqueeze_2853: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2852, 2);  unsqueeze_2852 = None
    unsqueeze_2854: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2853, 3);  unsqueeze_2853 = None
    sub_830: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_198, unsqueeze_2845);  convolution_198 = unsqueeze_2845 = None
    mul_3539: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_830, unsqueeze_2851);  sub_830 = unsqueeze_2851 = None
    sub_831: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_13, mul_3539);  _unsafe_index_put_13 = mul_3539 = None
    sub_832: "f32[8, 36, 7, 7]" = torch.ops.aten.sub.Tensor(sub_831, unsqueeze_2848);  sub_831 = unsqueeze_2848 = None
    mul_3540: "f32[8, 36, 7, 7]" = torch.ops.aten.mul.Tensor(sub_832, unsqueeze_2854);  sub_832 = unsqueeze_2854 = None
    mul_3541: "f32[36]" = torch.ops.aten.mul.Tensor(sum_259, squeeze_595);  sum_259 = squeeze_595 = None
    convolution_backward_126 = torch.ops.aten.convolution_backward.default(mul_3540, relu_179, primals_595, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3540 = primals_595 = None
    getitem_1028: "f32[8, 144, 7, 7]" = convolution_backward_126[0]
    getitem_1029: "f32[36, 144, 1, 1]" = convolution_backward_126[1];  convolution_backward_126 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1990: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1986, getitem_1028);  add_1986 = getitem_1028 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_14: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_14: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_14, [None, None, unsqueeze_808, convert_element_type_67], where_102, True);  full_14 = unsqueeze_808 = convert_element_type_67 = None
    unsqueeze_2855: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_591, 0);  squeeze_591 = None
    unsqueeze_2856: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2855, 2);  unsqueeze_2855 = None
    unsqueeze_2857: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2856, 3);  unsqueeze_2856 = None
    sum_260: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_14, [0, 2, 3])
    sub_833: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_197, unsqueeze_2857)
    mul_3542: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_14, sub_833);  sub_833 = None
    sum_261: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3542, [0, 2, 3]);  mul_3542 = None
    mul_3543: "f32[36]" = torch.ops.aten.mul.Tensor(sum_260, 0.0006377551020408163)
    unsqueeze_2858: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3543, 0);  mul_3543 = None
    unsqueeze_2859: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2858, 2);  unsqueeze_2858 = None
    unsqueeze_2860: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2859, 3);  unsqueeze_2859 = None
    mul_3544: "f32[36]" = torch.ops.aten.mul.Tensor(sum_261, 0.0006377551020408163)
    mul_3545: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_592, squeeze_592)
    mul_3546: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3544, mul_3545);  mul_3544 = mul_3545 = None
    unsqueeze_2861: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3546, 0);  mul_3546 = None
    unsqueeze_2862: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2861, 2);  unsqueeze_2861 = None
    unsqueeze_2863: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2862, 3);  unsqueeze_2862 = None
    mul_3547: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_592, primals_593);  primals_593 = None
    unsqueeze_2864: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3547, 0);  mul_3547 = None
    unsqueeze_2865: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2864, 2);  unsqueeze_2864 = None
    unsqueeze_2866: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2865, 3);  unsqueeze_2865 = None
    sub_834: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_197, unsqueeze_2857);  convolution_197 = unsqueeze_2857 = None
    mul_3548: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_834, unsqueeze_2863);  sub_834 = unsqueeze_2863 = None
    sub_835: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_14, mul_3548);  _unsafe_index_put_14 = mul_3548 = None
    sub_836: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_835, unsqueeze_2860);  sub_835 = unsqueeze_2860 = None
    mul_3549: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_836, unsqueeze_2866);  sub_836 = unsqueeze_2866 = None
    mul_3550: "f32[36]" = torch.ops.aten.mul.Tensor(sum_261, squeeze_592);  sum_261 = squeeze_592 = None
    convolution_backward_127 = torch.ops.aten.convolution_backward.default(mul_3549, relu_171, primals_592, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3549 = primals_592 = None
    getitem_1031: "f32[8, 72, 14, 14]" = convolution_backward_127[0]
    getitem_1032: "f32[36, 72, 1, 1]" = convolution_backward_127[1];  convolution_backward_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1991: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1987, getitem_1031);  add_1987 = getitem_1031 = None
    add_1992: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1988, where_102);  add_1988 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_2867: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_588, 0);  squeeze_588 = None
    unsqueeze_2868: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2867, 2);  unsqueeze_2867 = None
    unsqueeze_2869: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2868, 3);  unsqueeze_2868 = None
    sum_262: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_102, [0, 2, 3])
    sub_837: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_196, unsqueeze_2869)
    mul_3551: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_102, sub_837);  sub_837 = None
    sum_263: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3551, [0, 2, 3]);  mul_3551 = None
    mul_3552: "f32[36]" = torch.ops.aten.mul.Tensor(sum_262, 0.00015943877551020407)
    unsqueeze_2870: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3552, 0);  mul_3552 = None
    unsqueeze_2871: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2870, 2);  unsqueeze_2870 = None
    unsqueeze_2872: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2871, 3);  unsqueeze_2871 = None
    mul_3553: "f32[36]" = torch.ops.aten.mul.Tensor(sum_263, 0.00015943877551020407)
    mul_3554: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_589, squeeze_589)
    mul_3555: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3553, mul_3554);  mul_3553 = mul_3554 = None
    unsqueeze_2873: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3555, 0);  mul_3555 = None
    unsqueeze_2874: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2873, 2);  unsqueeze_2873 = None
    unsqueeze_2875: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2874, 3);  unsqueeze_2874 = None
    mul_3556: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_589, primals_590);  primals_590 = None
    unsqueeze_2876: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3556, 0);  mul_3556 = None
    unsqueeze_2877: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2876, 2);  unsqueeze_2876 = None
    unsqueeze_2878: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2877, 3);  unsqueeze_2877 = None
    sub_838: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_196, unsqueeze_2869);  convolution_196 = unsqueeze_2869 = None
    mul_3557: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_838, unsqueeze_2875);  sub_838 = unsqueeze_2875 = None
    sub_839: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_102, mul_3557);  where_102 = mul_3557 = None
    sub_840: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_839, unsqueeze_2872);  sub_839 = unsqueeze_2872 = None
    mul_3558: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_840, unsqueeze_2878);  sub_840 = unsqueeze_2878 = None
    mul_3559: "f32[36]" = torch.ops.aten.mul.Tensor(sum_263, squeeze_589);  sum_263 = squeeze_589 = None
    convolution_backward_128 = torch.ops.aten.convolution_backward.default(mul_3558, relu_155, primals_589, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3558 = primals_589 = None
    getitem_1034: "f32[8, 18, 56, 56]" = convolution_backward_128[0]
    getitem_1035: "f32[36, 18, 3, 3]" = convolution_backward_128[1];  convolution_backward_128 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_1993: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1989, getitem_1034);  add_1989 = getitem_1034 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_547: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_180);  alias_180 = None
    le_103: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_547, 0);  alias_547 = None
    scalar_tensor_103: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_103: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_103, scalar_tensor_103, add_1985);  le_103 = scalar_tensor_103 = add_1985 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_15: "f32[8, 18, 7, 7]" = torch.ops.aten.full.default([8, 18, 7, 7], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_15: "f32[8, 18, 7, 7]" = torch.ops.aten._unsafe_index_put.default(full_15, [None, None, unsqueeze_799, convert_element_type_63], where_103, True);  full_15 = unsqueeze_799 = convert_element_type_63 = None
    unsqueeze_2879: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_585, 0);  squeeze_585 = None
    unsqueeze_2880: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2879, 2);  unsqueeze_2879 = None
    unsqueeze_2881: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2880, 3);  unsqueeze_2880 = None
    sum_264: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_15, [0, 2, 3])
    sub_841: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_195, unsqueeze_2881)
    mul_3560: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_15, sub_841);  sub_841 = None
    sum_265: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3560, [0, 2, 3]);  mul_3560 = None
    mul_3561: "f32[18]" = torch.ops.aten.mul.Tensor(sum_264, 0.002551020408163265)
    unsqueeze_2882: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3561, 0);  mul_3561 = None
    unsqueeze_2883: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2882, 2);  unsqueeze_2882 = None
    unsqueeze_2884: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2883, 3);  unsqueeze_2883 = None
    mul_3562: "f32[18]" = torch.ops.aten.mul.Tensor(sum_265, 0.002551020408163265)
    mul_3563: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_586, squeeze_586)
    mul_3564: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3562, mul_3563);  mul_3562 = mul_3563 = None
    unsqueeze_2885: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3564, 0);  mul_3564 = None
    unsqueeze_2886: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2885, 2);  unsqueeze_2885 = None
    unsqueeze_2887: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2886, 3);  unsqueeze_2886 = None
    mul_3565: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_586, primals_587);  primals_587 = None
    unsqueeze_2888: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3565, 0);  mul_3565 = None
    unsqueeze_2889: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2888, 2);  unsqueeze_2888 = None
    unsqueeze_2890: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2889, 3);  unsqueeze_2889 = None
    sub_842: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_195, unsqueeze_2881);  convolution_195 = unsqueeze_2881 = None
    mul_3566: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_842, unsqueeze_2887);  sub_842 = unsqueeze_2887 = None
    sub_843: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_15, mul_3566);  _unsafe_index_put_15 = mul_3566 = None
    sub_844: "f32[8, 18, 7, 7]" = torch.ops.aten.sub.Tensor(sub_843, unsqueeze_2884);  sub_843 = unsqueeze_2884 = None
    mul_3567: "f32[8, 18, 7, 7]" = torch.ops.aten.mul.Tensor(sub_844, unsqueeze_2890);  sub_844 = unsqueeze_2890 = None
    mul_3568: "f32[18]" = torch.ops.aten.mul.Tensor(sum_265, squeeze_586);  sum_265 = squeeze_586 = None
    convolution_backward_129 = torch.ops.aten.convolution_backward.default(mul_3567, relu_179, primals_586, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3567 = primals_586 = None
    getitem_1037: "f32[8, 144, 7, 7]" = convolution_backward_129[0]
    getitem_1038: "f32[18, 144, 1, 1]" = convolution_backward_129[1];  convolution_backward_129 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1994: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(add_1990, getitem_1037);  add_1990 = getitem_1037 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_16: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_16: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_16, [None, None, unsqueeze_794, convert_element_type_59], where_103, True);  full_16 = unsqueeze_794 = convert_element_type_59 = None
    unsqueeze_2891: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_582, 0);  squeeze_582 = None
    unsqueeze_2892: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2891, 2);  unsqueeze_2891 = None
    unsqueeze_2893: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2892, 3);  unsqueeze_2892 = None
    sum_266: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_16, [0, 2, 3])
    sub_845: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_194, unsqueeze_2893)
    mul_3569: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_16, sub_845);  sub_845 = None
    sum_267: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3569, [0, 2, 3]);  mul_3569 = None
    mul_3570: "f32[18]" = torch.ops.aten.mul.Tensor(sum_266, 0.0006377551020408163)
    unsqueeze_2894: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3570, 0);  mul_3570 = None
    unsqueeze_2895: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2894, 2);  unsqueeze_2894 = None
    unsqueeze_2896: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2895, 3);  unsqueeze_2895 = None
    mul_3571: "f32[18]" = torch.ops.aten.mul.Tensor(sum_267, 0.0006377551020408163)
    mul_3572: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_583, squeeze_583)
    mul_3573: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3571, mul_3572);  mul_3571 = mul_3572 = None
    unsqueeze_2897: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3573, 0);  mul_3573 = None
    unsqueeze_2898: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2897, 2);  unsqueeze_2897 = None
    unsqueeze_2899: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2898, 3);  unsqueeze_2898 = None
    mul_3574: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_583, primals_584);  primals_584 = None
    unsqueeze_2900: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3574, 0);  mul_3574 = None
    unsqueeze_2901: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2900, 2);  unsqueeze_2900 = None
    unsqueeze_2902: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2901, 3);  unsqueeze_2901 = None
    sub_846: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_194, unsqueeze_2893);  convolution_194 = unsqueeze_2893 = None
    mul_3575: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_846, unsqueeze_2899);  sub_846 = unsqueeze_2899 = None
    sub_847: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_16, mul_3575);  _unsafe_index_put_16 = mul_3575 = None
    sub_848: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_847, unsqueeze_2896);  sub_847 = unsqueeze_2896 = None
    mul_3576: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_848, unsqueeze_2902);  sub_848 = unsqueeze_2902 = None
    mul_3577: "f32[18]" = torch.ops.aten.mul.Tensor(sum_267, squeeze_583);  sum_267 = squeeze_583 = None
    convolution_backward_130 = torch.ops.aten.convolution_backward.default(mul_3576, relu_171, primals_583, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3576 = primals_583 = None
    getitem_1040: "f32[8, 72, 14, 14]" = convolution_backward_130[0]
    getitem_1041: "f32[18, 72, 1, 1]" = convolution_backward_130[1];  convolution_backward_130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1995: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_1991, getitem_1040);  add_1991 = getitem_1040 = None
    add_1996: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_1993, where_103);  add_1993 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_17: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_17: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_17, [None, None, unsqueeze_789, convert_element_type_55], where_103, True);  full_17 = unsqueeze_789 = convert_element_type_55 = where_103 = None
    unsqueeze_2903: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_579, 0);  squeeze_579 = None
    unsqueeze_2904: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2903, 2);  unsqueeze_2903 = None
    unsqueeze_2905: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2904, 3);  unsqueeze_2904 = None
    sum_268: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_17, [0, 2, 3])
    sub_849: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_193, unsqueeze_2905)
    mul_3578: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_17, sub_849);  sub_849 = None
    sum_269: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3578, [0, 2, 3]);  mul_3578 = None
    mul_3579: "f32[18]" = torch.ops.aten.mul.Tensor(sum_268, 0.00015943877551020407)
    unsqueeze_2906: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3579, 0);  mul_3579 = None
    unsqueeze_2907: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2906, 2);  unsqueeze_2906 = None
    unsqueeze_2908: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2907, 3);  unsqueeze_2907 = None
    mul_3580: "f32[18]" = torch.ops.aten.mul.Tensor(sum_269, 0.00015943877551020407)
    mul_3581: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_580, squeeze_580)
    mul_3582: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3580, mul_3581);  mul_3580 = mul_3581 = None
    unsqueeze_2909: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3582, 0);  mul_3582 = None
    unsqueeze_2910: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2909, 2);  unsqueeze_2909 = None
    unsqueeze_2911: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2910, 3);  unsqueeze_2910 = None
    mul_3583: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_580, primals_581);  primals_581 = None
    unsqueeze_2912: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3583, 0);  mul_3583 = None
    unsqueeze_2913: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2912, 2);  unsqueeze_2912 = None
    unsqueeze_2914: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2913, 3);  unsqueeze_2913 = None
    sub_850: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_193, unsqueeze_2905);  convolution_193 = unsqueeze_2905 = None
    mul_3584: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_850, unsqueeze_2911);  sub_850 = unsqueeze_2911 = None
    sub_851: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_17, mul_3584);  _unsafe_index_put_17 = mul_3584 = None
    sub_852: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_851, unsqueeze_2908);  sub_851 = unsqueeze_2908 = None
    mul_3585: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_852, unsqueeze_2914);  sub_852 = unsqueeze_2914 = None
    mul_3586: "f32[18]" = torch.ops.aten.mul.Tensor(sum_269, squeeze_580);  sum_269 = squeeze_580 = None
    convolution_backward_131 = torch.ops.aten.convolution_backward.default(mul_3585, relu_163, primals_580, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3585 = primals_580 = None
    getitem_1043: "f32[8, 36, 28, 28]" = convolution_backward_131[0]
    getitem_1044: "f32[18, 36, 1, 1]" = convolution_backward_131[1];  convolution_backward_131 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_1997: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_1992, getitem_1043);  add_1992 = getitem_1043 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_549: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_179);  relu_179 = None
    alias_550: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_549);  alias_549 = None
    le_104: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_550, 0);  alias_550 = None
    scalar_tensor_104: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_104: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_104, scalar_tensor_104, add_1994);  le_104 = scalar_tensor_104 = add_1994 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2915: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_576, 0);  squeeze_576 = None
    unsqueeze_2916: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2915, 2);  unsqueeze_2915 = None
    unsqueeze_2917: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2916, 3);  unsqueeze_2916 = None
    sum_270: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_104, [0, 2, 3])
    sub_853: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_192, unsqueeze_2917)
    mul_3587: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_104, sub_853);  sub_853 = None
    sum_271: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3587, [0, 2, 3]);  mul_3587 = None
    mul_3588: "f32[144]" = torch.ops.aten.mul.Tensor(sum_270, 0.002551020408163265)
    unsqueeze_2918: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3588, 0);  mul_3588 = None
    unsqueeze_2919: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2918, 2);  unsqueeze_2918 = None
    unsqueeze_2920: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2919, 3);  unsqueeze_2919 = None
    mul_3589: "f32[144]" = torch.ops.aten.mul.Tensor(sum_271, 0.002551020408163265)
    mul_3590: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_577, squeeze_577)
    mul_3591: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3589, mul_3590);  mul_3589 = mul_3590 = None
    unsqueeze_2921: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3591, 0);  mul_3591 = None
    unsqueeze_2922: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2921, 2);  unsqueeze_2921 = None
    unsqueeze_2923: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2922, 3);  unsqueeze_2922 = None
    mul_3592: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_577, primals_578);  primals_578 = None
    unsqueeze_2924: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3592, 0);  mul_3592 = None
    unsqueeze_2925: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2924, 2);  unsqueeze_2924 = None
    unsqueeze_2926: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2925, 3);  unsqueeze_2925 = None
    sub_854: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_192, unsqueeze_2917);  convolution_192 = unsqueeze_2917 = None
    mul_3593: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_854, unsqueeze_2923);  sub_854 = unsqueeze_2923 = None
    sub_855: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_104, mul_3593);  mul_3593 = None
    sub_856: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_855, unsqueeze_2920);  sub_855 = unsqueeze_2920 = None
    mul_3594: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_856, unsqueeze_2926);  sub_856 = unsqueeze_2926 = None
    mul_3595: "f32[144]" = torch.ops.aten.mul.Tensor(sum_271, squeeze_577);  sum_271 = squeeze_577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_132 = torch.ops.aten.convolution_backward.default(mul_3594, relu_178, primals_577, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3594 = primals_577 = None
    getitem_1046: "f32[8, 144, 7, 7]" = convolution_backward_132[0]
    getitem_1047: "f32[144, 144, 3, 3]" = convolution_backward_132[1];  convolution_backward_132 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_552: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_178);  relu_178 = None
    alias_553: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_552);  alias_552 = None
    le_105: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_553, 0);  alias_553 = None
    scalar_tensor_105: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_105: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_105, scalar_tensor_105, getitem_1046);  le_105 = scalar_tensor_105 = getitem_1046 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2927: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_573, 0);  squeeze_573 = None
    unsqueeze_2928: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2927, 2);  unsqueeze_2927 = None
    unsqueeze_2929: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2928, 3);  unsqueeze_2928 = None
    sum_272: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_105, [0, 2, 3])
    sub_857: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_191, unsqueeze_2929)
    mul_3596: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_105, sub_857);  sub_857 = None
    sum_273: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3596, [0, 2, 3]);  mul_3596 = None
    mul_3597: "f32[144]" = torch.ops.aten.mul.Tensor(sum_272, 0.002551020408163265)
    unsqueeze_2930: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3597, 0);  mul_3597 = None
    unsqueeze_2931: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2930, 2);  unsqueeze_2930 = None
    unsqueeze_2932: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2931, 3);  unsqueeze_2931 = None
    mul_3598: "f32[144]" = torch.ops.aten.mul.Tensor(sum_273, 0.002551020408163265)
    mul_3599: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_574, squeeze_574)
    mul_3600: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3598, mul_3599);  mul_3598 = mul_3599 = None
    unsqueeze_2933: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3600, 0);  mul_3600 = None
    unsqueeze_2934: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2933, 2);  unsqueeze_2933 = None
    unsqueeze_2935: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2934, 3);  unsqueeze_2934 = None
    mul_3601: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_574, primals_575);  primals_575 = None
    unsqueeze_2936: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3601, 0);  mul_3601 = None
    unsqueeze_2937: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2936, 2);  unsqueeze_2936 = None
    unsqueeze_2938: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2937, 3);  unsqueeze_2937 = None
    sub_858: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_191, unsqueeze_2929);  convolution_191 = unsqueeze_2929 = None
    mul_3602: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_858, unsqueeze_2935);  sub_858 = unsqueeze_2935 = None
    sub_859: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_105, mul_3602);  where_105 = mul_3602 = None
    sub_860: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_859, unsqueeze_2932);  sub_859 = unsqueeze_2932 = None
    mul_3603: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_860, unsqueeze_2938);  sub_860 = unsqueeze_2938 = None
    mul_3604: "f32[144]" = torch.ops.aten.mul.Tensor(sum_273, squeeze_574);  sum_273 = squeeze_574 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_133 = torch.ops.aten.convolution_backward.default(mul_3603, relu_177, primals_574, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3603 = primals_574 = None
    getitem_1049: "f32[8, 144, 7, 7]" = convolution_backward_133[0]
    getitem_1050: "f32[144, 144, 3, 3]" = convolution_backward_133[1];  convolution_backward_133 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1998: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_104, getitem_1049);  where_104 = getitem_1049 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_555: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_177);  relu_177 = None
    alias_556: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_555);  alias_555 = None
    le_106: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_556, 0);  alias_556 = None
    scalar_tensor_106: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_106: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_106, scalar_tensor_106, add_1998);  le_106 = scalar_tensor_106 = add_1998 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2939: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_570, 0);  squeeze_570 = None
    unsqueeze_2940: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2939, 2);  unsqueeze_2939 = None
    unsqueeze_2941: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2940, 3);  unsqueeze_2940 = None
    sum_274: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_106, [0, 2, 3])
    sub_861: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_190, unsqueeze_2941)
    mul_3605: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_106, sub_861);  sub_861 = None
    sum_275: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3605, [0, 2, 3]);  mul_3605 = None
    mul_3606: "f32[144]" = torch.ops.aten.mul.Tensor(sum_274, 0.002551020408163265)
    unsqueeze_2942: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3606, 0);  mul_3606 = None
    unsqueeze_2943: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2942, 2);  unsqueeze_2942 = None
    unsqueeze_2944: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2943, 3);  unsqueeze_2943 = None
    mul_3607: "f32[144]" = torch.ops.aten.mul.Tensor(sum_275, 0.002551020408163265)
    mul_3608: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_571, squeeze_571)
    mul_3609: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3607, mul_3608);  mul_3607 = mul_3608 = None
    unsqueeze_2945: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3609, 0);  mul_3609 = None
    unsqueeze_2946: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2945, 2);  unsqueeze_2945 = None
    unsqueeze_2947: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2946, 3);  unsqueeze_2946 = None
    mul_3610: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_571, primals_572);  primals_572 = None
    unsqueeze_2948: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3610, 0);  mul_3610 = None
    unsqueeze_2949: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2948, 2);  unsqueeze_2948 = None
    unsqueeze_2950: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2949, 3);  unsqueeze_2949 = None
    sub_862: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_190, unsqueeze_2941);  convolution_190 = unsqueeze_2941 = None
    mul_3611: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_862, unsqueeze_2947);  sub_862 = unsqueeze_2947 = None
    sub_863: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_106, mul_3611);  mul_3611 = None
    sub_864: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_863, unsqueeze_2944);  sub_863 = unsqueeze_2944 = None
    mul_3612: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_864, unsqueeze_2950);  sub_864 = unsqueeze_2950 = None
    mul_3613: "f32[144]" = torch.ops.aten.mul.Tensor(sum_275, squeeze_571);  sum_275 = squeeze_571 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_134 = torch.ops.aten.convolution_backward.default(mul_3612, relu_176, primals_571, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3612 = primals_571 = None
    getitem_1052: "f32[8, 144, 7, 7]" = convolution_backward_134[0]
    getitem_1053: "f32[144, 144, 3, 3]" = convolution_backward_134[1];  convolution_backward_134 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_558: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_176);  relu_176 = None
    alias_559: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_558);  alias_558 = None
    le_107: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_559, 0);  alias_559 = None
    scalar_tensor_107: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_107: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_107, scalar_tensor_107, getitem_1052);  le_107 = scalar_tensor_107 = getitem_1052 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2951: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_567, 0);  squeeze_567 = None
    unsqueeze_2952: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2951, 2);  unsqueeze_2951 = None
    unsqueeze_2953: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2952, 3);  unsqueeze_2952 = None
    sum_276: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_107, [0, 2, 3])
    sub_865: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_189, unsqueeze_2953)
    mul_3614: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_107, sub_865);  sub_865 = None
    sum_277: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3614, [0, 2, 3]);  mul_3614 = None
    mul_3615: "f32[144]" = torch.ops.aten.mul.Tensor(sum_276, 0.002551020408163265)
    unsqueeze_2954: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3615, 0);  mul_3615 = None
    unsqueeze_2955: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2954, 2);  unsqueeze_2954 = None
    unsqueeze_2956: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2955, 3);  unsqueeze_2955 = None
    mul_3616: "f32[144]" = torch.ops.aten.mul.Tensor(sum_277, 0.002551020408163265)
    mul_3617: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_568, squeeze_568)
    mul_3618: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3616, mul_3617);  mul_3616 = mul_3617 = None
    unsqueeze_2957: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3618, 0);  mul_3618 = None
    unsqueeze_2958: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2957, 2);  unsqueeze_2957 = None
    unsqueeze_2959: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2958, 3);  unsqueeze_2958 = None
    mul_3619: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_568, primals_569);  primals_569 = None
    unsqueeze_2960: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3619, 0);  mul_3619 = None
    unsqueeze_2961: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2960, 2);  unsqueeze_2960 = None
    unsqueeze_2962: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2961, 3);  unsqueeze_2961 = None
    sub_866: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_189, unsqueeze_2953);  convolution_189 = unsqueeze_2953 = None
    mul_3620: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_866, unsqueeze_2959);  sub_866 = unsqueeze_2959 = None
    sub_867: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_107, mul_3620);  where_107 = mul_3620 = None
    sub_868: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_867, unsqueeze_2956);  sub_867 = unsqueeze_2956 = None
    mul_3621: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_868, unsqueeze_2962);  sub_868 = unsqueeze_2962 = None
    mul_3622: "f32[144]" = torch.ops.aten.mul.Tensor(sum_277, squeeze_568);  sum_277 = squeeze_568 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_135 = torch.ops.aten.convolution_backward.default(mul_3621, relu_175, primals_568, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3621 = primals_568 = None
    getitem_1055: "f32[8, 144, 7, 7]" = convolution_backward_135[0]
    getitem_1056: "f32[144, 144, 3, 3]" = convolution_backward_135[1];  convolution_backward_135 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_1999: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_106, getitem_1055);  where_106 = getitem_1055 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_561: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_175);  relu_175 = None
    alias_562: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_561);  alias_561 = None
    le_108: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_562, 0);  alias_562 = None
    scalar_tensor_108: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_108: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_108, scalar_tensor_108, add_1999);  le_108 = scalar_tensor_108 = add_1999 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2963: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_564, 0);  squeeze_564 = None
    unsqueeze_2964: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2963, 2);  unsqueeze_2963 = None
    unsqueeze_2965: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2964, 3);  unsqueeze_2964 = None
    sum_278: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_108, [0, 2, 3])
    sub_869: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_188, unsqueeze_2965)
    mul_3623: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_108, sub_869);  sub_869 = None
    sum_279: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3623, [0, 2, 3]);  mul_3623 = None
    mul_3624: "f32[144]" = torch.ops.aten.mul.Tensor(sum_278, 0.002551020408163265)
    unsqueeze_2966: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3624, 0);  mul_3624 = None
    unsqueeze_2967: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2966, 2);  unsqueeze_2966 = None
    unsqueeze_2968: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2967, 3);  unsqueeze_2967 = None
    mul_3625: "f32[144]" = torch.ops.aten.mul.Tensor(sum_279, 0.002551020408163265)
    mul_3626: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_565, squeeze_565)
    mul_3627: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3625, mul_3626);  mul_3625 = mul_3626 = None
    unsqueeze_2969: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3627, 0);  mul_3627 = None
    unsqueeze_2970: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2969, 2);  unsqueeze_2969 = None
    unsqueeze_2971: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2970, 3);  unsqueeze_2970 = None
    mul_3628: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_565, primals_566);  primals_566 = None
    unsqueeze_2972: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3628, 0);  mul_3628 = None
    unsqueeze_2973: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2972, 2);  unsqueeze_2972 = None
    unsqueeze_2974: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2973, 3);  unsqueeze_2973 = None
    sub_870: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_188, unsqueeze_2965);  convolution_188 = unsqueeze_2965 = None
    mul_3629: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_870, unsqueeze_2971);  sub_870 = unsqueeze_2971 = None
    sub_871: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_108, mul_3629);  mul_3629 = None
    sub_872: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_871, unsqueeze_2968);  sub_871 = unsqueeze_2968 = None
    mul_3630: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_872, unsqueeze_2974);  sub_872 = unsqueeze_2974 = None
    mul_3631: "f32[144]" = torch.ops.aten.mul.Tensor(sum_279, squeeze_565);  sum_279 = squeeze_565 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_136 = torch.ops.aten.convolution_backward.default(mul_3630, relu_174, primals_565, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3630 = primals_565 = None
    getitem_1058: "f32[8, 144, 7, 7]" = convolution_backward_136[0]
    getitem_1059: "f32[144, 144, 3, 3]" = convolution_backward_136[1];  convolution_backward_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_564: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_174);  relu_174 = None
    alias_565: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_564);  alias_564 = None
    le_109: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_565, 0);  alias_565 = None
    scalar_tensor_109: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_109: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_109, scalar_tensor_109, getitem_1058);  le_109 = scalar_tensor_109 = getitem_1058 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2975: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_561, 0);  squeeze_561 = None
    unsqueeze_2976: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2975, 2);  unsqueeze_2975 = None
    unsqueeze_2977: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2976, 3);  unsqueeze_2976 = None
    sum_280: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_109, [0, 2, 3])
    sub_873: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_187, unsqueeze_2977)
    mul_3632: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_109, sub_873);  sub_873 = None
    sum_281: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3632, [0, 2, 3]);  mul_3632 = None
    mul_3633: "f32[144]" = torch.ops.aten.mul.Tensor(sum_280, 0.002551020408163265)
    unsqueeze_2978: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3633, 0);  mul_3633 = None
    unsqueeze_2979: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2978, 2);  unsqueeze_2978 = None
    unsqueeze_2980: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2979, 3);  unsqueeze_2979 = None
    mul_3634: "f32[144]" = torch.ops.aten.mul.Tensor(sum_281, 0.002551020408163265)
    mul_3635: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_562, squeeze_562)
    mul_3636: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3634, mul_3635);  mul_3634 = mul_3635 = None
    unsqueeze_2981: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3636, 0);  mul_3636 = None
    unsqueeze_2982: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2981, 2);  unsqueeze_2981 = None
    unsqueeze_2983: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2982, 3);  unsqueeze_2982 = None
    mul_3637: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_562, primals_563);  primals_563 = None
    unsqueeze_2984: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3637, 0);  mul_3637 = None
    unsqueeze_2985: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2984, 2);  unsqueeze_2984 = None
    unsqueeze_2986: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2985, 3);  unsqueeze_2985 = None
    sub_874: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_187, unsqueeze_2977);  convolution_187 = unsqueeze_2977 = None
    mul_3638: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_874, unsqueeze_2983);  sub_874 = unsqueeze_2983 = None
    sub_875: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_109, mul_3638);  where_109 = mul_3638 = None
    sub_876: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_875, unsqueeze_2980);  sub_875 = unsqueeze_2980 = None
    mul_3639: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_876, unsqueeze_2986);  sub_876 = unsqueeze_2986 = None
    mul_3640: "f32[144]" = torch.ops.aten.mul.Tensor(sum_281, squeeze_562);  sum_281 = squeeze_562 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_137 = torch.ops.aten.convolution_backward.default(mul_3639, relu_173, primals_562, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3639 = primals_562 = None
    getitem_1061: "f32[8, 144, 7, 7]" = convolution_backward_137[0]
    getitem_1062: "f32[144, 144, 3, 3]" = convolution_backward_137[1];  convolution_backward_137 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2000: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_108, getitem_1061);  where_108 = getitem_1061 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_567: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_173);  relu_173 = None
    alias_568: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_567);  alias_567 = None
    le_110: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_568, 0);  alias_568 = None
    scalar_tensor_110: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_110: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_110, scalar_tensor_110, add_2000);  le_110 = scalar_tensor_110 = add_2000 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_2987: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_558, 0);  squeeze_558 = None
    unsqueeze_2988: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2987, 2);  unsqueeze_2987 = None
    unsqueeze_2989: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2988, 3);  unsqueeze_2988 = None
    sum_282: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_110, [0, 2, 3])
    sub_877: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_186, unsqueeze_2989)
    mul_3641: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_110, sub_877);  sub_877 = None
    sum_283: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3641, [0, 2, 3]);  mul_3641 = None
    mul_3642: "f32[144]" = torch.ops.aten.mul.Tensor(sum_282, 0.002551020408163265)
    unsqueeze_2990: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3642, 0);  mul_3642 = None
    unsqueeze_2991: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2990, 2);  unsqueeze_2990 = None
    unsqueeze_2992: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2991, 3);  unsqueeze_2991 = None
    mul_3643: "f32[144]" = torch.ops.aten.mul.Tensor(sum_283, 0.002551020408163265)
    mul_3644: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_559, squeeze_559)
    mul_3645: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3643, mul_3644);  mul_3643 = mul_3644 = None
    unsqueeze_2993: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3645, 0);  mul_3645 = None
    unsqueeze_2994: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2993, 2);  unsqueeze_2993 = None
    unsqueeze_2995: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2994, 3);  unsqueeze_2994 = None
    mul_3646: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_559, primals_560);  primals_560 = None
    unsqueeze_2996: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3646, 0);  mul_3646 = None
    unsqueeze_2997: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2996, 2);  unsqueeze_2996 = None
    unsqueeze_2998: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2997, 3);  unsqueeze_2997 = None
    sub_878: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_186, unsqueeze_2989);  convolution_186 = unsqueeze_2989 = None
    mul_3647: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_878, unsqueeze_2995);  sub_878 = unsqueeze_2995 = None
    sub_879: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_110, mul_3647);  mul_3647 = None
    sub_880: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_879, unsqueeze_2992);  sub_879 = unsqueeze_2992 = None
    mul_3648: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_880, unsqueeze_2998);  sub_880 = unsqueeze_2998 = None
    mul_3649: "f32[144]" = torch.ops.aten.mul.Tensor(sum_283, squeeze_559);  sum_283 = squeeze_559 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_138 = torch.ops.aten.convolution_backward.default(mul_3648, relu_172, primals_559, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3648 = primals_559 = None
    getitem_1064: "f32[8, 144, 7, 7]" = convolution_backward_138[0]
    getitem_1065: "f32[144, 144, 3, 3]" = convolution_backward_138[1];  convolution_backward_138 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_570: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_172);  relu_172 = None
    alias_571: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_570);  alias_570 = None
    le_111: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_571, 0);  alias_571 = None
    scalar_tensor_111: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_111: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_111, scalar_tensor_111, getitem_1064);  le_111 = scalar_tensor_111 = getitem_1064 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_2999: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_555, 0);  squeeze_555 = None
    unsqueeze_3000: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_2999, 2);  unsqueeze_2999 = None
    unsqueeze_3001: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3000, 3);  unsqueeze_3000 = None
    sum_284: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_111, [0, 2, 3])
    sub_881: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_185, unsqueeze_3001)
    mul_3650: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_111, sub_881);  sub_881 = None
    sum_285: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3650, [0, 2, 3]);  mul_3650 = None
    mul_3651: "f32[144]" = torch.ops.aten.mul.Tensor(sum_284, 0.002551020408163265)
    unsqueeze_3002: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3651, 0);  mul_3651 = None
    unsqueeze_3003: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3002, 2);  unsqueeze_3002 = None
    unsqueeze_3004: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3003, 3);  unsqueeze_3003 = None
    mul_3652: "f32[144]" = torch.ops.aten.mul.Tensor(sum_285, 0.002551020408163265)
    mul_3653: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_556, squeeze_556)
    mul_3654: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3652, mul_3653);  mul_3652 = mul_3653 = None
    unsqueeze_3005: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3654, 0);  mul_3654 = None
    unsqueeze_3006: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3005, 2);  unsqueeze_3005 = None
    unsqueeze_3007: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3006, 3);  unsqueeze_3006 = None
    mul_3655: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_556, primals_557);  primals_557 = None
    unsqueeze_3008: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3655, 0);  mul_3655 = None
    unsqueeze_3009: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3008, 2);  unsqueeze_3008 = None
    unsqueeze_3010: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3009, 3);  unsqueeze_3009 = None
    sub_882: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_185, unsqueeze_3001);  convolution_185 = unsqueeze_3001 = None
    mul_3656: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_882, unsqueeze_3007);  sub_882 = unsqueeze_3007 = None
    sub_883: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_111, mul_3656);  where_111 = mul_3656 = None
    sub_884: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_883, unsqueeze_3004);  sub_883 = unsqueeze_3004 = None
    mul_3657: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_884, unsqueeze_3010);  sub_884 = unsqueeze_3010 = None
    mul_3658: "f32[144]" = torch.ops.aten.mul.Tensor(sum_285, squeeze_556);  sum_285 = squeeze_556 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_139 = torch.ops.aten.convolution_backward.default(mul_3657, relu_147, primals_556, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3657 = primals_556 = None
    getitem_1067: "f32[8, 144, 7, 7]" = convolution_backward_139[0]
    getitem_1068: "f32[144, 144, 3, 3]" = convolution_backward_139[1];  convolution_backward_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2001: "f32[8, 144, 7, 7]" = torch.ops.aten.add.Tensor(where_110, getitem_1067);  where_110 = getitem_1067 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_573: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_171);  relu_171 = None
    alias_574: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_573);  alias_573 = None
    le_112: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_574, 0);  alias_574 = None
    scalar_tensor_112: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_112: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_112, scalar_tensor_112, add_1995);  le_112 = scalar_tensor_112 = add_1995 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3011: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_552, 0);  squeeze_552 = None
    unsqueeze_3012: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3011, 2);  unsqueeze_3011 = None
    unsqueeze_3013: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3012, 3);  unsqueeze_3012 = None
    sum_286: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_112, [0, 2, 3])
    sub_885: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_184, unsqueeze_3013)
    mul_3659: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_112, sub_885);  sub_885 = None
    sum_287: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3659, [0, 2, 3]);  mul_3659 = None
    mul_3660: "f32[72]" = torch.ops.aten.mul.Tensor(sum_286, 0.0006377551020408163)
    unsqueeze_3014: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3660, 0);  mul_3660 = None
    unsqueeze_3015: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3014, 2);  unsqueeze_3014 = None
    unsqueeze_3016: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3015, 3);  unsqueeze_3015 = None
    mul_3661: "f32[72]" = torch.ops.aten.mul.Tensor(sum_287, 0.0006377551020408163)
    mul_3662: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_553, squeeze_553)
    mul_3663: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3661, mul_3662);  mul_3661 = mul_3662 = None
    unsqueeze_3017: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3663, 0);  mul_3663 = None
    unsqueeze_3018: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3017, 2);  unsqueeze_3017 = None
    unsqueeze_3019: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3018, 3);  unsqueeze_3018 = None
    mul_3664: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_553, primals_554);  primals_554 = None
    unsqueeze_3020: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3664, 0);  mul_3664 = None
    unsqueeze_3021: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3020, 2);  unsqueeze_3020 = None
    unsqueeze_3022: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3021, 3);  unsqueeze_3021 = None
    sub_886: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_184, unsqueeze_3013);  convolution_184 = unsqueeze_3013 = None
    mul_3665: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_886, unsqueeze_3019);  sub_886 = unsqueeze_3019 = None
    sub_887: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_112, mul_3665);  mul_3665 = None
    sub_888: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_887, unsqueeze_3016);  sub_887 = unsqueeze_3016 = None
    mul_3666: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_888, unsqueeze_3022);  sub_888 = unsqueeze_3022 = None
    mul_3667: "f32[72]" = torch.ops.aten.mul.Tensor(sum_287, squeeze_553);  sum_287 = squeeze_553 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_140 = torch.ops.aten.convolution_backward.default(mul_3666, relu_170, primals_553, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3666 = primals_553 = None
    getitem_1070: "f32[8, 72, 14, 14]" = convolution_backward_140[0]
    getitem_1071: "f32[72, 72, 3, 3]" = convolution_backward_140[1];  convolution_backward_140 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_576: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_170);  relu_170 = None
    alias_577: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_576);  alias_576 = None
    le_113: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_577, 0);  alias_577 = None
    scalar_tensor_113: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_113: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_113, scalar_tensor_113, getitem_1070);  le_113 = scalar_tensor_113 = getitem_1070 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3023: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_549, 0);  squeeze_549 = None
    unsqueeze_3024: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3023, 2);  unsqueeze_3023 = None
    unsqueeze_3025: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3024, 3);  unsqueeze_3024 = None
    sum_288: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_113, [0, 2, 3])
    sub_889: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_183, unsqueeze_3025)
    mul_3668: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_113, sub_889);  sub_889 = None
    sum_289: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3668, [0, 2, 3]);  mul_3668 = None
    mul_3669: "f32[72]" = torch.ops.aten.mul.Tensor(sum_288, 0.0006377551020408163)
    unsqueeze_3026: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3669, 0);  mul_3669 = None
    unsqueeze_3027: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3026, 2);  unsqueeze_3026 = None
    unsqueeze_3028: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3027, 3);  unsqueeze_3027 = None
    mul_3670: "f32[72]" = torch.ops.aten.mul.Tensor(sum_289, 0.0006377551020408163)
    mul_3671: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_550, squeeze_550)
    mul_3672: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3670, mul_3671);  mul_3670 = mul_3671 = None
    unsqueeze_3029: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3672, 0);  mul_3672 = None
    unsqueeze_3030: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3029, 2);  unsqueeze_3029 = None
    unsqueeze_3031: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3030, 3);  unsqueeze_3030 = None
    mul_3673: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_550, primals_551);  primals_551 = None
    unsqueeze_3032: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3673, 0);  mul_3673 = None
    unsqueeze_3033: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3032, 2);  unsqueeze_3032 = None
    unsqueeze_3034: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3033, 3);  unsqueeze_3033 = None
    sub_890: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_183, unsqueeze_3025);  convolution_183 = unsqueeze_3025 = None
    mul_3674: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_890, unsqueeze_3031);  sub_890 = unsqueeze_3031 = None
    sub_891: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_113, mul_3674);  where_113 = mul_3674 = None
    sub_892: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_891, unsqueeze_3028);  sub_891 = unsqueeze_3028 = None
    mul_3675: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_892, unsqueeze_3034);  sub_892 = unsqueeze_3034 = None
    mul_3676: "f32[72]" = torch.ops.aten.mul.Tensor(sum_289, squeeze_550);  sum_289 = squeeze_550 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_141 = torch.ops.aten.convolution_backward.default(mul_3675, relu_169, primals_550, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3675 = primals_550 = None
    getitem_1073: "f32[8, 72, 14, 14]" = convolution_backward_141[0]
    getitem_1074: "f32[72, 72, 3, 3]" = convolution_backward_141[1];  convolution_backward_141 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2002: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_112, getitem_1073);  where_112 = getitem_1073 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_579: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_169);  relu_169 = None
    alias_580: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_579);  alias_579 = None
    le_114: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_580, 0);  alias_580 = None
    scalar_tensor_114: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_114: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_114, scalar_tensor_114, add_2002);  le_114 = scalar_tensor_114 = add_2002 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3035: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_546, 0);  squeeze_546 = None
    unsqueeze_3036: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3035, 2);  unsqueeze_3035 = None
    unsqueeze_3037: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3036, 3);  unsqueeze_3036 = None
    sum_290: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_114, [0, 2, 3])
    sub_893: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_182, unsqueeze_3037)
    mul_3677: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_114, sub_893);  sub_893 = None
    sum_291: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3677, [0, 2, 3]);  mul_3677 = None
    mul_3678: "f32[72]" = torch.ops.aten.mul.Tensor(sum_290, 0.0006377551020408163)
    unsqueeze_3038: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3678, 0);  mul_3678 = None
    unsqueeze_3039: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3038, 2);  unsqueeze_3038 = None
    unsqueeze_3040: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3039, 3);  unsqueeze_3039 = None
    mul_3679: "f32[72]" = torch.ops.aten.mul.Tensor(sum_291, 0.0006377551020408163)
    mul_3680: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_547, squeeze_547)
    mul_3681: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3679, mul_3680);  mul_3679 = mul_3680 = None
    unsqueeze_3041: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3681, 0);  mul_3681 = None
    unsqueeze_3042: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3041, 2);  unsqueeze_3041 = None
    unsqueeze_3043: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3042, 3);  unsqueeze_3042 = None
    mul_3682: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_547, primals_548);  primals_548 = None
    unsqueeze_3044: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3682, 0);  mul_3682 = None
    unsqueeze_3045: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3044, 2);  unsqueeze_3044 = None
    unsqueeze_3046: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3045, 3);  unsqueeze_3045 = None
    sub_894: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_182, unsqueeze_3037);  convolution_182 = unsqueeze_3037 = None
    mul_3683: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_894, unsqueeze_3043);  sub_894 = unsqueeze_3043 = None
    sub_895: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_114, mul_3683);  mul_3683 = None
    sub_896: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_895, unsqueeze_3040);  sub_895 = unsqueeze_3040 = None
    mul_3684: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_896, unsqueeze_3046);  sub_896 = unsqueeze_3046 = None
    mul_3685: "f32[72]" = torch.ops.aten.mul.Tensor(sum_291, squeeze_547);  sum_291 = squeeze_547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_142 = torch.ops.aten.convolution_backward.default(mul_3684, relu_168, primals_547, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3684 = primals_547 = None
    getitem_1076: "f32[8, 72, 14, 14]" = convolution_backward_142[0]
    getitem_1077: "f32[72, 72, 3, 3]" = convolution_backward_142[1];  convolution_backward_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_582: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_168);  relu_168 = None
    alias_583: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_582);  alias_582 = None
    le_115: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_583, 0);  alias_583 = None
    scalar_tensor_115: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_115: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_115, scalar_tensor_115, getitem_1076);  le_115 = scalar_tensor_115 = getitem_1076 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3047: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_543, 0);  squeeze_543 = None
    unsqueeze_3048: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3047, 2);  unsqueeze_3047 = None
    unsqueeze_3049: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3048, 3);  unsqueeze_3048 = None
    sum_292: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_115, [0, 2, 3])
    sub_897: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_181, unsqueeze_3049)
    mul_3686: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_115, sub_897);  sub_897 = None
    sum_293: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3686, [0, 2, 3]);  mul_3686 = None
    mul_3687: "f32[72]" = torch.ops.aten.mul.Tensor(sum_292, 0.0006377551020408163)
    unsqueeze_3050: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3687, 0);  mul_3687 = None
    unsqueeze_3051: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3050, 2);  unsqueeze_3050 = None
    unsqueeze_3052: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3051, 3);  unsqueeze_3051 = None
    mul_3688: "f32[72]" = torch.ops.aten.mul.Tensor(sum_293, 0.0006377551020408163)
    mul_3689: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_544, squeeze_544)
    mul_3690: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3688, mul_3689);  mul_3688 = mul_3689 = None
    unsqueeze_3053: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3690, 0);  mul_3690 = None
    unsqueeze_3054: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3053, 2);  unsqueeze_3053 = None
    unsqueeze_3055: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3054, 3);  unsqueeze_3054 = None
    mul_3691: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_544, primals_545);  primals_545 = None
    unsqueeze_3056: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3691, 0);  mul_3691 = None
    unsqueeze_3057: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3056, 2);  unsqueeze_3056 = None
    unsqueeze_3058: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3057, 3);  unsqueeze_3057 = None
    sub_898: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_181, unsqueeze_3049);  convolution_181 = unsqueeze_3049 = None
    mul_3692: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_898, unsqueeze_3055);  sub_898 = unsqueeze_3055 = None
    sub_899: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_115, mul_3692);  where_115 = mul_3692 = None
    sub_900: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_899, unsqueeze_3052);  sub_899 = unsqueeze_3052 = None
    mul_3693: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_900, unsqueeze_3058);  sub_900 = unsqueeze_3058 = None
    mul_3694: "f32[72]" = torch.ops.aten.mul.Tensor(sum_293, squeeze_544);  sum_293 = squeeze_544 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_143 = torch.ops.aten.convolution_backward.default(mul_3693, relu_167, primals_544, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3693 = primals_544 = None
    getitem_1079: "f32[8, 72, 14, 14]" = convolution_backward_143[0]
    getitem_1080: "f32[72, 72, 3, 3]" = convolution_backward_143[1];  convolution_backward_143 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2003: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_114, getitem_1079);  where_114 = getitem_1079 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_585: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_167);  relu_167 = None
    alias_586: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_585);  alias_585 = None
    le_116: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_586, 0);  alias_586 = None
    scalar_tensor_116: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_116: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_116, scalar_tensor_116, add_2003);  le_116 = scalar_tensor_116 = add_2003 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3059: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_540, 0);  squeeze_540 = None
    unsqueeze_3060: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3059, 2);  unsqueeze_3059 = None
    unsqueeze_3061: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3060, 3);  unsqueeze_3060 = None
    sum_294: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_116, [0, 2, 3])
    sub_901: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_180, unsqueeze_3061)
    mul_3695: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_116, sub_901);  sub_901 = None
    sum_295: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3695, [0, 2, 3]);  mul_3695 = None
    mul_3696: "f32[72]" = torch.ops.aten.mul.Tensor(sum_294, 0.0006377551020408163)
    unsqueeze_3062: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3696, 0);  mul_3696 = None
    unsqueeze_3063: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3062, 2);  unsqueeze_3062 = None
    unsqueeze_3064: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3063, 3);  unsqueeze_3063 = None
    mul_3697: "f32[72]" = torch.ops.aten.mul.Tensor(sum_295, 0.0006377551020408163)
    mul_3698: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_541, squeeze_541)
    mul_3699: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3697, mul_3698);  mul_3697 = mul_3698 = None
    unsqueeze_3065: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3699, 0);  mul_3699 = None
    unsqueeze_3066: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3065, 2);  unsqueeze_3065 = None
    unsqueeze_3067: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3066, 3);  unsqueeze_3066 = None
    mul_3700: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_541, primals_542);  primals_542 = None
    unsqueeze_3068: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3700, 0);  mul_3700 = None
    unsqueeze_3069: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3068, 2);  unsqueeze_3068 = None
    unsqueeze_3070: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3069, 3);  unsqueeze_3069 = None
    sub_902: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_180, unsqueeze_3061);  convolution_180 = unsqueeze_3061 = None
    mul_3701: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_902, unsqueeze_3067);  sub_902 = unsqueeze_3067 = None
    sub_903: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_116, mul_3701);  mul_3701 = None
    sub_904: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_903, unsqueeze_3064);  sub_903 = unsqueeze_3064 = None
    mul_3702: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_904, unsqueeze_3070);  sub_904 = unsqueeze_3070 = None
    mul_3703: "f32[72]" = torch.ops.aten.mul.Tensor(sum_295, squeeze_541);  sum_295 = squeeze_541 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_144 = torch.ops.aten.convolution_backward.default(mul_3702, relu_166, primals_541, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3702 = primals_541 = None
    getitem_1082: "f32[8, 72, 14, 14]" = convolution_backward_144[0]
    getitem_1083: "f32[72, 72, 3, 3]" = convolution_backward_144[1];  convolution_backward_144 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_588: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_166);  relu_166 = None
    alias_589: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_588);  alias_588 = None
    le_117: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_589, 0);  alias_589 = None
    scalar_tensor_117: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_117: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_117, scalar_tensor_117, getitem_1082);  le_117 = scalar_tensor_117 = getitem_1082 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3071: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_537, 0);  squeeze_537 = None
    unsqueeze_3072: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3071, 2);  unsqueeze_3071 = None
    unsqueeze_3073: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3072, 3);  unsqueeze_3072 = None
    sum_296: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_117, [0, 2, 3])
    sub_905: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_179, unsqueeze_3073)
    mul_3704: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_117, sub_905);  sub_905 = None
    sum_297: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3704, [0, 2, 3]);  mul_3704 = None
    mul_3705: "f32[72]" = torch.ops.aten.mul.Tensor(sum_296, 0.0006377551020408163)
    unsqueeze_3074: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3705, 0);  mul_3705 = None
    unsqueeze_3075: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3074, 2);  unsqueeze_3074 = None
    unsqueeze_3076: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3075, 3);  unsqueeze_3075 = None
    mul_3706: "f32[72]" = torch.ops.aten.mul.Tensor(sum_297, 0.0006377551020408163)
    mul_3707: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_538, squeeze_538)
    mul_3708: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3706, mul_3707);  mul_3706 = mul_3707 = None
    unsqueeze_3077: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3708, 0);  mul_3708 = None
    unsqueeze_3078: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3077, 2);  unsqueeze_3077 = None
    unsqueeze_3079: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3078, 3);  unsqueeze_3078 = None
    mul_3709: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_538, primals_539);  primals_539 = None
    unsqueeze_3080: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3709, 0);  mul_3709 = None
    unsqueeze_3081: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3080, 2);  unsqueeze_3080 = None
    unsqueeze_3082: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3081, 3);  unsqueeze_3081 = None
    sub_906: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_179, unsqueeze_3073);  convolution_179 = unsqueeze_3073 = None
    mul_3710: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_906, unsqueeze_3079);  sub_906 = unsqueeze_3079 = None
    sub_907: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_117, mul_3710);  where_117 = mul_3710 = None
    sub_908: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_907, unsqueeze_3076);  sub_907 = unsqueeze_3076 = None
    mul_3711: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_908, unsqueeze_3082);  sub_908 = unsqueeze_3082 = None
    mul_3712: "f32[72]" = torch.ops.aten.mul.Tensor(sum_297, squeeze_538);  sum_297 = squeeze_538 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_145 = torch.ops.aten.convolution_backward.default(mul_3711, relu_165, primals_538, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3711 = primals_538 = None
    getitem_1085: "f32[8, 72, 14, 14]" = convolution_backward_145[0]
    getitem_1086: "f32[72, 72, 3, 3]" = convolution_backward_145[1];  convolution_backward_145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2004: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_116, getitem_1085);  where_116 = getitem_1085 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_591: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_165);  relu_165 = None
    alias_592: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_591);  alias_591 = None
    le_118: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_592, 0);  alias_592 = None
    scalar_tensor_118: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_118: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_118, scalar_tensor_118, add_2004);  le_118 = scalar_tensor_118 = add_2004 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3083: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_534, 0);  squeeze_534 = None
    unsqueeze_3084: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3083, 2);  unsqueeze_3083 = None
    unsqueeze_3085: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3084, 3);  unsqueeze_3084 = None
    sum_298: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_118, [0, 2, 3])
    sub_909: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_178, unsqueeze_3085)
    mul_3713: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_118, sub_909);  sub_909 = None
    sum_299: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3713, [0, 2, 3]);  mul_3713 = None
    mul_3714: "f32[72]" = torch.ops.aten.mul.Tensor(sum_298, 0.0006377551020408163)
    unsqueeze_3086: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3714, 0);  mul_3714 = None
    unsqueeze_3087: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3086, 2);  unsqueeze_3086 = None
    unsqueeze_3088: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3087, 3);  unsqueeze_3087 = None
    mul_3715: "f32[72]" = torch.ops.aten.mul.Tensor(sum_299, 0.0006377551020408163)
    mul_3716: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_535, squeeze_535)
    mul_3717: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3715, mul_3716);  mul_3715 = mul_3716 = None
    unsqueeze_3089: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3717, 0);  mul_3717 = None
    unsqueeze_3090: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3089, 2);  unsqueeze_3089 = None
    unsqueeze_3091: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3090, 3);  unsqueeze_3090 = None
    mul_3718: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_535, primals_536);  primals_536 = None
    unsqueeze_3092: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3718, 0);  mul_3718 = None
    unsqueeze_3093: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3092, 2);  unsqueeze_3092 = None
    unsqueeze_3094: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3093, 3);  unsqueeze_3093 = None
    sub_910: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_178, unsqueeze_3085);  convolution_178 = unsqueeze_3085 = None
    mul_3719: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_910, unsqueeze_3091);  sub_910 = unsqueeze_3091 = None
    sub_911: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_118, mul_3719);  mul_3719 = None
    sub_912: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_911, unsqueeze_3088);  sub_911 = unsqueeze_3088 = None
    mul_3720: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_912, unsqueeze_3094);  sub_912 = unsqueeze_3094 = None
    mul_3721: "f32[72]" = torch.ops.aten.mul.Tensor(sum_299, squeeze_535);  sum_299 = squeeze_535 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_146 = torch.ops.aten.convolution_backward.default(mul_3720, relu_164, primals_535, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3720 = primals_535 = None
    getitem_1088: "f32[8, 72, 14, 14]" = convolution_backward_146[0]
    getitem_1089: "f32[72, 72, 3, 3]" = convolution_backward_146[1];  convolution_backward_146 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_594: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_164);  relu_164 = None
    alias_595: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_594);  alias_594 = None
    le_119: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_595, 0);  alias_595 = None
    scalar_tensor_119: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_119: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_119, scalar_tensor_119, getitem_1088);  le_119 = scalar_tensor_119 = getitem_1088 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3095: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_531, 0);  squeeze_531 = None
    unsqueeze_3096: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3095, 2);  unsqueeze_3095 = None
    unsqueeze_3097: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3096, 3);  unsqueeze_3096 = None
    sum_300: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_119, [0, 2, 3])
    sub_913: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_177, unsqueeze_3097)
    mul_3722: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_119, sub_913);  sub_913 = None
    sum_301: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3722, [0, 2, 3]);  mul_3722 = None
    mul_3723: "f32[72]" = torch.ops.aten.mul.Tensor(sum_300, 0.0006377551020408163)
    unsqueeze_3098: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3723, 0);  mul_3723 = None
    unsqueeze_3099: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3098, 2);  unsqueeze_3098 = None
    unsqueeze_3100: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3099, 3);  unsqueeze_3099 = None
    mul_3724: "f32[72]" = torch.ops.aten.mul.Tensor(sum_301, 0.0006377551020408163)
    mul_3725: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_532, squeeze_532)
    mul_3726: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3724, mul_3725);  mul_3724 = mul_3725 = None
    unsqueeze_3101: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3726, 0);  mul_3726 = None
    unsqueeze_3102: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3101, 2);  unsqueeze_3101 = None
    unsqueeze_3103: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3102, 3);  unsqueeze_3102 = None
    mul_3727: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_532, primals_533);  primals_533 = None
    unsqueeze_3104: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3727, 0);  mul_3727 = None
    unsqueeze_3105: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3104, 2);  unsqueeze_3104 = None
    unsqueeze_3106: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3105, 3);  unsqueeze_3105 = None
    sub_914: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_177, unsqueeze_3097);  convolution_177 = unsqueeze_3097 = None
    mul_3728: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_914, unsqueeze_3103);  sub_914 = unsqueeze_3103 = None
    sub_915: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_119, mul_3728);  where_119 = mul_3728 = None
    sub_916: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_915, unsqueeze_3100);  sub_915 = unsqueeze_3100 = None
    mul_3729: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_916, unsqueeze_3106);  sub_916 = unsqueeze_3106 = None
    mul_3730: "f32[72]" = torch.ops.aten.mul.Tensor(sum_301, squeeze_532);  sum_301 = squeeze_532 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_147 = torch.ops.aten.convolution_backward.default(mul_3729, relu_146, primals_532, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3729 = primals_532 = None
    getitem_1091: "f32[8, 72, 14, 14]" = convolution_backward_147[0]
    getitem_1092: "f32[72, 72, 3, 3]" = convolution_backward_147[1];  convolution_backward_147 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2005: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_118, getitem_1091);  where_118 = getitem_1091 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_597: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_163);  relu_163 = None
    alias_598: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_597);  alias_597 = None
    le_120: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_598, 0);  alias_598 = None
    scalar_tensor_120: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_120: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_120, scalar_tensor_120, add_1997);  le_120 = scalar_tensor_120 = add_1997 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3107: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_528, 0);  squeeze_528 = None
    unsqueeze_3108: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3107, 2);  unsqueeze_3107 = None
    unsqueeze_3109: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3108, 3);  unsqueeze_3108 = None
    sum_302: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_120, [0, 2, 3])
    sub_917: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_176, unsqueeze_3109)
    mul_3731: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_120, sub_917);  sub_917 = None
    sum_303: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3731, [0, 2, 3]);  mul_3731 = None
    mul_3732: "f32[36]" = torch.ops.aten.mul.Tensor(sum_302, 0.00015943877551020407)
    unsqueeze_3110: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3732, 0);  mul_3732 = None
    unsqueeze_3111: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3110, 2);  unsqueeze_3110 = None
    unsqueeze_3112: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3111, 3);  unsqueeze_3111 = None
    mul_3733: "f32[36]" = torch.ops.aten.mul.Tensor(sum_303, 0.00015943877551020407)
    mul_3734: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_529, squeeze_529)
    mul_3735: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3733, mul_3734);  mul_3733 = mul_3734 = None
    unsqueeze_3113: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3735, 0);  mul_3735 = None
    unsqueeze_3114: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3113, 2);  unsqueeze_3113 = None
    unsqueeze_3115: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3114, 3);  unsqueeze_3114 = None
    mul_3736: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_529, primals_530);  primals_530 = None
    unsqueeze_3116: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3736, 0);  mul_3736 = None
    unsqueeze_3117: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3116, 2);  unsqueeze_3116 = None
    unsqueeze_3118: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3117, 3);  unsqueeze_3117 = None
    sub_918: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_176, unsqueeze_3109);  convolution_176 = unsqueeze_3109 = None
    mul_3737: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_918, unsqueeze_3115);  sub_918 = unsqueeze_3115 = None
    sub_919: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_120, mul_3737);  mul_3737 = None
    sub_920: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_919, unsqueeze_3112);  sub_919 = unsqueeze_3112 = None
    mul_3738: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_920, unsqueeze_3118);  sub_920 = unsqueeze_3118 = None
    mul_3739: "f32[36]" = torch.ops.aten.mul.Tensor(sum_303, squeeze_529);  sum_303 = squeeze_529 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_148 = torch.ops.aten.convolution_backward.default(mul_3738, relu_162, primals_529, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3738 = primals_529 = None
    getitem_1094: "f32[8, 36, 28, 28]" = convolution_backward_148[0]
    getitem_1095: "f32[36, 36, 3, 3]" = convolution_backward_148[1];  convolution_backward_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_600: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_162);  relu_162 = None
    alias_601: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_600);  alias_600 = None
    le_121: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_601, 0);  alias_601 = None
    scalar_tensor_121: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_121: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_121, scalar_tensor_121, getitem_1094);  le_121 = scalar_tensor_121 = getitem_1094 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3119: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_525, 0);  squeeze_525 = None
    unsqueeze_3120: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3119, 2);  unsqueeze_3119 = None
    unsqueeze_3121: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3120, 3);  unsqueeze_3120 = None
    sum_304: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_121, [0, 2, 3])
    sub_921: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_175, unsqueeze_3121)
    mul_3740: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_121, sub_921);  sub_921 = None
    sum_305: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3740, [0, 2, 3]);  mul_3740 = None
    mul_3741: "f32[36]" = torch.ops.aten.mul.Tensor(sum_304, 0.00015943877551020407)
    unsqueeze_3122: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3741, 0);  mul_3741 = None
    unsqueeze_3123: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3122, 2);  unsqueeze_3122 = None
    unsqueeze_3124: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3123, 3);  unsqueeze_3123 = None
    mul_3742: "f32[36]" = torch.ops.aten.mul.Tensor(sum_305, 0.00015943877551020407)
    mul_3743: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_526, squeeze_526)
    mul_3744: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3742, mul_3743);  mul_3742 = mul_3743 = None
    unsqueeze_3125: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3744, 0);  mul_3744 = None
    unsqueeze_3126: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3125, 2);  unsqueeze_3125 = None
    unsqueeze_3127: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3126, 3);  unsqueeze_3126 = None
    mul_3745: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_526, primals_527);  primals_527 = None
    unsqueeze_3128: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3745, 0);  mul_3745 = None
    unsqueeze_3129: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3128, 2);  unsqueeze_3128 = None
    unsqueeze_3130: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3129, 3);  unsqueeze_3129 = None
    sub_922: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_175, unsqueeze_3121);  convolution_175 = unsqueeze_3121 = None
    mul_3746: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_922, unsqueeze_3127);  sub_922 = unsqueeze_3127 = None
    sub_923: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_121, mul_3746);  where_121 = mul_3746 = None
    sub_924: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_923, unsqueeze_3124);  sub_923 = unsqueeze_3124 = None
    mul_3747: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_924, unsqueeze_3130);  sub_924 = unsqueeze_3130 = None
    mul_3748: "f32[36]" = torch.ops.aten.mul.Tensor(sum_305, squeeze_526);  sum_305 = squeeze_526 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_149 = torch.ops.aten.convolution_backward.default(mul_3747, relu_161, primals_526, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3747 = primals_526 = None
    getitem_1097: "f32[8, 36, 28, 28]" = convolution_backward_149[0]
    getitem_1098: "f32[36, 36, 3, 3]" = convolution_backward_149[1];  convolution_backward_149 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2006: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_120, getitem_1097);  where_120 = getitem_1097 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_603: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_161);  relu_161 = None
    alias_604: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_603);  alias_603 = None
    le_122: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_604, 0);  alias_604 = None
    scalar_tensor_122: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_122: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_122, scalar_tensor_122, add_2006);  le_122 = scalar_tensor_122 = add_2006 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3131: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_522, 0);  squeeze_522 = None
    unsqueeze_3132: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3131, 2);  unsqueeze_3131 = None
    unsqueeze_3133: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3132, 3);  unsqueeze_3132 = None
    sum_306: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_122, [0, 2, 3])
    sub_925: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_174, unsqueeze_3133)
    mul_3749: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_122, sub_925);  sub_925 = None
    sum_307: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3749, [0, 2, 3]);  mul_3749 = None
    mul_3750: "f32[36]" = torch.ops.aten.mul.Tensor(sum_306, 0.00015943877551020407)
    unsqueeze_3134: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3750, 0);  mul_3750 = None
    unsqueeze_3135: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3134, 2);  unsqueeze_3134 = None
    unsqueeze_3136: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3135, 3);  unsqueeze_3135 = None
    mul_3751: "f32[36]" = torch.ops.aten.mul.Tensor(sum_307, 0.00015943877551020407)
    mul_3752: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_523, squeeze_523)
    mul_3753: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3751, mul_3752);  mul_3751 = mul_3752 = None
    unsqueeze_3137: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3753, 0);  mul_3753 = None
    unsqueeze_3138: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3137, 2);  unsqueeze_3137 = None
    unsqueeze_3139: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3138, 3);  unsqueeze_3138 = None
    mul_3754: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_523, primals_524);  primals_524 = None
    unsqueeze_3140: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3754, 0);  mul_3754 = None
    unsqueeze_3141: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3140, 2);  unsqueeze_3140 = None
    unsqueeze_3142: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3141, 3);  unsqueeze_3141 = None
    sub_926: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_174, unsqueeze_3133);  convolution_174 = unsqueeze_3133 = None
    mul_3755: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_926, unsqueeze_3139);  sub_926 = unsqueeze_3139 = None
    sub_927: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_122, mul_3755);  mul_3755 = None
    sub_928: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_927, unsqueeze_3136);  sub_927 = unsqueeze_3136 = None
    mul_3756: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_928, unsqueeze_3142);  sub_928 = unsqueeze_3142 = None
    mul_3757: "f32[36]" = torch.ops.aten.mul.Tensor(sum_307, squeeze_523);  sum_307 = squeeze_523 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_150 = torch.ops.aten.convolution_backward.default(mul_3756, relu_160, primals_523, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3756 = primals_523 = None
    getitem_1100: "f32[8, 36, 28, 28]" = convolution_backward_150[0]
    getitem_1101: "f32[36, 36, 3, 3]" = convolution_backward_150[1];  convolution_backward_150 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_606: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_160);  relu_160 = None
    alias_607: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_606);  alias_606 = None
    le_123: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_607, 0);  alias_607 = None
    scalar_tensor_123: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_123: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_123, scalar_tensor_123, getitem_1100);  le_123 = scalar_tensor_123 = getitem_1100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3143: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_519, 0);  squeeze_519 = None
    unsqueeze_3144: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3143, 2);  unsqueeze_3143 = None
    unsqueeze_3145: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3144, 3);  unsqueeze_3144 = None
    sum_308: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_123, [0, 2, 3])
    sub_929: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_173, unsqueeze_3145)
    mul_3758: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_123, sub_929);  sub_929 = None
    sum_309: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3758, [0, 2, 3]);  mul_3758 = None
    mul_3759: "f32[36]" = torch.ops.aten.mul.Tensor(sum_308, 0.00015943877551020407)
    unsqueeze_3146: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3759, 0);  mul_3759 = None
    unsqueeze_3147: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3146, 2);  unsqueeze_3146 = None
    unsqueeze_3148: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3147, 3);  unsqueeze_3147 = None
    mul_3760: "f32[36]" = torch.ops.aten.mul.Tensor(sum_309, 0.00015943877551020407)
    mul_3761: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_520, squeeze_520)
    mul_3762: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3760, mul_3761);  mul_3760 = mul_3761 = None
    unsqueeze_3149: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3762, 0);  mul_3762 = None
    unsqueeze_3150: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3149, 2);  unsqueeze_3149 = None
    unsqueeze_3151: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3150, 3);  unsqueeze_3150 = None
    mul_3763: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_520, primals_521);  primals_521 = None
    unsqueeze_3152: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3763, 0);  mul_3763 = None
    unsqueeze_3153: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3152, 2);  unsqueeze_3152 = None
    unsqueeze_3154: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3153, 3);  unsqueeze_3153 = None
    sub_930: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_173, unsqueeze_3145);  convolution_173 = unsqueeze_3145 = None
    mul_3764: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_930, unsqueeze_3151);  sub_930 = unsqueeze_3151 = None
    sub_931: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_123, mul_3764);  where_123 = mul_3764 = None
    sub_932: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_931, unsqueeze_3148);  sub_931 = unsqueeze_3148 = None
    mul_3765: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_932, unsqueeze_3154);  sub_932 = unsqueeze_3154 = None
    mul_3766: "f32[36]" = torch.ops.aten.mul.Tensor(sum_309, squeeze_520);  sum_309 = squeeze_520 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_151 = torch.ops.aten.convolution_backward.default(mul_3765, relu_159, primals_520, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3765 = primals_520 = None
    getitem_1103: "f32[8, 36, 28, 28]" = convolution_backward_151[0]
    getitem_1104: "f32[36, 36, 3, 3]" = convolution_backward_151[1];  convolution_backward_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2007: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_122, getitem_1103);  where_122 = getitem_1103 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_609: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_159);  relu_159 = None
    alias_610: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_609);  alias_609 = None
    le_124: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_610, 0);  alias_610 = None
    scalar_tensor_124: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_124: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_124, scalar_tensor_124, add_2007);  le_124 = scalar_tensor_124 = add_2007 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3155: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_516, 0);  squeeze_516 = None
    unsqueeze_3156: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3155, 2);  unsqueeze_3155 = None
    unsqueeze_3157: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3156, 3);  unsqueeze_3156 = None
    sum_310: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_124, [0, 2, 3])
    sub_933: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_172, unsqueeze_3157)
    mul_3767: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_124, sub_933);  sub_933 = None
    sum_311: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3767, [0, 2, 3]);  mul_3767 = None
    mul_3768: "f32[36]" = torch.ops.aten.mul.Tensor(sum_310, 0.00015943877551020407)
    unsqueeze_3158: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3768, 0);  mul_3768 = None
    unsqueeze_3159: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3158, 2);  unsqueeze_3158 = None
    unsqueeze_3160: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3159, 3);  unsqueeze_3159 = None
    mul_3769: "f32[36]" = torch.ops.aten.mul.Tensor(sum_311, 0.00015943877551020407)
    mul_3770: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_517, squeeze_517)
    mul_3771: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3769, mul_3770);  mul_3769 = mul_3770 = None
    unsqueeze_3161: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3771, 0);  mul_3771 = None
    unsqueeze_3162: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3161, 2);  unsqueeze_3161 = None
    unsqueeze_3163: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3162, 3);  unsqueeze_3162 = None
    mul_3772: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_517, primals_518);  primals_518 = None
    unsqueeze_3164: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3772, 0);  mul_3772 = None
    unsqueeze_3165: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3164, 2);  unsqueeze_3164 = None
    unsqueeze_3166: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3165, 3);  unsqueeze_3165 = None
    sub_934: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_172, unsqueeze_3157);  convolution_172 = unsqueeze_3157 = None
    mul_3773: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_934, unsqueeze_3163);  sub_934 = unsqueeze_3163 = None
    sub_935: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_124, mul_3773);  mul_3773 = None
    sub_936: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_935, unsqueeze_3160);  sub_935 = unsqueeze_3160 = None
    mul_3774: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_936, unsqueeze_3166);  sub_936 = unsqueeze_3166 = None
    mul_3775: "f32[36]" = torch.ops.aten.mul.Tensor(sum_311, squeeze_517);  sum_311 = squeeze_517 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_152 = torch.ops.aten.convolution_backward.default(mul_3774, relu_158, primals_517, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3774 = primals_517 = None
    getitem_1106: "f32[8, 36, 28, 28]" = convolution_backward_152[0]
    getitem_1107: "f32[36, 36, 3, 3]" = convolution_backward_152[1];  convolution_backward_152 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_612: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_158);  relu_158 = None
    alias_613: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_612);  alias_612 = None
    le_125: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_613, 0);  alias_613 = None
    scalar_tensor_125: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_125: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_125, scalar_tensor_125, getitem_1106);  le_125 = scalar_tensor_125 = getitem_1106 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3167: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_513, 0);  squeeze_513 = None
    unsqueeze_3168: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3167, 2);  unsqueeze_3167 = None
    unsqueeze_3169: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3168, 3);  unsqueeze_3168 = None
    sum_312: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_125, [0, 2, 3])
    sub_937: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_171, unsqueeze_3169)
    mul_3776: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_125, sub_937);  sub_937 = None
    sum_313: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3776, [0, 2, 3]);  mul_3776 = None
    mul_3777: "f32[36]" = torch.ops.aten.mul.Tensor(sum_312, 0.00015943877551020407)
    unsqueeze_3170: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3777, 0);  mul_3777 = None
    unsqueeze_3171: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3170, 2);  unsqueeze_3170 = None
    unsqueeze_3172: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3171, 3);  unsqueeze_3171 = None
    mul_3778: "f32[36]" = torch.ops.aten.mul.Tensor(sum_313, 0.00015943877551020407)
    mul_3779: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_514, squeeze_514)
    mul_3780: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3778, mul_3779);  mul_3778 = mul_3779 = None
    unsqueeze_3173: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3780, 0);  mul_3780 = None
    unsqueeze_3174: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3173, 2);  unsqueeze_3173 = None
    unsqueeze_3175: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3174, 3);  unsqueeze_3174 = None
    mul_3781: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_514, primals_515);  primals_515 = None
    unsqueeze_3176: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3781, 0);  mul_3781 = None
    unsqueeze_3177: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3176, 2);  unsqueeze_3176 = None
    unsqueeze_3178: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3177, 3);  unsqueeze_3177 = None
    sub_938: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_171, unsqueeze_3169);  convolution_171 = unsqueeze_3169 = None
    mul_3782: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_938, unsqueeze_3175);  sub_938 = unsqueeze_3175 = None
    sub_939: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_125, mul_3782);  where_125 = mul_3782 = None
    sub_940: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_939, unsqueeze_3172);  sub_939 = unsqueeze_3172 = None
    mul_3783: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_940, unsqueeze_3178);  sub_940 = unsqueeze_3178 = None
    mul_3784: "f32[36]" = torch.ops.aten.mul.Tensor(sum_313, squeeze_514);  sum_313 = squeeze_514 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_153 = torch.ops.aten.convolution_backward.default(mul_3783, relu_157, primals_514, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3783 = primals_514 = None
    getitem_1109: "f32[8, 36, 28, 28]" = convolution_backward_153[0]
    getitem_1110: "f32[36, 36, 3, 3]" = convolution_backward_153[1];  convolution_backward_153 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2008: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_124, getitem_1109);  where_124 = getitem_1109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_615: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_157);  relu_157 = None
    alias_616: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_615);  alias_615 = None
    le_126: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_616, 0);  alias_616 = None
    scalar_tensor_126: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_126: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_126, scalar_tensor_126, add_2008);  le_126 = scalar_tensor_126 = add_2008 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3179: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_510, 0);  squeeze_510 = None
    unsqueeze_3180: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3179, 2);  unsqueeze_3179 = None
    unsqueeze_3181: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3180, 3);  unsqueeze_3180 = None
    sum_314: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_126, [0, 2, 3])
    sub_941: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_170, unsqueeze_3181)
    mul_3785: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_126, sub_941);  sub_941 = None
    sum_315: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3785, [0, 2, 3]);  mul_3785 = None
    mul_3786: "f32[36]" = torch.ops.aten.mul.Tensor(sum_314, 0.00015943877551020407)
    unsqueeze_3182: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3786, 0);  mul_3786 = None
    unsqueeze_3183: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3182, 2);  unsqueeze_3182 = None
    unsqueeze_3184: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3183, 3);  unsqueeze_3183 = None
    mul_3787: "f32[36]" = torch.ops.aten.mul.Tensor(sum_315, 0.00015943877551020407)
    mul_3788: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_511, squeeze_511)
    mul_3789: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3787, mul_3788);  mul_3787 = mul_3788 = None
    unsqueeze_3185: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3789, 0);  mul_3789 = None
    unsqueeze_3186: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3185, 2);  unsqueeze_3185 = None
    unsqueeze_3187: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3186, 3);  unsqueeze_3186 = None
    mul_3790: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_511, primals_512);  primals_512 = None
    unsqueeze_3188: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3790, 0);  mul_3790 = None
    unsqueeze_3189: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3188, 2);  unsqueeze_3188 = None
    unsqueeze_3190: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3189, 3);  unsqueeze_3189 = None
    sub_942: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_170, unsqueeze_3181);  convolution_170 = unsqueeze_3181 = None
    mul_3791: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_942, unsqueeze_3187);  sub_942 = unsqueeze_3187 = None
    sub_943: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_126, mul_3791);  mul_3791 = None
    sub_944: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_943, unsqueeze_3184);  sub_943 = unsqueeze_3184 = None
    mul_3792: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_944, unsqueeze_3190);  sub_944 = unsqueeze_3190 = None
    mul_3793: "f32[36]" = torch.ops.aten.mul.Tensor(sum_315, squeeze_511);  sum_315 = squeeze_511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_154 = torch.ops.aten.convolution_backward.default(mul_3792, relu_156, primals_511, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3792 = primals_511 = None
    getitem_1112: "f32[8, 36, 28, 28]" = convolution_backward_154[0]
    getitem_1113: "f32[36, 36, 3, 3]" = convolution_backward_154[1];  convolution_backward_154 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_618: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_156);  relu_156 = None
    alias_619: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_618);  alias_618 = None
    le_127: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_619, 0);  alias_619 = None
    scalar_tensor_127: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_127: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_127, scalar_tensor_127, getitem_1112);  le_127 = scalar_tensor_127 = getitem_1112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3191: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_507, 0);  squeeze_507 = None
    unsqueeze_3192: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3191, 2);  unsqueeze_3191 = None
    unsqueeze_3193: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3192, 3);  unsqueeze_3192 = None
    sum_316: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_127, [0, 2, 3])
    sub_945: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_169, unsqueeze_3193)
    mul_3794: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_127, sub_945);  sub_945 = None
    sum_317: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3794, [0, 2, 3]);  mul_3794 = None
    mul_3795: "f32[36]" = torch.ops.aten.mul.Tensor(sum_316, 0.00015943877551020407)
    unsqueeze_3194: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3795, 0);  mul_3795 = None
    unsqueeze_3195: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3194, 2);  unsqueeze_3194 = None
    unsqueeze_3196: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3195, 3);  unsqueeze_3195 = None
    mul_3796: "f32[36]" = torch.ops.aten.mul.Tensor(sum_317, 0.00015943877551020407)
    mul_3797: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_508, squeeze_508)
    mul_3798: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3796, mul_3797);  mul_3796 = mul_3797 = None
    unsqueeze_3197: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3798, 0);  mul_3798 = None
    unsqueeze_3198: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3197, 2);  unsqueeze_3197 = None
    unsqueeze_3199: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3198, 3);  unsqueeze_3198 = None
    mul_3799: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_508, primals_509);  primals_509 = None
    unsqueeze_3200: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3799, 0);  mul_3799 = None
    unsqueeze_3201: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3200, 2);  unsqueeze_3200 = None
    unsqueeze_3202: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3201, 3);  unsqueeze_3201 = None
    sub_946: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_169, unsqueeze_3193);  convolution_169 = unsqueeze_3193 = None
    mul_3800: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_946, unsqueeze_3199);  sub_946 = unsqueeze_3199 = None
    sub_947: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_127, mul_3800);  where_127 = mul_3800 = None
    sub_948: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_947, unsqueeze_3196);  sub_947 = unsqueeze_3196 = None
    mul_3801: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_948, unsqueeze_3202);  sub_948 = unsqueeze_3202 = None
    mul_3802: "f32[36]" = torch.ops.aten.mul.Tensor(sum_317, squeeze_508);  sum_317 = squeeze_508 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_155 = torch.ops.aten.convolution_backward.default(mul_3801, relu_144, primals_508, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3801 = relu_144 = primals_508 = None
    getitem_1115: "f32[8, 36, 28, 28]" = convolution_backward_155[0]
    getitem_1116: "f32[36, 36, 3, 3]" = convolution_backward_155[1];  convolution_backward_155 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2009: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_126, getitem_1115);  where_126 = getitem_1115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_621: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_155);  relu_155 = None
    alias_622: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_621);  alias_621 = None
    le_128: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_622, 0);  alias_622 = None
    scalar_tensor_128: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_128: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_128, scalar_tensor_128, add_1996);  le_128 = scalar_tensor_128 = add_1996 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3203: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_504, 0);  squeeze_504 = None
    unsqueeze_3204: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3203, 2);  unsqueeze_3203 = None
    unsqueeze_3205: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3204, 3);  unsqueeze_3204 = None
    sum_318: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_128, [0, 2, 3])
    sub_949: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_168, unsqueeze_3205)
    mul_3803: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_128, sub_949);  sub_949 = None
    sum_319: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3803, [0, 2, 3]);  mul_3803 = None
    mul_3804: "f32[18]" = torch.ops.aten.mul.Tensor(sum_318, 3.985969387755102e-05)
    unsqueeze_3206: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3804, 0);  mul_3804 = None
    unsqueeze_3207: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3206, 2);  unsqueeze_3206 = None
    unsqueeze_3208: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3207, 3);  unsqueeze_3207 = None
    mul_3805: "f32[18]" = torch.ops.aten.mul.Tensor(sum_319, 3.985969387755102e-05)
    mul_3806: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_505, squeeze_505)
    mul_3807: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3805, mul_3806);  mul_3805 = mul_3806 = None
    unsqueeze_3209: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3807, 0);  mul_3807 = None
    unsqueeze_3210: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3209, 2);  unsqueeze_3209 = None
    unsqueeze_3211: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3210, 3);  unsqueeze_3210 = None
    mul_3808: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_505, primals_506);  primals_506 = None
    unsqueeze_3212: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3808, 0);  mul_3808 = None
    unsqueeze_3213: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3212, 2);  unsqueeze_3212 = None
    unsqueeze_3214: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3213, 3);  unsqueeze_3213 = None
    sub_950: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_168, unsqueeze_3205);  convolution_168 = unsqueeze_3205 = None
    mul_3809: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_950, unsqueeze_3211);  sub_950 = unsqueeze_3211 = None
    sub_951: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_128, mul_3809);  mul_3809 = None
    sub_952: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_951, unsqueeze_3208);  sub_951 = unsqueeze_3208 = None
    mul_3810: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_952, unsqueeze_3214);  sub_952 = unsqueeze_3214 = None
    mul_3811: "f32[18]" = torch.ops.aten.mul.Tensor(sum_319, squeeze_505);  sum_319 = squeeze_505 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_156 = torch.ops.aten.convolution_backward.default(mul_3810, relu_154, primals_505, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3810 = primals_505 = None
    getitem_1118: "f32[8, 18, 56, 56]" = convolution_backward_156[0]
    getitem_1119: "f32[18, 18, 3, 3]" = convolution_backward_156[1];  convolution_backward_156 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_624: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_154);  relu_154 = None
    alias_625: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_624);  alias_624 = None
    le_129: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_625, 0);  alias_625 = None
    scalar_tensor_129: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_129: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_129, scalar_tensor_129, getitem_1118);  le_129 = scalar_tensor_129 = getitem_1118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3215: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_501, 0);  squeeze_501 = None
    unsqueeze_3216: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3215, 2);  unsqueeze_3215 = None
    unsqueeze_3217: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3216, 3);  unsqueeze_3216 = None
    sum_320: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_129, [0, 2, 3])
    sub_953: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_167, unsqueeze_3217)
    mul_3812: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_129, sub_953);  sub_953 = None
    sum_321: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3812, [0, 2, 3]);  mul_3812 = None
    mul_3813: "f32[18]" = torch.ops.aten.mul.Tensor(sum_320, 3.985969387755102e-05)
    unsqueeze_3218: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3813, 0);  mul_3813 = None
    unsqueeze_3219: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3218, 2);  unsqueeze_3218 = None
    unsqueeze_3220: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3219, 3);  unsqueeze_3219 = None
    mul_3814: "f32[18]" = torch.ops.aten.mul.Tensor(sum_321, 3.985969387755102e-05)
    mul_3815: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_502, squeeze_502)
    mul_3816: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3814, mul_3815);  mul_3814 = mul_3815 = None
    unsqueeze_3221: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3816, 0);  mul_3816 = None
    unsqueeze_3222: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3221, 2);  unsqueeze_3221 = None
    unsqueeze_3223: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3222, 3);  unsqueeze_3222 = None
    mul_3817: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_502, primals_503);  primals_503 = None
    unsqueeze_3224: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3817, 0);  mul_3817 = None
    unsqueeze_3225: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3224, 2);  unsqueeze_3224 = None
    unsqueeze_3226: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3225, 3);  unsqueeze_3225 = None
    sub_954: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_167, unsqueeze_3217);  convolution_167 = unsqueeze_3217 = None
    mul_3818: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_954, unsqueeze_3223);  sub_954 = unsqueeze_3223 = None
    sub_955: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_129, mul_3818);  where_129 = mul_3818 = None
    sub_956: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_955, unsqueeze_3220);  sub_955 = unsqueeze_3220 = None
    mul_3819: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_956, unsqueeze_3226);  sub_956 = unsqueeze_3226 = None
    mul_3820: "f32[18]" = torch.ops.aten.mul.Tensor(sum_321, squeeze_502);  sum_321 = squeeze_502 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_157 = torch.ops.aten.convolution_backward.default(mul_3819, relu_153, primals_502, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3819 = primals_502 = None
    getitem_1121: "f32[8, 18, 56, 56]" = convolution_backward_157[0]
    getitem_1122: "f32[18, 18, 3, 3]" = convolution_backward_157[1];  convolution_backward_157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2010: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_128, getitem_1121);  where_128 = getitem_1121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_627: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_153);  relu_153 = None
    alias_628: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_627);  alias_627 = None
    le_130: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_628, 0);  alias_628 = None
    scalar_tensor_130: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_130: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_130, scalar_tensor_130, add_2010);  le_130 = scalar_tensor_130 = add_2010 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3227: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_498, 0);  squeeze_498 = None
    unsqueeze_3228: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3227, 2);  unsqueeze_3227 = None
    unsqueeze_3229: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3228, 3);  unsqueeze_3228 = None
    sum_322: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_130, [0, 2, 3])
    sub_957: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_166, unsqueeze_3229)
    mul_3821: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_130, sub_957);  sub_957 = None
    sum_323: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3821, [0, 2, 3]);  mul_3821 = None
    mul_3822: "f32[18]" = torch.ops.aten.mul.Tensor(sum_322, 3.985969387755102e-05)
    unsqueeze_3230: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3822, 0);  mul_3822 = None
    unsqueeze_3231: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3230, 2);  unsqueeze_3230 = None
    unsqueeze_3232: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3231, 3);  unsqueeze_3231 = None
    mul_3823: "f32[18]" = torch.ops.aten.mul.Tensor(sum_323, 3.985969387755102e-05)
    mul_3824: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_499, squeeze_499)
    mul_3825: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3823, mul_3824);  mul_3823 = mul_3824 = None
    unsqueeze_3233: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3825, 0);  mul_3825 = None
    unsqueeze_3234: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3233, 2);  unsqueeze_3233 = None
    unsqueeze_3235: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3234, 3);  unsqueeze_3234 = None
    mul_3826: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_499, primals_500);  primals_500 = None
    unsqueeze_3236: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3826, 0);  mul_3826 = None
    unsqueeze_3237: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3236, 2);  unsqueeze_3236 = None
    unsqueeze_3238: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3237, 3);  unsqueeze_3237 = None
    sub_958: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_166, unsqueeze_3229);  convolution_166 = unsqueeze_3229 = None
    mul_3827: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_958, unsqueeze_3235);  sub_958 = unsqueeze_3235 = None
    sub_959: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_130, mul_3827);  mul_3827 = None
    sub_960: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_959, unsqueeze_3232);  sub_959 = unsqueeze_3232 = None
    mul_3828: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_960, unsqueeze_3238);  sub_960 = unsqueeze_3238 = None
    mul_3829: "f32[18]" = torch.ops.aten.mul.Tensor(sum_323, squeeze_499);  sum_323 = squeeze_499 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_158 = torch.ops.aten.convolution_backward.default(mul_3828, relu_152, primals_499, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3828 = primals_499 = None
    getitem_1124: "f32[8, 18, 56, 56]" = convolution_backward_158[0]
    getitem_1125: "f32[18, 18, 3, 3]" = convolution_backward_158[1];  convolution_backward_158 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_630: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_152);  relu_152 = None
    alias_631: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_630);  alias_630 = None
    le_131: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_631, 0);  alias_631 = None
    scalar_tensor_131: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_131: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_131, scalar_tensor_131, getitem_1124);  le_131 = scalar_tensor_131 = getitem_1124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3239: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_495, 0);  squeeze_495 = None
    unsqueeze_3240: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3239, 2);  unsqueeze_3239 = None
    unsqueeze_3241: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3240, 3);  unsqueeze_3240 = None
    sum_324: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_131, [0, 2, 3])
    sub_961: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_165, unsqueeze_3241)
    mul_3830: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_131, sub_961);  sub_961 = None
    sum_325: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3830, [0, 2, 3]);  mul_3830 = None
    mul_3831: "f32[18]" = torch.ops.aten.mul.Tensor(sum_324, 3.985969387755102e-05)
    unsqueeze_3242: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3831, 0);  mul_3831 = None
    unsqueeze_3243: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3242, 2);  unsqueeze_3242 = None
    unsqueeze_3244: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3243, 3);  unsqueeze_3243 = None
    mul_3832: "f32[18]" = torch.ops.aten.mul.Tensor(sum_325, 3.985969387755102e-05)
    mul_3833: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_496, squeeze_496)
    mul_3834: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3832, mul_3833);  mul_3832 = mul_3833 = None
    unsqueeze_3245: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3834, 0);  mul_3834 = None
    unsqueeze_3246: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3245, 2);  unsqueeze_3245 = None
    unsqueeze_3247: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3246, 3);  unsqueeze_3246 = None
    mul_3835: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_496, primals_497);  primals_497 = None
    unsqueeze_3248: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3835, 0);  mul_3835 = None
    unsqueeze_3249: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3248, 2);  unsqueeze_3248 = None
    unsqueeze_3250: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3249, 3);  unsqueeze_3249 = None
    sub_962: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_165, unsqueeze_3241);  convolution_165 = unsqueeze_3241 = None
    mul_3836: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_962, unsqueeze_3247);  sub_962 = unsqueeze_3247 = None
    sub_963: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_131, mul_3836);  where_131 = mul_3836 = None
    sub_964: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_963, unsqueeze_3244);  sub_963 = unsqueeze_3244 = None
    mul_3837: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_964, unsqueeze_3250);  sub_964 = unsqueeze_3250 = None
    mul_3838: "f32[18]" = torch.ops.aten.mul.Tensor(sum_325, squeeze_496);  sum_325 = squeeze_496 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_159 = torch.ops.aten.convolution_backward.default(mul_3837, relu_151, primals_496, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3837 = primals_496 = None
    getitem_1127: "f32[8, 18, 56, 56]" = convolution_backward_159[0]
    getitem_1128: "f32[18, 18, 3, 3]" = convolution_backward_159[1];  convolution_backward_159 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2011: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_130, getitem_1127);  where_130 = getitem_1127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_633: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_151);  relu_151 = None
    alias_634: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_633);  alias_633 = None
    le_132: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_634, 0);  alias_634 = None
    scalar_tensor_132: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_132: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_132, scalar_tensor_132, add_2011);  le_132 = scalar_tensor_132 = add_2011 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3251: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_492, 0);  squeeze_492 = None
    unsqueeze_3252: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3251, 2);  unsqueeze_3251 = None
    unsqueeze_3253: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3252, 3);  unsqueeze_3252 = None
    sum_326: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_132, [0, 2, 3])
    sub_965: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_164, unsqueeze_3253)
    mul_3839: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_132, sub_965);  sub_965 = None
    sum_327: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3839, [0, 2, 3]);  mul_3839 = None
    mul_3840: "f32[18]" = torch.ops.aten.mul.Tensor(sum_326, 3.985969387755102e-05)
    unsqueeze_3254: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3840, 0);  mul_3840 = None
    unsqueeze_3255: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3254, 2);  unsqueeze_3254 = None
    unsqueeze_3256: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3255, 3);  unsqueeze_3255 = None
    mul_3841: "f32[18]" = torch.ops.aten.mul.Tensor(sum_327, 3.985969387755102e-05)
    mul_3842: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_493, squeeze_493)
    mul_3843: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3841, mul_3842);  mul_3841 = mul_3842 = None
    unsqueeze_3257: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3843, 0);  mul_3843 = None
    unsqueeze_3258: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3257, 2);  unsqueeze_3257 = None
    unsqueeze_3259: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3258, 3);  unsqueeze_3258 = None
    mul_3844: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_493, primals_494);  primals_494 = None
    unsqueeze_3260: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3844, 0);  mul_3844 = None
    unsqueeze_3261: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3260, 2);  unsqueeze_3260 = None
    unsqueeze_3262: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3261, 3);  unsqueeze_3261 = None
    sub_966: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_164, unsqueeze_3253);  convolution_164 = unsqueeze_3253 = None
    mul_3845: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_966, unsqueeze_3259);  sub_966 = unsqueeze_3259 = None
    sub_967: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_132, mul_3845);  mul_3845 = None
    sub_968: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_967, unsqueeze_3256);  sub_967 = unsqueeze_3256 = None
    mul_3846: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_968, unsqueeze_3262);  sub_968 = unsqueeze_3262 = None
    mul_3847: "f32[18]" = torch.ops.aten.mul.Tensor(sum_327, squeeze_493);  sum_327 = squeeze_493 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_160 = torch.ops.aten.convolution_backward.default(mul_3846, relu_150, primals_493, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3846 = primals_493 = None
    getitem_1130: "f32[8, 18, 56, 56]" = convolution_backward_160[0]
    getitem_1131: "f32[18, 18, 3, 3]" = convolution_backward_160[1];  convolution_backward_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_636: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_150);  relu_150 = None
    alias_637: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_636);  alias_636 = None
    le_133: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_637, 0);  alias_637 = None
    scalar_tensor_133: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_133: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_133, scalar_tensor_133, getitem_1130);  le_133 = scalar_tensor_133 = getitem_1130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3263: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_489, 0);  squeeze_489 = None
    unsqueeze_3264: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3263, 2);  unsqueeze_3263 = None
    unsqueeze_3265: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3264, 3);  unsqueeze_3264 = None
    sum_328: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_133, [0, 2, 3])
    sub_969: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_163, unsqueeze_3265)
    mul_3848: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_133, sub_969);  sub_969 = None
    sum_329: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3848, [0, 2, 3]);  mul_3848 = None
    mul_3849: "f32[18]" = torch.ops.aten.mul.Tensor(sum_328, 3.985969387755102e-05)
    unsqueeze_3266: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3849, 0);  mul_3849 = None
    unsqueeze_3267: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3266, 2);  unsqueeze_3266 = None
    unsqueeze_3268: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3267, 3);  unsqueeze_3267 = None
    mul_3850: "f32[18]" = torch.ops.aten.mul.Tensor(sum_329, 3.985969387755102e-05)
    mul_3851: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_490, squeeze_490)
    mul_3852: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3850, mul_3851);  mul_3850 = mul_3851 = None
    unsqueeze_3269: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3852, 0);  mul_3852 = None
    unsqueeze_3270: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3269, 2);  unsqueeze_3269 = None
    unsqueeze_3271: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3270, 3);  unsqueeze_3270 = None
    mul_3853: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_490, primals_491);  primals_491 = None
    unsqueeze_3272: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3853, 0);  mul_3853 = None
    unsqueeze_3273: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3272, 2);  unsqueeze_3272 = None
    unsqueeze_3274: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3273, 3);  unsqueeze_3273 = None
    sub_970: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_163, unsqueeze_3265);  convolution_163 = unsqueeze_3265 = None
    mul_3854: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_970, unsqueeze_3271);  sub_970 = unsqueeze_3271 = None
    sub_971: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_133, mul_3854);  where_133 = mul_3854 = None
    sub_972: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_971, unsqueeze_3268);  sub_971 = unsqueeze_3268 = None
    mul_3855: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_972, unsqueeze_3274);  sub_972 = unsqueeze_3274 = None
    mul_3856: "f32[18]" = torch.ops.aten.mul.Tensor(sum_329, squeeze_490);  sum_329 = squeeze_490 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_161 = torch.ops.aten.convolution_backward.default(mul_3855, relu_149, primals_490, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3855 = primals_490 = None
    getitem_1133: "f32[8, 18, 56, 56]" = convolution_backward_161[0]
    getitem_1134: "f32[18, 18, 3, 3]" = convolution_backward_161[1];  convolution_backward_161 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2012: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_132, getitem_1133);  where_132 = getitem_1133 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_639: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_149);  relu_149 = None
    alias_640: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_639);  alias_639 = None
    le_134: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_640, 0);  alias_640 = None
    scalar_tensor_134: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_134: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_134, scalar_tensor_134, add_2012);  le_134 = scalar_tensor_134 = add_2012 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3275: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_486, 0);  squeeze_486 = None
    unsqueeze_3276: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3275, 2);  unsqueeze_3275 = None
    unsqueeze_3277: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3276, 3);  unsqueeze_3276 = None
    sum_330: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_134, [0, 2, 3])
    sub_973: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_162, unsqueeze_3277)
    mul_3857: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_134, sub_973);  sub_973 = None
    sum_331: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3857, [0, 2, 3]);  mul_3857 = None
    mul_3858: "f32[18]" = torch.ops.aten.mul.Tensor(sum_330, 3.985969387755102e-05)
    unsqueeze_3278: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3858, 0);  mul_3858 = None
    unsqueeze_3279: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3278, 2);  unsqueeze_3278 = None
    unsqueeze_3280: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3279, 3);  unsqueeze_3279 = None
    mul_3859: "f32[18]" = torch.ops.aten.mul.Tensor(sum_331, 3.985969387755102e-05)
    mul_3860: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_487, squeeze_487)
    mul_3861: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3859, mul_3860);  mul_3859 = mul_3860 = None
    unsqueeze_3281: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3861, 0);  mul_3861 = None
    unsqueeze_3282: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3281, 2);  unsqueeze_3281 = None
    unsqueeze_3283: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3282, 3);  unsqueeze_3282 = None
    mul_3862: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_487, primals_488);  primals_488 = None
    unsqueeze_3284: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3862, 0);  mul_3862 = None
    unsqueeze_3285: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3284, 2);  unsqueeze_3284 = None
    unsqueeze_3286: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3285, 3);  unsqueeze_3285 = None
    sub_974: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_162, unsqueeze_3277);  convolution_162 = unsqueeze_3277 = None
    mul_3863: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_974, unsqueeze_3283);  sub_974 = unsqueeze_3283 = None
    sub_975: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_134, mul_3863);  mul_3863 = None
    sub_976: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_975, unsqueeze_3280);  sub_975 = unsqueeze_3280 = None
    mul_3864: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_976, unsqueeze_3286);  sub_976 = unsqueeze_3286 = None
    mul_3865: "f32[18]" = torch.ops.aten.mul.Tensor(sum_331, squeeze_487);  sum_331 = squeeze_487 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_162 = torch.ops.aten.convolution_backward.default(mul_3864, relu_148, primals_487, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3864 = primals_487 = None
    getitem_1136: "f32[8, 18, 56, 56]" = convolution_backward_162[0]
    getitem_1137: "f32[18, 18, 3, 3]" = convolution_backward_162[1];  convolution_backward_162 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_642: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_148);  relu_148 = None
    alias_643: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_642);  alias_642 = None
    le_135: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_643, 0);  alias_643 = None
    scalar_tensor_135: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_135: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_135, scalar_tensor_135, getitem_1136);  le_135 = scalar_tensor_135 = getitem_1136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3287: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_483, 0);  squeeze_483 = None
    unsqueeze_3288: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3287, 2);  unsqueeze_3287 = None
    unsqueeze_3289: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3288, 3);  unsqueeze_3288 = None
    sum_332: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_135, [0, 2, 3])
    sub_977: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_161, unsqueeze_3289)
    mul_3866: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_135, sub_977);  sub_977 = None
    sum_333: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3866, [0, 2, 3]);  mul_3866 = None
    mul_3867: "f32[18]" = torch.ops.aten.mul.Tensor(sum_332, 3.985969387755102e-05)
    unsqueeze_3290: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3867, 0);  mul_3867 = None
    unsqueeze_3291: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3290, 2);  unsqueeze_3290 = None
    unsqueeze_3292: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3291, 3);  unsqueeze_3291 = None
    mul_3868: "f32[18]" = torch.ops.aten.mul.Tensor(sum_333, 3.985969387755102e-05)
    mul_3869: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_484, squeeze_484)
    mul_3870: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3868, mul_3869);  mul_3868 = mul_3869 = None
    unsqueeze_3293: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3870, 0);  mul_3870 = None
    unsqueeze_3294: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3293, 2);  unsqueeze_3293 = None
    unsqueeze_3295: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3294, 3);  unsqueeze_3294 = None
    mul_3871: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_484, primals_485);  primals_485 = None
    unsqueeze_3296: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3871, 0);  mul_3871 = None
    unsqueeze_3297: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3296, 2);  unsqueeze_3296 = None
    unsqueeze_3298: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3297, 3);  unsqueeze_3297 = None
    sub_978: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_161, unsqueeze_3289);  convolution_161 = unsqueeze_3289 = None
    mul_3872: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_978, unsqueeze_3295);  sub_978 = unsqueeze_3295 = None
    sub_979: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_135, mul_3872);  where_135 = mul_3872 = None
    sub_980: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_979, unsqueeze_3292);  sub_979 = unsqueeze_3292 = None
    mul_3873: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_980, unsqueeze_3298);  sub_980 = unsqueeze_3298 = None
    mul_3874: "f32[18]" = torch.ops.aten.mul.Tensor(sum_333, squeeze_484);  sum_333 = squeeze_484 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_163 = torch.ops.aten.convolution_backward.default(mul_3873, relu_143, primals_484, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3873 = relu_143 = primals_484 = None
    getitem_1139: "f32[8, 18, 56, 56]" = convolution_backward_163[0]
    getitem_1140: "f32[18, 18, 3, 3]" = convolution_backward_163[1];  convolution_backward_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2013: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_134, getitem_1139);  where_134 = getitem_1139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:756, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition3)]
    alias_645: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(relu_147);  relu_147 = None
    alias_646: "f32[8, 144, 7, 7]" = torch.ops.aten.alias.default(alias_645);  alias_645 = None
    le_136: "b8[8, 144, 7, 7]" = torch.ops.aten.le.Scalar(alias_646, 0);  alias_646 = None
    scalar_tensor_136: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_136: "f32[8, 144, 7, 7]" = torch.ops.aten.where.self(le_136, scalar_tensor_136, add_2001);  le_136 = scalar_tensor_136 = add_2001 = None
    unsqueeze_3299: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(squeeze_480, 0);  squeeze_480 = None
    unsqueeze_3300: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3299, 2);  unsqueeze_3299 = None
    unsqueeze_3301: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3300, 3);  unsqueeze_3300 = None
    sum_334: "f32[144]" = torch.ops.aten.sum.dim_IntList(where_136, [0, 2, 3])
    sub_981: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_160, unsqueeze_3301)
    mul_3875: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(where_136, sub_981);  sub_981 = None
    sum_335: "f32[144]" = torch.ops.aten.sum.dim_IntList(mul_3875, [0, 2, 3]);  mul_3875 = None
    mul_3876: "f32[144]" = torch.ops.aten.mul.Tensor(sum_334, 0.002551020408163265)
    unsqueeze_3302: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3876, 0);  mul_3876 = None
    unsqueeze_3303: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3302, 2);  unsqueeze_3302 = None
    unsqueeze_3304: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3303, 3);  unsqueeze_3303 = None
    mul_3877: "f32[144]" = torch.ops.aten.mul.Tensor(sum_335, 0.002551020408163265)
    mul_3878: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_481, squeeze_481)
    mul_3879: "f32[144]" = torch.ops.aten.mul.Tensor(mul_3877, mul_3878);  mul_3877 = mul_3878 = None
    unsqueeze_3305: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3879, 0);  mul_3879 = None
    unsqueeze_3306: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3305, 2);  unsqueeze_3305 = None
    unsqueeze_3307: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3306, 3);  unsqueeze_3306 = None
    mul_3880: "f32[144]" = torch.ops.aten.mul.Tensor(squeeze_481, primals_482);  primals_482 = None
    unsqueeze_3308: "f32[1, 144]" = torch.ops.aten.unsqueeze.default(mul_3880, 0);  mul_3880 = None
    unsqueeze_3309: "f32[1, 144, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3308, 2);  unsqueeze_3308 = None
    unsqueeze_3310: "f32[1, 144, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3309, 3);  unsqueeze_3309 = None
    sub_982: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(convolution_160, unsqueeze_3301);  convolution_160 = unsqueeze_3301 = None
    mul_3881: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_982, unsqueeze_3307);  sub_982 = unsqueeze_3307 = None
    sub_983: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(where_136, mul_3881);  where_136 = mul_3881 = None
    sub_984: "f32[8, 144, 7, 7]" = torch.ops.aten.sub.Tensor(sub_983, unsqueeze_3304);  sub_983 = unsqueeze_3304 = None
    mul_3882: "f32[8, 144, 7, 7]" = torch.ops.aten.mul.Tensor(sub_984, unsqueeze_3310);  sub_984 = unsqueeze_3310 = None
    mul_3883: "f32[144]" = torch.ops.aten.mul.Tensor(sum_335, squeeze_481);  sum_335 = squeeze_481 = None
    convolution_backward_164 = torch.ops.aten.convolution_backward.default(mul_3882, relu_146, primals_481, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3882 = relu_146 = primals_481 = None
    getitem_1142: "f32[8, 72, 14, 14]" = convolution_backward_164[0]
    getitem_1143: "f32[144, 72, 3, 3]" = convolution_backward_164[1];  convolution_backward_164 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:756, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition3)]
    add_2014: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_2005, getitem_1142);  add_2005 = getitem_1142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_647: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_146);  alias_146 = None
    le_137: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_647, 0);  alias_647 = None
    scalar_tensor_137: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_137: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_137, scalar_tensor_137, add_2014);  le_137 = scalar_tensor_137 = add_2014 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_3311: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_477, 0);  squeeze_477 = None
    unsqueeze_3312: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3311, 2);  unsqueeze_3311 = None
    unsqueeze_3313: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3312, 3);  unsqueeze_3312 = None
    sum_336: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_137, [0, 2, 3])
    sub_985: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_159, unsqueeze_3313)
    mul_3884: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_137, sub_985);  sub_985 = None
    sum_337: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3884, [0, 2, 3]);  mul_3884 = None
    mul_3885: "f32[72]" = torch.ops.aten.mul.Tensor(sum_336, 0.0006377551020408163)
    unsqueeze_3314: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3885, 0);  mul_3885 = None
    unsqueeze_3315: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3314, 2);  unsqueeze_3314 = None
    unsqueeze_3316: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3315, 3);  unsqueeze_3315 = None
    mul_3886: "f32[72]" = torch.ops.aten.mul.Tensor(sum_337, 0.0006377551020408163)
    mul_3887: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_478, squeeze_478)
    mul_3888: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3886, mul_3887);  mul_3886 = mul_3887 = None
    unsqueeze_3317: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3888, 0);  mul_3888 = None
    unsqueeze_3318: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3317, 2);  unsqueeze_3317 = None
    unsqueeze_3319: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3318, 3);  unsqueeze_3318 = None
    mul_3889: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_478, primals_479);  primals_479 = None
    unsqueeze_3320: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3889, 0);  mul_3889 = None
    unsqueeze_3321: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3320, 2);  unsqueeze_3320 = None
    unsqueeze_3322: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3321, 3);  unsqueeze_3321 = None
    sub_986: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_159, unsqueeze_3313);  convolution_159 = unsqueeze_3313 = None
    mul_3890: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_986, unsqueeze_3319);  sub_986 = unsqueeze_3319 = None
    sub_987: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_137, mul_3890);  mul_3890 = None
    sub_988: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_987, unsqueeze_3316);  sub_987 = unsqueeze_3316 = None
    mul_3891: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_988, unsqueeze_3322);  sub_988 = unsqueeze_3322 = None
    mul_3892: "f32[72]" = torch.ops.aten.mul.Tensor(sum_337, squeeze_478);  sum_337 = squeeze_478 = None
    convolution_backward_165 = torch.ops.aten.convolution_backward.default(mul_3891, relu_134, primals_478, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3891 = primals_478 = None
    getitem_1145: "f32[8, 36, 28, 28]" = convolution_backward_165[0]
    getitem_1146: "f32[72, 36, 3, 3]" = convolution_backward_165[1];  convolution_backward_165 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_3323: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_474, 0);  squeeze_474 = None
    unsqueeze_3324: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3323, 2);  unsqueeze_3323 = None
    unsqueeze_3325: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3324, 3);  unsqueeze_3324 = None
    sum_338: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_137, [0, 2, 3])
    sub_989: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_158, unsqueeze_3325)
    mul_3893: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_137, sub_989);  sub_989 = None
    sum_339: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3893, [0, 2, 3]);  mul_3893 = None
    mul_3894: "f32[72]" = torch.ops.aten.mul.Tensor(sum_338, 0.0006377551020408163)
    unsqueeze_3326: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3894, 0);  mul_3894 = None
    unsqueeze_3327: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3326, 2);  unsqueeze_3326 = None
    unsqueeze_3328: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3327, 3);  unsqueeze_3327 = None
    mul_3895: "f32[72]" = torch.ops.aten.mul.Tensor(sum_339, 0.0006377551020408163)
    mul_3896: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_475, squeeze_475)
    mul_3897: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3895, mul_3896);  mul_3895 = mul_3896 = None
    unsqueeze_3329: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3897, 0);  mul_3897 = None
    unsqueeze_3330: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3329, 2);  unsqueeze_3329 = None
    unsqueeze_3331: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3330, 3);  unsqueeze_3330 = None
    mul_3898: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_475, primals_476);  primals_476 = None
    unsqueeze_3332: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3898, 0);  mul_3898 = None
    unsqueeze_3333: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3332, 2);  unsqueeze_3332 = None
    unsqueeze_3334: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3333, 3);  unsqueeze_3333 = None
    sub_990: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_158, unsqueeze_3325);  convolution_158 = unsqueeze_3325 = None
    mul_3899: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_990, unsqueeze_3331);  sub_990 = unsqueeze_3331 = None
    sub_991: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_137, mul_3899);  mul_3899 = None
    sub_992: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_991, unsqueeze_3328);  sub_991 = unsqueeze_3328 = None
    mul_3900: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_992, unsqueeze_3334);  sub_992 = unsqueeze_3334 = None
    mul_3901: "f32[72]" = torch.ops.aten.mul.Tensor(sum_339, squeeze_475);  sum_339 = squeeze_475 = None
    convolution_backward_166 = torch.ops.aten.convolution_backward.default(mul_3900, relu_145, primals_475, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3900 = relu_145 = primals_475 = None
    getitem_1148: "f32[8, 18, 28, 28]" = convolution_backward_166[0]
    getitem_1149: "f32[72, 18, 3, 3]" = convolution_backward_166[1];  convolution_backward_166 = None
    alias_648: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_145);  alias_145 = None
    le_138: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_648, 0);  alias_648 = None
    scalar_tensor_138: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_138: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_138, scalar_tensor_138, getitem_1148);  le_138 = scalar_tensor_138 = getitem_1148 = None
    unsqueeze_3335: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_471, 0);  squeeze_471 = None
    unsqueeze_3336: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3335, 2);  unsqueeze_3335 = None
    unsqueeze_3337: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3336, 3);  unsqueeze_3336 = None
    sum_340: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_138, [0, 2, 3])
    sub_993: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_157, unsqueeze_3337)
    mul_3902: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_138, sub_993);  sub_993 = None
    sum_341: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3902, [0, 2, 3]);  mul_3902 = None
    mul_3903: "f32[18]" = torch.ops.aten.mul.Tensor(sum_340, 0.00015943877551020407)
    unsqueeze_3338: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3903, 0);  mul_3903 = None
    unsqueeze_3339: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3338, 2);  unsqueeze_3338 = None
    unsqueeze_3340: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3339, 3);  unsqueeze_3339 = None
    mul_3904: "f32[18]" = torch.ops.aten.mul.Tensor(sum_341, 0.00015943877551020407)
    mul_3905: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_472, squeeze_472)
    mul_3906: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3904, mul_3905);  mul_3904 = mul_3905 = None
    unsqueeze_3341: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3906, 0);  mul_3906 = None
    unsqueeze_3342: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3341, 2);  unsqueeze_3341 = None
    unsqueeze_3343: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3342, 3);  unsqueeze_3342 = None
    mul_3907: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_472, primals_473);  primals_473 = None
    unsqueeze_3344: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3907, 0);  mul_3907 = None
    unsqueeze_3345: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3344, 2);  unsqueeze_3344 = None
    unsqueeze_3346: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3345, 3);  unsqueeze_3345 = None
    sub_994: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_157, unsqueeze_3337);  convolution_157 = unsqueeze_3337 = None
    mul_3908: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_994, unsqueeze_3343);  sub_994 = unsqueeze_3343 = None
    sub_995: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_138, mul_3908);  where_138 = mul_3908 = None
    sub_996: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_995, unsqueeze_3340);  sub_995 = unsqueeze_3340 = None
    mul_3909: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_996, unsqueeze_3346);  sub_996 = unsqueeze_3346 = None
    mul_3910: "f32[18]" = torch.ops.aten.mul.Tensor(sum_341, squeeze_472);  sum_341 = squeeze_472 = None
    convolution_backward_167 = torch.ops.aten.convolution_backward.default(mul_3909, relu_126, primals_472, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3909 = primals_472 = None
    getitem_1151: "f32[8, 18, 56, 56]" = convolution_backward_167[0]
    getitem_1152: "f32[18, 18, 3, 3]" = convolution_backward_167[1];  convolution_backward_167 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_649: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_144);  alias_144 = None
    le_139: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_649, 0);  alias_649 = None
    scalar_tensor_139: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_139: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_139, scalar_tensor_139, add_2009);  le_139 = scalar_tensor_139 = add_2009 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_18: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_18: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_18, [None, None, unsqueeze_640, convert_element_type_51], where_139, True);  full_18 = unsqueeze_640 = convert_element_type_51 = None
    unsqueeze_3347: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_468, 0);  squeeze_468 = None
    unsqueeze_3348: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3347, 2);  unsqueeze_3347 = None
    unsqueeze_3349: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3348, 3);  unsqueeze_3348 = None
    sum_342: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_18, [0, 2, 3])
    sub_997: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_156, unsqueeze_3349)
    mul_3911: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_18, sub_997);  sub_997 = None
    sum_343: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3911, [0, 2, 3]);  mul_3911 = None
    mul_3912: "f32[36]" = torch.ops.aten.mul.Tensor(sum_342, 0.0006377551020408163)
    unsqueeze_3350: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3912, 0);  mul_3912 = None
    unsqueeze_3351: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3350, 2);  unsqueeze_3350 = None
    unsqueeze_3352: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3351, 3);  unsqueeze_3351 = None
    mul_3913: "f32[36]" = torch.ops.aten.mul.Tensor(sum_343, 0.0006377551020408163)
    mul_3914: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_469, squeeze_469)
    mul_3915: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3913, mul_3914);  mul_3913 = mul_3914 = None
    unsqueeze_3353: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3915, 0);  mul_3915 = None
    unsqueeze_3354: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3353, 2);  unsqueeze_3353 = None
    unsqueeze_3355: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3354, 3);  unsqueeze_3354 = None
    mul_3916: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_469, primals_470);  primals_470 = None
    unsqueeze_3356: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3916, 0);  mul_3916 = None
    unsqueeze_3357: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3356, 2);  unsqueeze_3356 = None
    unsqueeze_3358: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3357, 3);  unsqueeze_3357 = None
    sub_998: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_156, unsqueeze_3349);  convolution_156 = unsqueeze_3349 = None
    mul_3917: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_998, unsqueeze_3355);  sub_998 = unsqueeze_3355 = None
    sub_999: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_18, mul_3917);  _unsafe_index_put_18 = mul_3917 = None
    sub_1000: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_999, unsqueeze_3352);  sub_999 = unsqueeze_3352 = None
    mul_3918: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1000, unsqueeze_3358);  sub_1000 = unsqueeze_3358 = None
    mul_3919: "f32[36]" = torch.ops.aten.mul.Tensor(sum_343, squeeze_469);  sum_343 = squeeze_469 = None
    convolution_backward_168 = torch.ops.aten.convolution_backward.default(mul_3918, relu_142, primals_469, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3918 = primals_469 = None
    getitem_1154: "f32[8, 72, 14, 14]" = convolution_backward_168[0]
    getitem_1155: "f32[36, 72, 1, 1]" = convolution_backward_168[1];  convolution_backward_168 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2015: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_137, getitem_1154);  where_137 = getitem_1154 = None
    add_2016: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_1145, where_139);  getitem_1145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_3359: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_465, 0);  squeeze_465 = None
    unsqueeze_3360: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3359, 2);  unsqueeze_3359 = None
    unsqueeze_3361: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3360, 3);  unsqueeze_3360 = None
    sum_344: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_139, [0, 2, 3])
    sub_1001: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_155, unsqueeze_3361)
    mul_3920: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_139, sub_1001);  sub_1001 = None
    sum_345: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_3920, [0, 2, 3]);  mul_3920 = None
    mul_3921: "f32[36]" = torch.ops.aten.mul.Tensor(sum_344, 0.00015943877551020407)
    unsqueeze_3362: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3921, 0);  mul_3921 = None
    unsqueeze_3363: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3362, 2);  unsqueeze_3362 = None
    unsqueeze_3364: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3363, 3);  unsqueeze_3363 = None
    mul_3922: "f32[36]" = torch.ops.aten.mul.Tensor(sum_345, 0.00015943877551020407)
    mul_3923: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_466, squeeze_466)
    mul_3924: "f32[36]" = torch.ops.aten.mul.Tensor(mul_3922, mul_3923);  mul_3922 = mul_3923 = None
    unsqueeze_3365: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3924, 0);  mul_3924 = None
    unsqueeze_3366: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3365, 2);  unsqueeze_3365 = None
    unsqueeze_3367: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3366, 3);  unsqueeze_3366 = None
    mul_3925: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_466, primals_467);  primals_467 = None
    unsqueeze_3368: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_3925, 0);  mul_3925 = None
    unsqueeze_3369: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3368, 2);  unsqueeze_3368 = None
    unsqueeze_3370: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3369, 3);  unsqueeze_3369 = None
    sub_1002: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_155, unsqueeze_3361);  convolution_155 = unsqueeze_3361 = None
    mul_3926: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1002, unsqueeze_3367);  sub_1002 = unsqueeze_3367 = None
    sub_1003: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_139, mul_3926);  where_139 = mul_3926 = None
    sub_1004: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1003, unsqueeze_3364);  sub_1003 = unsqueeze_3364 = None
    mul_3927: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1004, unsqueeze_3370);  sub_1004 = unsqueeze_3370 = None
    mul_3928: "f32[36]" = torch.ops.aten.mul.Tensor(sum_345, squeeze_466);  sum_345 = squeeze_466 = None
    convolution_backward_169 = torch.ops.aten.convolution_backward.default(mul_3927, relu_126, primals_466, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3927 = primals_466 = None
    getitem_1157: "f32[8, 18, 56, 56]" = convolution_backward_169[0]
    getitem_1158: "f32[36, 18, 3, 3]" = convolution_backward_169[1];  convolution_backward_169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_2017: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1151, getitem_1157);  getitem_1151 = getitem_1157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_650: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_143);  alias_143 = None
    le_140: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_650, 0);  alias_650 = None
    scalar_tensor_140: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_140: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_140, scalar_tensor_140, add_2013);  le_140 = scalar_tensor_140 = add_2013 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_19: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_19: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_19, [None, None, unsqueeze_631, convert_element_type_47], where_140, True);  full_19 = unsqueeze_631 = convert_element_type_47 = None
    unsqueeze_3371: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_462, 0);  squeeze_462 = None
    unsqueeze_3372: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3371, 2);  unsqueeze_3371 = None
    unsqueeze_3373: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3372, 3);  unsqueeze_3372 = None
    sum_346: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_19, [0, 2, 3])
    sub_1005: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_154, unsqueeze_3373)
    mul_3929: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_19, sub_1005);  sub_1005 = None
    sum_347: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3929, [0, 2, 3]);  mul_3929 = None
    mul_3930: "f32[18]" = torch.ops.aten.mul.Tensor(sum_346, 0.0006377551020408163)
    unsqueeze_3374: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3930, 0);  mul_3930 = None
    unsqueeze_3375: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3374, 2);  unsqueeze_3374 = None
    unsqueeze_3376: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3375, 3);  unsqueeze_3375 = None
    mul_3931: "f32[18]" = torch.ops.aten.mul.Tensor(sum_347, 0.0006377551020408163)
    mul_3932: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_463, squeeze_463)
    mul_3933: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3931, mul_3932);  mul_3931 = mul_3932 = None
    unsqueeze_3377: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3933, 0);  mul_3933 = None
    unsqueeze_3378: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3377, 2);  unsqueeze_3377 = None
    unsqueeze_3379: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3378, 3);  unsqueeze_3378 = None
    mul_3934: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_463, primals_464);  primals_464 = None
    unsqueeze_3380: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3934, 0);  mul_3934 = None
    unsqueeze_3381: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3380, 2);  unsqueeze_3380 = None
    unsqueeze_3382: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3381, 3);  unsqueeze_3381 = None
    sub_1006: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_154, unsqueeze_3373);  convolution_154 = unsqueeze_3373 = None
    mul_3935: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1006, unsqueeze_3379);  sub_1006 = unsqueeze_3379 = None
    sub_1007: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_19, mul_3935);  _unsafe_index_put_19 = mul_3935 = None
    sub_1008: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1007, unsqueeze_3376);  sub_1007 = unsqueeze_3376 = None
    mul_3936: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1008, unsqueeze_3382);  sub_1008 = unsqueeze_3382 = None
    mul_3937: "f32[18]" = torch.ops.aten.mul.Tensor(sum_347, squeeze_463);  sum_347 = squeeze_463 = None
    convolution_backward_170 = torch.ops.aten.convolution_backward.default(mul_3936, relu_142, primals_463, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3936 = primals_463 = None
    getitem_1160: "f32[8, 72, 14, 14]" = convolution_backward_170[0]
    getitem_1161: "f32[18, 72, 1, 1]" = convolution_backward_170[1];  convolution_backward_170 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2018: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_2015, getitem_1160);  add_2015 = getitem_1160 = None
    add_2019: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_2017, where_140);  add_2017 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_20: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_20: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_20, [None, None, unsqueeze_626, convert_element_type_43], where_140, True);  full_20 = unsqueeze_626 = convert_element_type_43 = where_140 = None
    unsqueeze_3383: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_459, 0);  squeeze_459 = None
    unsqueeze_3384: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3383, 2);  unsqueeze_3383 = None
    unsqueeze_3385: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3384, 3);  unsqueeze_3384 = None
    sum_348: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_20, [0, 2, 3])
    sub_1009: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_153, unsqueeze_3385)
    mul_3938: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_20, sub_1009);  sub_1009 = None
    sum_349: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_3938, [0, 2, 3]);  mul_3938 = None
    mul_3939: "f32[18]" = torch.ops.aten.mul.Tensor(sum_348, 0.00015943877551020407)
    unsqueeze_3386: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3939, 0);  mul_3939 = None
    unsqueeze_3387: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3386, 2);  unsqueeze_3386 = None
    unsqueeze_3388: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3387, 3);  unsqueeze_3387 = None
    mul_3940: "f32[18]" = torch.ops.aten.mul.Tensor(sum_349, 0.00015943877551020407)
    mul_3941: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_460, squeeze_460)
    mul_3942: "f32[18]" = torch.ops.aten.mul.Tensor(mul_3940, mul_3941);  mul_3940 = mul_3941 = None
    unsqueeze_3389: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3942, 0);  mul_3942 = None
    unsqueeze_3390: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3389, 2);  unsqueeze_3389 = None
    unsqueeze_3391: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3390, 3);  unsqueeze_3390 = None
    mul_3943: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_460, primals_461);  primals_461 = None
    unsqueeze_3392: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_3943, 0);  mul_3943 = None
    unsqueeze_3393: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3392, 2);  unsqueeze_3392 = None
    unsqueeze_3394: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3393, 3);  unsqueeze_3393 = None
    sub_1010: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_153, unsqueeze_3385);  convolution_153 = unsqueeze_3385 = None
    mul_3944: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1010, unsqueeze_3391);  sub_1010 = unsqueeze_3391 = None
    sub_1011: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_20, mul_3944);  _unsafe_index_put_20 = mul_3944 = None
    sub_1012: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1011, unsqueeze_3388);  sub_1011 = unsqueeze_3388 = None
    mul_3945: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1012, unsqueeze_3394);  sub_1012 = unsqueeze_3394 = None
    mul_3946: "f32[18]" = torch.ops.aten.mul.Tensor(sum_349, squeeze_460);  sum_349 = squeeze_460 = None
    convolution_backward_171 = torch.ops.aten.convolution_backward.default(mul_3945, relu_134, primals_460, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3945 = primals_460 = None
    getitem_1163: "f32[8, 36, 28, 28]" = convolution_backward_171[0]
    getitem_1164: "f32[18, 36, 1, 1]" = convolution_backward_171[1];  convolution_backward_171 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2020: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_2016, getitem_1163);  add_2016 = getitem_1163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_652: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_142);  relu_142 = None
    alias_653: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_652);  alias_652 = None
    le_141: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_653, 0);  alias_653 = None
    scalar_tensor_141: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_141: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_141, scalar_tensor_141, add_2018);  le_141 = scalar_tensor_141 = add_2018 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3395: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_456, 0);  squeeze_456 = None
    unsqueeze_3396: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3395, 2);  unsqueeze_3395 = None
    unsqueeze_3397: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3396, 3);  unsqueeze_3396 = None
    sum_350: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_141, [0, 2, 3])
    sub_1013: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_152, unsqueeze_3397)
    mul_3947: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_141, sub_1013);  sub_1013 = None
    sum_351: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3947, [0, 2, 3]);  mul_3947 = None
    mul_3948: "f32[72]" = torch.ops.aten.mul.Tensor(sum_350, 0.0006377551020408163)
    unsqueeze_3398: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3948, 0);  mul_3948 = None
    unsqueeze_3399: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3398, 2);  unsqueeze_3398 = None
    unsqueeze_3400: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3399, 3);  unsqueeze_3399 = None
    mul_3949: "f32[72]" = torch.ops.aten.mul.Tensor(sum_351, 0.0006377551020408163)
    mul_3950: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_457, squeeze_457)
    mul_3951: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3949, mul_3950);  mul_3949 = mul_3950 = None
    unsqueeze_3401: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3951, 0);  mul_3951 = None
    unsqueeze_3402: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3401, 2);  unsqueeze_3401 = None
    unsqueeze_3403: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3402, 3);  unsqueeze_3402 = None
    mul_3952: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_457, primals_458);  primals_458 = None
    unsqueeze_3404: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3952, 0);  mul_3952 = None
    unsqueeze_3405: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3404, 2);  unsqueeze_3404 = None
    unsqueeze_3406: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3405, 3);  unsqueeze_3405 = None
    sub_1014: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_152, unsqueeze_3397);  convolution_152 = unsqueeze_3397 = None
    mul_3953: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1014, unsqueeze_3403);  sub_1014 = unsqueeze_3403 = None
    sub_1015: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_141, mul_3953);  mul_3953 = None
    sub_1016: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1015, unsqueeze_3400);  sub_1015 = unsqueeze_3400 = None
    mul_3954: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1016, unsqueeze_3406);  sub_1016 = unsqueeze_3406 = None
    mul_3955: "f32[72]" = torch.ops.aten.mul.Tensor(sum_351, squeeze_457);  sum_351 = squeeze_457 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_172 = torch.ops.aten.convolution_backward.default(mul_3954, relu_141, primals_457, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3954 = primals_457 = None
    getitem_1166: "f32[8, 72, 14, 14]" = convolution_backward_172[0]
    getitem_1167: "f32[72, 72, 3, 3]" = convolution_backward_172[1];  convolution_backward_172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_655: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_141);  relu_141 = None
    alias_656: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_655);  alias_655 = None
    le_142: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_656, 0);  alias_656 = None
    scalar_tensor_142: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_142: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_142, scalar_tensor_142, getitem_1166);  le_142 = scalar_tensor_142 = getitem_1166 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3407: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_453, 0);  squeeze_453 = None
    unsqueeze_3408: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3407, 2);  unsqueeze_3407 = None
    unsqueeze_3409: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3408, 3);  unsqueeze_3408 = None
    sum_352: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_142, [0, 2, 3])
    sub_1017: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_151, unsqueeze_3409)
    mul_3956: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_142, sub_1017);  sub_1017 = None
    sum_353: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3956, [0, 2, 3]);  mul_3956 = None
    mul_3957: "f32[72]" = torch.ops.aten.mul.Tensor(sum_352, 0.0006377551020408163)
    unsqueeze_3410: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3957, 0);  mul_3957 = None
    unsqueeze_3411: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3410, 2);  unsqueeze_3410 = None
    unsqueeze_3412: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3411, 3);  unsqueeze_3411 = None
    mul_3958: "f32[72]" = torch.ops.aten.mul.Tensor(sum_353, 0.0006377551020408163)
    mul_3959: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_454, squeeze_454)
    mul_3960: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3958, mul_3959);  mul_3958 = mul_3959 = None
    unsqueeze_3413: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3960, 0);  mul_3960 = None
    unsqueeze_3414: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3413, 2);  unsqueeze_3413 = None
    unsqueeze_3415: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3414, 3);  unsqueeze_3414 = None
    mul_3961: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_454, primals_455);  primals_455 = None
    unsqueeze_3416: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3961, 0);  mul_3961 = None
    unsqueeze_3417: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3416, 2);  unsqueeze_3416 = None
    unsqueeze_3418: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3417, 3);  unsqueeze_3417 = None
    sub_1018: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_151, unsqueeze_3409);  convolution_151 = unsqueeze_3409 = None
    mul_3962: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1018, unsqueeze_3415);  sub_1018 = unsqueeze_3415 = None
    sub_1019: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_142, mul_3962);  where_142 = mul_3962 = None
    sub_1020: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1019, unsqueeze_3412);  sub_1019 = unsqueeze_3412 = None
    mul_3963: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1020, unsqueeze_3418);  sub_1020 = unsqueeze_3418 = None
    mul_3964: "f32[72]" = torch.ops.aten.mul.Tensor(sum_353, squeeze_454);  sum_353 = squeeze_454 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_173 = torch.ops.aten.convolution_backward.default(mul_3963, relu_140, primals_454, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3963 = primals_454 = None
    getitem_1169: "f32[8, 72, 14, 14]" = convolution_backward_173[0]
    getitem_1170: "f32[72, 72, 3, 3]" = convolution_backward_173[1];  convolution_backward_173 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2021: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_141, getitem_1169);  where_141 = getitem_1169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_658: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_140);  relu_140 = None
    alias_659: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_658);  alias_658 = None
    le_143: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_659, 0);  alias_659 = None
    scalar_tensor_143: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_143: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_143, scalar_tensor_143, add_2021);  le_143 = scalar_tensor_143 = add_2021 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3419: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_450, 0);  squeeze_450 = None
    unsqueeze_3420: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3419, 2);  unsqueeze_3419 = None
    unsqueeze_3421: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3420, 3);  unsqueeze_3420 = None
    sum_354: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_143, [0, 2, 3])
    sub_1021: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_150, unsqueeze_3421)
    mul_3965: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_143, sub_1021);  sub_1021 = None
    sum_355: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3965, [0, 2, 3]);  mul_3965 = None
    mul_3966: "f32[72]" = torch.ops.aten.mul.Tensor(sum_354, 0.0006377551020408163)
    unsqueeze_3422: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3966, 0);  mul_3966 = None
    unsqueeze_3423: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3422, 2);  unsqueeze_3422 = None
    unsqueeze_3424: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3423, 3);  unsqueeze_3423 = None
    mul_3967: "f32[72]" = torch.ops.aten.mul.Tensor(sum_355, 0.0006377551020408163)
    mul_3968: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_451, squeeze_451)
    mul_3969: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3967, mul_3968);  mul_3967 = mul_3968 = None
    unsqueeze_3425: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3969, 0);  mul_3969 = None
    unsqueeze_3426: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3425, 2);  unsqueeze_3425 = None
    unsqueeze_3427: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3426, 3);  unsqueeze_3426 = None
    mul_3970: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_451, primals_452);  primals_452 = None
    unsqueeze_3428: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3970, 0);  mul_3970 = None
    unsqueeze_3429: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3428, 2);  unsqueeze_3428 = None
    unsqueeze_3430: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3429, 3);  unsqueeze_3429 = None
    sub_1022: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_150, unsqueeze_3421);  convolution_150 = unsqueeze_3421 = None
    mul_3971: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1022, unsqueeze_3427);  sub_1022 = unsqueeze_3427 = None
    sub_1023: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_143, mul_3971);  mul_3971 = None
    sub_1024: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1023, unsqueeze_3424);  sub_1023 = unsqueeze_3424 = None
    mul_3972: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1024, unsqueeze_3430);  sub_1024 = unsqueeze_3430 = None
    mul_3973: "f32[72]" = torch.ops.aten.mul.Tensor(sum_355, squeeze_451);  sum_355 = squeeze_451 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_174 = torch.ops.aten.convolution_backward.default(mul_3972, relu_139, primals_451, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3972 = primals_451 = None
    getitem_1172: "f32[8, 72, 14, 14]" = convolution_backward_174[0]
    getitem_1173: "f32[72, 72, 3, 3]" = convolution_backward_174[1];  convolution_backward_174 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_661: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_139);  relu_139 = None
    alias_662: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_661);  alias_661 = None
    le_144: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_662, 0);  alias_662 = None
    scalar_tensor_144: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_144: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_144, scalar_tensor_144, getitem_1172);  le_144 = scalar_tensor_144 = getitem_1172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3431: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_447, 0);  squeeze_447 = None
    unsqueeze_3432: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3431, 2);  unsqueeze_3431 = None
    unsqueeze_3433: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3432, 3);  unsqueeze_3432 = None
    sum_356: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_144, [0, 2, 3])
    sub_1025: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_149, unsqueeze_3433)
    mul_3974: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_144, sub_1025);  sub_1025 = None
    sum_357: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3974, [0, 2, 3]);  mul_3974 = None
    mul_3975: "f32[72]" = torch.ops.aten.mul.Tensor(sum_356, 0.0006377551020408163)
    unsqueeze_3434: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3975, 0);  mul_3975 = None
    unsqueeze_3435: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3434, 2);  unsqueeze_3434 = None
    unsqueeze_3436: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3435, 3);  unsqueeze_3435 = None
    mul_3976: "f32[72]" = torch.ops.aten.mul.Tensor(sum_357, 0.0006377551020408163)
    mul_3977: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_448, squeeze_448)
    mul_3978: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3976, mul_3977);  mul_3976 = mul_3977 = None
    unsqueeze_3437: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3978, 0);  mul_3978 = None
    unsqueeze_3438: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3437, 2);  unsqueeze_3437 = None
    unsqueeze_3439: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3438, 3);  unsqueeze_3438 = None
    mul_3979: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_448, primals_449);  primals_449 = None
    unsqueeze_3440: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3979, 0);  mul_3979 = None
    unsqueeze_3441: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3440, 2);  unsqueeze_3440 = None
    unsqueeze_3442: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3441, 3);  unsqueeze_3441 = None
    sub_1026: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_149, unsqueeze_3433);  convolution_149 = unsqueeze_3433 = None
    mul_3980: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1026, unsqueeze_3439);  sub_1026 = unsqueeze_3439 = None
    sub_1027: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_144, mul_3980);  where_144 = mul_3980 = None
    sub_1028: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1027, unsqueeze_3436);  sub_1027 = unsqueeze_3436 = None
    mul_3981: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1028, unsqueeze_3442);  sub_1028 = unsqueeze_3442 = None
    mul_3982: "f32[72]" = torch.ops.aten.mul.Tensor(sum_357, squeeze_448);  sum_357 = squeeze_448 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_175 = torch.ops.aten.convolution_backward.default(mul_3981, relu_138, primals_448, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3981 = primals_448 = None
    getitem_1175: "f32[8, 72, 14, 14]" = convolution_backward_175[0]
    getitem_1176: "f32[72, 72, 3, 3]" = convolution_backward_175[1];  convolution_backward_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2022: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_143, getitem_1175);  where_143 = getitem_1175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_664: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_138);  relu_138 = None
    alias_665: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_664);  alias_664 = None
    le_145: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_665, 0);  alias_665 = None
    scalar_tensor_145: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_145: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_145, scalar_tensor_145, add_2022);  le_145 = scalar_tensor_145 = add_2022 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3443: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_444, 0);  squeeze_444 = None
    unsqueeze_3444: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3443, 2);  unsqueeze_3443 = None
    unsqueeze_3445: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3444, 3);  unsqueeze_3444 = None
    sum_358: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_145, [0, 2, 3])
    sub_1029: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_148, unsqueeze_3445)
    mul_3983: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_145, sub_1029);  sub_1029 = None
    sum_359: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3983, [0, 2, 3]);  mul_3983 = None
    mul_3984: "f32[72]" = torch.ops.aten.mul.Tensor(sum_358, 0.0006377551020408163)
    unsqueeze_3446: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3984, 0);  mul_3984 = None
    unsqueeze_3447: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3446, 2);  unsqueeze_3446 = None
    unsqueeze_3448: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3447, 3);  unsqueeze_3447 = None
    mul_3985: "f32[72]" = torch.ops.aten.mul.Tensor(sum_359, 0.0006377551020408163)
    mul_3986: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_445, squeeze_445)
    mul_3987: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3985, mul_3986);  mul_3985 = mul_3986 = None
    unsqueeze_3449: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3987, 0);  mul_3987 = None
    unsqueeze_3450: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3449, 2);  unsqueeze_3449 = None
    unsqueeze_3451: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3450, 3);  unsqueeze_3450 = None
    mul_3988: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_445, primals_446);  primals_446 = None
    unsqueeze_3452: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3988, 0);  mul_3988 = None
    unsqueeze_3453: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3452, 2);  unsqueeze_3452 = None
    unsqueeze_3454: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3453, 3);  unsqueeze_3453 = None
    sub_1030: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_148, unsqueeze_3445);  convolution_148 = unsqueeze_3445 = None
    mul_3989: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1030, unsqueeze_3451);  sub_1030 = unsqueeze_3451 = None
    sub_1031: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_145, mul_3989);  mul_3989 = None
    sub_1032: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1031, unsqueeze_3448);  sub_1031 = unsqueeze_3448 = None
    mul_3990: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1032, unsqueeze_3454);  sub_1032 = unsqueeze_3454 = None
    mul_3991: "f32[72]" = torch.ops.aten.mul.Tensor(sum_359, squeeze_445);  sum_359 = squeeze_445 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_176 = torch.ops.aten.convolution_backward.default(mul_3990, relu_137, primals_445, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3990 = primals_445 = None
    getitem_1178: "f32[8, 72, 14, 14]" = convolution_backward_176[0]
    getitem_1179: "f32[72, 72, 3, 3]" = convolution_backward_176[1];  convolution_backward_176 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_667: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_137);  relu_137 = None
    alias_668: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_667);  alias_667 = None
    le_146: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_668, 0);  alias_668 = None
    scalar_tensor_146: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_146: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_146, scalar_tensor_146, getitem_1178);  le_146 = scalar_tensor_146 = getitem_1178 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3455: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_441, 0);  squeeze_441 = None
    unsqueeze_3456: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3455, 2);  unsqueeze_3455 = None
    unsqueeze_3457: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3456, 3);  unsqueeze_3456 = None
    sum_360: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_146, [0, 2, 3])
    sub_1033: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_147, unsqueeze_3457)
    mul_3992: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_146, sub_1033);  sub_1033 = None
    sum_361: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_3992, [0, 2, 3]);  mul_3992 = None
    mul_3993: "f32[72]" = torch.ops.aten.mul.Tensor(sum_360, 0.0006377551020408163)
    unsqueeze_3458: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3993, 0);  mul_3993 = None
    unsqueeze_3459: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3458, 2);  unsqueeze_3458 = None
    unsqueeze_3460: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3459, 3);  unsqueeze_3459 = None
    mul_3994: "f32[72]" = torch.ops.aten.mul.Tensor(sum_361, 0.0006377551020408163)
    mul_3995: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_442, squeeze_442)
    mul_3996: "f32[72]" = torch.ops.aten.mul.Tensor(mul_3994, mul_3995);  mul_3994 = mul_3995 = None
    unsqueeze_3461: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3996, 0);  mul_3996 = None
    unsqueeze_3462: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3461, 2);  unsqueeze_3461 = None
    unsqueeze_3463: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3462, 3);  unsqueeze_3462 = None
    mul_3997: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_442, primals_443);  primals_443 = None
    unsqueeze_3464: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_3997, 0);  mul_3997 = None
    unsqueeze_3465: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3464, 2);  unsqueeze_3464 = None
    unsqueeze_3466: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3465, 3);  unsqueeze_3465 = None
    sub_1034: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_147, unsqueeze_3457);  convolution_147 = unsqueeze_3457 = None
    mul_3998: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1034, unsqueeze_3463);  sub_1034 = unsqueeze_3463 = None
    sub_1035: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_146, mul_3998);  where_146 = mul_3998 = None
    sub_1036: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1035, unsqueeze_3460);  sub_1035 = unsqueeze_3460 = None
    mul_3999: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1036, unsqueeze_3466);  sub_1036 = unsqueeze_3466 = None
    mul_4000: "f32[72]" = torch.ops.aten.mul.Tensor(sum_361, squeeze_442);  sum_361 = squeeze_442 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_177 = torch.ops.aten.convolution_backward.default(mul_3999, relu_136, primals_442, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_3999 = primals_442 = None
    getitem_1181: "f32[8, 72, 14, 14]" = convolution_backward_177[0]
    getitem_1182: "f32[72, 72, 3, 3]" = convolution_backward_177[1];  convolution_backward_177 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2023: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_145, getitem_1181);  where_145 = getitem_1181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_670: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_136);  relu_136 = None
    alias_671: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_670);  alias_670 = None
    le_147: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_671, 0);  alias_671 = None
    scalar_tensor_147: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_147: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_147, scalar_tensor_147, add_2023);  le_147 = scalar_tensor_147 = add_2023 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3467: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_438, 0);  squeeze_438 = None
    unsqueeze_3468: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3467, 2);  unsqueeze_3467 = None
    unsqueeze_3469: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3468, 3);  unsqueeze_3468 = None
    sum_362: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_147, [0, 2, 3])
    sub_1037: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_146, unsqueeze_3469)
    mul_4001: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_147, sub_1037);  sub_1037 = None
    sum_363: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4001, [0, 2, 3]);  mul_4001 = None
    mul_4002: "f32[72]" = torch.ops.aten.mul.Tensor(sum_362, 0.0006377551020408163)
    unsqueeze_3470: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4002, 0);  mul_4002 = None
    unsqueeze_3471: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3470, 2);  unsqueeze_3470 = None
    unsqueeze_3472: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3471, 3);  unsqueeze_3471 = None
    mul_4003: "f32[72]" = torch.ops.aten.mul.Tensor(sum_363, 0.0006377551020408163)
    mul_4004: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_439, squeeze_439)
    mul_4005: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4003, mul_4004);  mul_4003 = mul_4004 = None
    unsqueeze_3473: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4005, 0);  mul_4005 = None
    unsqueeze_3474: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3473, 2);  unsqueeze_3473 = None
    unsqueeze_3475: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3474, 3);  unsqueeze_3474 = None
    mul_4006: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_439, primals_440);  primals_440 = None
    unsqueeze_3476: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4006, 0);  mul_4006 = None
    unsqueeze_3477: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3476, 2);  unsqueeze_3476 = None
    unsqueeze_3478: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3477, 3);  unsqueeze_3477 = None
    sub_1038: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_146, unsqueeze_3469);  convolution_146 = unsqueeze_3469 = None
    mul_4007: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1038, unsqueeze_3475);  sub_1038 = unsqueeze_3475 = None
    sub_1039: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_147, mul_4007);  mul_4007 = None
    sub_1040: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1039, unsqueeze_3472);  sub_1039 = unsqueeze_3472 = None
    mul_4008: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1040, unsqueeze_3478);  sub_1040 = unsqueeze_3478 = None
    mul_4009: "f32[72]" = torch.ops.aten.mul.Tensor(sum_363, squeeze_439);  sum_363 = squeeze_439 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_178 = torch.ops.aten.convolution_backward.default(mul_4008, relu_135, primals_439, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4008 = primals_439 = None
    getitem_1184: "f32[8, 72, 14, 14]" = convolution_backward_178[0]
    getitem_1185: "f32[72, 72, 3, 3]" = convolution_backward_178[1];  convolution_backward_178 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_673: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_135);  relu_135 = None
    alias_674: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_673);  alias_673 = None
    le_148: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_674, 0);  alias_674 = None
    scalar_tensor_148: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_148: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_148, scalar_tensor_148, getitem_1184);  le_148 = scalar_tensor_148 = getitem_1184 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3479: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_435, 0);  squeeze_435 = None
    unsqueeze_3480: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3479, 2);  unsqueeze_3479 = None
    unsqueeze_3481: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3480, 3);  unsqueeze_3480 = None
    sum_364: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_148, [0, 2, 3])
    sub_1041: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_145, unsqueeze_3481)
    mul_4010: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_148, sub_1041);  sub_1041 = None
    sum_365: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4010, [0, 2, 3]);  mul_4010 = None
    mul_4011: "f32[72]" = torch.ops.aten.mul.Tensor(sum_364, 0.0006377551020408163)
    unsqueeze_3482: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4011, 0);  mul_4011 = None
    unsqueeze_3483: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3482, 2);  unsqueeze_3482 = None
    unsqueeze_3484: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3483, 3);  unsqueeze_3483 = None
    mul_4012: "f32[72]" = torch.ops.aten.mul.Tensor(sum_365, 0.0006377551020408163)
    mul_4013: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_436, squeeze_436)
    mul_4014: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4012, mul_4013);  mul_4012 = mul_4013 = None
    unsqueeze_3485: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4014, 0);  mul_4014 = None
    unsqueeze_3486: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3485, 2);  unsqueeze_3485 = None
    unsqueeze_3487: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3486, 3);  unsqueeze_3486 = None
    mul_4015: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_436, primals_437);  primals_437 = None
    unsqueeze_3488: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4015, 0);  mul_4015 = None
    unsqueeze_3489: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3488, 2);  unsqueeze_3488 = None
    unsqueeze_3490: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3489, 3);  unsqueeze_3489 = None
    sub_1042: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_145, unsqueeze_3481);  convolution_145 = unsqueeze_3481 = None
    mul_4016: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1042, unsqueeze_3487);  sub_1042 = unsqueeze_3487 = None
    sub_1043: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_148, mul_4016);  where_148 = mul_4016 = None
    sub_1044: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1043, unsqueeze_3484);  sub_1043 = unsqueeze_3484 = None
    mul_4017: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1044, unsqueeze_3490);  sub_1044 = unsqueeze_3490 = None
    mul_4018: "f32[72]" = torch.ops.aten.mul.Tensor(sum_365, squeeze_436);  sum_365 = squeeze_436 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_179 = torch.ops.aten.convolution_backward.default(mul_4017, relu_118, primals_436, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4017 = relu_118 = primals_436 = None
    getitem_1187: "f32[8, 72, 14, 14]" = convolution_backward_179[0]
    getitem_1188: "f32[72, 72, 3, 3]" = convolution_backward_179[1];  convolution_backward_179 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2024: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_147, getitem_1187);  where_147 = getitem_1187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_676: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_134);  relu_134 = None
    alias_677: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_676);  alias_676 = None
    le_149: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_677, 0);  alias_677 = None
    scalar_tensor_149: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_149: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_149, scalar_tensor_149, add_2020);  le_149 = scalar_tensor_149 = add_2020 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3491: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_432, 0);  squeeze_432 = None
    unsqueeze_3492: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3491, 2);  unsqueeze_3491 = None
    unsqueeze_3493: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3492, 3);  unsqueeze_3492 = None
    sum_366: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_149, [0, 2, 3])
    sub_1045: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_144, unsqueeze_3493)
    mul_4019: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_149, sub_1045);  sub_1045 = None
    sum_367: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4019, [0, 2, 3]);  mul_4019 = None
    mul_4020: "f32[36]" = torch.ops.aten.mul.Tensor(sum_366, 0.00015943877551020407)
    unsqueeze_3494: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4020, 0);  mul_4020 = None
    unsqueeze_3495: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3494, 2);  unsqueeze_3494 = None
    unsqueeze_3496: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3495, 3);  unsqueeze_3495 = None
    mul_4021: "f32[36]" = torch.ops.aten.mul.Tensor(sum_367, 0.00015943877551020407)
    mul_4022: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_433, squeeze_433)
    mul_4023: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4021, mul_4022);  mul_4021 = mul_4022 = None
    unsqueeze_3497: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4023, 0);  mul_4023 = None
    unsqueeze_3498: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3497, 2);  unsqueeze_3497 = None
    unsqueeze_3499: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3498, 3);  unsqueeze_3498 = None
    mul_4024: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_433, primals_434);  primals_434 = None
    unsqueeze_3500: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4024, 0);  mul_4024 = None
    unsqueeze_3501: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3500, 2);  unsqueeze_3500 = None
    unsqueeze_3502: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3501, 3);  unsqueeze_3501 = None
    sub_1046: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_144, unsqueeze_3493);  convolution_144 = unsqueeze_3493 = None
    mul_4025: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1046, unsqueeze_3499);  sub_1046 = unsqueeze_3499 = None
    sub_1047: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_149, mul_4025);  mul_4025 = None
    sub_1048: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1047, unsqueeze_3496);  sub_1047 = unsqueeze_3496 = None
    mul_4026: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1048, unsqueeze_3502);  sub_1048 = unsqueeze_3502 = None
    mul_4027: "f32[36]" = torch.ops.aten.mul.Tensor(sum_367, squeeze_433);  sum_367 = squeeze_433 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_180 = torch.ops.aten.convolution_backward.default(mul_4026, relu_133, primals_433, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4026 = primals_433 = None
    getitem_1190: "f32[8, 36, 28, 28]" = convolution_backward_180[0]
    getitem_1191: "f32[36, 36, 3, 3]" = convolution_backward_180[1];  convolution_backward_180 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_679: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_133);  relu_133 = None
    alias_680: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_679);  alias_679 = None
    le_150: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_680, 0);  alias_680 = None
    scalar_tensor_150: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_150: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_150, scalar_tensor_150, getitem_1190);  le_150 = scalar_tensor_150 = getitem_1190 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3503: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_429, 0);  squeeze_429 = None
    unsqueeze_3504: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3503, 2);  unsqueeze_3503 = None
    unsqueeze_3505: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3504, 3);  unsqueeze_3504 = None
    sum_368: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_150, [0, 2, 3])
    sub_1049: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_143, unsqueeze_3505)
    mul_4028: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_150, sub_1049);  sub_1049 = None
    sum_369: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4028, [0, 2, 3]);  mul_4028 = None
    mul_4029: "f32[36]" = torch.ops.aten.mul.Tensor(sum_368, 0.00015943877551020407)
    unsqueeze_3506: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4029, 0);  mul_4029 = None
    unsqueeze_3507: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3506, 2);  unsqueeze_3506 = None
    unsqueeze_3508: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3507, 3);  unsqueeze_3507 = None
    mul_4030: "f32[36]" = torch.ops.aten.mul.Tensor(sum_369, 0.00015943877551020407)
    mul_4031: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_430, squeeze_430)
    mul_4032: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4030, mul_4031);  mul_4030 = mul_4031 = None
    unsqueeze_3509: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4032, 0);  mul_4032 = None
    unsqueeze_3510: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3509, 2);  unsqueeze_3509 = None
    unsqueeze_3511: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3510, 3);  unsqueeze_3510 = None
    mul_4033: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_430, primals_431);  primals_431 = None
    unsqueeze_3512: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4033, 0);  mul_4033 = None
    unsqueeze_3513: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3512, 2);  unsqueeze_3512 = None
    unsqueeze_3514: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3513, 3);  unsqueeze_3513 = None
    sub_1050: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_143, unsqueeze_3505);  convolution_143 = unsqueeze_3505 = None
    mul_4034: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1050, unsqueeze_3511);  sub_1050 = unsqueeze_3511 = None
    sub_1051: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_150, mul_4034);  where_150 = mul_4034 = None
    sub_1052: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1051, unsqueeze_3508);  sub_1051 = unsqueeze_3508 = None
    mul_4035: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1052, unsqueeze_3514);  sub_1052 = unsqueeze_3514 = None
    mul_4036: "f32[36]" = torch.ops.aten.mul.Tensor(sum_369, squeeze_430);  sum_369 = squeeze_430 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_181 = torch.ops.aten.convolution_backward.default(mul_4035, relu_132, primals_430, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4035 = primals_430 = None
    getitem_1193: "f32[8, 36, 28, 28]" = convolution_backward_181[0]
    getitem_1194: "f32[36, 36, 3, 3]" = convolution_backward_181[1];  convolution_backward_181 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2025: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_149, getitem_1193);  where_149 = getitem_1193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_682: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_132);  relu_132 = None
    alias_683: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_682);  alias_682 = None
    le_151: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_683, 0);  alias_683 = None
    scalar_tensor_151: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_151: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_151, scalar_tensor_151, add_2025);  le_151 = scalar_tensor_151 = add_2025 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3515: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_426, 0);  squeeze_426 = None
    unsqueeze_3516: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3515, 2);  unsqueeze_3515 = None
    unsqueeze_3517: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3516, 3);  unsqueeze_3516 = None
    sum_370: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_151, [0, 2, 3])
    sub_1053: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_142, unsqueeze_3517)
    mul_4037: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_151, sub_1053);  sub_1053 = None
    sum_371: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4037, [0, 2, 3]);  mul_4037 = None
    mul_4038: "f32[36]" = torch.ops.aten.mul.Tensor(sum_370, 0.00015943877551020407)
    unsqueeze_3518: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4038, 0);  mul_4038 = None
    unsqueeze_3519: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3518, 2);  unsqueeze_3518 = None
    unsqueeze_3520: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3519, 3);  unsqueeze_3519 = None
    mul_4039: "f32[36]" = torch.ops.aten.mul.Tensor(sum_371, 0.00015943877551020407)
    mul_4040: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_427, squeeze_427)
    mul_4041: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4039, mul_4040);  mul_4039 = mul_4040 = None
    unsqueeze_3521: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4041, 0);  mul_4041 = None
    unsqueeze_3522: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3521, 2);  unsqueeze_3521 = None
    unsqueeze_3523: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3522, 3);  unsqueeze_3522 = None
    mul_4042: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_427, primals_428);  primals_428 = None
    unsqueeze_3524: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4042, 0);  mul_4042 = None
    unsqueeze_3525: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3524, 2);  unsqueeze_3524 = None
    unsqueeze_3526: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3525, 3);  unsqueeze_3525 = None
    sub_1054: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_142, unsqueeze_3517);  convolution_142 = unsqueeze_3517 = None
    mul_4043: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1054, unsqueeze_3523);  sub_1054 = unsqueeze_3523 = None
    sub_1055: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_151, mul_4043);  mul_4043 = None
    sub_1056: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1055, unsqueeze_3520);  sub_1055 = unsqueeze_3520 = None
    mul_4044: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1056, unsqueeze_3526);  sub_1056 = unsqueeze_3526 = None
    mul_4045: "f32[36]" = torch.ops.aten.mul.Tensor(sum_371, squeeze_427);  sum_371 = squeeze_427 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_182 = torch.ops.aten.convolution_backward.default(mul_4044, relu_131, primals_427, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4044 = primals_427 = None
    getitem_1196: "f32[8, 36, 28, 28]" = convolution_backward_182[0]
    getitem_1197: "f32[36, 36, 3, 3]" = convolution_backward_182[1];  convolution_backward_182 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_685: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_131);  relu_131 = None
    alias_686: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_685);  alias_685 = None
    le_152: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_686, 0);  alias_686 = None
    scalar_tensor_152: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_152: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_152, scalar_tensor_152, getitem_1196);  le_152 = scalar_tensor_152 = getitem_1196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3527: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_423, 0);  squeeze_423 = None
    unsqueeze_3528: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3527, 2);  unsqueeze_3527 = None
    unsqueeze_3529: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3528, 3);  unsqueeze_3528 = None
    sum_372: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_152, [0, 2, 3])
    sub_1057: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_141, unsqueeze_3529)
    mul_4046: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_152, sub_1057);  sub_1057 = None
    sum_373: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4046, [0, 2, 3]);  mul_4046 = None
    mul_4047: "f32[36]" = torch.ops.aten.mul.Tensor(sum_372, 0.00015943877551020407)
    unsqueeze_3530: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4047, 0);  mul_4047 = None
    unsqueeze_3531: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3530, 2);  unsqueeze_3530 = None
    unsqueeze_3532: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3531, 3);  unsqueeze_3531 = None
    mul_4048: "f32[36]" = torch.ops.aten.mul.Tensor(sum_373, 0.00015943877551020407)
    mul_4049: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_424, squeeze_424)
    mul_4050: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4048, mul_4049);  mul_4048 = mul_4049 = None
    unsqueeze_3533: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4050, 0);  mul_4050 = None
    unsqueeze_3534: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3533, 2);  unsqueeze_3533 = None
    unsqueeze_3535: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3534, 3);  unsqueeze_3534 = None
    mul_4051: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_424, primals_425);  primals_425 = None
    unsqueeze_3536: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4051, 0);  mul_4051 = None
    unsqueeze_3537: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3536, 2);  unsqueeze_3536 = None
    unsqueeze_3538: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3537, 3);  unsqueeze_3537 = None
    sub_1058: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_141, unsqueeze_3529);  convolution_141 = unsqueeze_3529 = None
    mul_4052: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1058, unsqueeze_3535);  sub_1058 = unsqueeze_3535 = None
    sub_1059: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_152, mul_4052);  where_152 = mul_4052 = None
    sub_1060: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1059, unsqueeze_3532);  sub_1059 = unsqueeze_3532 = None
    mul_4053: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1060, unsqueeze_3538);  sub_1060 = unsqueeze_3538 = None
    mul_4054: "f32[36]" = torch.ops.aten.mul.Tensor(sum_373, squeeze_424);  sum_373 = squeeze_424 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_183 = torch.ops.aten.convolution_backward.default(mul_4053, relu_130, primals_424, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4053 = primals_424 = None
    getitem_1199: "f32[8, 36, 28, 28]" = convolution_backward_183[0]
    getitem_1200: "f32[36, 36, 3, 3]" = convolution_backward_183[1];  convolution_backward_183 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2026: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_151, getitem_1199);  where_151 = getitem_1199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_688: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_130);  relu_130 = None
    alias_689: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_688);  alias_688 = None
    le_153: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_689, 0);  alias_689 = None
    scalar_tensor_153: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_153: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_153, scalar_tensor_153, add_2026);  le_153 = scalar_tensor_153 = add_2026 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3539: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_420, 0);  squeeze_420 = None
    unsqueeze_3540: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3539, 2);  unsqueeze_3539 = None
    unsqueeze_3541: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3540, 3);  unsqueeze_3540 = None
    sum_374: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_153, [0, 2, 3])
    sub_1061: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_140, unsqueeze_3541)
    mul_4055: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_153, sub_1061);  sub_1061 = None
    sum_375: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4055, [0, 2, 3]);  mul_4055 = None
    mul_4056: "f32[36]" = torch.ops.aten.mul.Tensor(sum_374, 0.00015943877551020407)
    unsqueeze_3542: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4056, 0);  mul_4056 = None
    unsqueeze_3543: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3542, 2);  unsqueeze_3542 = None
    unsqueeze_3544: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3543, 3);  unsqueeze_3543 = None
    mul_4057: "f32[36]" = torch.ops.aten.mul.Tensor(sum_375, 0.00015943877551020407)
    mul_4058: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_421, squeeze_421)
    mul_4059: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4057, mul_4058);  mul_4057 = mul_4058 = None
    unsqueeze_3545: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4059, 0);  mul_4059 = None
    unsqueeze_3546: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3545, 2);  unsqueeze_3545 = None
    unsqueeze_3547: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3546, 3);  unsqueeze_3546 = None
    mul_4060: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_421, primals_422);  primals_422 = None
    unsqueeze_3548: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4060, 0);  mul_4060 = None
    unsqueeze_3549: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3548, 2);  unsqueeze_3548 = None
    unsqueeze_3550: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3549, 3);  unsqueeze_3549 = None
    sub_1062: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_140, unsqueeze_3541);  convolution_140 = unsqueeze_3541 = None
    mul_4061: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1062, unsqueeze_3547);  sub_1062 = unsqueeze_3547 = None
    sub_1063: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_153, mul_4061);  mul_4061 = None
    sub_1064: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1063, unsqueeze_3544);  sub_1063 = unsqueeze_3544 = None
    mul_4062: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1064, unsqueeze_3550);  sub_1064 = unsqueeze_3550 = None
    mul_4063: "f32[36]" = torch.ops.aten.mul.Tensor(sum_375, squeeze_421);  sum_375 = squeeze_421 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_184 = torch.ops.aten.convolution_backward.default(mul_4062, relu_129, primals_421, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4062 = primals_421 = None
    getitem_1202: "f32[8, 36, 28, 28]" = convolution_backward_184[0]
    getitem_1203: "f32[36, 36, 3, 3]" = convolution_backward_184[1];  convolution_backward_184 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_691: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_129);  relu_129 = None
    alias_692: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_691);  alias_691 = None
    le_154: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_692, 0);  alias_692 = None
    scalar_tensor_154: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_154: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_154, scalar_tensor_154, getitem_1202);  le_154 = scalar_tensor_154 = getitem_1202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3551: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_417, 0);  squeeze_417 = None
    unsqueeze_3552: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3551, 2);  unsqueeze_3551 = None
    unsqueeze_3553: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3552, 3);  unsqueeze_3552 = None
    sum_376: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_154, [0, 2, 3])
    sub_1065: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_139, unsqueeze_3553)
    mul_4064: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_154, sub_1065);  sub_1065 = None
    sum_377: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4064, [0, 2, 3]);  mul_4064 = None
    mul_4065: "f32[36]" = torch.ops.aten.mul.Tensor(sum_376, 0.00015943877551020407)
    unsqueeze_3554: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4065, 0);  mul_4065 = None
    unsqueeze_3555: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3554, 2);  unsqueeze_3554 = None
    unsqueeze_3556: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3555, 3);  unsqueeze_3555 = None
    mul_4066: "f32[36]" = torch.ops.aten.mul.Tensor(sum_377, 0.00015943877551020407)
    mul_4067: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_418, squeeze_418)
    mul_4068: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4066, mul_4067);  mul_4066 = mul_4067 = None
    unsqueeze_3557: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4068, 0);  mul_4068 = None
    unsqueeze_3558: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3557, 2);  unsqueeze_3557 = None
    unsqueeze_3559: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3558, 3);  unsqueeze_3558 = None
    mul_4069: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_418, primals_419);  primals_419 = None
    unsqueeze_3560: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4069, 0);  mul_4069 = None
    unsqueeze_3561: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3560, 2);  unsqueeze_3560 = None
    unsqueeze_3562: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3561, 3);  unsqueeze_3561 = None
    sub_1066: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_139, unsqueeze_3553);  convolution_139 = unsqueeze_3553 = None
    mul_4070: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1066, unsqueeze_3559);  sub_1066 = unsqueeze_3559 = None
    sub_1067: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_154, mul_4070);  where_154 = mul_4070 = None
    sub_1068: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1067, unsqueeze_3556);  sub_1067 = unsqueeze_3556 = None
    mul_4071: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1068, unsqueeze_3562);  sub_1068 = unsqueeze_3562 = None
    mul_4072: "f32[36]" = torch.ops.aten.mul.Tensor(sum_377, squeeze_418);  sum_377 = squeeze_418 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_185 = torch.ops.aten.convolution_backward.default(mul_4071, relu_128, primals_418, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4071 = primals_418 = None
    getitem_1205: "f32[8, 36, 28, 28]" = convolution_backward_185[0]
    getitem_1206: "f32[36, 36, 3, 3]" = convolution_backward_185[1];  convolution_backward_185 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2027: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_153, getitem_1205);  where_153 = getitem_1205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_694: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_128);  relu_128 = None
    alias_695: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_694);  alias_694 = None
    le_155: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_695, 0);  alias_695 = None
    scalar_tensor_155: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_155: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_155, scalar_tensor_155, add_2027);  le_155 = scalar_tensor_155 = add_2027 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3563: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_414, 0);  squeeze_414 = None
    unsqueeze_3564: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3563, 2);  unsqueeze_3563 = None
    unsqueeze_3565: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3564, 3);  unsqueeze_3564 = None
    sum_378: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_155, [0, 2, 3])
    sub_1069: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_138, unsqueeze_3565)
    mul_4073: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_155, sub_1069);  sub_1069 = None
    sum_379: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4073, [0, 2, 3]);  mul_4073 = None
    mul_4074: "f32[36]" = torch.ops.aten.mul.Tensor(sum_378, 0.00015943877551020407)
    unsqueeze_3566: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4074, 0);  mul_4074 = None
    unsqueeze_3567: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3566, 2);  unsqueeze_3566 = None
    unsqueeze_3568: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3567, 3);  unsqueeze_3567 = None
    mul_4075: "f32[36]" = torch.ops.aten.mul.Tensor(sum_379, 0.00015943877551020407)
    mul_4076: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_415, squeeze_415)
    mul_4077: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4075, mul_4076);  mul_4075 = mul_4076 = None
    unsqueeze_3569: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4077, 0);  mul_4077 = None
    unsqueeze_3570: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3569, 2);  unsqueeze_3569 = None
    unsqueeze_3571: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3570, 3);  unsqueeze_3570 = None
    mul_4078: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_415, primals_416);  primals_416 = None
    unsqueeze_3572: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4078, 0);  mul_4078 = None
    unsqueeze_3573: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3572, 2);  unsqueeze_3572 = None
    unsqueeze_3574: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3573, 3);  unsqueeze_3573 = None
    sub_1070: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_138, unsqueeze_3565);  convolution_138 = unsqueeze_3565 = None
    mul_4079: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1070, unsqueeze_3571);  sub_1070 = unsqueeze_3571 = None
    sub_1071: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_155, mul_4079);  mul_4079 = None
    sub_1072: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1071, unsqueeze_3568);  sub_1071 = unsqueeze_3568 = None
    mul_4080: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1072, unsqueeze_3574);  sub_1072 = unsqueeze_3574 = None
    mul_4081: "f32[36]" = torch.ops.aten.mul.Tensor(sum_379, squeeze_415);  sum_379 = squeeze_415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_186 = torch.ops.aten.convolution_backward.default(mul_4080, relu_127, primals_415, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4080 = primals_415 = None
    getitem_1208: "f32[8, 36, 28, 28]" = convolution_backward_186[0]
    getitem_1209: "f32[36, 36, 3, 3]" = convolution_backward_186[1];  convolution_backward_186 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_697: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_127);  relu_127 = None
    alias_698: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_697);  alias_697 = None
    le_156: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_698, 0);  alias_698 = None
    scalar_tensor_156: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_156: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_156, scalar_tensor_156, getitem_1208);  le_156 = scalar_tensor_156 = getitem_1208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3575: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_411, 0);  squeeze_411 = None
    unsqueeze_3576: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3575, 2);  unsqueeze_3575 = None
    unsqueeze_3577: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3576, 3);  unsqueeze_3576 = None
    sum_380: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_156, [0, 2, 3])
    sub_1073: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_137, unsqueeze_3577)
    mul_4082: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_156, sub_1073);  sub_1073 = None
    sum_381: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4082, [0, 2, 3]);  mul_4082 = None
    mul_4083: "f32[36]" = torch.ops.aten.mul.Tensor(sum_380, 0.00015943877551020407)
    unsqueeze_3578: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4083, 0);  mul_4083 = None
    unsqueeze_3579: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3578, 2);  unsqueeze_3578 = None
    unsqueeze_3580: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3579, 3);  unsqueeze_3579 = None
    mul_4084: "f32[36]" = torch.ops.aten.mul.Tensor(sum_381, 0.00015943877551020407)
    mul_4085: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_412, squeeze_412)
    mul_4086: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4084, mul_4085);  mul_4084 = mul_4085 = None
    unsqueeze_3581: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4086, 0);  mul_4086 = None
    unsqueeze_3582: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3581, 2);  unsqueeze_3581 = None
    unsqueeze_3583: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3582, 3);  unsqueeze_3582 = None
    mul_4087: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_412, primals_413);  primals_413 = None
    unsqueeze_3584: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4087, 0);  mul_4087 = None
    unsqueeze_3585: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3584, 2);  unsqueeze_3584 = None
    unsqueeze_3586: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3585, 3);  unsqueeze_3585 = None
    sub_1074: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_137, unsqueeze_3577);  convolution_137 = unsqueeze_3577 = None
    mul_4088: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1074, unsqueeze_3583);  sub_1074 = unsqueeze_3583 = None
    sub_1075: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_156, mul_4088);  where_156 = mul_4088 = None
    sub_1076: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1075, unsqueeze_3580);  sub_1075 = unsqueeze_3580 = None
    mul_4089: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1076, unsqueeze_3586);  sub_1076 = unsqueeze_3586 = None
    mul_4090: "f32[36]" = torch.ops.aten.mul.Tensor(sum_381, squeeze_412);  sum_381 = squeeze_412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_187 = torch.ops.aten.convolution_backward.default(mul_4089, relu_116, primals_412, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4089 = relu_116 = primals_412 = None
    getitem_1211: "f32[8, 36, 28, 28]" = convolution_backward_187[0]
    getitem_1212: "f32[36, 36, 3, 3]" = convolution_backward_187[1];  convolution_backward_187 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2028: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_155, getitem_1211);  where_155 = getitem_1211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_700: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_126);  relu_126 = None
    alias_701: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_700);  alias_700 = None
    le_157: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_701, 0);  alias_701 = None
    scalar_tensor_157: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_157: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_157, scalar_tensor_157, add_2019);  le_157 = scalar_tensor_157 = add_2019 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3587: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_408, 0);  squeeze_408 = None
    unsqueeze_3588: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3587, 2);  unsqueeze_3587 = None
    unsqueeze_3589: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3588, 3);  unsqueeze_3588 = None
    sum_382: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_157, [0, 2, 3])
    sub_1077: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_136, unsqueeze_3589)
    mul_4091: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_157, sub_1077);  sub_1077 = None
    sum_383: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4091, [0, 2, 3]);  mul_4091 = None
    mul_4092: "f32[18]" = torch.ops.aten.mul.Tensor(sum_382, 3.985969387755102e-05)
    unsqueeze_3590: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4092, 0);  mul_4092 = None
    unsqueeze_3591: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3590, 2);  unsqueeze_3590 = None
    unsqueeze_3592: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3591, 3);  unsqueeze_3591 = None
    mul_4093: "f32[18]" = torch.ops.aten.mul.Tensor(sum_383, 3.985969387755102e-05)
    mul_4094: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_409, squeeze_409)
    mul_4095: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4093, mul_4094);  mul_4093 = mul_4094 = None
    unsqueeze_3593: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4095, 0);  mul_4095 = None
    unsqueeze_3594: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3593, 2);  unsqueeze_3593 = None
    unsqueeze_3595: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3594, 3);  unsqueeze_3594 = None
    mul_4096: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_409, primals_410);  primals_410 = None
    unsqueeze_3596: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4096, 0);  mul_4096 = None
    unsqueeze_3597: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3596, 2);  unsqueeze_3596 = None
    unsqueeze_3598: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3597, 3);  unsqueeze_3597 = None
    sub_1078: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_136, unsqueeze_3589);  convolution_136 = unsqueeze_3589 = None
    mul_4097: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1078, unsqueeze_3595);  sub_1078 = unsqueeze_3595 = None
    sub_1079: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_157, mul_4097);  mul_4097 = None
    sub_1080: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1079, unsqueeze_3592);  sub_1079 = unsqueeze_3592 = None
    mul_4098: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1080, unsqueeze_3598);  sub_1080 = unsqueeze_3598 = None
    mul_4099: "f32[18]" = torch.ops.aten.mul.Tensor(sum_383, squeeze_409);  sum_383 = squeeze_409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_188 = torch.ops.aten.convolution_backward.default(mul_4098, relu_125, primals_409, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4098 = primals_409 = None
    getitem_1214: "f32[8, 18, 56, 56]" = convolution_backward_188[0]
    getitem_1215: "f32[18, 18, 3, 3]" = convolution_backward_188[1];  convolution_backward_188 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_703: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_125);  relu_125 = None
    alias_704: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_703);  alias_703 = None
    le_158: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_704, 0);  alias_704 = None
    scalar_tensor_158: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_158: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_158, scalar_tensor_158, getitem_1214);  le_158 = scalar_tensor_158 = getitem_1214 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3599: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_405, 0);  squeeze_405 = None
    unsqueeze_3600: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3599, 2);  unsqueeze_3599 = None
    unsqueeze_3601: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3600, 3);  unsqueeze_3600 = None
    sum_384: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_158, [0, 2, 3])
    sub_1081: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_135, unsqueeze_3601)
    mul_4100: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_158, sub_1081);  sub_1081 = None
    sum_385: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4100, [0, 2, 3]);  mul_4100 = None
    mul_4101: "f32[18]" = torch.ops.aten.mul.Tensor(sum_384, 3.985969387755102e-05)
    unsqueeze_3602: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4101, 0);  mul_4101 = None
    unsqueeze_3603: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3602, 2);  unsqueeze_3602 = None
    unsqueeze_3604: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3603, 3);  unsqueeze_3603 = None
    mul_4102: "f32[18]" = torch.ops.aten.mul.Tensor(sum_385, 3.985969387755102e-05)
    mul_4103: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_406, squeeze_406)
    mul_4104: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4102, mul_4103);  mul_4102 = mul_4103 = None
    unsqueeze_3605: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4104, 0);  mul_4104 = None
    unsqueeze_3606: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3605, 2);  unsqueeze_3605 = None
    unsqueeze_3607: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3606, 3);  unsqueeze_3606 = None
    mul_4105: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_406, primals_407);  primals_407 = None
    unsqueeze_3608: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4105, 0);  mul_4105 = None
    unsqueeze_3609: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3608, 2);  unsqueeze_3608 = None
    unsqueeze_3610: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3609, 3);  unsqueeze_3609 = None
    sub_1082: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_135, unsqueeze_3601);  convolution_135 = unsqueeze_3601 = None
    mul_4106: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1082, unsqueeze_3607);  sub_1082 = unsqueeze_3607 = None
    sub_1083: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_158, mul_4106);  where_158 = mul_4106 = None
    sub_1084: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1083, unsqueeze_3604);  sub_1083 = unsqueeze_3604 = None
    mul_4107: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1084, unsqueeze_3610);  sub_1084 = unsqueeze_3610 = None
    mul_4108: "f32[18]" = torch.ops.aten.mul.Tensor(sum_385, squeeze_406);  sum_385 = squeeze_406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_189 = torch.ops.aten.convolution_backward.default(mul_4107, relu_124, primals_406, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4107 = primals_406 = None
    getitem_1217: "f32[8, 18, 56, 56]" = convolution_backward_189[0]
    getitem_1218: "f32[18, 18, 3, 3]" = convolution_backward_189[1];  convolution_backward_189 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2029: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_157, getitem_1217);  where_157 = getitem_1217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_706: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_124);  relu_124 = None
    alias_707: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_706);  alias_706 = None
    le_159: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_707, 0);  alias_707 = None
    scalar_tensor_159: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_159: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_159, scalar_tensor_159, add_2029);  le_159 = scalar_tensor_159 = add_2029 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3611: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_402, 0);  squeeze_402 = None
    unsqueeze_3612: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3611, 2);  unsqueeze_3611 = None
    unsqueeze_3613: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3612, 3);  unsqueeze_3612 = None
    sum_386: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_159, [0, 2, 3])
    sub_1085: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_134, unsqueeze_3613)
    mul_4109: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_159, sub_1085);  sub_1085 = None
    sum_387: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4109, [0, 2, 3]);  mul_4109 = None
    mul_4110: "f32[18]" = torch.ops.aten.mul.Tensor(sum_386, 3.985969387755102e-05)
    unsqueeze_3614: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4110, 0);  mul_4110 = None
    unsqueeze_3615: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3614, 2);  unsqueeze_3614 = None
    unsqueeze_3616: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3615, 3);  unsqueeze_3615 = None
    mul_4111: "f32[18]" = torch.ops.aten.mul.Tensor(sum_387, 3.985969387755102e-05)
    mul_4112: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_403, squeeze_403)
    mul_4113: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4111, mul_4112);  mul_4111 = mul_4112 = None
    unsqueeze_3617: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4113, 0);  mul_4113 = None
    unsqueeze_3618: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3617, 2);  unsqueeze_3617 = None
    unsqueeze_3619: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3618, 3);  unsqueeze_3618 = None
    mul_4114: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_403, primals_404);  primals_404 = None
    unsqueeze_3620: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4114, 0);  mul_4114 = None
    unsqueeze_3621: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3620, 2);  unsqueeze_3620 = None
    unsqueeze_3622: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3621, 3);  unsqueeze_3621 = None
    sub_1086: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_134, unsqueeze_3613);  convolution_134 = unsqueeze_3613 = None
    mul_4115: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1086, unsqueeze_3619);  sub_1086 = unsqueeze_3619 = None
    sub_1087: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_159, mul_4115);  mul_4115 = None
    sub_1088: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1087, unsqueeze_3616);  sub_1087 = unsqueeze_3616 = None
    mul_4116: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1088, unsqueeze_3622);  sub_1088 = unsqueeze_3622 = None
    mul_4117: "f32[18]" = torch.ops.aten.mul.Tensor(sum_387, squeeze_403);  sum_387 = squeeze_403 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_190 = torch.ops.aten.convolution_backward.default(mul_4116, relu_123, primals_403, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4116 = primals_403 = None
    getitem_1220: "f32[8, 18, 56, 56]" = convolution_backward_190[0]
    getitem_1221: "f32[18, 18, 3, 3]" = convolution_backward_190[1];  convolution_backward_190 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_709: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_123);  relu_123 = None
    alias_710: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_709);  alias_709 = None
    le_160: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_710, 0);  alias_710 = None
    scalar_tensor_160: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_160: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_160, scalar_tensor_160, getitem_1220);  le_160 = scalar_tensor_160 = getitem_1220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3623: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_399, 0);  squeeze_399 = None
    unsqueeze_3624: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3623, 2);  unsqueeze_3623 = None
    unsqueeze_3625: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3624, 3);  unsqueeze_3624 = None
    sum_388: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_160, [0, 2, 3])
    sub_1089: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_133, unsqueeze_3625)
    mul_4118: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_160, sub_1089);  sub_1089 = None
    sum_389: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4118, [0, 2, 3]);  mul_4118 = None
    mul_4119: "f32[18]" = torch.ops.aten.mul.Tensor(sum_388, 3.985969387755102e-05)
    unsqueeze_3626: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4119, 0);  mul_4119 = None
    unsqueeze_3627: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3626, 2);  unsqueeze_3626 = None
    unsqueeze_3628: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3627, 3);  unsqueeze_3627 = None
    mul_4120: "f32[18]" = torch.ops.aten.mul.Tensor(sum_389, 3.985969387755102e-05)
    mul_4121: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_400, squeeze_400)
    mul_4122: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4120, mul_4121);  mul_4120 = mul_4121 = None
    unsqueeze_3629: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4122, 0);  mul_4122 = None
    unsqueeze_3630: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3629, 2);  unsqueeze_3629 = None
    unsqueeze_3631: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3630, 3);  unsqueeze_3630 = None
    mul_4123: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_400, primals_401);  primals_401 = None
    unsqueeze_3632: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4123, 0);  mul_4123 = None
    unsqueeze_3633: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3632, 2);  unsqueeze_3632 = None
    unsqueeze_3634: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3633, 3);  unsqueeze_3633 = None
    sub_1090: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_133, unsqueeze_3625);  convolution_133 = unsqueeze_3625 = None
    mul_4124: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1090, unsqueeze_3631);  sub_1090 = unsqueeze_3631 = None
    sub_1091: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_160, mul_4124);  where_160 = mul_4124 = None
    sub_1092: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1091, unsqueeze_3628);  sub_1091 = unsqueeze_3628 = None
    mul_4125: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1092, unsqueeze_3634);  sub_1092 = unsqueeze_3634 = None
    mul_4126: "f32[18]" = torch.ops.aten.mul.Tensor(sum_389, squeeze_400);  sum_389 = squeeze_400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_191 = torch.ops.aten.convolution_backward.default(mul_4125, relu_122, primals_400, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4125 = primals_400 = None
    getitem_1223: "f32[8, 18, 56, 56]" = convolution_backward_191[0]
    getitem_1224: "f32[18, 18, 3, 3]" = convolution_backward_191[1];  convolution_backward_191 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2030: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_159, getitem_1223);  where_159 = getitem_1223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_712: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_122);  relu_122 = None
    alias_713: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_712);  alias_712 = None
    le_161: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_713, 0);  alias_713 = None
    scalar_tensor_161: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_161: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_161, scalar_tensor_161, add_2030);  le_161 = scalar_tensor_161 = add_2030 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3635: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_396, 0);  squeeze_396 = None
    unsqueeze_3636: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3635, 2);  unsqueeze_3635 = None
    unsqueeze_3637: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3636, 3);  unsqueeze_3636 = None
    sum_390: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_161, [0, 2, 3])
    sub_1093: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_132, unsqueeze_3637)
    mul_4127: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_161, sub_1093);  sub_1093 = None
    sum_391: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4127, [0, 2, 3]);  mul_4127 = None
    mul_4128: "f32[18]" = torch.ops.aten.mul.Tensor(sum_390, 3.985969387755102e-05)
    unsqueeze_3638: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4128, 0);  mul_4128 = None
    unsqueeze_3639: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3638, 2);  unsqueeze_3638 = None
    unsqueeze_3640: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3639, 3);  unsqueeze_3639 = None
    mul_4129: "f32[18]" = torch.ops.aten.mul.Tensor(sum_391, 3.985969387755102e-05)
    mul_4130: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_397, squeeze_397)
    mul_4131: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4129, mul_4130);  mul_4129 = mul_4130 = None
    unsqueeze_3641: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4131, 0);  mul_4131 = None
    unsqueeze_3642: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3641, 2);  unsqueeze_3641 = None
    unsqueeze_3643: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3642, 3);  unsqueeze_3642 = None
    mul_4132: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_397, primals_398);  primals_398 = None
    unsqueeze_3644: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4132, 0);  mul_4132 = None
    unsqueeze_3645: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3644, 2);  unsqueeze_3644 = None
    unsqueeze_3646: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3645, 3);  unsqueeze_3645 = None
    sub_1094: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_132, unsqueeze_3637);  convolution_132 = unsqueeze_3637 = None
    mul_4133: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1094, unsqueeze_3643);  sub_1094 = unsqueeze_3643 = None
    sub_1095: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_161, mul_4133);  mul_4133 = None
    sub_1096: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1095, unsqueeze_3640);  sub_1095 = unsqueeze_3640 = None
    mul_4134: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1096, unsqueeze_3646);  sub_1096 = unsqueeze_3646 = None
    mul_4135: "f32[18]" = torch.ops.aten.mul.Tensor(sum_391, squeeze_397);  sum_391 = squeeze_397 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_192 = torch.ops.aten.convolution_backward.default(mul_4134, relu_121, primals_397, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4134 = primals_397 = None
    getitem_1226: "f32[8, 18, 56, 56]" = convolution_backward_192[0]
    getitem_1227: "f32[18, 18, 3, 3]" = convolution_backward_192[1];  convolution_backward_192 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_715: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_121);  relu_121 = None
    alias_716: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_715);  alias_715 = None
    le_162: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_716, 0);  alias_716 = None
    scalar_tensor_162: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_162: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_162, scalar_tensor_162, getitem_1226);  le_162 = scalar_tensor_162 = getitem_1226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3647: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_393, 0);  squeeze_393 = None
    unsqueeze_3648: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3647, 2);  unsqueeze_3647 = None
    unsqueeze_3649: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3648, 3);  unsqueeze_3648 = None
    sum_392: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_162, [0, 2, 3])
    sub_1097: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_131, unsqueeze_3649)
    mul_4136: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_162, sub_1097);  sub_1097 = None
    sum_393: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4136, [0, 2, 3]);  mul_4136 = None
    mul_4137: "f32[18]" = torch.ops.aten.mul.Tensor(sum_392, 3.985969387755102e-05)
    unsqueeze_3650: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4137, 0);  mul_4137 = None
    unsqueeze_3651: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3650, 2);  unsqueeze_3650 = None
    unsqueeze_3652: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3651, 3);  unsqueeze_3651 = None
    mul_4138: "f32[18]" = torch.ops.aten.mul.Tensor(sum_393, 3.985969387755102e-05)
    mul_4139: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_394, squeeze_394)
    mul_4140: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4138, mul_4139);  mul_4138 = mul_4139 = None
    unsqueeze_3653: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4140, 0);  mul_4140 = None
    unsqueeze_3654: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3653, 2);  unsqueeze_3653 = None
    unsqueeze_3655: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3654, 3);  unsqueeze_3654 = None
    mul_4141: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_394, primals_395);  primals_395 = None
    unsqueeze_3656: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4141, 0);  mul_4141 = None
    unsqueeze_3657: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3656, 2);  unsqueeze_3656 = None
    unsqueeze_3658: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3657, 3);  unsqueeze_3657 = None
    sub_1098: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_131, unsqueeze_3649);  convolution_131 = unsqueeze_3649 = None
    mul_4142: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1098, unsqueeze_3655);  sub_1098 = unsqueeze_3655 = None
    sub_1099: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_162, mul_4142);  where_162 = mul_4142 = None
    sub_1100: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1099, unsqueeze_3652);  sub_1099 = unsqueeze_3652 = None
    mul_4143: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1100, unsqueeze_3658);  sub_1100 = unsqueeze_3658 = None
    mul_4144: "f32[18]" = torch.ops.aten.mul.Tensor(sum_393, squeeze_394);  sum_393 = squeeze_394 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_193 = torch.ops.aten.convolution_backward.default(mul_4143, relu_120, primals_394, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4143 = primals_394 = None
    getitem_1229: "f32[8, 18, 56, 56]" = convolution_backward_193[0]
    getitem_1230: "f32[18, 18, 3, 3]" = convolution_backward_193[1];  convolution_backward_193 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2031: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_161, getitem_1229);  where_161 = getitem_1229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_718: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_120);  relu_120 = None
    alias_719: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_718);  alias_718 = None
    le_163: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_719, 0);  alias_719 = None
    scalar_tensor_163: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_163: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_163, scalar_tensor_163, add_2031);  le_163 = scalar_tensor_163 = add_2031 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3659: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_390, 0);  squeeze_390 = None
    unsqueeze_3660: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3659, 2);  unsqueeze_3659 = None
    unsqueeze_3661: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3660, 3);  unsqueeze_3660 = None
    sum_394: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_163, [0, 2, 3])
    sub_1101: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_130, unsqueeze_3661)
    mul_4145: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_163, sub_1101);  sub_1101 = None
    sum_395: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4145, [0, 2, 3]);  mul_4145 = None
    mul_4146: "f32[18]" = torch.ops.aten.mul.Tensor(sum_394, 3.985969387755102e-05)
    unsqueeze_3662: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4146, 0);  mul_4146 = None
    unsqueeze_3663: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3662, 2);  unsqueeze_3662 = None
    unsqueeze_3664: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3663, 3);  unsqueeze_3663 = None
    mul_4147: "f32[18]" = torch.ops.aten.mul.Tensor(sum_395, 3.985969387755102e-05)
    mul_4148: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_391, squeeze_391)
    mul_4149: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4147, mul_4148);  mul_4147 = mul_4148 = None
    unsqueeze_3665: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4149, 0);  mul_4149 = None
    unsqueeze_3666: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3665, 2);  unsqueeze_3665 = None
    unsqueeze_3667: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3666, 3);  unsqueeze_3666 = None
    mul_4150: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_391, primals_392);  primals_392 = None
    unsqueeze_3668: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4150, 0);  mul_4150 = None
    unsqueeze_3669: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3668, 2);  unsqueeze_3668 = None
    unsqueeze_3670: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3669, 3);  unsqueeze_3669 = None
    sub_1102: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_130, unsqueeze_3661);  convolution_130 = unsqueeze_3661 = None
    mul_4151: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1102, unsqueeze_3667);  sub_1102 = unsqueeze_3667 = None
    sub_1103: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_163, mul_4151);  mul_4151 = None
    sub_1104: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1103, unsqueeze_3664);  sub_1103 = unsqueeze_3664 = None
    mul_4152: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1104, unsqueeze_3670);  sub_1104 = unsqueeze_3670 = None
    mul_4153: "f32[18]" = torch.ops.aten.mul.Tensor(sum_395, squeeze_391);  sum_395 = squeeze_391 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_194 = torch.ops.aten.convolution_backward.default(mul_4152, relu_119, primals_391, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4152 = primals_391 = None
    getitem_1232: "f32[8, 18, 56, 56]" = convolution_backward_194[0]
    getitem_1233: "f32[18, 18, 3, 3]" = convolution_backward_194[1];  convolution_backward_194 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_721: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_119);  relu_119 = None
    alias_722: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_721);  alias_721 = None
    le_164: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_722, 0);  alias_722 = None
    scalar_tensor_164: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_164: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_164, scalar_tensor_164, getitem_1232);  le_164 = scalar_tensor_164 = getitem_1232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3671: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_387, 0);  squeeze_387 = None
    unsqueeze_3672: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3671, 2);  unsqueeze_3671 = None
    unsqueeze_3673: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3672, 3);  unsqueeze_3672 = None
    sum_396: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_164, [0, 2, 3])
    sub_1105: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_129, unsqueeze_3673)
    mul_4154: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_164, sub_1105);  sub_1105 = None
    sum_397: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4154, [0, 2, 3]);  mul_4154 = None
    mul_4155: "f32[18]" = torch.ops.aten.mul.Tensor(sum_396, 3.985969387755102e-05)
    unsqueeze_3674: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4155, 0);  mul_4155 = None
    unsqueeze_3675: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3674, 2);  unsqueeze_3674 = None
    unsqueeze_3676: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3675, 3);  unsqueeze_3675 = None
    mul_4156: "f32[18]" = torch.ops.aten.mul.Tensor(sum_397, 3.985969387755102e-05)
    mul_4157: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_388, squeeze_388)
    mul_4158: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4156, mul_4157);  mul_4156 = mul_4157 = None
    unsqueeze_3677: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4158, 0);  mul_4158 = None
    unsqueeze_3678: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3677, 2);  unsqueeze_3677 = None
    unsqueeze_3679: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3678, 3);  unsqueeze_3678 = None
    mul_4159: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_388, primals_389);  primals_389 = None
    unsqueeze_3680: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4159, 0);  mul_4159 = None
    unsqueeze_3681: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3680, 2);  unsqueeze_3680 = None
    unsqueeze_3682: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3681, 3);  unsqueeze_3681 = None
    sub_1106: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_129, unsqueeze_3673);  convolution_129 = unsqueeze_3673 = None
    mul_4160: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1106, unsqueeze_3679);  sub_1106 = unsqueeze_3679 = None
    sub_1107: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_164, mul_4160);  where_164 = mul_4160 = None
    sub_1108: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1107, unsqueeze_3676);  sub_1107 = unsqueeze_3676 = None
    mul_4161: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1108, unsqueeze_3682);  sub_1108 = unsqueeze_3682 = None
    mul_4162: "f32[18]" = torch.ops.aten.mul.Tensor(sum_397, squeeze_388);  sum_397 = squeeze_388 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_195 = torch.ops.aten.convolution_backward.default(mul_4161, relu_115, primals_388, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4161 = relu_115 = primals_388 = None
    getitem_1235: "f32[8, 18, 56, 56]" = convolution_backward_195[0]
    getitem_1236: "f32[18, 18, 3, 3]" = convolution_backward_195[1];  convolution_backward_195 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2032: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_163, getitem_1235);  where_163 = getitem_1235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_723: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_118);  alias_118 = None
    le_165: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_723, 0);  alias_723 = None
    scalar_tensor_165: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_165: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_165, scalar_tensor_165, add_2024);  le_165 = scalar_tensor_165 = add_2024 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_3683: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_384, 0);  squeeze_384 = None
    unsqueeze_3684: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3683, 2);  unsqueeze_3683 = None
    unsqueeze_3685: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3684, 3);  unsqueeze_3684 = None
    sum_398: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_165, [0, 2, 3])
    sub_1109: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_128, unsqueeze_3685)
    mul_4163: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_165, sub_1109);  sub_1109 = None
    sum_399: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4163, [0, 2, 3]);  mul_4163 = None
    mul_4164: "f32[72]" = torch.ops.aten.mul.Tensor(sum_398, 0.0006377551020408163)
    unsqueeze_3686: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4164, 0);  mul_4164 = None
    unsqueeze_3687: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3686, 2);  unsqueeze_3686 = None
    unsqueeze_3688: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3687, 3);  unsqueeze_3687 = None
    mul_4165: "f32[72]" = torch.ops.aten.mul.Tensor(sum_399, 0.0006377551020408163)
    mul_4166: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_385, squeeze_385)
    mul_4167: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4165, mul_4166);  mul_4165 = mul_4166 = None
    unsqueeze_3689: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4167, 0);  mul_4167 = None
    unsqueeze_3690: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3689, 2);  unsqueeze_3689 = None
    unsqueeze_3691: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3690, 3);  unsqueeze_3690 = None
    mul_4168: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_385, primals_386);  primals_386 = None
    unsqueeze_3692: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4168, 0);  mul_4168 = None
    unsqueeze_3693: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3692, 2);  unsqueeze_3692 = None
    unsqueeze_3694: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3693, 3);  unsqueeze_3693 = None
    sub_1110: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_128, unsqueeze_3685);  convolution_128 = unsqueeze_3685 = None
    mul_4169: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1110, unsqueeze_3691);  sub_1110 = unsqueeze_3691 = None
    sub_1111: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_165, mul_4169);  mul_4169 = None
    sub_1112: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1111, unsqueeze_3688);  sub_1111 = unsqueeze_3688 = None
    mul_4170: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1112, unsqueeze_3694);  sub_1112 = unsqueeze_3694 = None
    mul_4171: "f32[72]" = torch.ops.aten.mul.Tensor(sum_399, squeeze_385);  sum_399 = squeeze_385 = None
    convolution_backward_196 = torch.ops.aten.convolution_backward.default(mul_4170, relu_106, primals_385, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4170 = primals_385 = None
    getitem_1238: "f32[8, 36, 28, 28]" = convolution_backward_196[0]
    getitem_1239: "f32[72, 36, 3, 3]" = convolution_backward_196[1];  convolution_backward_196 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_3695: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_381, 0);  squeeze_381 = None
    unsqueeze_3696: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3695, 2);  unsqueeze_3695 = None
    unsqueeze_3697: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3696, 3);  unsqueeze_3696 = None
    sum_400: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_165, [0, 2, 3])
    sub_1113: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_127, unsqueeze_3697)
    mul_4172: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_165, sub_1113);  sub_1113 = None
    sum_401: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4172, [0, 2, 3]);  mul_4172 = None
    mul_4173: "f32[72]" = torch.ops.aten.mul.Tensor(sum_400, 0.0006377551020408163)
    unsqueeze_3698: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4173, 0);  mul_4173 = None
    unsqueeze_3699: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3698, 2);  unsqueeze_3698 = None
    unsqueeze_3700: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3699, 3);  unsqueeze_3699 = None
    mul_4174: "f32[72]" = torch.ops.aten.mul.Tensor(sum_401, 0.0006377551020408163)
    mul_4175: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_382, squeeze_382)
    mul_4176: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4174, mul_4175);  mul_4174 = mul_4175 = None
    unsqueeze_3701: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4176, 0);  mul_4176 = None
    unsqueeze_3702: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3701, 2);  unsqueeze_3701 = None
    unsqueeze_3703: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3702, 3);  unsqueeze_3702 = None
    mul_4177: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_382, primals_383);  primals_383 = None
    unsqueeze_3704: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4177, 0);  mul_4177 = None
    unsqueeze_3705: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3704, 2);  unsqueeze_3704 = None
    unsqueeze_3706: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3705, 3);  unsqueeze_3705 = None
    sub_1114: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_127, unsqueeze_3697);  convolution_127 = unsqueeze_3697 = None
    mul_4178: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1114, unsqueeze_3703);  sub_1114 = unsqueeze_3703 = None
    sub_1115: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_165, mul_4178);  mul_4178 = None
    sub_1116: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1115, unsqueeze_3700);  sub_1115 = unsqueeze_3700 = None
    mul_4179: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1116, unsqueeze_3706);  sub_1116 = unsqueeze_3706 = None
    mul_4180: "f32[72]" = torch.ops.aten.mul.Tensor(sum_401, squeeze_382);  sum_401 = squeeze_382 = None
    convolution_backward_197 = torch.ops.aten.convolution_backward.default(mul_4179, relu_117, primals_382, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4179 = relu_117 = primals_382 = None
    getitem_1241: "f32[8, 18, 28, 28]" = convolution_backward_197[0]
    getitem_1242: "f32[72, 18, 3, 3]" = convolution_backward_197[1];  convolution_backward_197 = None
    alias_724: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_117);  alias_117 = None
    le_166: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_724, 0);  alias_724 = None
    scalar_tensor_166: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_166: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_166, scalar_tensor_166, getitem_1241);  le_166 = scalar_tensor_166 = getitem_1241 = None
    unsqueeze_3707: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_378, 0);  squeeze_378 = None
    unsqueeze_3708: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3707, 2);  unsqueeze_3707 = None
    unsqueeze_3709: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3708, 3);  unsqueeze_3708 = None
    sum_402: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_166, [0, 2, 3])
    sub_1117: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_126, unsqueeze_3709)
    mul_4181: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_166, sub_1117);  sub_1117 = None
    sum_403: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4181, [0, 2, 3]);  mul_4181 = None
    mul_4182: "f32[18]" = torch.ops.aten.mul.Tensor(sum_402, 0.00015943877551020407)
    unsqueeze_3710: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4182, 0);  mul_4182 = None
    unsqueeze_3711: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3710, 2);  unsqueeze_3710 = None
    unsqueeze_3712: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3711, 3);  unsqueeze_3711 = None
    mul_4183: "f32[18]" = torch.ops.aten.mul.Tensor(sum_403, 0.00015943877551020407)
    mul_4184: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_379, squeeze_379)
    mul_4185: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4183, mul_4184);  mul_4183 = mul_4184 = None
    unsqueeze_3713: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4185, 0);  mul_4185 = None
    unsqueeze_3714: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3713, 2);  unsqueeze_3713 = None
    unsqueeze_3715: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3714, 3);  unsqueeze_3714 = None
    mul_4186: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_379, primals_380);  primals_380 = None
    unsqueeze_3716: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4186, 0);  mul_4186 = None
    unsqueeze_3717: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3716, 2);  unsqueeze_3716 = None
    unsqueeze_3718: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3717, 3);  unsqueeze_3717 = None
    sub_1118: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_126, unsqueeze_3709);  convolution_126 = unsqueeze_3709 = None
    mul_4187: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1118, unsqueeze_3715);  sub_1118 = unsqueeze_3715 = None
    sub_1119: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_166, mul_4187);  where_166 = mul_4187 = None
    sub_1120: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1119, unsqueeze_3712);  sub_1119 = unsqueeze_3712 = None
    mul_4188: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1120, unsqueeze_3718);  sub_1120 = unsqueeze_3718 = None
    mul_4189: "f32[18]" = torch.ops.aten.mul.Tensor(sum_403, squeeze_379);  sum_403 = squeeze_379 = None
    convolution_backward_198 = torch.ops.aten.convolution_backward.default(mul_4188, relu_98, primals_379, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4188 = primals_379 = None
    getitem_1244: "f32[8, 18, 56, 56]" = convolution_backward_198[0]
    getitem_1245: "f32[18, 18, 3, 3]" = convolution_backward_198[1];  convolution_backward_198 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_725: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_116);  alias_116 = None
    le_167: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_725, 0);  alias_725 = None
    scalar_tensor_167: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_167: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_167, scalar_tensor_167, add_2028);  le_167 = scalar_tensor_167 = add_2028 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_21: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_21: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_21, [None, None, unsqueeze_513, convert_element_type_39], where_167, True);  full_21 = unsqueeze_513 = convert_element_type_39 = None
    unsqueeze_3719: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_375, 0);  squeeze_375 = None
    unsqueeze_3720: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3719, 2);  unsqueeze_3719 = None
    unsqueeze_3721: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3720, 3);  unsqueeze_3720 = None
    sum_404: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_21, [0, 2, 3])
    sub_1121: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_125, unsqueeze_3721)
    mul_4190: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_21, sub_1121);  sub_1121 = None
    sum_405: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4190, [0, 2, 3]);  mul_4190 = None
    mul_4191: "f32[36]" = torch.ops.aten.mul.Tensor(sum_404, 0.0006377551020408163)
    unsqueeze_3722: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4191, 0);  mul_4191 = None
    unsqueeze_3723: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3722, 2);  unsqueeze_3722 = None
    unsqueeze_3724: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3723, 3);  unsqueeze_3723 = None
    mul_4192: "f32[36]" = torch.ops.aten.mul.Tensor(sum_405, 0.0006377551020408163)
    mul_4193: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_376, squeeze_376)
    mul_4194: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4192, mul_4193);  mul_4192 = mul_4193 = None
    unsqueeze_3725: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4194, 0);  mul_4194 = None
    unsqueeze_3726: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3725, 2);  unsqueeze_3725 = None
    unsqueeze_3727: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3726, 3);  unsqueeze_3726 = None
    mul_4195: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_376, primals_377);  primals_377 = None
    unsqueeze_3728: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4195, 0);  mul_4195 = None
    unsqueeze_3729: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3728, 2);  unsqueeze_3728 = None
    unsqueeze_3730: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3729, 3);  unsqueeze_3729 = None
    sub_1122: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_125, unsqueeze_3721);  convolution_125 = unsqueeze_3721 = None
    mul_4196: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1122, unsqueeze_3727);  sub_1122 = unsqueeze_3727 = None
    sub_1123: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_21, mul_4196);  _unsafe_index_put_21 = mul_4196 = None
    sub_1124: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1123, unsqueeze_3724);  sub_1123 = unsqueeze_3724 = None
    mul_4197: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1124, unsqueeze_3730);  sub_1124 = unsqueeze_3730 = None
    mul_4198: "f32[36]" = torch.ops.aten.mul.Tensor(sum_405, squeeze_376);  sum_405 = squeeze_376 = None
    convolution_backward_199 = torch.ops.aten.convolution_backward.default(mul_4197, relu_114, primals_376, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4197 = primals_376 = None
    getitem_1247: "f32[8, 72, 14, 14]" = convolution_backward_199[0]
    getitem_1248: "f32[36, 72, 1, 1]" = convolution_backward_199[1];  convolution_backward_199 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2033: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_165, getitem_1247);  where_165 = getitem_1247 = None
    add_2034: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_1238, where_167);  getitem_1238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_3731: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_372, 0);  squeeze_372 = None
    unsqueeze_3732: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3731, 2);  unsqueeze_3731 = None
    unsqueeze_3733: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3732, 3);  unsqueeze_3732 = None
    sum_406: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_167, [0, 2, 3])
    sub_1125: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_124, unsqueeze_3733)
    mul_4199: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_167, sub_1125);  sub_1125 = None
    sum_407: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4199, [0, 2, 3]);  mul_4199 = None
    mul_4200: "f32[36]" = torch.ops.aten.mul.Tensor(sum_406, 0.00015943877551020407)
    unsqueeze_3734: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4200, 0);  mul_4200 = None
    unsqueeze_3735: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3734, 2);  unsqueeze_3734 = None
    unsqueeze_3736: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3735, 3);  unsqueeze_3735 = None
    mul_4201: "f32[36]" = torch.ops.aten.mul.Tensor(sum_407, 0.00015943877551020407)
    mul_4202: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_373, squeeze_373)
    mul_4203: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4201, mul_4202);  mul_4201 = mul_4202 = None
    unsqueeze_3737: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4203, 0);  mul_4203 = None
    unsqueeze_3738: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3737, 2);  unsqueeze_3737 = None
    unsqueeze_3739: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3738, 3);  unsqueeze_3738 = None
    mul_4204: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_373, primals_374);  primals_374 = None
    unsqueeze_3740: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4204, 0);  mul_4204 = None
    unsqueeze_3741: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3740, 2);  unsqueeze_3740 = None
    unsqueeze_3742: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3741, 3);  unsqueeze_3741 = None
    sub_1126: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_124, unsqueeze_3733);  convolution_124 = unsqueeze_3733 = None
    mul_4205: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1126, unsqueeze_3739);  sub_1126 = unsqueeze_3739 = None
    sub_1127: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_167, mul_4205);  where_167 = mul_4205 = None
    sub_1128: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1127, unsqueeze_3736);  sub_1127 = unsqueeze_3736 = None
    mul_4206: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1128, unsqueeze_3742);  sub_1128 = unsqueeze_3742 = None
    mul_4207: "f32[36]" = torch.ops.aten.mul.Tensor(sum_407, squeeze_373);  sum_407 = squeeze_373 = None
    convolution_backward_200 = torch.ops.aten.convolution_backward.default(mul_4206, relu_98, primals_373, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4206 = primals_373 = None
    getitem_1250: "f32[8, 18, 56, 56]" = convolution_backward_200[0]
    getitem_1251: "f32[36, 18, 3, 3]" = convolution_backward_200[1];  convolution_backward_200 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_2035: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1244, getitem_1250);  getitem_1244 = getitem_1250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_726: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_115);  alias_115 = None
    le_168: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_726, 0);  alias_726 = None
    scalar_tensor_168: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_168: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_168, scalar_tensor_168, add_2032);  le_168 = scalar_tensor_168 = add_2032 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_22: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_22: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_22, [None, None, unsqueeze_504, convert_element_type_35], where_168, True);  full_22 = unsqueeze_504 = convert_element_type_35 = None
    unsqueeze_3743: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_369, 0);  squeeze_369 = None
    unsqueeze_3744: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3743, 2);  unsqueeze_3743 = None
    unsqueeze_3745: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3744, 3);  unsqueeze_3744 = None
    sum_408: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_22, [0, 2, 3])
    sub_1129: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_123, unsqueeze_3745)
    mul_4208: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_22, sub_1129);  sub_1129 = None
    sum_409: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4208, [0, 2, 3]);  mul_4208 = None
    mul_4209: "f32[18]" = torch.ops.aten.mul.Tensor(sum_408, 0.0006377551020408163)
    unsqueeze_3746: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4209, 0);  mul_4209 = None
    unsqueeze_3747: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3746, 2);  unsqueeze_3746 = None
    unsqueeze_3748: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3747, 3);  unsqueeze_3747 = None
    mul_4210: "f32[18]" = torch.ops.aten.mul.Tensor(sum_409, 0.0006377551020408163)
    mul_4211: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_370, squeeze_370)
    mul_4212: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4210, mul_4211);  mul_4210 = mul_4211 = None
    unsqueeze_3749: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4212, 0);  mul_4212 = None
    unsqueeze_3750: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3749, 2);  unsqueeze_3749 = None
    unsqueeze_3751: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3750, 3);  unsqueeze_3750 = None
    mul_4213: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_370, primals_371);  primals_371 = None
    unsqueeze_3752: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4213, 0);  mul_4213 = None
    unsqueeze_3753: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3752, 2);  unsqueeze_3752 = None
    unsqueeze_3754: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3753, 3);  unsqueeze_3753 = None
    sub_1130: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_123, unsqueeze_3745);  convolution_123 = unsqueeze_3745 = None
    mul_4214: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1130, unsqueeze_3751);  sub_1130 = unsqueeze_3751 = None
    sub_1131: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_22, mul_4214);  _unsafe_index_put_22 = mul_4214 = None
    sub_1132: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1131, unsqueeze_3748);  sub_1131 = unsqueeze_3748 = None
    mul_4215: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1132, unsqueeze_3754);  sub_1132 = unsqueeze_3754 = None
    mul_4216: "f32[18]" = torch.ops.aten.mul.Tensor(sum_409, squeeze_370);  sum_409 = squeeze_370 = None
    convolution_backward_201 = torch.ops.aten.convolution_backward.default(mul_4215, relu_114, primals_370, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4215 = primals_370 = None
    getitem_1253: "f32[8, 72, 14, 14]" = convolution_backward_201[0]
    getitem_1254: "f32[18, 72, 1, 1]" = convolution_backward_201[1];  convolution_backward_201 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2036: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_2033, getitem_1253);  add_2033 = getitem_1253 = None
    add_2037: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_2035, where_168);  add_2035 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_23: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_23: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_23, [None, None, unsqueeze_499, convert_element_type_31], where_168, True);  full_23 = unsqueeze_499 = convert_element_type_31 = where_168 = None
    unsqueeze_3755: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_366, 0);  squeeze_366 = None
    unsqueeze_3756: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3755, 2);  unsqueeze_3755 = None
    unsqueeze_3757: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3756, 3);  unsqueeze_3756 = None
    sum_410: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_23, [0, 2, 3])
    sub_1133: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_122, unsqueeze_3757)
    mul_4217: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_23, sub_1133);  sub_1133 = None
    sum_411: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4217, [0, 2, 3]);  mul_4217 = None
    mul_4218: "f32[18]" = torch.ops.aten.mul.Tensor(sum_410, 0.00015943877551020407)
    unsqueeze_3758: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4218, 0);  mul_4218 = None
    unsqueeze_3759: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3758, 2);  unsqueeze_3758 = None
    unsqueeze_3760: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3759, 3);  unsqueeze_3759 = None
    mul_4219: "f32[18]" = torch.ops.aten.mul.Tensor(sum_411, 0.00015943877551020407)
    mul_4220: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_367, squeeze_367)
    mul_4221: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4219, mul_4220);  mul_4219 = mul_4220 = None
    unsqueeze_3761: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4221, 0);  mul_4221 = None
    unsqueeze_3762: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3761, 2);  unsqueeze_3761 = None
    unsqueeze_3763: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3762, 3);  unsqueeze_3762 = None
    mul_4222: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_367, primals_368);  primals_368 = None
    unsqueeze_3764: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4222, 0);  mul_4222 = None
    unsqueeze_3765: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3764, 2);  unsqueeze_3764 = None
    unsqueeze_3766: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3765, 3);  unsqueeze_3765 = None
    sub_1134: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_122, unsqueeze_3757);  convolution_122 = unsqueeze_3757 = None
    mul_4223: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1134, unsqueeze_3763);  sub_1134 = unsqueeze_3763 = None
    sub_1135: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_23, mul_4223);  _unsafe_index_put_23 = mul_4223 = None
    sub_1136: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1135, unsqueeze_3760);  sub_1135 = unsqueeze_3760 = None
    mul_4224: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1136, unsqueeze_3766);  sub_1136 = unsqueeze_3766 = None
    mul_4225: "f32[18]" = torch.ops.aten.mul.Tensor(sum_411, squeeze_367);  sum_411 = squeeze_367 = None
    convolution_backward_202 = torch.ops.aten.convolution_backward.default(mul_4224, relu_106, primals_367, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4224 = primals_367 = None
    getitem_1256: "f32[8, 36, 28, 28]" = convolution_backward_202[0]
    getitem_1257: "f32[18, 36, 1, 1]" = convolution_backward_202[1];  convolution_backward_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2038: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_2034, getitem_1256);  add_2034 = getitem_1256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_728: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_114);  relu_114 = None
    alias_729: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_728);  alias_728 = None
    le_169: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_729, 0);  alias_729 = None
    scalar_tensor_169: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_169: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_169, scalar_tensor_169, add_2036);  le_169 = scalar_tensor_169 = add_2036 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3767: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_363, 0);  squeeze_363 = None
    unsqueeze_3768: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3767, 2);  unsqueeze_3767 = None
    unsqueeze_3769: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3768, 3);  unsqueeze_3768 = None
    sum_412: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_169, [0, 2, 3])
    sub_1137: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_121, unsqueeze_3769)
    mul_4226: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_169, sub_1137);  sub_1137 = None
    sum_413: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4226, [0, 2, 3]);  mul_4226 = None
    mul_4227: "f32[72]" = torch.ops.aten.mul.Tensor(sum_412, 0.0006377551020408163)
    unsqueeze_3770: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4227, 0);  mul_4227 = None
    unsqueeze_3771: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3770, 2);  unsqueeze_3770 = None
    unsqueeze_3772: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3771, 3);  unsqueeze_3771 = None
    mul_4228: "f32[72]" = torch.ops.aten.mul.Tensor(sum_413, 0.0006377551020408163)
    mul_4229: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_364, squeeze_364)
    mul_4230: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4228, mul_4229);  mul_4228 = mul_4229 = None
    unsqueeze_3773: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4230, 0);  mul_4230 = None
    unsqueeze_3774: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3773, 2);  unsqueeze_3773 = None
    unsqueeze_3775: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3774, 3);  unsqueeze_3774 = None
    mul_4231: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_364, primals_365);  primals_365 = None
    unsqueeze_3776: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4231, 0);  mul_4231 = None
    unsqueeze_3777: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3776, 2);  unsqueeze_3776 = None
    unsqueeze_3778: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3777, 3);  unsqueeze_3777 = None
    sub_1138: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_121, unsqueeze_3769);  convolution_121 = unsqueeze_3769 = None
    mul_4232: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1138, unsqueeze_3775);  sub_1138 = unsqueeze_3775 = None
    sub_1139: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_169, mul_4232);  mul_4232 = None
    sub_1140: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1139, unsqueeze_3772);  sub_1139 = unsqueeze_3772 = None
    mul_4233: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1140, unsqueeze_3778);  sub_1140 = unsqueeze_3778 = None
    mul_4234: "f32[72]" = torch.ops.aten.mul.Tensor(sum_413, squeeze_364);  sum_413 = squeeze_364 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_203 = torch.ops.aten.convolution_backward.default(mul_4233, relu_113, primals_364, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4233 = primals_364 = None
    getitem_1259: "f32[8, 72, 14, 14]" = convolution_backward_203[0]
    getitem_1260: "f32[72, 72, 3, 3]" = convolution_backward_203[1];  convolution_backward_203 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_731: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_113);  relu_113 = None
    alias_732: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_731);  alias_731 = None
    le_170: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_732, 0);  alias_732 = None
    scalar_tensor_170: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_170: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_170, scalar_tensor_170, getitem_1259);  le_170 = scalar_tensor_170 = getitem_1259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3779: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_360, 0);  squeeze_360 = None
    unsqueeze_3780: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3779, 2);  unsqueeze_3779 = None
    unsqueeze_3781: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3780, 3);  unsqueeze_3780 = None
    sum_414: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_170, [0, 2, 3])
    sub_1141: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_120, unsqueeze_3781)
    mul_4235: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_170, sub_1141);  sub_1141 = None
    sum_415: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4235, [0, 2, 3]);  mul_4235 = None
    mul_4236: "f32[72]" = torch.ops.aten.mul.Tensor(sum_414, 0.0006377551020408163)
    unsqueeze_3782: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4236, 0);  mul_4236 = None
    unsqueeze_3783: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3782, 2);  unsqueeze_3782 = None
    unsqueeze_3784: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3783, 3);  unsqueeze_3783 = None
    mul_4237: "f32[72]" = torch.ops.aten.mul.Tensor(sum_415, 0.0006377551020408163)
    mul_4238: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_361, squeeze_361)
    mul_4239: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4237, mul_4238);  mul_4237 = mul_4238 = None
    unsqueeze_3785: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4239, 0);  mul_4239 = None
    unsqueeze_3786: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3785, 2);  unsqueeze_3785 = None
    unsqueeze_3787: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3786, 3);  unsqueeze_3786 = None
    mul_4240: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_361, primals_362);  primals_362 = None
    unsqueeze_3788: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4240, 0);  mul_4240 = None
    unsqueeze_3789: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3788, 2);  unsqueeze_3788 = None
    unsqueeze_3790: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3789, 3);  unsqueeze_3789 = None
    sub_1142: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_120, unsqueeze_3781);  convolution_120 = unsqueeze_3781 = None
    mul_4241: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1142, unsqueeze_3787);  sub_1142 = unsqueeze_3787 = None
    sub_1143: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_170, mul_4241);  where_170 = mul_4241 = None
    sub_1144: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1143, unsqueeze_3784);  sub_1143 = unsqueeze_3784 = None
    mul_4242: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1144, unsqueeze_3790);  sub_1144 = unsqueeze_3790 = None
    mul_4243: "f32[72]" = torch.ops.aten.mul.Tensor(sum_415, squeeze_361);  sum_415 = squeeze_361 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_204 = torch.ops.aten.convolution_backward.default(mul_4242, relu_112, primals_361, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4242 = primals_361 = None
    getitem_1262: "f32[8, 72, 14, 14]" = convolution_backward_204[0]
    getitem_1263: "f32[72, 72, 3, 3]" = convolution_backward_204[1];  convolution_backward_204 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2039: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_169, getitem_1262);  where_169 = getitem_1262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_734: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_112);  relu_112 = None
    alias_735: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_734);  alias_734 = None
    le_171: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_735, 0);  alias_735 = None
    scalar_tensor_171: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_171: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_171, scalar_tensor_171, add_2039);  le_171 = scalar_tensor_171 = add_2039 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3791: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_357, 0);  squeeze_357 = None
    unsqueeze_3792: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3791, 2);  unsqueeze_3791 = None
    unsqueeze_3793: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3792, 3);  unsqueeze_3792 = None
    sum_416: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_171, [0, 2, 3])
    sub_1145: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_119, unsqueeze_3793)
    mul_4244: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_171, sub_1145);  sub_1145 = None
    sum_417: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4244, [0, 2, 3]);  mul_4244 = None
    mul_4245: "f32[72]" = torch.ops.aten.mul.Tensor(sum_416, 0.0006377551020408163)
    unsqueeze_3794: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4245, 0);  mul_4245 = None
    unsqueeze_3795: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3794, 2);  unsqueeze_3794 = None
    unsqueeze_3796: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3795, 3);  unsqueeze_3795 = None
    mul_4246: "f32[72]" = torch.ops.aten.mul.Tensor(sum_417, 0.0006377551020408163)
    mul_4247: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_358, squeeze_358)
    mul_4248: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4246, mul_4247);  mul_4246 = mul_4247 = None
    unsqueeze_3797: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4248, 0);  mul_4248 = None
    unsqueeze_3798: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3797, 2);  unsqueeze_3797 = None
    unsqueeze_3799: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3798, 3);  unsqueeze_3798 = None
    mul_4249: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_358, primals_359);  primals_359 = None
    unsqueeze_3800: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4249, 0);  mul_4249 = None
    unsqueeze_3801: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3800, 2);  unsqueeze_3800 = None
    unsqueeze_3802: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3801, 3);  unsqueeze_3801 = None
    sub_1146: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_119, unsqueeze_3793);  convolution_119 = unsqueeze_3793 = None
    mul_4250: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1146, unsqueeze_3799);  sub_1146 = unsqueeze_3799 = None
    sub_1147: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_171, mul_4250);  mul_4250 = None
    sub_1148: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1147, unsqueeze_3796);  sub_1147 = unsqueeze_3796 = None
    mul_4251: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1148, unsqueeze_3802);  sub_1148 = unsqueeze_3802 = None
    mul_4252: "f32[72]" = torch.ops.aten.mul.Tensor(sum_417, squeeze_358);  sum_417 = squeeze_358 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_205 = torch.ops.aten.convolution_backward.default(mul_4251, relu_111, primals_358, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4251 = primals_358 = None
    getitem_1265: "f32[8, 72, 14, 14]" = convolution_backward_205[0]
    getitem_1266: "f32[72, 72, 3, 3]" = convolution_backward_205[1];  convolution_backward_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_737: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_111);  relu_111 = None
    alias_738: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_737);  alias_737 = None
    le_172: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_738, 0);  alias_738 = None
    scalar_tensor_172: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_172: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_172, scalar_tensor_172, getitem_1265);  le_172 = scalar_tensor_172 = getitem_1265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3803: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_354, 0);  squeeze_354 = None
    unsqueeze_3804: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3803, 2);  unsqueeze_3803 = None
    unsqueeze_3805: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3804, 3);  unsqueeze_3804 = None
    sum_418: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_172, [0, 2, 3])
    sub_1149: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_118, unsqueeze_3805)
    mul_4253: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_172, sub_1149);  sub_1149 = None
    sum_419: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4253, [0, 2, 3]);  mul_4253 = None
    mul_4254: "f32[72]" = torch.ops.aten.mul.Tensor(sum_418, 0.0006377551020408163)
    unsqueeze_3806: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4254, 0);  mul_4254 = None
    unsqueeze_3807: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3806, 2);  unsqueeze_3806 = None
    unsqueeze_3808: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3807, 3);  unsqueeze_3807 = None
    mul_4255: "f32[72]" = torch.ops.aten.mul.Tensor(sum_419, 0.0006377551020408163)
    mul_4256: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_355, squeeze_355)
    mul_4257: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4255, mul_4256);  mul_4255 = mul_4256 = None
    unsqueeze_3809: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4257, 0);  mul_4257 = None
    unsqueeze_3810: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3809, 2);  unsqueeze_3809 = None
    unsqueeze_3811: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3810, 3);  unsqueeze_3810 = None
    mul_4258: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_355, primals_356);  primals_356 = None
    unsqueeze_3812: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4258, 0);  mul_4258 = None
    unsqueeze_3813: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3812, 2);  unsqueeze_3812 = None
    unsqueeze_3814: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3813, 3);  unsqueeze_3813 = None
    sub_1150: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_118, unsqueeze_3805);  convolution_118 = unsqueeze_3805 = None
    mul_4259: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1150, unsqueeze_3811);  sub_1150 = unsqueeze_3811 = None
    sub_1151: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_172, mul_4259);  where_172 = mul_4259 = None
    sub_1152: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1151, unsqueeze_3808);  sub_1151 = unsqueeze_3808 = None
    mul_4260: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1152, unsqueeze_3814);  sub_1152 = unsqueeze_3814 = None
    mul_4261: "f32[72]" = torch.ops.aten.mul.Tensor(sum_419, squeeze_355);  sum_419 = squeeze_355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_206 = torch.ops.aten.convolution_backward.default(mul_4260, relu_110, primals_355, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4260 = primals_355 = None
    getitem_1268: "f32[8, 72, 14, 14]" = convolution_backward_206[0]
    getitem_1269: "f32[72, 72, 3, 3]" = convolution_backward_206[1];  convolution_backward_206 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2040: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_171, getitem_1268);  where_171 = getitem_1268 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_740: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_110);  relu_110 = None
    alias_741: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_740);  alias_740 = None
    le_173: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_741, 0);  alias_741 = None
    scalar_tensor_173: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_173: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_173, scalar_tensor_173, add_2040);  le_173 = scalar_tensor_173 = add_2040 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3815: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_351, 0);  squeeze_351 = None
    unsqueeze_3816: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3815, 2);  unsqueeze_3815 = None
    unsqueeze_3817: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3816, 3);  unsqueeze_3816 = None
    sum_420: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_173, [0, 2, 3])
    sub_1153: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_117, unsqueeze_3817)
    mul_4262: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_173, sub_1153);  sub_1153 = None
    sum_421: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4262, [0, 2, 3]);  mul_4262 = None
    mul_4263: "f32[72]" = torch.ops.aten.mul.Tensor(sum_420, 0.0006377551020408163)
    unsqueeze_3818: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4263, 0);  mul_4263 = None
    unsqueeze_3819: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3818, 2);  unsqueeze_3818 = None
    unsqueeze_3820: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3819, 3);  unsqueeze_3819 = None
    mul_4264: "f32[72]" = torch.ops.aten.mul.Tensor(sum_421, 0.0006377551020408163)
    mul_4265: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_352, squeeze_352)
    mul_4266: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4264, mul_4265);  mul_4264 = mul_4265 = None
    unsqueeze_3821: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4266, 0);  mul_4266 = None
    unsqueeze_3822: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3821, 2);  unsqueeze_3821 = None
    unsqueeze_3823: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3822, 3);  unsqueeze_3822 = None
    mul_4267: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_352, primals_353);  primals_353 = None
    unsqueeze_3824: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4267, 0);  mul_4267 = None
    unsqueeze_3825: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3824, 2);  unsqueeze_3824 = None
    unsqueeze_3826: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3825, 3);  unsqueeze_3825 = None
    sub_1154: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_117, unsqueeze_3817);  convolution_117 = unsqueeze_3817 = None
    mul_4268: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1154, unsqueeze_3823);  sub_1154 = unsqueeze_3823 = None
    sub_1155: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_173, mul_4268);  mul_4268 = None
    sub_1156: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1155, unsqueeze_3820);  sub_1155 = unsqueeze_3820 = None
    mul_4269: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1156, unsqueeze_3826);  sub_1156 = unsqueeze_3826 = None
    mul_4270: "f32[72]" = torch.ops.aten.mul.Tensor(sum_421, squeeze_352);  sum_421 = squeeze_352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_207 = torch.ops.aten.convolution_backward.default(mul_4269, relu_109, primals_352, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4269 = primals_352 = None
    getitem_1271: "f32[8, 72, 14, 14]" = convolution_backward_207[0]
    getitem_1272: "f32[72, 72, 3, 3]" = convolution_backward_207[1];  convolution_backward_207 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_743: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_109);  relu_109 = None
    alias_744: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_743);  alias_743 = None
    le_174: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_744, 0);  alias_744 = None
    scalar_tensor_174: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_174: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_174, scalar_tensor_174, getitem_1271);  le_174 = scalar_tensor_174 = getitem_1271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3827: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_348, 0);  squeeze_348 = None
    unsqueeze_3828: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3827, 2);  unsqueeze_3827 = None
    unsqueeze_3829: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3828, 3);  unsqueeze_3828 = None
    sum_422: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_174, [0, 2, 3])
    sub_1157: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_116, unsqueeze_3829)
    mul_4271: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_174, sub_1157);  sub_1157 = None
    sum_423: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4271, [0, 2, 3]);  mul_4271 = None
    mul_4272: "f32[72]" = torch.ops.aten.mul.Tensor(sum_422, 0.0006377551020408163)
    unsqueeze_3830: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4272, 0);  mul_4272 = None
    unsqueeze_3831: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3830, 2);  unsqueeze_3830 = None
    unsqueeze_3832: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3831, 3);  unsqueeze_3831 = None
    mul_4273: "f32[72]" = torch.ops.aten.mul.Tensor(sum_423, 0.0006377551020408163)
    mul_4274: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_349, squeeze_349)
    mul_4275: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4273, mul_4274);  mul_4273 = mul_4274 = None
    unsqueeze_3833: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4275, 0);  mul_4275 = None
    unsqueeze_3834: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3833, 2);  unsqueeze_3833 = None
    unsqueeze_3835: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3834, 3);  unsqueeze_3834 = None
    mul_4276: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_349, primals_350);  primals_350 = None
    unsqueeze_3836: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4276, 0);  mul_4276 = None
    unsqueeze_3837: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3836, 2);  unsqueeze_3836 = None
    unsqueeze_3838: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3837, 3);  unsqueeze_3837 = None
    sub_1158: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_116, unsqueeze_3829);  convolution_116 = unsqueeze_3829 = None
    mul_4277: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1158, unsqueeze_3835);  sub_1158 = unsqueeze_3835 = None
    sub_1159: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_174, mul_4277);  where_174 = mul_4277 = None
    sub_1160: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1159, unsqueeze_3832);  sub_1159 = unsqueeze_3832 = None
    mul_4278: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1160, unsqueeze_3838);  sub_1160 = unsqueeze_3838 = None
    mul_4279: "f32[72]" = torch.ops.aten.mul.Tensor(sum_423, squeeze_349);  sum_423 = squeeze_349 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_208 = torch.ops.aten.convolution_backward.default(mul_4278, relu_108, primals_349, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4278 = primals_349 = None
    getitem_1274: "f32[8, 72, 14, 14]" = convolution_backward_208[0]
    getitem_1275: "f32[72, 72, 3, 3]" = convolution_backward_208[1];  convolution_backward_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2041: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_173, getitem_1274);  where_173 = getitem_1274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_746: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_108);  relu_108 = None
    alias_747: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_746);  alias_746 = None
    le_175: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_747, 0);  alias_747 = None
    scalar_tensor_175: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_175: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_175, scalar_tensor_175, add_2041);  le_175 = scalar_tensor_175 = add_2041 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3839: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_345, 0);  squeeze_345 = None
    unsqueeze_3840: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3839, 2);  unsqueeze_3839 = None
    unsqueeze_3841: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3840, 3);  unsqueeze_3840 = None
    sum_424: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_175, [0, 2, 3])
    sub_1161: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_115, unsqueeze_3841)
    mul_4280: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_175, sub_1161);  sub_1161 = None
    sum_425: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4280, [0, 2, 3]);  mul_4280 = None
    mul_4281: "f32[72]" = torch.ops.aten.mul.Tensor(sum_424, 0.0006377551020408163)
    unsqueeze_3842: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4281, 0);  mul_4281 = None
    unsqueeze_3843: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3842, 2);  unsqueeze_3842 = None
    unsqueeze_3844: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3843, 3);  unsqueeze_3843 = None
    mul_4282: "f32[72]" = torch.ops.aten.mul.Tensor(sum_425, 0.0006377551020408163)
    mul_4283: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_346, squeeze_346)
    mul_4284: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4282, mul_4283);  mul_4282 = mul_4283 = None
    unsqueeze_3845: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4284, 0);  mul_4284 = None
    unsqueeze_3846: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3845, 2);  unsqueeze_3845 = None
    unsqueeze_3847: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3846, 3);  unsqueeze_3846 = None
    mul_4285: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_346, primals_347);  primals_347 = None
    unsqueeze_3848: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4285, 0);  mul_4285 = None
    unsqueeze_3849: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3848, 2);  unsqueeze_3848 = None
    unsqueeze_3850: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3849, 3);  unsqueeze_3849 = None
    sub_1162: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_115, unsqueeze_3841);  convolution_115 = unsqueeze_3841 = None
    mul_4286: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1162, unsqueeze_3847);  sub_1162 = unsqueeze_3847 = None
    sub_1163: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_175, mul_4286);  mul_4286 = None
    sub_1164: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1163, unsqueeze_3844);  sub_1163 = unsqueeze_3844 = None
    mul_4287: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1164, unsqueeze_3850);  sub_1164 = unsqueeze_3850 = None
    mul_4288: "f32[72]" = torch.ops.aten.mul.Tensor(sum_425, squeeze_346);  sum_425 = squeeze_346 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_209 = torch.ops.aten.convolution_backward.default(mul_4287, relu_107, primals_346, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4287 = primals_346 = None
    getitem_1277: "f32[8, 72, 14, 14]" = convolution_backward_209[0]
    getitem_1278: "f32[72, 72, 3, 3]" = convolution_backward_209[1];  convolution_backward_209 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_749: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_107);  relu_107 = None
    alias_750: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_749);  alias_749 = None
    le_176: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_750, 0);  alias_750 = None
    scalar_tensor_176: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_176: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_176, scalar_tensor_176, getitem_1277);  le_176 = scalar_tensor_176 = getitem_1277 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3851: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_342, 0);  squeeze_342 = None
    unsqueeze_3852: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3851, 2);  unsqueeze_3851 = None
    unsqueeze_3853: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3852, 3);  unsqueeze_3852 = None
    sum_426: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_176, [0, 2, 3])
    sub_1165: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_114, unsqueeze_3853)
    mul_4289: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_176, sub_1165);  sub_1165 = None
    sum_427: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4289, [0, 2, 3]);  mul_4289 = None
    mul_4290: "f32[72]" = torch.ops.aten.mul.Tensor(sum_426, 0.0006377551020408163)
    unsqueeze_3854: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4290, 0);  mul_4290 = None
    unsqueeze_3855: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3854, 2);  unsqueeze_3854 = None
    unsqueeze_3856: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3855, 3);  unsqueeze_3855 = None
    mul_4291: "f32[72]" = torch.ops.aten.mul.Tensor(sum_427, 0.0006377551020408163)
    mul_4292: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_343, squeeze_343)
    mul_4293: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4291, mul_4292);  mul_4291 = mul_4292 = None
    unsqueeze_3857: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4293, 0);  mul_4293 = None
    unsqueeze_3858: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3857, 2);  unsqueeze_3857 = None
    unsqueeze_3859: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3858, 3);  unsqueeze_3858 = None
    mul_4294: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_343, primals_344);  primals_344 = None
    unsqueeze_3860: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4294, 0);  mul_4294 = None
    unsqueeze_3861: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3860, 2);  unsqueeze_3860 = None
    unsqueeze_3862: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3861, 3);  unsqueeze_3861 = None
    sub_1166: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_114, unsqueeze_3853);  convolution_114 = unsqueeze_3853 = None
    mul_4295: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1166, unsqueeze_3859);  sub_1166 = unsqueeze_3859 = None
    sub_1167: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_176, mul_4295);  where_176 = mul_4295 = None
    sub_1168: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1167, unsqueeze_3856);  sub_1167 = unsqueeze_3856 = None
    mul_4296: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1168, unsqueeze_3862);  sub_1168 = unsqueeze_3862 = None
    mul_4297: "f32[72]" = torch.ops.aten.mul.Tensor(sum_427, squeeze_343);  sum_427 = squeeze_343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_210 = torch.ops.aten.convolution_backward.default(mul_4296, relu_90, primals_343, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4296 = relu_90 = primals_343 = None
    getitem_1280: "f32[8, 72, 14, 14]" = convolution_backward_210[0]
    getitem_1281: "f32[72, 72, 3, 3]" = convolution_backward_210[1];  convolution_backward_210 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2042: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_175, getitem_1280);  where_175 = getitem_1280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_752: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_106);  relu_106 = None
    alias_753: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_752);  alias_752 = None
    le_177: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_753, 0);  alias_753 = None
    scalar_tensor_177: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_177: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_177, scalar_tensor_177, add_2038);  le_177 = scalar_tensor_177 = add_2038 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3863: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_339, 0);  squeeze_339 = None
    unsqueeze_3864: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3863, 2);  unsqueeze_3863 = None
    unsqueeze_3865: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3864, 3);  unsqueeze_3864 = None
    sum_428: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_177, [0, 2, 3])
    sub_1169: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_113, unsqueeze_3865)
    mul_4298: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_177, sub_1169);  sub_1169 = None
    sum_429: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4298, [0, 2, 3]);  mul_4298 = None
    mul_4299: "f32[36]" = torch.ops.aten.mul.Tensor(sum_428, 0.00015943877551020407)
    unsqueeze_3866: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4299, 0);  mul_4299 = None
    unsqueeze_3867: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3866, 2);  unsqueeze_3866 = None
    unsqueeze_3868: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3867, 3);  unsqueeze_3867 = None
    mul_4300: "f32[36]" = torch.ops.aten.mul.Tensor(sum_429, 0.00015943877551020407)
    mul_4301: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_340, squeeze_340)
    mul_4302: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4300, mul_4301);  mul_4300 = mul_4301 = None
    unsqueeze_3869: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4302, 0);  mul_4302 = None
    unsqueeze_3870: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3869, 2);  unsqueeze_3869 = None
    unsqueeze_3871: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3870, 3);  unsqueeze_3870 = None
    mul_4303: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_340, primals_341);  primals_341 = None
    unsqueeze_3872: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4303, 0);  mul_4303 = None
    unsqueeze_3873: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3872, 2);  unsqueeze_3872 = None
    unsqueeze_3874: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3873, 3);  unsqueeze_3873 = None
    sub_1170: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_113, unsqueeze_3865);  convolution_113 = unsqueeze_3865 = None
    mul_4304: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1170, unsqueeze_3871);  sub_1170 = unsqueeze_3871 = None
    sub_1171: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_177, mul_4304);  mul_4304 = None
    sub_1172: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1171, unsqueeze_3868);  sub_1171 = unsqueeze_3868 = None
    mul_4305: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1172, unsqueeze_3874);  sub_1172 = unsqueeze_3874 = None
    mul_4306: "f32[36]" = torch.ops.aten.mul.Tensor(sum_429, squeeze_340);  sum_429 = squeeze_340 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_211 = torch.ops.aten.convolution_backward.default(mul_4305, relu_105, primals_340, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4305 = primals_340 = None
    getitem_1283: "f32[8, 36, 28, 28]" = convolution_backward_211[0]
    getitem_1284: "f32[36, 36, 3, 3]" = convolution_backward_211[1];  convolution_backward_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_755: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_105);  relu_105 = None
    alias_756: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_755);  alias_755 = None
    le_178: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_756, 0);  alias_756 = None
    scalar_tensor_178: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_178: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_178, scalar_tensor_178, getitem_1283);  le_178 = scalar_tensor_178 = getitem_1283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3875: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_336, 0);  squeeze_336 = None
    unsqueeze_3876: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3875, 2);  unsqueeze_3875 = None
    unsqueeze_3877: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3876, 3);  unsqueeze_3876 = None
    sum_430: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_178, [0, 2, 3])
    sub_1173: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_112, unsqueeze_3877)
    mul_4307: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_178, sub_1173);  sub_1173 = None
    sum_431: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4307, [0, 2, 3]);  mul_4307 = None
    mul_4308: "f32[36]" = torch.ops.aten.mul.Tensor(sum_430, 0.00015943877551020407)
    unsqueeze_3878: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4308, 0);  mul_4308 = None
    unsqueeze_3879: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3878, 2);  unsqueeze_3878 = None
    unsqueeze_3880: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3879, 3);  unsqueeze_3879 = None
    mul_4309: "f32[36]" = torch.ops.aten.mul.Tensor(sum_431, 0.00015943877551020407)
    mul_4310: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_337, squeeze_337)
    mul_4311: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4309, mul_4310);  mul_4309 = mul_4310 = None
    unsqueeze_3881: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4311, 0);  mul_4311 = None
    unsqueeze_3882: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3881, 2);  unsqueeze_3881 = None
    unsqueeze_3883: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3882, 3);  unsqueeze_3882 = None
    mul_4312: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_337, primals_338);  primals_338 = None
    unsqueeze_3884: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4312, 0);  mul_4312 = None
    unsqueeze_3885: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3884, 2);  unsqueeze_3884 = None
    unsqueeze_3886: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3885, 3);  unsqueeze_3885 = None
    sub_1174: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_112, unsqueeze_3877);  convolution_112 = unsqueeze_3877 = None
    mul_4313: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1174, unsqueeze_3883);  sub_1174 = unsqueeze_3883 = None
    sub_1175: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_178, mul_4313);  where_178 = mul_4313 = None
    sub_1176: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1175, unsqueeze_3880);  sub_1175 = unsqueeze_3880 = None
    mul_4314: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1176, unsqueeze_3886);  sub_1176 = unsqueeze_3886 = None
    mul_4315: "f32[36]" = torch.ops.aten.mul.Tensor(sum_431, squeeze_337);  sum_431 = squeeze_337 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_212 = torch.ops.aten.convolution_backward.default(mul_4314, relu_104, primals_337, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4314 = primals_337 = None
    getitem_1286: "f32[8, 36, 28, 28]" = convolution_backward_212[0]
    getitem_1287: "f32[36, 36, 3, 3]" = convolution_backward_212[1];  convolution_backward_212 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2043: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_177, getitem_1286);  where_177 = getitem_1286 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_758: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_104);  relu_104 = None
    alias_759: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_758);  alias_758 = None
    le_179: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_759, 0);  alias_759 = None
    scalar_tensor_179: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_179: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_179, scalar_tensor_179, add_2043);  le_179 = scalar_tensor_179 = add_2043 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3887: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_333, 0);  squeeze_333 = None
    unsqueeze_3888: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3887, 2);  unsqueeze_3887 = None
    unsqueeze_3889: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3888, 3);  unsqueeze_3888 = None
    sum_432: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_179, [0, 2, 3])
    sub_1177: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_111, unsqueeze_3889)
    mul_4316: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_179, sub_1177);  sub_1177 = None
    sum_433: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4316, [0, 2, 3]);  mul_4316 = None
    mul_4317: "f32[36]" = torch.ops.aten.mul.Tensor(sum_432, 0.00015943877551020407)
    unsqueeze_3890: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4317, 0);  mul_4317 = None
    unsqueeze_3891: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3890, 2);  unsqueeze_3890 = None
    unsqueeze_3892: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3891, 3);  unsqueeze_3891 = None
    mul_4318: "f32[36]" = torch.ops.aten.mul.Tensor(sum_433, 0.00015943877551020407)
    mul_4319: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_334, squeeze_334)
    mul_4320: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4318, mul_4319);  mul_4318 = mul_4319 = None
    unsqueeze_3893: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4320, 0);  mul_4320 = None
    unsqueeze_3894: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3893, 2);  unsqueeze_3893 = None
    unsqueeze_3895: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3894, 3);  unsqueeze_3894 = None
    mul_4321: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_334, primals_335);  primals_335 = None
    unsqueeze_3896: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4321, 0);  mul_4321 = None
    unsqueeze_3897: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3896, 2);  unsqueeze_3896 = None
    unsqueeze_3898: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3897, 3);  unsqueeze_3897 = None
    sub_1178: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_111, unsqueeze_3889);  convolution_111 = unsqueeze_3889 = None
    mul_4322: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1178, unsqueeze_3895);  sub_1178 = unsqueeze_3895 = None
    sub_1179: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_179, mul_4322);  mul_4322 = None
    sub_1180: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1179, unsqueeze_3892);  sub_1179 = unsqueeze_3892 = None
    mul_4323: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1180, unsqueeze_3898);  sub_1180 = unsqueeze_3898 = None
    mul_4324: "f32[36]" = torch.ops.aten.mul.Tensor(sum_433, squeeze_334);  sum_433 = squeeze_334 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_213 = torch.ops.aten.convolution_backward.default(mul_4323, relu_103, primals_334, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4323 = primals_334 = None
    getitem_1289: "f32[8, 36, 28, 28]" = convolution_backward_213[0]
    getitem_1290: "f32[36, 36, 3, 3]" = convolution_backward_213[1];  convolution_backward_213 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_761: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_103);  relu_103 = None
    alias_762: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_761);  alias_761 = None
    le_180: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_762, 0);  alias_762 = None
    scalar_tensor_180: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_180: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_180, scalar_tensor_180, getitem_1289);  le_180 = scalar_tensor_180 = getitem_1289 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3899: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_330, 0);  squeeze_330 = None
    unsqueeze_3900: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3899, 2);  unsqueeze_3899 = None
    unsqueeze_3901: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3900, 3);  unsqueeze_3900 = None
    sum_434: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_180, [0, 2, 3])
    sub_1181: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_110, unsqueeze_3901)
    mul_4325: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_180, sub_1181);  sub_1181 = None
    sum_435: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4325, [0, 2, 3]);  mul_4325 = None
    mul_4326: "f32[36]" = torch.ops.aten.mul.Tensor(sum_434, 0.00015943877551020407)
    unsqueeze_3902: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4326, 0);  mul_4326 = None
    unsqueeze_3903: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3902, 2);  unsqueeze_3902 = None
    unsqueeze_3904: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3903, 3);  unsqueeze_3903 = None
    mul_4327: "f32[36]" = torch.ops.aten.mul.Tensor(sum_435, 0.00015943877551020407)
    mul_4328: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_331, squeeze_331)
    mul_4329: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4327, mul_4328);  mul_4327 = mul_4328 = None
    unsqueeze_3905: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4329, 0);  mul_4329 = None
    unsqueeze_3906: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3905, 2);  unsqueeze_3905 = None
    unsqueeze_3907: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3906, 3);  unsqueeze_3906 = None
    mul_4330: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_331, primals_332);  primals_332 = None
    unsqueeze_3908: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4330, 0);  mul_4330 = None
    unsqueeze_3909: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3908, 2);  unsqueeze_3908 = None
    unsqueeze_3910: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3909, 3);  unsqueeze_3909 = None
    sub_1182: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_110, unsqueeze_3901);  convolution_110 = unsqueeze_3901 = None
    mul_4331: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1182, unsqueeze_3907);  sub_1182 = unsqueeze_3907 = None
    sub_1183: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_180, mul_4331);  where_180 = mul_4331 = None
    sub_1184: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1183, unsqueeze_3904);  sub_1183 = unsqueeze_3904 = None
    mul_4332: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1184, unsqueeze_3910);  sub_1184 = unsqueeze_3910 = None
    mul_4333: "f32[36]" = torch.ops.aten.mul.Tensor(sum_435, squeeze_331);  sum_435 = squeeze_331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_214 = torch.ops.aten.convolution_backward.default(mul_4332, relu_102, primals_331, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4332 = primals_331 = None
    getitem_1292: "f32[8, 36, 28, 28]" = convolution_backward_214[0]
    getitem_1293: "f32[36, 36, 3, 3]" = convolution_backward_214[1];  convolution_backward_214 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2044: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_179, getitem_1292);  where_179 = getitem_1292 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_764: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_102);  relu_102 = None
    alias_765: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_764);  alias_764 = None
    le_181: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_765, 0);  alias_765 = None
    scalar_tensor_181: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_181: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_181, scalar_tensor_181, add_2044);  le_181 = scalar_tensor_181 = add_2044 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3911: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_327, 0);  squeeze_327 = None
    unsqueeze_3912: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3911, 2);  unsqueeze_3911 = None
    unsqueeze_3913: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3912, 3);  unsqueeze_3912 = None
    sum_436: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_181, [0, 2, 3])
    sub_1185: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_109, unsqueeze_3913)
    mul_4334: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_181, sub_1185);  sub_1185 = None
    sum_437: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4334, [0, 2, 3]);  mul_4334 = None
    mul_4335: "f32[36]" = torch.ops.aten.mul.Tensor(sum_436, 0.00015943877551020407)
    unsqueeze_3914: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4335, 0);  mul_4335 = None
    unsqueeze_3915: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3914, 2);  unsqueeze_3914 = None
    unsqueeze_3916: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3915, 3);  unsqueeze_3915 = None
    mul_4336: "f32[36]" = torch.ops.aten.mul.Tensor(sum_437, 0.00015943877551020407)
    mul_4337: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_328, squeeze_328)
    mul_4338: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4336, mul_4337);  mul_4336 = mul_4337 = None
    unsqueeze_3917: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4338, 0);  mul_4338 = None
    unsqueeze_3918: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3917, 2);  unsqueeze_3917 = None
    unsqueeze_3919: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3918, 3);  unsqueeze_3918 = None
    mul_4339: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_328, primals_329);  primals_329 = None
    unsqueeze_3920: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4339, 0);  mul_4339 = None
    unsqueeze_3921: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3920, 2);  unsqueeze_3920 = None
    unsqueeze_3922: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3921, 3);  unsqueeze_3921 = None
    sub_1186: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_109, unsqueeze_3913);  convolution_109 = unsqueeze_3913 = None
    mul_4340: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1186, unsqueeze_3919);  sub_1186 = unsqueeze_3919 = None
    sub_1187: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_181, mul_4340);  mul_4340 = None
    sub_1188: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1187, unsqueeze_3916);  sub_1187 = unsqueeze_3916 = None
    mul_4341: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1188, unsqueeze_3922);  sub_1188 = unsqueeze_3922 = None
    mul_4342: "f32[36]" = torch.ops.aten.mul.Tensor(sum_437, squeeze_328);  sum_437 = squeeze_328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_215 = torch.ops.aten.convolution_backward.default(mul_4341, relu_101, primals_328, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4341 = primals_328 = None
    getitem_1295: "f32[8, 36, 28, 28]" = convolution_backward_215[0]
    getitem_1296: "f32[36, 36, 3, 3]" = convolution_backward_215[1];  convolution_backward_215 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_767: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_101);  relu_101 = None
    alias_768: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_767);  alias_767 = None
    le_182: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_768, 0);  alias_768 = None
    scalar_tensor_182: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_182: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_182, scalar_tensor_182, getitem_1295);  le_182 = scalar_tensor_182 = getitem_1295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3923: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_324, 0);  squeeze_324 = None
    unsqueeze_3924: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3923, 2);  unsqueeze_3923 = None
    unsqueeze_3925: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3924, 3);  unsqueeze_3924 = None
    sum_438: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_182, [0, 2, 3])
    sub_1189: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_108, unsqueeze_3925)
    mul_4343: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_182, sub_1189);  sub_1189 = None
    sum_439: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4343, [0, 2, 3]);  mul_4343 = None
    mul_4344: "f32[36]" = torch.ops.aten.mul.Tensor(sum_438, 0.00015943877551020407)
    unsqueeze_3926: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4344, 0);  mul_4344 = None
    unsqueeze_3927: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3926, 2);  unsqueeze_3926 = None
    unsqueeze_3928: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3927, 3);  unsqueeze_3927 = None
    mul_4345: "f32[36]" = torch.ops.aten.mul.Tensor(sum_439, 0.00015943877551020407)
    mul_4346: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_325, squeeze_325)
    mul_4347: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4345, mul_4346);  mul_4345 = mul_4346 = None
    unsqueeze_3929: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4347, 0);  mul_4347 = None
    unsqueeze_3930: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3929, 2);  unsqueeze_3929 = None
    unsqueeze_3931: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3930, 3);  unsqueeze_3930 = None
    mul_4348: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_325, primals_326);  primals_326 = None
    unsqueeze_3932: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4348, 0);  mul_4348 = None
    unsqueeze_3933: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3932, 2);  unsqueeze_3932 = None
    unsqueeze_3934: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3933, 3);  unsqueeze_3933 = None
    sub_1190: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_108, unsqueeze_3925);  convolution_108 = unsqueeze_3925 = None
    mul_4349: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1190, unsqueeze_3931);  sub_1190 = unsqueeze_3931 = None
    sub_1191: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_182, mul_4349);  where_182 = mul_4349 = None
    sub_1192: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1191, unsqueeze_3928);  sub_1191 = unsqueeze_3928 = None
    mul_4350: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1192, unsqueeze_3934);  sub_1192 = unsqueeze_3934 = None
    mul_4351: "f32[36]" = torch.ops.aten.mul.Tensor(sum_439, squeeze_325);  sum_439 = squeeze_325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_216 = torch.ops.aten.convolution_backward.default(mul_4350, relu_100, primals_325, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4350 = primals_325 = None
    getitem_1298: "f32[8, 36, 28, 28]" = convolution_backward_216[0]
    getitem_1299: "f32[36, 36, 3, 3]" = convolution_backward_216[1];  convolution_backward_216 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2045: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_181, getitem_1298);  where_181 = getitem_1298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_770: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_100);  relu_100 = None
    alias_771: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_770);  alias_770 = None
    le_183: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_771, 0);  alias_771 = None
    scalar_tensor_183: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_183: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_183, scalar_tensor_183, add_2045);  le_183 = scalar_tensor_183 = add_2045 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3935: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_321, 0);  squeeze_321 = None
    unsqueeze_3936: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3935, 2);  unsqueeze_3935 = None
    unsqueeze_3937: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3936, 3);  unsqueeze_3936 = None
    sum_440: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_183, [0, 2, 3])
    sub_1193: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_107, unsqueeze_3937)
    mul_4352: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_183, sub_1193);  sub_1193 = None
    sum_441: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4352, [0, 2, 3]);  mul_4352 = None
    mul_4353: "f32[36]" = torch.ops.aten.mul.Tensor(sum_440, 0.00015943877551020407)
    unsqueeze_3938: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4353, 0);  mul_4353 = None
    unsqueeze_3939: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3938, 2);  unsqueeze_3938 = None
    unsqueeze_3940: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3939, 3);  unsqueeze_3939 = None
    mul_4354: "f32[36]" = torch.ops.aten.mul.Tensor(sum_441, 0.00015943877551020407)
    mul_4355: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_322, squeeze_322)
    mul_4356: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4354, mul_4355);  mul_4354 = mul_4355 = None
    unsqueeze_3941: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4356, 0);  mul_4356 = None
    unsqueeze_3942: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3941, 2);  unsqueeze_3941 = None
    unsqueeze_3943: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3942, 3);  unsqueeze_3942 = None
    mul_4357: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_322, primals_323);  primals_323 = None
    unsqueeze_3944: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4357, 0);  mul_4357 = None
    unsqueeze_3945: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3944, 2);  unsqueeze_3944 = None
    unsqueeze_3946: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3945, 3);  unsqueeze_3945 = None
    sub_1194: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_107, unsqueeze_3937);  convolution_107 = unsqueeze_3937 = None
    mul_4358: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1194, unsqueeze_3943);  sub_1194 = unsqueeze_3943 = None
    sub_1195: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_183, mul_4358);  mul_4358 = None
    sub_1196: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1195, unsqueeze_3940);  sub_1195 = unsqueeze_3940 = None
    mul_4359: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1196, unsqueeze_3946);  sub_1196 = unsqueeze_3946 = None
    mul_4360: "f32[36]" = torch.ops.aten.mul.Tensor(sum_441, squeeze_322);  sum_441 = squeeze_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_217 = torch.ops.aten.convolution_backward.default(mul_4359, relu_99, primals_322, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4359 = primals_322 = None
    getitem_1301: "f32[8, 36, 28, 28]" = convolution_backward_217[0]
    getitem_1302: "f32[36, 36, 3, 3]" = convolution_backward_217[1];  convolution_backward_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_773: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_99);  relu_99 = None
    alias_774: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_773);  alias_773 = None
    le_184: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_774, 0);  alias_774 = None
    scalar_tensor_184: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_184: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_184, scalar_tensor_184, getitem_1301);  le_184 = scalar_tensor_184 = getitem_1301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3947: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_318, 0);  squeeze_318 = None
    unsqueeze_3948: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3947, 2);  unsqueeze_3947 = None
    unsqueeze_3949: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3948, 3);  unsqueeze_3948 = None
    sum_442: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_184, [0, 2, 3])
    sub_1197: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_106, unsqueeze_3949)
    mul_4361: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_184, sub_1197);  sub_1197 = None
    sum_443: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4361, [0, 2, 3]);  mul_4361 = None
    mul_4362: "f32[36]" = torch.ops.aten.mul.Tensor(sum_442, 0.00015943877551020407)
    unsqueeze_3950: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4362, 0);  mul_4362 = None
    unsqueeze_3951: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3950, 2);  unsqueeze_3950 = None
    unsqueeze_3952: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3951, 3);  unsqueeze_3951 = None
    mul_4363: "f32[36]" = torch.ops.aten.mul.Tensor(sum_443, 0.00015943877551020407)
    mul_4364: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_319, squeeze_319)
    mul_4365: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4363, mul_4364);  mul_4363 = mul_4364 = None
    unsqueeze_3953: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4365, 0);  mul_4365 = None
    unsqueeze_3954: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3953, 2);  unsqueeze_3953 = None
    unsqueeze_3955: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3954, 3);  unsqueeze_3954 = None
    mul_4366: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_319, primals_320);  primals_320 = None
    unsqueeze_3956: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4366, 0);  mul_4366 = None
    unsqueeze_3957: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3956, 2);  unsqueeze_3956 = None
    unsqueeze_3958: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3957, 3);  unsqueeze_3957 = None
    sub_1198: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_106, unsqueeze_3949);  convolution_106 = unsqueeze_3949 = None
    mul_4367: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1198, unsqueeze_3955);  sub_1198 = unsqueeze_3955 = None
    sub_1199: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_184, mul_4367);  where_184 = mul_4367 = None
    sub_1200: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1199, unsqueeze_3952);  sub_1199 = unsqueeze_3952 = None
    mul_4368: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1200, unsqueeze_3958);  sub_1200 = unsqueeze_3958 = None
    mul_4369: "f32[36]" = torch.ops.aten.mul.Tensor(sum_443, squeeze_319);  sum_443 = squeeze_319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_218 = torch.ops.aten.convolution_backward.default(mul_4368, relu_88, primals_319, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4368 = relu_88 = primals_319 = None
    getitem_1304: "f32[8, 36, 28, 28]" = convolution_backward_218[0]
    getitem_1305: "f32[36, 36, 3, 3]" = convolution_backward_218[1];  convolution_backward_218 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2046: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_183, getitem_1304);  where_183 = getitem_1304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_776: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_98);  relu_98 = None
    alias_777: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_776);  alias_776 = None
    le_185: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_777, 0);  alias_777 = None
    scalar_tensor_185: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_185: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_185, scalar_tensor_185, add_2037);  le_185 = scalar_tensor_185 = add_2037 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3959: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_315, 0);  squeeze_315 = None
    unsqueeze_3960: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3959, 2);  unsqueeze_3959 = None
    unsqueeze_3961: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3960, 3);  unsqueeze_3960 = None
    sum_444: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_185, [0, 2, 3])
    sub_1201: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_105, unsqueeze_3961)
    mul_4370: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_185, sub_1201);  sub_1201 = None
    sum_445: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4370, [0, 2, 3]);  mul_4370 = None
    mul_4371: "f32[18]" = torch.ops.aten.mul.Tensor(sum_444, 3.985969387755102e-05)
    unsqueeze_3962: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4371, 0);  mul_4371 = None
    unsqueeze_3963: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3962, 2);  unsqueeze_3962 = None
    unsqueeze_3964: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3963, 3);  unsqueeze_3963 = None
    mul_4372: "f32[18]" = torch.ops.aten.mul.Tensor(sum_445, 3.985969387755102e-05)
    mul_4373: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_316, squeeze_316)
    mul_4374: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4372, mul_4373);  mul_4372 = mul_4373 = None
    unsqueeze_3965: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4374, 0);  mul_4374 = None
    unsqueeze_3966: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3965, 2);  unsqueeze_3965 = None
    unsqueeze_3967: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3966, 3);  unsqueeze_3966 = None
    mul_4375: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_316, primals_317);  primals_317 = None
    unsqueeze_3968: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4375, 0);  mul_4375 = None
    unsqueeze_3969: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3968, 2);  unsqueeze_3968 = None
    unsqueeze_3970: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3969, 3);  unsqueeze_3969 = None
    sub_1202: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_105, unsqueeze_3961);  convolution_105 = unsqueeze_3961 = None
    mul_4376: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1202, unsqueeze_3967);  sub_1202 = unsqueeze_3967 = None
    sub_1203: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_185, mul_4376);  mul_4376 = None
    sub_1204: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1203, unsqueeze_3964);  sub_1203 = unsqueeze_3964 = None
    mul_4377: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1204, unsqueeze_3970);  sub_1204 = unsqueeze_3970 = None
    mul_4378: "f32[18]" = torch.ops.aten.mul.Tensor(sum_445, squeeze_316);  sum_445 = squeeze_316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_219 = torch.ops.aten.convolution_backward.default(mul_4377, relu_97, primals_316, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4377 = primals_316 = None
    getitem_1307: "f32[8, 18, 56, 56]" = convolution_backward_219[0]
    getitem_1308: "f32[18, 18, 3, 3]" = convolution_backward_219[1];  convolution_backward_219 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_779: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_97);  relu_97 = None
    alias_780: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_779);  alias_779 = None
    le_186: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_780, 0);  alias_780 = None
    scalar_tensor_186: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_186: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_186, scalar_tensor_186, getitem_1307);  le_186 = scalar_tensor_186 = getitem_1307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3971: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_312, 0);  squeeze_312 = None
    unsqueeze_3972: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3971, 2);  unsqueeze_3971 = None
    unsqueeze_3973: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3972, 3);  unsqueeze_3972 = None
    sum_446: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_186, [0, 2, 3])
    sub_1205: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_104, unsqueeze_3973)
    mul_4379: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_186, sub_1205);  sub_1205 = None
    sum_447: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4379, [0, 2, 3]);  mul_4379 = None
    mul_4380: "f32[18]" = torch.ops.aten.mul.Tensor(sum_446, 3.985969387755102e-05)
    unsqueeze_3974: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4380, 0);  mul_4380 = None
    unsqueeze_3975: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3974, 2);  unsqueeze_3974 = None
    unsqueeze_3976: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3975, 3);  unsqueeze_3975 = None
    mul_4381: "f32[18]" = torch.ops.aten.mul.Tensor(sum_447, 3.985969387755102e-05)
    mul_4382: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_313, squeeze_313)
    mul_4383: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4381, mul_4382);  mul_4381 = mul_4382 = None
    unsqueeze_3977: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4383, 0);  mul_4383 = None
    unsqueeze_3978: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3977, 2);  unsqueeze_3977 = None
    unsqueeze_3979: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3978, 3);  unsqueeze_3978 = None
    mul_4384: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_313, primals_314);  primals_314 = None
    unsqueeze_3980: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4384, 0);  mul_4384 = None
    unsqueeze_3981: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3980, 2);  unsqueeze_3980 = None
    unsqueeze_3982: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3981, 3);  unsqueeze_3981 = None
    sub_1206: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_104, unsqueeze_3973);  convolution_104 = unsqueeze_3973 = None
    mul_4385: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1206, unsqueeze_3979);  sub_1206 = unsqueeze_3979 = None
    sub_1207: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_186, mul_4385);  where_186 = mul_4385 = None
    sub_1208: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1207, unsqueeze_3976);  sub_1207 = unsqueeze_3976 = None
    mul_4386: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1208, unsqueeze_3982);  sub_1208 = unsqueeze_3982 = None
    mul_4387: "f32[18]" = torch.ops.aten.mul.Tensor(sum_447, squeeze_313);  sum_447 = squeeze_313 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_220 = torch.ops.aten.convolution_backward.default(mul_4386, relu_96, primals_313, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4386 = primals_313 = None
    getitem_1310: "f32[8, 18, 56, 56]" = convolution_backward_220[0]
    getitem_1311: "f32[18, 18, 3, 3]" = convolution_backward_220[1];  convolution_backward_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2047: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_185, getitem_1310);  where_185 = getitem_1310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_782: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_96);  relu_96 = None
    alias_783: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_782);  alias_782 = None
    le_187: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_783, 0);  alias_783 = None
    scalar_tensor_187: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_187: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_187, scalar_tensor_187, add_2047);  le_187 = scalar_tensor_187 = add_2047 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_3983: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_309, 0);  squeeze_309 = None
    unsqueeze_3984: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3983, 2);  unsqueeze_3983 = None
    unsqueeze_3985: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3984, 3);  unsqueeze_3984 = None
    sum_448: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_187, [0, 2, 3])
    sub_1209: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_103, unsqueeze_3985)
    mul_4388: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_187, sub_1209);  sub_1209 = None
    sum_449: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4388, [0, 2, 3]);  mul_4388 = None
    mul_4389: "f32[18]" = torch.ops.aten.mul.Tensor(sum_448, 3.985969387755102e-05)
    unsqueeze_3986: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4389, 0);  mul_4389 = None
    unsqueeze_3987: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3986, 2);  unsqueeze_3986 = None
    unsqueeze_3988: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3987, 3);  unsqueeze_3987 = None
    mul_4390: "f32[18]" = torch.ops.aten.mul.Tensor(sum_449, 3.985969387755102e-05)
    mul_4391: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_310, squeeze_310)
    mul_4392: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4390, mul_4391);  mul_4390 = mul_4391 = None
    unsqueeze_3989: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4392, 0);  mul_4392 = None
    unsqueeze_3990: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3989, 2);  unsqueeze_3989 = None
    unsqueeze_3991: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3990, 3);  unsqueeze_3990 = None
    mul_4393: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_310, primals_311);  primals_311 = None
    unsqueeze_3992: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4393, 0);  mul_4393 = None
    unsqueeze_3993: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3992, 2);  unsqueeze_3992 = None
    unsqueeze_3994: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3993, 3);  unsqueeze_3993 = None
    sub_1210: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_103, unsqueeze_3985);  convolution_103 = unsqueeze_3985 = None
    mul_4394: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1210, unsqueeze_3991);  sub_1210 = unsqueeze_3991 = None
    sub_1211: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_187, mul_4394);  mul_4394 = None
    sub_1212: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1211, unsqueeze_3988);  sub_1211 = unsqueeze_3988 = None
    mul_4395: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1212, unsqueeze_3994);  sub_1212 = unsqueeze_3994 = None
    mul_4396: "f32[18]" = torch.ops.aten.mul.Tensor(sum_449, squeeze_310);  sum_449 = squeeze_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_221 = torch.ops.aten.convolution_backward.default(mul_4395, relu_95, primals_310, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4395 = primals_310 = None
    getitem_1313: "f32[8, 18, 56, 56]" = convolution_backward_221[0]
    getitem_1314: "f32[18, 18, 3, 3]" = convolution_backward_221[1];  convolution_backward_221 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_785: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_95);  relu_95 = None
    alias_786: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_785);  alias_785 = None
    le_188: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_786, 0);  alias_786 = None
    scalar_tensor_188: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_188: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_188, scalar_tensor_188, getitem_1313);  le_188 = scalar_tensor_188 = getitem_1313 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_3995: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_306, 0);  squeeze_306 = None
    unsqueeze_3996: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3995, 2);  unsqueeze_3995 = None
    unsqueeze_3997: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3996, 3);  unsqueeze_3996 = None
    sum_450: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_188, [0, 2, 3])
    sub_1213: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_102, unsqueeze_3997)
    mul_4397: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_188, sub_1213);  sub_1213 = None
    sum_451: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4397, [0, 2, 3]);  mul_4397 = None
    mul_4398: "f32[18]" = torch.ops.aten.mul.Tensor(sum_450, 3.985969387755102e-05)
    unsqueeze_3998: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4398, 0);  mul_4398 = None
    unsqueeze_3999: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3998, 2);  unsqueeze_3998 = None
    unsqueeze_4000: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_3999, 3);  unsqueeze_3999 = None
    mul_4399: "f32[18]" = torch.ops.aten.mul.Tensor(sum_451, 3.985969387755102e-05)
    mul_4400: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_307, squeeze_307)
    mul_4401: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4399, mul_4400);  mul_4399 = mul_4400 = None
    unsqueeze_4001: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4401, 0);  mul_4401 = None
    unsqueeze_4002: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4001, 2);  unsqueeze_4001 = None
    unsqueeze_4003: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4002, 3);  unsqueeze_4002 = None
    mul_4402: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_307, primals_308);  primals_308 = None
    unsqueeze_4004: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4402, 0);  mul_4402 = None
    unsqueeze_4005: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4004, 2);  unsqueeze_4004 = None
    unsqueeze_4006: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4005, 3);  unsqueeze_4005 = None
    sub_1214: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_102, unsqueeze_3997);  convolution_102 = unsqueeze_3997 = None
    mul_4403: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1214, unsqueeze_4003);  sub_1214 = unsqueeze_4003 = None
    sub_1215: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_188, mul_4403);  where_188 = mul_4403 = None
    sub_1216: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1215, unsqueeze_4000);  sub_1215 = unsqueeze_4000 = None
    mul_4404: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1216, unsqueeze_4006);  sub_1216 = unsqueeze_4006 = None
    mul_4405: "f32[18]" = torch.ops.aten.mul.Tensor(sum_451, squeeze_307);  sum_451 = squeeze_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_222 = torch.ops.aten.convolution_backward.default(mul_4404, relu_94, primals_307, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4404 = primals_307 = None
    getitem_1316: "f32[8, 18, 56, 56]" = convolution_backward_222[0]
    getitem_1317: "f32[18, 18, 3, 3]" = convolution_backward_222[1];  convolution_backward_222 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2048: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_187, getitem_1316);  where_187 = getitem_1316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_788: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_94);  relu_94 = None
    alias_789: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_788);  alias_788 = None
    le_189: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_789, 0);  alias_789 = None
    scalar_tensor_189: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_189: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_189, scalar_tensor_189, add_2048);  le_189 = scalar_tensor_189 = add_2048 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4007: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_303, 0);  squeeze_303 = None
    unsqueeze_4008: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4007, 2);  unsqueeze_4007 = None
    unsqueeze_4009: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4008, 3);  unsqueeze_4008 = None
    sum_452: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_189, [0, 2, 3])
    sub_1217: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_101, unsqueeze_4009)
    mul_4406: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_189, sub_1217);  sub_1217 = None
    sum_453: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4406, [0, 2, 3]);  mul_4406 = None
    mul_4407: "f32[18]" = torch.ops.aten.mul.Tensor(sum_452, 3.985969387755102e-05)
    unsqueeze_4010: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4407, 0);  mul_4407 = None
    unsqueeze_4011: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4010, 2);  unsqueeze_4010 = None
    unsqueeze_4012: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4011, 3);  unsqueeze_4011 = None
    mul_4408: "f32[18]" = torch.ops.aten.mul.Tensor(sum_453, 3.985969387755102e-05)
    mul_4409: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_304, squeeze_304)
    mul_4410: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4408, mul_4409);  mul_4408 = mul_4409 = None
    unsqueeze_4013: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4410, 0);  mul_4410 = None
    unsqueeze_4014: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4013, 2);  unsqueeze_4013 = None
    unsqueeze_4015: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4014, 3);  unsqueeze_4014 = None
    mul_4411: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_304, primals_305);  primals_305 = None
    unsqueeze_4016: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4411, 0);  mul_4411 = None
    unsqueeze_4017: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4016, 2);  unsqueeze_4016 = None
    unsqueeze_4018: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4017, 3);  unsqueeze_4017 = None
    sub_1218: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_101, unsqueeze_4009);  convolution_101 = unsqueeze_4009 = None
    mul_4412: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1218, unsqueeze_4015);  sub_1218 = unsqueeze_4015 = None
    sub_1219: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_189, mul_4412);  mul_4412 = None
    sub_1220: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1219, unsqueeze_4012);  sub_1219 = unsqueeze_4012 = None
    mul_4413: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1220, unsqueeze_4018);  sub_1220 = unsqueeze_4018 = None
    mul_4414: "f32[18]" = torch.ops.aten.mul.Tensor(sum_453, squeeze_304);  sum_453 = squeeze_304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_223 = torch.ops.aten.convolution_backward.default(mul_4413, relu_93, primals_304, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4413 = primals_304 = None
    getitem_1319: "f32[8, 18, 56, 56]" = convolution_backward_223[0]
    getitem_1320: "f32[18, 18, 3, 3]" = convolution_backward_223[1];  convolution_backward_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_791: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_93);  relu_93 = None
    alias_792: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_791);  alias_791 = None
    le_190: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_792, 0);  alias_792 = None
    scalar_tensor_190: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_190: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_190, scalar_tensor_190, getitem_1319);  le_190 = scalar_tensor_190 = getitem_1319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4019: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_300, 0);  squeeze_300 = None
    unsqueeze_4020: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4019, 2);  unsqueeze_4019 = None
    unsqueeze_4021: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4020, 3);  unsqueeze_4020 = None
    sum_454: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_190, [0, 2, 3])
    sub_1221: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_100, unsqueeze_4021)
    mul_4415: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_190, sub_1221);  sub_1221 = None
    sum_455: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4415, [0, 2, 3]);  mul_4415 = None
    mul_4416: "f32[18]" = torch.ops.aten.mul.Tensor(sum_454, 3.985969387755102e-05)
    unsqueeze_4022: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4416, 0);  mul_4416 = None
    unsqueeze_4023: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4022, 2);  unsqueeze_4022 = None
    unsqueeze_4024: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4023, 3);  unsqueeze_4023 = None
    mul_4417: "f32[18]" = torch.ops.aten.mul.Tensor(sum_455, 3.985969387755102e-05)
    mul_4418: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_301, squeeze_301)
    mul_4419: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4417, mul_4418);  mul_4417 = mul_4418 = None
    unsqueeze_4025: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4419, 0);  mul_4419 = None
    unsqueeze_4026: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4025, 2);  unsqueeze_4025 = None
    unsqueeze_4027: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4026, 3);  unsqueeze_4026 = None
    mul_4420: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_301, primals_302);  primals_302 = None
    unsqueeze_4028: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4420, 0);  mul_4420 = None
    unsqueeze_4029: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4028, 2);  unsqueeze_4028 = None
    unsqueeze_4030: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4029, 3);  unsqueeze_4029 = None
    sub_1222: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_100, unsqueeze_4021);  convolution_100 = unsqueeze_4021 = None
    mul_4421: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1222, unsqueeze_4027);  sub_1222 = unsqueeze_4027 = None
    sub_1223: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_190, mul_4421);  where_190 = mul_4421 = None
    sub_1224: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1223, unsqueeze_4024);  sub_1223 = unsqueeze_4024 = None
    mul_4422: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1224, unsqueeze_4030);  sub_1224 = unsqueeze_4030 = None
    mul_4423: "f32[18]" = torch.ops.aten.mul.Tensor(sum_455, squeeze_301);  sum_455 = squeeze_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_224 = torch.ops.aten.convolution_backward.default(mul_4422, relu_92, primals_301, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4422 = primals_301 = None
    getitem_1322: "f32[8, 18, 56, 56]" = convolution_backward_224[0]
    getitem_1323: "f32[18, 18, 3, 3]" = convolution_backward_224[1];  convolution_backward_224 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2049: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_189, getitem_1322);  where_189 = getitem_1322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_794: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_92);  relu_92 = None
    alias_795: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_794);  alias_794 = None
    le_191: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_795, 0);  alias_795 = None
    scalar_tensor_191: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_191: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_191, scalar_tensor_191, add_2049);  le_191 = scalar_tensor_191 = add_2049 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4031: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_297, 0);  squeeze_297 = None
    unsqueeze_4032: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4031, 2);  unsqueeze_4031 = None
    unsqueeze_4033: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4032, 3);  unsqueeze_4032 = None
    sum_456: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_191, [0, 2, 3])
    sub_1225: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_99, unsqueeze_4033)
    mul_4424: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_191, sub_1225);  sub_1225 = None
    sum_457: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4424, [0, 2, 3]);  mul_4424 = None
    mul_4425: "f32[18]" = torch.ops.aten.mul.Tensor(sum_456, 3.985969387755102e-05)
    unsqueeze_4034: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4425, 0);  mul_4425 = None
    unsqueeze_4035: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4034, 2);  unsqueeze_4034 = None
    unsqueeze_4036: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4035, 3);  unsqueeze_4035 = None
    mul_4426: "f32[18]" = torch.ops.aten.mul.Tensor(sum_457, 3.985969387755102e-05)
    mul_4427: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_298, squeeze_298)
    mul_4428: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4426, mul_4427);  mul_4426 = mul_4427 = None
    unsqueeze_4037: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4428, 0);  mul_4428 = None
    unsqueeze_4038: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4037, 2);  unsqueeze_4037 = None
    unsqueeze_4039: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4038, 3);  unsqueeze_4038 = None
    mul_4429: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_298, primals_299);  primals_299 = None
    unsqueeze_4040: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4429, 0);  mul_4429 = None
    unsqueeze_4041: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4040, 2);  unsqueeze_4040 = None
    unsqueeze_4042: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4041, 3);  unsqueeze_4041 = None
    sub_1226: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_99, unsqueeze_4033);  convolution_99 = unsqueeze_4033 = None
    mul_4430: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1226, unsqueeze_4039);  sub_1226 = unsqueeze_4039 = None
    sub_1227: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_191, mul_4430);  mul_4430 = None
    sub_1228: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1227, unsqueeze_4036);  sub_1227 = unsqueeze_4036 = None
    mul_4431: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1228, unsqueeze_4042);  sub_1228 = unsqueeze_4042 = None
    mul_4432: "f32[18]" = torch.ops.aten.mul.Tensor(sum_457, squeeze_298);  sum_457 = squeeze_298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_225 = torch.ops.aten.convolution_backward.default(mul_4431, relu_91, primals_298, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4431 = primals_298 = None
    getitem_1325: "f32[8, 18, 56, 56]" = convolution_backward_225[0]
    getitem_1326: "f32[18, 18, 3, 3]" = convolution_backward_225[1];  convolution_backward_225 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_797: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_91);  relu_91 = None
    alias_798: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_797);  alias_797 = None
    le_192: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_798, 0);  alias_798 = None
    scalar_tensor_192: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_192: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_192, scalar_tensor_192, getitem_1325);  le_192 = scalar_tensor_192 = getitem_1325 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4043: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_294, 0);  squeeze_294 = None
    unsqueeze_4044: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4043, 2);  unsqueeze_4043 = None
    unsqueeze_4045: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4044, 3);  unsqueeze_4044 = None
    sum_458: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_192, [0, 2, 3])
    sub_1229: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_98, unsqueeze_4045)
    mul_4433: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_192, sub_1229);  sub_1229 = None
    sum_459: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4433, [0, 2, 3]);  mul_4433 = None
    mul_4434: "f32[18]" = torch.ops.aten.mul.Tensor(sum_458, 3.985969387755102e-05)
    unsqueeze_4046: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4434, 0);  mul_4434 = None
    unsqueeze_4047: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4046, 2);  unsqueeze_4046 = None
    unsqueeze_4048: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4047, 3);  unsqueeze_4047 = None
    mul_4435: "f32[18]" = torch.ops.aten.mul.Tensor(sum_459, 3.985969387755102e-05)
    mul_4436: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_295, squeeze_295)
    mul_4437: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4435, mul_4436);  mul_4435 = mul_4436 = None
    unsqueeze_4049: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4437, 0);  mul_4437 = None
    unsqueeze_4050: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4049, 2);  unsqueeze_4049 = None
    unsqueeze_4051: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4050, 3);  unsqueeze_4050 = None
    mul_4438: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_295, primals_296);  primals_296 = None
    unsqueeze_4052: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4438, 0);  mul_4438 = None
    unsqueeze_4053: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4052, 2);  unsqueeze_4052 = None
    unsqueeze_4054: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4053, 3);  unsqueeze_4053 = None
    sub_1230: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_98, unsqueeze_4045);  convolution_98 = unsqueeze_4045 = None
    mul_4439: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1230, unsqueeze_4051);  sub_1230 = unsqueeze_4051 = None
    sub_1231: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_192, mul_4439);  where_192 = mul_4439 = None
    sub_1232: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1231, unsqueeze_4048);  sub_1231 = unsqueeze_4048 = None
    mul_4440: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1232, unsqueeze_4054);  sub_1232 = unsqueeze_4054 = None
    mul_4441: "f32[18]" = torch.ops.aten.mul.Tensor(sum_459, squeeze_295);  sum_459 = squeeze_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_226 = torch.ops.aten.convolution_backward.default(mul_4440, relu_87, primals_295, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4440 = relu_87 = primals_295 = None
    getitem_1328: "f32[8, 18, 56, 56]" = convolution_backward_226[0]
    getitem_1329: "f32[18, 18, 3, 3]" = convolution_backward_226[1];  convolution_backward_226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2050: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_191, getitem_1328);  where_191 = getitem_1328 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_799: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_90);  alias_90 = None
    le_193: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_799, 0);  alias_799 = None
    scalar_tensor_193: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_193: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_193, scalar_tensor_193, add_2042);  le_193 = scalar_tensor_193 = add_2042 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_4055: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_291, 0);  squeeze_291 = None
    unsqueeze_4056: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4055, 2);  unsqueeze_4055 = None
    unsqueeze_4057: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4056, 3);  unsqueeze_4056 = None
    sum_460: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_193, [0, 2, 3])
    sub_1233: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_97, unsqueeze_4057)
    mul_4442: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_193, sub_1233);  sub_1233 = None
    sum_461: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4442, [0, 2, 3]);  mul_4442 = None
    mul_4443: "f32[72]" = torch.ops.aten.mul.Tensor(sum_460, 0.0006377551020408163)
    unsqueeze_4058: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4443, 0);  mul_4443 = None
    unsqueeze_4059: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4058, 2);  unsqueeze_4058 = None
    unsqueeze_4060: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4059, 3);  unsqueeze_4059 = None
    mul_4444: "f32[72]" = torch.ops.aten.mul.Tensor(sum_461, 0.0006377551020408163)
    mul_4445: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_292, squeeze_292)
    mul_4446: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4444, mul_4445);  mul_4444 = mul_4445 = None
    unsqueeze_4061: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4446, 0);  mul_4446 = None
    unsqueeze_4062: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4061, 2);  unsqueeze_4061 = None
    unsqueeze_4063: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4062, 3);  unsqueeze_4062 = None
    mul_4447: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_292, primals_293);  primals_293 = None
    unsqueeze_4064: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4447, 0);  mul_4447 = None
    unsqueeze_4065: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4064, 2);  unsqueeze_4064 = None
    unsqueeze_4066: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4065, 3);  unsqueeze_4065 = None
    sub_1234: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_97, unsqueeze_4057);  convolution_97 = unsqueeze_4057 = None
    mul_4448: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1234, unsqueeze_4063);  sub_1234 = unsqueeze_4063 = None
    sub_1235: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_193, mul_4448);  mul_4448 = None
    sub_1236: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1235, unsqueeze_4060);  sub_1235 = unsqueeze_4060 = None
    mul_4449: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1236, unsqueeze_4066);  sub_1236 = unsqueeze_4066 = None
    mul_4450: "f32[72]" = torch.ops.aten.mul.Tensor(sum_461, squeeze_292);  sum_461 = squeeze_292 = None
    convolution_backward_227 = torch.ops.aten.convolution_backward.default(mul_4449, relu_78, primals_292, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4449 = primals_292 = None
    getitem_1331: "f32[8, 36, 28, 28]" = convolution_backward_227[0]
    getitem_1332: "f32[72, 36, 3, 3]" = convolution_backward_227[1];  convolution_backward_227 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_4067: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_288, 0);  squeeze_288 = None
    unsqueeze_4068: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4067, 2);  unsqueeze_4067 = None
    unsqueeze_4069: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4068, 3);  unsqueeze_4068 = None
    sum_462: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_193, [0, 2, 3])
    sub_1237: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_96, unsqueeze_4069)
    mul_4451: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_193, sub_1237);  sub_1237 = None
    sum_463: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4451, [0, 2, 3]);  mul_4451 = None
    mul_4452: "f32[72]" = torch.ops.aten.mul.Tensor(sum_462, 0.0006377551020408163)
    unsqueeze_4070: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4452, 0);  mul_4452 = None
    unsqueeze_4071: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4070, 2);  unsqueeze_4070 = None
    unsqueeze_4072: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4071, 3);  unsqueeze_4071 = None
    mul_4453: "f32[72]" = torch.ops.aten.mul.Tensor(sum_463, 0.0006377551020408163)
    mul_4454: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_289, squeeze_289)
    mul_4455: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4453, mul_4454);  mul_4453 = mul_4454 = None
    unsqueeze_4073: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4455, 0);  mul_4455 = None
    unsqueeze_4074: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4073, 2);  unsqueeze_4073 = None
    unsqueeze_4075: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4074, 3);  unsqueeze_4074 = None
    mul_4456: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_289, primals_290);  primals_290 = None
    unsqueeze_4076: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4456, 0);  mul_4456 = None
    unsqueeze_4077: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4076, 2);  unsqueeze_4076 = None
    unsqueeze_4078: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4077, 3);  unsqueeze_4077 = None
    sub_1238: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_96, unsqueeze_4069);  convolution_96 = unsqueeze_4069 = None
    mul_4457: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1238, unsqueeze_4075);  sub_1238 = unsqueeze_4075 = None
    sub_1239: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_193, mul_4457);  mul_4457 = None
    sub_1240: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1239, unsqueeze_4072);  sub_1239 = unsqueeze_4072 = None
    mul_4458: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1240, unsqueeze_4078);  sub_1240 = unsqueeze_4078 = None
    mul_4459: "f32[72]" = torch.ops.aten.mul.Tensor(sum_463, squeeze_289);  sum_463 = squeeze_289 = None
    convolution_backward_228 = torch.ops.aten.convolution_backward.default(mul_4458, relu_89, primals_289, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4458 = relu_89 = primals_289 = None
    getitem_1334: "f32[8, 18, 28, 28]" = convolution_backward_228[0]
    getitem_1335: "f32[72, 18, 3, 3]" = convolution_backward_228[1];  convolution_backward_228 = None
    alias_800: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_89);  alias_89 = None
    le_194: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_800, 0);  alias_800 = None
    scalar_tensor_194: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_194: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_194, scalar_tensor_194, getitem_1334);  le_194 = scalar_tensor_194 = getitem_1334 = None
    unsqueeze_4079: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_285, 0);  squeeze_285 = None
    unsqueeze_4080: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4079, 2);  unsqueeze_4079 = None
    unsqueeze_4081: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4080, 3);  unsqueeze_4080 = None
    sum_464: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_194, [0, 2, 3])
    sub_1241: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_95, unsqueeze_4081)
    mul_4460: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_194, sub_1241);  sub_1241 = None
    sum_465: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4460, [0, 2, 3]);  mul_4460 = None
    mul_4461: "f32[18]" = torch.ops.aten.mul.Tensor(sum_464, 0.00015943877551020407)
    unsqueeze_4082: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4461, 0);  mul_4461 = None
    unsqueeze_4083: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4082, 2);  unsqueeze_4082 = None
    unsqueeze_4084: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4083, 3);  unsqueeze_4083 = None
    mul_4462: "f32[18]" = torch.ops.aten.mul.Tensor(sum_465, 0.00015943877551020407)
    mul_4463: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_286, squeeze_286)
    mul_4464: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4462, mul_4463);  mul_4462 = mul_4463 = None
    unsqueeze_4085: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4464, 0);  mul_4464 = None
    unsqueeze_4086: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4085, 2);  unsqueeze_4085 = None
    unsqueeze_4087: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4086, 3);  unsqueeze_4086 = None
    mul_4465: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_286, primals_287);  primals_287 = None
    unsqueeze_4088: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4465, 0);  mul_4465 = None
    unsqueeze_4089: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4088, 2);  unsqueeze_4088 = None
    unsqueeze_4090: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4089, 3);  unsqueeze_4089 = None
    sub_1242: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_95, unsqueeze_4081);  convolution_95 = unsqueeze_4081 = None
    mul_4466: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1242, unsqueeze_4087);  sub_1242 = unsqueeze_4087 = None
    sub_1243: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_194, mul_4466);  where_194 = mul_4466 = None
    sub_1244: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1243, unsqueeze_4084);  sub_1243 = unsqueeze_4084 = None
    mul_4467: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1244, unsqueeze_4090);  sub_1244 = unsqueeze_4090 = None
    mul_4468: "f32[18]" = torch.ops.aten.mul.Tensor(sum_465, squeeze_286);  sum_465 = squeeze_286 = None
    convolution_backward_229 = torch.ops.aten.convolution_backward.default(mul_4467, relu_70, primals_286, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4467 = primals_286 = None
    getitem_1337: "f32[8, 18, 56, 56]" = convolution_backward_229[0]
    getitem_1338: "f32[18, 18, 3, 3]" = convolution_backward_229[1];  convolution_backward_229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_801: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_88);  alias_88 = None
    le_195: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_801, 0);  alias_801 = None
    scalar_tensor_195: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_195: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_195, scalar_tensor_195, add_2046);  le_195 = scalar_tensor_195 = add_2046 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_24: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_24: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_24, [None, None, unsqueeze_386, convert_element_type_27], where_195, True);  full_24 = unsqueeze_386 = convert_element_type_27 = None
    unsqueeze_4091: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_282, 0);  squeeze_282 = None
    unsqueeze_4092: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4091, 2);  unsqueeze_4091 = None
    unsqueeze_4093: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4092, 3);  unsqueeze_4092 = None
    sum_466: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_24, [0, 2, 3])
    sub_1245: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_94, unsqueeze_4093)
    mul_4469: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_24, sub_1245);  sub_1245 = None
    sum_467: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4469, [0, 2, 3]);  mul_4469 = None
    mul_4470: "f32[36]" = torch.ops.aten.mul.Tensor(sum_466, 0.0006377551020408163)
    unsqueeze_4094: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4470, 0);  mul_4470 = None
    unsqueeze_4095: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4094, 2);  unsqueeze_4094 = None
    unsqueeze_4096: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4095, 3);  unsqueeze_4095 = None
    mul_4471: "f32[36]" = torch.ops.aten.mul.Tensor(sum_467, 0.0006377551020408163)
    mul_4472: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_283, squeeze_283)
    mul_4473: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4471, mul_4472);  mul_4471 = mul_4472 = None
    unsqueeze_4097: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4473, 0);  mul_4473 = None
    unsqueeze_4098: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4097, 2);  unsqueeze_4097 = None
    unsqueeze_4099: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4098, 3);  unsqueeze_4098 = None
    mul_4474: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_283, primals_284);  primals_284 = None
    unsqueeze_4100: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4474, 0);  mul_4474 = None
    unsqueeze_4101: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4100, 2);  unsqueeze_4100 = None
    unsqueeze_4102: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4101, 3);  unsqueeze_4101 = None
    sub_1246: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_94, unsqueeze_4093);  convolution_94 = unsqueeze_4093 = None
    mul_4475: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1246, unsqueeze_4099);  sub_1246 = unsqueeze_4099 = None
    sub_1247: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_24, mul_4475);  _unsafe_index_put_24 = mul_4475 = None
    sub_1248: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1247, unsqueeze_4096);  sub_1247 = unsqueeze_4096 = None
    mul_4476: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1248, unsqueeze_4102);  sub_1248 = unsqueeze_4102 = None
    mul_4477: "f32[36]" = torch.ops.aten.mul.Tensor(sum_467, squeeze_283);  sum_467 = squeeze_283 = None
    convolution_backward_230 = torch.ops.aten.convolution_backward.default(mul_4476, relu_86, primals_283, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4476 = primals_283 = None
    getitem_1340: "f32[8, 72, 14, 14]" = convolution_backward_230[0]
    getitem_1341: "f32[36, 72, 1, 1]" = convolution_backward_230[1];  convolution_backward_230 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2051: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_193, getitem_1340);  where_193 = getitem_1340 = None
    add_2052: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_1331, where_195);  getitem_1331 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_4103: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_279, 0);  squeeze_279 = None
    unsqueeze_4104: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4103, 2);  unsqueeze_4103 = None
    unsqueeze_4105: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4104, 3);  unsqueeze_4104 = None
    sum_468: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_195, [0, 2, 3])
    sub_1249: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_93, unsqueeze_4105)
    mul_4478: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_195, sub_1249);  sub_1249 = None
    sum_469: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4478, [0, 2, 3]);  mul_4478 = None
    mul_4479: "f32[36]" = torch.ops.aten.mul.Tensor(sum_468, 0.00015943877551020407)
    unsqueeze_4106: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4479, 0);  mul_4479 = None
    unsqueeze_4107: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4106, 2);  unsqueeze_4106 = None
    unsqueeze_4108: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4107, 3);  unsqueeze_4107 = None
    mul_4480: "f32[36]" = torch.ops.aten.mul.Tensor(sum_469, 0.00015943877551020407)
    mul_4481: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_280, squeeze_280)
    mul_4482: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4480, mul_4481);  mul_4480 = mul_4481 = None
    unsqueeze_4109: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4482, 0);  mul_4482 = None
    unsqueeze_4110: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4109, 2);  unsqueeze_4109 = None
    unsqueeze_4111: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4110, 3);  unsqueeze_4110 = None
    mul_4483: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_280, primals_281);  primals_281 = None
    unsqueeze_4112: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4483, 0);  mul_4483 = None
    unsqueeze_4113: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4112, 2);  unsqueeze_4112 = None
    unsqueeze_4114: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4113, 3);  unsqueeze_4113 = None
    sub_1250: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_93, unsqueeze_4105);  convolution_93 = unsqueeze_4105 = None
    mul_4484: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1250, unsqueeze_4111);  sub_1250 = unsqueeze_4111 = None
    sub_1251: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_195, mul_4484);  where_195 = mul_4484 = None
    sub_1252: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1251, unsqueeze_4108);  sub_1251 = unsqueeze_4108 = None
    mul_4485: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1252, unsqueeze_4114);  sub_1252 = unsqueeze_4114 = None
    mul_4486: "f32[36]" = torch.ops.aten.mul.Tensor(sum_469, squeeze_280);  sum_469 = squeeze_280 = None
    convolution_backward_231 = torch.ops.aten.convolution_backward.default(mul_4485, relu_70, primals_280, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4485 = primals_280 = None
    getitem_1343: "f32[8, 18, 56, 56]" = convolution_backward_231[0]
    getitem_1344: "f32[36, 18, 3, 3]" = convolution_backward_231[1];  convolution_backward_231 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_2053: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1337, getitem_1343);  getitem_1337 = getitem_1343 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_802: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_87);  alias_87 = None
    le_196: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_802, 0);  alias_802 = None
    scalar_tensor_196: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_196: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_196, scalar_tensor_196, add_2050);  le_196 = scalar_tensor_196 = add_2050 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_25: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_25: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_25, [None, None, unsqueeze_377, convert_element_type_23], where_196, True);  full_25 = unsqueeze_377 = convert_element_type_23 = None
    unsqueeze_4115: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_276, 0);  squeeze_276 = None
    unsqueeze_4116: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4115, 2);  unsqueeze_4115 = None
    unsqueeze_4117: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4116, 3);  unsqueeze_4116 = None
    sum_470: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_25, [0, 2, 3])
    sub_1253: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_92, unsqueeze_4117)
    mul_4487: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_25, sub_1253);  sub_1253 = None
    sum_471: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4487, [0, 2, 3]);  mul_4487 = None
    mul_4488: "f32[18]" = torch.ops.aten.mul.Tensor(sum_470, 0.0006377551020408163)
    unsqueeze_4118: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4488, 0);  mul_4488 = None
    unsqueeze_4119: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4118, 2);  unsqueeze_4118 = None
    unsqueeze_4120: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4119, 3);  unsqueeze_4119 = None
    mul_4489: "f32[18]" = torch.ops.aten.mul.Tensor(sum_471, 0.0006377551020408163)
    mul_4490: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_277, squeeze_277)
    mul_4491: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4489, mul_4490);  mul_4489 = mul_4490 = None
    unsqueeze_4121: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4491, 0);  mul_4491 = None
    unsqueeze_4122: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4121, 2);  unsqueeze_4121 = None
    unsqueeze_4123: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4122, 3);  unsqueeze_4122 = None
    mul_4492: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_277, primals_278);  primals_278 = None
    unsqueeze_4124: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4492, 0);  mul_4492 = None
    unsqueeze_4125: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4124, 2);  unsqueeze_4124 = None
    unsqueeze_4126: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4125, 3);  unsqueeze_4125 = None
    sub_1254: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_92, unsqueeze_4117);  convolution_92 = unsqueeze_4117 = None
    mul_4493: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1254, unsqueeze_4123);  sub_1254 = unsqueeze_4123 = None
    sub_1255: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_25, mul_4493);  _unsafe_index_put_25 = mul_4493 = None
    sub_1256: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1255, unsqueeze_4120);  sub_1255 = unsqueeze_4120 = None
    mul_4494: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1256, unsqueeze_4126);  sub_1256 = unsqueeze_4126 = None
    mul_4495: "f32[18]" = torch.ops.aten.mul.Tensor(sum_471, squeeze_277);  sum_471 = squeeze_277 = None
    convolution_backward_232 = torch.ops.aten.convolution_backward.default(mul_4494, relu_86, primals_277, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4494 = primals_277 = None
    getitem_1346: "f32[8, 72, 14, 14]" = convolution_backward_232[0]
    getitem_1347: "f32[18, 72, 1, 1]" = convolution_backward_232[1];  convolution_backward_232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2054: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_2051, getitem_1346);  add_2051 = getitem_1346 = None
    add_2055: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_2053, where_196);  add_2053 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_26: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_26: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_26, [None, None, unsqueeze_372, convert_element_type_19], where_196, True);  full_26 = unsqueeze_372 = convert_element_type_19 = where_196 = None
    unsqueeze_4127: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_273, 0);  squeeze_273 = None
    unsqueeze_4128: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4127, 2);  unsqueeze_4127 = None
    unsqueeze_4129: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4128, 3);  unsqueeze_4128 = None
    sum_472: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_26, [0, 2, 3])
    sub_1257: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_91, unsqueeze_4129)
    mul_4496: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_26, sub_1257);  sub_1257 = None
    sum_473: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4496, [0, 2, 3]);  mul_4496 = None
    mul_4497: "f32[18]" = torch.ops.aten.mul.Tensor(sum_472, 0.00015943877551020407)
    unsqueeze_4130: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4497, 0);  mul_4497 = None
    unsqueeze_4131: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4130, 2);  unsqueeze_4130 = None
    unsqueeze_4132: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4131, 3);  unsqueeze_4131 = None
    mul_4498: "f32[18]" = torch.ops.aten.mul.Tensor(sum_473, 0.00015943877551020407)
    mul_4499: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_274, squeeze_274)
    mul_4500: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4498, mul_4499);  mul_4498 = mul_4499 = None
    unsqueeze_4133: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4500, 0);  mul_4500 = None
    unsqueeze_4134: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4133, 2);  unsqueeze_4133 = None
    unsqueeze_4135: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4134, 3);  unsqueeze_4134 = None
    mul_4501: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_274, primals_275);  primals_275 = None
    unsqueeze_4136: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4501, 0);  mul_4501 = None
    unsqueeze_4137: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4136, 2);  unsqueeze_4136 = None
    unsqueeze_4138: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4137, 3);  unsqueeze_4137 = None
    sub_1258: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_91, unsqueeze_4129);  convolution_91 = unsqueeze_4129 = None
    mul_4502: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1258, unsqueeze_4135);  sub_1258 = unsqueeze_4135 = None
    sub_1259: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_26, mul_4502);  _unsafe_index_put_26 = mul_4502 = None
    sub_1260: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1259, unsqueeze_4132);  sub_1259 = unsqueeze_4132 = None
    mul_4503: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1260, unsqueeze_4138);  sub_1260 = unsqueeze_4138 = None
    mul_4504: "f32[18]" = torch.ops.aten.mul.Tensor(sum_473, squeeze_274);  sum_473 = squeeze_274 = None
    convolution_backward_233 = torch.ops.aten.convolution_backward.default(mul_4503, relu_78, primals_274, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4503 = primals_274 = None
    getitem_1349: "f32[8, 36, 28, 28]" = convolution_backward_233[0]
    getitem_1350: "f32[18, 36, 1, 1]" = convolution_backward_233[1];  convolution_backward_233 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2056: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_2052, getitem_1349);  add_2052 = getitem_1349 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_804: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_86);  relu_86 = None
    alias_805: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_804);  alias_804 = None
    le_197: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_805, 0);  alias_805 = None
    scalar_tensor_197: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_197: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_197, scalar_tensor_197, add_2054);  le_197 = scalar_tensor_197 = add_2054 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4139: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_270, 0);  squeeze_270 = None
    unsqueeze_4140: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4139, 2);  unsqueeze_4139 = None
    unsqueeze_4141: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4140, 3);  unsqueeze_4140 = None
    sum_474: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_197, [0, 2, 3])
    sub_1261: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_90, unsqueeze_4141)
    mul_4505: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_197, sub_1261);  sub_1261 = None
    sum_475: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4505, [0, 2, 3]);  mul_4505 = None
    mul_4506: "f32[72]" = torch.ops.aten.mul.Tensor(sum_474, 0.0006377551020408163)
    unsqueeze_4142: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4506, 0);  mul_4506 = None
    unsqueeze_4143: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4142, 2);  unsqueeze_4142 = None
    unsqueeze_4144: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4143, 3);  unsqueeze_4143 = None
    mul_4507: "f32[72]" = torch.ops.aten.mul.Tensor(sum_475, 0.0006377551020408163)
    mul_4508: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_271, squeeze_271)
    mul_4509: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4507, mul_4508);  mul_4507 = mul_4508 = None
    unsqueeze_4145: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4509, 0);  mul_4509 = None
    unsqueeze_4146: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4145, 2);  unsqueeze_4145 = None
    unsqueeze_4147: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4146, 3);  unsqueeze_4146 = None
    mul_4510: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_271, primals_272);  primals_272 = None
    unsqueeze_4148: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4510, 0);  mul_4510 = None
    unsqueeze_4149: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4148, 2);  unsqueeze_4148 = None
    unsqueeze_4150: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4149, 3);  unsqueeze_4149 = None
    sub_1262: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_90, unsqueeze_4141);  convolution_90 = unsqueeze_4141 = None
    mul_4511: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1262, unsqueeze_4147);  sub_1262 = unsqueeze_4147 = None
    sub_1263: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_197, mul_4511);  mul_4511 = None
    sub_1264: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1263, unsqueeze_4144);  sub_1263 = unsqueeze_4144 = None
    mul_4512: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1264, unsqueeze_4150);  sub_1264 = unsqueeze_4150 = None
    mul_4513: "f32[72]" = torch.ops.aten.mul.Tensor(sum_475, squeeze_271);  sum_475 = squeeze_271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_234 = torch.ops.aten.convolution_backward.default(mul_4512, relu_85, primals_271, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4512 = primals_271 = None
    getitem_1352: "f32[8, 72, 14, 14]" = convolution_backward_234[0]
    getitem_1353: "f32[72, 72, 3, 3]" = convolution_backward_234[1];  convolution_backward_234 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_807: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_85);  relu_85 = None
    alias_808: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_807);  alias_807 = None
    le_198: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_808, 0);  alias_808 = None
    scalar_tensor_198: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_198: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_198, scalar_tensor_198, getitem_1352);  le_198 = scalar_tensor_198 = getitem_1352 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4151: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_267, 0);  squeeze_267 = None
    unsqueeze_4152: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4151, 2);  unsqueeze_4151 = None
    unsqueeze_4153: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4152, 3);  unsqueeze_4152 = None
    sum_476: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_198, [0, 2, 3])
    sub_1265: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_89, unsqueeze_4153)
    mul_4514: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_198, sub_1265);  sub_1265 = None
    sum_477: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4514, [0, 2, 3]);  mul_4514 = None
    mul_4515: "f32[72]" = torch.ops.aten.mul.Tensor(sum_476, 0.0006377551020408163)
    unsqueeze_4154: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4515, 0);  mul_4515 = None
    unsqueeze_4155: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4154, 2);  unsqueeze_4154 = None
    unsqueeze_4156: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4155, 3);  unsqueeze_4155 = None
    mul_4516: "f32[72]" = torch.ops.aten.mul.Tensor(sum_477, 0.0006377551020408163)
    mul_4517: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_268, squeeze_268)
    mul_4518: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4516, mul_4517);  mul_4516 = mul_4517 = None
    unsqueeze_4157: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4518, 0);  mul_4518 = None
    unsqueeze_4158: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4157, 2);  unsqueeze_4157 = None
    unsqueeze_4159: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4158, 3);  unsqueeze_4158 = None
    mul_4519: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_268, primals_269);  primals_269 = None
    unsqueeze_4160: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4519, 0);  mul_4519 = None
    unsqueeze_4161: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4160, 2);  unsqueeze_4160 = None
    unsqueeze_4162: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4161, 3);  unsqueeze_4161 = None
    sub_1266: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_89, unsqueeze_4153);  convolution_89 = unsqueeze_4153 = None
    mul_4520: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1266, unsqueeze_4159);  sub_1266 = unsqueeze_4159 = None
    sub_1267: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_198, mul_4520);  where_198 = mul_4520 = None
    sub_1268: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1267, unsqueeze_4156);  sub_1267 = unsqueeze_4156 = None
    mul_4521: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1268, unsqueeze_4162);  sub_1268 = unsqueeze_4162 = None
    mul_4522: "f32[72]" = torch.ops.aten.mul.Tensor(sum_477, squeeze_268);  sum_477 = squeeze_268 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_235 = torch.ops.aten.convolution_backward.default(mul_4521, relu_84, primals_268, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4521 = primals_268 = None
    getitem_1355: "f32[8, 72, 14, 14]" = convolution_backward_235[0]
    getitem_1356: "f32[72, 72, 3, 3]" = convolution_backward_235[1];  convolution_backward_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2057: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_197, getitem_1355);  where_197 = getitem_1355 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_810: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_84);  relu_84 = None
    alias_811: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_810);  alias_810 = None
    le_199: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_811, 0);  alias_811 = None
    scalar_tensor_199: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_199: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_199, scalar_tensor_199, add_2057);  le_199 = scalar_tensor_199 = add_2057 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4163: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_264, 0);  squeeze_264 = None
    unsqueeze_4164: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4163, 2);  unsqueeze_4163 = None
    unsqueeze_4165: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4164, 3);  unsqueeze_4164 = None
    sum_478: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_199, [0, 2, 3])
    sub_1269: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_88, unsqueeze_4165)
    mul_4523: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_199, sub_1269);  sub_1269 = None
    sum_479: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4523, [0, 2, 3]);  mul_4523 = None
    mul_4524: "f32[72]" = torch.ops.aten.mul.Tensor(sum_478, 0.0006377551020408163)
    unsqueeze_4166: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4524, 0);  mul_4524 = None
    unsqueeze_4167: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4166, 2);  unsqueeze_4166 = None
    unsqueeze_4168: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4167, 3);  unsqueeze_4167 = None
    mul_4525: "f32[72]" = torch.ops.aten.mul.Tensor(sum_479, 0.0006377551020408163)
    mul_4526: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_265, squeeze_265)
    mul_4527: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4525, mul_4526);  mul_4525 = mul_4526 = None
    unsqueeze_4169: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4527, 0);  mul_4527 = None
    unsqueeze_4170: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4169, 2);  unsqueeze_4169 = None
    unsqueeze_4171: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4170, 3);  unsqueeze_4170 = None
    mul_4528: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_265, primals_266);  primals_266 = None
    unsqueeze_4172: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4528, 0);  mul_4528 = None
    unsqueeze_4173: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4172, 2);  unsqueeze_4172 = None
    unsqueeze_4174: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4173, 3);  unsqueeze_4173 = None
    sub_1270: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_88, unsqueeze_4165);  convolution_88 = unsqueeze_4165 = None
    mul_4529: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1270, unsqueeze_4171);  sub_1270 = unsqueeze_4171 = None
    sub_1271: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_199, mul_4529);  mul_4529 = None
    sub_1272: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1271, unsqueeze_4168);  sub_1271 = unsqueeze_4168 = None
    mul_4530: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1272, unsqueeze_4174);  sub_1272 = unsqueeze_4174 = None
    mul_4531: "f32[72]" = torch.ops.aten.mul.Tensor(sum_479, squeeze_265);  sum_479 = squeeze_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_236 = torch.ops.aten.convolution_backward.default(mul_4530, relu_83, primals_265, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4530 = primals_265 = None
    getitem_1358: "f32[8, 72, 14, 14]" = convolution_backward_236[0]
    getitem_1359: "f32[72, 72, 3, 3]" = convolution_backward_236[1];  convolution_backward_236 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_813: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_83);  relu_83 = None
    alias_814: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_813);  alias_813 = None
    le_200: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_814, 0);  alias_814 = None
    scalar_tensor_200: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_200: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_200, scalar_tensor_200, getitem_1358);  le_200 = scalar_tensor_200 = getitem_1358 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4175: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_261, 0);  squeeze_261 = None
    unsqueeze_4176: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4175, 2);  unsqueeze_4175 = None
    unsqueeze_4177: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4176, 3);  unsqueeze_4176 = None
    sum_480: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_200, [0, 2, 3])
    sub_1273: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_87, unsqueeze_4177)
    mul_4532: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_200, sub_1273);  sub_1273 = None
    sum_481: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4532, [0, 2, 3]);  mul_4532 = None
    mul_4533: "f32[72]" = torch.ops.aten.mul.Tensor(sum_480, 0.0006377551020408163)
    unsqueeze_4178: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4533, 0);  mul_4533 = None
    unsqueeze_4179: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4178, 2);  unsqueeze_4178 = None
    unsqueeze_4180: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4179, 3);  unsqueeze_4179 = None
    mul_4534: "f32[72]" = torch.ops.aten.mul.Tensor(sum_481, 0.0006377551020408163)
    mul_4535: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_262, squeeze_262)
    mul_4536: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4534, mul_4535);  mul_4534 = mul_4535 = None
    unsqueeze_4181: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4536, 0);  mul_4536 = None
    unsqueeze_4182: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4181, 2);  unsqueeze_4181 = None
    unsqueeze_4183: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4182, 3);  unsqueeze_4182 = None
    mul_4537: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_262, primals_263);  primals_263 = None
    unsqueeze_4184: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4537, 0);  mul_4537 = None
    unsqueeze_4185: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4184, 2);  unsqueeze_4184 = None
    unsqueeze_4186: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4185, 3);  unsqueeze_4185 = None
    sub_1274: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_87, unsqueeze_4177);  convolution_87 = unsqueeze_4177 = None
    mul_4538: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1274, unsqueeze_4183);  sub_1274 = unsqueeze_4183 = None
    sub_1275: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_200, mul_4538);  where_200 = mul_4538 = None
    sub_1276: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1275, unsqueeze_4180);  sub_1275 = unsqueeze_4180 = None
    mul_4539: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1276, unsqueeze_4186);  sub_1276 = unsqueeze_4186 = None
    mul_4540: "f32[72]" = torch.ops.aten.mul.Tensor(sum_481, squeeze_262);  sum_481 = squeeze_262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_237 = torch.ops.aten.convolution_backward.default(mul_4539, relu_82, primals_262, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4539 = primals_262 = None
    getitem_1361: "f32[8, 72, 14, 14]" = convolution_backward_237[0]
    getitem_1362: "f32[72, 72, 3, 3]" = convolution_backward_237[1];  convolution_backward_237 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2058: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_199, getitem_1361);  where_199 = getitem_1361 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_816: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_82);  relu_82 = None
    alias_817: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_816);  alias_816 = None
    le_201: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_817, 0);  alias_817 = None
    scalar_tensor_201: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_201: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_201, scalar_tensor_201, add_2058);  le_201 = scalar_tensor_201 = add_2058 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4187: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_258, 0);  squeeze_258 = None
    unsqueeze_4188: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4187, 2);  unsqueeze_4187 = None
    unsqueeze_4189: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4188, 3);  unsqueeze_4188 = None
    sum_482: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_201, [0, 2, 3])
    sub_1277: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_86, unsqueeze_4189)
    mul_4541: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_201, sub_1277);  sub_1277 = None
    sum_483: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4541, [0, 2, 3]);  mul_4541 = None
    mul_4542: "f32[72]" = torch.ops.aten.mul.Tensor(sum_482, 0.0006377551020408163)
    unsqueeze_4190: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4542, 0);  mul_4542 = None
    unsqueeze_4191: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4190, 2);  unsqueeze_4190 = None
    unsqueeze_4192: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4191, 3);  unsqueeze_4191 = None
    mul_4543: "f32[72]" = torch.ops.aten.mul.Tensor(sum_483, 0.0006377551020408163)
    mul_4544: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_259, squeeze_259)
    mul_4545: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4543, mul_4544);  mul_4543 = mul_4544 = None
    unsqueeze_4193: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4545, 0);  mul_4545 = None
    unsqueeze_4194: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4193, 2);  unsqueeze_4193 = None
    unsqueeze_4195: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4194, 3);  unsqueeze_4194 = None
    mul_4546: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_259, primals_260);  primals_260 = None
    unsqueeze_4196: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4546, 0);  mul_4546 = None
    unsqueeze_4197: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4196, 2);  unsqueeze_4196 = None
    unsqueeze_4198: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4197, 3);  unsqueeze_4197 = None
    sub_1278: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_86, unsqueeze_4189);  convolution_86 = unsqueeze_4189 = None
    mul_4547: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1278, unsqueeze_4195);  sub_1278 = unsqueeze_4195 = None
    sub_1279: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_201, mul_4547);  mul_4547 = None
    sub_1280: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1279, unsqueeze_4192);  sub_1279 = unsqueeze_4192 = None
    mul_4548: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1280, unsqueeze_4198);  sub_1280 = unsqueeze_4198 = None
    mul_4549: "f32[72]" = torch.ops.aten.mul.Tensor(sum_483, squeeze_259);  sum_483 = squeeze_259 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_238 = torch.ops.aten.convolution_backward.default(mul_4548, relu_81, primals_259, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4548 = primals_259 = None
    getitem_1364: "f32[8, 72, 14, 14]" = convolution_backward_238[0]
    getitem_1365: "f32[72, 72, 3, 3]" = convolution_backward_238[1];  convolution_backward_238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_819: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_81);  relu_81 = None
    alias_820: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_819);  alias_819 = None
    le_202: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_820, 0);  alias_820 = None
    scalar_tensor_202: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_202: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_202, scalar_tensor_202, getitem_1364);  le_202 = scalar_tensor_202 = getitem_1364 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4199: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_255, 0);  squeeze_255 = None
    unsqueeze_4200: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4199, 2);  unsqueeze_4199 = None
    unsqueeze_4201: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4200, 3);  unsqueeze_4200 = None
    sum_484: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_202, [0, 2, 3])
    sub_1281: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_85, unsqueeze_4201)
    mul_4550: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_202, sub_1281);  sub_1281 = None
    sum_485: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4550, [0, 2, 3]);  mul_4550 = None
    mul_4551: "f32[72]" = torch.ops.aten.mul.Tensor(sum_484, 0.0006377551020408163)
    unsqueeze_4202: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4551, 0);  mul_4551 = None
    unsqueeze_4203: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4202, 2);  unsqueeze_4202 = None
    unsqueeze_4204: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4203, 3);  unsqueeze_4203 = None
    mul_4552: "f32[72]" = torch.ops.aten.mul.Tensor(sum_485, 0.0006377551020408163)
    mul_4553: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_256, squeeze_256)
    mul_4554: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4552, mul_4553);  mul_4552 = mul_4553 = None
    unsqueeze_4205: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4554, 0);  mul_4554 = None
    unsqueeze_4206: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4205, 2);  unsqueeze_4205 = None
    unsqueeze_4207: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4206, 3);  unsqueeze_4206 = None
    mul_4555: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_256, primals_257);  primals_257 = None
    unsqueeze_4208: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4555, 0);  mul_4555 = None
    unsqueeze_4209: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4208, 2);  unsqueeze_4208 = None
    unsqueeze_4210: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4209, 3);  unsqueeze_4209 = None
    sub_1282: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_85, unsqueeze_4201);  convolution_85 = unsqueeze_4201 = None
    mul_4556: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1282, unsqueeze_4207);  sub_1282 = unsqueeze_4207 = None
    sub_1283: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_202, mul_4556);  where_202 = mul_4556 = None
    sub_1284: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1283, unsqueeze_4204);  sub_1283 = unsqueeze_4204 = None
    mul_4557: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1284, unsqueeze_4210);  sub_1284 = unsqueeze_4210 = None
    mul_4558: "f32[72]" = torch.ops.aten.mul.Tensor(sum_485, squeeze_256);  sum_485 = squeeze_256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_239 = torch.ops.aten.convolution_backward.default(mul_4557, relu_80, primals_256, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4557 = primals_256 = None
    getitem_1367: "f32[8, 72, 14, 14]" = convolution_backward_239[0]
    getitem_1368: "f32[72, 72, 3, 3]" = convolution_backward_239[1];  convolution_backward_239 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2059: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_201, getitem_1367);  where_201 = getitem_1367 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_822: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_80);  relu_80 = None
    alias_823: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_822);  alias_822 = None
    le_203: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_823, 0);  alias_823 = None
    scalar_tensor_203: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_203: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_203, scalar_tensor_203, add_2059);  le_203 = scalar_tensor_203 = add_2059 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4211: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_252, 0);  squeeze_252 = None
    unsqueeze_4212: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4211, 2);  unsqueeze_4211 = None
    unsqueeze_4213: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4212, 3);  unsqueeze_4212 = None
    sum_486: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_203, [0, 2, 3])
    sub_1285: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_84, unsqueeze_4213)
    mul_4559: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_203, sub_1285);  sub_1285 = None
    sum_487: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4559, [0, 2, 3]);  mul_4559 = None
    mul_4560: "f32[72]" = torch.ops.aten.mul.Tensor(sum_486, 0.0006377551020408163)
    unsqueeze_4214: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4560, 0);  mul_4560 = None
    unsqueeze_4215: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4214, 2);  unsqueeze_4214 = None
    unsqueeze_4216: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4215, 3);  unsqueeze_4215 = None
    mul_4561: "f32[72]" = torch.ops.aten.mul.Tensor(sum_487, 0.0006377551020408163)
    mul_4562: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_253, squeeze_253)
    mul_4563: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4561, mul_4562);  mul_4561 = mul_4562 = None
    unsqueeze_4217: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4563, 0);  mul_4563 = None
    unsqueeze_4218: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4217, 2);  unsqueeze_4217 = None
    unsqueeze_4219: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4218, 3);  unsqueeze_4218 = None
    mul_4564: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_253, primals_254);  primals_254 = None
    unsqueeze_4220: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4564, 0);  mul_4564 = None
    unsqueeze_4221: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4220, 2);  unsqueeze_4220 = None
    unsqueeze_4222: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4221, 3);  unsqueeze_4221 = None
    sub_1286: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_84, unsqueeze_4213);  convolution_84 = unsqueeze_4213 = None
    mul_4565: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1286, unsqueeze_4219);  sub_1286 = unsqueeze_4219 = None
    sub_1287: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_203, mul_4565);  mul_4565 = None
    sub_1288: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1287, unsqueeze_4216);  sub_1287 = unsqueeze_4216 = None
    mul_4566: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1288, unsqueeze_4222);  sub_1288 = unsqueeze_4222 = None
    mul_4567: "f32[72]" = torch.ops.aten.mul.Tensor(sum_487, squeeze_253);  sum_487 = squeeze_253 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_240 = torch.ops.aten.convolution_backward.default(mul_4566, relu_79, primals_253, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4566 = primals_253 = None
    getitem_1370: "f32[8, 72, 14, 14]" = convolution_backward_240[0]
    getitem_1371: "f32[72, 72, 3, 3]" = convolution_backward_240[1];  convolution_backward_240 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_825: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_79);  relu_79 = None
    alias_826: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_825);  alias_825 = None
    le_204: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_826, 0);  alias_826 = None
    scalar_tensor_204: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_204: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_204, scalar_tensor_204, getitem_1370);  le_204 = scalar_tensor_204 = getitem_1370 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4223: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_249, 0);  squeeze_249 = None
    unsqueeze_4224: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4223, 2);  unsqueeze_4223 = None
    unsqueeze_4225: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4224, 3);  unsqueeze_4224 = None
    sum_488: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_204, [0, 2, 3])
    sub_1289: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_83, unsqueeze_4225)
    mul_4568: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_204, sub_1289);  sub_1289 = None
    sum_489: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4568, [0, 2, 3]);  mul_4568 = None
    mul_4569: "f32[72]" = torch.ops.aten.mul.Tensor(sum_488, 0.0006377551020408163)
    unsqueeze_4226: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4569, 0);  mul_4569 = None
    unsqueeze_4227: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4226, 2);  unsqueeze_4226 = None
    unsqueeze_4228: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4227, 3);  unsqueeze_4227 = None
    mul_4570: "f32[72]" = torch.ops.aten.mul.Tensor(sum_489, 0.0006377551020408163)
    mul_4571: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_250, squeeze_250)
    mul_4572: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4570, mul_4571);  mul_4570 = mul_4571 = None
    unsqueeze_4229: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4572, 0);  mul_4572 = None
    unsqueeze_4230: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4229, 2);  unsqueeze_4229 = None
    unsqueeze_4231: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4230, 3);  unsqueeze_4230 = None
    mul_4573: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_250, primals_251);  primals_251 = None
    unsqueeze_4232: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4573, 0);  mul_4573 = None
    unsqueeze_4233: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4232, 2);  unsqueeze_4232 = None
    unsqueeze_4234: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4233, 3);  unsqueeze_4233 = None
    sub_1290: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_83, unsqueeze_4225);  convolution_83 = unsqueeze_4225 = None
    mul_4574: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1290, unsqueeze_4231);  sub_1290 = unsqueeze_4231 = None
    sub_1291: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_204, mul_4574);  where_204 = mul_4574 = None
    sub_1292: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1291, unsqueeze_4228);  sub_1291 = unsqueeze_4228 = None
    mul_4575: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1292, unsqueeze_4234);  sub_1292 = unsqueeze_4234 = None
    mul_4576: "f32[72]" = torch.ops.aten.mul.Tensor(sum_489, squeeze_250);  sum_489 = squeeze_250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_241 = torch.ops.aten.convolution_backward.default(mul_4575, relu_62, primals_250, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4575 = relu_62 = primals_250 = None
    getitem_1373: "f32[8, 72, 14, 14]" = convolution_backward_241[0]
    getitem_1374: "f32[72, 72, 3, 3]" = convolution_backward_241[1];  convolution_backward_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2060: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_203, getitem_1373);  where_203 = getitem_1373 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_828: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_78);  relu_78 = None
    alias_829: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_828);  alias_828 = None
    le_205: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_829, 0);  alias_829 = None
    scalar_tensor_205: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_205: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_205, scalar_tensor_205, add_2056);  le_205 = scalar_tensor_205 = add_2056 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4235: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_246, 0);  squeeze_246 = None
    unsqueeze_4236: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4235, 2);  unsqueeze_4235 = None
    unsqueeze_4237: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4236, 3);  unsqueeze_4236 = None
    sum_490: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_205, [0, 2, 3])
    sub_1293: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_82, unsqueeze_4237)
    mul_4577: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_205, sub_1293);  sub_1293 = None
    sum_491: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4577, [0, 2, 3]);  mul_4577 = None
    mul_4578: "f32[36]" = torch.ops.aten.mul.Tensor(sum_490, 0.00015943877551020407)
    unsqueeze_4238: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4578, 0);  mul_4578 = None
    unsqueeze_4239: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4238, 2);  unsqueeze_4238 = None
    unsqueeze_4240: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4239, 3);  unsqueeze_4239 = None
    mul_4579: "f32[36]" = torch.ops.aten.mul.Tensor(sum_491, 0.00015943877551020407)
    mul_4580: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_247, squeeze_247)
    mul_4581: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4579, mul_4580);  mul_4579 = mul_4580 = None
    unsqueeze_4241: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4581, 0);  mul_4581 = None
    unsqueeze_4242: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4241, 2);  unsqueeze_4241 = None
    unsqueeze_4243: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4242, 3);  unsqueeze_4242 = None
    mul_4582: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_247, primals_248);  primals_248 = None
    unsqueeze_4244: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4582, 0);  mul_4582 = None
    unsqueeze_4245: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4244, 2);  unsqueeze_4244 = None
    unsqueeze_4246: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4245, 3);  unsqueeze_4245 = None
    sub_1294: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_82, unsqueeze_4237);  convolution_82 = unsqueeze_4237 = None
    mul_4583: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1294, unsqueeze_4243);  sub_1294 = unsqueeze_4243 = None
    sub_1295: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_205, mul_4583);  mul_4583 = None
    sub_1296: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1295, unsqueeze_4240);  sub_1295 = unsqueeze_4240 = None
    mul_4584: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1296, unsqueeze_4246);  sub_1296 = unsqueeze_4246 = None
    mul_4585: "f32[36]" = torch.ops.aten.mul.Tensor(sum_491, squeeze_247);  sum_491 = squeeze_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_242 = torch.ops.aten.convolution_backward.default(mul_4584, relu_77, primals_247, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4584 = primals_247 = None
    getitem_1376: "f32[8, 36, 28, 28]" = convolution_backward_242[0]
    getitem_1377: "f32[36, 36, 3, 3]" = convolution_backward_242[1];  convolution_backward_242 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_831: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_77);  relu_77 = None
    alias_832: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_831);  alias_831 = None
    le_206: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_832, 0);  alias_832 = None
    scalar_tensor_206: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_206: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_206, scalar_tensor_206, getitem_1376);  le_206 = scalar_tensor_206 = getitem_1376 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4247: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_243, 0);  squeeze_243 = None
    unsqueeze_4248: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4247, 2);  unsqueeze_4247 = None
    unsqueeze_4249: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4248, 3);  unsqueeze_4248 = None
    sum_492: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_206, [0, 2, 3])
    sub_1297: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_81, unsqueeze_4249)
    mul_4586: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_206, sub_1297);  sub_1297 = None
    sum_493: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4586, [0, 2, 3]);  mul_4586 = None
    mul_4587: "f32[36]" = torch.ops.aten.mul.Tensor(sum_492, 0.00015943877551020407)
    unsqueeze_4250: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4587, 0);  mul_4587 = None
    unsqueeze_4251: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4250, 2);  unsqueeze_4250 = None
    unsqueeze_4252: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4251, 3);  unsqueeze_4251 = None
    mul_4588: "f32[36]" = torch.ops.aten.mul.Tensor(sum_493, 0.00015943877551020407)
    mul_4589: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_244, squeeze_244)
    mul_4590: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4588, mul_4589);  mul_4588 = mul_4589 = None
    unsqueeze_4253: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4590, 0);  mul_4590 = None
    unsqueeze_4254: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4253, 2);  unsqueeze_4253 = None
    unsqueeze_4255: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4254, 3);  unsqueeze_4254 = None
    mul_4591: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_244, primals_245);  primals_245 = None
    unsqueeze_4256: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4591, 0);  mul_4591 = None
    unsqueeze_4257: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4256, 2);  unsqueeze_4256 = None
    unsqueeze_4258: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4257, 3);  unsqueeze_4257 = None
    sub_1298: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_81, unsqueeze_4249);  convolution_81 = unsqueeze_4249 = None
    mul_4592: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1298, unsqueeze_4255);  sub_1298 = unsqueeze_4255 = None
    sub_1299: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_206, mul_4592);  where_206 = mul_4592 = None
    sub_1300: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1299, unsqueeze_4252);  sub_1299 = unsqueeze_4252 = None
    mul_4593: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1300, unsqueeze_4258);  sub_1300 = unsqueeze_4258 = None
    mul_4594: "f32[36]" = torch.ops.aten.mul.Tensor(sum_493, squeeze_244);  sum_493 = squeeze_244 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_243 = torch.ops.aten.convolution_backward.default(mul_4593, relu_76, primals_244, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4593 = primals_244 = None
    getitem_1379: "f32[8, 36, 28, 28]" = convolution_backward_243[0]
    getitem_1380: "f32[36, 36, 3, 3]" = convolution_backward_243[1];  convolution_backward_243 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2061: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_205, getitem_1379);  where_205 = getitem_1379 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_834: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_76);  relu_76 = None
    alias_835: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_834);  alias_834 = None
    le_207: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_835, 0);  alias_835 = None
    scalar_tensor_207: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_207: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_207, scalar_tensor_207, add_2061);  le_207 = scalar_tensor_207 = add_2061 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4259: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_240, 0);  squeeze_240 = None
    unsqueeze_4260: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4259, 2);  unsqueeze_4259 = None
    unsqueeze_4261: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4260, 3);  unsqueeze_4260 = None
    sum_494: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_207, [0, 2, 3])
    sub_1301: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_80, unsqueeze_4261)
    mul_4595: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_207, sub_1301);  sub_1301 = None
    sum_495: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4595, [0, 2, 3]);  mul_4595 = None
    mul_4596: "f32[36]" = torch.ops.aten.mul.Tensor(sum_494, 0.00015943877551020407)
    unsqueeze_4262: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4596, 0);  mul_4596 = None
    unsqueeze_4263: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4262, 2);  unsqueeze_4262 = None
    unsqueeze_4264: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4263, 3);  unsqueeze_4263 = None
    mul_4597: "f32[36]" = torch.ops.aten.mul.Tensor(sum_495, 0.00015943877551020407)
    mul_4598: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_241, squeeze_241)
    mul_4599: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4597, mul_4598);  mul_4597 = mul_4598 = None
    unsqueeze_4265: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4599, 0);  mul_4599 = None
    unsqueeze_4266: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4265, 2);  unsqueeze_4265 = None
    unsqueeze_4267: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4266, 3);  unsqueeze_4266 = None
    mul_4600: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_241, primals_242);  primals_242 = None
    unsqueeze_4268: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4600, 0);  mul_4600 = None
    unsqueeze_4269: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4268, 2);  unsqueeze_4268 = None
    unsqueeze_4270: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4269, 3);  unsqueeze_4269 = None
    sub_1302: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_80, unsqueeze_4261);  convolution_80 = unsqueeze_4261 = None
    mul_4601: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1302, unsqueeze_4267);  sub_1302 = unsqueeze_4267 = None
    sub_1303: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_207, mul_4601);  mul_4601 = None
    sub_1304: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1303, unsqueeze_4264);  sub_1303 = unsqueeze_4264 = None
    mul_4602: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1304, unsqueeze_4270);  sub_1304 = unsqueeze_4270 = None
    mul_4603: "f32[36]" = torch.ops.aten.mul.Tensor(sum_495, squeeze_241);  sum_495 = squeeze_241 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_244 = torch.ops.aten.convolution_backward.default(mul_4602, relu_75, primals_241, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4602 = primals_241 = None
    getitem_1382: "f32[8, 36, 28, 28]" = convolution_backward_244[0]
    getitem_1383: "f32[36, 36, 3, 3]" = convolution_backward_244[1];  convolution_backward_244 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_837: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_75);  relu_75 = None
    alias_838: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_837);  alias_837 = None
    le_208: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_838, 0);  alias_838 = None
    scalar_tensor_208: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_208: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_208, scalar_tensor_208, getitem_1382);  le_208 = scalar_tensor_208 = getitem_1382 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4271: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_237, 0);  squeeze_237 = None
    unsqueeze_4272: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4271, 2);  unsqueeze_4271 = None
    unsqueeze_4273: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4272, 3);  unsqueeze_4272 = None
    sum_496: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_208, [0, 2, 3])
    sub_1305: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_79, unsqueeze_4273)
    mul_4604: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_208, sub_1305);  sub_1305 = None
    sum_497: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4604, [0, 2, 3]);  mul_4604 = None
    mul_4605: "f32[36]" = torch.ops.aten.mul.Tensor(sum_496, 0.00015943877551020407)
    unsqueeze_4274: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4605, 0);  mul_4605 = None
    unsqueeze_4275: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4274, 2);  unsqueeze_4274 = None
    unsqueeze_4276: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4275, 3);  unsqueeze_4275 = None
    mul_4606: "f32[36]" = torch.ops.aten.mul.Tensor(sum_497, 0.00015943877551020407)
    mul_4607: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_238, squeeze_238)
    mul_4608: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4606, mul_4607);  mul_4606 = mul_4607 = None
    unsqueeze_4277: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4608, 0);  mul_4608 = None
    unsqueeze_4278: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4277, 2);  unsqueeze_4277 = None
    unsqueeze_4279: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4278, 3);  unsqueeze_4278 = None
    mul_4609: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_238, primals_239);  primals_239 = None
    unsqueeze_4280: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4609, 0);  mul_4609 = None
    unsqueeze_4281: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4280, 2);  unsqueeze_4280 = None
    unsqueeze_4282: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4281, 3);  unsqueeze_4281 = None
    sub_1306: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_79, unsqueeze_4273);  convolution_79 = unsqueeze_4273 = None
    mul_4610: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1306, unsqueeze_4279);  sub_1306 = unsqueeze_4279 = None
    sub_1307: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_208, mul_4610);  where_208 = mul_4610 = None
    sub_1308: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1307, unsqueeze_4276);  sub_1307 = unsqueeze_4276 = None
    mul_4611: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1308, unsqueeze_4282);  sub_1308 = unsqueeze_4282 = None
    mul_4612: "f32[36]" = torch.ops.aten.mul.Tensor(sum_497, squeeze_238);  sum_497 = squeeze_238 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_245 = torch.ops.aten.convolution_backward.default(mul_4611, relu_74, primals_238, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4611 = primals_238 = None
    getitem_1385: "f32[8, 36, 28, 28]" = convolution_backward_245[0]
    getitem_1386: "f32[36, 36, 3, 3]" = convolution_backward_245[1];  convolution_backward_245 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2062: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_207, getitem_1385);  where_207 = getitem_1385 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_840: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_74);  relu_74 = None
    alias_841: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_840);  alias_840 = None
    le_209: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_841, 0);  alias_841 = None
    scalar_tensor_209: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_209: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_209, scalar_tensor_209, add_2062);  le_209 = scalar_tensor_209 = add_2062 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4283: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_234, 0);  squeeze_234 = None
    unsqueeze_4284: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4283, 2);  unsqueeze_4283 = None
    unsqueeze_4285: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4284, 3);  unsqueeze_4284 = None
    sum_498: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_209, [0, 2, 3])
    sub_1309: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_78, unsqueeze_4285)
    mul_4613: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_209, sub_1309);  sub_1309 = None
    sum_499: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4613, [0, 2, 3]);  mul_4613 = None
    mul_4614: "f32[36]" = torch.ops.aten.mul.Tensor(sum_498, 0.00015943877551020407)
    unsqueeze_4286: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4614, 0);  mul_4614 = None
    unsqueeze_4287: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4286, 2);  unsqueeze_4286 = None
    unsqueeze_4288: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4287, 3);  unsqueeze_4287 = None
    mul_4615: "f32[36]" = torch.ops.aten.mul.Tensor(sum_499, 0.00015943877551020407)
    mul_4616: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_235, squeeze_235)
    mul_4617: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4615, mul_4616);  mul_4615 = mul_4616 = None
    unsqueeze_4289: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4617, 0);  mul_4617 = None
    unsqueeze_4290: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4289, 2);  unsqueeze_4289 = None
    unsqueeze_4291: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4290, 3);  unsqueeze_4290 = None
    mul_4618: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_235, primals_236);  primals_236 = None
    unsqueeze_4292: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4618, 0);  mul_4618 = None
    unsqueeze_4293: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4292, 2);  unsqueeze_4292 = None
    unsqueeze_4294: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4293, 3);  unsqueeze_4293 = None
    sub_1310: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_78, unsqueeze_4285);  convolution_78 = unsqueeze_4285 = None
    mul_4619: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1310, unsqueeze_4291);  sub_1310 = unsqueeze_4291 = None
    sub_1311: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_209, mul_4619);  mul_4619 = None
    sub_1312: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1311, unsqueeze_4288);  sub_1311 = unsqueeze_4288 = None
    mul_4620: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1312, unsqueeze_4294);  sub_1312 = unsqueeze_4294 = None
    mul_4621: "f32[36]" = torch.ops.aten.mul.Tensor(sum_499, squeeze_235);  sum_499 = squeeze_235 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_246 = torch.ops.aten.convolution_backward.default(mul_4620, relu_73, primals_235, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4620 = primals_235 = None
    getitem_1388: "f32[8, 36, 28, 28]" = convolution_backward_246[0]
    getitem_1389: "f32[36, 36, 3, 3]" = convolution_backward_246[1];  convolution_backward_246 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_843: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_73);  relu_73 = None
    alias_844: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_843);  alias_843 = None
    le_210: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_844, 0);  alias_844 = None
    scalar_tensor_210: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_210: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_210, scalar_tensor_210, getitem_1388);  le_210 = scalar_tensor_210 = getitem_1388 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4295: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_231, 0);  squeeze_231 = None
    unsqueeze_4296: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4295, 2);  unsqueeze_4295 = None
    unsqueeze_4297: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4296, 3);  unsqueeze_4296 = None
    sum_500: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_210, [0, 2, 3])
    sub_1313: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_77, unsqueeze_4297)
    mul_4622: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_210, sub_1313);  sub_1313 = None
    sum_501: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4622, [0, 2, 3]);  mul_4622 = None
    mul_4623: "f32[36]" = torch.ops.aten.mul.Tensor(sum_500, 0.00015943877551020407)
    unsqueeze_4298: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4623, 0);  mul_4623 = None
    unsqueeze_4299: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4298, 2);  unsqueeze_4298 = None
    unsqueeze_4300: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4299, 3);  unsqueeze_4299 = None
    mul_4624: "f32[36]" = torch.ops.aten.mul.Tensor(sum_501, 0.00015943877551020407)
    mul_4625: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_232, squeeze_232)
    mul_4626: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4624, mul_4625);  mul_4624 = mul_4625 = None
    unsqueeze_4301: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4626, 0);  mul_4626 = None
    unsqueeze_4302: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4301, 2);  unsqueeze_4301 = None
    unsqueeze_4303: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4302, 3);  unsqueeze_4302 = None
    mul_4627: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_232, primals_233);  primals_233 = None
    unsqueeze_4304: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4627, 0);  mul_4627 = None
    unsqueeze_4305: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4304, 2);  unsqueeze_4304 = None
    unsqueeze_4306: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4305, 3);  unsqueeze_4305 = None
    sub_1314: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_77, unsqueeze_4297);  convolution_77 = unsqueeze_4297 = None
    mul_4628: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1314, unsqueeze_4303);  sub_1314 = unsqueeze_4303 = None
    sub_1315: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_210, mul_4628);  where_210 = mul_4628 = None
    sub_1316: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1315, unsqueeze_4300);  sub_1315 = unsqueeze_4300 = None
    mul_4629: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1316, unsqueeze_4306);  sub_1316 = unsqueeze_4306 = None
    mul_4630: "f32[36]" = torch.ops.aten.mul.Tensor(sum_501, squeeze_232);  sum_501 = squeeze_232 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_247 = torch.ops.aten.convolution_backward.default(mul_4629, relu_72, primals_232, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4629 = primals_232 = None
    getitem_1391: "f32[8, 36, 28, 28]" = convolution_backward_247[0]
    getitem_1392: "f32[36, 36, 3, 3]" = convolution_backward_247[1];  convolution_backward_247 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2063: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_209, getitem_1391);  where_209 = getitem_1391 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_846: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_72);  relu_72 = None
    alias_847: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_846);  alias_846 = None
    le_211: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_847, 0);  alias_847 = None
    scalar_tensor_211: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_211: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_211, scalar_tensor_211, add_2063);  le_211 = scalar_tensor_211 = add_2063 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4307: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_228, 0);  squeeze_228 = None
    unsqueeze_4308: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4307, 2);  unsqueeze_4307 = None
    unsqueeze_4309: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4308, 3);  unsqueeze_4308 = None
    sum_502: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_211, [0, 2, 3])
    sub_1317: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_76, unsqueeze_4309)
    mul_4631: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_211, sub_1317);  sub_1317 = None
    sum_503: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4631, [0, 2, 3]);  mul_4631 = None
    mul_4632: "f32[36]" = torch.ops.aten.mul.Tensor(sum_502, 0.00015943877551020407)
    unsqueeze_4310: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4632, 0);  mul_4632 = None
    unsqueeze_4311: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4310, 2);  unsqueeze_4310 = None
    unsqueeze_4312: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4311, 3);  unsqueeze_4311 = None
    mul_4633: "f32[36]" = torch.ops.aten.mul.Tensor(sum_503, 0.00015943877551020407)
    mul_4634: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_229, squeeze_229)
    mul_4635: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4633, mul_4634);  mul_4633 = mul_4634 = None
    unsqueeze_4313: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4635, 0);  mul_4635 = None
    unsqueeze_4314: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4313, 2);  unsqueeze_4313 = None
    unsqueeze_4315: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4314, 3);  unsqueeze_4314 = None
    mul_4636: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_229, primals_230);  primals_230 = None
    unsqueeze_4316: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4636, 0);  mul_4636 = None
    unsqueeze_4317: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4316, 2);  unsqueeze_4316 = None
    unsqueeze_4318: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4317, 3);  unsqueeze_4317 = None
    sub_1318: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_76, unsqueeze_4309);  convolution_76 = unsqueeze_4309 = None
    mul_4637: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1318, unsqueeze_4315);  sub_1318 = unsqueeze_4315 = None
    sub_1319: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_211, mul_4637);  mul_4637 = None
    sub_1320: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1319, unsqueeze_4312);  sub_1319 = unsqueeze_4312 = None
    mul_4638: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1320, unsqueeze_4318);  sub_1320 = unsqueeze_4318 = None
    mul_4639: "f32[36]" = torch.ops.aten.mul.Tensor(sum_503, squeeze_229);  sum_503 = squeeze_229 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_248 = torch.ops.aten.convolution_backward.default(mul_4638, relu_71, primals_229, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4638 = primals_229 = None
    getitem_1394: "f32[8, 36, 28, 28]" = convolution_backward_248[0]
    getitem_1395: "f32[36, 36, 3, 3]" = convolution_backward_248[1];  convolution_backward_248 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_849: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_71);  relu_71 = None
    alias_850: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_849);  alias_849 = None
    le_212: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_850, 0);  alias_850 = None
    scalar_tensor_212: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_212: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_212, scalar_tensor_212, getitem_1394);  le_212 = scalar_tensor_212 = getitem_1394 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4319: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_225, 0);  squeeze_225 = None
    unsqueeze_4320: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4319, 2);  unsqueeze_4319 = None
    unsqueeze_4321: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4320, 3);  unsqueeze_4320 = None
    sum_504: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_212, [0, 2, 3])
    sub_1321: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_75, unsqueeze_4321)
    mul_4640: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_212, sub_1321);  sub_1321 = None
    sum_505: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4640, [0, 2, 3]);  mul_4640 = None
    mul_4641: "f32[36]" = torch.ops.aten.mul.Tensor(sum_504, 0.00015943877551020407)
    unsqueeze_4322: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4641, 0);  mul_4641 = None
    unsqueeze_4323: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4322, 2);  unsqueeze_4322 = None
    unsqueeze_4324: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4323, 3);  unsqueeze_4323 = None
    mul_4642: "f32[36]" = torch.ops.aten.mul.Tensor(sum_505, 0.00015943877551020407)
    mul_4643: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_226, squeeze_226)
    mul_4644: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4642, mul_4643);  mul_4642 = mul_4643 = None
    unsqueeze_4325: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4644, 0);  mul_4644 = None
    unsqueeze_4326: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4325, 2);  unsqueeze_4325 = None
    unsqueeze_4327: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4326, 3);  unsqueeze_4326 = None
    mul_4645: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_226, primals_227);  primals_227 = None
    unsqueeze_4328: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4645, 0);  mul_4645 = None
    unsqueeze_4329: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4328, 2);  unsqueeze_4328 = None
    unsqueeze_4330: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4329, 3);  unsqueeze_4329 = None
    sub_1322: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_75, unsqueeze_4321);  convolution_75 = unsqueeze_4321 = None
    mul_4646: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1322, unsqueeze_4327);  sub_1322 = unsqueeze_4327 = None
    sub_1323: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_212, mul_4646);  where_212 = mul_4646 = None
    sub_1324: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1323, unsqueeze_4324);  sub_1323 = unsqueeze_4324 = None
    mul_4647: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1324, unsqueeze_4330);  sub_1324 = unsqueeze_4330 = None
    mul_4648: "f32[36]" = torch.ops.aten.mul.Tensor(sum_505, squeeze_226);  sum_505 = squeeze_226 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_249 = torch.ops.aten.convolution_backward.default(mul_4647, relu_60, primals_226, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4647 = relu_60 = primals_226 = None
    getitem_1397: "f32[8, 36, 28, 28]" = convolution_backward_249[0]
    getitem_1398: "f32[36, 36, 3, 3]" = convolution_backward_249[1];  convolution_backward_249 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2064: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_211, getitem_1397);  where_211 = getitem_1397 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_852: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_70);  relu_70 = None
    alias_853: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_852);  alias_852 = None
    le_213: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_853, 0);  alias_853 = None
    scalar_tensor_213: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_213: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_213, scalar_tensor_213, add_2055);  le_213 = scalar_tensor_213 = add_2055 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4331: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_222, 0);  squeeze_222 = None
    unsqueeze_4332: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4331, 2);  unsqueeze_4331 = None
    unsqueeze_4333: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4332, 3);  unsqueeze_4332 = None
    sum_506: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_213, [0, 2, 3])
    sub_1325: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_74, unsqueeze_4333)
    mul_4649: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_213, sub_1325);  sub_1325 = None
    sum_507: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4649, [0, 2, 3]);  mul_4649 = None
    mul_4650: "f32[18]" = torch.ops.aten.mul.Tensor(sum_506, 3.985969387755102e-05)
    unsqueeze_4334: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4650, 0);  mul_4650 = None
    unsqueeze_4335: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4334, 2);  unsqueeze_4334 = None
    unsqueeze_4336: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4335, 3);  unsqueeze_4335 = None
    mul_4651: "f32[18]" = torch.ops.aten.mul.Tensor(sum_507, 3.985969387755102e-05)
    mul_4652: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_223, squeeze_223)
    mul_4653: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4651, mul_4652);  mul_4651 = mul_4652 = None
    unsqueeze_4337: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4653, 0);  mul_4653 = None
    unsqueeze_4338: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4337, 2);  unsqueeze_4337 = None
    unsqueeze_4339: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4338, 3);  unsqueeze_4338 = None
    mul_4654: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_223, primals_224);  primals_224 = None
    unsqueeze_4340: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4654, 0);  mul_4654 = None
    unsqueeze_4341: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4340, 2);  unsqueeze_4340 = None
    unsqueeze_4342: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4341, 3);  unsqueeze_4341 = None
    sub_1326: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_74, unsqueeze_4333);  convolution_74 = unsqueeze_4333 = None
    mul_4655: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1326, unsqueeze_4339);  sub_1326 = unsqueeze_4339 = None
    sub_1327: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_213, mul_4655);  mul_4655 = None
    sub_1328: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1327, unsqueeze_4336);  sub_1327 = unsqueeze_4336 = None
    mul_4656: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1328, unsqueeze_4342);  sub_1328 = unsqueeze_4342 = None
    mul_4657: "f32[18]" = torch.ops.aten.mul.Tensor(sum_507, squeeze_223);  sum_507 = squeeze_223 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_250 = torch.ops.aten.convolution_backward.default(mul_4656, relu_69, primals_223, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4656 = primals_223 = None
    getitem_1400: "f32[8, 18, 56, 56]" = convolution_backward_250[0]
    getitem_1401: "f32[18, 18, 3, 3]" = convolution_backward_250[1];  convolution_backward_250 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_855: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_69);  relu_69 = None
    alias_856: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_855);  alias_855 = None
    le_214: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_856, 0);  alias_856 = None
    scalar_tensor_214: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_214: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_214, scalar_tensor_214, getitem_1400);  le_214 = scalar_tensor_214 = getitem_1400 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4343: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_219, 0);  squeeze_219 = None
    unsqueeze_4344: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4343, 2);  unsqueeze_4343 = None
    unsqueeze_4345: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4344, 3);  unsqueeze_4344 = None
    sum_508: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_214, [0, 2, 3])
    sub_1329: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_73, unsqueeze_4345)
    mul_4658: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_214, sub_1329);  sub_1329 = None
    sum_509: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4658, [0, 2, 3]);  mul_4658 = None
    mul_4659: "f32[18]" = torch.ops.aten.mul.Tensor(sum_508, 3.985969387755102e-05)
    unsqueeze_4346: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4659, 0);  mul_4659 = None
    unsqueeze_4347: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4346, 2);  unsqueeze_4346 = None
    unsqueeze_4348: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4347, 3);  unsqueeze_4347 = None
    mul_4660: "f32[18]" = torch.ops.aten.mul.Tensor(sum_509, 3.985969387755102e-05)
    mul_4661: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_220, squeeze_220)
    mul_4662: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4660, mul_4661);  mul_4660 = mul_4661 = None
    unsqueeze_4349: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4662, 0);  mul_4662 = None
    unsqueeze_4350: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4349, 2);  unsqueeze_4349 = None
    unsqueeze_4351: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4350, 3);  unsqueeze_4350 = None
    mul_4663: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_220, primals_221);  primals_221 = None
    unsqueeze_4352: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4663, 0);  mul_4663 = None
    unsqueeze_4353: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4352, 2);  unsqueeze_4352 = None
    unsqueeze_4354: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4353, 3);  unsqueeze_4353 = None
    sub_1330: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_73, unsqueeze_4345);  convolution_73 = unsqueeze_4345 = None
    mul_4664: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1330, unsqueeze_4351);  sub_1330 = unsqueeze_4351 = None
    sub_1331: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_214, mul_4664);  where_214 = mul_4664 = None
    sub_1332: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1331, unsqueeze_4348);  sub_1331 = unsqueeze_4348 = None
    mul_4665: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1332, unsqueeze_4354);  sub_1332 = unsqueeze_4354 = None
    mul_4666: "f32[18]" = torch.ops.aten.mul.Tensor(sum_509, squeeze_220);  sum_509 = squeeze_220 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_251 = torch.ops.aten.convolution_backward.default(mul_4665, relu_68, primals_220, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4665 = primals_220 = None
    getitem_1403: "f32[8, 18, 56, 56]" = convolution_backward_251[0]
    getitem_1404: "f32[18, 18, 3, 3]" = convolution_backward_251[1];  convolution_backward_251 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2065: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_213, getitem_1403);  where_213 = getitem_1403 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_858: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_68);  relu_68 = None
    alias_859: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_858);  alias_858 = None
    le_215: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_859, 0);  alias_859 = None
    scalar_tensor_215: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_215: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_215, scalar_tensor_215, add_2065);  le_215 = scalar_tensor_215 = add_2065 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4355: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_216, 0);  squeeze_216 = None
    unsqueeze_4356: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4355, 2);  unsqueeze_4355 = None
    unsqueeze_4357: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4356, 3);  unsqueeze_4356 = None
    sum_510: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_215, [0, 2, 3])
    sub_1333: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_72, unsqueeze_4357)
    mul_4667: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_215, sub_1333);  sub_1333 = None
    sum_511: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4667, [0, 2, 3]);  mul_4667 = None
    mul_4668: "f32[18]" = torch.ops.aten.mul.Tensor(sum_510, 3.985969387755102e-05)
    unsqueeze_4358: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4668, 0);  mul_4668 = None
    unsqueeze_4359: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4358, 2);  unsqueeze_4358 = None
    unsqueeze_4360: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4359, 3);  unsqueeze_4359 = None
    mul_4669: "f32[18]" = torch.ops.aten.mul.Tensor(sum_511, 3.985969387755102e-05)
    mul_4670: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_217, squeeze_217)
    mul_4671: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4669, mul_4670);  mul_4669 = mul_4670 = None
    unsqueeze_4361: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4671, 0);  mul_4671 = None
    unsqueeze_4362: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4361, 2);  unsqueeze_4361 = None
    unsqueeze_4363: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4362, 3);  unsqueeze_4362 = None
    mul_4672: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_217, primals_218);  primals_218 = None
    unsqueeze_4364: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4672, 0);  mul_4672 = None
    unsqueeze_4365: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4364, 2);  unsqueeze_4364 = None
    unsqueeze_4366: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4365, 3);  unsqueeze_4365 = None
    sub_1334: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_72, unsqueeze_4357);  convolution_72 = unsqueeze_4357 = None
    mul_4673: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1334, unsqueeze_4363);  sub_1334 = unsqueeze_4363 = None
    sub_1335: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_215, mul_4673);  mul_4673 = None
    sub_1336: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1335, unsqueeze_4360);  sub_1335 = unsqueeze_4360 = None
    mul_4674: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1336, unsqueeze_4366);  sub_1336 = unsqueeze_4366 = None
    mul_4675: "f32[18]" = torch.ops.aten.mul.Tensor(sum_511, squeeze_217);  sum_511 = squeeze_217 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_252 = torch.ops.aten.convolution_backward.default(mul_4674, relu_67, primals_217, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4674 = primals_217 = None
    getitem_1406: "f32[8, 18, 56, 56]" = convolution_backward_252[0]
    getitem_1407: "f32[18, 18, 3, 3]" = convolution_backward_252[1];  convolution_backward_252 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_861: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_67);  relu_67 = None
    alias_862: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_861);  alias_861 = None
    le_216: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_862, 0);  alias_862 = None
    scalar_tensor_216: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_216: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_216, scalar_tensor_216, getitem_1406);  le_216 = scalar_tensor_216 = getitem_1406 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4367: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_213, 0);  squeeze_213 = None
    unsqueeze_4368: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4367, 2);  unsqueeze_4367 = None
    unsqueeze_4369: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4368, 3);  unsqueeze_4368 = None
    sum_512: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_216, [0, 2, 3])
    sub_1337: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_71, unsqueeze_4369)
    mul_4676: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_216, sub_1337);  sub_1337 = None
    sum_513: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4676, [0, 2, 3]);  mul_4676 = None
    mul_4677: "f32[18]" = torch.ops.aten.mul.Tensor(sum_512, 3.985969387755102e-05)
    unsqueeze_4370: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4677, 0);  mul_4677 = None
    unsqueeze_4371: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4370, 2);  unsqueeze_4370 = None
    unsqueeze_4372: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4371, 3);  unsqueeze_4371 = None
    mul_4678: "f32[18]" = torch.ops.aten.mul.Tensor(sum_513, 3.985969387755102e-05)
    mul_4679: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_214, squeeze_214)
    mul_4680: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4678, mul_4679);  mul_4678 = mul_4679 = None
    unsqueeze_4373: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4680, 0);  mul_4680 = None
    unsqueeze_4374: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4373, 2);  unsqueeze_4373 = None
    unsqueeze_4375: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4374, 3);  unsqueeze_4374 = None
    mul_4681: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_214, primals_215);  primals_215 = None
    unsqueeze_4376: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4681, 0);  mul_4681 = None
    unsqueeze_4377: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4376, 2);  unsqueeze_4376 = None
    unsqueeze_4378: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4377, 3);  unsqueeze_4377 = None
    sub_1338: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_71, unsqueeze_4369);  convolution_71 = unsqueeze_4369 = None
    mul_4682: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1338, unsqueeze_4375);  sub_1338 = unsqueeze_4375 = None
    sub_1339: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_216, mul_4682);  where_216 = mul_4682 = None
    sub_1340: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1339, unsqueeze_4372);  sub_1339 = unsqueeze_4372 = None
    mul_4683: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1340, unsqueeze_4378);  sub_1340 = unsqueeze_4378 = None
    mul_4684: "f32[18]" = torch.ops.aten.mul.Tensor(sum_513, squeeze_214);  sum_513 = squeeze_214 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_253 = torch.ops.aten.convolution_backward.default(mul_4683, relu_66, primals_214, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4683 = primals_214 = None
    getitem_1409: "f32[8, 18, 56, 56]" = convolution_backward_253[0]
    getitem_1410: "f32[18, 18, 3, 3]" = convolution_backward_253[1];  convolution_backward_253 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2066: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_215, getitem_1409);  where_215 = getitem_1409 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_864: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_66);  relu_66 = None
    alias_865: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_864);  alias_864 = None
    le_217: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_865, 0);  alias_865 = None
    scalar_tensor_217: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_217: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_217, scalar_tensor_217, add_2066);  le_217 = scalar_tensor_217 = add_2066 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4379: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_210, 0);  squeeze_210 = None
    unsqueeze_4380: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4379, 2);  unsqueeze_4379 = None
    unsqueeze_4381: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4380, 3);  unsqueeze_4380 = None
    sum_514: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_217, [0, 2, 3])
    sub_1341: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_70, unsqueeze_4381)
    mul_4685: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_217, sub_1341);  sub_1341 = None
    sum_515: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4685, [0, 2, 3]);  mul_4685 = None
    mul_4686: "f32[18]" = torch.ops.aten.mul.Tensor(sum_514, 3.985969387755102e-05)
    unsqueeze_4382: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4686, 0);  mul_4686 = None
    unsqueeze_4383: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4382, 2);  unsqueeze_4382 = None
    unsqueeze_4384: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4383, 3);  unsqueeze_4383 = None
    mul_4687: "f32[18]" = torch.ops.aten.mul.Tensor(sum_515, 3.985969387755102e-05)
    mul_4688: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_211, squeeze_211)
    mul_4689: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4687, mul_4688);  mul_4687 = mul_4688 = None
    unsqueeze_4385: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4689, 0);  mul_4689 = None
    unsqueeze_4386: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4385, 2);  unsqueeze_4385 = None
    unsqueeze_4387: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4386, 3);  unsqueeze_4386 = None
    mul_4690: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_211, primals_212);  primals_212 = None
    unsqueeze_4388: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4690, 0);  mul_4690 = None
    unsqueeze_4389: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4388, 2);  unsqueeze_4388 = None
    unsqueeze_4390: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4389, 3);  unsqueeze_4389 = None
    sub_1342: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_70, unsqueeze_4381);  convolution_70 = unsqueeze_4381 = None
    mul_4691: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1342, unsqueeze_4387);  sub_1342 = unsqueeze_4387 = None
    sub_1343: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_217, mul_4691);  mul_4691 = None
    sub_1344: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1343, unsqueeze_4384);  sub_1343 = unsqueeze_4384 = None
    mul_4692: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1344, unsqueeze_4390);  sub_1344 = unsqueeze_4390 = None
    mul_4693: "f32[18]" = torch.ops.aten.mul.Tensor(sum_515, squeeze_211);  sum_515 = squeeze_211 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_254 = torch.ops.aten.convolution_backward.default(mul_4692, relu_65, primals_211, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4692 = primals_211 = None
    getitem_1412: "f32[8, 18, 56, 56]" = convolution_backward_254[0]
    getitem_1413: "f32[18, 18, 3, 3]" = convolution_backward_254[1];  convolution_backward_254 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_867: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_65);  relu_65 = None
    alias_868: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_867);  alias_867 = None
    le_218: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_868, 0);  alias_868 = None
    scalar_tensor_218: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_218: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_218, scalar_tensor_218, getitem_1412);  le_218 = scalar_tensor_218 = getitem_1412 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4391: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_207, 0);  squeeze_207 = None
    unsqueeze_4392: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4391, 2);  unsqueeze_4391 = None
    unsqueeze_4393: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4392, 3);  unsqueeze_4392 = None
    sum_516: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_218, [0, 2, 3])
    sub_1345: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_69, unsqueeze_4393)
    mul_4694: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_218, sub_1345);  sub_1345 = None
    sum_517: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4694, [0, 2, 3]);  mul_4694 = None
    mul_4695: "f32[18]" = torch.ops.aten.mul.Tensor(sum_516, 3.985969387755102e-05)
    unsqueeze_4394: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4695, 0);  mul_4695 = None
    unsqueeze_4395: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4394, 2);  unsqueeze_4394 = None
    unsqueeze_4396: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4395, 3);  unsqueeze_4395 = None
    mul_4696: "f32[18]" = torch.ops.aten.mul.Tensor(sum_517, 3.985969387755102e-05)
    mul_4697: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_208, squeeze_208)
    mul_4698: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4696, mul_4697);  mul_4696 = mul_4697 = None
    unsqueeze_4397: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4698, 0);  mul_4698 = None
    unsqueeze_4398: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4397, 2);  unsqueeze_4397 = None
    unsqueeze_4399: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4398, 3);  unsqueeze_4398 = None
    mul_4699: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_208, primals_209);  primals_209 = None
    unsqueeze_4400: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4699, 0);  mul_4699 = None
    unsqueeze_4401: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4400, 2);  unsqueeze_4400 = None
    unsqueeze_4402: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4401, 3);  unsqueeze_4401 = None
    sub_1346: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_69, unsqueeze_4393);  convolution_69 = unsqueeze_4393 = None
    mul_4700: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1346, unsqueeze_4399);  sub_1346 = unsqueeze_4399 = None
    sub_1347: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_218, mul_4700);  where_218 = mul_4700 = None
    sub_1348: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1347, unsqueeze_4396);  sub_1347 = unsqueeze_4396 = None
    mul_4701: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1348, unsqueeze_4402);  sub_1348 = unsqueeze_4402 = None
    mul_4702: "f32[18]" = torch.ops.aten.mul.Tensor(sum_517, squeeze_208);  sum_517 = squeeze_208 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_255 = torch.ops.aten.convolution_backward.default(mul_4701, relu_64, primals_208, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4701 = primals_208 = None
    getitem_1415: "f32[8, 18, 56, 56]" = convolution_backward_255[0]
    getitem_1416: "f32[18, 18, 3, 3]" = convolution_backward_255[1];  convolution_backward_255 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2067: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_217, getitem_1415);  where_217 = getitem_1415 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_870: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_64);  relu_64 = None
    alias_871: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_870);  alias_870 = None
    le_219: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_871, 0);  alias_871 = None
    scalar_tensor_219: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_219: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_219, scalar_tensor_219, add_2067);  le_219 = scalar_tensor_219 = add_2067 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4403: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_204, 0);  squeeze_204 = None
    unsqueeze_4404: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4403, 2);  unsqueeze_4403 = None
    unsqueeze_4405: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4404, 3);  unsqueeze_4404 = None
    sum_518: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_219, [0, 2, 3])
    sub_1349: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_68, unsqueeze_4405)
    mul_4703: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_219, sub_1349);  sub_1349 = None
    sum_519: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4703, [0, 2, 3]);  mul_4703 = None
    mul_4704: "f32[18]" = torch.ops.aten.mul.Tensor(sum_518, 3.985969387755102e-05)
    unsqueeze_4406: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4704, 0);  mul_4704 = None
    unsqueeze_4407: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4406, 2);  unsqueeze_4406 = None
    unsqueeze_4408: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4407, 3);  unsqueeze_4407 = None
    mul_4705: "f32[18]" = torch.ops.aten.mul.Tensor(sum_519, 3.985969387755102e-05)
    mul_4706: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_205, squeeze_205)
    mul_4707: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4705, mul_4706);  mul_4705 = mul_4706 = None
    unsqueeze_4409: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4707, 0);  mul_4707 = None
    unsqueeze_4410: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4409, 2);  unsqueeze_4409 = None
    unsqueeze_4411: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4410, 3);  unsqueeze_4410 = None
    mul_4708: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_205, primals_206);  primals_206 = None
    unsqueeze_4412: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4708, 0);  mul_4708 = None
    unsqueeze_4413: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4412, 2);  unsqueeze_4412 = None
    unsqueeze_4414: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4413, 3);  unsqueeze_4413 = None
    sub_1350: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_68, unsqueeze_4405);  convolution_68 = unsqueeze_4405 = None
    mul_4709: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1350, unsqueeze_4411);  sub_1350 = unsqueeze_4411 = None
    sub_1351: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_219, mul_4709);  mul_4709 = None
    sub_1352: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1351, unsqueeze_4408);  sub_1351 = unsqueeze_4408 = None
    mul_4710: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1352, unsqueeze_4414);  sub_1352 = unsqueeze_4414 = None
    mul_4711: "f32[18]" = torch.ops.aten.mul.Tensor(sum_519, squeeze_205);  sum_519 = squeeze_205 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_256 = torch.ops.aten.convolution_backward.default(mul_4710, relu_63, primals_205, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4710 = primals_205 = None
    getitem_1418: "f32[8, 18, 56, 56]" = convolution_backward_256[0]
    getitem_1419: "f32[18, 18, 3, 3]" = convolution_backward_256[1];  convolution_backward_256 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_873: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_63);  relu_63 = None
    alias_874: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_873);  alias_873 = None
    le_220: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_874, 0);  alias_874 = None
    scalar_tensor_220: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_220: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_220, scalar_tensor_220, getitem_1418);  le_220 = scalar_tensor_220 = getitem_1418 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4415: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_201, 0);  squeeze_201 = None
    unsqueeze_4416: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4415, 2);  unsqueeze_4415 = None
    unsqueeze_4417: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4416, 3);  unsqueeze_4416 = None
    sum_520: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_220, [0, 2, 3])
    sub_1353: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_67, unsqueeze_4417)
    mul_4712: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_220, sub_1353);  sub_1353 = None
    sum_521: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4712, [0, 2, 3]);  mul_4712 = None
    mul_4713: "f32[18]" = torch.ops.aten.mul.Tensor(sum_520, 3.985969387755102e-05)
    unsqueeze_4418: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4713, 0);  mul_4713 = None
    unsqueeze_4419: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4418, 2);  unsqueeze_4418 = None
    unsqueeze_4420: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4419, 3);  unsqueeze_4419 = None
    mul_4714: "f32[18]" = torch.ops.aten.mul.Tensor(sum_521, 3.985969387755102e-05)
    mul_4715: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_202, squeeze_202)
    mul_4716: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4714, mul_4715);  mul_4714 = mul_4715 = None
    unsqueeze_4421: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4716, 0);  mul_4716 = None
    unsqueeze_4422: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4421, 2);  unsqueeze_4421 = None
    unsqueeze_4423: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4422, 3);  unsqueeze_4422 = None
    mul_4717: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_202, primals_203);  primals_203 = None
    unsqueeze_4424: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4717, 0);  mul_4717 = None
    unsqueeze_4425: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4424, 2);  unsqueeze_4424 = None
    unsqueeze_4426: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4425, 3);  unsqueeze_4425 = None
    sub_1354: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_67, unsqueeze_4417);  convolution_67 = unsqueeze_4417 = None
    mul_4718: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1354, unsqueeze_4423);  sub_1354 = unsqueeze_4423 = None
    sub_1355: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_220, mul_4718);  where_220 = mul_4718 = None
    sub_1356: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1355, unsqueeze_4420);  sub_1355 = unsqueeze_4420 = None
    mul_4719: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1356, unsqueeze_4426);  sub_1356 = unsqueeze_4426 = None
    mul_4720: "f32[18]" = torch.ops.aten.mul.Tensor(sum_521, squeeze_202);  sum_521 = squeeze_202 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_257 = torch.ops.aten.convolution_backward.default(mul_4719, relu_59, primals_202, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4719 = relu_59 = primals_202 = None
    getitem_1421: "f32[8, 18, 56, 56]" = convolution_backward_257[0]
    getitem_1422: "f32[18, 18, 3, 3]" = convolution_backward_257[1];  convolution_backward_257 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2068: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_219, getitem_1421);  where_219 = getitem_1421 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_875: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_62);  alias_62 = None
    le_221: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_875, 0);  alias_875 = None
    scalar_tensor_221: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_221: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_221, scalar_tensor_221, add_2060);  le_221 = scalar_tensor_221 = add_2060 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    unsqueeze_4427: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_198, 0);  squeeze_198 = None
    unsqueeze_4428: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4427, 2);  unsqueeze_4427 = None
    unsqueeze_4429: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4428, 3);  unsqueeze_4428 = None
    sum_522: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_221, [0, 2, 3])
    sub_1357: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_66, unsqueeze_4429)
    mul_4721: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_221, sub_1357);  sub_1357 = None
    sum_523: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4721, [0, 2, 3]);  mul_4721 = None
    mul_4722: "f32[72]" = torch.ops.aten.mul.Tensor(sum_522, 0.0006377551020408163)
    unsqueeze_4430: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4722, 0);  mul_4722 = None
    unsqueeze_4431: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4430, 2);  unsqueeze_4430 = None
    unsqueeze_4432: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4431, 3);  unsqueeze_4431 = None
    mul_4723: "f32[72]" = torch.ops.aten.mul.Tensor(sum_523, 0.0006377551020408163)
    mul_4724: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_199, squeeze_199)
    mul_4725: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4723, mul_4724);  mul_4723 = mul_4724 = None
    unsqueeze_4433: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4725, 0);  mul_4725 = None
    unsqueeze_4434: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4433, 2);  unsqueeze_4433 = None
    unsqueeze_4435: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4434, 3);  unsqueeze_4434 = None
    mul_4726: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_199, primals_200);  primals_200 = None
    unsqueeze_4436: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4726, 0);  mul_4726 = None
    unsqueeze_4437: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4436, 2);  unsqueeze_4436 = None
    unsqueeze_4438: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4437, 3);  unsqueeze_4437 = None
    sub_1358: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_66, unsqueeze_4429);  convolution_66 = unsqueeze_4429 = None
    mul_4727: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1358, unsqueeze_4435);  sub_1358 = unsqueeze_4435 = None
    sub_1359: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_221, mul_4727);  mul_4727 = None
    sub_1360: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1359, unsqueeze_4432);  sub_1359 = unsqueeze_4432 = None
    mul_4728: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1360, unsqueeze_4438);  sub_1360 = unsqueeze_4438 = None
    mul_4729: "f32[72]" = torch.ops.aten.mul.Tensor(sum_523, squeeze_199);  sum_523 = squeeze_199 = None
    convolution_backward_258 = torch.ops.aten.convolution_backward.default(mul_4728, relu_50, primals_199, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4728 = primals_199 = None
    getitem_1424: "f32[8, 36, 28, 28]" = convolution_backward_258[0]
    getitem_1425: "f32[72, 36, 3, 3]" = convolution_backward_258[1];  convolution_backward_258 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_4439: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_195, 0);  squeeze_195 = None
    unsqueeze_4440: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4439, 2);  unsqueeze_4439 = None
    unsqueeze_4441: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4440, 3);  unsqueeze_4440 = None
    sum_524: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_221, [0, 2, 3])
    sub_1361: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_65, unsqueeze_4441)
    mul_4730: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_221, sub_1361);  sub_1361 = None
    sum_525: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4730, [0, 2, 3]);  mul_4730 = None
    mul_4731: "f32[72]" = torch.ops.aten.mul.Tensor(sum_524, 0.0006377551020408163)
    unsqueeze_4442: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4731, 0);  mul_4731 = None
    unsqueeze_4443: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4442, 2);  unsqueeze_4442 = None
    unsqueeze_4444: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4443, 3);  unsqueeze_4443 = None
    mul_4732: "f32[72]" = torch.ops.aten.mul.Tensor(sum_525, 0.0006377551020408163)
    mul_4733: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_196, squeeze_196)
    mul_4734: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4732, mul_4733);  mul_4732 = mul_4733 = None
    unsqueeze_4445: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4734, 0);  mul_4734 = None
    unsqueeze_4446: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4445, 2);  unsqueeze_4445 = None
    unsqueeze_4447: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4446, 3);  unsqueeze_4446 = None
    mul_4735: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_196, primals_197);  primals_197 = None
    unsqueeze_4448: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4735, 0);  mul_4735 = None
    unsqueeze_4449: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4448, 2);  unsqueeze_4448 = None
    unsqueeze_4450: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4449, 3);  unsqueeze_4449 = None
    sub_1362: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_65, unsqueeze_4441);  convolution_65 = unsqueeze_4441 = None
    mul_4736: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1362, unsqueeze_4447);  sub_1362 = unsqueeze_4447 = None
    sub_1363: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_221, mul_4736);  mul_4736 = None
    sub_1364: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1363, unsqueeze_4444);  sub_1363 = unsqueeze_4444 = None
    mul_4737: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1364, unsqueeze_4450);  sub_1364 = unsqueeze_4450 = None
    mul_4738: "f32[72]" = torch.ops.aten.mul.Tensor(sum_525, squeeze_196);  sum_525 = squeeze_196 = None
    convolution_backward_259 = torch.ops.aten.convolution_backward.default(mul_4737, relu_61, primals_196, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4737 = relu_61 = primals_196 = None
    getitem_1427: "f32[8, 18, 28, 28]" = convolution_backward_259[0]
    getitem_1428: "f32[72, 18, 3, 3]" = convolution_backward_259[1];  convolution_backward_259 = None
    alias_876: "f32[8, 18, 28, 28]" = torch.ops.aten.alias.default(alias_61);  alias_61 = None
    le_222: "b8[8, 18, 28, 28]" = torch.ops.aten.le.Scalar(alias_876, 0);  alias_876 = None
    scalar_tensor_222: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_222: "f32[8, 18, 28, 28]" = torch.ops.aten.where.self(le_222, scalar_tensor_222, getitem_1427);  le_222 = scalar_tensor_222 = getitem_1427 = None
    unsqueeze_4451: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_192, 0);  squeeze_192 = None
    unsqueeze_4452: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4451, 2);  unsqueeze_4451 = None
    unsqueeze_4453: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4452, 3);  unsqueeze_4452 = None
    sum_526: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_222, [0, 2, 3])
    sub_1365: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_64, unsqueeze_4453)
    mul_4739: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(where_222, sub_1365);  sub_1365 = None
    sum_527: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4739, [0, 2, 3]);  mul_4739 = None
    mul_4740: "f32[18]" = torch.ops.aten.mul.Tensor(sum_526, 0.00015943877551020407)
    unsqueeze_4454: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4740, 0);  mul_4740 = None
    unsqueeze_4455: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4454, 2);  unsqueeze_4454 = None
    unsqueeze_4456: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4455, 3);  unsqueeze_4455 = None
    mul_4741: "f32[18]" = torch.ops.aten.mul.Tensor(sum_527, 0.00015943877551020407)
    mul_4742: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_193, squeeze_193)
    mul_4743: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4741, mul_4742);  mul_4741 = mul_4742 = None
    unsqueeze_4457: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4743, 0);  mul_4743 = None
    unsqueeze_4458: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4457, 2);  unsqueeze_4457 = None
    unsqueeze_4459: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4458, 3);  unsqueeze_4458 = None
    mul_4744: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_193, primals_194);  primals_194 = None
    unsqueeze_4460: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4744, 0);  mul_4744 = None
    unsqueeze_4461: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4460, 2);  unsqueeze_4460 = None
    unsqueeze_4462: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4461, 3);  unsqueeze_4461 = None
    sub_1366: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_64, unsqueeze_4453);  convolution_64 = unsqueeze_4453 = None
    mul_4745: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1366, unsqueeze_4459);  sub_1366 = unsqueeze_4459 = None
    sub_1367: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(where_222, mul_4745);  where_222 = mul_4745 = None
    sub_1368: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1367, unsqueeze_4456);  sub_1367 = unsqueeze_4456 = None
    mul_4746: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1368, unsqueeze_4462);  sub_1368 = unsqueeze_4462 = None
    mul_4747: "f32[18]" = torch.ops.aten.mul.Tensor(sum_527, squeeze_193);  sum_527 = squeeze_193 = None
    convolution_backward_260 = torch.ops.aten.convolution_backward.default(mul_4746, relu_42, primals_193, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4746 = primals_193 = None
    getitem_1430: "f32[8, 18, 56, 56]" = convolution_backward_260[0]
    getitem_1431: "f32[18, 18, 3, 3]" = convolution_backward_260[1];  convolution_backward_260 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_877: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_60);  alias_60 = None
    le_223: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_877, 0);  alias_877 = None
    scalar_tensor_223: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_223: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_223, scalar_tensor_223, add_2064);  le_223 = scalar_tensor_223 = add_2064 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_27: "f32[8, 36, 14, 14]" = torch.ops.aten.full.default([8, 36, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_27: "f32[8, 36, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_27, [None, None, unsqueeze_259, convert_element_type_15], where_223, True);  full_27 = unsqueeze_259 = convert_element_type_15 = None
    unsqueeze_4463: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_189, 0);  squeeze_189 = None
    unsqueeze_4464: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4463, 2);  unsqueeze_4463 = None
    unsqueeze_4465: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4464, 3);  unsqueeze_4464 = None
    sum_528: "f32[36]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_27, [0, 2, 3])
    sub_1369: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_63, unsqueeze_4465)
    mul_4748: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_27, sub_1369);  sub_1369 = None
    sum_529: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4748, [0, 2, 3]);  mul_4748 = None
    mul_4749: "f32[36]" = torch.ops.aten.mul.Tensor(sum_528, 0.0006377551020408163)
    unsqueeze_4466: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4749, 0);  mul_4749 = None
    unsqueeze_4467: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4466, 2);  unsqueeze_4466 = None
    unsqueeze_4468: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4467, 3);  unsqueeze_4467 = None
    mul_4750: "f32[36]" = torch.ops.aten.mul.Tensor(sum_529, 0.0006377551020408163)
    mul_4751: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_190, squeeze_190)
    mul_4752: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4750, mul_4751);  mul_4750 = mul_4751 = None
    unsqueeze_4469: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4752, 0);  mul_4752 = None
    unsqueeze_4470: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4469, 2);  unsqueeze_4469 = None
    unsqueeze_4471: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4470, 3);  unsqueeze_4470 = None
    mul_4753: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_190, primals_191);  primals_191 = None
    unsqueeze_4472: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4753, 0);  mul_4753 = None
    unsqueeze_4473: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4472, 2);  unsqueeze_4472 = None
    unsqueeze_4474: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4473, 3);  unsqueeze_4473 = None
    sub_1370: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_63, unsqueeze_4465);  convolution_63 = unsqueeze_4465 = None
    mul_4754: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1370, unsqueeze_4471);  sub_1370 = unsqueeze_4471 = None
    sub_1371: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_27, mul_4754);  _unsafe_index_put_27 = mul_4754 = None
    sub_1372: "f32[8, 36, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1371, unsqueeze_4468);  sub_1371 = unsqueeze_4468 = None
    mul_4755: "f32[8, 36, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1372, unsqueeze_4474);  sub_1372 = unsqueeze_4474 = None
    mul_4756: "f32[36]" = torch.ops.aten.mul.Tensor(sum_529, squeeze_190);  sum_529 = squeeze_190 = None
    convolution_backward_261 = torch.ops.aten.convolution_backward.default(mul_4755, relu_58, primals_190, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4755 = primals_190 = None
    getitem_1433: "f32[8, 72, 14, 14]" = convolution_backward_261[0]
    getitem_1434: "f32[36, 72, 1, 1]" = convolution_backward_261[1];  convolution_backward_261 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2069: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_221, getitem_1433);  where_221 = getitem_1433 = None
    add_2070: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(getitem_1424, where_223);  getitem_1424 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_4475: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_186, 0);  squeeze_186 = None
    unsqueeze_4476: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4475, 2);  unsqueeze_4475 = None
    unsqueeze_4477: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4476, 3);  unsqueeze_4476 = None
    sum_530: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_223, [0, 2, 3])
    sub_1373: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_62, unsqueeze_4477)
    mul_4757: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_223, sub_1373);  sub_1373 = None
    sum_531: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4757, [0, 2, 3]);  mul_4757 = None
    mul_4758: "f32[36]" = torch.ops.aten.mul.Tensor(sum_530, 0.00015943877551020407)
    unsqueeze_4478: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4758, 0);  mul_4758 = None
    unsqueeze_4479: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4478, 2);  unsqueeze_4478 = None
    unsqueeze_4480: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4479, 3);  unsqueeze_4479 = None
    mul_4759: "f32[36]" = torch.ops.aten.mul.Tensor(sum_531, 0.00015943877551020407)
    mul_4760: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_187, squeeze_187)
    mul_4761: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4759, mul_4760);  mul_4759 = mul_4760 = None
    unsqueeze_4481: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4761, 0);  mul_4761 = None
    unsqueeze_4482: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4481, 2);  unsqueeze_4481 = None
    unsqueeze_4483: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4482, 3);  unsqueeze_4482 = None
    mul_4762: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_187, primals_188);  primals_188 = None
    unsqueeze_4484: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4762, 0);  mul_4762 = None
    unsqueeze_4485: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4484, 2);  unsqueeze_4484 = None
    unsqueeze_4486: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4485, 3);  unsqueeze_4485 = None
    sub_1374: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_62, unsqueeze_4477);  convolution_62 = unsqueeze_4477 = None
    mul_4763: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1374, unsqueeze_4483);  sub_1374 = unsqueeze_4483 = None
    sub_1375: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_223, mul_4763);  where_223 = mul_4763 = None
    sub_1376: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1375, unsqueeze_4480);  sub_1375 = unsqueeze_4480 = None
    mul_4764: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1376, unsqueeze_4486);  sub_1376 = unsqueeze_4486 = None
    mul_4765: "f32[36]" = torch.ops.aten.mul.Tensor(sum_531, squeeze_187);  sum_531 = squeeze_187 = None
    convolution_backward_262 = torch.ops.aten.convolution_backward.default(mul_4764, relu_42, primals_187, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4764 = primals_187 = None
    getitem_1436: "f32[8, 18, 56, 56]" = convolution_backward_262[0]
    getitem_1437: "f32[36, 18, 3, 3]" = convolution_backward_262[1];  convolution_backward_262 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    add_2071: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1430, getitem_1436);  getitem_1430 = getitem_1436 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_878: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_59);  alias_59 = None
    le_224: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_878, 0);  alias_878 = None
    scalar_tensor_224: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_224: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_224, scalar_tensor_224, add_2068);  le_224 = scalar_tensor_224 = add_2068 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_28: "f32[8, 18, 14, 14]" = torch.ops.aten.full.default([8, 18, 14, 14], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_28: "f32[8, 18, 14, 14]" = torch.ops.aten._unsafe_index_put.default(full_28, [None, None, unsqueeze_250, convert_element_type_11], where_224, True);  full_28 = unsqueeze_250 = convert_element_type_11 = None
    unsqueeze_4487: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_183, 0);  squeeze_183 = None
    unsqueeze_4488: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4487, 2);  unsqueeze_4487 = None
    unsqueeze_4489: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4488, 3);  unsqueeze_4488 = None
    sum_532: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_28, [0, 2, 3])
    sub_1377: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_61, unsqueeze_4489)
    mul_4766: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_28, sub_1377);  sub_1377 = None
    sum_533: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4766, [0, 2, 3]);  mul_4766 = None
    mul_4767: "f32[18]" = torch.ops.aten.mul.Tensor(sum_532, 0.0006377551020408163)
    unsqueeze_4490: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4767, 0);  mul_4767 = None
    unsqueeze_4491: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4490, 2);  unsqueeze_4490 = None
    unsqueeze_4492: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4491, 3);  unsqueeze_4491 = None
    mul_4768: "f32[18]" = torch.ops.aten.mul.Tensor(sum_533, 0.0006377551020408163)
    mul_4769: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_184, squeeze_184)
    mul_4770: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4768, mul_4769);  mul_4768 = mul_4769 = None
    unsqueeze_4493: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4770, 0);  mul_4770 = None
    unsqueeze_4494: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4493, 2);  unsqueeze_4493 = None
    unsqueeze_4495: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4494, 3);  unsqueeze_4494 = None
    mul_4771: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_184, primals_185);  primals_185 = None
    unsqueeze_4496: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4771, 0);  mul_4771 = None
    unsqueeze_4497: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4496, 2);  unsqueeze_4496 = None
    unsqueeze_4498: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4497, 3);  unsqueeze_4497 = None
    sub_1378: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_61, unsqueeze_4489);  convolution_61 = unsqueeze_4489 = None
    mul_4772: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1378, unsqueeze_4495);  sub_1378 = unsqueeze_4495 = None
    sub_1379: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_28, mul_4772);  _unsafe_index_put_28 = mul_4772 = None
    sub_1380: "f32[8, 18, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1379, unsqueeze_4492);  sub_1379 = unsqueeze_4492 = None
    mul_4773: "f32[8, 18, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1380, unsqueeze_4498);  sub_1380 = unsqueeze_4498 = None
    mul_4774: "f32[18]" = torch.ops.aten.mul.Tensor(sum_533, squeeze_184);  sum_533 = squeeze_184 = None
    convolution_backward_263 = torch.ops.aten.convolution_backward.default(mul_4773, relu_58, primals_184, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4773 = primals_184 = None
    getitem_1439: "f32[8, 72, 14, 14]" = convolution_backward_263[0]
    getitem_1440: "f32[18, 72, 1, 1]" = convolution_backward_263[1];  convolution_backward_263 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2072: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(add_2069, getitem_1439);  add_2069 = getitem_1439 = None
    add_2073: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(add_2071, where_224);  add_2071 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_29: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_29: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_29, [None, None, unsqueeze_245, convert_element_type_7], where_224, True);  full_29 = unsqueeze_245 = convert_element_type_7 = where_224 = None
    unsqueeze_4499: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_180, 0);  squeeze_180 = None
    unsqueeze_4500: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4499, 2);  unsqueeze_4499 = None
    unsqueeze_4501: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4500, 3);  unsqueeze_4500 = None
    sum_534: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_29, [0, 2, 3])
    sub_1381: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_60, unsqueeze_4501)
    mul_4775: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_29, sub_1381);  sub_1381 = None
    sum_535: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4775, [0, 2, 3]);  mul_4775 = None
    mul_4776: "f32[18]" = torch.ops.aten.mul.Tensor(sum_534, 0.00015943877551020407)
    unsqueeze_4502: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4776, 0);  mul_4776 = None
    unsqueeze_4503: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4502, 2);  unsqueeze_4502 = None
    unsqueeze_4504: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4503, 3);  unsqueeze_4503 = None
    mul_4777: "f32[18]" = torch.ops.aten.mul.Tensor(sum_535, 0.00015943877551020407)
    mul_4778: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_181, squeeze_181)
    mul_4779: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4777, mul_4778);  mul_4777 = mul_4778 = None
    unsqueeze_4505: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4779, 0);  mul_4779 = None
    unsqueeze_4506: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4505, 2);  unsqueeze_4505 = None
    unsqueeze_4507: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4506, 3);  unsqueeze_4506 = None
    mul_4780: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_181, primals_182);  primals_182 = None
    unsqueeze_4508: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4780, 0);  mul_4780 = None
    unsqueeze_4509: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4508, 2);  unsqueeze_4508 = None
    unsqueeze_4510: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4509, 3);  unsqueeze_4509 = None
    sub_1382: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_60, unsqueeze_4501);  convolution_60 = unsqueeze_4501 = None
    mul_4781: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1382, unsqueeze_4507);  sub_1382 = unsqueeze_4507 = None
    sub_1383: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_29, mul_4781);  _unsafe_index_put_29 = mul_4781 = None
    sub_1384: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1383, unsqueeze_4504);  sub_1383 = unsqueeze_4504 = None
    mul_4782: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1384, unsqueeze_4510);  sub_1384 = unsqueeze_4510 = None
    mul_4783: "f32[18]" = torch.ops.aten.mul.Tensor(sum_535, squeeze_181);  sum_535 = squeeze_181 = None
    convolution_backward_264 = torch.ops.aten.convolution_backward.default(mul_4782, relu_50, primals_181, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4782 = primals_181 = None
    getitem_1442: "f32[8, 36, 28, 28]" = convolution_backward_264[0]
    getitem_1443: "f32[18, 36, 1, 1]" = convolution_backward_264[1];  convolution_backward_264 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2074: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_2070, getitem_1442);  add_2070 = getitem_1442 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_880: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_58);  relu_58 = None
    alias_881: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_880);  alias_880 = None
    le_225: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_881, 0);  alias_881 = None
    scalar_tensor_225: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_225: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_225, scalar_tensor_225, add_2072);  le_225 = scalar_tensor_225 = add_2072 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4511: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_177, 0);  squeeze_177 = None
    unsqueeze_4512: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4511, 2);  unsqueeze_4511 = None
    unsqueeze_4513: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4512, 3);  unsqueeze_4512 = None
    sum_536: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_225, [0, 2, 3])
    sub_1385: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_59, unsqueeze_4513)
    mul_4784: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_225, sub_1385);  sub_1385 = None
    sum_537: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4784, [0, 2, 3]);  mul_4784 = None
    mul_4785: "f32[72]" = torch.ops.aten.mul.Tensor(sum_536, 0.0006377551020408163)
    unsqueeze_4514: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4785, 0);  mul_4785 = None
    unsqueeze_4515: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4514, 2);  unsqueeze_4514 = None
    unsqueeze_4516: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4515, 3);  unsqueeze_4515 = None
    mul_4786: "f32[72]" = torch.ops.aten.mul.Tensor(sum_537, 0.0006377551020408163)
    mul_4787: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_178, squeeze_178)
    mul_4788: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4786, mul_4787);  mul_4786 = mul_4787 = None
    unsqueeze_4517: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4788, 0);  mul_4788 = None
    unsqueeze_4518: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4517, 2);  unsqueeze_4517 = None
    unsqueeze_4519: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4518, 3);  unsqueeze_4518 = None
    mul_4789: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_178, primals_179);  primals_179 = None
    unsqueeze_4520: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4789, 0);  mul_4789 = None
    unsqueeze_4521: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4520, 2);  unsqueeze_4520 = None
    unsqueeze_4522: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4521, 3);  unsqueeze_4521 = None
    sub_1386: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_59, unsqueeze_4513);  convolution_59 = unsqueeze_4513 = None
    mul_4790: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1386, unsqueeze_4519);  sub_1386 = unsqueeze_4519 = None
    sub_1387: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_225, mul_4790);  mul_4790 = None
    sub_1388: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1387, unsqueeze_4516);  sub_1387 = unsqueeze_4516 = None
    mul_4791: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1388, unsqueeze_4522);  sub_1388 = unsqueeze_4522 = None
    mul_4792: "f32[72]" = torch.ops.aten.mul.Tensor(sum_537, squeeze_178);  sum_537 = squeeze_178 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_265 = torch.ops.aten.convolution_backward.default(mul_4791, relu_57, primals_178, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4791 = primals_178 = None
    getitem_1445: "f32[8, 72, 14, 14]" = convolution_backward_265[0]
    getitem_1446: "f32[72, 72, 3, 3]" = convolution_backward_265[1];  convolution_backward_265 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_883: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_57);  relu_57 = None
    alias_884: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_883);  alias_883 = None
    le_226: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_884, 0);  alias_884 = None
    scalar_tensor_226: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_226: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_226, scalar_tensor_226, getitem_1445);  le_226 = scalar_tensor_226 = getitem_1445 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4523: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_174, 0);  squeeze_174 = None
    unsqueeze_4524: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4523, 2);  unsqueeze_4523 = None
    unsqueeze_4525: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4524, 3);  unsqueeze_4524 = None
    sum_538: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_226, [0, 2, 3])
    sub_1389: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_58, unsqueeze_4525)
    mul_4793: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_226, sub_1389);  sub_1389 = None
    sum_539: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4793, [0, 2, 3]);  mul_4793 = None
    mul_4794: "f32[72]" = torch.ops.aten.mul.Tensor(sum_538, 0.0006377551020408163)
    unsqueeze_4526: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4794, 0);  mul_4794 = None
    unsqueeze_4527: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4526, 2);  unsqueeze_4526 = None
    unsqueeze_4528: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4527, 3);  unsqueeze_4527 = None
    mul_4795: "f32[72]" = torch.ops.aten.mul.Tensor(sum_539, 0.0006377551020408163)
    mul_4796: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_175, squeeze_175)
    mul_4797: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4795, mul_4796);  mul_4795 = mul_4796 = None
    unsqueeze_4529: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4797, 0);  mul_4797 = None
    unsqueeze_4530: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4529, 2);  unsqueeze_4529 = None
    unsqueeze_4531: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4530, 3);  unsqueeze_4530 = None
    mul_4798: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_175, primals_176);  primals_176 = None
    unsqueeze_4532: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4798, 0);  mul_4798 = None
    unsqueeze_4533: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4532, 2);  unsqueeze_4532 = None
    unsqueeze_4534: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4533, 3);  unsqueeze_4533 = None
    sub_1390: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_58, unsqueeze_4525);  convolution_58 = unsqueeze_4525 = None
    mul_4799: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1390, unsqueeze_4531);  sub_1390 = unsqueeze_4531 = None
    sub_1391: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_226, mul_4799);  where_226 = mul_4799 = None
    sub_1392: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1391, unsqueeze_4528);  sub_1391 = unsqueeze_4528 = None
    mul_4800: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1392, unsqueeze_4534);  sub_1392 = unsqueeze_4534 = None
    mul_4801: "f32[72]" = torch.ops.aten.mul.Tensor(sum_539, squeeze_175);  sum_539 = squeeze_175 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_266 = torch.ops.aten.convolution_backward.default(mul_4800, relu_56, primals_175, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4800 = primals_175 = None
    getitem_1448: "f32[8, 72, 14, 14]" = convolution_backward_266[0]
    getitem_1449: "f32[72, 72, 3, 3]" = convolution_backward_266[1];  convolution_backward_266 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2075: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_225, getitem_1448);  where_225 = getitem_1448 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_886: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_56);  relu_56 = None
    alias_887: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_886);  alias_886 = None
    le_227: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_887, 0);  alias_887 = None
    scalar_tensor_227: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_227: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_227, scalar_tensor_227, add_2075);  le_227 = scalar_tensor_227 = add_2075 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4535: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_171, 0);  squeeze_171 = None
    unsqueeze_4536: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4535, 2);  unsqueeze_4535 = None
    unsqueeze_4537: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4536, 3);  unsqueeze_4536 = None
    sum_540: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_227, [0, 2, 3])
    sub_1393: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_57, unsqueeze_4537)
    mul_4802: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_227, sub_1393);  sub_1393 = None
    sum_541: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4802, [0, 2, 3]);  mul_4802 = None
    mul_4803: "f32[72]" = torch.ops.aten.mul.Tensor(sum_540, 0.0006377551020408163)
    unsqueeze_4538: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4803, 0);  mul_4803 = None
    unsqueeze_4539: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4538, 2);  unsqueeze_4538 = None
    unsqueeze_4540: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4539, 3);  unsqueeze_4539 = None
    mul_4804: "f32[72]" = torch.ops.aten.mul.Tensor(sum_541, 0.0006377551020408163)
    mul_4805: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_172, squeeze_172)
    mul_4806: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4804, mul_4805);  mul_4804 = mul_4805 = None
    unsqueeze_4541: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4806, 0);  mul_4806 = None
    unsqueeze_4542: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4541, 2);  unsqueeze_4541 = None
    unsqueeze_4543: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4542, 3);  unsqueeze_4542 = None
    mul_4807: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_172, primals_173);  primals_173 = None
    unsqueeze_4544: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4807, 0);  mul_4807 = None
    unsqueeze_4545: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4544, 2);  unsqueeze_4544 = None
    unsqueeze_4546: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4545, 3);  unsqueeze_4545 = None
    sub_1394: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_57, unsqueeze_4537);  convolution_57 = unsqueeze_4537 = None
    mul_4808: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1394, unsqueeze_4543);  sub_1394 = unsqueeze_4543 = None
    sub_1395: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_227, mul_4808);  mul_4808 = None
    sub_1396: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1395, unsqueeze_4540);  sub_1395 = unsqueeze_4540 = None
    mul_4809: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1396, unsqueeze_4546);  sub_1396 = unsqueeze_4546 = None
    mul_4810: "f32[72]" = torch.ops.aten.mul.Tensor(sum_541, squeeze_172);  sum_541 = squeeze_172 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_267 = torch.ops.aten.convolution_backward.default(mul_4809, relu_55, primals_172, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4809 = primals_172 = None
    getitem_1451: "f32[8, 72, 14, 14]" = convolution_backward_267[0]
    getitem_1452: "f32[72, 72, 3, 3]" = convolution_backward_267[1];  convolution_backward_267 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_889: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_55);  relu_55 = None
    alias_890: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_889);  alias_889 = None
    le_228: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_890, 0);  alias_890 = None
    scalar_tensor_228: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_228: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_228, scalar_tensor_228, getitem_1451);  le_228 = scalar_tensor_228 = getitem_1451 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4547: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_168, 0);  squeeze_168 = None
    unsqueeze_4548: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4547, 2);  unsqueeze_4547 = None
    unsqueeze_4549: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4548, 3);  unsqueeze_4548 = None
    sum_542: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_228, [0, 2, 3])
    sub_1397: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_56, unsqueeze_4549)
    mul_4811: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_228, sub_1397);  sub_1397 = None
    sum_543: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4811, [0, 2, 3]);  mul_4811 = None
    mul_4812: "f32[72]" = torch.ops.aten.mul.Tensor(sum_542, 0.0006377551020408163)
    unsqueeze_4550: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4812, 0);  mul_4812 = None
    unsqueeze_4551: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4550, 2);  unsqueeze_4550 = None
    unsqueeze_4552: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4551, 3);  unsqueeze_4551 = None
    mul_4813: "f32[72]" = torch.ops.aten.mul.Tensor(sum_543, 0.0006377551020408163)
    mul_4814: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_169, squeeze_169)
    mul_4815: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4813, mul_4814);  mul_4813 = mul_4814 = None
    unsqueeze_4553: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4815, 0);  mul_4815 = None
    unsqueeze_4554: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4553, 2);  unsqueeze_4553 = None
    unsqueeze_4555: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4554, 3);  unsqueeze_4554 = None
    mul_4816: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_169, primals_170);  primals_170 = None
    unsqueeze_4556: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4816, 0);  mul_4816 = None
    unsqueeze_4557: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4556, 2);  unsqueeze_4556 = None
    unsqueeze_4558: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4557, 3);  unsqueeze_4557 = None
    sub_1398: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_56, unsqueeze_4549);  convolution_56 = unsqueeze_4549 = None
    mul_4817: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1398, unsqueeze_4555);  sub_1398 = unsqueeze_4555 = None
    sub_1399: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_228, mul_4817);  where_228 = mul_4817 = None
    sub_1400: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1399, unsqueeze_4552);  sub_1399 = unsqueeze_4552 = None
    mul_4818: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1400, unsqueeze_4558);  sub_1400 = unsqueeze_4558 = None
    mul_4819: "f32[72]" = torch.ops.aten.mul.Tensor(sum_543, squeeze_169);  sum_543 = squeeze_169 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_268 = torch.ops.aten.convolution_backward.default(mul_4818, relu_54, primals_169, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4818 = primals_169 = None
    getitem_1454: "f32[8, 72, 14, 14]" = convolution_backward_268[0]
    getitem_1455: "f32[72, 72, 3, 3]" = convolution_backward_268[1];  convolution_backward_268 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2076: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_227, getitem_1454);  where_227 = getitem_1454 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_892: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_54);  relu_54 = None
    alias_893: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_892);  alias_892 = None
    le_229: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_893, 0);  alias_893 = None
    scalar_tensor_229: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_229: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_229, scalar_tensor_229, add_2076);  le_229 = scalar_tensor_229 = add_2076 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4559: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_165, 0);  squeeze_165 = None
    unsqueeze_4560: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4559, 2);  unsqueeze_4559 = None
    unsqueeze_4561: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4560, 3);  unsqueeze_4560 = None
    sum_544: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_229, [0, 2, 3])
    sub_1401: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_55, unsqueeze_4561)
    mul_4820: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_229, sub_1401);  sub_1401 = None
    sum_545: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4820, [0, 2, 3]);  mul_4820 = None
    mul_4821: "f32[72]" = torch.ops.aten.mul.Tensor(sum_544, 0.0006377551020408163)
    unsqueeze_4562: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4821, 0);  mul_4821 = None
    unsqueeze_4563: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4562, 2);  unsqueeze_4562 = None
    unsqueeze_4564: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4563, 3);  unsqueeze_4563 = None
    mul_4822: "f32[72]" = torch.ops.aten.mul.Tensor(sum_545, 0.0006377551020408163)
    mul_4823: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_166, squeeze_166)
    mul_4824: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4822, mul_4823);  mul_4822 = mul_4823 = None
    unsqueeze_4565: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4824, 0);  mul_4824 = None
    unsqueeze_4566: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4565, 2);  unsqueeze_4565 = None
    unsqueeze_4567: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4566, 3);  unsqueeze_4566 = None
    mul_4825: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_166, primals_167);  primals_167 = None
    unsqueeze_4568: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4825, 0);  mul_4825 = None
    unsqueeze_4569: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4568, 2);  unsqueeze_4568 = None
    unsqueeze_4570: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4569, 3);  unsqueeze_4569 = None
    sub_1402: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_55, unsqueeze_4561);  convolution_55 = unsqueeze_4561 = None
    mul_4826: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1402, unsqueeze_4567);  sub_1402 = unsqueeze_4567 = None
    sub_1403: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_229, mul_4826);  mul_4826 = None
    sub_1404: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1403, unsqueeze_4564);  sub_1403 = unsqueeze_4564 = None
    mul_4827: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1404, unsqueeze_4570);  sub_1404 = unsqueeze_4570 = None
    mul_4828: "f32[72]" = torch.ops.aten.mul.Tensor(sum_545, squeeze_166);  sum_545 = squeeze_166 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_269 = torch.ops.aten.convolution_backward.default(mul_4827, relu_53, primals_166, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4827 = primals_166 = None
    getitem_1457: "f32[8, 72, 14, 14]" = convolution_backward_269[0]
    getitem_1458: "f32[72, 72, 3, 3]" = convolution_backward_269[1];  convolution_backward_269 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_895: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_53);  relu_53 = None
    alias_896: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_895);  alias_895 = None
    le_230: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_896, 0);  alias_896 = None
    scalar_tensor_230: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_230: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_230, scalar_tensor_230, getitem_1457);  le_230 = scalar_tensor_230 = getitem_1457 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4571: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_162, 0);  squeeze_162 = None
    unsqueeze_4572: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4571, 2);  unsqueeze_4571 = None
    unsqueeze_4573: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4572, 3);  unsqueeze_4572 = None
    sum_546: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_230, [0, 2, 3])
    sub_1405: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_54, unsqueeze_4573)
    mul_4829: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_230, sub_1405);  sub_1405 = None
    sum_547: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4829, [0, 2, 3]);  mul_4829 = None
    mul_4830: "f32[72]" = torch.ops.aten.mul.Tensor(sum_546, 0.0006377551020408163)
    unsqueeze_4574: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4830, 0);  mul_4830 = None
    unsqueeze_4575: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4574, 2);  unsqueeze_4574 = None
    unsqueeze_4576: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4575, 3);  unsqueeze_4575 = None
    mul_4831: "f32[72]" = torch.ops.aten.mul.Tensor(sum_547, 0.0006377551020408163)
    mul_4832: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_163, squeeze_163)
    mul_4833: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4831, mul_4832);  mul_4831 = mul_4832 = None
    unsqueeze_4577: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4833, 0);  mul_4833 = None
    unsqueeze_4578: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4577, 2);  unsqueeze_4577 = None
    unsqueeze_4579: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4578, 3);  unsqueeze_4578 = None
    mul_4834: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_163, primals_164);  primals_164 = None
    unsqueeze_4580: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4834, 0);  mul_4834 = None
    unsqueeze_4581: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4580, 2);  unsqueeze_4580 = None
    unsqueeze_4582: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4581, 3);  unsqueeze_4581 = None
    sub_1406: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_54, unsqueeze_4573);  convolution_54 = unsqueeze_4573 = None
    mul_4835: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1406, unsqueeze_4579);  sub_1406 = unsqueeze_4579 = None
    sub_1407: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_230, mul_4835);  where_230 = mul_4835 = None
    sub_1408: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1407, unsqueeze_4576);  sub_1407 = unsqueeze_4576 = None
    mul_4836: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1408, unsqueeze_4582);  sub_1408 = unsqueeze_4582 = None
    mul_4837: "f32[72]" = torch.ops.aten.mul.Tensor(sum_547, squeeze_163);  sum_547 = squeeze_163 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_270 = torch.ops.aten.convolution_backward.default(mul_4836, relu_52, primals_163, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4836 = primals_163 = None
    getitem_1460: "f32[8, 72, 14, 14]" = convolution_backward_270[0]
    getitem_1461: "f32[72, 72, 3, 3]" = convolution_backward_270[1];  convolution_backward_270 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2077: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_229, getitem_1460);  where_229 = getitem_1460 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_898: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_52);  relu_52 = None
    alias_899: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_898);  alias_898 = None
    le_231: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_899, 0);  alias_899 = None
    scalar_tensor_231: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_231: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_231, scalar_tensor_231, add_2077);  le_231 = scalar_tensor_231 = add_2077 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4583: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_159, 0);  squeeze_159 = None
    unsqueeze_4584: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4583, 2);  unsqueeze_4583 = None
    unsqueeze_4585: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4584, 3);  unsqueeze_4584 = None
    sum_548: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_231, [0, 2, 3])
    sub_1409: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_53, unsqueeze_4585)
    mul_4838: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_231, sub_1409);  sub_1409 = None
    sum_549: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4838, [0, 2, 3]);  mul_4838 = None
    mul_4839: "f32[72]" = torch.ops.aten.mul.Tensor(sum_548, 0.0006377551020408163)
    unsqueeze_4586: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4839, 0);  mul_4839 = None
    unsqueeze_4587: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4586, 2);  unsqueeze_4586 = None
    unsqueeze_4588: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4587, 3);  unsqueeze_4587 = None
    mul_4840: "f32[72]" = torch.ops.aten.mul.Tensor(sum_549, 0.0006377551020408163)
    mul_4841: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_160, squeeze_160)
    mul_4842: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4840, mul_4841);  mul_4840 = mul_4841 = None
    unsqueeze_4589: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4842, 0);  mul_4842 = None
    unsqueeze_4590: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4589, 2);  unsqueeze_4589 = None
    unsqueeze_4591: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4590, 3);  unsqueeze_4590 = None
    mul_4843: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_160, primals_161);  primals_161 = None
    unsqueeze_4592: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4843, 0);  mul_4843 = None
    unsqueeze_4593: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4592, 2);  unsqueeze_4592 = None
    unsqueeze_4594: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4593, 3);  unsqueeze_4593 = None
    sub_1410: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_53, unsqueeze_4585);  convolution_53 = unsqueeze_4585 = None
    mul_4844: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1410, unsqueeze_4591);  sub_1410 = unsqueeze_4591 = None
    sub_1411: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_231, mul_4844);  mul_4844 = None
    sub_1412: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1411, unsqueeze_4588);  sub_1411 = unsqueeze_4588 = None
    mul_4845: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1412, unsqueeze_4594);  sub_1412 = unsqueeze_4594 = None
    mul_4846: "f32[72]" = torch.ops.aten.mul.Tensor(sum_549, squeeze_160);  sum_549 = squeeze_160 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_271 = torch.ops.aten.convolution_backward.default(mul_4845, relu_51, primals_160, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4845 = primals_160 = None
    getitem_1463: "f32[8, 72, 14, 14]" = convolution_backward_271[0]
    getitem_1464: "f32[72, 72, 3, 3]" = convolution_backward_271[1];  convolution_backward_271 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_901: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_51);  relu_51 = None
    alias_902: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_901);  alias_901 = None
    le_232: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_902, 0);  alias_902 = None
    scalar_tensor_232: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_232: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_232, scalar_tensor_232, getitem_1463);  le_232 = scalar_tensor_232 = getitem_1463 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4595: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_156, 0);  squeeze_156 = None
    unsqueeze_4596: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4595, 2);  unsqueeze_4595 = None
    unsqueeze_4597: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4596, 3);  unsqueeze_4596 = None
    sum_550: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_232, [0, 2, 3])
    sub_1413: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_52, unsqueeze_4597)
    mul_4847: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_232, sub_1413);  sub_1413 = None
    sum_551: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_4847, [0, 2, 3]);  mul_4847 = None
    mul_4848: "f32[72]" = torch.ops.aten.mul.Tensor(sum_550, 0.0006377551020408163)
    unsqueeze_4598: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4848, 0);  mul_4848 = None
    unsqueeze_4599: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4598, 2);  unsqueeze_4598 = None
    unsqueeze_4600: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4599, 3);  unsqueeze_4599 = None
    mul_4849: "f32[72]" = torch.ops.aten.mul.Tensor(sum_551, 0.0006377551020408163)
    mul_4850: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_157, squeeze_157)
    mul_4851: "f32[72]" = torch.ops.aten.mul.Tensor(mul_4849, mul_4850);  mul_4849 = mul_4850 = None
    unsqueeze_4601: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4851, 0);  mul_4851 = None
    unsqueeze_4602: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4601, 2);  unsqueeze_4601 = None
    unsqueeze_4603: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4602, 3);  unsqueeze_4602 = None
    mul_4852: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_157, primals_158);  primals_158 = None
    unsqueeze_4604: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_4852, 0);  mul_4852 = None
    unsqueeze_4605: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4604, 2);  unsqueeze_4604 = None
    unsqueeze_4606: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4605, 3);  unsqueeze_4605 = None
    sub_1414: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_52, unsqueeze_4597);  convolution_52 = unsqueeze_4597 = None
    mul_4853: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1414, unsqueeze_4603);  sub_1414 = unsqueeze_4603 = None
    sub_1415: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_232, mul_4853);  where_232 = mul_4853 = None
    sub_1416: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1415, unsqueeze_4600);  sub_1415 = unsqueeze_4600 = None
    mul_4854: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1416, unsqueeze_4606);  sub_1416 = unsqueeze_4606 = None
    mul_4855: "f32[72]" = torch.ops.aten.mul.Tensor(sum_551, squeeze_157);  sum_551 = squeeze_157 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_272 = torch.ops.aten.convolution_backward.default(mul_4854, relu_34, primals_157, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4854 = primals_157 = None
    getitem_1466: "f32[8, 72, 14, 14]" = convolution_backward_272[0]
    getitem_1467: "f32[72, 72, 3, 3]" = convolution_backward_272[1];  convolution_backward_272 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2078: "f32[8, 72, 14, 14]" = torch.ops.aten.add.Tensor(where_231, getitem_1466);  where_231 = getitem_1466 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_904: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_50);  relu_50 = None
    alias_905: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_904);  alias_904 = None
    le_233: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_905, 0);  alias_905 = None
    scalar_tensor_233: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_233: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_233, scalar_tensor_233, add_2074);  le_233 = scalar_tensor_233 = add_2074 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4607: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_153, 0);  squeeze_153 = None
    unsqueeze_4608: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4607, 2);  unsqueeze_4607 = None
    unsqueeze_4609: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4608, 3);  unsqueeze_4608 = None
    sum_552: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_233, [0, 2, 3])
    sub_1417: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_51, unsqueeze_4609)
    mul_4856: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_233, sub_1417);  sub_1417 = None
    sum_553: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4856, [0, 2, 3]);  mul_4856 = None
    mul_4857: "f32[36]" = torch.ops.aten.mul.Tensor(sum_552, 0.00015943877551020407)
    unsqueeze_4610: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4857, 0);  mul_4857 = None
    unsqueeze_4611: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4610, 2);  unsqueeze_4610 = None
    unsqueeze_4612: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4611, 3);  unsqueeze_4611 = None
    mul_4858: "f32[36]" = torch.ops.aten.mul.Tensor(sum_553, 0.00015943877551020407)
    mul_4859: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_154, squeeze_154)
    mul_4860: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4858, mul_4859);  mul_4858 = mul_4859 = None
    unsqueeze_4613: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4860, 0);  mul_4860 = None
    unsqueeze_4614: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4613, 2);  unsqueeze_4613 = None
    unsqueeze_4615: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4614, 3);  unsqueeze_4614 = None
    mul_4861: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_154, primals_155);  primals_155 = None
    unsqueeze_4616: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4861, 0);  mul_4861 = None
    unsqueeze_4617: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4616, 2);  unsqueeze_4616 = None
    unsqueeze_4618: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4617, 3);  unsqueeze_4617 = None
    sub_1418: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_51, unsqueeze_4609);  convolution_51 = unsqueeze_4609 = None
    mul_4862: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1418, unsqueeze_4615);  sub_1418 = unsqueeze_4615 = None
    sub_1419: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_233, mul_4862);  mul_4862 = None
    sub_1420: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1419, unsqueeze_4612);  sub_1419 = unsqueeze_4612 = None
    mul_4863: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1420, unsqueeze_4618);  sub_1420 = unsqueeze_4618 = None
    mul_4864: "f32[36]" = torch.ops.aten.mul.Tensor(sum_553, squeeze_154);  sum_553 = squeeze_154 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_273 = torch.ops.aten.convolution_backward.default(mul_4863, relu_49, primals_154, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4863 = primals_154 = None
    getitem_1469: "f32[8, 36, 28, 28]" = convolution_backward_273[0]
    getitem_1470: "f32[36, 36, 3, 3]" = convolution_backward_273[1];  convolution_backward_273 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_907: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_49);  relu_49 = None
    alias_908: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_907);  alias_907 = None
    le_234: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_908, 0);  alias_908 = None
    scalar_tensor_234: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_234: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_234, scalar_tensor_234, getitem_1469);  le_234 = scalar_tensor_234 = getitem_1469 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4619: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_150, 0);  squeeze_150 = None
    unsqueeze_4620: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4619, 2);  unsqueeze_4619 = None
    unsqueeze_4621: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4620, 3);  unsqueeze_4620 = None
    sum_554: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_234, [0, 2, 3])
    sub_1421: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_50, unsqueeze_4621)
    mul_4865: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_234, sub_1421);  sub_1421 = None
    sum_555: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4865, [0, 2, 3]);  mul_4865 = None
    mul_4866: "f32[36]" = torch.ops.aten.mul.Tensor(sum_554, 0.00015943877551020407)
    unsqueeze_4622: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4866, 0);  mul_4866 = None
    unsqueeze_4623: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4622, 2);  unsqueeze_4622 = None
    unsqueeze_4624: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4623, 3);  unsqueeze_4623 = None
    mul_4867: "f32[36]" = torch.ops.aten.mul.Tensor(sum_555, 0.00015943877551020407)
    mul_4868: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_151, squeeze_151)
    mul_4869: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4867, mul_4868);  mul_4867 = mul_4868 = None
    unsqueeze_4625: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4869, 0);  mul_4869 = None
    unsqueeze_4626: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4625, 2);  unsqueeze_4625 = None
    unsqueeze_4627: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4626, 3);  unsqueeze_4626 = None
    mul_4870: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_151, primals_152);  primals_152 = None
    unsqueeze_4628: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4870, 0);  mul_4870 = None
    unsqueeze_4629: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4628, 2);  unsqueeze_4628 = None
    unsqueeze_4630: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4629, 3);  unsqueeze_4629 = None
    sub_1422: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_50, unsqueeze_4621);  convolution_50 = unsqueeze_4621 = None
    mul_4871: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1422, unsqueeze_4627);  sub_1422 = unsqueeze_4627 = None
    sub_1423: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_234, mul_4871);  where_234 = mul_4871 = None
    sub_1424: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1423, unsqueeze_4624);  sub_1423 = unsqueeze_4624 = None
    mul_4872: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1424, unsqueeze_4630);  sub_1424 = unsqueeze_4630 = None
    mul_4873: "f32[36]" = torch.ops.aten.mul.Tensor(sum_555, squeeze_151);  sum_555 = squeeze_151 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_274 = torch.ops.aten.convolution_backward.default(mul_4872, relu_48, primals_151, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4872 = primals_151 = None
    getitem_1472: "f32[8, 36, 28, 28]" = convolution_backward_274[0]
    getitem_1473: "f32[36, 36, 3, 3]" = convolution_backward_274[1];  convolution_backward_274 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2079: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_233, getitem_1472);  where_233 = getitem_1472 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_910: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_48);  relu_48 = None
    alias_911: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_910);  alias_910 = None
    le_235: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_911, 0);  alias_911 = None
    scalar_tensor_235: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_235: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_235, scalar_tensor_235, add_2079);  le_235 = scalar_tensor_235 = add_2079 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4631: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_147, 0);  squeeze_147 = None
    unsqueeze_4632: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4631, 2);  unsqueeze_4631 = None
    unsqueeze_4633: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4632, 3);  unsqueeze_4632 = None
    sum_556: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_235, [0, 2, 3])
    sub_1425: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_49, unsqueeze_4633)
    mul_4874: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_235, sub_1425);  sub_1425 = None
    sum_557: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4874, [0, 2, 3]);  mul_4874 = None
    mul_4875: "f32[36]" = torch.ops.aten.mul.Tensor(sum_556, 0.00015943877551020407)
    unsqueeze_4634: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4875, 0);  mul_4875 = None
    unsqueeze_4635: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4634, 2);  unsqueeze_4634 = None
    unsqueeze_4636: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4635, 3);  unsqueeze_4635 = None
    mul_4876: "f32[36]" = torch.ops.aten.mul.Tensor(sum_557, 0.00015943877551020407)
    mul_4877: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_148, squeeze_148)
    mul_4878: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4876, mul_4877);  mul_4876 = mul_4877 = None
    unsqueeze_4637: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4878, 0);  mul_4878 = None
    unsqueeze_4638: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4637, 2);  unsqueeze_4637 = None
    unsqueeze_4639: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4638, 3);  unsqueeze_4638 = None
    mul_4879: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_148, primals_149);  primals_149 = None
    unsqueeze_4640: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4879, 0);  mul_4879 = None
    unsqueeze_4641: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4640, 2);  unsqueeze_4640 = None
    unsqueeze_4642: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4641, 3);  unsqueeze_4641 = None
    sub_1426: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_49, unsqueeze_4633);  convolution_49 = unsqueeze_4633 = None
    mul_4880: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1426, unsqueeze_4639);  sub_1426 = unsqueeze_4639 = None
    sub_1427: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_235, mul_4880);  mul_4880 = None
    sub_1428: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1427, unsqueeze_4636);  sub_1427 = unsqueeze_4636 = None
    mul_4881: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1428, unsqueeze_4642);  sub_1428 = unsqueeze_4642 = None
    mul_4882: "f32[36]" = torch.ops.aten.mul.Tensor(sum_557, squeeze_148);  sum_557 = squeeze_148 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_275 = torch.ops.aten.convolution_backward.default(mul_4881, relu_47, primals_148, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4881 = primals_148 = None
    getitem_1475: "f32[8, 36, 28, 28]" = convolution_backward_275[0]
    getitem_1476: "f32[36, 36, 3, 3]" = convolution_backward_275[1];  convolution_backward_275 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_913: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_47);  relu_47 = None
    alias_914: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_913);  alias_913 = None
    le_236: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_914, 0);  alias_914 = None
    scalar_tensor_236: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_236: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_236, scalar_tensor_236, getitem_1475);  le_236 = scalar_tensor_236 = getitem_1475 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4643: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_144, 0);  squeeze_144 = None
    unsqueeze_4644: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4643, 2);  unsqueeze_4643 = None
    unsqueeze_4645: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4644, 3);  unsqueeze_4644 = None
    sum_558: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_236, [0, 2, 3])
    sub_1429: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_48, unsqueeze_4645)
    mul_4883: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_236, sub_1429);  sub_1429 = None
    sum_559: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4883, [0, 2, 3]);  mul_4883 = None
    mul_4884: "f32[36]" = torch.ops.aten.mul.Tensor(sum_558, 0.00015943877551020407)
    unsqueeze_4646: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4884, 0);  mul_4884 = None
    unsqueeze_4647: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4646, 2);  unsqueeze_4646 = None
    unsqueeze_4648: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4647, 3);  unsqueeze_4647 = None
    mul_4885: "f32[36]" = torch.ops.aten.mul.Tensor(sum_559, 0.00015943877551020407)
    mul_4886: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_145, squeeze_145)
    mul_4887: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4885, mul_4886);  mul_4885 = mul_4886 = None
    unsqueeze_4649: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4887, 0);  mul_4887 = None
    unsqueeze_4650: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4649, 2);  unsqueeze_4649 = None
    unsqueeze_4651: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4650, 3);  unsqueeze_4650 = None
    mul_4888: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_145, primals_146);  primals_146 = None
    unsqueeze_4652: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4888, 0);  mul_4888 = None
    unsqueeze_4653: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4652, 2);  unsqueeze_4652 = None
    unsqueeze_4654: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4653, 3);  unsqueeze_4653 = None
    sub_1430: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_48, unsqueeze_4645);  convolution_48 = unsqueeze_4645 = None
    mul_4889: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1430, unsqueeze_4651);  sub_1430 = unsqueeze_4651 = None
    sub_1431: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_236, mul_4889);  where_236 = mul_4889 = None
    sub_1432: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1431, unsqueeze_4648);  sub_1431 = unsqueeze_4648 = None
    mul_4890: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1432, unsqueeze_4654);  sub_1432 = unsqueeze_4654 = None
    mul_4891: "f32[36]" = torch.ops.aten.mul.Tensor(sum_559, squeeze_145);  sum_559 = squeeze_145 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_276 = torch.ops.aten.convolution_backward.default(mul_4890, relu_46, primals_145, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4890 = primals_145 = None
    getitem_1478: "f32[8, 36, 28, 28]" = convolution_backward_276[0]
    getitem_1479: "f32[36, 36, 3, 3]" = convolution_backward_276[1];  convolution_backward_276 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2080: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_235, getitem_1478);  where_235 = getitem_1478 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_916: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_46);  relu_46 = None
    alias_917: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_916);  alias_916 = None
    le_237: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_917, 0);  alias_917 = None
    scalar_tensor_237: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_237: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_237, scalar_tensor_237, add_2080);  le_237 = scalar_tensor_237 = add_2080 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4655: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_141, 0);  squeeze_141 = None
    unsqueeze_4656: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4655, 2);  unsqueeze_4655 = None
    unsqueeze_4657: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4656, 3);  unsqueeze_4656 = None
    sum_560: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_237, [0, 2, 3])
    sub_1433: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_47, unsqueeze_4657)
    mul_4892: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_237, sub_1433);  sub_1433 = None
    sum_561: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4892, [0, 2, 3]);  mul_4892 = None
    mul_4893: "f32[36]" = torch.ops.aten.mul.Tensor(sum_560, 0.00015943877551020407)
    unsqueeze_4658: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4893, 0);  mul_4893 = None
    unsqueeze_4659: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4658, 2);  unsqueeze_4658 = None
    unsqueeze_4660: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4659, 3);  unsqueeze_4659 = None
    mul_4894: "f32[36]" = torch.ops.aten.mul.Tensor(sum_561, 0.00015943877551020407)
    mul_4895: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_142, squeeze_142)
    mul_4896: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4894, mul_4895);  mul_4894 = mul_4895 = None
    unsqueeze_4661: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4896, 0);  mul_4896 = None
    unsqueeze_4662: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4661, 2);  unsqueeze_4661 = None
    unsqueeze_4663: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4662, 3);  unsqueeze_4662 = None
    mul_4897: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_142, primals_143);  primals_143 = None
    unsqueeze_4664: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4897, 0);  mul_4897 = None
    unsqueeze_4665: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4664, 2);  unsqueeze_4664 = None
    unsqueeze_4666: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4665, 3);  unsqueeze_4665 = None
    sub_1434: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_47, unsqueeze_4657);  convolution_47 = unsqueeze_4657 = None
    mul_4898: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1434, unsqueeze_4663);  sub_1434 = unsqueeze_4663 = None
    sub_1435: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_237, mul_4898);  mul_4898 = None
    sub_1436: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1435, unsqueeze_4660);  sub_1435 = unsqueeze_4660 = None
    mul_4899: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1436, unsqueeze_4666);  sub_1436 = unsqueeze_4666 = None
    mul_4900: "f32[36]" = torch.ops.aten.mul.Tensor(sum_561, squeeze_142);  sum_561 = squeeze_142 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_277 = torch.ops.aten.convolution_backward.default(mul_4899, relu_45, primals_142, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4899 = primals_142 = None
    getitem_1481: "f32[8, 36, 28, 28]" = convolution_backward_277[0]
    getitem_1482: "f32[36, 36, 3, 3]" = convolution_backward_277[1];  convolution_backward_277 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_919: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_45);  relu_45 = None
    alias_920: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_919);  alias_919 = None
    le_238: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_920, 0);  alias_920 = None
    scalar_tensor_238: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_238: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_238, scalar_tensor_238, getitem_1481);  le_238 = scalar_tensor_238 = getitem_1481 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4667: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_138, 0);  squeeze_138 = None
    unsqueeze_4668: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4667, 2);  unsqueeze_4667 = None
    unsqueeze_4669: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4668, 3);  unsqueeze_4668 = None
    sum_562: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_238, [0, 2, 3])
    sub_1437: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_46, unsqueeze_4669)
    mul_4901: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_238, sub_1437);  sub_1437 = None
    sum_563: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4901, [0, 2, 3]);  mul_4901 = None
    mul_4902: "f32[36]" = torch.ops.aten.mul.Tensor(sum_562, 0.00015943877551020407)
    unsqueeze_4670: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4902, 0);  mul_4902 = None
    unsqueeze_4671: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4670, 2);  unsqueeze_4670 = None
    unsqueeze_4672: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4671, 3);  unsqueeze_4671 = None
    mul_4903: "f32[36]" = torch.ops.aten.mul.Tensor(sum_563, 0.00015943877551020407)
    mul_4904: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_139, squeeze_139)
    mul_4905: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4903, mul_4904);  mul_4903 = mul_4904 = None
    unsqueeze_4673: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4905, 0);  mul_4905 = None
    unsqueeze_4674: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4673, 2);  unsqueeze_4673 = None
    unsqueeze_4675: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4674, 3);  unsqueeze_4674 = None
    mul_4906: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_139, primals_140);  primals_140 = None
    unsqueeze_4676: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4906, 0);  mul_4906 = None
    unsqueeze_4677: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4676, 2);  unsqueeze_4676 = None
    unsqueeze_4678: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4677, 3);  unsqueeze_4677 = None
    sub_1438: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_46, unsqueeze_4669);  convolution_46 = unsqueeze_4669 = None
    mul_4907: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1438, unsqueeze_4675);  sub_1438 = unsqueeze_4675 = None
    sub_1439: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_238, mul_4907);  where_238 = mul_4907 = None
    sub_1440: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1439, unsqueeze_4672);  sub_1439 = unsqueeze_4672 = None
    mul_4908: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1440, unsqueeze_4678);  sub_1440 = unsqueeze_4678 = None
    mul_4909: "f32[36]" = torch.ops.aten.mul.Tensor(sum_563, squeeze_139);  sum_563 = squeeze_139 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_278 = torch.ops.aten.convolution_backward.default(mul_4908, relu_44, primals_139, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4908 = primals_139 = None
    getitem_1484: "f32[8, 36, 28, 28]" = convolution_backward_278[0]
    getitem_1485: "f32[36, 36, 3, 3]" = convolution_backward_278[1];  convolution_backward_278 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2081: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_237, getitem_1484);  where_237 = getitem_1484 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_922: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_44);  relu_44 = None
    alias_923: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_922);  alias_922 = None
    le_239: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_923, 0);  alias_923 = None
    scalar_tensor_239: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_239: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_239, scalar_tensor_239, add_2081);  le_239 = scalar_tensor_239 = add_2081 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4679: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_135, 0);  squeeze_135 = None
    unsqueeze_4680: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4679, 2);  unsqueeze_4679 = None
    unsqueeze_4681: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4680, 3);  unsqueeze_4680 = None
    sum_564: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_239, [0, 2, 3])
    sub_1441: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_45, unsqueeze_4681)
    mul_4910: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_239, sub_1441);  sub_1441 = None
    sum_565: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4910, [0, 2, 3]);  mul_4910 = None
    mul_4911: "f32[36]" = torch.ops.aten.mul.Tensor(sum_564, 0.00015943877551020407)
    unsqueeze_4682: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4911, 0);  mul_4911 = None
    unsqueeze_4683: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4682, 2);  unsqueeze_4682 = None
    unsqueeze_4684: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4683, 3);  unsqueeze_4683 = None
    mul_4912: "f32[36]" = torch.ops.aten.mul.Tensor(sum_565, 0.00015943877551020407)
    mul_4913: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_136, squeeze_136)
    mul_4914: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4912, mul_4913);  mul_4912 = mul_4913 = None
    unsqueeze_4685: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4914, 0);  mul_4914 = None
    unsqueeze_4686: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4685, 2);  unsqueeze_4685 = None
    unsqueeze_4687: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4686, 3);  unsqueeze_4686 = None
    mul_4915: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_136, primals_137);  primals_137 = None
    unsqueeze_4688: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4915, 0);  mul_4915 = None
    unsqueeze_4689: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4688, 2);  unsqueeze_4688 = None
    unsqueeze_4690: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4689, 3);  unsqueeze_4689 = None
    sub_1442: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_45, unsqueeze_4681);  convolution_45 = unsqueeze_4681 = None
    mul_4916: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1442, unsqueeze_4687);  sub_1442 = unsqueeze_4687 = None
    sub_1443: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_239, mul_4916);  mul_4916 = None
    sub_1444: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1443, unsqueeze_4684);  sub_1443 = unsqueeze_4684 = None
    mul_4917: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1444, unsqueeze_4690);  sub_1444 = unsqueeze_4690 = None
    mul_4918: "f32[36]" = torch.ops.aten.mul.Tensor(sum_565, squeeze_136);  sum_565 = squeeze_136 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_279 = torch.ops.aten.convolution_backward.default(mul_4917, relu_43, primals_136, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4917 = primals_136 = None
    getitem_1487: "f32[8, 36, 28, 28]" = convolution_backward_279[0]
    getitem_1488: "f32[36, 36, 3, 3]" = convolution_backward_279[1];  convolution_backward_279 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_925: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_43);  relu_43 = None
    alias_926: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_925);  alias_925 = None
    le_240: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_926, 0);  alias_926 = None
    scalar_tensor_240: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_240: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_240, scalar_tensor_240, getitem_1487);  le_240 = scalar_tensor_240 = getitem_1487 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4691: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_132, 0);  squeeze_132 = None
    unsqueeze_4692: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4691, 2);  unsqueeze_4691 = None
    unsqueeze_4693: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4692, 3);  unsqueeze_4692 = None
    sum_566: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_240, [0, 2, 3])
    sub_1445: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_44, unsqueeze_4693)
    mul_4919: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_240, sub_1445);  sub_1445 = None
    sum_567: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_4919, [0, 2, 3]);  mul_4919 = None
    mul_4920: "f32[36]" = torch.ops.aten.mul.Tensor(sum_566, 0.00015943877551020407)
    unsqueeze_4694: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4920, 0);  mul_4920 = None
    unsqueeze_4695: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4694, 2);  unsqueeze_4694 = None
    unsqueeze_4696: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4695, 3);  unsqueeze_4695 = None
    mul_4921: "f32[36]" = torch.ops.aten.mul.Tensor(sum_567, 0.00015943877551020407)
    mul_4922: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_133, squeeze_133)
    mul_4923: "f32[36]" = torch.ops.aten.mul.Tensor(mul_4921, mul_4922);  mul_4921 = mul_4922 = None
    unsqueeze_4697: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4923, 0);  mul_4923 = None
    unsqueeze_4698: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4697, 2);  unsqueeze_4697 = None
    unsqueeze_4699: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4698, 3);  unsqueeze_4698 = None
    mul_4924: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_133, primals_134);  primals_134 = None
    unsqueeze_4700: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_4924, 0);  mul_4924 = None
    unsqueeze_4701: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4700, 2);  unsqueeze_4700 = None
    unsqueeze_4702: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4701, 3);  unsqueeze_4701 = None
    sub_1446: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_44, unsqueeze_4693);  convolution_44 = unsqueeze_4693 = None
    mul_4925: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1446, unsqueeze_4699);  sub_1446 = unsqueeze_4699 = None
    sub_1447: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_240, mul_4925);  where_240 = mul_4925 = None
    sub_1448: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1447, unsqueeze_4696);  sub_1447 = unsqueeze_4696 = None
    mul_4926: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1448, unsqueeze_4702);  sub_1448 = unsqueeze_4702 = None
    mul_4927: "f32[36]" = torch.ops.aten.mul.Tensor(sum_567, squeeze_133);  sum_567 = squeeze_133 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_280 = torch.ops.aten.convolution_backward.default(mul_4926, relu_33, primals_133, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4926 = primals_133 = None
    getitem_1490: "f32[8, 36, 28, 28]" = convolution_backward_280[0]
    getitem_1491: "f32[36, 36, 3, 3]" = convolution_backward_280[1];  convolution_backward_280 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2082: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_239, getitem_1490);  where_239 = getitem_1490 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_928: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_42);  relu_42 = None
    alias_929: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_928);  alias_928 = None
    le_241: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_929, 0);  alias_929 = None
    scalar_tensor_241: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_241: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_241, scalar_tensor_241, add_2073);  le_241 = scalar_tensor_241 = add_2073 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4703: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_129, 0);  squeeze_129 = None
    unsqueeze_4704: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4703, 2);  unsqueeze_4703 = None
    unsqueeze_4705: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4704, 3);  unsqueeze_4704 = None
    sum_568: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_241, [0, 2, 3])
    sub_1449: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_43, unsqueeze_4705)
    mul_4928: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_241, sub_1449);  sub_1449 = None
    sum_569: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4928, [0, 2, 3]);  mul_4928 = None
    mul_4929: "f32[18]" = torch.ops.aten.mul.Tensor(sum_568, 3.985969387755102e-05)
    unsqueeze_4706: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4929, 0);  mul_4929 = None
    unsqueeze_4707: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4706, 2);  unsqueeze_4706 = None
    unsqueeze_4708: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4707, 3);  unsqueeze_4707 = None
    mul_4930: "f32[18]" = torch.ops.aten.mul.Tensor(sum_569, 3.985969387755102e-05)
    mul_4931: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_130, squeeze_130)
    mul_4932: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4930, mul_4931);  mul_4930 = mul_4931 = None
    unsqueeze_4709: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4932, 0);  mul_4932 = None
    unsqueeze_4710: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4709, 2);  unsqueeze_4709 = None
    unsqueeze_4711: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4710, 3);  unsqueeze_4710 = None
    mul_4933: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_130, primals_131);  primals_131 = None
    unsqueeze_4712: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4933, 0);  mul_4933 = None
    unsqueeze_4713: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4712, 2);  unsqueeze_4712 = None
    unsqueeze_4714: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4713, 3);  unsqueeze_4713 = None
    sub_1450: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_43, unsqueeze_4705);  convolution_43 = unsqueeze_4705 = None
    mul_4934: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1450, unsqueeze_4711);  sub_1450 = unsqueeze_4711 = None
    sub_1451: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_241, mul_4934);  mul_4934 = None
    sub_1452: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1451, unsqueeze_4708);  sub_1451 = unsqueeze_4708 = None
    mul_4935: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1452, unsqueeze_4714);  sub_1452 = unsqueeze_4714 = None
    mul_4936: "f32[18]" = torch.ops.aten.mul.Tensor(sum_569, squeeze_130);  sum_569 = squeeze_130 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_281 = torch.ops.aten.convolution_backward.default(mul_4935, relu_41, primals_130, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4935 = primals_130 = None
    getitem_1493: "f32[8, 18, 56, 56]" = convolution_backward_281[0]
    getitem_1494: "f32[18, 18, 3, 3]" = convolution_backward_281[1];  convolution_backward_281 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_931: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_41);  relu_41 = None
    alias_932: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_931);  alias_931 = None
    le_242: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_932, 0);  alias_932 = None
    scalar_tensor_242: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_242: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_242, scalar_tensor_242, getitem_1493);  le_242 = scalar_tensor_242 = getitem_1493 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4715: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_126, 0);  squeeze_126 = None
    unsqueeze_4716: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4715, 2);  unsqueeze_4715 = None
    unsqueeze_4717: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4716, 3);  unsqueeze_4716 = None
    sum_570: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_242, [0, 2, 3])
    sub_1453: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_42, unsqueeze_4717)
    mul_4937: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_242, sub_1453);  sub_1453 = None
    sum_571: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4937, [0, 2, 3]);  mul_4937 = None
    mul_4938: "f32[18]" = torch.ops.aten.mul.Tensor(sum_570, 3.985969387755102e-05)
    unsqueeze_4718: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4938, 0);  mul_4938 = None
    unsqueeze_4719: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4718, 2);  unsqueeze_4718 = None
    unsqueeze_4720: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4719, 3);  unsqueeze_4719 = None
    mul_4939: "f32[18]" = torch.ops.aten.mul.Tensor(sum_571, 3.985969387755102e-05)
    mul_4940: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_127, squeeze_127)
    mul_4941: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4939, mul_4940);  mul_4939 = mul_4940 = None
    unsqueeze_4721: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4941, 0);  mul_4941 = None
    unsqueeze_4722: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4721, 2);  unsqueeze_4721 = None
    unsqueeze_4723: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4722, 3);  unsqueeze_4722 = None
    mul_4942: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_127, primals_128);  primals_128 = None
    unsqueeze_4724: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4942, 0);  mul_4942 = None
    unsqueeze_4725: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4724, 2);  unsqueeze_4724 = None
    unsqueeze_4726: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4725, 3);  unsqueeze_4725 = None
    sub_1454: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_42, unsqueeze_4717);  convolution_42 = unsqueeze_4717 = None
    mul_4943: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1454, unsqueeze_4723);  sub_1454 = unsqueeze_4723 = None
    sub_1455: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_242, mul_4943);  where_242 = mul_4943 = None
    sub_1456: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1455, unsqueeze_4720);  sub_1455 = unsqueeze_4720 = None
    mul_4944: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1456, unsqueeze_4726);  sub_1456 = unsqueeze_4726 = None
    mul_4945: "f32[18]" = torch.ops.aten.mul.Tensor(sum_571, squeeze_127);  sum_571 = squeeze_127 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_282 = torch.ops.aten.convolution_backward.default(mul_4944, relu_40, primals_127, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4944 = primals_127 = None
    getitem_1496: "f32[8, 18, 56, 56]" = convolution_backward_282[0]
    getitem_1497: "f32[18, 18, 3, 3]" = convolution_backward_282[1];  convolution_backward_282 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2083: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_241, getitem_1496);  where_241 = getitem_1496 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_934: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_40);  relu_40 = None
    alias_935: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_934);  alias_934 = None
    le_243: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_935, 0);  alias_935 = None
    scalar_tensor_243: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_243: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_243, scalar_tensor_243, add_2083);  le_243 = scalar_tensor_243 = add_2083 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4727: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_123, 0);  squeeze_123 = None
    unsqueeze_4728: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4727, 2);  unsqueeze_4727 = None
    unsqueeze_4729: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4728, 3);  unsqueeze_4728 = None
    sum_572: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_243, [0, 2, 3])
    sub_1457: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_41, unsqueeze_4729)
    mul_4946: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_243, sub_1457);  sub_1457 = None
    sum_573: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4946, [0, 2, 3]);  mul_4946 = None
    mul_4947: "f32[18]" = torch.ops.aten.mul.Tensor(sum_572, 3.985969387755102e-05)
    unsqueeze_4730: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4947, 0);  mul_4947 = None
    unsqueeze_4731: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4730, 2);  unsqueeze_4730 = None
    unsqueeze_4732: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4731, 3);  unsqueeze_4731 = None
    mul_4948: "f32[18]" = torch.ops.aten.mul.Tensor(sum_573, 3.985969387755102e-05)
    mul_4949: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_124, squeeze_124)
    mul_4950: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4948, mul_4949);  mul_4948 = mul_4949 = None
    unsqueeze_4733: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4950, 0);  mul_4950 = None
    unsqueeze_4734: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4733, 2);  unsqueeze_4733 = None
    unsqueeze_4735: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4734, 3);  unsqueeze_4734 = None
    mul_4951: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_124, primals_125);  primals_125 = None
    unsqueeze_4736: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4951, 0);  mul_4951 = None
    unsqueeze_4737: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4736, 2);  unsqueeze_4736 = None
    unsqueeze_4738: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4737, 3);  unsqueeze_4737 = None
    sub_1458: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_41, unsqueeze_4729);  convolution_41 = unsqueeze_4729 = None
    mul_4952: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1458, unsqueeze_4735);  sub_1458 = unsqueeze_4735 = None
    sub_1459: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_243, mul_4952);  mul_4952 = None
    sub_1460: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1459, unsqueeze_4732);  sub_1459 = unsqueeze_4732 = None
    mul_4953: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1460, unsqueeze_4738);  sub_1460 = unsqueeze_4738 = None
    mul_4954: "f32[18]" = torch.ops.aten.mul.Tensor(sum_573, squeeze_124);  sum_573 = squeeze_124 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_283 = torch.ops.aten.convolution_backward.default(mul_4953, relu_39, primals_124, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4953 = primals_124 = None
    getitem_1499: "f32[8, 18, 56, 56]" = convolution_backward_283[0]
    getitem_1500: "f32[18, 18, 3, 3]" = convolution_backward_283[1];  convolution_backward_283 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_937: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_39);  relu_39 = None
    alias_938: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_937);  alias_937 = None
    le_244: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_938, 0);  alias_938 = None
    scalar_tensor_244: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_244: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_244, scalar_tensor_244, getitem_1499);  le_244 = scalar_tensor_244 = getitem_1499 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4739: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_120, 0);  squeeze_120 = None
    unsqueeze_4740: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4739, 2);  unsqueeze_4739 = None
    unsqueeze_4741: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4740, 3);  unsqueeze_4740 = None
    sum_574: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_244, [0, 2, 3])
    sub_1461: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_40, unsqueeze_4741)
    mul_4955: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_244, sub_1461);  sub_1461 = None
    sum_575: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4955, [0, 2, 3]);  mul_4955 = None
    mul_4956: "f32[18]" = torch.ops.aten.mul.Tensor(sum_574, 3.985969387755102e-05)
    unsqueeze_4742: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4956, 0);  mul_4956 = None
    unsqueeze_4743: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4742, 2);  unsqueeze_4742 = None
    unsqueeze_4744: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4743, 3);  unsqueeze_4743 = None
    mul_4957: "f32[18]" = torch.ops.aten.mul.Tensor(sum_575, 3.985969387755102e-05)
    mul_4958: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_121, squeeze_121)
    mul_4959: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4957, mul_4958);  mul_4957 = mul_4958 = None
    unsqueeze_4745: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4959, 0);  mul_4959 = None
    unsqueeze_4746: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4745, 2);  unsqueeze_4745 = None
    unsqueeze_4747: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4746, 3);  unsqueeze_4746 = None
    mul_4960: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_121, primals_122);  primals_122 = None
    unsqueeze_4748: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4960, 0);  mul_4960 = None
    unsqueeze_4749: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4748, 2);  unsqueeze_4748 = None
    unsqueeze_4750: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4749, 3);  unsqueeze_4749 = None
    sub_1462: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_40, unsqueeze_4741);  convolution_40 = unsqueeze_4741 = None
    mul_4961: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1462, unsqueeze_4747);  sub_1462 = unsqueeze_4747 = None
    sub_1463: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_244, mul_4961);  where_244 = mul_4961 = None
    sub_1464: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1463, unsqueeze_4744);  sub_1463 = unsqueeze_4744 = None
    mul_4962: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1464, unsqueeze_4750);  sub_1464 = unsqueeze_4750 = None
    mul_4963: "f32[18]" = torch.ops.aten.mul.Tensor(sum_575, squeeze_121);  sum_575 = squeeze_121 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_284 = torch.ops.aten.convolution_backward.default(mul_4962, relu_38, primals_121, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4962 = primals_121 = None
    getitem_1502: "f32[8, 18, 56, 56]" = convolution_backward_284[0]
    getitem_1503: "f32[18, 18, 3, 3]" = convolution_backward_284[1];  convolution_backward_284 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2084: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_243, getitem_1502);  where_243 = getitem_1502 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_940: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_38);  relu_38 = None
    alias_941: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_940);  alias_940 = None
    le_245: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_941, 0);  alias_941 = None
    scalar_tensor_245: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_245: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_245, scalar_tensor_245, add_2084);  le_245 = scalar_tensor_245 = add_2084 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4751: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_117, 0);  squeeze_117 = None
    unsqueeze_4752: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4751, 2);  unsqueeze_4751 = None
    unsqueeze_4753: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4752, 3);  unsqueeze_4752 = None
    sum_576: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_245, [0, 2, 3])
    sub_1465: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_39, unsqueeze_4753)
    mul_4964: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_245, sub_1465);  sub_1465 = None
    sum_577: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4964, [0, 2, 3]);  mul_4964 = None
    mul_4965: "f32[18]" = torch.ops.aten.mul.Tensor(sum_576, 3.985969387755102e-05)
    unsqueeze_4754: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4965, 0);  mul_4965 = None
    unsqueeze_4755: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4754, 2);  unsqueeze_4754 = None
    unsqueeze_4756: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4755, 3);  unsqueeze_4755 = None
    mul_4966: "f32[18]" = torch.ops.aten.mul.Tensor(sum_577, 3.985969387755102e-05)
    mul_4967: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_118, squeeze_118)
    mul_4968: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4966, mul_4967);  mul_4966 = mul_4967 = None
    unsqueeze_4757: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4968, 0);  mul_4968 = None
    unsqueeze_4758: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4757, 2);  unsqueeze_4757 = None
    unsqueeze_4759: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4758, 3);  unsqueeze_4758 = None
    mul_4969: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_118, primals_119);  primals_119 = None
    unsqueeze_4760: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4969, 0);  mul_4969 = None
    unsqueeze_4761: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4760, 2);  unsqueeze_4760 = None
    unsqueeze_4762: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4761, 3);  unsqueeze_4761 = None
    sub_1466: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_39, unsqueeze_4753);  convolution_39 = unsqueeze_4753 = None
    mul_4970: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1466, unsqueeze_4759);  sub_1466 = unsqueeze_4759 = None
    sub_1467: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_245, mul_4970);  mul_4970 = None
    sub_1468: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1467, unsqueeze_4756);  sub_1467 = unsqueeze_4756 = None
    mul_4971: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1468, unsqueeze_4762);  sub_1468 = unsqueeze_4762 = None
    mul_4972: "f32[18]" = torch.ops.aten.mul.Tensor(sum_577, squeeze_118);  sum_577 = squeeze_118 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_285 = torch.ops.aten.convolution_backward.default(mul_4971, relu_37, primals_118, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4971 = primals_118 = None
    getitem_1505: "f32[8, 18, 56, 56]" = convolution_backward_285[0]
    getitem_1506: "f32[18, 18, 3, 3]" = convolution_backward_285[1];  convolution_backward_285 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_943: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_37);  relu_37 = None
    alias_944: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_943);  alias_943 = None
    le_246: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_944, 0);  alias_944 = None
    scalar_tensor_246: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_246: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_246, scalar_tensor_246, getitem_1505);  le_246 = scalar_tensor_246 = getitem_1505 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4763: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_114, 0);  squeeze_114 = None
    unsqueeze_4764: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4763, 2);  unsqueeze_4763 = None
    unsqueeze_4765: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4764, 3);  unsqueeze_4764 = None
    sum_578: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_246, [0, 2, 3])
    sub_1469: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_38, unsqueeze_4765)
    mul_4973: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_246, sub_1469);  sub_1469 = None
    sum_579: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4973, [0, 2, 3]);  mul_4973 = None
    mul_4974: "f32[18]" = torch.ops.aten.mul.Tensor(sum_578, 3.985969387755102e-05)
    unsqueeze_4766: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4974, 0);  mul_4974 = None
    unsqueeze_4767: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4766, 2);  unsqueeze_4766 = None
    unsqueeze_4768: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4767, 3);  unsqueeze_4767 = None
    mul_4975: "f32[18]" = torch.ops.aten.mul.Tensor(sum_579, 3.985969387755102e-05)
    mul_4976: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_115, squeeze_115)
    mul_4977: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4975, mul_4976);  mul_4975 = mul_4976 = None
    unsqueeze_4769: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4977, 0);  mul_4977 = None
    unsqueeze_4770: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4769, 2);  unsqueeze_4769 = None
    unsqueeze_4771: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4770, 3);  unsqueeze_4770 = None
    mul_4978: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_115, primals_116);  primals_116 = None
    unsqueeze_4772: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4978, 0);  mul_4978 = None
    unsqueeze_4773: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4772, 2);  unsqueeze_4772 = None
    unsqueeze_4774: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4773, 3);  unsqueeze_4773 = None
    sub_1470: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_38, unsqueeze_4765);  convolution_38 = unsqueeze_4765 = None
    mul_4979: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1470, unsqueeze_4771);  sub_1470 = unsqueeze_4771 = None
    sub_1471: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_246, mul_4979);  where_246 = mul_4979 = None
    sub_1472: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1471, unsqueeze_4768);  sub_1471 = unsqueeze_4768 = None
    mul_4980: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1472, unsqueeze_4774);  sub_1472 = unsqueeze_4774 = None
    mul_4981: "f32[18]" = torch.ops.aten.mul.Tensor(sum_579, squeeze_115);  sum_579 = squeeze_115 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_286 = torch.ops.aten.convolution_backward.default(mul_4980, relu_36, primals_115, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4980 = primals_115 = None
    getitem_1508: "f32[8, 18, 56, 56]" = convolution_backward_286[0]
    getitem_1509: "f32[18, 18, 3, 3]" = convolution_backward_286[1];  convolution_backward_286 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2085: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_245, getitem_1508);  where_245 = getitem_1508 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_946: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_36);  relu_36 = None
    alias_947: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_946);  alias_946 = None
    le_247: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_947, 0);  alias_947 = None
    scalar_tensor_247: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_247: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_247, scalar_tensor_247, add_2085);  le_247 = scalar_tensor_247 = add_2085 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4775: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_111, 0);  squeeze_111 = None
    unsqueeze_4776: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4775, 2);  unsqueeze_4775 = None
    unsqueeze_4777: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4776, 3);  unsqueeze_4776 = None
    sum_580: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_247, [0, 2, 3])
    sub_1473: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_37, unsqueeze_4777)
    mul_4982: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_247, sub_1473);  sub_1473 = None
    sum_581: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4982, [0, 2, 3]);  mul_4982 = None
    mul_4983: "f32[18]" = torch.ops.aten.mul.Tensor(sum_580, 3.985969387755102e-05)
    unsqueeze_4778: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4983, 0);  mul_4983 = None
    unsqueeze_4779: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4778, 2);  unsqueeze_4778 = None
    unsqueeze_4780: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4779, 3);  unsqueeze_4779 = None
    mul_4984: "f32[18]" = torch.ops.aten.mul.Tensor(sum_581, 3.985969387755102e-05)
    mul_4985: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_112, squeeze_112)
    mul_4986: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4984, mul_4985);  mul_4984 = mul_4985 = None
    unsqueeze_4781: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4986, 0);  mul_4986 = None
    unsqueeze_4782: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4781, 2);  unsqueeze_4781 = None
    unsqueeze_4783: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4782, 3);  unsqueeze_4782 = None
    mul_4987: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_112, primals_113);  primals_113 = None
    unsqueeze_4784: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4987, 0);  mul_4987 = None
    unsqueeze_4785: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4784, 2);  unsqueeze_4784 = None
    unsqueeze_4786: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4785, 3);  unsqueeze_4785 = None
    sub_1474: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_37, unsqueeze_4777);  convolution_37 = unsqueeze_4777 = None
    mul_4988: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1474, unsqueeze_4783);  sub_1474 = unsqueeze_4783 = None
    sub_1475: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_247, mul_4988);  mul_4988 = None
    sub_1476: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1475, unsqueeze_4780);  sub_1475 = unsqueeze_4780 = None
    mul_4989: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1476, unsqueeze_4786);  sub_1476 = unsqueeze_4786 = None
    mul_4990: "f32[18]" = torch.ops.aten.mul.Tensor(sum_581, squeeze_112);  sum_581 = squeeze_112 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_287 = torch.ops.aten.convolution_backward.default(mul_4989, relu_35, primals_112, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4989 = primals_112 = None
    getitem_1511: "f32[8, 18, 56, 56]" = convolution_backward_287[0]
    getitem_1512: "f32[18, 18, 3, 3]" = convolution_backward_287[1];  convolution_backward_287 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_949: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_35);  relu_35 = None
    alias_950: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_949);  alias_949 = None
    le_248: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_950, 0);  alias_950 = None
    scalar_tensor_248: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_248: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_248, scalar_tensor_248, getitem_1511);  le_248 = scalar_tensor_248 = getitem_1511 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4787: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_108, 0);  squeeze_108 = None
    unsqueeze_4788: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4787, 2);  unsqueeze_4787 = None
    unsqueeze_4789: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4788, 3);  unsqueeze_4788 = None
    sum_582: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_248, [0, 2, 3])
    sub_1477: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_36, unsqueeze_4789)
    mul_4991: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_248, sub_1477);  sub_1477 = None
    sum_583: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_4991, [0, 2, 3]);  mul_4991 = None
    mul_4992: "f32[18]" = torch.ops.aten.mul.Tensor(sum_582, 3.985969387755102e-05)
    unsqueeze_4790: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4992, 0);  mul_4992 = None
    unsqueeze_4791: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4790, 2);  unsqueeze_4790 = None
    unsqueeze_4792: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4791, 3);  unsqueeze_4791 = None
    mul_4993: "f32[18]" = torch.ops.aten.mul.Tensor(sum_583, 3.985969387755102e-05)
    mul_4994: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_109, squeeze_109)
    mul_4995: "f32[18]" = torch.ops.aten.mul.Tensor(mul_4993, mul_4994);  mul_4993 = mul_4994 = None
    unsqueeze_4793: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4995, 0);  mul_4995 = None
    unsqueeze_4794: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4793, 2);  unsqueeze_4793 = None
    unsqueeze_4795: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4794, 3);  unsqueeze_4794 = None
    mul_4996: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_109, primals_110);  primals_110 = None
    unsqueeze_4796: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_4996, 0);  mul_4996 = None
    unsqueeze_4797: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4796, 2);  unsqueeze_4796 = None
    unsqueeze_4798: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4797, 3);  unsqueeze_4797 = None
    sub_1478: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_36, unsqueeze_4789);  convolution_36 = unsqueeze_4789 = None
    mul_4997: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1478, unsqueeze_4795);  sub_1478 = unsqueeze_4795 = None
    sub_1479: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_248, mul_4997);  where_248 = mul_4997 = None
    sub_1480: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1479, unsqueeze_4792);  sub_1479 = unsqueeze_4792 = None
    mul_4998: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1480, unsqueeze_4798);  sub_1480 = unsqueeze_4798 = None
    mul_4999: "f32[18]" = torch.ops.aten.mul.Tensor(sum_583, squeeze_109);  sum_583 = squeeze_109 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_288 = torch.ops.aten.convolution_backward.default(mul_4998, relu_32, primals_109, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_4998 = relu_32 = primals_109 = None
    getitem_1514: "f32[8, 18, 56, 56]" = convolution_backward_288[0]
    getitem_1515: "f32[18, 18, 3, 3]" = convolution_backward_288[1];  convolution_backward_288 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2086: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_247, getitem_1514);  where_247 = getitem_1514 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:753, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition2)]
    alias_952: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(relu_34);  relu_34 = None
    alias_953: "f32[8, 72, 14, 14]" = torch.ops.aten.alias.default(alias_952);  alias_952 = None
    le_249: "b8[8, 72, 14, 14]" = torch.ops.aten.le.Scalar(alias_953, 0);  alias_953 = None
    scalar_tensor_249: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_249: "f32[8, 72, 14, 14]" = torch.ops.aten.where.self(le_249, scalar_tensor_249, add_2078);  le_249 = scalar_tensor_249 = add_2078 = None
    unsqueeze_4799: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(squeeze_105, 0);  squeeze_105 = None
    unsqueeze_4800: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4799, 2);  unsqueeze_4799 = None
    unsqueeze_4801: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4800, 3);  unsqueeze_4800 = None
    sum_584: "f32[72]" = torch.ops.aten.sum.dim_IntList(where_249, [0, 2, 3])
    sub_1481: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_35, unsqueeze_4801)
    mul_5000: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(where_249, sub_1481);  sub_1481 = None
    sum_585: "f32[72]" = torch.ops.aten.sum.dim_IntList(mul_5000, [0, 2, 3]);  mul_5000 = None
    mul_5001: "f32[72]" = torch.ops.aten.mul.Tensor(sum_584, 0.0006377551020408163)
    unsqueeze_4802: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_5001, 0);  mul_5001 = None
    unsqueeze_4803: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4802, 2);  unsqueeze_4802 = None
    unsqueeze_4804: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4803, 3);  unsqueeze_4803 = None
    mul_5002: "f32[72]" = torch.ops.aten.mul.Tensor(sum_585, 0.0006377551020408163)
    mul_5003: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_106, squeeze_106)
    mul_5004: "f32[72]" = torch.ops.aten.mul.Tensor(mul_5002, mul_5003);  mul_5002 = mul_5003 = None
    unsqueeze_4805: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_5004, 0);  mul_5004 = None
    unsqueeze_4806: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4805, 2);  unsqueeze_4805 = None
    unsqueeze_4807: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4806, 3);  unsqueeze_4806 = None
    mul_5005: "f32[72]" = torch.ops.aten.mul.Tensor(squeeze_106, primals_107);  primals_107 = None
    unsqueeze_4808: "f32[1, 72]" = torch.ops.aten.unsqueeze.default(mul_5005, 0);  mul_5005 = None
    unsqueeze_4809: "f32[1, 72, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4808, 2);  unsqueeze_4808 = None
    unsqueeze_4810: "f32[1, 72, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4809, 3);  unsqueeze_4809 = None
    sub_1482: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(convolution_35, unsqueeze_4801);  convolution_35 = unsqueeze_4801 = None
    mul_5006: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1482, unsqueeze_4807);  sub_1482 = unsqueeze_4807 = None
    sub_1483: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(where_249, mul_5006);  where_249 = mul_5006 = None
    sub_1484: "f32[8, 72, 14, 14]" = torch.ops.aten.sub.Tensor(sub_1483, unsqueeze_4804);  sub_1483 = unsqueeze_4804 = None
    mul_5007: "f32[8, 72, 14, 14]" = torch.ops.aten.mul.Tensor(sub_1484, unsqueeze_4810);  sub_1484 = unsqueeze_4810 = None
    mul_5008: "f32[72]" = torch.ops.aten.mul.Tensor(sum_585, squeeze_106);  sum_585 = squeeze_106 = None
    convolution_backward_289 = torch.ops.aten.convolution_backward.default(mul_5007, relu_33, primals_106, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5007 = relu_33 = primals_106 = None
    getitem_1517: "f32[8, 36, 28, 28]" = convolution_backward_289[0]
    getitem_1518: "f32[72, 36, 3, 3]" = convolution_backward_289[1];  convolution_backward_289 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:753, code: xl = [t(yl[-1]) if not isinstance(t, nn.Identity) else yl[i] for i, t in enumerate(self.transition2)]
    add_2087: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(add_2082, getitem_1517);  add_2082 = getitem_1517 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_954: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_33);  alias_33 = None
    le_250: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_954, 0);  alias_954 = None
    scalar_tensor_250: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_250: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_250, scalar_tensor_250, add_2087);  le_250 = scalar_tensor_250 = add_2087 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:482, code: y = f(x[j])
    unsqueeze_4811: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_102, 0);  squeeze_102 = None
    unsqueeze_4812: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4811, 2);  unsqueeze_4811 = None
    unsqueeze_4813: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4812, 3);  unsqueeze_4812 = None
    sum_586: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_250, [0, 2, 3])
    sub_1485: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_34, unsqueeze_4813)
    mul_5009: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_250, sub_1485);  sub_1485 = None
    sum_587: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5009, [0, 2, 3]);  mul_5009 = None
    mul_5010: "f32[36]" = torch.ops.aten.mul.Tensor(sum_586, 0.00015943877551020407)
    unsqueeze_4814: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5010, 0);  mul_5010 = None
    unsqueeze_4815: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4814, 2);  unsqueeze_4814 = None
    unsqueeze_4816: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4815, 3);  unsqueeze_4815 = None
    mul_5011: "f32[36]" = torch.ops.aten.mul.Tensor(sum_587, 0.00015943877551020407)
    mul_5012: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_103, squeeze_103)
    mul_5013: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5011, mul_5012);  mul_5011 = mul_5012 = None
    unsqueeze_4817: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5013, 0);  mul_5013 = None
    unsqueeze_4818: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4817, 2);  unsqueeze_4817 = None
    unsqueeze_4819: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4818, 3);  unsqueeze_4818 = None
    mul_5014: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_103, primals_104);  primals_104 = None
    unsqueeze_4820: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5014, 0);  mul_5014 = None
    unsqueeze_4821: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4820, 2);  unsqueeze_4820 = None
    unsqueeze_4822: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4821, 3);  unsqueeze_4821 = None
    sub_1486: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_34, unsqueeze_4813);  convolution_34 = unsqueeze_4813 = None
    mul_5015: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1486, unsqueeze_4819);  sub_1486 = unsqueeze_4819 = None
    sub_1487: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_250, mul_5015);  mul_5015 = None
    sub_1488: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1487, unsqueeze_4816);  sub_1487 = unsqueeze_4816 = None
    mul_5016: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1488, unsqueeze_4822);  sub_1488 = unsqueeze_4822 = None
    mul_5017: "f32[36]" = torch.ops.aten.mul.Tensor(sum_587, squeeze_103);  sum_587 = squeeze_103 = None
    convolution_backward_290 = torch.ops.aten.convolution_backward.default(mul_5016, relu_23, primals_103, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5016 = primals_103 = None
    getitem_1520: "f32[8, 18, 56, 56]" = convolution_backward_290[0]
    getitem_1521: "f32[36, 18, 3, 3]" = convolution_backward_290[1];  convolution_backward_290 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:485, code: x_fuse.append(self.fuse_act(y))
    alias_955: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_32);  alias_32 = None
    le_251: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_955, 0);  alias_955 = None
    scalar_tensor_251: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_251: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_251, scalar_tensor_251, add_2086);  le_251 = scalar_tensor_251 = add_2086 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2088: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1520, where_251);  getitem_1520 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    full_30: "f32[8, 18, 28, 28]" = torch.ops.aten.full.default([8, 18, 28, 28], 0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0), pin_memory = False)
    _unsafe_index_put_30: "f32[8, 18, 28, 28]" = torch.ops.aten._unsafe_index_put.default(full_30, [None, None, unsqueeze_136, convert_element_type_3], where_251, True);  full_30 = unsqueeze_136 = convert_element_type_3 = where_251 = None
    unsqueeze_4823: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_99, 0);  squeeze_99 = None
    unsqueeze_4824: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4823, 2);  unsqueeze_4823 = None
    unsqueeze_4825: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4824, 3);  unsqueeze_4824 = None
    sum_588: "f32[18]" = torch.ops.aten.sum.dim_IntList(_unsafe_index_put_30, [0, 2, 3])
    sub_1489: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_33, unsqueeze_4825)
    mul_5018: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(_unsafe_index_put_30, sub_1489);  sub_1489 = None
    sum_589: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5018, [0, 2, 3]);  mul_5018 = None
    mul_5019: "f32[18]" = torch.ops.aten.mul.Tensor(sum_588, 0.00015943877551020407)
    unsqueeze_4826: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5019, 0);  mul_5019 = None
    unsqueeze_4827: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4826, 2);  unsqueeze_4826 = None
    unsqueeze_4828: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4827, 3);  unsqueeze_4827 = None
    mul_5020: "f32[18]" = torch.ops.aten.mul.Tensor(sum_589, 0.00015943877551020407)
    mul_5021: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_100, squeeze_100)
    mul_5022: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5020, mul_5021);  mul_5020 = mul_5021 = None
    unsqueeze_4829: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5022, 0);  mul_5022 = None
    unsqueeze_4830: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4829, 2);  unsqueeze_4829 = None
    unsqueeze_4831: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4830, 3);  unsqueeze_4830 = None
    mul_5023: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_100, primals_101);  primals_101 = None
    unsqueeze_4832: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5023, 0);  mul_5023 = None
    unsqueeze_4833: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4832, 2);  unsqueeze_4832 = None
    unsqueeze_4834: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4833, 3);  unsqueeze_4833 = None
    sub_1490: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_33, unsqueeze_4825);  convolution_33 = unsqueeze_4825 = None
    mul_5024: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1490, unsqueeze_4831);  sub_1490 = unsqueeze_4831 = None
    sub_1491: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(_unsafe_index_put_30, mul_5024);  _unsafe_index_put_30 = mul_5024 = None
    sub_1492: "f32[8, 18, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1491, unsqueeze_4828);  sub_1491 = unsqueeze_4828 = None
    mul_5025: "f32[8, 18, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1492, unsqueeze_4834);  sub_1492 = unsqueeze_4834 = None
    mul_5026: "f32[18]" = torch.ops.aten.mul.Tensor(sum_589, squeeze_100);  sum_589 = squeeze_100 = None
    convolution_backward_291 = torch.ops.aten.convolution_backward.default(mul_5025, relu_31, primals_100, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5025 = primals_100 = None
    getitem_1523: "f32[8, 36, 28, 28]" = convolution_backward_291[0]
    getitem_1524: "f32[18, 36, 1, 1]" = convolution_backward_291[1];  convolution_backward_291 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:484, code: y = y + f(x[j])
    add_2089: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_250, getitem_1523);  where_250 = getitem_1523 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_957: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_31);  relu_31 = None
    alias_958: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_957);  alias_957 = None
    le_252: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_958, 0);  alias_958 = None
    scalar_tensor_252: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_252: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_252, scalar_tensor_252, add_2089);  le_252 = scalar_tensor_252 = add_2089 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4835: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_96, 0);  squeeze_96 = None
    unsqueeze_4836: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4835, 2);  unsqueeze_4835 = None
    unsqueeze_4837: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4836, 3);  unsqueeze_4836 = None
    sum_590: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_252, [0, 2, 3])
    sub_1493: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_32, unsqueeze_4837)
    mul_5027: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_252, sub_1493);  sub_1493 = None
    sum_591: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5027, [0, 2, 3]);  mul_5027 = None
    mul_5028: "f32[36]" = torch.ops.aten.mul.Tensor(sum_590, 0.00015943877551020407)
    unsqueeze_4838: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5028, 0);  mul_5028 = None
    unsqueeze_4839: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4838, 2);  unsqueeze_4838 = None
    unsqueeze_4840: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4839, 3);  unsqueeze_4839 = None
    mul_5029: "f32[36]" = torch.ops.aten.mul.Tensor(sum_591, 0.00015943877551020407)
    mul_5030: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_97, squeeze_97)
    mul_5031: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5029, mul_5030);  mul_5029 = mul_5030 = None
    unsqueeze_4841: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5031, 0);  mul_5031 = None
    unsqueeze_4842: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4841, 2);  unsqueeze_4841 = None
    unsqueeze_4843: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4842, 3);  unsqueeze_4842 = None
    mul_5032: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_97, primals_98);  primals_98 = None
    unsqueeze_4844: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5032, 0);  mul_5032 = None
    unsqueeze_4845: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4844, 2);  unsqueeze_4844 = None
    unsqueeze_4846: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4845, 3);  unsqueeze_4845 = None
    sub_1494: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_32, unsqueeze_4837);  convolution_32 = unsqueeze_4837 = None
    mul_5033: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1494, unsqueeze_4843);  sub_1494 = unsqueeze_4843 = None
    sub_1495: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_252, mul_5033);  mul_5033 = None
    sub_1496: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1495, unsqueeze_4840);  sub_1495 = unsqueeze_4840 = None
    mul_5034: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1496, unsqueeze_4846);  sub_1496 = unsqueeze_4846 = None
    mul_5035: "f32[36]" = torch.ops.aten.mul.Tensor(sum_591, squeeze_97);  sum_591 = squeeze_97 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_292 = torch.ops.aten.convolution_backward.default(mul_5034, relu_30, primals_97, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5034 = primals_97 = None
    getitem_1526: "f32[8, 36, 28, 28]" = convolution_backward_292[0]
    getitem_1527: "f32[36, 36, 3, 3]" = convolution_backward_292[1];  convolution_backward_292 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_960: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_30);  relu_30 = None
    alias_961: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_960);  alias_960 = None
    le_253: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_961, 0);  alias_961 = None
    scalar_tensor_253: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_253: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_253, scalar_tensor_253, getitem_1526);  le_253 = scalar_tensor_253 = getitem_1526 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4847: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_93, 0);  squeeze_93 = None
    unsqueeze_4848: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4847, 2);  unsqueeze_4847 = None
    unsqueeze_4849: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4848, 3);  unsqueeze_4848 = None
    sum_592: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_253, [0, 2, 3])
    sub_1497: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_31, unsqueeze_4849)
    mul_5036: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_253, sub_1497);  sub_1497 = None
    sum_593: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5036, [0, 2, 3]);  mul_5036 = None
    mul_5037: "f32[36]" = torch.ops.aten.mul.Tensor(sum_592, 0.00015943877551020407)
    unsqueeze_4850: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5037, 0);  mul_5037 = None
    unsqueeze_4851: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4850, 2);  unsqueeze_4850 = None
    unsqueeze_4852: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4851, 3);  unsqueeze_4851 = None
    mul_5038: "f32[36]" = torch.ops.aten.mul.Tensor(sum_593, 0.00015943877551020407)
    mul_5039: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_94, squeeze_94)
    mul_5040: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5038, mul_5039);  mul_5038 = mul_5039 = None
    unsqueeze_4853: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5040, 0);  mul_5040 = None
    unsqueeze_4854: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4853, 2);  unsqueeze_4853 = None
    unsqueeze_4855: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4854, 3);  unsqueeze_4854 = None
    mul_5041: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_94, primals_95);  primals_95 = None
    unsqueeze_4856: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5041, 0);  mul_5041 = None
    unsqueeze_4857: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4856, 2);  unsqueeze_4856 = None
    unsqueeze_4858: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4857, 3);  unsqueeze_4857 = None
    sub_1498: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_31, unsqueeze_4849);  convolution_31 = unsqueeze_4849 = None
    mul_5042: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1498, unsqueeze_4855);  sub_1498 = unsqueeze_4855 = None
    sub_1499: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_253, mul_5042);  where_253 = mul_5042 = None
    sub_1500: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1499, unsqueeze_4852);  sub_1499 = unsqueeze_4852 = None
    mul_5043: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1500, unsqueeze_4858);  sub_1500 = unsqueeze_4858 = None
    mul_5044: "f32[36]" = torch.ops.aten.mul.Tensor(sum_593, squeeze_94);  sum_593 = squeeze_94 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_293 = torch.ops.aten.convolution_backward.default(mul_5043, relu_29, primals_94, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5043 = primals_94 = None
    getitem_1529: "f32[8, 36, 28, 28]" = convolution_backward_293[0]
    getitem_1530: "f32[36, 36, 3, 3]" = convolution_backward_293[1];  convolution_backward_293 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2090: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_252, getitem_1529);  where_252 = getitem_1529 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_963: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_29);  relu_29 = None
    alias_964: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_963);  alias_963 = None
    le_254: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_964, 0);  alias_964 = None
    scalar_tensor_254: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_254: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_254, scalar_tensor_254, add_2090);  le_254 = scalar_tensor_254 = add_2090 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4859: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_90, 0);  squeeze_90 = None
    unsqueeze_4860: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4859, 2);  unsqueeze_4859 = None
    unsqueeze_4861: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4860, 3);  unsqueeze_4860 = None
    sum_594: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_254, [0, 2, 3])
    sub_1501: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_30, unsqueeze_4861)
    mul_5045: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_254, sub_1501);  sub_1501 = None
    sum_595: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5045, [0, 2, 3]);  mul_5045 = None
    mul_5046: "f32[36]" = torch.ops.aten.mul.Tensor(sum_594, 0.00015943877551020407)
    unsqueeze_4862: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5046, 0);  mul_5046 = None
    unsqueeze_4863: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4862, 2);  unsqueeze_4862 = None
    unsqueeze_4864: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4863, 3);  unsqueeze_4863 = None
    mul_5047: "f32[36]" = torch.ops.aten.mul.Tensor(sum_595, 0.00015943877551020407)
    mul_5048: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_91, squeeze_91)
    mul_5049: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5047, mul_5048);  mul_5047 = mul_5048 = None
    unsqueeze_4865: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5049, 0);  mul_5049 = None
    unsqueeze_4866: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4865, 2);  unsqueeze_4865 = None
    unsqueeze_4867: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4866, 3);  unsqueeze_4866 = None
    mul_5050: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_91, primals_92);  primals_92 = None
    unsqueeze_4868: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5050, 0);  mul_5050 = None
    unsqueeze_4869: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4868, 2);  unsqueeze_4868 = None
    unsqueeze_4870: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4869, 3);  unsqueeze_4869 = None
    sub_1502: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_30, unsqueeze_4861);  convolution_30 = unsqueeze_4861 = None
    mul_5051: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1502, unsqueeze_4867);  sub_1502 = unsqueeze_4867 = None
    sub_1503: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_254, mul_5051);  mul_5051 = None
    sub_1504: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1503, unsqueeze_4864);  sub_1503 = unsqueeze_4864 = None
    mul_5052: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1504, unsqueeze_4870);  sub_1504 = unsqueeze_4870 = None
    mul_5053: "f32[36]" = torch.ops.aten.mul.Tensor(sum_595, squeeze_91);  sum_595 = squeeze_91 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_294 = torch.ops.aten.convolution_backward.default(mul_5052, relu_28, primals_91, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5052 = primals_91 = None
    getitem_1532: "f32[8, 36, 28, 28]" = convolution_backward_294[0]
    getitem_1533: "f32[36, 36, 3, 3]" = convolution_backward_294[1];  convolution_backward_294 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_966: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_28);  relu_28 = None
    alias_967: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_966);  alias_966 = None
    le_255: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_967, 0);  alias_967 = None
    scalar_tensor_255: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_255: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_255, scalar_tensor_255, getitem_1532);  le_255 = scalar_tensor_255 = getitem_1532 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4871: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_87, 0);  squeeze_87 = None
    unsqueeze_4872: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4871, 2);  unsqueeze_4871 = None
    unsqueeze_4873: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4872, 3);  unsqueeze_4872 = None
    sum_596: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_255, [0, 2, 3])
    sub_1505: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_29, unsqueeze_4873)
    mul_5054: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_255, sub_1505);  sub_1505 = None
    sum_597: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5054, [0, 2, 3]);  mul_5054 = None
    mul_5055: "f32[36]" = torch.ops.aten.mul.Tensor(sum_596, 0.00015943877551020407)
    unsqueeze_4874: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5055, 0);  mul_5055 = None
    unsqueeze_4875: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4874, 2);  unsqueeze_4874 = None
    unsqueeze_4876: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4875, 3);  unsqueeze_4875 = None
    mul_5056: "f32[36]" = torch.ops.aten.mul.Tensor(sum_597, 0.00015943877551020407)
    mul_5057: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_88, squeeze_88)
    mul_5058: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5056, mul_5057);  mul_5056 = mul_5057 = None
    unsqueeze_4877: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5058, 0);  mul_5058 = None
    unsqueeze_4878: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4877, 2);  unsqueeze_4877 = None
    unsqueeze_4879: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4878, 3);  unsqueeze_4878 = None
    mul_5059: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_88, primals_89);  primals_89 = None
    unsqueeze_4880: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5059, 0);  mul_5059 = None
    unsqueeze_4881: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4880, 2);  unsqueeze_4880 = None
    unsqueeze_4882: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4881, 3);  unsqueeze_4881 = None
    sub_1506: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_29, unsqueeze_4873);  convolution_29 = unsqueeze_4873 = None
    mul_5060: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1506, unsqueeze_4879);  sub_1506 = unsqueeze_4879 = None
    sub_1507: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_255, mul_5060);  where_255 = mul_5060 = None
    sub_1508: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1507, unsqueeze_4876);  sub_1507 = unsqueeze_4876 = None
    mul_5061: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1508, unsqueeze_4882);  sub_1508 = unsqueeze_4882 = None
    mul_5062: "f32[36]" = torch.ops.aten.mul.Tensor(sum_597, squeeze_88);  sum_597 = squeeze_88 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_295 = torch.ops.aten.convolution_backward.default(mul_5061, relu_27, primals_88, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5061 = primals_88 = None
    getitem_1535: "f32[8, 36, 28, 28]" = convolution_backward_295[0]
    getitem_1536: "f32[36, 36, 3, 3]" = convolution_backward_295[1];  convolution_backward_295 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2091: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_254, getitem_1535);  where_254 = getitem_1535 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_969: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_27);  relu_27 = None
    alias_970: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_969);  alias_969 = None
    le_256: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_970, 0);  alias_970 = None
    scalar_tensor_256: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_256: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_256, scalar_tensor_256, add_2091);  le_256 = scalar_tensor_256 = add_2091 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4883: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_84, 0);  squeeze_84 = None
    unsqueeze_4884: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4883, 2);  unsqueeze_4883 = None
    unsqueeze_4885: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4884, 3);  unsqueeze_4884 = None
    sum_598: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_256, [0, 2, 3])
    sub_1509: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_28, unsqueeze_4885)
    mul_5063: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_256, sub_1509);  sub_1509 = None
    sum_599: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5063, [0, 2, 3]);  mul_5063 = None
    mul_5064: "f32[36]" = torch.ops.aten.mul.Tensor(sum_598, 0.00015943877551020407)
    unsqueeze_4886: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5064, 0);  mul_5064 = None
    unsqueeze_4887: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4886, 2);  unsqueeze_4886 = None
    unsqueeze_4888: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4887, 3);  unsqueeze_4887 = None
    mul_5065: "f32[36]" = torch.ops.aten.mul.Tensor(sum_599, 0.00015943877551020407)
    mul_5066: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_85, squeeze_85)
    mul_5067: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5065, mul_5066);  mul_5065 = mul_5066 = None
    unsqueeze_4889: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5067, 0);  mul_5067 = None
    unsqueeze_4890: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4889, 2);  unsqueeze_4889 = None
    unsqueeze_4891: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4890, 3);  unsqueeze_4890 = None
    mul_5068: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_85, primals_86);  primals_86 = None
    unsqueeze_4892: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5068, 0);  mul_5068 = None
    unsqueeze_4893: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4892, 2);  unsqueeze_4892 = None
    unsqueeze_4894: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4893, 3);  unsqueeze_4893 = None
    sub_1510: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_28, unsqueeze_4885);  convolution_28 = unsqueeze_4885 = None
    mul_5069: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1510, unsqueeze_4891);  sub_1510 = unsqueeze_4891 = None
    sub_1511: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_256, mul_5069);  mul_5069 = None
    sub_1512: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1511, unsqueeze_4888);  sub_1511 = unsqueeze_4888 = None
    mul_5070: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1512, unsqueeze_4894);  sub_1512 = unsqueeze_4894 = None
    mul_5071: "f32[36]" = torch.ops.aten.mul.Tensor(sum_599, squeeze_85);  sum_599 = squeeze_85 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_296 = torch.ops.aten.convolution_backward.default(mul_5070, relu_26, primals_85, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5070 = primals_85 = None
    getitem_1538: "f32[8, 36, 28, 28]" = convolution_backward_296[0]
    getitem_1539: "f32[36, 36, 3, 3]" = convolution_backward_296[1];  convolution_backward_296 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_972: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_26);  relu_26 = None
    alias_973: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_972);  alias_972 = None
    le_257: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_973, 0);  alias_973 = None
    scalar_tensor_257: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_257: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_257, scalar_tensor_257, getitem_1538);  le_257 = scalar_tensor_257 = getitem_1538 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4895: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_81, 0);  squeeze_81 = None
    unsqueeze_4896: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4895, 2);  unsqueeze_4895 = None
    unsqueeze_4897: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4896, 3);  unsqueeze_4896 = None
    sum_600: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_257, [0, 2, 3])
    sub_1513: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_27, unsqueeze_4897)
    mul_5072: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_257, sub_1513);  sub_1513 = None
    sum_601: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5072, [0, 2, 3]);  mul_5072 = None
    mul_5073: "f32[36]" = torch.ops.aten.mul.Tensor(sum_600, 0.00015943877551020407)
    unsqueeze_4898: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5073, 0);  mul_5073 = None
    unsqueeze_4899: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4898, 2);  unsqueeze_4898 = None
    unsqueeze_4900: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4899, 3);  unsqueeze_4899 = None
    mul_5074: "f32[36]" = torch.ops.aten.mul.Tensor(sum_601, 0.00015943877551020407)
    mul_5075: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_82, squeeze_82)
    mul_5076: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5074, mul_5075);  mul_5074 = mul_5075 = None
    unsqueeze_4901: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5076, 0);  mul_5076 = None
    unsqueeze_4902: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4901, 2);  unsqueeze_4901 = None
    unsqueeze_4903: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4902, 3);  unsqueeze_4902 = None
    mul_5077: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_82, primals_83);  primals_83 = None
    unsqueeze_4904: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5077, 0);  mul_5077 = None
    unsqueeze_4905: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4904, 2);  unsqueeze_4904 = None
    unsqueeze_4906: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4905, 3);  unsqueeze_4905 = None
    sub_1514: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_27, unsqueeze_4897);  convolution_27 = unsqueeze_4897 = None
    mul_5078: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1514, unsqueeze_4903);  sub_1514 = unsqueeze_4903 = None
    sub_1515: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_257, mul_5078);  where_257 = mul_5078 = None
    sub_1516: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1515, unsqueeze_4900);  sub_1515 = unsqueeze_4900 = None
    mul_5079: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1516, unsqueeze_4906);  sub_1516 = unsqueeze_4906 = None
    mul_5080: "f32[36]" = torch.ops.aten.mul.Tensor(sum_601, squeeze_82);  sum_601 = squeeze_82 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_297 = torch.ops.aten.convolution_backward.default(mul_5079, relu_25, primals_82, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5079 = primals_82 = None
    getitem_1541: "f32[8, 36, 28, 28]" = convolution_backward_297[0]
    getitem_1542: "f32[36, 36, 3, 3]" = convolution_backward_297[1];  convolution_backward_297 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2092: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_256, getitem_1541);  where_256 = getitem_1541 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_975: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_25);  relu_25 = None
    alias_976: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_975);  alias_975 = None
    le_258: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_976, 0);  alias_976 = None
    scalar_tensor_258: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_258: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_258, scalar_tensor_258, add_2092);  le_258 = scalar_tensor_258 = add_2092 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4907: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_78, 0);  squeeze_78 = None
    unsqueeze_4908: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4907, 2);  unsqueeze_4907 = None
    unsqueeze_4909: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4908, 3);  unsqueeze_4908 = None
    sum_602: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_258, [0, 2, 3])
    sub_1517: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_26, unsqueeze_4909)
    mul_5081: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_258, sub_1517);  sub_1517 = None
    sum_603: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5081, [0, 2, 3]);  mul_5081 = None
    mul_5082: "f32[36]" = torch.ops.aten.mul.Tensor(sum_602, 0.00015943877551020407)
    unsqueeze_4910: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5082, 0);  mul_5082 = None
    unsqueeze_4911: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4910, 2);  unsqueeze_4910 = None
    unsqueeze_4912: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4911, 3);  unsqueeze_4911 = None
    mul_5083: "f32[36]" = torch.ops.aten.mul.Tensor(sum_603, 0.00015943877551020407)
    mul_5084: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_79, squeeze_79)
    mul_5085: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5083, mul_5084);  mul_5083 = mul_5084 = None
    unsqueeze_4913: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5085, 0);  mul_5085 = None
    unsqueeze_4914: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4913, 2);  unsqueeze_4913 = None
    unsqueeze_4915: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4914, 3);  unsqueeze_4914 = None
    mul_5086: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_79, primals_80);  primals_80 = None
    unsqueeze_4916: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5086, 0);  mul_5086 = None
    unsqueeze_4917: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4916, 2);  unsqueeze_4916 = None
    unsqueeze_4918: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4917, 3);  unsqueeze_4917 = None
    sub_1518: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_26, unsqueeze_4909);  convolution_26 = unsqueeze_4909 = None
    mul_5087: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1518, unsqueeze_4915);  sub_1518 = unsqueeze_4915 = None
    sub_1519: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_258, mul_5087);  mul_5087 = None
    sub_1520: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1519, unsqueeze_4912);  sub_1519 = unsqueeze_4912 = None
    mul_5088: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1520, unsqueeze_4918);  sub_1520 = unsqueeze_4918 = None
    mul_5089: "f32[36]" = torch.ops.aten.mul.Tensor(sum_603, squeeze_79);  sum_603 = squeeze_79 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_298 = torch.ops.aten.convolution_backward.default(mul_5088, relu_24, primals_79, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5088 = primals_79 = None
    getitem_1544: "f32[8, 36, 28, 28]" = convolution_backward_298[0]
    getitem_1545: "f32[36, 36, 3, 3]" = convolution_backward_298[1];  convolution_backward_298 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_978: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_24);  relu_24 = None
    alias_979: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_978);  alias_978 = None
    le_259: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_979, 0);  alias_979 = None
    scalar_tensor_259: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_259: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_259, scalar_tensor_259, getitem_1544);  le_259 = scalar_tensor_259 = getitem_1544 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4919: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_75, 0);  squeeze_75 = None
    unsqueeze_4920: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4919, 2);  unsqueeze_4919 = None
    unsqueeze_4921: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4920, 3);  unsqueeze_4920 = None
    sum_604: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_259, [0, 2, 3])
    sub_1521: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_25, unsqueeze_4921)
    mul_5090: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_259, sub_1521);  sub_1521 = None
    sum_605: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5090, [0, 2, 3]);  mul_5090 = None
    mul_5091: "f32[36]" = torch.ops.aten.mul.Tensor(sum_604, 0.00015943877551020407)
    unsqueeze_4922: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5091, 0);  mul_5091 = None
    unsqueeze_4923: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4922, 2);  unsqueeze_4922 = None
    unsqueeze_4924: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4923, 3);  unsqueeze_4923 = None
    mul_5092: "f32[36]" = torch.ops.aten.mul.Tensor(sum_605, 0.00015943877551020407)
    mul_5093: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_76, squeeze_76)
    mul_5094: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5092, mul_5093);  mul_5092 = mul_5093 = None
    unsqueeze_4925: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5094, 0);  mul_5094 = None
    unsqueeze_4926: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4925, 2);  unsqueeze_4925 = None
    unsqueeze_4927: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4926, 3);  unsqueeze_4926 = None
    mul_5095: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_76, primals_77);  primals_77 = None
    unsqueeze_4928: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5095, 0);  mul_5095 = None
    unsqueeze_4929: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4928, 2);  unsqueeze_4928 = None
    unsqueeze_4930: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4929, 3);  unsqueeze_4929 = None
    sub_1522: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_25, unsqueeze_4921);  convolution_25 = unsqueeze_4921 = None
    mul_5096: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1522, unsqueeze_4927);  sub_1522 = unsqueeze_4927 = None
    sub_1523: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_259, mul_5096);  where_259 = mul_5096 = None
    sub_1524: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1523, unsqueeze_4924);  sub_1523 = unsqueeze_4924 = None
    mul_5097: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1524, unsqueeze_4930);  sub_1524 = unsqueeze_4930 = None
    mul_5098: "f32[36]" = torch.ops.aten.mul.Tensor(sum_605, squeeze_76);  sum_605 = squeeze_76 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_299 = torch.ops.aten.convolution_backward.default(mul_5097, relu_15, primals_76, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5097 = primals_76 = None
    getitem_1547: "f32[8, 36, 28, 28]" = convolution_backward_299[0]
    getitem_1548: "f32[36, 36, 3, 3]" = convolution_backward_299[1];  convolution_backward_299 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2093: "f32[8, 36, 28, 28]" = torch.ops.aten.add.Tensor(where_258, getitem_1547);  where_258 = getitem_1547 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_981: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_23);  relu_23 = None
    alias_982: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_981);  alias_981 = None
    le_260: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_982, 0);  alias_982 = None
    scalar_tensor_260: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_260: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_260, scalar_tensor_260, add_2088);  le_260 = scalar_tensor_260 = add_2088 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4931: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_72, 0);  squeeze_72 = None
    unsqueeze_4932: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4931, 2);  unsqueeze_4931 = None
    unsqueeze_4933: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4932, 3);  unsqueeze_4932 = None
    sum_606: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_260, [0, 2, 3])
    sub_1525: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_24, unsqueeze_4933)
    mul_5099: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_260, sub_1525);  sub_1525 = None
    sum_607: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5099, [0, 2, 3]);  mul_5099 = None
    mul_5100: "f32[18]" = torch.ops.aten.mul.Tensor(sum_606, 3.985969387755102e-05)
    unsqueeze_4934: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5100, 0);  mul_5100 = None
    unsqueeze_4935: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4934, 2);  unsqueeze_4934 = None
    unsqueeze_4936: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4935, 3);  unsqueeze_4935 = None
    mul_5101: "f32[18]" = torch.ops.aten.mul.Tensor(sum_607, 3.985969387755102e-05)
    mul_5102: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_73, squeeze_73)
    mul_5103: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5101, mul_5102);  mul_5101 = mul_5102 = None
    unsqueeze_4937: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5103, 0);  mul_5103 = None
    unsqueeze_4938: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4937, 2);  unsqueeze_4937 = None
    unsqueeze_4939: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4938, 3);  unsqueeze_4938 = None
    mul_5104: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_73, primals_74);  primals_74 = None
    unsqueeze_4940: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5104, 0);  mul_5104 = None
    unsqueeze_4941: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4940, 2);  unsqueeze_4940 = None
    unsqueeze_4942: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4941, 3);  unsqueeze_4941 = None
    sub_1526: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_24, unsqueeze_4933);  convolution_24 = unsqueeze_4933 = None
    mul_5105: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1526, unsqueeze_4939);  sub_1526 = unsqueeze_4939 = None
    sub_1527: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_260, mul_5105);  mul_5105 = None
    sub_1528: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1527, unsqueeze_4936);  sub_1527 = unsqueeze_4936 = None
    mul_5106: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1528, unsqueeze_4942);  sub_1528 = unsqueeze_4942 = None
    mul_5107: "f32[18]" = torch.ops.aten.mul.Tensor(sum_607, squeeze_73);  sum_607 = squeeze_73 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_300 = torch.ops.aten.convolution_backward.default(mul_5106, relu_22, primals_73, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5106 = primals_73 = None
    getitem_1550: "f32[8, 18, 56, 56]" = convolution_backward_300[0]
    getitem_1551: "f32[18, 18, 3, 3]" = convolution_backward_300[1];  convolution_backward_300 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_984: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_22);  relu_22 = None
    alias_985: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_984);  alias_984 = None
    le_261: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_985, 0);  alias_985 = None
    scalar_tensor_261: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_261: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_261, scalar_tensor_261, getitem_1550);  le_261 = scalar_tensor_261 = getitem_1550 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4943: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_69, 0);  squeeze_69 = None
    unsqueeze_4944: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4943, 2);  unsqueeze_4943 = None
    unsqueeze_4945: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4944, 3);  unsqueeze_4944 = None
    sum_608: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_261, [0, 2, 3])
    sub_1529: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_23, unsqueeze_4945)
    mul_5108: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_261, sub_1529);  sub_1529 = None
    sum_609: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5108, [0, 2, 3]);  mul_5108 = None
    mul_5109: "f32[18]" = torch.ops.aten.mul.Tensor(sum_608, 3.985969387755102e-05)
    unsqueeze_4946: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5109, 0);  mul_5109 = None
    unsqueeze_4947: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4946, 2);  unsqueeze_4946 = None
    unsqueeze_4948: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4947, 3);  unsqueeze_4947 = None
    mul_5110: "f32[18]" = torch.ops.aten.mul.Tensor(sum_609, 3.985969387755102e-05)
    mul_5111: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_70, squeeze_70)
    mul_5112: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5110, mul_5111);  mul_5110 = mul_5111 = None
    unsqueeze_4949: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5112, 0);  mul_5112 = None
    unsqueeze_4950: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4949, 2);  unsqueeze_4949 = None
    unsqueeze_4951: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4950, 3);  unsqueeze_4950 = None
    mul_5113: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_70, primals_71);  primals_71 = None
    unsqueeze_4952: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5113, 0);  mul_5113 = None
    unsqueeze_4953: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4952, 2);  unsqueeze_4952 = None
    unsqueeze_4954: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4953, 3);  unsqueeze_4953 = None
    sub_1530: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_23, unsqueeze_4945);  convolution_23 = unsqueeze_4945 = None
    mul_5114: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1530, unsqueeze_4951);  sub_1530 = unsqueeze_4951 = None
    sub_1531: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_261, mul_5114);  where_261 = mul_5114 = None
    sub_1532: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1531, unsqueeze_4948);  sub_1531 = unsqueeze_4948 = None
    mul_5115: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1532, unsqueeze_4954);  sub_1532 = unsqueeze_4954 = None
    mul_5116: "f32[18]" = torch.ops.aten.mul.Tensor(sum_609, squeeze_70);  sum_609 = squeeze_70 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_301 = torch.ops.aten.convolution_backward.default(mul_5115, relu_21, primals_70, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5115 = primals_70 = None
    getitem_1553: "f32[8, 18, 56, 56]" = convolution_backward_301[0]
    getitem_1554: "f32[18, 18, 3, 3]" = convolution_backward_301[1];  convolution_backward_301 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2094: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_260, getitem_1553);  where_260 = getitem_1553 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_987: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_21);  relu_21 = None
    alias_988: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_987);  alias_987 = None
    le_262: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_988, 0);  alias_988 = None
    scalar_tensor_262: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_262: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_262, scalar_tensor_262, add_2094);  le_262 = scalar_tensor_262 = add_2094 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4955: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_66, 0);  squeeze_66 = None
    unsqueeze_4956: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4955, 2);  unsqueeze_4955 = None
    unsqueeze_4957: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4956, 3);  unsqueeze_4956 = None
    sum_610: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_262, [0, 2, 3])
    sub_1533: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_22, unsqueeze_4957)
    mul_5117: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_262, sub_1533);  sub_1533 = None
    sum_611: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5117, [0, 2, 3]);  mul_5117 = None
    mul_5118: "f32[18]" = torch.ops.aten.mul.Tensor(sum_610, 3.985969387755102e-05)
    unsqueeze_4958: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5118, 0);  mul_5118 = None
    unsqueeze_4959: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4958, 2);  unsqueeze_4958 = None
    unsqueeze_4960: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4959, 3);  unsqueeze_4959 = None
    mul_5119: "f32[18]" = torch.ops.aten.mul.Tensor(sum_611, 3.985969387755102e-05)
    mul_5120: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_67, squeeze_67)
    mul_5121: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5119, mul_5120);  mul_5119 = mul_5120 = None
    unsqueeze_4961: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5121, 0);  mul_5121 = None
    unsqueeze_4962: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4961, 2);  unsqueeze_4961 = None
    unsqueeze_4963: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4962, 3);  unsqueeze_4962 = None
    mul_5122: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_67, primals_68);  primals_68 = None
    unsqueeze_4964: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5122, 0);  mul_5122 = None
    unsqueeze_4965: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4964, 2);  unsqueeze_4964 = None
    unsqueeze_4966: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4965, 3);  unsqueeze_4965 = None
    sub_1534: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_22, unsqueeze_4957);  convolution_22 = unsqueeze_4957 = None
    mul_5123: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1534, unsqueeze_4963);  sub_1534 = unsqueeze_4963 = None
    sub_1535: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_262, mul_5123);  mul_5123 = None
    sub_1536: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1535, unsqueeze_4960);  sub_1535 = unsqueeze_4960 = None
    mul_5124: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1536, unsqueeze_4966);  sub_1536 = unsqueeze_4966 = None
    mul_5125: "f32[18]" = torch.ops.aten.mul.Tensor(sum_611, squeeze_67);  sum_611 = squeeze_67 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_302 = torch.ops.aten.convolution_backward.default(mul_5124, relu_20, primals_67, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5124 = primals_67 = None
    getitem_1556: "f32[8, 18, 56, 56]" = convolution_backward_302[0]
    getitem_1557: "f32[18, 18, 3, 3]" = convolution_backward_302[1];  convolution_backward_302 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_990: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_20);  relu_20 = None
    alias_991: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_990);  alias_990 = None
    le_263: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_991, 0);  alias_991 = None
    scalar_tensor_263: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_263: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_263, scalar_tensor_263, getitem_1556);  le_263 = scalar_tensor_263 = getitem_1556 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4967: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_63, 0);  squeeze_63 = None
    unsqueeze_4968: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4967, 2);  unsqueeze_4967 = None
    unsqueeze_4969: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4968, 3);  unsqueeze_4968 = None
    sum_612: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_263, [0, 2, 3])
    sub_1537: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_21, unsqueeze_4969)
    mul_5126: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_263, sub_1537);  sub_1537 = None
    sum_613: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5126, [0, 2, 3]);  mul_5126 = None
    mul_5127: "f32[18]" = torch.ops.aten.mul.Tensor(sum_612, 3.985969387755102e-05)
    unsqueeze_4970: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5127, 0);  mul_5127 = None
    unsqueeze_4971: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4970, 2);  unsqueeze_4970 = None
    unsqueeze_4972: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4971, 3);  unsqueeze_4971 = None
    mul_5128: "f32[18]" = torch.ops.aten.mul.Tensor(sum_613, 3.985969387755102e-05)
    mul_5129: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_64, squeeze_64)
    mul_5130: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5128, mul_5129);  mul_5128 = mul_5129 = None
    unsqueeze_4973: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5130, 0);  mul_5130 = None
    unsqueeze_4974: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4973, 2);  unsqueeze_4973 = None
    unsqueeze_4975: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4974, 3);  unsqueeze_4974 = None
    mul_5131: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_64, primals_65);  primals_65 = None
    unsqueeze_4976: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5131, 0);  mul_5131 = None
    unsqueeze_4977: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4976, 2);  unsqueeze_4976 = None
    unsqueeze_4978: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4977, 3);  unsqueeze_4977 = None
    sub_1538: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_21, unsqueeze_4969);  convolution_21 = unsqueeze_4969 = None
    mul_5132: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1538, unsqueeze_4975);  sub_1538 = unsqueeze_4975 = None
    sub_1539: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_263, mul_5132);  where_263 = mul_5132 = None
    sub_1540: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1539, unsqueeze_4972);  sub_1539 = unsqueeze_4972 = None
    mul_5133: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1540, unsqueeze_4978);  sub_1540 = unsqueeze_4978 = None
    mul_5134: "f32[18]" = torch.ops.aten.mul.Tensor(sum_613, squeeze_64);  sum_613 = squeeze_64 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_303 = torch.ops.aten.convolution_backward.default(mul_5133, relu_19, primals_64, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5133 = primals_64 = None
    getitem_1559: "f32[8, 18, 56, 56]" = convolution_backward_303[0]
    getitem_1560: "f32[18, 18, 3, 3]" = convolution_backward_303[1];  convolution_backward_303 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2095: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_262, getitem_1559);  where_262 = getitem_1559 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_993: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_19);  relu_19 = None
    alias_994: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_993);  alias_993 = None
    le_264: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_994, 0);  alias_994 = None
    scalar_tensor_264: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_264: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_264, scalar_tensor_264, add_2095);  le_264 = scalar_tensor_264 = add_2095 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_4979: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_60, 0);  squeeze_60 = None
    unsqueeze_4980: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4979, 2);  unsqueeze_4979 = None
    unsqueeze_4981: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4980, 3);  unsqueeze_4980 = None
    sum_614: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_264, [0, 2, 3])
    sub_1541: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_20, unsqueeze_4981)
    mul_5135: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_264, sub_1541);  sub_1541 = None
    sum_615: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5135, [0, 2, 3]);  mul_5135 = None
    mul_5136: "f32[18]" = torch.ops.aten.mul.Tensor(sum_614, 3.985969387755102e-05)
    unsqueeze_4982: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5136, 0);  mul_5136 = None
    unsqueeze_4983: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4982, 2);  unsqueeze_4982 = None
    unsqueeze_4984: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4983, 3);  unsqueeze_4983 = None
    mul_5137: "f32[18]" = torch.ops.aten.mul.Tensor(sum_615, 3.985969387755102e-05)
    mul_5138: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_61, squeeze_61)
    mul_5139: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5137, mul_5138);  mul_5137 = mul_5138 = None
    unsqueeze_4985: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5139, 0);  mul_5139 = None
    unsqueeze_4986: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4985, 2);  unsqueeze_4985 = None
    unsqueeze_4987: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4986, 3);  unsqueeze_4986 = None
    mul_5140: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_61, primals_62);  primals_62 = None
    unsqueeze_4988: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5140, 0);  mul_5140 = None
    unsqueeze_4989: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4988, 2);  unsqueeze_4988 = None
    unsqueeze_4990: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4989, 3);  unsqueeze_4989 = None
    sub_1542: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_20, unsqueeze_4981);  convolution_20 = unsqueeze_4981 = None
    mul_5141: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1542, unsqueeze_4987);  sub_1542 = unsqueeze_4987 = None
    sub_1543: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_264, mul_5141);  mul_5141 = None
    sub_1544: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1543, unsqueeze_4984);  sub_1543 = unsqueeze_4984 = None
    mul_5142: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1544, unsqueeze_4990);  sub_1544 = unsqueeze_4990 = None
    mul_5143: "f32[18]" = torch.ops.aten.mul.Tensor(sum_615, squeeze_61);  sum_615 = squeeze_61 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_304 = torch.ops.aten.convolution_backward.default(mul_5142, relu_18, primals_61, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5142 = primals_61 = None
    getitem_1562: "f32[8, 18, 56, 56]" = convolution_backward_304[0]
    getitem_1563: "f32[18, 18, 3, 3]" = convolution_backward_304[1];  convolution_backward_304 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_996: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_18);  relu_18 = None
    alias_997: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_996);  alias_996 = None
    le_265: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_997, 0);  alias_997 = None
    scalar_tensor_265: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_265: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_265, scalar_tensor_265, getitem_1562);  le_265 = scalar_tensor_265 = getitem_1562 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_4991: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_57, 0);  squeeze_57 = None
    unsqueeze_4992: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4991, 2);  unsqueeze_4991 = None
    unsqueeze_4993: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4992, 3);  unsqueeze_4992 = None
    sum_616: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_265, [0, 2, 3])
    sub_1545: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_19, unsqueeze_4993)
    mul_5144: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_265, sub_1545);  sub_1545 = None
    sum_617: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5144, [0, 2, 3]);  mul_5144 = None
    mul_5145: "f32[18]" = torch.ops.aten.mul.Tensor(sum_616, 3.985969387755102e-05)
    unsqueeze_4994: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5145, 0);  mul_5145 = None
    unsqueeze_4995: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4994, 2);  unsqueeze_4994 = None
    unsqueeze_4996: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4995, 3);  unsqueeze_4995 = None
    mul_5146: "f32[18]" = torch.ops.aten.mul.Tensor(sum_617, 3.985969387755102e-05)
    mul_5147: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_58, squeeze_58)
    mul_5148: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5146, mul_5147);  mul_5146 = mul_5147 = None
    unsqueeze_4997: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5148, 0);  mul_5148 = None
    unsqueeze_4998: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4997, 2);  unsqueeze_4997 = None
    unsqueeze_4999: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_4998, 3);  unsqueeze_4998 = None
    mul_5149: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_58, primals_59);  primals_59 = None
    unsqueeze_5000: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5149, 0);  mul_5149 = None
    unsqueeze_5001: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5000, 2);  unsqueeze_5000 = None
    unsqueeze_5002: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5001, 3);  unsqueeze_5001 = None
    sub_1546: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_19, unsqueeze_4993);  convolution_19 = unsqueeze_4993 = None
    mul_5150: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1546, unsqueeze_4999);  sub_1546 = unsqueeze_4999 = None
    sub_1547: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_265, mul_5150);  where_265 = mul_5150 = None
    sub_1548: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1547, unsqueeze_4996);  sub_1547 = unsqueeze_4996 = None
    mul_5151: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1548, unsqueeze_5002);  sub_1548 = unsqueeze_5002 = None
    mul_5152: "f32[18]" = torch.ops.aten.mul.Tensor(sum_617, squeeze_58);  sum_617 = squeeze_58 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_305 = torch.ops.aten.convolution_backward.default(mul_5151, relu_17, primals_58, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5151 = primals_58 = None
    getitem_1565: "f32[8, 18, 56, 56]" = convolution_backward_305[0]
    getitem_1566: "f32[18, 18, 3, 3]" = convolution_backward_305[1];  convolution_backward_305 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2096: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_264, getitem_1565);  where_264 = getitem_1565 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:116, code: x = self.act2(x)
    alias_999: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_17);  relu_17 = None
    alias_1000: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_999);  alias_999 = None
    le_266: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_1000, 0);  alias_1000 = None
    scalar_tensor_266: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_266: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_266, scalar_tensor_266, add_2096);  le_266 = scalar_tensor_266 = add_2096 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:105, code: x = self.bn2(x)
    unsqueeze_5003: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_54, 0);  squeeze_54 = None
    unsqueeze_5004: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5003, 2);  unsqueeze_5003 = None
    unsqueeze_5005: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5004, 3);  unsqueeze_5004 = None
    sum_618: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_266, [0, 2, 3])
    sub_1549: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_18, unsqueeze_5005)
    mul_5153: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_266, sub_1549);  sub_1549 = None
    sum_619: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5153, [0, 2, 3]);  mul_5153 = None
    mul_5154: "f32[18]" = torch.ops.aten.mul.Tensor(sum_618, 3.985969387755102e-05)
    unsqueeze_5006: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5154, 0);  mul_5154 = None
    unsqueeze_5007: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5006, 2);  unsqueeze_5006 = None
    unsqueeze_5008: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5007, 3);  unsqueeze_5007 = None
    mul_5155: "f32[18]" = torch.ops.aten.mul.Tensor(sum_619, 3.985969387755102e-05)
    mul_5156: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_55, squeeze_55)
    mul_5157: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5155, mul_5156);  mul_5155 = mul_5156 = None
    unsqueeze_5009: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5157, 0);  mul_5157 = None
    unsqueeze_5010: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5009, 2);  unsqueeze_5009 = None
    unsqueeze_5011: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5010, 3);  unsqueeze_5010 = None
    mul_5158: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_55, primals_56);  primals_56 = None
    unsqueeze_5012: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5158, 0);  mul_5158 = None
    unsqueeze_5013: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5012, 2);  unsqueeze_5012 = None
    unsqueeze_5014: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5013, 3);  unsqueeze_5013 = None
    sub_1550: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_18, unsqueeze_5005);  convolution_18 = unsqueeze_5005 = None
    mul_5159: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1550, unsqueeze_5011);  sub_1550 = unsqueeze_5011 = None
    sub_1551: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_266, mul_5159);  mul_5159 = None
    sub_1552: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1551, unsqueeze_5008);  sub_1551 = unsqueeze_5008 = None
    mul_5160: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1552, unsqueeze_5014);  sub_1552 = unsqueeze_5014 = None
    mul_5161: "f32[18]" = torch.ops.aten.mul.Tensor(sum_619, squeeze_55);  sum_619 = squeeze_55 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:104, code: x = self.conv2(x)
    convolution_backward_306 = torch.ops.aten.convolution_backward.default(mul_5160, relu_16, primals_55, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5160 = primals_55 = None
    getitem_1568: "f32[8, 18, 56, 56]" = convolution_backward_306[0]
    getitem_1569: "f32[18, 18, 3, 3]" = convolution_backward_306[1];  convolution_backward_306 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:101, code: x = self.act1(x)
    alias_1002: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_16);  relu_16 = None
    alias_1003: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_1002);  alias_1002 = None
    le_267: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_1003, 0);  alias_1003 = None
    scalar_tensor_267: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_267: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_267, scalar_tensor_267, getitem_1568);  le_267 = scalar_tensor_267 = getitem_1568 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:99, code: x = self.bn1(x)
    unsqueeze_5015: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_51, 0);  squeeze_51 = None
    unsqueeze_5016: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5015, 2);  unsqueeze_5015 = None
    unsqueeze_5017: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5016, 3);  unsqueeze_5016 = None
    sum_620: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_267, [0, 2, 3])
    sub_1553: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_17, unsqueeze_5017)
    mul_5162: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_267, sub_1553);  sub_1553 = None
    sum_621: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5162, [0, 2, 3]);  mul_5162 = None
    mul_5163: "f32[18]" = torch.ops.aten.mul.Tensor(sum_620, 3.985969387755102e-05)
    unsqueeze_5018: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5163, 0);  mul_5163 = None
    unsqueeze_5019: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5018, 2);  unsqueeze_5018 = None
    unsqueeze_5020: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5019, 3);  unsqueeze_5019 = None
    mul_5164: "f32[18]" = torch.ops.aten.mul.Tensor(sum_621, 3.985969387755102e-05)
    mul_5165: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_52, squeeze_52)
    mul_5166: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5164, mul_5165);  mul_5164 = mul_5165 = None
    unsqueeze_5021: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5166, 0);  mul_5166 = None
    unsqueeze_5022: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5021, 2);  unsqueeze_5021 = None
    unsqueeze_5023: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5022, 3);  unsqueeze_5022 = None
    mul_5167: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_52, primals_53);  primals_53 = None
    unsqueeze_5024: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5167, 0);  mul_5167 = None
    unsqueeze_5025: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5024, 2);  unsqueeze_5024 = None
    unsqueeze_5026: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5025, 3);  unsqueeze_5025 = None
    sub_1554: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_17, unsqueeze_5017);  convolution_17 = unsqueeze_5017 = None
    mul_5168: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1554, unsqueeze_5023);  sub_1554 = unsqueeze_5023 = None
    sub_1555: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_267, mul_5168);  where_267 = mul_5168 = None
    sub_1556: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1555, unsqueeze_5020);  sub_1555 = unsqueeze_5020 = None
    mul_5169: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1556, unsqueeze_5026);  sub_1556 = unsqueeze_5026 = None
    mul_5170: "f32[18]" = torch.ops.aten.mul.Tensor(sum_621, squeeze_52);  sum_621 = squeeze_52 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    convolution_backward_307 = torch.ops.aten.convolution_backward.default(mul_5169, relu_14, primals_52, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5169 = primals_52 = None
    getitem_1571: "f32[8, 18, 56, 56]" = convolution_backward_307[0]
    getitem_1572: "f32[18, 18, 3, 3]" = convolution_backward_307[1];  convolution_backward_307 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:98, code: x = self.conv1(x)
    add_2097: "f32[8, 18, 56, 56]" = torch.ops.aten.add.Tensor(where_266, getitem_1571);  where_266 = getitem_1571 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:750, code: xl = [t(x) for i, t in enumerate(self.transition1)]
    alias_1005: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(relu_15);  relu_15 = None
    alias_1006: "f32[8, 36, 28, 28]" = torch.ops.aten.alias.default(alias_1005);  alias_1005 = None
    le_268: "b8[8, 36, 28, 28]" = torch.ops.aten.le.Scalar(alias_1006, 0);  alias_1006 = None
    scalar_tensor_268: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_268: "f32[8, 36, 28, 28]" = torch.ops.aten.where.self(le_268, scalar_tensor_268, add_2093);  le_268 = scalar_tensor_268 = add_2093 = None
    unsqueeze_5027: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(squeeze_48, 0);  squeeze_48 = None
    unsqueeze_5028: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5027, 2);  unsqueeze_5027 = None
    unsqueeze_5029: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5028, 3);  unsqueeze_5028 = None
    sum_622: "f32[36]" = torch.ops.aten.sum.dim_IntList(where_268, [0, 2, 3])
    sub_1557: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_16, unsqueeze_5029)
    mul_5171: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(where_268, sub_1557);  sub_1557 = None
    sum_623: "f32[36]" = torch.ops.aten.sum.dim_IntList(mul_5171, [0, 2, 3]);  mul_5171 = None
    mul_5172: "f32[36]" = torch.ops.aten.mul.Tensor(sum_622, 0.00015943877551020407)
    unsqueeze_5030: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5172, 0);  mul_5172 = None
    unsqueeze_5031: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5030, 2);  unsqueeze_5030 = None
    unsqueeze_5032: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5031, 3);  unsqueeze_5031 = None
    mul_5173: "f32[36]" = torch.ops.aten.mul.Tensor(sum_623, 0.00015943877551020407)
    mul_5174: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_49, squeeze_49)
    mul_5175: "f32[36]" = torch.ops.aten.mul.Tensor(mul_5173, mul_5174);  mul_5173 = mul_5174 = None
    unsqueeze_5033: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5175, 0);  mul_5175 = None
    unsqueeze_5034: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5033, 2);  unsqueeze_5033 = None
    unsqueeze_5035: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5034, 3);  unsqueeze_5034 = None
    mul_5176: "f32[36]" = torch.ops.aten.mul.Tensor(squeeze_49, primals_50);  primals_50 = None
    unsqueeze_5036: "f32[1, 36]" = torch.ops.aten.unsqueeze.default(mul_5176, 0);  mul_5176 = None
    unsqueeze_5037: "f32[1, 36, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5036, 2);  unsqueeze_5036 = None
    unsqueeze_5038: "f32[1, 36, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5037, 3);  unsqueeze_5037 = None
    sub_1558: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(convolution_16, unsqueeze_5029);  convolution_16 = unsqueeze_5029 = None
    mul_5177: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1558, unsqueeze_5035);  sub_1558 = unsqueeze_5035 = None
    sub_1559: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(where_268, mul_5177);  where_268 = mul_5177 = None
    sub_1560: "f32[8, 36, 28, 28]" = torch.ops.aten.sub.Tensor(sub_1559, unsqueeze_5032);  sub_1559 = unsqueeze_5032 = None
    mul_5178: "f32[8, 36, 28, 28]" = torch.ops.aten.mul.Tensor(sub_1560, unsqueeze_5038);  sub_1560 = unsqueeze_5038 = None
    mul_5179: "f32[36]" = torch.ops.aten.mul.Tensor(sum_623, squeeze_49);  sum_623 = squeeze_49 = None
    convolution_backward_308 = torch.ops.aten.convolution_backward.default(mul_5178, relu_13, primals_49, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5178 = primals_49 = None
    getitem_1574: "f32[8, 256, 56, 56]" = convolution_backward_308[0]
    getitem_1575: "f32[36, 256, 3, 3]" = convolution_backward_308[1];  convolution_backward_308 = None
    alias_1008: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(relu_14);  relu_14 = None
    alias_1009: "f32[8, 18, 56, 56]" = torch.ops.aten.alias.default(alias_1008);  alias_1008 = None
    le_269: "b8[8, 18, 56, 56]" = torch.ops.aten.le.Scalar(alias_1009, 0);  alias_1009 = None
    scalar_tensor_269: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_269: "f32[8, 18, 56, 56]" = torch.ops.aten.where.self(le_269, scalar_tensor_269, add_2097);  le_269 = scalar_tensor_269 = add_2097 = None
    unsqueeze_5039: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(squeeze_45, 0);  squeeze_45 = None
    unsqueeze_5040: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5039, 2);  unsqueeze_5039 = None
    unsqueeze_5041: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5040, 3);  unsqueeze_5040 = None
    sum_624: "f32[18]" = torch.ops.aten.sum.dim_IntList(where_269, [0, 2, 3])
    sub_1561: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_15, unsqueeze_5041)
    mul_5180: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(where_269, sub_1561);  sub_1561 = None
    sum_625: "f32[18]" = torch.ops.aten.sum.dim_IntList(mul_5180, [0, 2, 3]);  mul_5180 = None
    mul_5181: "f32[18]" = torch.ops.aten.mul.Tensor(sum_624, 3.985969387755102e-05)
    unsqueeze_5042: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5181, 0);  mul_5181 = None
    unsqueeze_5043: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5042, 2);  unsqueeze_5042 = None
    unsqueeze_5044: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5043, 3);  unsqueeze_5043 = None
    mul_5182: "f32[18]" = torch.ops.aten.mul.Tensor(sum_625, 3.985969387755102e-05)
    mul_5183: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_46, squeeze_46)
    mul_5184: "f32[18]" = torch.ops.aten.mul.Tensor(mul_5182, mul_5183);  mul_5182 = mul_5183 = None
    unsqueeze_5045: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5184, 0);  mul_5184 = None
    unsqueeze_5046: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5045, 2);  unsqueeze_5045 = None
    unsqueeze_5047: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5046, 3);  unsqueeze_5046 = None
    mul_5185: "f32[18]" = torch.ops.aten.mul.Tensor(squeeze_46, primals_47);  primals_47 = None
    unsqueeze_5048: "f32[1, 18]" = torch.ops.aten.unsqueeze.default(mul_5185, 0);  mul_5185 = None
    unsqueeze_5049: "f32[1, 18, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5048, 2);  unsqueeze_5048 = None
    unsqueeze_5050: "f32[1, 18, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5049, 3);  unsqueeze_5049 = None
    sub_1562: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_15, unsqueeze_5041);  convolution_15 = unsqueeze_5041 = None
    mul_5186: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1562, unsqueeze_5047);  sub_1562 = unsqueeze_5047 = None
    sub_1563: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(where_269, mul_5186);  where_269 = mul_5186 = None
    sub_1564: "f32[8, 18, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1563, unsqueeze_5044);  sub_1563 = unsqueeze_5044 = None
    mul_5187: "f32[8, 18, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1564, unsqueeze_5050);  sub_1564 = unsqueeze_5050 = None
    mul_5188: "f32[18]" = torch.ops.aten.mul.Tensor(sum_625, squeeze_46);  sum_625 = squeeze_46 = None
    convolution_backward_309 = torch.ops.aten.convolution_backward.default(mul_5187, relu_13, primals_46, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5187 = primals_46 = None
    getitem_1577: "f32[8, 256, 56, 56]" = convolution_backward_309[0]
    getitem_1578: "f32[18, 256, 3, 3]" = convolution_backward_309[1];  convolution_backward_309 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:750, code: xl = [t(x) for i, t in enumerate(self.transition1)]
    add_2098: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1574, getitem_1577);  getitem_1574 = getitem_1577 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_1011: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(relu_13);  relu_13 = None
    alias_1012: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(alias_1011);  alias_1011 = None
    le_270: "b8[8, 256, 56, 56]" = torch.ops.aten.le.Scalar(alias_1012, 0);  alias_1012 = None
    scalar_tensor_270: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_270: "f32[8, 256, 56, 56]" = torch.ops.aten.where.self(le_270, scalar_tensor_270, add_2098);  le_270 = scalar_tensor_270 = add_2098 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_5051: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_42, 0);  squeeze_42 = None
    unsqueeze_5052: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5051, 2);  unsqueeze_5051 = None
    unsqueeze_5053: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5052, 3);  unsqueeze_5052 = None
    sum_626: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_270, [0, 2, 3])
    sub_1565: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_14, unsqueeze_5053)
    mul_5189: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(where_270, sub_1565);  sub_1565 = None
    sum_627: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_5189, [0, 2, 3]);  mul_5189 = None
    mul_5190: "f32[256]" = torch.ops.aten.mul.Tensor(sum_626, 3.985969387755102e-05)
    unsqueeze_5054: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5190, 0);  mul_5190 = None
    unsqueeze_5055: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5054, 2);  unsqueeze_5054 = None
    unsqueeze_5056: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5055, 3);  unsqueeze_5055 = None
    mul_5191: "f32[256]" = torch.ops.aten.mul.Tensor(sum_627, 3.985969387755102e-05)
    mul_5192: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_43, squeeze_43)
    mul_5193: "f32[256]" = torch.ops.aten.mul.Tensor(mul_5191, mul_5192);  mul_5191 = mul_5192 = None
    unsqueeze_5057: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5193, 0);  mul_5193 = None
    unsqueeze_5058: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5057, 2);  unsqueeze_5057 = None
    unsqueeze_5059: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5058, 3);  unsqueeze_5058 = None
    mul_5194: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_43, primals_44);  primals_44 = None
    unsqueeze_5060: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5194, 0);  mul_5194 = None
    unsqueeze_5061: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5060, 2);  unsqueeze_5060 = None
    unsqueeze_5062: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5061, 3);  unsqueeze_5061 = None
    sub_1566: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_14, unsqueeze_5053);  convolution_14 = unsqueeze_5053 = None
    mul_5195: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1566, unsqueeze_5059);  sub_1566 = unsqueeze_5059 = None
    sub_1567: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(where_270, mul_5195);  mul_5195 = None
    sub_1568: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1567, unsqueeze_5056);  sub_1567 = unsqueeze_5056 = None
    mul_5196: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1568, unsqueeze_5062);  sub_1568 = unsqueeze_5062 = None
    mul_5197: "f32[256]" = torch.ops.aten.mul.Tensor(sum_627, squeeze_43);  sum_627 = squeeze_43 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_310 = torch.ops.aten.convolution_backward.default(mul_5196, relu_12, primals_43, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5196 = primals_43 = None
    getitem_1580: "f32[8, 64, 56, 56]" = convolution_backward_310[0]
    getitem_1581: "f32[256, 64, 1, 1]" = convolution_backward_310[1];  convolution_backward_310 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_1014: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_12);  relu_12 = None
    alias_1015: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1014);  alias_1014 = None
    le_271: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1015, 0);  alias_1015 = None
    scalar_tensor_271: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_271: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_271, scalar_tensor_271, getitem_1580);  le_271 = scalar_tensor_271 = getitem_1580 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_5063: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_39, 0);  squeeze_39 = None
    unsqueeze_5064: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5063, 2);  unsqueeze_5063 = None
    unsqueeze_5065: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5064, 3);  unsqueeze_5064 = None
    sum_628: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_271, [0, 2, 3])
    sub_1569: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_13, unsqueeze_5065)
    mul_5198: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_271, sub_1569);  sub_1569 = None
    sum_629: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5198, [0, 2, 3]);  mul_5198 = None
    mul_5199: "f32[64]" = torch.ops.aten.mul.Tensor(sum_628, 3.985969387755102e-05)
    unsqueeze_5066: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5199, 0);  mul_5199 = None
    unsqueeze_5067: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5066, 2);  unsqueeze_5066 = None
    unsqueeze_5068: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5067, 3);  unsqueeze_5067 = None
    mul_5200: "f32[64]" = torch.ops.aten.mul.Tensor(sum_629, 3.985969387755102e-05)
    mul_5201: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_40, squeeze_40)
    mul_5202: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5200, mul_5201);  mul_5200 = mul_5201 = None
    unsqueeze_5069: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5202, 0);  mul_5202 = None
    unsqueeze_5070: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5069, 2);  unsqueeze_5069 = None
    unsqueeze_5071: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5070, 3);  unsqueeze_5070 = None
    mul_5203: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_40, primals_41);  primals_41 = None
    unsqueeze_5072: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5203, 0);  mul_5203 = None
    unsqueeze_5073: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5072, 2);  unsqueeze_5072 = None
    unsqueeze_5074: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5073, 3);  unsqueeze_5073 = None
    sub_1570: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_13, unsqueeze_5065);  convolution_13 = unsqueeze_5065 = None
    mul_5204: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1570, unsqueeze_5071);  sub_1570 = unsqueeze_5071 = None
    sub_1571: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_271, mul_5204);  where_271 = mul_5204 = None
    sub_1572: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1571, unsqueeze_5068);  sub_1571 = unsqueeze_5068 = None
    mul_5205: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1572, unsqueeze_5074);  sub_1572 = unsqueeze_5074 = None
    mul_5206: "f32[64]" = torch.ops.aten.mul.Tensor(sum_629, squeeze_40);  sum_629 = squeeze_40 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_311 = torch.ops.aten.convolution_backward.default(mul_5205, relu_11, primals_40, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5205 = primals_40 = None
    getitem_1583: "f32[8, 64, 56, 56]" = convolution_backward_311[0]
    getitem_1584: "f32[64, 64, 3, 3]" = convolution_backward_311[1];  convolution_backward_311 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_1017: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_11);  relu_11 = None
    alias_1018: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1017);  alias_1017 = None
    le_272: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1018, 0);  alias_1018 = None
    scalar_tensor_272: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_272: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_272, scalar_tensor_272, getitem_1583);  le_272 = scalar_tensor_272 = getitem_1583 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_5075: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_36, 0);  squeeze_36 = None
    unsqueeze_5076: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5075, 2);  unsqueeze_5075 = None
    unsqueeze_5077: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5076, 3);  unsqueeze_5076 = None
    sum_630: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_272, [0, 2, 3])
    sub_1573: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_12, unsqueeze_5077)
    mul_5207: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_272, sub_1573);  sub_1573 = None
    sum_631: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5207, [0, 2, 3]);  mul_5207 = None
    mul_5208: "f32[64]" = torch.ops.aten.mul.Tensor(sum_630, 3.985969387755102e-05)
    unsqueeze_5078: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5208, 0);  mul_5208 = None
    unsqueeze_5079: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5078, 2);  unsqueeze_5078 = None
    unsqueeze_5080: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5079, 3);  unsqueeze_5079 = None
    mul_5209: "f32[64]" = torch.ops.aten.mul.Tensor(sum_631, 3.985969387755102e-05)
    mul_5210: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_37, squeeze_37)
    mul_5211: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5209, mul_5210);  mul_5209 = mul_5210 = None
    unsqueeze_5081: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5211, 0);  mul_5211 = None
    unsqueeze_5082: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5081, 2);  unsqueeze_5081 = None
    unsqueeze_5083: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5082, 3);  unsqueeze_5082 = None
    mul_5212: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_37, primals_38);  primals_38 = None
    unsqueeze_5084: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5212, 0);  mul_5212 = None
    unsqueeze_5085: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5084, 2);  unsqueeze_5084 = None
    unsqueeze_5086: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5085, 3);  unsqueeze_5085 = None
    sub_1574: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_12, unsqueeze_5077);  convolution_12 = unsqueeze_5077 = None
    mul_5213: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1574, unsqueeze_5083);  sub_1574 = unsqueeze_5083 = None
    sub_1575: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_272, mul_5213);  where_272 = mul_5213 = None
    sub_1576: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1575, unsqueeze_5080);  sub_1575 = unsqueeze_5080 = None
    mul_5214: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1576, unsqueeze_5086);  sub_1576 = unsqueeze_5086 = None
    mul_5215: "f32[64]" = torch.ops.aten.mul.Tensor(sum_631, squeeze_37);  sum_631 = squeeze_37 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_312 = torch.ops.aten.convolution_backward.default(mul_5214, relu_10, primals_37, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5214 = primals_37 = None
    getitem_1586: "f32[8, 256, 56, 56]" = convolution_backward_312[0]
    getitem_1587: "f32[64, 256, 1, 1]" = convolution_backward_312[1];  convolution_backward_312 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_2099: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(where_270, getitem_1586);  where_270 = getitem_1586 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_1020: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(relu_10);  relu_10 = None
    alias_1021: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(alias_1020);  alias_1020 = None
    le_273: "b8[8, 256, 56, 56]" = torch.ops.aten.le.Scalar(alias_1021, 0);  alias_1021 = None
    scalar_tensor_273: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_273: "f32[8, 256, 56, 56]" = torch.ops.aten.where.self(le_273, scalar_tensor_273, add_2099);  le_273 = scalar_tensor_273 = add_2099 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_5087: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_33, 0);  squeeze_33 = None
    unsqueeze_5088: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5087, 2);  unsqueeze_5087 = None
    unsqueeze_5089: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5088, 3);  unsqueeze_5088 = None
    sum_632: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_273, [0, 2, 3])
    sub_1577: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_11, unsqueeze_5089)
    mul_5216: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(where_273, sub_1577);  sub_1577 = None
    sum_633: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_5216, [0, 2, 3]);  mul_5216 = None
    mul_5217: "f32[256]" = torch.ops.aten.mul.Tensor(sum_632, 3.985969387755102e-05)
    unsqueeze_5090: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5217, 0);  mul_5217 = None
    unsqueeze_5091: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5090, 2);  unsqueeze_5090 = None
    unsqueeze_5092: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5091, 3);  unsqueeze_5091 = None
    mul_5218: "f32[256]" = torch.ops.aten.mul.Tensor(sum_633, 3.985969387755102e-05)
    mul_5219: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_34, squeeze_34)
    mul_5220: "f32[256]" = torch.ops.aten.mul.Tensor(mul_5218, mul_5219);  mul_5218 = mul_5219 = None
    unsqueeze_5093: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5220, 0);  mul_5220 = None
    unsqueeze_5094: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5093, 2);  unsqueeze_5093 = None
    unsqueeze_5095: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5094, 3);  unsqueeze_5094 = None
    mul_5221: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_34, primals_35);  primals_35 = None
    unsqueeze_5096: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5221, 0);  mul_5221 = None
    unsqueeze_5097: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5096, 2);  unsqueeze_5096 = None
    unsqueeze_5098: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5097, 3);  unsqueeze_5097 = None
    sub_1578: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_11, unsqueeze_5089);  convolution_11 = unsqueeze_5089 = None
    mul_5222: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1578, unsqueeze_5095);  sub_1578 = unsqueeze_5095 = None
    sub_1579: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(where_273, mul_5222);  mul_5222 = None
    sub_1580: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1579, unsqueeze_5092);  sub_1579 = unsqueeze_5092 = None
    mul_5223: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1580, unsqueeze_5098);  sub_1580 = unsqueeze_5098 = None
    mul_5224: "f32[256]" = torch.ops.aten.mul.Tensor(sum_633, squeeze_34);  sum_633 = squeeze_34 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_313 = torch.ops.aten.convolution_backward.default(mul_5223, relu_9, primals_34, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5223 = primals_34 = None
    getitem_1589: "f32[8, 64, 56, 56]" = convolution_backward_313[0]
    getitem_1590: "f32[256, 64, 1, 1]" = convolution_backward_313[1];  convolution_backward_313 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_1023: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_9);  relu_9 = None
    alias_1024: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1023);  alias_1023 = None
    le_274: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1024, 0);  alias_1024 = None
    scalar_tensor_274: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_274: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_274, scalar_tensor_274, getitem_1589);  le_274 = scalar_tensor_274 = getitem_1589 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_5099: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_30, 0);  squeeze_30 = None
    unsqueeze_5100: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5099, 2);  unsqueeze_5099 = None
    unsqueeze_5101: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5100, 3);  unsqueeze_5100 = None
    sum_634: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_274, [0, 2, 3])
    sub_1581: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_10, unsqueeze_5101)
    mul_5225: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_274, sub_1581);  sub_1581 = None
    sum_635: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5225, [0, 2, 3]);  mul_5225 = None
    mul_5226: "f32[64]" = torch.ops.aten.mul.Tensor(sum_634, 3.985969387755102e-05)
    unsqueeze_5102: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5226, 0);  mul_5226 = None
    unsqueeze_5103: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5102, 2);  unsqueeze_5102 = None
    unsqueeze_5104: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5103, 3);  unsqueeze_5103 = None
    mul_5227: "f32[64]" = torch.ops.aten.mul.Tensor(sum_635, 3.985969387755102e-05)
    mul_5228: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_31, squeeze_31)
    mul_5229: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5227, mul_5228);  mul_5227 = mul_5228 = None
    unsqueeze_5105: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5229, 0);  mul_5229 = None
    unsqueeze_5106: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5105, 2);  unsqueeze_5105 = None
    unsqueeze_5107: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5106, 3);  unsqueeze_5106 = None
    mul_5230: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_31, primals_32);  primals_32 = None
    unsqueeze_5108: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5230, 0);  mul_5230 = None
    unsqueeze_5109: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5108, 2);  unsqueeze_5108 = None
    unsqueeze_5110: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5109, 3);  unsqueeze_5109 = None
    sub_1582: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_10, unsqueeze_5101);  convolution_10 = unsqueeze_5101 = None
    mul_5231: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1582, unsqueeze_5107);  sub_1582 = unsqueeze_5107 = None
    sub_1583: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_274, mul_5231);  where_274 = mul_5231 = None
    sub_1584: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1583, unsqueeze_5104);  sub_1583 = unsqueeze_5104 = None
    mul_5232: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1584, unsqueeze_5110);  sub_1584 = unsqueeze_5110 = None
    mul_5233: "f32[64]" = torch.ops.aten.mul.Tensor(sum_635, squeeze_31);  sum_635 = squeeze_31 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_314 = torch.ops.aten.convolution_backward.default(mul_5232, relu_8, primals_31, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5232 = primals_31 = None
    getitem_1592: "f32[8, 64, 56, 56]" = convolution_backward_314[0]
    getitem_1593: "f32[64, 64, 3, 3]" = convolution_backward_314[1];  convolution_backward_314 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_1026: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_8);  relu_8 = None
    alias_1027: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1026);  alias_1026 = None
    le_275: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1027, 0);  alias_1027 = None
    scalar_tensor_275: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_275: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_275, scalar_tensor_275, getitem_1592);  le_275 = scalar_tensor_275 = getitem_1592 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_5111: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_27, 0);  squeeze_27 = None
    unsqueeze_5112: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5111, 2);  unsqueeze_5111 = None
    unsqueeze_5113: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5112, 3);  unsqueeze_5112 = None
    sum_636: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_275, [0, 2, 3])
    sub_1585: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_9, unsqueeze_5113)
    mul_5234: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_275, sub_1585);  sub_1585 = None
    sum_637: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5234, [0, 2, 3]);  mul_5234 = None
    mul_5235: "f32[64]" = torch.ops.aten.mul.Tensor(sum_636, 3.985969387755102e-05)
    unsqueeze_5114: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5235, 0);  mul_5235 = None
    unsqueeze_5115: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5114, 2);  unsqueeze_5114 = None
    unsqueeze_5116: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5115, 3);  unsqueeze_5115 = None
    mul_5236: "f32[64]" = torch.ops.aten.mul.Tensor(sum_637, 3.985969387755102e-05)
    mul_5237: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_28, squeeze_28)
    mul_5238: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5236, mul_5237);  mul_5236 = mul_5237 = None
    unsqueeze_5117: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5238, 0);  mul_5238 = None
    unsqueeze_5118: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5117, 2);  unsqueeze_5117 = None
    unsqueeze_5119: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5118, 3);  unsqueeze_5118 = None
    mul_5239: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_28, primals_29);  primals_29 = None
    unsqueeze_5120: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5239, 0);  mul_5239 = None
    unsqueeze_5121: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5120, 2);  unsqueeze_5120 = None
    unsqueeze_5122: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5121, 3);  unsqueeze_5121 = None
    sub_1586: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_9, unsqueeze_5113);  convolution_9 = unsqueeze_5113 = None
    mul_5240: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1586, unsqueeze_5119);  sub_1586 = unsqueeze_5119 = None
    sub_1587: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_275, mul_5240);  where_275 = mul_5240 = None
    sub_1588: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1587, unsqueeze_5116);  sub_1587 = unsqueeze_5116 = None
    mul_5241: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1588, unsqueeze_5122);  sub_1588 = unsqueeze_5122 = None
    mul_5242: "f32[64]" = torch.ops.aten.mul.Tensor(sum_637, squeeze_28);  sum_637 = squeeze_28 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_315 = torch.ops.aten.convolution_backward.default(mul_5241, relu_7, primals_28, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5241 = primals_28 = None
    getitem_1595: "f32[8, 256, 56, 56]" = convolution_backward_315[0]
    getitem_1596: "f32[64, 256, 1, 1]" = convolution_backward_315[1];  convolution_backward_315 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_2100: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(where_273, getitem_1595);  where_273 = getitem_1595 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_1029: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(relu_7);  relu_7 = None
    alias_1030: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(alias_1029);  alias_1029 = None
    le_276: "b8[8, 256, 56, 56]" = torch.ops.aten.le.Scalar(alias_1030, 0);  alias_1030 = None
    scalar_tensor_276: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_276: "f32[8, 256, 56, 56]" = torch.ops.aten.where.self(le_276, scalar_tensor_276, add_2100);  le_276 = scalar_tensor_276 = add_2100 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_5123: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_24, 0);  squeeze_24 = None
    unsqueeze_5124: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5123, 2);  unsqueeze_5123 = None
    unsqueeze_5125: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5124, 3);  unsqueeze_5124 = None
    sum_638: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_276, [0, 2, 3])
    sub_1589: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_8, unsqueeze_5125)
    mul_5243: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(where_276, sub_1589);  sub_1589 = None
    sum_639: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_5243, [0, 2, 3]);  mul_5243 = None
    mul_5244: "f32[256]" = torch.ops.aten.mul.Tensor(sum_638, 3.985969387755102e-05)
    unsqueeze_5126: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5244, 0);  mul_5244 = None
    unsqueeze_5127: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5126, 2);  unsqueeze_5126 = None
    unsqueeze_5128: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5127, 3);  unsqueeze_5127 = None
    mul_5245: "f32[256]" = torch.ops.aten.mul.Tensor(sum_639, 3.985969387755102e-05)
    mul_5246: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_25, squeeze_25)
    mul_5247: "f32[256]" = torch.ops.aten.mul.Tensor(mul_5245, mul_5246);  mul_5245 = mul_5246 = None
    unsqueeze_5129: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5247, 0);  mul_5247 = None
    unsqueeze_5130: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5129, 2);  unsqueeze_5129 = None
    unsqueeze_5131: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5130, 3);  unsqueeze_5130 = None
    mul_5248: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_25, primals_26);  primals_26 = None
    unsqueeze_5132: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5248, 0);  mul_5248 = None
    unsqueeze_5133: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5132, 2);  unsqueeze_5132 = None
    unsqueeze_5134: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5133, 3);  unsqueeze_5133 = None
    sub_1590: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_8, unsqueeze_5125);  convolution_8 = unsqueeze_5125 = None
    mul_5249: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1590, unsqueeze_5131);  sub_1590 = unsqueeze_5131 = None
    sub_1591: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(where_276, mul_5249);  mul_5249 = None
    sub_1592: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1591, unsqueeze_5128);  sub_1591 = unsqueeze_5128 = None
    mul_5250: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1592, unsqueeze_5134);  sub_1592 = unsqueeze_5134 = None
    mul_5251: "f32[256]" = torch.ops.aten.mul.Tensor(sum_639, squeeze_25);  sum_639 = squeeze_25 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_316 = torch.ops.aten.convolution_backward.default(mul_5250, relu_6, primals_25, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5250 = primals_25 = None
    getitem_1598: "f32[8, 64, 56, 56]" = convolution_backward_316[0]
    getitem_1599: "f32[256, 64, 1, 1]" = convolution_backward_316[1];  convolution_backward_316 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_1032: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_6);  relu_6 = None
    alias_1033: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1032);  alias_1032 = None
    le_277: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1033, 0);  alias_1033 = None
    scalar_tensor_277: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_277: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_277, scalar_tensor_277, getitem_1598);  le_277 = scalar_tensor_277 = getitem_1598 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_5135: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_21, 0);  squeeze_21 = None
    unsqueeze_5136: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5135, 2);  unsqueeze_5135 = None
    unsqueeze_5137: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5136, 3);  unsqueeze_5136 = None
    sum_640: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_277, [0, 2, 3])
    sub_1593: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_7, unsqueeze_5137)
    mul_5252: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_277, sub_1593);  sub_1593 = None
    sum_641: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5252, [0, 2, 3]);  mul_5252 = None
    mul_5253: "f32[64]" = torch.ops.aten.mul.Tensor(sum_640, 3.985969387755102e-05)
    unsqueeze_5138: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5253, 0);  mul_5253 = None
    unsqueeze_5139: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5138, 2);  unsqueeze_5138 = None
    unsqueeze_5140: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5139, 3);  unsqueeze_5139 = None
    mul_5254: "f32[64]" = torch.ops.aten.mul.Tensor(sum_641, 3.985969387755102e-05)
    mul_5255: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_22, squeeze_22)
    mul_5256: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5254, mul_5255);  mul_5254 = mul_5255 = None
    unsqueeze_5141: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5256, 0);  mul_5256 = None
    unsqueeze_5142: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5141, 2);  unsqueeze_5141 = None
    unsqueeze_5143: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5142, 3);  unsqueeze_5142 = None
    mul_5257: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_22, primals_23);  primals_23 = None
    unsqueeze_5144: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5257, 0);  mul_5257 = None
    unsqueeze_5145: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5144, 2);  unsqueeze_5144 = None
    unsqueeze_5146: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5145, 3);  unsqueeze_5145 = None
    sub_1594: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_7, unsqueeze_5137);  convolution_7 = unsqueeze_5137 = None
    mul_5258: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1594, unsqueeze_5143);  sub_1594 = unsqueeze_5143 = None
    sub_1595: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_277, mul_5258);  where_277 = mul_5258 = None
    sub_1596: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1595, unsqueeze_5140);  sub_1595 = unsqueeze_5140 = None
    mul_5259: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1596, unsqueeze_5146);  sub_1596 = unsqueeze_5146 = None
    mul_5260: "f32[64]" = torch.ops.aten.mul.Tensor(sum_641, squeeze_22);  sum_641 = squeeze_22 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_317 = torch.ops.aten.convolution_backward.default(mul_5259, relu_5, primals_22, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5259 = primals_22 = None
    getitem_1601: "f32[8, 64, 56, 56]" = convolution_backward_317[0]
    getitem_1602: "f32[64, 64, 3, 3]" = convolution_backward_317[1];  convolution_backward_317 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_1035: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_5);  relu_5 = None
    alias_1036: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1035);  alias_1035 = None
    le_278: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1036, 0);  alias_1036 = None
    scalar_tensor_278: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_278: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_278, scalar_tensor_278, getitem_1601);  le_278 = scalar_tensor_278 = getitem_1601 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_5147: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_18, 0);  squeeze_18 = None
    unsqueeze_5148: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5147, 2);  unsqueeze_5147 = None
    unsqueeze_5149: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5148, 3);  unsqueeze_5148 = None
    sum_642: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_278, [0, 2, 3])
    sub_1597: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_6, unsqueeze_5149)
    mul_5261: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_278, sub_1597);  sub_1597 = None
    sum_643: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5261, [0, 2, 3]);  mul_5261 = None
    mul_5262: "f32[64]" = torch.ops.aten.mul.Tensor(sum_642, 3.985969387755102e-05)
    unsqueeze_5150: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5262, 0);  mul_5262 = None
    unsqueeze_5151: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5150, 2);  unsqueeze_5150 = None
    unsqueeze_5152: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5151, 3);  unsqueeze_5151 = None
    mul_5263: "f32[64]" = torch.ops.aten.mul.Tensor(sum_643, 3.985969387755102e-05)
    mul_5264: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_19, squeeze_19)
    mul_5265: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5263, mul_5264);  mul_5263 = mul_5264 = None
    unsqueeze_5153: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5265, 0);  mul_5265 = None
    unsqueeze_5154: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5153, 2);  unsqueeze_5153 = None
    unsqueeze_5155: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5154, 3);  unsqueeze_5154 = None
    mul_5266: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_19, primals_20);  primals_20 = None
    unsqueeze_5156: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5266, 0);  mul_5266 = None
    unsqueeze_5157: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5156, 2);  unsqueeze_5156 = None
    unsqueeze_5158: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5157, 3);  unsqueeze_5157 = None
    sub_1598: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_6, unsqueeze_5149);  convolution_6 = unsqueeze_5149 = None
    mul_5267: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1598, unsqueeze_5155);  sub_1598 = unsqueeze_5155 = None
    sub_1599: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_278, mul_5267);  where_278 = mul_5267 = None
    sub_1600: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1599, unsqueeze_5152);  sub_1599 = unsqueeze_5152 = None
    mul_5268: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1600, unsqueeze_5158);  sub_1600 = unsqueeze_5158 = None
    mul_5269: "f32[64]" = torch.ops.aten.mul.Tensor(sum_643, squeeze_19);  sum_643 = squeeze_19 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_318 = torch.ops.aten.convolution_backward.default(mul_5268, relu_4, primals_19, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5268 = primals_19 = None
    getitem_1604: "f32[8, 256, 56, 56]" = convolution_backward_318[0]
    getitem_1605: "f32[64, 256, 1, 1]" = convolution_backward_318[1];  convolution_backward_318 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_2101: "f32[8, 256, 56, 56]" = torch.ops.aten.add.Tensor(where_276, getitem_1604);  where_276 = getitem_1604 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:202, code: x = self.act3(x)
    alias_1038: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(relu_4);  relu_4 = None
    alias_1039: "f32[8, 256, 56, 56]" = torch.ops.aten.alias.default(alias_1038);  alias_1038 = None
    le_279: "b8[8, 256, 56, 56]" = torch.ops.aten.le.Scalar(alias_1039, 0);  alias_1039 = None
    scalar_tensor_279: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_279: "f32[8, 256, 56, 56]" = torch.ops.aten.where.self(le_279, scalar_tensor_279, add_2101);  le_279 = scalar_tensor_279 = add_2101 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:200, code: shortcut = self.downsample(shortcut)
    unsqueeze_5159: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_15, 0);  squeeze_15 = None
    unsqueeze_5160: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5159, 2);  unsqueeze_5159 = None
    unsqueeze_5161: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5160, 3);  unsqueeze_5160 = None
    sum_644: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_279, [0, 2, 3])
    sub_1601: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_5, unsqueeze_5161)
    mul_5270: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(where_279, sub_1601);  sub_1601 = None
    sum_645: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_5270, [0, 2, 3]);  mul_5270 = None
    mul_5271: "f32[256]" = torch.ops.aten.mul.Tensor(sum_644, 3.985969387755102e-05)
    unsqueeze_5162: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5271, 0);  mul_5271 = None
    unsqueeze_5163: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5162, 2);  unsqueeze_5162 = None
    unsqueeze_5164: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5163, 3);  unsqueeze_5163 = None
    mul_5272: "f32[256]" = torch.ops.aten.mul.Tensor(sum_645, 3.985969387755102e-05)
    mul_5273: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_16, squeeze_16)
    mul_5274: "f32[256]" = torch.ops.aten.mul.Tensor(mul_5272, mul_5273);  mul_5272 = mul_5273 = None
    unsqueeze_5165: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5274, 0);  mul_5274 = None
    unsqueeze_5166: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5165, 2);  unsqueeze_5165 = None
    unsqueeze_5167: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5166, 3);  unsqueeze_5166 = None
    mul_5275: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_16, primals_17);  primals_17 = None
    unsqueeze_5168: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5275, 0);  mul_5275 = None
    unsqueeze_5169: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5168, 2);  unsqueeze_5168 = None
    unsqueeze_5170: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5169, 3);  unsqueeze_5169 = None
    sub_1602: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_5, unsqueeze_5161);  convolution_5 = unsqueeze_5161 = None
    mul_5276: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1602, unsqueeze_5167);  sub_1602 = unsqueeze_5167 = None
    sub_1603: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(where_279, mul_5276);  mul_5276 = None
    sub_1604: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1603, unsqueeze_5164);  sub_1603 = unsqueeze_5164 = None
    mul_5277: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1604, unsqueeze_5170);  sub_1604 = unsqueeze_5170 = None
    mul_5278: "f32[256]" = torch.ops.aten.mul.Tensor(sum_645, squeeze_16);  sum_645 = squeeze_16 = None
    convolution_backward_319 = torch.ops.aten.convolution_backward.default(mul_5277, relu_1, primals_16, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5277 = primals_16 = None
    getitem_1607: "f32[8, 64, 56, 56]" = convolution_backward_319[0]
    getitem_1608: "f32[256, 64, 1, 1]" = convolution_backward_319[1];  convolution_backward_319 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:191, code: x = self.bn3(x)
    unsqueeze_5171: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(squeeze_12, 0);  squeeze_12 = None
    unsqueeze_5172: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5171, 2);  unsqueeze_5171 = None
    unsqueeze_5173: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5172, 3);  unsqueeze_5172 = None
    sum_646: "f32[256]" = torch.ops.aten.sum.dim_IntList(where_279, [0, 2, 3])
    sub_1605: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_4, unsqueeze_5173)
    mul_5279: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(where_279, sub_1605);  sub_1605 = None
    sum_647: "f32[256]" = torch.ops.aten.sum.dim_IntList(mul_5279, [0, 2, 3]);  mul_5279 = None
    mul_5280: "f32[256]" = torch.ops.aten.mul.Tensor(sum_646, 3.985969387755102e-05)
    unsqueeze_5174: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5280, 0);  mul_5280 = None
    unsqueeze_5175: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5174, 2);  unsqueeze_5174 = None
    unsqueeze_5176: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5175, 3);  unsqueeze_5175 = None
    mul_5281: "f32[256]" = torch.ops.aten.mul.Tensor(sum_647, 3.985969387755102e-05)
    mul_5282: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_13, squeeze_13)
    mul_5283: "f32[256]" = torch.ops.aten.mul.Tensor(mul_5281, mul_5282);  mul_5281 = mul_5282 = None
    unsqueeze_5177: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5283, 0);  mul_5283 = None
    unsqueeze_5178: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5177, 2);  unsqueeze_5177 = None
    unsqueeze_5179: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5178, 3);  unsqueeze_5178 = None
    mul_5284: "f32[256]" = torch.ops.aten.mul.Tensor(squeeze_13, primals_14);  primals_14 = None
    unsqueeze_5180: "f32[1, 256]" = torch.ops.aten.unsqueeze.default(mul_5284, 0);  mul_5284 = None
    unsqueeze_5181: "f32[1, 256, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5180, 2);  unsqueeze_5180 = None
    unsqueeze_5182: "f32[1, 256, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5181, 3);  unsqueeze_5181 = None
    sub_1606: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_4, unsqueeze_5173);  convolution_4 = unsqueeze_5173 = None
    mul_5285: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1606, unsqueeze_5179);  sub_1606 = unsqueeze_5179 = None
    sub_1607: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(where_279, mul_5285);  where_279 = mul_5285 = None
    sub_1608: "f32[8, 256, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1607, unsqueeze_5176);  sub_1607 = unsqueeze_5176 = None
    mul_5286: "f32[8, 256, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1608, unsqueeze_5182);  sub_1608 = unsqueeze_5182 = None
    mul_5287: "f32[256]" = torch.ops.aten.mul.Tensor(sum_647, squeeze_13);  sum_647 = squeeze_13 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:190, code: x = self.conv3(x)
    convolution_backward_320 = torch.ops.aten.convolution_backward.default(mul_5286, relu_3, primals_13, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5286 = primals_13 = None
    getitem_1610: "f32[8, 64, 56, 56]" = convolution_backward_320[0]
    getitem_1611: "f32[256, 64, 1, 1]" = convolution_backward_320[1];  convolution_backward_320 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:187, code: x = self.act2(x)
    alias_1041: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_3);  relu_3 = None
    alias_1042: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1041);  alias_1041 = None
    le_280: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1042, 0);  alias_1042 = None
    scalar_tensor_280: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_280: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_280, scalar_tensor_280, getitem_1610);  le_280 = scalar_tensor_280 = getitem_1610 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:185, code: x = self.bn2(x)
    unsqueeze_5183: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_9, 0);  squeeze_9 = None
    unsqueeze_5184: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5183, 2);  unsqueeze_5183 = None
    unsqueeze_5185: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5184, 3);  unsqueeze_5184 = None
    sum_648: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_280, [0, 2, 3])
    sub_1609: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_3, unsqueeze_5185)
    mul_5288: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_280, sub_1609);  sub_1609 = None
    sum_649: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5288, [0, 2, 3]);  mul_5288 = None
    mul_5289: "f32[64]" = torch.ops.aten.mul.Tensor(sum_648, 3.985969387755102e-05)
    unsqueeze_5186: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5289, 0);  mul_5289 = None
    unsqueeze_5187: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5186, 2);  unsqueeze_5186 = None
    unsqueeze_5188: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5187, 3);  unsqueeze_5187 = None
    mul_5290: "f32[64]" = torch.ops.aten.mul.Tensor(sum_649, 3.985969387755102e-05)
    mul_5291: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_10, squeeze_10)
    mul_5292: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5290, mul_5291);  mul_5290 = mul_5291 = None
    unsqueeze_5189: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5292, 0);  mul_5292 = None
    unsqueeze_5190: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5189, 2);  unsqueeze_5189 = None
    unsqueeze_5191: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5190, 3);  unsqueeze_5190 = None
    mul_5293: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_10, primals_11);  primals_11 = None
    unsqueeze_5192: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5293, 0);  mul_5293 = None
    unsqueeze_5193: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5192, 2);  unsqueeze_5192 = None
    unsqueeze_5194: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5193, 3);  unsqueeze_5193 = None
    sub_1610: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_3, unsqueeze_5185);  convolution_3 = unsqueeze_5185 = None
    mul_5294: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1610, unsqueeze_5191);  sub_1610 = unsqueeze_5191 = None
    sub_1611: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_280, mul_5294);  where_280 = mul_5294 = None
    sub_1612: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1611, unsqueeze_5188);  sub_1611 = unsqueeze_5188 = None
    mul_5295: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1612, unsqueeze_5194);  sub_1612 = unsqueeze_5194 = None
    mul_5296: "f32[64]" = torch.ops.aten.mul.Tensor(sum_649, squeeze_10);  sum_649 = squeeze_10 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:184, code: x = self.conv2(x)
    convolution_backward_321 = torch.ops.aten.convolution_backward.default(mul_5295, relu_2, primals_10, [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5295 = primals_10 = None
    getitem_1613: "f32[8, 64, 56, 56]" = convolution_backward_321[0]
    getitem_1614: "f32[64, 64, 3, 3]" = convolution_backward_321[1];  convolution_backward_321 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:182, code: x = self.act1(x)
    alias_1044: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_2);  relu_2 = None
    alias_1045: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1044);  alias_1044 = None
    le_281: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1045, 0);  alias_1045 = None
    scalar_tensor_281: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_281: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_281, scalar_tensor_281, getitem_1613);  le_281 = scalar_tensor_281 = getitem_1613 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:181, code: x = self.bn1(x)
    unsqueeze_5195: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_6, 0);  squeeze_6 = None
    unsqueeze_5196: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5195, 2);  unsqueeze_5195 = None
    unsqueeze_5197: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5196, 3);  unsqueeze_5196 = None
    sum_650: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_281, [0, 2, 3])
    sub_1613: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_2, unsqueeze_5197)
    mul_5297: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_281, sub_1613);  sub_1613 = None
    sum_651: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5297, [0, 2, 3]);  mul_5297 = None
    mul_5298: "f32[64]" = torch.ops.aten.mul.Tensor(sum_650, 3.985969387755102e-05)
    unsqueeze_5198: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5298, 0);  mul_5298 = None
    unsqueeze_5199: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5198, 2);  unsqueeze_5198 = None
    unsqueeze_5200: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5199, 3);  unsqueeze_5199 = None
    mul_5299: "f32[64]" = torch.ops.aten.mul.Tensor(sum_651, 3.985969387755102e-05)
    mul_5300: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_7, squeeze_7)
    mul_5301: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5299, mul_5300);  mul_5299 = mul_5300 = None
    unsqueeze_5201: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5301, 0);  mul_5301 = None
    unsqueeze_5202: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5201, 2);  unsqueeze_5201 = None
    unsqueeze_5203: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5202, 3);  unsqueeze_5202 = None
    mul_5302: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_7, primals_8);  primals_8 = None
    unsqueeze_5204: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5302, 0);  mul_5302 = None
    unsqueeze_5205: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5204, 2);  unsqueeze_5204 = None
    unsqueeze_5206: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5205, 3);  unsqueeze_5205 = None
    sub_1614: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_2, unsqueeze_5197);  convolution_2 = unsqueeze_5197 = None
    mul_5303: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1614, unsqueeze_5203);  sub_1614 = unsqueeze_5203 = None
    sub_1615: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_281, mul_5303);  where_281 = mul_5303 = None
    sub_1616: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1615, unsqueeze_5200);  sub_1615 = unsqueeze_5200 = None
    mul_5304: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1616, unsqueeze_5206);  sub_1616 = unsqueeze_5206 = None
    mul_5305: "f32[64]" = torch.ops.aten.mul.Tensor(sum_651, squeeze_7);  sum_651 = squeeze_7 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    convolution_backward_322 = torch.ops.aten.convolution_backward.default(mul_5304, relu_1, primals_7, [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5304 = primals_7 = None
    getitem_1616: "f32[8, 64, 56, 56]" = convolution_backward_322[0]
    getitem_1617: "f32[64, 64, 1, 1]" = convolution_backward_322[1];  convolution_backward_322 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/resnet.py:180, code: x = self.conv1(x)
    add_2102: "f32[8, 64, 56, 56]" = torch.ops.aten.add.Tensor(getitem_1607, getitem_1616);  getitem_1607 = getitem_1616 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:767, code: x = self.act2(x)
    alias_1047: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(relu_1);  relu_1 = None
    alias_1048: "f32[8, 64, 56, 56]" = torch.ops.aten.alias.default(alias_1047);  alias_1047 = None
    le_282: "b8[8, 64, 56, 56]" = torch.ops.aten.le.Scalar(alias_1048, 0);  alias_1048 = None
    scalar_tensor_282: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_282: "f32[8, 64, 56, 56]" = torch.ops.aten.where.self(le_282, scalar_tensor_282, add_2102);  le_282 = scalar_tensor_282 = add_2102 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:766, code: x = self.bn2(x)
    unsqueeze_5207: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze_3, 0);  squeeze_3 = None
    unsqueeze_5208: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5207, 2);  unsqueeze_5207 = None
    unsqueeze_5209: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5208, 3);  unsqueeze_5208 = None
    sum_652: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_282, [0, 2, 3])
    sub_1617: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_1, unsqueeze_5209)
    mul_5306: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(where_282, sub_1617);  sub_1617 = None
    sum_653: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5306, [0, 2, 3]);  mul_5306 = None
    mul_5307: "f32[64]" = torch.ops.aten.mul.Tensor(sum_652, 3.985969387755102e-05)
    unsqueeze_5210: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5307, 0);  mul_5307 = None
    unsqueeze_5211: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5210, 2);  unsqueeze_5210 = None
    unsqueeze_5212: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5211, 3);  unsqueeze_5211 = None
    mul_5308: "f32[64]" = torch.ops.aten.mul.Tensor(sum_653, 3.985969387755102e-05)
    mul_5309: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_4, squeeze_4)
    mul_5310: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5308, mul_5309);  mul_5308 = mul_5309 = None
    unsqueeze_5213: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5310, 0);  mul_5310 = None
    unsqueeze_5214: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5213, 2);  unsqueeze_5213 = None
    unsqueeze_5215: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5214, 3);  unsqueeze_5214 = None
    mul_5311: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_4, primals_5);  primals_5 = None
    unsqueeze_5216: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5311, 0);  mul_5311 = None
    unsqueeze_5217: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5216, 2);  unsqueeze_5216 = None
    unsqueeze_5218: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5217, 3);  unsqueeze_5217 = None
    sub_1618: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(convolution_1, unsqueeze_5209);  convolution_1 = unsqueeze_5209 = None
    mul_5312: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1618, unsqueeze_5215);  sub_1618 = unsqueeze_5215 = None
    sub_1619: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(where_282, mul_5312);  where_282 = mul_5312 = None
    sub_1620: "f32[8, 64, 56, 56]" = torch.ops.aten.sub.Tensor(sub_1619, unsqueeze_5212);  sub_1619 = unsqueeze_5212 = None
    mul_5313: "f32[8, 64, 56, 56]" = torch.ops.aten.mul.Tensor(sub_1620, unsqueeze_5218);  sub_1620 = unsqueeze_5218 = None
    mul_5314: "f32[64]" = torch.ops.aten.mul.Tensor(sum_653, squeeze_4);  sum_653 = squeeze_4 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:765, code: x = self.conv2(x)
    convolution_backward_323 = torch.ops.aten.convolution_backward.default(mul_5313, relu, primals_4, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]);  mul_5313 = primals_4 = None
    getitem_1619: "f32[8, 64, 112, 112]" = convolution_backward_323[0]
    getitem_1620: "f32[64, 64, 3, 3]" = convolution_backward_323[1];  convolution_backward_323 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:764, code: x = self.act1(x)
    alias_1050: "f32[8, 64, 112, 112]" = torch.ops.aten.alias.default(relu);  relu = None
    alias_1051: "f32[8, 64, 112, 112]" = torch.ops.aten.alias.default(alias_1050);  alias_1050 = None
    le_283: "b8[8, 64, 112, 112]" = torch.ops.aten.le.Scalar(alias_1051, 0);  alias_1051 = None
    scalar_tensor_283: "f32[]" = torch.ops.aten.scalar_tensor.default(0, dtype = torch.float32, layout = torch.strided, device = device(type='cuda', index=0))
    where_283: "f32[8, 64, 112, 112]" = torch.ops.aten.where.self(le_283, scalar_tensor_283, getitem_1619);  le_283 = scalar_tensor_283 = getitem_1619 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:763, code: x = self.bn1(x)
    unsqueeze_5219: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(squeeze, 0);  squeeze = None
    unsqueeze_5220: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5219, 2);  unsqueeze_5219 = None
    unsqueeze_5221: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5220, 3);  unsqueeze_5220 = None
    sum_654: "f32[64]" = torch.ops.aten.sum.dim_IntList(where_283, [0, 2, 3])
    sub_1621: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(convolution, unsqueeze_5221)
    mul_5315: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(where_283, sub_1621);  sub_1621 = None
    sum_655: "f32[64]" = torch.ops.aten.sum.dim_IntList(mul_5315, [0, 2, 3]);  mul_5315 = None
    mul_5316: "f32[64]" = torch.ops.aten.mul.Tensor(sum_654, 9.964923469387754e-06)
    unsqueeze_5222: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5316, 0);  mul_5316 = None
    unsqueeze_5223: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5222, 2);  unsqueeze_5222 = None
    unsqueeze_5224: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5223, 3);  unsqueeze_5223 = None
    mul_5317: "f32[64]" = torch.ops.aten.mul.Tensor(sum_655, 9.964923469387754e-06)
    mul_5318: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_1, squeeze_1)
    mul_5319: "f32[64]" = torch.ops.aten.mul.Tensor(mul_5317, mul_5318);  mul_5317 = mul_5318 = None
    unsqueeze_5225: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5319, 0);  mul_5319 = None
    unsqueeze_5226: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5225, 2);  unsqueeze_5225 = None
    unsqueeze_5227: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5226, 3);  unsqueeze_5226 = None
    mul_5320: "f32[64]" = torch.ops.aten.mul.Tensor(squeeze_1, primals_2);  primals_2 = None
    unsqueeze_5228: "f32[1, 64]" = torch.ops.aten.unsqueeze.default(mul_5320, 0);  mul_5320 = None
    unsqueeze_5229: "f32[1, 64, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5228, 2);  unsqueeze_5228 = None
    unsqueeze_5230: "f32[1, 64, 1, 1]" = torch.ops.aten.unsqueeze.default(unsqueeze_5229, 3);  unsqueeze_5229 = None
    sub_1622: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(convolution, unsqueeze_5221);  convolution = unsqueeze_5221 = None
    mul_5321: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(sub_1622, unsqueeze_5227);  sub_1622 = unsqueeze_5227 = None
    sub_1623: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(where_283, mul_5321);  where_283 = mul_5321 = None
    sub_1624: "f32[8, 64, 112, 112]" = torch.ops.aten.sub.Tensor(sub_1623, unsqueeze_5224);  sub_1623 = unsqueeze_5224 = None
    mul_5322: "f32[8, 64, 112, 112]" = torch.ops.aten.mul.Tensor(sub_1624, unsqueeze_5230);  sub_1624 = unsqueeze_5230 = None
    mul_5323: "f32[64]" = torch.ops.aten.mul.Tensor(sum_655, squeeze_1);  sum_655 = squeeze_1 = None
    
    # File: /workspace/youkaichao/miniconda3/envs/build_torch/lib/python3.10/site-packages/timm/models/hrnet.py:762, code: x = self.conv1(x)
    convolution_backward_324 = torch.ops.aten.convolution_backward.default(mul_5322, primals_1957, primals_1, [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]);  mul_5322 = primals_1957 = primals_1 = None
    getitem_1623: "f32[64, 3, 3, 3]" = convolution_backward_324[1];  convolution_backward_324 = None
    
    # No stacktrace found for following nodes
    copy_: "f32[64]" = torch.ops.aten.copy_.default(primals_982, add_2);  primals_982 = add_2 = None
    copy__1: "f32[64]" = torch.ops.aten.copy_.default(primals_983, add_3);  primals_983 = add_3 = None
    copy__2: "i64[]" = torch.ops.aten.copy_.default(primals_984, add);  primals_984 = add = None
    copy__3: "f32[64]" = torch.ops.aten.copy_.default(primals_985, add_7);  primals_985 = add_7 = None
    copy__4: "f32[64]" = torch.ops.aten.copy_.default(primals_986, add_8);  primals_986 = add_8 = None
    copy__5: "i64[]" = torch.ops.aten.copy_.default(primals_987, add_5);  primals_987 = add_5 = None
    copy__6: "f32[64]" = torch.ops.aten.copy_.default(primals_988, add_12);  primals_988 = add_12 = None
    copy__7: "f32[64]" = torch.ops.aten.copy_.default(primals_989, add_13);  primals_989 = add_13 = None
    copy__8: "i64[]" = torch.ops.aten.copy_.default(primals_990, add_10);  primals_990 = add_10 = None
    copy__9: "f32[64]" = torch.ops.aten.copy_.default(primals_991, add_17);  primals_991 = add_17 = None
    copy__10: "f32[64]" = torch.ops.aten.copy_.default(primals_992, add_18);  primals_992 = add_18 = None
    copy__11: "i64[]" = torch.ops.aten.copy_.default(primals_993, add_15);  primals_993 = add_15 = None
    copy__12: "f32[256]" = torch.ops.aten.copy_.default(primals_994, add_22);  primals_994 = add_22 = None
    copy__13: "f32[256]" = torch.ops.aten.copy_.default(primals_995, add_23);  primals_995 = add_23 = None
    copy__14: "i64[]" = torch.ops.aten.copy_.default(primals_996, add_20);  primals_996 = add_20 = None
    copy__15: "f32[256]" = torch.ops.aten.copy_.default(primals_997, add_27);  primals_997 = add_27 = None
    copy__16: "f32[256]" = torch.ops.aten.copy_.default(primals_998, add_28);  primals_998 = add_28 = None
    copy__17: "i64[]" = torch.ops.aten.copy_.default(primals_999, add_25);  primals_999 = add_25 = None
    copy__18: "f32[64]" = torch.ops.aten.copy_.default(primals_1000, add_33);  primals_1000 = add_33 = None
    copy__19: "f32[64]" = torch.ops.aten.copy_.default(primals_1001, add_34);  primals_1001 = add_34 = None
    copy__20: "i64[]" = torch.ops.aten.copy_.default(primals_1002, add_31);  primals_1002 = add_31 = None
    copy__21: "f32[64]" = torch.ops.aten.copy_.default(primals_1003, add_38);  primals_1003 = add_38 = None
    copy__22: "f32[64]" = torch.ops.aten.copy_.default(primals_1004, add_39);  primals_1004 = add_39 = None
    copy__23: "i64[]" = torch.ops.aten.copy_.default(primals_1005, add_36);  primals_1005 = add_36 = None
    copy__24: "f32[256]" = torch.ops.aten.copy_.default(primals_1006, add_43);  primals_1006 = add_43 = None
    copy__25: "f32[256]" = torch.ops.aten.copy_.default(primals_1007, add_44);  primals_1007 = add_44 = None
    copy__26: "i64[]" = torch.ops.aten.copy_.default(primals_1008, add_41);  primals_1008 = add_41 = None
    copy__27: "f32[64]" = torch.ops.aten.copy_.default(primals_1009, add_49);  primals_1009 = add_49 = None
    copy__28: "f32[64]" = torch.ops.aten.copy_.default(primals_1010, add_50);  primals_1010 = add_50 = None
    copy__29: "i64[]" = torch.ops.aten.copy_.default(primals_1011, add_47);  primals_1011 = add_47 = None
    copy__30: "f32[64]" = torch.ops.aten.copy_.default(primals_1012, add_54);  primals_1012 = add_54 = None
    copy__31: "f32[64]" = torch.ops.aten.copy_.default(primals_1013, add_55);  primals_1013 = add_55 = None
    copy__32: "i64[]" = torch.ops.aten.copy_.default(primals_1014, add_52);  primals_1014 = add_52 = None
    copy__33: "f32[256]" = torch.ops.aten.copy_.default(primals_1015, add_59);  primals_1015 = add_59 = None
    copy__34: "f32[256]" = torch.ops.aten.copy_.default(primals_1016, add_60);  primals_1016 = add_60 = None
    copy__35: "i64[]" = torch.ops.aten.copy_.default(primals_1017, add_57);  primals_1017 = add_57 = None
    copy__36: "f32[64]" = torch.ops.aten.copy_.default(primals_1018, add_65);  primals_1018 = add_65 = None
    copy__37: "f32[64]" = torch.ops.aten.copy_.default(primals_1019, add_66);  primals_1019 = add_66 = None
    copy__38: "i64[]" = torch.ops.aten.copy_.default(primals_1020, add_63);  primals_1020 = add_63 = None
    copy__39: "f32[64]" = torch.ops.aten.copy_.default(primals_1021, add_70);  primals_1021 = add_70 = None
    copy__40: "f32[64]" = torch.ops.aten.copy_.default(primals_1022, add_71);  primals_1022 = add_71 = None
    copy__41: "i64[]" = torch.ops.aten.copy_.default(primals_1023, add_68);  primals_1023 = add_68 = None
    copy__42: "f32[256]" = torch.ops.aten.copy_.default(primals_1024, add_75);  primals_1024 = add_75 = None
    copy__43: "f32[256]" = torch.ops.aten.copy_.default(primals_1025, add_76);  primals_1025 = add_76 = None
    copy__44: "i64[]" = torch.ops.aten.copy_.default(primals_1026, add_73);  primals_1026 = add_73 = None
    copy__45: "f32[18]" = torch.ops.aten.copy_.default(primals_1027, add_81);  primals_1027 = add_81 = None
    copy__46: "f32[18]" = torch.ops.aten.copy_.default(primals_1028, add_82);  primals_1028 = add_82 = None
    copy__47: "i64[]" = torch.ops.aten.copy_.default(primals_1029, add_79);  primals_1029 = add_79 = None
    copy__48: "f32[36]" = torch.ops.aten.copy_.default(primals_1030, add_86);  primals_1030 = add_86 = None
    copy__49: "f32[36]" = torch.ops.aten.copy_.default(primals_1031, add_87);  primals_1031 = add_87 = None
    copy__50: "i64[]" = torch.ops.aten.copy_.default(primals_1032, add_84);  primals_1032 = add_84 = None
    copy__51: "f32[18]" = torch.ops.aten.copy_.default(primals_1033, add_91);  primals_1033 = add_91 = None
    copy__52: "f32[18]" = torch.ops.aten.copy_.default(primals_1034, add_92);  primals_1034 = add_92 = None
    copy__53: "i64[]" = torch.ops.aten.copy_.default(primals_1035, add_89);  primals_1035 = add_89 = None
    copy__54: "f32[18]" = torch.ops.aten.copy_.default(primals_1036, add_96);  primals_1036 = add_96 = None
    copy__55: "f32[18]" = torch.ops.aten.copy_.default(primals_1037, add_97);  primals_1037 = add_97 = None
    copy__56: "i64[]" = torch.ops.aten.copy_.default(primals_1038, add_94);  primals_1038 = add_94 = None
    copy__57: "f32[18]" = torch.ops.aten.copy_.default(primals_1039, add_102);  primals_1039 = add_102 = None
    copy__58: "f32[18]" = torch.ops.aten.copy_.default(primals_1040, add_103);  primals_1040 = add_103 = None
    copy__59: "i64[]" = torch.ops.aten.copy_.default(primals_1041, add_100);  primals_1041 = add_100 = None
    copy__60: "f32[18]" = torch.ops.aten.copy_.default(primals_1042, add_107);  primals_1042 = add_107 = None
    copy__61: "f32[18]" = torch.ops.aten.copy_.default(primals_1043, add_108);  primals_1043 = add_108 = None
    copy__62: "i64[]" = torch.ops.aten.copy_.default(primals_1044, add_105);  primals_1044 = add_105 = None
    copy__63: "f32[18]" = torch.ops.aten.copy_.default(primals_1045, add_113);  primals_1045 = add_113 = None
    copy__64: "f32[18]" = torch.ops.aten.copy_.default(primals_1046, add_114);  primals_1046 = add_114 = None
    copy__65: "i64[]" = torch.ops.aten.copy_.default(primals_1047, add_111);  primals_1047 = add_111 = None
    copy__66: "f32[18]" = torch.ops.aten.copy_.default(primals_1048, add_118);  primals_1048 = add_118 = None
    copy__67: "f32[18]" = torch.ops.aten.copy_.default(primals_1049, add_119);  primals_1049 = add_119 = None
    copy__68: "i64[]" = torch.ops.aten.copy_.default(primals_1050, add_116);  primals_1050 = add_116 = None
    copy__69: "f32[18]" = torch.ops.aten.copy_.default(primals_1051, add_124);  primals_1051 = add_124 = None
    copy__70: "f32[18]" = torch.ops.aten.copy_.default(primals_1052, add_125);  primals_1052 = add_125 = None
    copy__71: "i64[]" = torch.ops.aten.copy_.default(primals_1053, add_122);  primals_1053 = add_122 = None
    copy__72: "f32[18]" = torch.ops.aten.copy_.default(primals_1054, add_129);  primals_1054 = add_129 = None
    copy__73: "f32[18]" = torch.ops.aten.copy_.default(primals_1055, add_130);  primals_1055 = add_130 = None
    copy__74: "i64[]" = torch.ops.aten.copy_.default(primals_1056, add_127);  primals_1056 = add_127 = None
    copy__75: "f32[36]" = torch.ops.aten.copy_.default(primals_1057, add_135);  primals_1057 = add_135 = None
    copy__76: "f32[36]" = torch.ops.aten.copy_.default(primals_1058, add_136);  primals_1058 = add_136 = None
    copy__77: "i64[]" = torch.ops.aten.copy_.default(primals_1059, add_133);  primals_1059 = add_133 = None
    copy__78: "f32[36]" = torch.ops.aten.copy_.default(primals_1060, add_140);  primals_1060 = add_140 = None
    copy__79: "f32[36]" = torch.ops.aten.copy_.default(primals_1061, add_141);  primals_1061 = add_141 = None
    copy__80: "i64[]" = torch.ops.aten.copy_.default(primals_1062, add_138);  primals_1062 = add_138 = None
    copy__81: "f32[36]" = torch.ops.aten.copy_.default(primals_1063, add_146);  primals_1063 = add_146 = None
    copy__82: "f32[36]" = torch.ops.aten.copy_.default(primals_1064, add_147);  primals_1064 = add_147 = None
    copy__83: "i64[]" = torch.ops.aten.copy_.default(primals_1065, add_144);  primals_1065 = add_144 = None
    copy__84: "f32[36]" = torch.ops.aten.copy_.default(primals_1066, add_151);  primals_1066 = add_151 = None
    copy__85: "f32[36]" = torch.ops.aten.copy_.default(primals_1067, add_152);  primals_1067 = add_152 = None
    copy__86: "i64[]" = torch.ops.aten.copy_.default(primals_1068, add_149);  primals_1068 = add_149 = None
    copy__87: "f32[36]" = torch.ops.aten.copy_.default(primals_1069, add_157);  primals_1069 = add_157 = None
    copy__88: "f32[36]" = torch.ops.aten.copy_.default(primals_1070, add_158);  primals_1070 = add_158 = None
    copy__89: "i64[]" = torch.ops.aten.copy_.default(primals_1071, add_155);  primals_1071 = add_155 = None
    copy__90: "f32[36]" = torch.ops.aten.copy_.default(primals_1072, add_162);  primals_1072 = add_162 = None
    copy__91: "f32[36]" = torch.ops.aten.copy_.default(primals_1073, add_163);  primals_1073 = add_163 = None
    copy__92: "i64[]" = torch.ops.aten.copy_.default(primals_1074, add_160);  primals_1074 = add_160 = None
    copy__93: "f32[36]" = torch.ops.aten.copy_.default(primals_1075, add_168);  primals_1075 = add_168 = None
    copy__94: "f32[36]" = torch.ops.aten.copy_.default(primals_1076, add_169);  primals_1076 = add_169 = None
    copy__95: "i64[]" = torch.ops.aten.copy_.default(primals_1077, add_166);  primals_1077 = add_166 = None
    copy__96: "f32[36]" = torch.ops.aten.copy_.default(primals_1078, add_173);  primals_1078 = add_173 = None
    copy__97: "f32[36]" = torch.ops.aten.copy_.default(primals_1079, add_174);  primals_1079 = add_174 = None
    copy__98: "i64[]" = torch.ops.aten.copy_.default(primals_1080, add_171);  primals_1080 = add_171 = None
    copy__99: "f32[18]" = torch.ops.aten.copy_.default(primals_1081, add_179);  primals_1081 = add_179 = None
    copy__100: "f32[18]" = torch.ops.aten.copy_.default(primals_1082, add_180);  primals_1082 = add_180 = None
    copy__101: "i64[]" = torch.ops.aten.copy_.default(primals_1083, add_177);  primals_1083 = add_177 = None
    copy__102: "f32[36]" = torch.ops.aten.copy_.default(primals_1084, add_189);  primals_1084 = add_189 = None
    copy__103: "f32[36]" = torch.ops.aten.copy_.default(primals_1085, add_190);  primals_1085 = add_190 = None
    copy__104: "i64[]" = torch.ops.aten.copy_.default(primals_1086, add_187);  primals_1086 = add_187 = None
    copy__105: "f32[72]" = torch.ops.aten.copy_.default(primals_1087, add_195);  primals_1087 = add_195 = None
    copy__106: "f32[72]" = torch.ops.aten.copy_.default(primals_1088, add_196);  primals_1088 = add_196 = None
    copy__107: "i64[]" = torch.ops.aten.copy_.default(primals_1089, add_193);  primals_1089 = add_193 = None
    copy__108: "f32[18]" = torch.ops.aten.copy_.default(primals_1090, add_200);  primals_1090 = add_200 = None
    copy__109: "f32[18]" = torch.ops.aten.copy_.default(primals_1091, add_201);  primals_1091 = add_201 = None
    copy__110: "i64[]" = torch.ops.aten.copy_.default(primals_1092, add_198);  primals_1092 = add_198 = None
    copy__111: "f32[18]" = torch.ops.aten.copy_.default(primals_1093, add_205);  primals_1093 = add_205 = None
    copy__112: "f32[18]" = torch.ops.aten.copy_.default(primals_1094, add_206);  primals_1094 = add_206 = None
    copy__113: "i64[]" = torch.ops.aten.copy_.default(primals_1095, add_203);  primals_1095 = add_203 = None
    copy__114: "f32[18]" = torch.ops.aten.copy_.default(primals_1096, add_211);  primals_1096 = add_211 = None
    copy__115: "f32[18]" = torch.ops.aten.copy_.default(primals_1097, add_212);  primals_1097 = add_212 = None
    copy__116: "i64[]" = torch.ops.aten.copy_.default(primals_1098, add_209);  primals_1098 = add_209 = None
    copy__117: "f32[18]" = torch.ops.aten.copy_.default(primals_1099, add_216);  primals_1099 = add_216 = None
    copy__118: "f32[18]" = torch.ops.aten.copy_.default(primals_1100, add_217);  primals_1100 = add_217 = None
    copy__119: "i64[]" = torch.ops.aten.copy_.default(primals_1101, add_214);  primals_1101 = add_214 = None
    copy__120: "f32[18]" = torch.ops.aten.copy_.default(primals_1102, add_222);  primals_1102 = add_222 = None
    copy__121: "f32[18]" = torch.ops.aten.copy_.default(primals_1103, add_223);  primals_1103 = add_223 = None
    copy__122: "i64[]" = torch.ops.aten.copy_.default(primals_1104, add_220);  primals_1104 = add_220 = None
    copy__123: "f32[18]" = torch.ops.aten.copy_.default(primals_1105, add_227);  primals_1105 = add_227 = None
    copy__124: "f32[18]" = torch.ops.aten.copy_.default(primals_1106, add_228);  primals_1106 = add_228 = None
    copy__125: "i64[]" = torch.ops.aten.copy_.default(primals_1107, add_225);  primals_1107 = add_225 = None
    copy__126: "f32[18]" = torch.ops.aten.copy_.default(primals_1108, add_233);  primals_1108 = add_233 = None
    copy__127: "f32[18]" = torch.ops.aten.copy_.default(primals_1109, add_234);  primals_1109 = add_234 = None
    copy__128: "i64[]" = torch.ops.aten.copy_.default(primals_1110, add_231);  primals_1110 = add_231 = None
    copy__129: "f32[18]" = torch.ops.aten.copy_.default(primals_1111, add_238);  primals_1111 = add_238 = None
    copy__130: "f32[18]" = torch.ops.aten.copy_.default(primals_1112, add_239);  primals_1112 = add_239 = None
    copy__131: "i64[]" = torch.ops.aten.copy_.default(primals_1113, add_236);  primals_1113 = add_236 = None
    copy__132: "f32[36]" = torch.ops.aten.copy_.default(primals_1114, add_244);  primals_1114 = add_244 = None
    copy__133: "f32[36]" = torch.ops.aten.copy_.default(primals_1115, add_245);  primals_1115 = add_245 = None
    copy__134: "i64[]" = torch.ops.aten.copy_.default(primals_1116, add_242);  primals_1116 = add_242 = None
    copy__135: "f32[36]" = torch.ops.aten.copy_.default(primals_1117, add_249);  primals_1117 = add_249 = None
    copy__136: "f32[36]" = torch.ops.aten.copy_.default(primals_1118, add_250);  primals_1118 = add_250 = None
    copy__137: "i64[]" = torch.ops.aten.copy_.default(primals_1119, add_247);  primals_1119 = add_247 = None
    copy__138: "f32[36]" = torch.ops.aten.copy_.default(primals_1120, add_255);  primals_1120 = add_255 = None
    copy__139: "f32[36]" = torch.ops.aten.copy_.default(primals_1121, add_256);  primals_1121 = add_256 = None
    copy__140: "i64[]" = torch.ops.aten.copy_.default(primals_1122, add_253);  primals_1122 = add_253 = None
    copy__141: "f32[36]" = torch.ops.aten.copy_.default(primals_1123, add_260);  primals_1123 = add_260 = None
    copy__142: "f32[36]" = torch.ops.aten.copy_.default(primals_1124, add_261);  primals_1124 = add_261 = None
    copy__143: "i64[]" = torch.ops.aten.copy_.default(primals_1125, add_258);  primals_1125 = add_258 = None
    copy__144: "f32[36]" = torch.ops.aten.copy_.default(primals_1126, add_266);  primals_1126 = add_266 = None
    copy__145: "f32[36]" = torch.ops.aten.copy_.default(primals_1127, add_267);  primals_1127 = add_267 = None
    copy__146: "i64[]" = torch.ops.aten.copy_.default(primals_1128, add_264);  primals_1128 = add_264 = None
    copy__147: "f32[36]" = torch.ops.aten.copy_.default(primals_1129, add_271);  primals_1129 = add_271 = None
    copy__148: "f32[36]" = torch.ops.aten.copy_.default(primals_1130, add_272);  primals_1130 = add_272 = None
    copy__149: "i64[]" = torch.ops.aten.copy_.default(primals_1131, add_269);  primals_1131 = add_269 = None
    copy__150: "f32[36]" = torch.ops.aten.copy_.default(primals_1132, add_277);  primals_1132 = add_277 = None
    copy__151: "f32[36]" = torch.ops.aten.copy_.default(primals_1133, add_278);  primals_1133 = add_278 = None
    copy__152: "i64[]" = torch.ops.aten.copy_.default(primals_1134, add_275);  primals_1134 = add_275 = None
    copy__153: "f32[36]" = torch.ops.aten.copy_.default(primals_1135, add_282);  primals_1135 = add_282 = None
    copy__154: "f32[36]" = torch.ops.aten.copy_.default(primals_1136, add_283);  primals_1136 = add_283 = None
    copy__155: "i64[]" = torch.ops.aten.copy_.default(primals_1137, add_280);  primals_1137 = add_280 = None
    copy__156: "f32[72]" = torch.ops.aten.copy_.default(primals_1138, add_288);  primals_1138 = add_288 = None
    copy__157: "f32[72]" = torch.ops.aten.copy_.default(primals_1139, add_289);  primals_1139 = add_289 = None
    copy__158: "i64[]" = torch.ops.aten.copy_.default(primals_1140, add_286);  primals_1140 = add_286 = None
    copy__159: "f32[72]" = torch.ops.aten.copy_.default(primals_1141, add_293);  primals_1141 = add_293 = None
    copy__160: "f32[72]" = torch.ops.aten.copy_.default(primals_1142, add_294);  primals_1142 = add_294 = None
    copy__161: "i64[]" = torch.ops.aten.copy_.default(primals_1143, add_291);  primals_1143 = add_291 = None
    copy__162: "f32[72]" = torch.ops.aten.copy_.default(primals_1144, add_299);  primals_1144 = add_299 = None
    copy__163: "f32[72]" = torch.ops.aten.copy_.default(primals_1145, add_300);  primals_1145 = add_300 = None
    copy__164: "i64[]" = torch.ops.aten.copy_.default(primals_1146, add_297);  primals_1146 = add_297 = None
    copy__165: "f32[72]" = torch.ops.aten.copy_.default(primals_1147, add_304);  primals_1147 = add_304 = None
    copy__166: "f32[72]" = torch.ops.aten.copy_.default(primals_1148, add_305);  primals_1148 = add_305 = None
    copy__167: "i64[]" = torch.ops.aten.copy_.default(primals_1149, add_302);  primals_1149 = add_302 = None
    copy__168: "f32[72]" = torch.ops.aten.copy_.default(primals_1150, add_310);  primals_1150 = add_310 = None
    copy__169: "f32[72]" = torch.ops.aten.copy_.default(primals_1151, add_311);  primals_1151 = add_311 = None
    copy__170: "i64[]" = torch.ops.aten.copy_.default(primals_1152, add_308);  primals_1152 = add_308 = None
    copy__171: "f32[72]" = torch.ops.aten.copy_.default(primals_1153, add_315);  primals_1153 = add_315 = None
    copy__172: "f32[72]" = torch.ops.aten.copy_.default(primals_1154, add_316);  primals_1154 = add_316 = None
    copy__173: "i64[]" = torch.ops.aten.copy_.default(primals_1155, add_313);  primals_1155 = add_313 = None
    copy__174: "f32[72]" = torch.ops.aten.copy_.default(primals_1156, add_321);  primals_1156 = add_321 = None
    copy__175: "f32[72]" = torch.ops.aten.copy_.default(primals_1157, add_322);  primals_1157 = add_322 = None
    copy__176: "i64[]" = torch.ops.aten.copy_.default(primals_1158, add_319);  primals_1158 = add_319 = None
    copy__177: "f32[72]" = torch.ops.aten.copy_.default(primals_1159, add_326);  primals_1159 = add_326 = None
    copy__178: "f32[72]" = torch.ops.aten.copy_.default(primals_1160, add_327);  primals_1160 = add_327 = None
    copy__179: "i64[]" = torch.ops.aten.copy_.default(primals_1161, add_324);  primals_1161 = add_324 = None
    copy__180: "f32[18]" = torch.ops.aten.copy_.default(primals_1162, add_332);  primals_1162 = add_332 = None
    copy__181: "f32[18]" = torch.ops.aten.copy_.default(primals_1163, add_333);  primals_1163 = add_333 = None
    copy__182: "i64[]" = torch.ops.aten.copy_.default(primals_1164, add_330);  primals_1164 = add_330 = None
    copy__183: "f32[18]" = torch.ops.aten.copy_.default(primals_1165, add_342);  primals_1165 = add_342 = None
    copy__184: "f32[18]" = torch.ops.aten.copy_.default(primals_1166, add_343);  primals_1166 = add_343 = None
    copy__185: "i64[]" = torch.ops.aten.copy_.default(primals_1167, add_340);  primals_1167 = add_340 = None
    copy__186: "f32[36]" = torch.ops.aten.copy_.default(primals_1168, add_352);  primals_1168 = add_352 = None
    copy__187: "f32[36]" = torch.ops.aten.copy_.default(primals_1169, add_353);  primals_1169 = add_353 = None
    copy__188: "i64[]" = torch.ops.aten.copy_.default(primals_1170, add_350);  primals_1170 = add_350 = None
    copy__189: "f32[36]" = torch.ops.aten.copy_.default(primals_1171, add_358);  primals_1171 = add_358 = None
    copy__190: "f32[36]" = torch.ops.aten.copy_.default(primals_1172, add_359);  primals_1172 = add_359 = None
    copy__191: "i64[]" = torch.ops.aten.copy_.default(primals_1173, add_356);  primals_1173 = add_356 = None
    copy__192: "f32[18]" = torch.ops.aten.copy_.default(primals_1174, add_368);  primals_1174 = add_368 = None
    copy__193: "f32[18]" = torch.ops.aten.copy_.default(primals_1175, add_369);  primals_1175 = add_369 = None
    copy__194: "i64[]" = torch.ops.aten.copy_.default(primals_1176, add_366);  primals_1176 = add_366 = None
    copy__195: "f32[72]" = torch.ops.aten.copy_.default(primals_1177, add_373);  primals_1177 = add_373 = None
    copy__196: "f32[72]" = torch.ops.aten.copy_.default(primals_1178, add_374);  primals_1178 = add_374 = None
    copy__197: "i64[]" = torch.ops.aten.copy_.default(primals_1179, add_371);  primals_1179 = add_371 = None
    copy__198: "f32[72]" = torch.ops.aten.copy_.default(primals_1180, add_378);  primals_1180 = add_378 = None
    copy__199: "f32[72]" = torch.ops.aten.copy_.default(primals_1181, add_379);  primals_1181 = add_379 = None
    copy__200: "i64[]" = torch.ops.aten.copy_.default(primals_1182, add_376);  primals_1182 = add_376 = None
    copy__201: "f32[18]" = torch.ops.aten.copy_.default(primals_1183, add_385);  primals_1183 = add_385 = None
    copy__202: "f32[18]" = torch.ops.aten.copy_.default(primals_1184, add_386);  primals_1184 = add_386 = None
    copy__203: "i64[]" = torch.ops.aten.copy_.default(primals_1185, add_383);  primals_1185 = add_383 = None
    copy__204: "f32[18]" = torch.ops.aten.copy_.default(primals_1186, add_390);  primals_1186 = add_390 = None
    copy__205: "f32[18]" = torch.ops.aten.copy_.default(primals_1187, add_391);  primals_1187 = add_391 = None
    copy__206: "i64[]" = torch.ops.aten.copy_.default(primals_1188, add_388);  primals_1188 = add_388 = None
    copy__207: "f32[18]" = torch.ops.aten.copy_.default(primals_1189, add_396);  primals_1189 = add_396 = None
    copy__208: "f32[18]" = torch.ops.aten.copy_.default(primals_1190, add_397);  primals_1190 = add_397 = None
    copy__209: "i64[]" = torch.ops.aten.copy_.default(primals_1191, add_394);  primals_1191 = add_394 = None
    copy__210: "f32[18]" = torch.ops.aten.copy_.default(primals_1192, add_401);  primals_1192 = add_401 = None
    copy__211: "f32[18]" = torch.ops.aten.copy_.default(primals_1193, add_402);  primals_1193 = add_402 = None
    copy__212: "i64[]" = torch.ops.aten.copy_.default(primals_1194, add_399);  primals_1194 = add_399 = None
    copy__213: "f32[18]" = torch.ops.aten.copy_.default(primals_1195, add_407);  primals_1195 = add_407 = None
    copy__214: "f32[18]" = torch.ops.aten.copy_.default(primals_1196, add_408);  primals_1196 = add_408 = None
    copy__215: "i64[]" = torch.ops.aten.copy_.default(primals_1197, add_405);  primals_1197 = add_405 = None
    copy__216: "f32[18]" = torch.ops.aten.copy_.default(primals_1198, add_412);  primals_1198 = add_412 = None
    copy__217: "f32[18]" = torch.ops.aten.copy_.default(primals_1199, add_413);  primals_1199 = add_413 = None
    copy__218: "i64[]" = torch.ops.aten.copy_.default(primals_1200, add_410);  primals_1200 = add_410 = None
    copy__219: "f32[18]" = torch.ops.aten.copy_.default(primals_1201, add_418);  primals_1201 = add_418 = None
    copy__220: "f32[18]" = torch.ops.aten.copy_.default(primals_1202, add_419);  primals_1202 = add_419 = None
    copy__221: "i64[]" = torch.ops.aten.copy_.default(primals_1203, add_416);  primals_1203 = add_416 = None
    copy__222: "f32[18]" = torch.ops.aten.copy_.default(primals_1204, add_423);  primals_1204 = add_423 = None
    copy__223: "f32[18]" = torch.ops.aten.copy_.default(primals_1205, add_424);  primals_1205 = add_424 = None
    copy__224: "i64[]" = torch.ops.aten.copy_.default(primals_1206, add_421);  primals_1206 = add_421 = None
    copy__225: "f32[36]" = torch.ops.aten.copy_.default(primals_1207, add_429);  primals_1207 = add_429 = None
    copy__226: "f32[36]" = torch.ops.aten.copy_.default(primals_1208, add_430);  primals_1208 = add_430 = None
    copy__227: "i64[]" = torch.ops.aten.copy_.default(primals_1209, add_427);  primals_1209 = add_427 = None
    copy__228: "f32[36]" = torch.ops.aten.copy_.default(primals_1210, add_434);  primals_1210 = add_434 = None
    copy__229: "f32[36]" = torch.ops.aten.copy_.default(primals_1211, add_435);  primals_1211 = add_435 = None
    copy__230: "i64[]" = torch.ops.aten.copy_.default(primals_1212, add_432);  primals_1212 = add_432 = None
    copy__231: "f32[36]" = torch.ops.aten.copy_.default(primals_1213, add_440);  primals_1213 = add_440 = None
    copy__232: "f32[36]" = torch.ops.aten.copy_.default(primals_1214, add_441);  primals_1214 = add_441 = None
    copy__233: "i64[]" = torch.ops.aten.copy_.default(primals_1215, add_438);  primals_1215 = add_438 = None
    copy__234: "f32[36]" = torch.ops.aten.copy_.default(primals_1216, add_445);  primals_1216 = add_445 = None
    copy__235: "f32[36]" = torch.ops.aten.copy_.default(primals_1217, add_446);  primals_1217 = add_446 = None
    copy__236: "i64[]" = torch.ops.aten.copy_.default(primals_1218, add_443);  primals_1218 = add_443 = None
    copy__237: "f32[36]" = torch.ops.aten.copy_.default(primals_1219, add_451);  primals_1219 = add_451 = None
    copy__238: "f32[36]" = torch.ops.aten.copy_.default(primals_1220, add_452);  primals_1220 = add_452 = None
    copy__239: "i64[]" = torch.ops.aten.copy_.default(primals_1221, add_449);  primals_1221 = add_449 = None
    copy__240: "f32[36]" = torch.ops.aten.copy_.default(primals_1222, add_456);  primals_1222 = add_456 = None
    copy__241: "f32[36]" = torch.ops.aten.copy_.default(primals_1223, add_457);  primals_1223 = add_457 = None
    copy__242: "i64[]" = torch.ops.aten.copy_.default(primals_1224, add_454);  primals_1224 = add_454 = None
    copy__243: "f32[36]" = torch.ops.aten.copy_.default(primals_1225, add_462);  primals_1225 = add_462 = None
    copy__244: "f32[36]" = torch.ops.aten.copy_.default(primals_1226, add_463);  primals_1226 = add_463 = None
    copy__245: "i64[]" = torch.ops.aten.copy_.default(primals_1227, add_460);  primals_1227 = add_460 = None
    copy__246: "f32[36]" = torch.ops.aten.copy_.default(primals_1228, add_467);  primals_1228 = add_467 = None
    copy__247: "f32[36]" = torch.ops.aten.copy_.default(primals_1229, add_468);  primals_1229 = add_468 = None
    copy__248: "i64[]" = torch.ops.aten.copy_.default(primals_1230, add_465);  primals_1230 = add_465 = None
    copy__249: "f32[72]" = torch.ops.aten.copy_.default(primals_1231, add_473);  primals_1231 = add_473 = None
    copy__250: "f32[72]" = torch.ops.aten.copy_.default(primals_1232, add_474);  primals_1232 = add_474 = None
    copy__251: "i64[]" = torch.ops.aten.copy_.default(primals_1233, add_471);  primals_1233 = add_471 = None
    copy__252: "f32[72]" = torch.ops.aten.copy_.default(primals_1234, add_478);  primals_1234 = add_478 = None
    copy__253: "f32[72]" = torch.ops.aten.copy_.default(primals_1235, add_479);  primals_1235 = add_479 = None
    copy__254: "i64[]" = torch.ops.aten.copy_.default(primals_1236, add_476);  primals_1236 = add_476 = None
    copy__255: "f32[72]" = torch.ops.aten.copy_.default(primals_1237, add_484);  primals_1237 = add_484 = None
    copy__256: "f32[72]" = torch.ops.aten.copy_.default(primals_1238, add_485);  primals_1238 = add_485 = None
    copy__257: "i64[]" = torch.ops.aten.copy_.default(primals_1239, add_482);  primals_1239 = add_482 = None
    copy__258: "f32[72]" = torch.ops.aten.copy_.default(primals_1240, add_489);  primals_1240 = add_489 = None
    copy__259: "f32[72]" = torch.ops.aten.copy_.default(primals_1241, add_490);  primals_1241 = add_490 = None
    copy__260: "i64[]" = torch.ops.aten.copy_.default(primals_1242, add_487);  primals_1242 = add_487 = None
    copy__261: "f32[72]" = torch.ops.aten.copy_.default(primals_1243, add_495);  primals_1243 = add_495 = None
    copy__262: "f32[72]" = torch.ops.aten.copy_.default(primals_1244, add_496);  primals_1244 = add_496 = None
    copy__263: "i64[]" = torch.ops.aten.copy_.default(primals_1245, add_493);  primals_1245 = add_493 = None
    copy__264: "f32[72]" = torch.ops.aten.copy_.default(primals_1246, add_500);  primals_1246 = add_500 = None
    copy__265: "f32[72]" = torch.ops.aten.copy_.default(primals_1247, add_501);  primals_1247 = add_501 = None
    copy__266: "i64[]" = torch.ops.aten.copy_.default(primals_1248, add_498);  primals_1248 = add_498 = None
    copy__267: "f32[72]" = torch.ops.aten.copy_.default(primals_1249, add_506);  primals_1249 = add_506 = None
    copy__268: "f32[72]" = torch.ops.aten.copy_.default(primals_1250, add_507);  primals_1250 = add_507 = None
    copy__269: "i64[]" = torch.ops.aten.copy_.default(primals_1251, add_504);  primals_1251 = add_504 = None
    copy__270: "f32[72]" = torch.ops.aten.copy_.default(primals_1252, add_511);  primals_1252 = add_511 = None
    copy__271: "f32[72]" = torch.ops.aten.copy_.default(primals_1253, add_512);  primals_1253 = add_512 = None
    copy__272: "i64[]" = torch.ops.aten.copy_.default(primals_1254, add_509);  primals_1254 = add_509 = None
    copy__273: "f32[18]" = torch.ops.aten.copy_.default(primals_1255, add_517);  primals_1255 = add_517 = None
    copy__274: "f32[18]" = torch.ops.aten.copy_.default(primals_1256, add_518);  primals_1256 = add_518 = None
    copy__275: "i64[]" = torch.ops.aten.copy_.default(primals_1257, add_515);  primals_1257 = add_515 = None
    copy__276: "f32[18]" = torch.ops.aten.copy_.default(primals_1258, add_527);  primals_1258 = add_527 = None
    copy__277: "f32[18]" = torch.ops.aten.copy_.default(primals_1259, add_528);  primals_1259 = add_528 = None
    copy__278: "i64[]" = torch.ops.aten.copy_.default(primals_1260, add_525);  primals_1260 = add_525 = None
    copy__279: "f32[36]" = torch.ops.aten.copy_.default(primals_1261, add_537);  primals_1261 = add_537 = None
    copy__280: "f32[36]" = torch.ops.aten.copy_.default(primals_1262, add_538);  primals_1262 = add_538 = None
    copy__281: "i64[]" = torch.ops.aten.copy_.default(primals_1263, add_535);  primals_1263 = add_535 = None
    copy__282: "f32[36]" = torch.ops.aten.copy_.default(primals_1264, add_543);  primals_1264 = add_543 = None
    copy__283: "f32[36]" = torch.ops.aten.copy_.default(primals_1265, add_544);  primals_1265 = add_544 = None
    copy__284: "i64[]" = torch.ops.aten.copy_.default(primals_1266, add_541);  primals_1266 = add_541 = None
    copy__285: "f32[18]" = torch.ops.aten.copy_.default(primals_1267, add_553);  primals_1267 = add_553 = None
    copy__286: "f32[18]" = torch.ops.aten.copy_.default(primals_1268, add_554);  primals_1268 = add_554 = None
    copy__287: "i64[]" = torch.ops.aten.copy_.default(primals_1269, add_551);  primals_1269 = add_551 = None
    copy__288: "f32[72]" = torch.ops.aten.copy_.default(primals_1270, add_558);  primals_1270 = add_558 = None
    copy__289: "f32[72]" = torch.ops.aten.copy_.default(primals_1271, add_559);  primals_1271 = add_559 = None
    copy__290: "i64[]" = torch.ops.aten.copy_.default(primals_1272, add_556);  primals_1272 = add_556 = None
    copy__291: "f32[72]" = torch.ops.aten.copy_.default(primals_1273, add_563);  primals_1273 = add_563 = None
    copy__292: "f32[72]" = torch.ops.aten.copy_.default(primals_1274, add_564);  primals_1274 = add_564 = None
    copy__293: "i64[]" = torch.ops.aten.copy_.default(primals_1275, add_561);  primals_1275 = add_561 = None
    copy__294: "f32[18]" = torch.ops.aten.copy_.default(primals_1276, add_570);  primals_1276 = add_570 = None
    copy__295: "f32[18]" = torch.ops.aten.copy_.default(primals_1277, add_571);  primals_1277 = add_571 = None
    copy__296: "i64[]" = torch.ops.aten.copy_.default(primals_1278, add_568);  primals_1278 = add_568 = None
    copy__297: "f32[18]" = torch.ops.aten.copy_.default(primals_1279, add_575);  primals_1279 = add_575 = None
    copy__298: "f32[18]" = torch.ops.aten.copy_.default(primals_1280, add_576);  primals_1280 = add_576 = None
    copy__299: "i64[]" = torch.ops.aten.copy_.default(primals_1281, add_573);  primals_1281 = add_573 = None
    copy__300: "f32[18]" = torch.ops.aten.copy_.default(primals_1282, add_581);  primals_1282 = add_581 = None
    copy__301: "f32[18]" = torch.ops.aten.copy_.default(primals_1283, add_582);  primals_1283 = add_582 = None
    copy__302: "i64[]" = torch.ops.aten.copy_.default(primals_1284, add_579);  primals_1284 = add_579 = None
    copy__303: "f32[18]" = torch.ops.aten.copy_.default(primals_1285, add_586);  primals_1285 = add_586 = None
    copy__304: "f32[18]" = torch.ops.aten.copy_.default(primals_1286, add_587);  primals_1286 = add_587 = None
    copy__305: "i64[]" = torch.ops.aten.copy_.default(primals_1287, add_584);  primals_1287 = add_584 = None
    copy__306: "f32[18]" = torch.ops.aten.copy_.default(primals_1288, add_592);  primals_1288 = add_592 = None
    copy__307: "f32[18]" = torch.ops.aten.copy_.default(primals_1289, add_593);  primals_1289 = add_593 = None
    copy__308: "i64[]" = torch.ops.aten.copy_.default(primals_1290, add_590);  primals_1290 = add_590 = None
    copy__309: "f32[18]" = torch.ops.aten.copy_.default(primals_1291, add_597);  primals_1291 = add_597 = None
    copy__310: "f32[18]" = torch.ops.aten.copy_.default(primals_1292, add_598);  primals_1292 = add_598 = None
    copy__311: "i64[]" = torch.ops.aten.copy_.default(primals_1293, add_595);  primals_1293 = add_595 = None
    copy__312: "f32[18]" = torch.ops.aten.copy_.default(primals_1294, add_603);  primals_1294 = add_603 = None
    copy__313: "f32[18]" = torch.ops.aten.copy_.default(primals_1295, add_604);  primals_1295 = add_604 = None
    copy__314: "i64[]" = torch.ops.aten.copy_.default(primals_1296, add_601);  primals_1296 = add_601 = None
    copy__315: "f32[18]" = torch.ops.aten.copy_.default(primals_1297, add_608);  primals_1297 = add_608 = None
    copy__316: "f32[18]" = torch.ops.aten.copy_.default(primals_1298, add_609);  primals_1298 = add_609 = None
    copy__317: "i64[]" = torch.ops.aten.copy_.default(primals_1299, add_606);  primals_1299 = add_606 = None
    copy__318: "f32[36]" = torch.ops.aten.copy_.default(primals_1300, add_614);  primals_1300 = add_614 = None
    copy__319: "f32[36]" = torch.ops.aten.copy_.default(primals_1301, add_615);  primals_1301 = add_615 = None
    copy__320: "i64[]" = torch.ops.aten.copy_.default(primals_1302, add_612);  primals_1302 = add_612 = None
    copy__321: "f32[36]" = torch.ops.aten.copy_.default(primals_1303, add_619);  primals_1303 = add_619 = None
    copy__322: "f32[36]" = torch.ops.aten.copy_.default(primals_1304, add_620);  primals_1304 = add_620 = None
    copy__323: "i64[]" = torch.ops.aten.copy_.default(primals_1305, add_617);  primals_1305 = add_617 = None
    copy__324: "f32[36]" = torch.ops.aten.copy_.default(primals_1306, add_625);  primals_1306 = add_625 = None
    copy__325: "f32[36]" = torch.ops.aten.copy_.default(primals_1307, add_626);  primals_1307 = add_626 = None
    copy__326: "i64[]" = torch.ops.aten.copy_.default(primals_1308, add_623);  primals_1308 = add_623 = None
    copy__327: "f32[36]" = torch.ops.aten.copy_.default(primals_1309, add_630);  primals_1309 = add_630 = None
    copy__328: "f32[36]" = torch.ops.aten.copy_.default(primals_1310, add_631);  primals_1310 = add_631 = None
    copy__329: "i64[]" = torch.ops.aten.copy_.default(primals_1311, add_628);  primals_1311 = add_628 = None
    copy__330: "f32[36]" = torch.ops.aten.copy_.default(primals_1312, add_636);  primals_1312 = add_636 = None
    copy__331: "f32[36]" = torch.ops.aten.copy_.default(primals_1313, add_637);  primals_1313 = add_637 = None
    copy__332: "i64[]" = torch.ops.aten.copy_.default(primals_1314, add_634);  primals_1314 = add_634 = None
    copy__333: "f32[36]" = torch.ops.aten.copy_.default(primals_1315, add_641);  primals_1315 = add_641 = None
    copy__334: "f32[36]" = torch.ops.aten.copy_.default(primals_1316, add_642);  primals_1316 = add_642 = None
    copy__335: "i64[]" = torch.ops.aten.copy_.default(primals_1317, add_639);  primals_1317 = add_639 = None
    copy__336: "f32[36]" = torch.ops.aten.copy_.default(primals_1318, add_647);  primals_1318 = add_647 = None
    copy__337: "f32[36]" = torch.ops.aten.copy_.default(primals_1319, add_648);  primals_1319 = add_648 = None
    copy__338: "i64[]" = torch.ops.aten.copy_.default(primals_1320, add_645);  primals_1320 = add_645 = None
    copy__339: "f32[36]" = torch.ops.aten.copy_.default(primals_1321, add_652);  primals_1321 = add_652 = None
    copy__340: "f32[36]" = torch.ops.aten.copy_.default(primals_1322, add_653);  primals_1322 = add_653 = None
    copy__341: "i64[]" = torch.ops.aten.copy_.default(primals_1323, add_650);  primals_1323 = add_650 = None
    copy__342: "f32[72]" = torch.ops.aten.copy_.default(primals_1324, add_658);  primals_1324 = add_658 = None
    copy__343: "f32[72]" = torch.ops.aten.copy_.default(primals_1325, add_659);  primals_1325 = add_659 = None
    copy__344: "i64[]" = torch.ops.aten.copy_.default(primals_1326, add_656);  primals_1326 = add_656 = None
    copy__345: "f32[72]" = torch.ops.aten.copy_.default(primals_1327, add_663);  primals_1327 = add_663 = None
    copy__346: "f32[72]" = torch.ops.aten.copy_.default(primals_1328, add_664);  primals_1328 = add_664 = None
    copy__347: "i64[]" = torch.ops.aten.copy_.default(primals_1329, add_661);  primals_1329 = add_661 = None
    copy__348: "f32[72]" = torch.ops.aten.copy_.default(primals_1330, add_669);  primals_1330 = add_669 = None
    copy__349: "f32[72]" = torch.ops.aten.copy_.default(primals_1331, add_670);  primals_1331 = add_670 = None
    copy__350: "i64[]" = torch.ops.aten.copy_.default(primals_1332, add_667);  primals_1332 = add_667 = None
    copy__351: "f32[72]" = torch.ops.aten.copy_.default(primals_1333, add_674);  primals_1333 = add_674 = None
    copy__352: "f32[72]" = torch.ops.aten.copy_.default(primals_1334, add_675);  primals_1334 = add_675 = None
    copy__353: "i64[]" = torch.ops.aten.copy_.default(primals_1335, add_672);  primals_1335 = add_672 = None
    copy__354: "f32[72]" = torch.ops.aten.copy_.default(primals_1336, add_680);  primals_1336 = add_680 = None
    copy__355: "f32[72]" = torch.ops.aten.copy_.default(primals_1337, add_681);  primals_1337 = add_681 = None
    copy__356: "i64[]" = torch.ops.aten.copy_.default(primals_1338, add_678);  primals_1338 = add_678 = None
    copy__357: "f32[72]" = torch.ops.aten.copy_.default(primals_1339, add_685);  primals_1339 = add_685 = None
    copy__358: "f32[72]" = torch.ops.aten.copy_.default(primals_1340, add_686);  primals_1340 = add_686 = None
    copy__359: "i64[]" = torch.ops.aten.copy_.default(primals_1341, add_683);  primals_1341 = add_683 = None
    copy__360: "f32[72]" = torch.ops.aten.copy_.default(primals_1342, add_691);  primals_1342 = add_691 = None
    copy__361: "f32[72]" = torch.ops.aten.copy_.default(primals_1343, add_692);  primals_1343 = add_692 = None
    copy__362: "i64[]" = torch.ops.aten.copy_.default(primals_1344, add_689);  primals_1344 = add_689 = None
    copy__363: "f32[72]" = torch.ops.aten.copy_.default(primals_1345, add_696);  primals_1345 = add_696 = None
    copy__364: "f32[72]" = torch.ops.aten.copy_.default(primals_1346, add_697);  primals_1346 = add_697 = None
    copy__365: "i64[]" = torch.ops.aten.copy_.default(primals_1347, add_694);  primals_1347 = add_694 = None
    copy__366: "f32[18]" = torch.ops.aten.copy_.default(primals_1348, add_702);  primals_1348 = add_702 = None
    copy__367: "f32[18]" = torch.ops.aten.copy_.default(primals_1349, add_703);  primals_1349 = add_703 = None
    copy__368: "i64[]" = torch.ops.aten.copy_.default(primals_1350, add_700);  primals_1350 = add_700 = None
    copy__369: "f32[18]" = torch.ops.aten.copy_.default(primals_1351, add_712);  primals_1351 = add_712 = None
    copy__370: "f32[18]" = torch.ops.aten.copy_.default(primals_1352, add_713);  primals_1352 = add_713 = None
    copy__371: "i64[]" = torch.ops.aten.copy_.default(primals_1353, add_710);  primals_1353 = add_710 = None
    copy__372: "f32[36]" = torch.ops.aten.copy_.default(primals_1354, add_722);  primals_1354 = add_722 = None
    copy__373: "f32[36]" = torch.ops.aten.copy_.default(primals_1355, add_723);  primals_1355 = add_723 = None
    copy__374: "i64[]" = torch.ops.aten.copy_.default(primals_1356, add_720);  primals_1356 = add_720 = None
    copy__375: "f32[36]" = torch.ops.aten.copy_.default(primals_1357, add_728);  primals_1357 = add_728 = None
    copy__376: "f32[36]" = torch.ops.aten.copy_.default(primals_1358, add_729);  primals_1358 = add_729 = None
    copy__377: "i64[]" = torch.ops.aten.copy_.default(primals_1359, add_726);  primals_1359 = add_726 = None
    copy__378: "f32[18]" = torch.ops.aten.copy_.default(primals_1360, add_738);  primals_1360 = add_738 = None
    copy__379: "f32[18]" = torch.ops.aten.copy_.default(primals_1361, add_739);  primals_1361 = add_739 = None
    copy__380: "i64[]" = torch.ops.aten.copy_.default(primals_1362, add_736);  primals_1362 = add_736 = None
    copy__381: "f32[72]" = torch.ops.aten.copy_.default(primals_1363, add_743);  primals_1363 = add_743 = None
    copy__382: "f32[72]" = torch.ops.aten.copy_.default(primals_1364, add_744);  primals_1364 = add_744 = None
    copy__383: "i64[]" = torch.ops.aten.copy_.default(primals_1365, add_741);  primals_1365 = add_741 = None
    copy__384: "f32[72]" = torch.ops.aten.copy_.default(primals_1366, add_748);  primals_1366 = add_748 = None
    copy__385: "f32[72]" = torch.ops.aten.copy_.default(primals_1367, add_749);  primals_1367 = add_749 = None
    copy__386: "i64[]" = torch.ops.aten.copy_.default(primals_1368, add_746);  primals_1368 = add_746 = None
    copy__387: "f32[18]" = torch.ops.aten.copy_.default(primals_1369, add_755);  primals_1369 = add_755 = None
    copy__388: "f32[18]" = torch.ops.aten.copy_.default(primals_1370, add_756);  primals_1370 = add_756 = None
    copy__389: "i64[]" = torch.ops.aten.copy_.default(primals_1371, add_753);  primals_1371 = add_753 = None
    copy__390: "f32[18]" = torch.ops.aten.copy_.default(primals_1372, add_760);  primals_1372 = add_760 = None
    copy__391: "f32[18]" = torch.ops.aten.copy_.default(primals_1373, add_761);  primals_1373 = add_761 = None
    copy__392: "i64[]" = torch.ops.aten.copy_.default(primals_1374, add_758);  primals_1374 = add_758 = None
    copy__393: "f32[18]" = torch.ops.aten.copy_.default(primals_1375, add_766);  primals_1375 = add_766 = None
    copy__394: "f32[18]" = torch.ops.aten.copy_.default(primals_1376, add_767);  primals_1376 = add_767 = None
    copy__395: "i64[]" = torch.ops.aten.copy_.default(primals_1377, add_764);  primals_1377 = add_764 = None
    copy__396: "f32[18]" = torch.ops.aten.copy_.default(primals_1378, add_771);  primals_1378 = add_771 = None
    copy__397: "f32[18]" = torch.ops.aten.copy_.default(primals_1379, add_772);  primals_1379 = add_772 = None
    copy__398: "i64[]" = torch.ops.aten.copy_.default(primals_1380, add_769);  primals_1380 = add_769 = None
    copy__399: "f32[18]" = torch.ops.aten.copy_.default(primals_1381, add_777);  primals_1381 = add_777 = None
    copy__400: "f32[18]" = torch.ops.aten.copy_.default(primals_1382, add_778);  primals_1382 = add_778 = None
    copy__401: "i64[]" = torch.ops.aten.copy_.default(primals_1383, add_775);  primals_1383 = add_775 = None
    copy__402: "f32[18]" = torch.ops.aten.copy_.default(primals_1384, add_782);  primals_1384 = add_782 = None
    copy__403: "f32[18]" = torch.ops.aten.copy_.default(primals_1385, add_783);  primals_1385 = add_783 = None
    copy__404: "i64[]" = torch.ops.aten.copy_.default(primals_1386, add_780);  primals_1386 = add_780 = None
    copy__405: "f32[18]" = torch.ops.aten.copy_.default(primals_1387, add_788);  primals_1387 = add_788 = None
    copy__406: "f32[18]" = torch.ops.aten.copy_.default(primals_1388, add_789);  primals_1388 = add_789 = None
    copy__407: "i64[]" = torch.ops.aten.copy_.default(primals_1389, add_786);  primals_1389 = add_786 = None
    copy__408: "f32[18]" = torch.ops.aten.copy_.default(primals_1390, add_793);  primals_1390 = add_793 = None
    copy__409: "f32[18]" = torch.ops.aten.copy_.default(primals_1391, add_794);  primals_1391 = add_794 = None
    copy__410: "i64[]" = torch.ops.aten.copy_.default(primals_1392, add_791);  primals_1392 = add_791 = None
    copy__411: "f32[36]" = torch.ops.aten.copy_.default(primals_1393, add_799);  primals_1393 = add_799 = None
    copy__412: "f32[36]" = torch.ops.aten.copy_.default(primals_1394, add_800);  primals_1394 = add_800 = None
    copy__413: "i64[]" = torch.ops.aten.copy_.default(primals_1395, add_797);  primals_1395 = add_797 = None
    copy__414: "f32[36]" = torch.ops.aten.copy_.default(primals_1396, add_804);  primals_1396 = add_804 = None
    copy__415: "f32[36]" = torch.ops.aten.copy_.default(primals_1397, add_805);  primals_1397 = add_805 = None
    copy__416: "i64[]" = torch.ops.aten.copy_.default(primals_1398, add_802);  primals_1398 = add_802 = None
    copy__417: "f32[36]" = torch.ops.aten.copy_.default(primals_1399, add_810);  primals_1399 = add_810 = None
    copy__418: "f32[36]" = torch.ops.aten.copy_.default(primals_1400, add_811);  primals_1400 = add_811 = None
    copy__419: "i64[]" = torch.ops.aten.copy_.default(primals_1401, add_808);  primals_1401 = add_808 = None
    copy__420: "f32[36]" = torch.ops.aten.copy_.default(primals_1402, add_815);  primals_1402 = add_815 = None
    copy__421: "f32[36]" = torch.ops.aten.copy_.default(primals_1403, add_816);  primals_1403 = add_816 = None
    copy__422: "i64[]" = torch.ops.aten.copy_.default(primals_1404, add_813);  primals_1404 = add_813 = None
    copy__423: "f32[36]" = torch.ops.aten.copy_.default(primals_1405, add_821);  primals_1405 = add_821 = None
    copy__424: "f32[36]" = torch.ops.aten.copy_.default(primals_1406, add_822);  primals_1406 = add_822 = None
    copy__425: "i64[]" = torch.ops.aten.copy_.default(primals_1407, add_819);  primals_1407 = add_819 = None
    copy__426: "f32[36]" = torch.ops.aten.copy_.default(primals_1408, add_826);  primals_1408 = add_826 = None
    copy__427: "f32[36]" = torch.ops.aten.copy_.default(primals_1409, add_827);  primals_1409 = add_827 = None
    copy__428: "i64[]" = torch.ops.aten.copy_.default(primals_1410, add_824);  primals_1410 = add_824 = None
    copy__429: "f32[36]" = torch.ops.aten.copy_.default(primals_1411, add_832);  primals_1411 = add_832 = None
    copy__430: "f32[36]" = torch.ops.aten.copy_.default(primals_1412, add_833);  primals_1412 = add_833 = None
    copy__431: "i64[]" = torch.ops.aten.copy_.default(primals_1413, add_830);  primals_1413 = add_830 = None
    copy__432: "f32[36]" = torch.ops.aten.copy_.default(primals_1414, add_837);  primals_1414 = add_837 = None
    copy__433: "f32[36]" = torch.ops.aten.copy_.default(primals_1415, add_838);  primals_1415 = add_838 = None
    copy__434: "i64[]" = torch.ops.aten.copy_.default(primals_1416, add_835);  primals_1416 = add_835 = None
    copy__435: "f32[72]" = torch.ops.aten.copy_.default(primals_1417, add_843);  primals_1417 = add_843 = None
    copy__436: "f32[72]" = torch.ops.aten.copy_.default(primals_1418, add_844);  primals_1418 = add_844 = None
    copy__437: "i64[]" = torch.ops.aten.copy_.default(primals_1419, add_841);  primals_1419 = add_841 = None
    copy__438: "f32[72]" = torch.ops.aten.copy_.default(primals_1420, add_848);  primals_1420 = add_848 = None
    copy__439: "f32[72]" = torch.ops.aten.copy_.default(primals_1421, add_849);  primals_1421 = add_849 = None
    copy__440: "i64[]" = torch.ops.aten.copy_.default(primals_1422, add_846);  primals_1422 = add_846 = None
    copy__441: "f32[72]" = torch.ops.aten.copy_.default(primals_1423, add_854);  primals_1423 = add_854 = None
    copy__442: "f32[72]" = torch.ops.aten.copy_.default(primals_1424, add_855);  primals_1424 = add_855 = None
    copy__443: "i64[]" = torch.ops.aten.copy_.default(primals_1425, add_852);  primals_1425 = add_852 = None
    copy__444: "f32[72]" = torch.ops.aten.copy_.default(primals_1426, add_859);  primals_1426 = add_859 = None
    copy__445: "f32[72]" = torch.ops.aten.copy_.default(primals_1427, add_860);  primals_1427 = add_860 = None
    copy__446: "i64[]" = torch.ops.aten.copy_.default(primals_1428, add_857);  primals_1428 = add_857 = None
    copy__447: "f32[72]" = torch.ops.aten.copy_.default(primals_1429, add_865);  primals_1429 = add_865 = None
    copy__448: "f32[72]" = torch.ops.aten.copy_.default(primals_1430, add_866);  primals_1430 = add_866 = None
    copy__449: "i64[]" = torch.ops.aten.copy_.default(primals_1431, add_863);  primals_1431 = add_863 = None
    copy__450: "f32[72]" = torch.ops.aten.copy_.default(primals_1432, add_870);  primals_1432 = add_870 = None
    copy__451: "f32[72]" = torch.ops.aten.copy_.default(primals_1433, add_871);  primals_1433 = add_871 = None
    copy__452: "i64[]" = torch.ops.aten.copy_.default(primals_1434, add_868);  primals_1434 = add_868 = None
    copy__453: "f32[72]" = torch.ops.aten.copy_.default(primals_1435, add_876);  primals_1435 = add_876 = None
    copy__454: "f32[72]" = torch.ops.aten.copy_.default(primals_1436, add_877);  primals_1436 = add_877 = None
    copy__455: "i64[]" = torch.ops.aten.copy_.default(primals_1437, add_874);  primals_1437 = add_874 = None
    copy__456: "f32[72]" = torch.ops.aten.copy_.default(primals_1438, add_881);  primals_1438 = add_881 = None
    copy__457: "f32[72]" = torch.ops.aten.copy_.default(primals_1439, add_882);  primals_1439 = add_882 = None
    copy__458: "i64[]" = torch.ops.aten.copy_.default(primals_1440, add_879);  primals_1440 = add_879 = None
    copy__459: "f32[18]" = torch.ops.aten.copy_.default(primals_1441, add_887);  primals_1441 = add_887 = None
    copy__460: "f32[18]" = torch.ops.aten.copy_.default(primals_1442, add_888);  primals_1442 = add_888 = None
    copy__461: "i64[]" = torch.ops.aten.copy_.default(primals_1443, add_885);  primals_1443 = add_885 = None
    copy__462: "f32[18]" = torch.ops.aten.copy_.default(primals_1444, add_897);  primals_1444 = add_897 = None
    copy__463: "f32[18]" = torch.ops.aten.copy_.default(primals_1445, add_898);  primals_1445 = add_898 = None
    copy__464: "i64[]" = torch.ops.aten.copy_.default(primals_1446, add_895);  primals_1446 = add_895 = None
    copy__465: "f32[36]" = torch.ops.aten.copy_.default(primals_1447, add_907);  primals_1447 = add_907 = None
    copy__466: "f32[36]" = torch.ops.aten.copy_.default(primals_1448, add_908);  primals_1448 = add_908 = None
    copy__467: "i64[]" = torch.ops.aten.copy_.default(primals_1449, add_905);  primals_1449 = add_905 = None
    copy__468: "f32[36]" = torch.ops.aten.copy_.default(primals_1450, add_913);  primals_1450 = add_913 = None
    copy__469: "f32[36]" = torch.ops.aten.copy_.default(primals_1451, add_914);  primals_1451 = add_914 = None
    copy__470: "i64[]" = torch.ops.aten.copy_.default(primals_1452, add_911);  primals_1452 = add_911 = None
    copy__471: "f32[18]" = torch.ops.aten.copy_.default(primals_1453, add_923);  primals_1453 = add_923 = None
    copy__472: "f32[18]" = torch.ops.aten.copy_.default(primals_1454, add_924);  primals_1454 = add_924 = None
    copy__473: "i64[]" = torch.ops.aten.copy_.default(primals_1455, add_921);  primals_1455 = add_921 = None
    copy__474: "f32[72]" = torch.ops.aten.copy_.default(primals_1456, add_928);  primals_1456 = add_928 = None
    copy__475: "f32[72]" = torch.ops.aten.copy_.default(primals_1457, add_929);  primals_1457 = add_929 = None
    copy__476: "i64[]" = torch.ops.aten.copy_.default(primals_1458, add_926);  primals_1458 = add_926 = None
    copy__477: "f32[72]" = torch.ops.aten.copy_.default(primals_1459, add_933);  primals_1459 = add_933 = None
    copy__478: "f32[72]" = torch.ops.aten.copy_.default(primals_1460, add_934);  primals_1460 = add_934 = None
    copy__479: "i64[]" = torch.ops.aten.copy_.default(primals_1461, add_931);  primals_1461 = add_931 = None
    copy__480: "f32[144]" = torch.ops.aten.copy_.default(primals_1462, add_940);  primals_1462 = add_940 = None
    copy__481: "f32[144]" = torch.ops.aten.copy_.default(primals_1463, add_941);  primals_1463 = add_941 = None
    copy__482: "i64[]" = torch.ops.aten.copy_.default(primals_1464, add_938);  primals_1464 = add_938 = None
    copy__483: "f32[18]" = torch.ops.aten.copy_.default(primals_1465, add_945);  primals_1465 = add_945 = None
    copy__484: "f32[18]" = torch.ops.aten.copy_.default(primals_1466, add_946);  primals_1466 = add_946 = None
    copy__485: "i64[]" = torch.ops.aten.copy_.default(primals_1467, add_943);  primals_1467 = add_943 = None
    copy__486: "f32[18]" = torch.ops.aten.copy_.default(primals_1468, add_950);  primals_1468 = add_950 = None
    copy__487: "f32[18]" = torch.ops.aten.copy_.default(primals_1469, add_951);  primals_1469 = add_951 = None
    copy__488: "i64[]" = torch.ops.aten.copy_.default(primals_1470, add_948);  primals_1470 = add_948 = None
    copy__489: "f32[18]" = torch.ops.aten.copy_.default(primals_1471, add_956);  primals_1471 = add_956 = None
    copy__490: "f32[18]" = torch.ops.aten.copy_.default(primals_1472, add_957);  primals_1472 = add_957 = None
    copy__491: "i64[]" = torch.ops.aten.copy_.default(primals_1473, add_954);  primals_1473 = add_954 = None
    copy__492: "f32[18]" = torch.ops.aten.copy_.default(primals_1474, add_961);  primals_1474 = add_961 = None
    copy__493: "f32[18]" = torch.ops.aten.copy_.default(primals_1475, add_962);  primals_1475 = add_962 = None
    copy__494: "i64[]" = torch.ops.aten.copy_.default(primals_1476, add_959);  primals_1476 = add_959 = None
    copy__495: "f32[18]" = torch.ops.aten.copy_.default(primals_1477, add_967);  primals_1477 = add_967 = None
    copy__496: "f32[18]" = torch.ops.aten.copy_.default(primals_1478, add_968);  primals_1478 = add_968 = None
    copy__497: "i64[]" = torch.ops.aten.copy_.default(primals_1479, add_965);  primals_1479 = add_965 = None
    copy__498: "f32[18]" = torch.ops.aten.copy_.default(primals_1480, add_972);  primals_1480 = add_972 = None
    copy__499: "f32[18]" = torch.ops.aten.copy_.default(primals_1481, add_973);  primals_1481 = add_973 = None
    copy__500: "i64[]" = torch.ops.aten.copy_.default(primals_1482, add_970);  primals_1482 = add_970 = None
    copy__501: "f32[18]" = torch.ops.aten.copy_.default(primals_1483, add_978);  primals_1483 = add_978 = None
    copy__502: "f32[18]" = torch.ops.aten.copy_.default(primals_1484, add_979);  primals_1484 = add_979 = None
    copy__503: "i64[]" = torch.ops.aten.copy_.default(primals_1485, add_976);  primals_1485 = add_976 = None
    copy__504: "f32[18]" = torch.ops.aten.copy_.default(primals_1486, add_983);  primals_1486 = add_983 = None
    copy__505: "f32[18]" = torch.ops.aten.copy_.default(primals_1487, add_984);  primals_1487 = add_984 = None
    copy__506: "i64[]" = torch.ops.aten.copy_.default(primals_1488, add_981);  primals_1488 = add_981 = None
    copy__507: "f32[36]" = torch.ops.aten.copy_.default(primals_1489, add_989);  primals_1489 = add_989 = None
    copy__508: "f32[36]" = torch.ops.aten.copy_.default(primals_1490, add_990);  primals_1490 = add_990 = None
    copy__509: "i64[]" = torch.ops.aten.copy_.default(primals_1491, add_987);  primals_1491 = add_987 = None
    copy__510: "f32[36]" = torch.ops.aten.copy_.default(primals_1492, add_994);  primals_1492 = add_994 = None
    copy__511: "f32[36]" = torch.ops.aten.copy_.default(primals_1493, add_995);  primals_1493 = add_995 = None
    copy__512: "i64[]" = torch.ops.aten.copy_.default(primals_1494, add_992);  primals_1494 = add_992 = None
    copy__513: "f32[36]" = torch.ops.aten.copy_.default(primals_1495, add_1000);  primals_1495 = add_1000 = None
    copy__514: "f32[36]" = torch.ops.aten.copy_.default(primals_1496, add_1001);  primals_1496 = add_1001 = None
    copy__515: "i64[]" = torch.ops.aten.copy_.default(primals_1497, add_998);  primals_1497 = add_998 = None
    copy__516: "f32[36]" = torch.ops.aten.copy_.default(primals_1498, add_1005);  primals_1498 = add_1005 = None
    copy__517: "f32[36]" = torch.ops.aten.copy_.default(primals_1499, add_1006);  primals_1499 = add_1006 = None
    copy__518: "i64[]" = torch.ops.aten.copy_.default(primals_1500, add_1003);  primals_1500 = add_1003 = None
    copy__519: "f32[36]" = torch.ops.aten.copy_.default(primals_1501, add_1011);  primals_1501 = add_1011 = None
    copy__520: "f32[36]" = torch.ops.aten.copy_.default(primals_1502, add_1012);  primals_1502 = add_1012 = None
    copy__521: "i64[]" = torch.ops.aten.copy_.default(primals_1503, add_1009);  primals_1503 = add_1009 = None
    copy__522: "f32[36]" = torch.ops.aten.copy_.default(primals_1504, add_1016);  primals_1504 = add_1016 = None
    copy__523: "f32[36]" = torch.ops.aten.copy_.default(primals_1505, add_1017);  primals_1505 = add_1017 = None
    copy__524: "i64[]" = torch.ops.aten.copy_.default(primals_1506, add_1014);  primals_1506 = add_1014 = None
    copy__525: "f32[36]" = torch.ops.aten.copy_.default(primals_1507, add_1022);  primals_1507 = add_1022 = None
    copy__526: "f32[36]" = torch.ops.aten.copy_.default(primals_1508, add_1023);  primals_1508 = add_1023 = None
    copy__527: "i64[]" = torch.ops.aten.copy_.default(primals_1509, add_1020);  primals_1509 = add_1020 = None
    copy__528: "f32[36]" = torch.ops.aten.copy_.default(primals_1510, add_1027);  primals_1510 = add_1027 = None
    copy__529: "f32[36]" = torch.ops.aten.copy_.default(primals_1511, add_1028);  primals_1511 = add_1028 = None
    copy__530: "i64[]" = torch.ops.aten.copy_.default(primals_1512, add_1025);  primals_1512 = add_1025 = None
    copy__531: "f32[72]" = torch.ops.aten.copy_.default(primals_1513, add_1033);  primals_1513 = add_1033 = None
    copy__532: "f32[72]" = torch.ops.aten.copy_.default(primals_1514, add_1034);  primals_1514 = add_1034 = None
    copy__533: "i64[]" = torch.ops.aten.copy_.default(primals_1515, add_1031);  primals_1515 = add_1031 = None
    copy__534: "f32[72]" = torch.ops.aten.copy_.default(primals_1516, add_1038);  primals_1516 = add_1038 = None
    copy__535: "f32[72]" = torch.ops.aten.copy_.default(primals_1517, add_1039);  primals_1517 = add_1039 = None
    copy__536: "i64[]" = torch.ops.aten.copy_.default(primals_1518, add_1036);  primals_1518 = add_1036 = None
    copy__537: "f32[72]" = torch.ops.aten.copy_.default(primals_1519, add_1044);  primals_1519 = add_1044 = None
    copy__538: "f32[72]" = torch.ops.aten.copy_.default(primals_1520, add_1045);  primals_1520 = add_1045 = None
    copy__539: "i64[]" = torch.ops.aten.copy_.default(primals_1521, add_1042);  primals_1521 = add_1042 = None
    copy__540: "f32[72]" = torch.ops.aten.copy_.default(primals_1522, add_1049);  primals_1522 = add_1049 = None
    copy__541: "f32[72]" = torch.ops.aten.copy_.default(primals_1523, add_1050);  primals_1523 = add_1050 = None
    copy__542: "i64[]" = torch.ops.aten.copy_.default(primals_1524, add_1047);  primals_1524 = add_1047 = None
    copy__543: "f32[72]" = torch.ops.aten.copy_.default(primals_1525, add_1055);  primals_1525 = add_1055 = None
    copy__544: "f32[72]" = torch.ops.aten.copy_.default(primals_1526, add_1056);  primals_1526 = add_1056 = None
    copy__545: "i64[]" = torch.ops.aten.copy_.default(primals_1527, add_1053);  primals_1527 = add_1053 = None
    copy__546: "f32[72]" = torch.ops.aten.copy_.default(primals_1528, add_1060);  primals_1528 = add_1060 = None
    copy__547: "f32[72]" = torch.ops.aten.copy_.default(primals_1529, add_1061);  primals_1529 = add_1061 = None
    copy__548: "i64[]" = torch.ops.aten.copy_.default(primals_1530, add_1058);  primals_1530 = add_1058 = None
    copy__549: "f32[72]" = torch.ops.aten.copy_.default(primals_1531, add_1066);  primals_1531 = add_1066 = None
    copy__550: "f32[72]" = torch.ops.aten.copy_.default(primals_1532, add_1067);  primals_1532 = add_1067 = None
    copy__551: "i64[]" = torch.ops.aten.copy_.default(primals_1533, add_1064);  primals_1533 = add_1064 = None
    copy__552: "f32[72]" = torch.ops.aten.copy_.default(primals_1534, add_1071);  primals_1534 = add_1071 = None
    copy__553: "f32[72]" = torch.ops.aten.copy_.default(primals_1535, add_1072);  primals_1535 = add_1072 = None
    copy__554: "i64[]" = torch.ops.aten.copy_.default(primals_1536, add_1069);  primals_1536 = add_1069 = None
    copy__555: "f32[144]" = torch.ops.aten.copy_.default(primals_1537, add_1077);  primals_1537 = add_1077 = None
    copy__556: "f32[144]" = torch.ops.aten.copy_.default(primals_1538, add_1078);  primals_1538 = add_1078 = None
    copy__557: "i64[]" = torch.ops.aten.copy_.default(primals_1539, add_1075);  primals_1539 = add_1075 = None
    copy__558: "f32[144]" = torch.ops.aten.copy_.default(primals_1540, add_1082);  primals_1540 = add_1082 = None
    copy__559: "f32[144]" = torch.ops.aten.copy_.default(primals_1541, add_1083);  primals_1541 = add_1083 = None
    copy__560: "i64[]" = torch.ops.aten.copy_.default(primals_1542, add_1080);  primals_1542 = add_1080 = None
    copy__561: "f32[144]" = torch.ops.aten.copy_.default(primals_1543, add_1088);  primals_1543 = add_1088 = None
    copy__562: "f32[144]" = torch.ops.aten.copy_.default(primals_1544, add_1089);  primals_1544 = add_1089 = None
    copy__563: "i64[]" = torch.ops.aten.copy_.default(primals_1545, add_1086);  primals_1545 = add_1086 = None
    copy__564: "f32[144]" = torch.ops.aten.copy_.default(primals_1546, add_1093);  primals_1546 = add_1093 = None
    copy__565: "f32[144]" = torch.ops.aten.copy_.default(primals_1547, add_1094);  primals_1547 = add_1094 = None
    copy__566: "i64[]" = torch.ops.aten.copy_.default(primals_1548, add_1091);  primals_1548 = add_1091 = None
    copy__567: "f32[144]" = torch.ops.aten.copy_.default(primals_1549, add_1099);  primals_1549 = add_1099 = None
    copy__568: "f32[144]" = torch.ops.aten.copy_.default(primals_1550, add_1100);  primals_1550 = add_1100 = None
    copy__569: "i64[]" = torch.ops.aten.copy_.default(primals_1551, add_1097);  primals_1551 = add_1097 = None
    copy__570: "f32[144]" = torch.ops.aten.copy_.default(primals_1552, add_1104);  primals_1552 = add_1104 = None
    copy__571: "f32[144]" = torch.ops.aten.copy_.default(primals_1553, add_1105);  primals_1553 = add_1105 = None
    copy__572: "i64[]" = torch.ops.aten.copy_.default(primals_1554, add_1102);  primals_1554 = add_1102 = None
    copy__573: "f32[144]" = torch.ops.aten.copy_.default(primals_1555, add_1110);  primals_1555 = add_1110 = None
    copy__574: "f32[144]" = torch.ops.aten.copy_.default(primals_1556, add_1111);  primals_1556 = add_1111 = None
    copy__575: "i64[]" = torch.ops.aten.copy_.default(primals_1557, add_1108);  primals_1557 = add_1108 = None
    copy__576: "f32[144]" = torch.ops.aten.copy_.default(primals_1558, add_1115);  primals_1558 = add_1115 = None
    copy__577: "f32[144]" = torch.ops.aten.copy_.default(primals_1559, add_1116);  primals_1559 = add_1116 = None
    copy__578: "i64[]" = torch.ops.aten.copy_.default(primals_1560, add_1113);  primals_1560 = add_1113 = None
    copy__579: "f32[18]" = torch.ops.aten.copy_.default(primals_1561, add_1121);  primals_1561 = add_1121 = None
    copy__580: "f32[18]" = torch.ops.aten.copy_.default(primals_1562, add_1122);  primals_1562 = add_1122 = None
    copy__581: "i64[]" = torch.ops.aten.copy_.default(primals_1563, add_1119);  primals_1563 = add_1119 = None
    copy__582: "f32[18]" = torch.ops.aten.copy_.default(primals_1564, add_1131);  primals_1564 = add_1131 = None
    copy__583: "f32[18]" = torch.ops.aten.copy_.default(primals_1565, add_1132);  primals_1565 = add_1132 = None
    copy__584: "i64[]" = torch.ops.aten.copy_.default(primals_1566, add_1129);  primals_1566 = add_1129 = None
    copy__585: "f32[18]" = torch.ops.aten.copy_.default(primals_1567, add_1141);  primals_1567 = add_1141 = None
    copy__586: "f32[18]" = torch.ops.aten.copy_.default(primals_1568, add_1142);  primals_1568 = add_1142 = None
    copy__587: "i64[]" = torch.ops.aten.copy_.default(primals_1569, add_1139);  primals_1569 = add_1139 = None
    copy__588: "f32[36]" = torch.ops.aten.copy_.default(primals_1570, add_1151);  primals_1570 = add_1151 = None
    copy__589: "f32[36]" = torch.ops.aten.copy_.default(primals_1571, add_1152);  primals_1571 = add_1152 = None
    copy__590: "i64[]" = torch.ops.aten.copy_.default(primals_1572, add_1149);  primals_1572 = add_1149 = None
    copy__591: "f32[36]" = torch.ops.aten.copy_.default(primals_1573, add_1157);  primals_1573 = add_1157 = None
    copy__592: "f32[36]" = torch.ops.aten.copy_.default(primals_1574, add_1158);  primals_1574 = add_1158 = None
    copy__593: "i64[]" = torch.ops.aten.copy_.default(primals_1575, add_1155);  primals_1575 = add_1155 = None
    copy__594: "f32[36]" = torch.ops.aten.copy_.default(primals_1576, add_1167);  primals_1576 = add_1167 = None
    copy__595: "f32[36]" = torch.ops.aten.copy_.default(primals_1577, add_1168);  primals_1577 = add_1168 = None
    copy__596: "i64[]" = torch.ops.aten.copy_.default(primals_1578, add_1165);  primals_1578 = add_1165 = None
    copy__597: "f32[18]" = torch.ops.aten.copy_.default(primals_1579, add_1177);  primals_1579 = add_1177 = None
    copy__598: "f32[18]" = torch.ops.aten.copy_.default(primals_1580, add_1178);  primals_1580 = add_1178 = None
    copy__599: "i64[]" = torch.ops.aten.copy_.default(primals_1581, add_1175);  primals_1581 = add_1175 = None
    copy__600: "f32[72]" = torch.ops.aten.copy_.default(primals_1582, add_1182);  primals_1582 = add_1182 = None
    copy__601: "f32[72]" = torch.ops.aten.copy_.default(primals_1583, add_1183);  primals_1583 = add_1183 = None
    copy__602: "i64[]" = torch.ops.aten.copy_.default(primals_1584, add_1180);  primals_1584 = add_1180 = None
    copy__603: "f32[72]" = torch.ops.aten.copy_.default(primals_1585, add_1187);  primals_1585 = add_1187 = None
    copy__604: "f32[72]" = torch.ops.aten.copy_.default(primals_1586, add_1188);  primals_1586 = add_1188 = None
    copy__605: "i64[]" = torch.ops.aten.copy_.default(primals_1587, add_1185);  primals_1587 = add_1185 = None
    copy__606: "f32[72]" = torch.ops.aten.copy_.default(primals_1588, add_1194);  primals_1588 = add_1194 = None
    copy__607: "f32[72]" = torch.ops.aten.copy_.default(primals_1589, add_1195);  primals_1589 = add_1195 = None
    copy__608: "i64[]" = torch.ops.aten.copy_.default(primals_1590, add_1192);  primals_1590 = add_1192 = None
    copy__609: "f32[18]" = torch.ops.aten.copy_.default(primals_1591, add_1204);  primals_1591 = add_1204 = None
    copy__610: "f32[18]" = torch.ops.aten.copy_.default(primals_1592, add_1205);  primals_1592 = add_1205 = None
    copy__611: "i64[]" = torch.ops.aten.copy_.default(primals_1593, add_1202);  primals_1593 = add_1202 = None
    copy__612: "f32[18]" = torch.ops.aten.copy_.default(primals_1594, add_1209);  primals_1594 = add_1209 = None
    copy__613: "f32[18]" = torch.ops.aten.copy_.default(primals_1595, add_1210);  primals_1595 = add_1210 = None
    copy__614: "i64[]" = torch.ops.aten.copy_.default(primals_1596, add_1207);  primals_1596 = add_1207 = None
    copy__615: "f32[144]" = torch.ops.aten.copy_.default(primals_1597, add_1214);  primals_1597 = add_1214 = None
    copy__616: "f32[144]" = torch.ops.aten.copy_.default(primals_1598, add_1215);  primals_1598 = add_1215 = None
    copy__617: "i64[]" = torch.ops.aten.copy_.default(primals_1599, add_1212);  primals_1599 = add_1212 = None
    copy__618: "f32[36]" = torch.ops.aten.copy_.default(primals_1600, add_1219);  primals_1600 = add_1219 = None
    copy__619: "f32[36]" = torch.ops.aten.copy_.default(primals_1601, add_1220);  primals_1601 = add_1220 = None
    copy__620: "i64[]" = torch.ops.aten.copy_.default(primals_1602, add_1217);  primals_1602 = add_1217 = None
    copy__621: "f32[144]" = torch.ops.aten.copy_.default(primals_1603, add_1224);  primals_1603 = add_1224 = None
    copy__622: "f32[144]" = torch.ops.aten.copy_.default(primals_1604, add_1225);  primals_1604 = add_1225 = None
    copy__623: "i64[]" = torch.ops.aten.copy_.default(primals_1605, add_1222);  primals_1605 = add_1222 = None
    copy__624: "f32[144]" = torch.ops.aten.copy_.default(primals_1606, add_1230);  primals_1606 = add_1230 = None
    copy__625: "f32[144]" = torch.ops.aten.copy_.default(primals_1607, add_1231);  primals_1607 = add_1231 = None
    copy__626: "i64[]" = torch.ops.aten.copy_.default(primals_1608, add_1228);  primals_1608 = add_1228 = None
    copy__627: "f32[18]" = torch.ops.aten.copy_.default(primals_1609, add_1237);  primals_1609 = add_1237 = None
    copy__628: "f32[18]" = torch.ops.aten.copy_.default(primals_1610, add_1238);  primals_1610 = add_1238 = None
    copy__629: "i64[]" = torch.ops.aten.copy_.default(primals_1611, add_1235);  primals_1611 = add_1235 = None
    copy__630: "f32[18]" = torch.ops.aten.copy_.default(primals_1612, add_1242);  primals_1612 = add_1242 = None
    copy__631: "f32[18]" = torch.ops.aten.copy_.default(primals_1613, add_1243);  primals_1613 = add_1243 = None
    copy__632: "i64[]" = torch.ops.aten.copy_.default(primals_1614, add_1240);  primals_1614 = add_1240 = None
    copy__633: "f32[18]" = torch.ops.aten.copy_.default(primals_1615, add_1248);  primals_1615 = add_1248 = None
    copy__634: "f32[18]" = torch.ops.aten.copy_.default(primals_1616, add_1249);  primals_1616 = add_1249 = None
    copy__635: "i64[]" = torch.ops.aten.copy_.default(primals_1617, add_1246);  primals_1617 = add_1246 = None
    copy__636: "f32[18]" = torch.ops.aten.copy_.default(primals_1618, add_1253);  primals_1618 = add_1253 = None
    copy__637: "f32[18]" = torch.ops.aten.copy_.default(primals_1619, add_1254);  primals_1619 = add_1254 = None
    copy__638: "i64[]" = torch.ops.aten.copy_.default(primals_1620, add_1251);  primals_1620 = add_1251 = None
    copy__639: "f32[18]" = torch.ops.aten.copy_.default(primals_1621, add_1259);  primals_1621 = add_1259 = None
    copy__640: "f32[18]" = torch.ops.aten.copy_.default(primals_1622, add_1260);  primals_1622 = add_1260 = None
    copy__641: "i64[]" = torch.ops.aten.copy_.default(primals_1623, add_1257);  primals_1623 = add_1257 = None
    copy__642: "f32[18]" = torch.ops.aten.copy_.default(primals_1624, add_1264);  primals_1624 = add_1264 = None
    copy__643: "f32[18]" = torch.ops.aten.copy_.default(primals_1625, add_1265);  primals_1625 = add_1265 = None
    copy__644: "i64[]" = torch.ops.aten.copy_.default(primals_1626, add_1262);  primals_1626 = add_1262 = None
    copy__645: "f32[18]" = torch.ops.aten.copy_.default(primals_1627, add_1270);  primals_1627 = add_1270 = None
    copy__646: "f32[18]" = torch.ops.aten.copy_.default(primals_1628, add_1271);  primals_1628 = add_1271 = None
    copy__647: "i64[]" = torch.ops.aten.copy_.default(primals_1629, add_1268);  primals_1629 = add_1268 = None
    copy__648: "f32[18]" = torch.ops.aten.copy_.default(primals_1630, add_1275);  primals_1630 = add_1275 = None
    copy__649: "f32[18]" = torch.ops.aten.copy_.default(primals_1631, add_1276);  primals_1631 = add_1276 = None
    copy__650: "i64[]" = torch.ops.aten.copy_.default(primals_1632, add_1273);  primals_1632 = add_1273 = None
    copy__651: "f32[36]" = torch.ops.aten.copy_.default(primals_1633, add_1281);  primals_1633 = add_1281 = None
    copy__652: "f32[36]" = torch.ops.aten.copy_.default(primals_1634, add_1282);  primals_1634 = add_1282 = None
    copy__653: "i64[]" = torch.ops.aten.copy_.default(primals_1635, add_1279);  primals_1635 = add_1279 = None
    copy__654: "f32[36]" = torch.ops.aten.copy_.default(primals_1636, add_1286);  primals_1636 = add_1286 = None
    copy__655: "f32[36]" = torch.ops.aten.copy_.default(primals_1637, add_1287);  primals_1637 = add_1287 = None
    copy__656: "i64[]" = torch.ops.aten.copy_.default(primals_1638, add_1284);  primals_1638 = add_1284 = None
    copy__657: "f32[36]" = torch.ops.aten.copy_.default(primals_1639, add_1292);  primals_1639 = add_1292 = None
    copy__658: "f32[36]" = torch.ops.aten.copy_.default(primals_1640, add_1293);  primals_1640 = add_1293 = None
    copy__659: "i64[]" = torch.ops.aten.copy_.default(primals_1641, add_1290);  primals_1641 = add_1290 = None
    copy__660: "f32[36]" = torch.ops.aten.copy_.default(primals_1642, add_1297);  primals_1642 = add_1297 = None
    copy__661: "f32[36]" = torch.ops.aten.copy_.default(primals_1643, add_1298);  primals_1643 = add_1298 = None
    copy__662: "i64[]" = torch.ops.aten.copy_.default(primals_1644, add_1295);  primals_1644 = add_1295 = None
    copy__663: "f32[36]" = torch.ops.aten.copy_.default(primals_1645, add_1303);  primals_1645 = add_1303 = None
    copy__664: "f32[36]" = torch.ops.aten.copy_.default(primals_1646, add_1304);  primals_1646 = add_1304 = None
    copy__665: "i64[]" = torch.ops.aten.copy_.default(primals_1647, add_1301);  primals_1647 = add_1301 = None
    copy__666: "f32[36]" = torch.ops.aten.copy_.default(primals_1648, add_1308);  primals_1648 = add_1308 = None
    copy__667: "f32[36]" = torch.ops.aten.copy_.default(primals_1649, add_1309);  primals_1649 = add_1309 = None
    copy__668: "i64[]" = torch.ops.aten.copy_.default(primals_1650, add_1306);  primals_1650 = add_1306 = None
    copy__669: "f32[36]" = torch.ops.aten.copy_.default(primals_1651, add_1314);  primals_1651 = add_1314 = None
    copy__670: "f32[36]" = torch.ops.aten.copy_.default(primals_1652, add_1315);  primals_1652 = add_1315 = None
    copy__671: "i64[]" = torch.ops.aten.copy_.default(primals_1653, add_1312);  primals_1653 = add_1312 = None
    copy__672: "f32[36]" = torch.ops.aten.copy_.default(primals_1654, add_1319);  primals_1654 = add_1319 = None
    copy__673: "f32[36]" = torch.ops.aten.copy_.default(primals_1655, add_1320);  primals_1655 = add_1320 = None
    copy__674: "i64[]" = torch.ops.aten.copy_.default(primals_1656, add_1317);  primals_1656 = add_1317 = None
    copy__675: "f32[72]" = torch.ops.aten.copy_.default(primals_1657, add_1325);  primals_1657 = add_1325 = None
    copy__676: "f32[72]" = torch.ops.aten.copy_.default(primals_1658, add_1326);  primals_1658 = add_1326 = None
    copy__677: "i64[]" = torch.ops.aten.copy_.default(primals_1659, add_1323);  primals_1659 = add_1323 = None
    copy__678: "f32[72]" = torch.ops.aten.copy_.default(primals_1660, add_1330);  primals_1660 = add_1330 = None
    copy__679: "f32[72]" = torch.ops.aten.copy_.default(primals_1661, add_1331);  primals_1661 = add_1331 = None
    copy__680: "i64[]" = torch.ops.aten.copy_.default(primals_1662, add_1328);  primals_1662 = add_1328 = None
    copy__681: "f32[72]" = torch.ops.aten.copy_.default(primals_1663, add_1336);  primals_1663 = add_1336 = None
    copy__682: "f32[72]" = torch.ops.aten.copy_.default(primals_1664, add_1337);  primals_1664 = add_1337 = None
    copy__683: "i64[]" = torch.ops.aten.copy_.default(primals_1665, add_1334);  primals_1665 = add_1334 = None
    copy__684: "f32[72]" = torch.ops.aten.copy_.default(primals_1666, add_1341);  primals_1666 = add_1341 = None
    copy__685: "f32[72]" = torch.ops.aten.copy_.default(primals_1667, add_1342);  primals_1667 = add_1342 = None
    copy__686: "i64[]" = torch.ops.aten.copy_.default(primals_1668, add_1339);  primals_1668 = add_1339 = None
    copy__687: "f32[72]" = torch.ops.aten.copy_.default(primals_1669, add_1347);  primals_1669 = add_1347 = None
    copy__688: "f32[72]" = torch.ops.aten.copy_.default(primals_1670, add_1348);  primals_1670 = add_1348 = None
    copy__689: "i64[]" = torch.ops.aten.copy_.default(primals_1671, add_1345);  primals_1671 = add_1345 = None
    copy__690: "f32[72]" = torch.ops.aten.copy_.default(primals_1672, add_1352);  primals_1672 = add_1352 = None
    copy__691: "f32[72]" = torch.ops.aten.copy_.default(primals_1673, add_1353);  primals_1673 = add_1353 = None
    copy__692: "i64[]" = torch.ops.aten.copy_.default(primals_1674, add_1350);  primals_1674 = add_1350 = None
    copy__693: "f32[72]" = torch.ops.aten.copy_.default(primals_1675, add_1358);  primals_1675 = add_1358 = None
    copy__694: "f32[72]" = torch.ops.aten.copy_.default(primals_1676, add_1359);  primals_1676 = add_1359 = None
    copy__695: "i64[]" = torch.ops.aten.copy_.default(primals_1677, add_1356);  primals_1677 = add_1356 = None
    copy__696: "f32[72]" = torch.ops.aten.copy_.default(primals_1678, add_1363);  primals_1678 = add_1363 = None
    copy__697: "f32[72]" = torch.ops.aten.copy_.default(primals_1679, add_1364);  primals_1679 = add_1364 = None
    copy__698: "i64[]" = torch.ops.aten.copy_.default(primals_1680, add_1361);  primals_1680 = add_1361 = None
    copy__699: "f32[144]" = torch.ops.aten.copy_.default(primals_1681, add_1369);  primals_1681 = add_1369 = None
    copy__700: "f32[144]" = torch.ops.aten.copy_.default(primals_1682, add_1370);  primals_1682 = add_1370 = None
    copy__701: "i64[]" = torch.ops.aten.copy_.default(primals_1683, add_1367);  primals_1683 = add_1367 = None
    copy__702: "f32[144]" = torch.ops.aten.copy_.default(primals_1684, add_1374);  primals_1684 = add_1374 = None
    copy__703: "f32[144]" = torch.ops.aten.copy_.default(primals_1685, add_1375);  primals_1685 = add_1375 = None
    copy__704: "i64[]" = torch.ops.aten.copy_.default(primals_1686, add_1372);  primals_1686 = add_1372 = None
    copy__705: "f32[144]" = torch.ops.aten.copy_.default(primals_1687, add_1380);  primals_1687 = add_1380 = None
    copy__706: "f32[144]" = torch.ops.aten.copy_.default(primals_1688, add_1381);  primals_1688 = add_1381 = None
    copy__707: "i64[]" = torch.ops.aten.copy_.default(primals_1689, add_1378);  primals_1689 = add_1378 = None
    copy__708: "f32[144]" = torch.ops.aten.copy_.default(primals_1690, add_1385);  primals_1690 = add_1385 = None
    copy__709: "f32[144]" = torch.ops.aten.copy_.default(primals_1691, add_1386);  primals_1691 = add_1386 = None
    copy__710: "i64[]" = torch.ops.aten.copy_.default(primals_1692, add_1383);  primals_1692 = add_1383 = None
    copy__711: "f32[144]" = torch.ops.aten.copy_.default(primals_1693, add_1391);  primals_1693 = add_1391 = None
    copy__712: "f32[144]" = torch.ops.aten.copy_.default(primals_1694, add_1392);  primals_1694 = add_1392 = None
    copy__713: "i64[]" = torch.ops.aten.copy_.default(primals_1695, add_1389);  primals_1695 = add_1389 = None
    copy__714: "f32[144]" = torch.ops.aten.copy_.default(primals_1696, add_1396);  primals_1696 = add_1396 = None
    copy__715: "f32[144]" = torch.ops.aten.copy_.default(primals_1697, add_1397);  primals_1697 = add_1397 = None
    copy__716: "i64[]" = torch.ops.aten.copy_.default(primals_1698, add_1394);  primals_1698 = add_1394 = None
    copy__717: "f32[144]" = torch.ops.aten.copy_.default(primals_1699, add_1402);  primals_1699 = add_1402 = None
    copy__718: "f32[144]" = torch.ops.aten.copy_.default(primals_1700, add_1403);  primals_1700 = add_1403 = None
    copy__719: "i64[]" = torch.ops.aten.copy_.default(primals_1701, add_1400);  primals_1701 = add_1400 = None
    copy__720: "f32[144]" = torch.ops.aten.copy_.default(primals_1702, add_1407);  primals_1702 = add_1407 = None
    copy__721: "f32[144]" = torch.ops.aten.copy_.default(primals_1703, add_1408);  primals_1703 = add_1408 = None
    copy__722: "i64[]" = torch.ops.aten.copy_.default(primals_1704, add_1405);  primals_1704 = add_1405 = None
    copy__723: "f32[18]" = torch.ops.aten.copy_.default(primals_1705, add_1413);  primals_1705 = add_1413 = None
    copy__724: "f32[18]" = torch.ops.aten.copy_.default(primals_1706, add_1414);  primals_1706 = add_1414 = None
    copy__725: "i64[]" = torch.ops.aten.copy_.default(primals_1707, add_1411);  primals_1707 = add_1411 = None
    copy__726: "f32[18]" = torch.ops.aten.copy_.default(primals_1708, add_1423);  primals_1708 = add_1423 = None
    copy__727: "f32[18]" = torch.ops.aten.copy_.default(primals_1709, add_1424);  primals_1709 = add_1424 = None
    copy__728: "i64[]" = torch.ops.aten.copy_.default(primals_1710, add_1421);  primals_1710 = add_1421 = None
    copy__729: "f32[18]" = torch.ops.aten.copy_.default(primals_1711, add_1433);  primals_1711 = add_1433 = None
    copy__730: "f32[18]" = torch.ops.aten.copy_.default(primals_1712, add_1434);  primals_1712 = add_1434 = None
    copy__731: "i64[]" = torch.ops.aten.copy_.default(primals_1713, add_1431);  primals_1713 = add_1431 = None
    copy__732: "f32[36]" = torch.ops.aten.copy_.default(primals_1714, add_1443);  primals_1714 = add_1443 = None
    copy__733: "f32[36]" = torch.ops.aten.copy_.default(primals_1715, add_1444);  primals_1715 = add_1444 = None
    copy__734: "i64[]" = torch.ops.aten.copy_.default(primals_1716, add_1441);  primals_1716 = add_1441 = None
    copy__735: "f32[36]" = torch.ops.aten.copy_.default(primals_1717, add_1449);  primals_1717 = add_1449 = None
    copy__736: "f32[36]" = torch.ops.aten.copy_.default(primals_1718, add_1450);  primals_1718 = add_1450 = None
    copy__737: "i64[]" = torch.ops.aten.copy_.default(primals_1719, add_1447);  primals_1719 = add_1447 = None
    copy__738: "f32[36]" = torch.ops.aten.copy_.default(primals_1720, add_1459);  primals_1720 = add_1459 = None
    copy__739: "f32[36]" = torch.ops.aten.copy_.default(primals_1721, add_1460);  primals_1721 = add_1460 = None
    copy__740: "i64[]" = torch.ops.aten.copy_.default(primals_1722, add_1457);  primals_1722 = add_1457 = None
    copy__741: "f32[18]" = torch.ops.aten.copy_.default(primals_1723, add_1469);  primals_1723 = add_1469 = None
    copy__742: "f32[18]" = torch.ops.aten.copy_.default(primals_1724, add_1470);  primals_1724 = add_1470 = None
    copy__743: "i64[]" = torch.ops.aten.copy_.default(primals_1725, add_1467);  primals_1725 = add_1467 = None
    copy__744: "f32[72]" = torch.ops.aten.copy_.default(primals_1726, add_1474);  primals_1726 = add_1474 = None
    copy__745: "f32[72]" = torch.ops.aten.copy_.default(primals_1727, add_1475);  primals_1727 = add_1475 = None
    copy__746: "i64[]" = torch.ops.aten.copy_.default(primals_1728, add_1472);  primals_1728 = add_1472 = None
    copy__747: "f32[72]" = torch.ops.aten.copy_.default(primals_1729, add_1479);  primals_1729 = add_1479 = None
    copy__748: "f32[72]" = torch.ops.aten.copy_.default(primals_1730, add_1480);  primals_1730 = add_1480 = None
    copy__749: "i64[]" = torch.ops.aten.copy_.default(primals_1731, add_1477);  primals_1731 = add_1477 = None
    copy__750: "f32[72]" = torch.ops.aten.copy_.default(primals_1732, add_1486);  primals_1732 = add_1486 = None
    copy__751: "f32[72]" = torch.ops.aten.copy_.default(primals_1733, add_1487);  primals_1733 = add_1487 = None
    copy__752: "i64[]" = torch.ops.aten.copy_.default(primals_1734, add_1484);  primals_1734 = add_1484 = None
    copy__753: "f32[18]" = torch.ops.aten.copy_.default(primals_1735, add_1496);  primals_1735 = add_1496 = None
    copy__754: "f32[18]" = torch.ops.aten.copy_.default(primals_1736, add_1497);  primals_1736 = add_1497 = None
    copy__755: "i64[]" = torch.ops.aten.copy_.default(primals_1737, add_1494);  primals_1737 = add_1494 = None
    copy__756: "f32[18]" = torch.ops.aten.copy_.default(primals_1738, add_1501);  primals_1738 = add_1501 = None
    copy__757: "f32[18]" = torch.ops.aten.copy_.default(primals_1739, add_1502);  primals_1739 = add_1502 = None
    copy__758: "i64[]" = torch.ops.aten.copy_.default(primals_1740, add_1499);  primals_1740 = add_1499 = None
    copy__759: "f32[144]" = torch.ops.aten.copy_.default(primals_1741, add_1506);  primals_1741 = add_1506 = None
    copy__760: "f32[144]" = torch.ops.aten.copy_.default(primals_1742, add_1507);  primals_1742 = add_1507 = None
    copy__761: "i64[]" = torch.ops.aten.copy_.default(primals_1743, add_1504);  primals_1743 = add_1504 = None
    copy__762: "f32[36]" = torch.ops.aten.copy_.default(primals_1744, add_1511);  primals_1744 = add_1511 = None
    copy__763: "f32[36]" = torch.ops.aten.copy_.default(primals_1745, add_1512);  primals_1745 = add_1512 = None
    copy__764: "i64[]" = torch.ops.aten.copy_.default(primals_1746, add_1509);  primals_1746 = add_1509 = None
    copy__765: "f32[144]" = torch.ops.aten.copy_.default(primals_1747, add_1516);  primals_1747 = add_1516 = None
    copy__766: "f32[144]" = torch.ops.aten.copy_.default(primals_1748, add_1517);  primals_1748 = add_1517 = None
    copy__767: "i64[]" = torch.ops.aten.copy_.default(primals_1749, add_1514);  primals_1749 = add_1514 = None
    copy__768: "f32[144]" = torch.ops.aten.copy_.default(primals_1750, add_1522);  primals_1750 = add_1522 = None
    copy__769: "f32[144]" = torch.ops.aten.copy_.default(primals_1751, add_1523);  primals_1751 = add_1523 = None
    copy__770: "i64[]" = torch.ops.aten.copy_.default(primals_1752, add_1520);  primals_1752 = add_1520 = None
    copy__771: "f32[18]" = torch.ops.aten.copy_.default(primals_1753, add_1529);  primals_1753 = add_1529 = None
    copy__772: "f32[18]" = torch.ops.aten.copy_.default(primals_1754, add_1530);  primals_1754 = add_1530 = None
    copy__773: "i64[]" = torch.ops.aten.copy_.default(primals_1755, add_1527);  primals_1755 = add_1527 = None
    copy__774: "f32[18]" = torch.ops.aten.copy_.default(primals_1756, add_1534);  primals_1756 = add_1534 = None
    copy__775: "f32[18]" = torch.ops.aten.copy_.default(primals_1757, add_1535);  primals_1757 = add_1535 = None
    copy__776: "i64[]" = torch.ops.aten.copy_.default(primals_1758, add_1532);  primals_1758 = add_1532 = None
    copy__777: "f32[18]" = torch.ops.aten.copy_.default(primals_1759, add_1540);  primals_1759 = add_1540 = None
    copy__778: "f32[18]" = torch.ops.aten.copy_.default(primals_1760, add_1541);  primals_1760 = add_1541 = None
    copy__779: "i64[]" = torch.ops.aten.copy_.default(primals_1761, add_1538);  primals_1761 = add_1538 = None
    copy__780: "f32[18]" = torch.ops.aten.copy_.default(primals_1762, add_1545);  primals_1762 = add_1545 = None
    copy__781: "f32[18]" = torch.ops.aten.copy_.default(primals_1763, add_1546);  primals_1763 = add_1546 = None
    copy__782: "i64[]" = torch.ops.aten.copy_.default(primals_1764, add_1543);  primals_1764 = add_1543 = None
    copy__783: "f32[18]" = torch.ops.aten.copy_.default(primals_1765, add_1551);  primals_1765 = add_1551 = None
    copy__784: "f32[18]" = torch.ops.aten.copy_.default(primals_1766, add_1552);  primals_1766 = add_1552 = None
    copy__785: "i64[]" = torch.ops.aten.copy_.default(primals_1767, add_1549);  primals_1767 = add_1549 = None
    copy__786: "f32[18]" = torch.ops.aten.copy_.default(primals_1768, add_1556);  primals_1768 = add_1556 = None
    copy__787: "f32[18]" = torch.ops.aten.copy_.default(primals_1769, add_1557);  primals_1769 = add_1557 = None
    copy__788: "i64[]" = torch.ops.aten.copy_.default(primals_1770, add_1554);  primals_1770 = add_1554 = None
    copy__789: "f32[18]" = torch.ops.aten.copy_.default(primals_1771, add_1562);  primals_1771 = add_1562 = None
    copy__790: "f32[18]" = torch.ops.aten.copy_.default(primals_1772, add_1563);  primals_1772 = add_1563 = None
    copy__791: "i64[]" = torch.ops.aten.copy_.default(primals_1773, add_1560);  primals_1773 = add_1560 = None
    copy__792: "f32[18]" = torch.ops.aten.copy_.default(primals_1774, add_1567);  primals_1774 = add_1567 = None
    copy__793: "f32[18]" = torch.ops.aten.copy_.default(primals_1775, add_1568);  primals_1775 = add_1568 = None
    copy__794: "i64[]" = torch.ops.aten.copy_.default(primals_1776, add_1565);  primals_1776 = add_1565 = None
    copy__795: "f32[36]" = torch.ops.aten.copy_.default(primals_1777, add_1573);  primals_1777 = add_1573 = None
    copy__796: "f32[36]" = torch.ops.aten.copy_.default(primals_1778, add_1574);  primals_1778 = add_1574 = None
    copy__797: "i64[]" = torch.ops.aten.copy_.default(primals_1779, add_1571);  primals_1779 = add_1571 = None
    copy__798: "f32[36]" = torch.ops.aten.copy_.default(primals_1780, add_1578);  primals_1780 = add_1578 = None
    copy__799: "f32[36]" = torch.ops.aten.copy_.default(primals_1781, add_1579);  primals_1781 = add_1579 = None
    copy__800: "i64[]" = torch.ops.aten.copy_.default(primals_1782, add_1576);  primals_1782 = add_1576 = None
    copy__801: "f32[36]" = torch.ops.aten.copy_.default(primals_1783, add_1584);  primals_1783 = add_1584 = None
    copy__802: "f32[36]" = torch.ops.aten.copy_.default(primals_1784, add_1585);  primals_1784 = add_1585 = None
    copy__803: "i64[]" = torch.ops.aten.copy_.default(primals_1785, add_1582);  primals_1785 = add_1582 = None
    copy__804: "f32[36]" = torch.ops.aten.copy_.default(primals_1786, add_1589);  primals_1786 = add_1589 = None
    copy__805: "f32[36]" = torch.ops.aten.copy_.default(primals_1787, add_1590);  primals_1787 = add_1590 = None
    copy__806: "i64[]" = torch.ops.aten.copy_.default(primals_1788, add_1587);  primals_1788 = add_1587 = None
    copy__807: "f32[36]" = torch.ops.aten.copy_.default(primals_1789, add_1595);  primals_1789 = add_1595 = None
    copy__808: "f32[36]" = torch.ops.aten.copy_.default(primals_1790, add_1596);  primals_1790 = add_1596 = None
    copy__809: "i64[]" = torch.ops.aten.copy_.default(primals_1791, add_1593);  primals_1791 = add_1593 = None
    copy__810: "f32[36]" = torch.ops.aten.copy_.default(primals_1792, add_1600);  primals_1792 = add_1600 = None
    copy__811: "f32[36]" = torch.ops.aten.copy_.default(primals_1793, add_1601);  primals_1793 = add_1601 = None
    copy__812: "i64[]" = torch.ops.aten.copy_.default(primals_1794, add_1598);  primals_1794 = add_1598 = None
    copy__813: "f32[36]" = torch.ops.aten.copy_.default(primals_1795, add_1606);  primals_1795 = add_1606 = None
    copy__814: "f32[36]" = torch.ops.aten.copy_.default(primals_1796, add_1607);  primals_1796 = add_1607 = None
    copy__815: "i64[]" = torch.ops.aten.copy_.default(primals_1797, add_1604);  primals_1797 = add_1604 = None
    copy__816: "f32[36]" = torch.ops.aten.copy_.default(primals_1798, add_1611);  primals_1798 = add_1611 = None
    copy__817: "f32[36]" = torch.ops.aten.copy_.default(primals_1799, add_1612);  primals_1799 = add_1612 = None
    copy__818: "i64[]" = torch.ops.aten.copy_.default(primals_1800, add_1609);  primals_1800 = add_1609 = None
    copy__819: "f32[72]" = torch.ops.aten.copy_.default(primals_1801, add_1617);  primals_1801 = add_1617 = None
    copy__820: "f32[72]" = torch.ops.aten.copy_.default(primals_1802, add_1618);  primals_1802 = add_1618 = None
    copy__821: "i64[]" = torch.ops.aten.copy_.default(primals_1803, add_1615);  primals_1803 = add_1615 = None
    copy__822: "f32[72]" = torch.ops.aten.copy_.default(primals_1804, add_1622);  primals_1804 = add_1622 = None
    copy__823: "f32[72]" = torch.ops.aten.copy_.default(primals_1805, add_1623);  primals_1805 = add_1623 = None
    copy__824: "i64[]" = torch.ops.aten.copy_.default(primals_1806, add_1620);  primals_1806 = add_1620 = None
    copy__825: "f32[72]" = torch.ops.aten.copy_.default(primals_1807, add_1628);  primals_1807 = add_1628 = None
    copy__826: "f32[72]" = torch.ops.aten.copy_.default(primals_1808, add_1629);  primals_1808 = add_1629 = None
    copy__827: "i64[]" = torch.ops.aten.copy_.default(primals_1809, add_1626);  primals_1809 = add_1626 = None
    copy__828: "f32[72]" = torch.ops.aten.copy_.default(primals_1810, add_1633);  primals_1810 = add_1633 = None
    copy__829: "f32[72]" = torch.ops.aten.copy_.default(primals_1811, add_1634);  primals_1811 = add_1634 = None
    copy__830: "i64[]" = torch.ops.aten.copy_.default(primals_1812, add_1631);  primals_1812 = add_1631 = None
    copy__831: "f32[72]" = torch.ops.aten.copy_.default(primals_1813, add_1639);  primals_1813 = add_1639 = None
    copy__832: "f32[72]" = torch.ops.aten.copy_.default(primals_1814, add_1640);  primals_1814 = add_1640 = None
    copy__833: "i64[]" = torch.ops.aten.copy_.default(primals_1815, add_1637);  primals_1815 = add_1637 = None
    copy__834: "f32[72]" = torch.ops.aten.copy_.default(primals_1816, add_1644);  primals_1816 = add_1644 = None
    copy__835: "f32[72]" = torch.ops.aten.copy_.default(primals_1817, add_1645);  primals_1817 = add_1645 = None
    copy__836: "i64[]" = torch.ops.aten.copy_.default(primals_1818, add_1642);  primals_1818 = add_1642 = None
    copy__837: "f32[72]" = torch.ops.aten.copy_.default(primals_1819, add_1650);  primals_1819 = add_1650 = None
    copy__838: "f32[72]" = torch.ops.aten.copy_.default(primals_1820, add_1651);  primals_1820 = add_1651 = None
    copy__839: "i64[]" = torch.ops.aten.copy_.default(primals_1821, add_1648);  primals_1821 = add_1648 = None
    copy__840: "f32[72]" = torch.ops.aten.copy_.default(primals_1822, add_1655);  primals_1822 = add_1655 = None
    copy__841: "f32[72]" = torch.ops.aten.copy_.default(primals_1823, add_1656);  primals_1823 = add_1656 = None
    copy__842: "i64[]" = torch.ops.aten.copy_.default(primals_1824, add_1653);  primals_1824 = add_1653 = None
    copy__843: "f32[144]" = torch.ops.aten.copy_.default(primals_1825, add_1661);  primals_1825 = add_1661 = None
    copy__844: "f32[144]" = torch.ops.aten.copy_.default(primals_1826, add_1662);  primals_1826 = add_1662 = None
    copy__845: "i64[]" = torch.ops.aten.copy_.default(primals_1827, add_1659);  primals_1827 = add_1659 = None
    copy__846: "f32[144]" = torch.ops.aten.copy_.default(primals_1828, add_1666);  primals_1828 = add_1666 = None
    copy__847: "f32[144]" = torch.ops.aten.copy_.default(primals_1829, add_1667);  primals_1829 = add_1667 = None
    copy__848: "i64[]" = torch.ops.aten.copy_.default(primals_1830, add_1664);  primals_1830 = add_1664 = None
    copy__849: "f32[144]" = torch.ops.aten.copy_.default(primals_1831, add_1672);  primals_1831 = add_1672 = None
    copy__850: "f32[144]" = torch.ops.aten.copy_.default(primals_1832, add_1673);  primals_1832 = add_1673 = None
    copy__851: "i64[]" = torch.ops.aten.copy_.default(primals_1833, add_1670);  primals_1833 = add_1670 = None
    copy__852: "f32[144]" = torch.ops.aten.copy_.default(primals_1834, add_1677);  primals_1834 = add_1677 = None
    copy__853: "f32[144]" = torch.ops.aten.copy_.default(primals_1835, add_1678);  primals_1835 = add_1678 = None
    copy__854: "i64[]" = torch.ops.aten.copy_.default(primals_1836, add_1675);  primals_1836 = add_1675 = None
    copy__855: "f32[144]" = torch.ops.aten.copy_.default(primals_1837, add_1683);  primals_1837 = add_1683 = None
    copy__856: "f32[144]" = torch.ops.aten.copy_.default(primals_1838, add_1684);  primals_1838 = add_1684 = None
    copy__857: "i64[]" = torch.ops.aten.copy_.default(primals_1839, add_1681);  primals_1839 = add_1681 = None
    copy__858: "f32[144]" = torch.ops.aten.copy_.default(primals_1840, add_1688);  primals_1840 = add_1688 = None
    copy__859: "f32[144]" = torch.ops.aten.copy_.default(primals_1841, add_1689);  primals_1841 = add_1689 = None
    copy__860: "i64[]" = torch.ops.aten.copy_.default(primals_1842, add_1686);  primals_1842 = add_1686 = None
    copy__861: "f32[144]" = torch.ops.aten.copy_.default(primals_1843, add_1694);  primals_1843 = add_1694 = None
    copy__862: "f32[144]" = torch.ops.aten.copy_.default(primals_1844, add_1695);  primals_1844 = add_1695 = None
    copy__863: "i64[]" = torch.ops.aten.copy_.default(primals_1845, add_1692);  primals_1845 = add_1692 = None
    copy__864: "f32[144]" = torch.ops.aten.copy_.default(primals_1846, add_1699);  primals_1846 = add_1699 = None
    copy__865: "f32[144]" = torch.ops.aten.copy_.default(primals_1847, add_1700);  primals_1847 = add_1700 = None
    copy__866: "i64[]" = torch.ops.aten.copy_.default(primals_1848, add_1697);  primals_1848 = add_1697 = None
    copy__867: "f32[18]" = torch.ops.aten.copy_.default(primals_1849, add_1705);  primals_1849 = add_1705 = None
    copy__868: "f32[18]" = torch.ops.aten.copy_.default(primals_1850, add_1706);  primals_1850 = add_1706 = None
    copy__869: "i64[]" = torch.ops.aten.copy_.default(primals_1851, add_1703);  primals_1851 = add_1703 = None
    copy__870: "f32[18]" = torch.ops.aten.copy_.default(primals_1852, add_1715);  primals_1852 = add_1715 = None
    copy__871: "f32[18]" = torch.ops.aten.copy_.default(primals_1853, add_1716);  primals_1853 = add_1716 = None
    copy__872: "i64[]" = torch.ops.aten.copy_.default(primals_1854, add_1713);  primals_1854 = add_1713 = None
    copy__873: "f32[18]" = torch.ops.aten.copy_.default(primals_1855, add_1725);  primals_1855 = add_1725 = None
    copy__874: "f32[18]" = torch.ops.aten.copy_.default(primals_1856, add_1726);  primals_1856 = add_1726 = None
    copy__875: "i64[]" = torch.ops.aten.copy_.default(primals_1857, add_1723);  primals_1857 = add_1723 = None
    copy__876: "f32[36]" = torch.ops.aten.copy_.default(primals_1858, add_1735);  primals_1858 = add_1735 = None
    copy__877: "f32[36]" = torch.ops.aten.copy_.default(primals_1859, add_1736);  primals_1859 = add_1736 = None
    copy__878: "i64[]" = torch.ops.aten.copy_.default(primals_1860, add_1733);  primals_1860 = add_1733 = None
    copy__879: "f32[36]" = torch.ops.aten.copy_.default(primals_1861, add_1741);  primals_1861 = add_1741 = None
    copy__880: "f32[36]" = torch.ops.aten.copy_.default(primals_1862, add_1742);  primals_1862 = add_1742 = None
    copy__881: "i64[]" = torch.ops.aten.copy_.default(primals_1863, add_1739);  primals_1863 = add_1739 = None
    copy__882: "f32[36]" = torch.ops.aten.copy_.default(primals_1864, add_1751);  primals_1864 = add_1751 = None
    copy__883: "f32[36]" = torch.ops.aten.copy_.default(primals_1865, add_1752);  primals_1865 = add_1752 = None
    copy__884: "i64[]" = torch.ops.aten.copy_.default(primals_1866, add_1749);  primals_1866 = add_1749 = None
    copy__885: "f32[18]" = torch.ops.aten.copy_.default(primals_1867, add_1761);  primals_1867 = add_1761 = None
    copy__886: "f32[18]" = torch.ops.aten.copy_.default(primals_1868, add_1762);  primals_1868 = add_1762 = None
    copy__887: "i64[]" = torch.ops.aten.copy_.default(primals_1869, add_1759);  primals_1869 = add_1759 = None
    copy__888: "f32[72]" = torch.ops.aten.copy_.default(primals_1870, add_1766);  primals_1870 = add_1766 = None
    copy__889: "f32[72]" = torch.ops.aten.copy_.default(primals_1871, add_1767);  primals_1871 = add_1767 = None
    copy__890: "i64[]" = torch.ops.aten.copy_.default(primals_1872, add_1764);  primals_1872 = add_1764 = None
    copy__891: "f32[72]" = torch.ops.aten.copy_.default(primals_1873, add_1771);  primals_1873 = add_1771 = None
    copy__892: "f32[72]" = torch.ops.aten.copy_.default(primals_1874, add_1772);  primals_1874 = add_1772 = None
    copy__893: "i64[]" = torch.ops.aten.copy_.default(primals_1875, add_1769);  primals_1875 = add_1769 = None
    copy__894: "f32[72]" = torch.ops.aten.copy_.default(primals_1876, add_1778);  primals_1876 = add_1778 = None
    copy__895: "f32[72]" = torch.ops.aten.copy_.default(primals_1877, add_1779);  primals_1877 = add_1779 = None
    copy__896: "i64[]" = torch.ops.aten.copy_.default(primals_1878, add_1776);  primals_1878 = add_1776 = None
    copy__897: "f32[18]" = torch.ops.aten.copy_.default(primals_1879, add_1788);  primals_1879 = add_1788 = None
    copy__898: "f32[18]" = torch.ops.aten.copy_.default(primals_1880, add_1789);  primals_1880 = add_1789 = None
    copy__899: "i64[]" = torch.ops.aten.copy_.default(primals_1881, add_1786);  primals_1881 = add_1786 = None
    copy__900: "f32[18]" = torch.ops.aten.copy_.default(primals_1882, add_1793);  primals_1882 = add_1793 = None
    copy__901: "f32[18]" = torch.ops.aten.copy_.default(primals_1883, add_1794);  primals_1883 = add_1794 = None
    copy__902: "i64[]" = torch.ops.aten.copy_.default(primals_1884, add_1791);  primals_1884 = add_1791 = None
    copy__903: "f32[144]" = torch.ops.aten.copy_.default(primals_1885, add_1798);  primals_1885 = add_1798 = None
    copy__904: "f32[144]" = torch.ops.aten.copy_.default(primals_1886, add_1799);  primals_1886 = add_1799 = None
    copy__905: "i64[]" = torch.ops.aten.copy_.default(primals_1887, add_1796);  primals_1887 = add_1796 = None
    copy__906: "f32[36]" = torch.ops.aten.copy_.default(primals_1888, add_1803);  primals_1888 = add_1803 = None
    copy__907: "f32[36]" = torch.ops.aten.copy_.default(primals_1889, add_1804);  primals_1889 = add_1804 = None
    copy__908: "i64[]" = torch.ops.aten.copy_.default(primals_1890, add_1801);  primals_1890 = add_1801 = None
    copy__909: "f32[144]" = torch.ops.aten.copy_.default(primals_1891, add_1808);  primals_1891 = add_1808 = None
    copy__910: "f32[144]" = torch.ops.aten.copy_.default(primals_1892, add_1809);  primals_1892 = add_1809 = None
    copy__911: "i64[]" = torch.ops.aten.copy_.default(primals_1893, add_1806);  primals_1893 = add_1806 = None
    copy__912: "f32[144]" = torch.ops.aten.copy_.default(primals_1894, add_1814);  primals_1894 = add_1814 = None
    copy__913: "f32[144]" = torch.ops.aten.copy_.default(primals_1895, add_1815);  primals_1895 = add_1815 = None
    copy__914: "i64[]" = torch.ops.aten.copy_.default(primals_1896, add_1812);  primals_1896 = add_1812 = None
    copy__915: "f32[32]" = torch.ops.aten.copy_.default(primals_1897, add_1821);  primals_1897 = add_1821 = None
    copy__916: "f32[32]" = torch.ops.aten.copy_.default(primals_1898, add_1822);  primals_1898 = add_1822 = None
    copy__917: "i64[]" = torch.ops.aten.copy_.default(primals_1899, add_1819);  primals_1899 = add_1819 = None
    copy__918: "f32[32]" = torch.ops.aten.copy_.default(primals_1900, add_1826);  primals_1900 = add_1826 = None
    copy__919: "f32[32]" = torch.ops.aten.copy_.default(primals_1901, add_1827);  primals_1901 = add_1827 = None
    copy__920: "i64[]" = torch.ops.aten.copy_.default(primals_1902, add_1824);  primals_1902 = add_1824 = None
    copy__921: "f32[128]" = torch.ops.aten.copy_.default(primals_1903, add_1831);  primals_1903 = add_1831 = None
    copy__922: "f32[128]" = torch.ops.aten.copy_.default(primals_1904, add_1832);  primals_1904 = add_1832 = None
    copy__923: "i64[]" = torch.ops.aten.copy_.default(primals_1905, add_1829);  primals_1905 = add_1829 = None
    copy__924: "f32[128]" = torch.ops.aten.copy_.default(primals_1906, add_1836);  primals_1906 = add_1836 = None
    copy__925: "f32[128]" = torch.ops.aten.copy_.default(primals_1907, add_1837);  primals_1907 = add_1837 = None
    copy__926: "i64[]" = torch.ops.aten.copy_.default(primals_1908, add_1834);  primals_1908 = add_1834 = None
    copy__927: "f32[64]" = torch.ops.aten.copy_.default(primals_1909, add_1842);  primals_1909 = add_1842 = None
    copy__928: "f32[64]" = torch.ops.aten.copy_.default(primals_1910, add_1843);  primals_1910 = add_1843 = None
    copy__929: "i64[]" = torch.ops.aten.copy_.default(primals_1911, add_1840);  primals_1911 = add_1840 = None
    copy__930: "f32[64]" = torch.ops.aten.copy_.default(primals_1912, add_1847);  primals_1912 = add_1847 = None
    copy__931: "f32[64]" = torch.ops.aten.copy_.default(primals_1913, add_1848);  primals_1913 = add_1848 = None
    copy__932: "i64[]" = torch.ops.aten.copy_.default(primals_1914, add_1845);  primals_1914 = add_1845 = None
    copy__933: "f32[256]" = torch.ops.aten.copy_.default(primals_1915, add_1852);  primals_1915 = add_1852 = None
    copy__934: "f32[256]" = torch.ops.aten.copy_.default(primals_1916, add_1853);  primals_1916 = add_1853 = None
    copy__935: "i64[]" = torch.ops.aten.copy_.default(primals_1917, add_1850);  primals_1917 = add_1850 = None
    copy__936: "f32[256]" = torch.ops.aten.copy_.default(primals_1918, add_1857);  primals_1918 = add_1857 = None
    copy__937: "f32[256]" = torch.ops.aten.copy_.default(primals_1919, add_1858);  primals_1919 = add_1858 = None
    copy__938: "i64[]" = torch.ops.aten.copy_.default(primals_1920, add_1855);  primals_1920 = add_1855 = None
    copy__939: "f32[256]" = torch.ops.aten.copy_.default(primals_1921, add_1863);  primals_1921 = add_1863 = None
    copy__940: "f32[256]" = torch.ops.aten.copy_.default(primals_1922, add_1864);  primals_1922 = add_1864 = None
    copy__941: "i64[]" = torch.ops.aten.copy_.default(primals_1923, add_1861);  primals_1923 = add_1861 = None
    copy__942: "f32[128]" = torch.ops.aten.copy_.default(primals_1924, add_1869);  primals_1924 = add_1869 = None
    copy__943: "f32[128]" = torch.ops.aten.copy_.default(primals_1925, add_1870);  primals_1925 = add_1870 = None
    copy__944: "i64[]" = torch.ops.aten.copy_.default(primals_1926, add_1867);  primals_1926 = add_1867 = None
    copy__945: "f32[128]" = torch.ops.aten.copy_.default(primals_1927, add_1874);  primals_1927 = add_1874 = None
    copy__946: "f32[128]" = torch.ops.aten.copy_.default(primals_1928, add_1875);  primals_1928 = add_1875 = None
    copy__947: "i64[]" = torch.ops.aten.copy_.default(primals_1929, add_1872);  primals_1929 = add_1872 = None
    copy__948: "f32[512]" = torch.ops.aten.copy_.default(primals_1930, add_1879);  primals_1930 = add_1879 = None
    copy__949: "f32[512]" = torch.ops.aten.copy_.default(primals_1931, add_1880);  primals_1931 = add_1880 = None
    copy__950: "i64[]" = torch.ops.aten.copy_.default(primals_1932, add_1877);  primals_1932 = add_1877 = None
    copy__951: "f32[512]" = torch.ops.aten.copy_.default(primals_1933, add_1884);  primals_1933 = add_1884 = None
    copy__952: "f32[512]" = torch.ops.aten.copy_.default(primals_1934, add_1885);  primals_1934 = add_1885 = None
    copy__953: "i64[]" = torch.ops.aten.copy_.default(primals_1935, add_1882);  primals_1935 = add_1882 = None
    copy__954: "f32[512]" = torch.ops.aten.copy_.default(primals_1936, add_1890);  primals_1936 = add_1890 = None
    copy__955: "f32[512]" = torch.ops.aten.copy_.default(primals_1937, add_1891);  primals_1937 = add_1891 = None
    copy__956: "i64[]" = torch.ops.aten.copy_.default(primals_1938, add_1888);  primals_1938 = add_1888 = None
    copy__957: "f32[256]" = torch.ops.aten.copy_.default(primals_1939, add_1896);  primals_1939 = add_1896 = None
    copy__958: "f32[256]" = torch.ops.aten.copy_.default(primals_1940, add_1897);  primals_1940 = add_1897 = None
    copy__959: "i64[]" = torch.ops.aten.copy_.default(primals_1941, add_1894);  primals_1941 = add_1894 = None
    copy__960: "f32[256]" = torch.ops.aten.copy_.default(primals_1942, add_1901);  primals_1942 = add_1901 = None
    copy__961: "f32[256]" = torch.ops.aten.copy_.default(primals_1943, add_1902);  primals_1943 = add_1902 = None
    copy__962: "i64[]" = torch.ops.aten.copy_.default(primals_1944, add_1899);  primals_1944 = add_1899 = None
    copy__963: "f32[1024]" = torch.ops.aten.copy_.default(primals_1945, add_1906);  primals_1945 = add_1906 = None
    copy__964: "f32[1024]" = torch.ops.aten.copy_.default(primals_1946, add_1907);  primals_1946 = add_1907 = None
    copy__965: "i64[]" = torch.ops.aten.copy_.default(primals_1947, add_1904);  primals_1947 = add_1904 = None
    copy__966: "f32[1024]" = torch.ops.aten.copy_.default(primals_1948, add_1911);  primals_1948 = add_1911 = None
    copy__967: "f32[1024]" = torch.ops.aten.copy_.default(primals_1949, add_1912);  primals_1949 = add_1912 = None
    copy__968: "i64[]" = torch.ops.aten.copy_.default(primals_1950, add_1909);  primals_1950 = add_1909 = None
    copy__969: "f32[1024]" = torch.ops.aten.copy_.default(primals_1951, add_1917);  primals_1951 = add_1917 = None
    copy__970: "f32[1024]" = torch.ops.aten.copy_.default(primals_1952, add_1918);  primals_1952 = add_1918 = None
    copy__971: "i64[]" = torch.ops.aten.copy_.default(primals_1953, add_1915);  primals_1953 = add_1915 = None
    copy__972: "f32[2048]" = torch.ops.aten.copy_.default(primals_1954, add_1923);  primals_1954 = add_1923 = None
    copy__973: "f32[2048]" = torch.ops.aten.copy_.default(primals_1955, add_1924);  primals_1955 = add_1924 = None
    copy__974: "i64[]" = torch.ops.aten.copy_.default(primals_1956, add_1921);  primals_1956 = add_1921 = None
    return pytree.tree_unflatten([addmm, getitem_1623, mul_5323, sum_654, getitem_1620, mul_5314, sum_652, getitem_1617, mul_5305, sum_650, getitem_1614, mul_5296, sum_648, getitem_1611, mul_5287, sum_646, getitem_1608, mul_5278, sum_644, getitem_1605, mul_5269, sum_642, getitem_1602, mul_5260, sum_640, getitem_1599, mul_5251, sum_638, getitem_1596, mul_5242, sum_636, getitem_1593, mul_5233, sum_634, getitem_1590, mul_5224, sum_632, getitem_1587, mul_5215, sum_630, getitem_1584, mul_5206, sum_628, getitem_1581, mul_5197, sum_626, getitem_1578, mul_5188, sum_624, getitem_1575, mul_5179, sum_622, getitem_1572, mul_5170, sum_620, getitem_1569, mul_5161, sum_618, getitem_1566, mul_5152, sum_616, getitem_1563, mul_5143, sum_614, getitem_1560, mul_5134, sum_612, getitem_1557, mul_5125, sum_610, getitem_1554, mul_5116, sum_608, getitem_1551, mul_5107, sum_606, getitem_1548, mul_5098, sum_604, getitem_1545, mul_5089, sum_602, getitem_1542, mul_5080, sum_600, getitem_1539, mul_5071, sum_598, getitem_1536, mul_5062, sum_596, getitem_1533, mul_5053, sum_594, getitem_1530, mul_5044, sum_592, getitem_1527, mul_5035, sum_590, getitem_1524, mul_5026, sum_588, getitem_1521, mul_5017, sum_586, getitem_1518, mul_5008, sum_584, getitem_1515, mul_4999, sum_582, getitem_1512, mul_4990, sum_580, getitem_1509, mul_4981, sum_578, getitem_1506, mul_4972, sum_576, getitem_1503, mul_4963, sum_574, getitem_1500, mul_4954, sum_572, getitem_1497, mul_4945, sum_570, getitem_1494, mul_4936, sum_568, getitem_1491, mul_4927, sum_566, getitem_1488, mul_4918, sum_564, getitem_1485, mul_4909, sum_562, getitem_1482, mul_4900, sum_560, getitem_1479, mul_4891, sum_558, getitem_1476, mul_4882, sum_556, getitem_1473, mul_4873, sum_554, getitem_1470, mul_4864, sum_552, getitem_1467, mul_4855, sum_550, getitem_1464, mul_4846, sum_548, getitem_1461, mul_4837, sum_546, getitem_1458, mul_4828, sum_544, getitem_1455, mul_4819, sum_542, getitem_1452, mul_4810, sum_540, getitem_1449, mul_4801, sum_538, getitem_1446, mul_4792, sum_536, getitem_1443, mul_4783, sum_534, getitem_1440, mul_4774, sum_532, getitem_1437, mul_4765, sum_530, getitem_1434, mul_4756, sum_528, getitem_1431, mul_4747, sum_526, getitem_1428, mul_4738, sum_524, getitem_1425, mul_4729, sum_522, getitem_1422, mul_4720, sum_520, getitem_1419, mul_4711, sum_518, getitem_1416, mul_4702, sum_516, getitem_1413, mul_4693, sum_514, getitem_1410, mul_4684, sum_512, getitem_1407, mul_4675, sum_510, getitem_1404, mul_4666, sum_508, getitem_1401, mul_4657, sum_506, getitem_1398, mul_4648, sum_504, getitem_1395, mul_4639, sum_502, getitem_1392, mul_4630, sum_500, getitem_1389, mul_4621, sum_498, getitem_1386, mul_4612, sum_496, getitem_1383, mul_4603, sum_494, getitem_1380, mul_4594, sum_492, getitem_1377, mul_4585, sum_490, getitem_1374, mul_4576, sum_488, getitem_1371, mul_4567, sum_486, getitem_1368, mul_4558, sum_484, getitem_1365, mul_4549, sum_482, getitem_1362, mul_4540, sum_480, getitem_1359, mul_4531, sum_478, getitem_1356, mul_4522, sum_476, getitem_1353, mul_4513, sum_474, getitem_1350, mul_4504, sum_472, getitem_1347, mul_4495, sum_470, getitem_1344, mul_4486, sum_468, getitem_1341, mul_4477, sum_466, getitem_1338, mul_4468, sum_464, getitem_1335, mul_4459, sum_462, getitem_1332, mul_4450, sum_460, getitem_1329, mul_4441, sum_458, getitem_1326, mul_4432, sum_456, getitem_1323, mul_4423, sum_454, getitem_1320, mul_4414, sum_452, getitem_1317, mul_4405, sum_450, getitem_1314, mul_4396, sum_448, getitem_1311, mul_4387, sum_446, getitem_1308, mul_4378, sum_444, getitem_1305, mul_4369, sum_442, getitem_1302, mul_4360, sum_440, getitem_1299, mul_4351, sum_438, getitem_1296, mul_4342, sum_436, getitem_1293, mul_4333, sum_434, getitem_1290, mul_4324, sum_432, getitem_1287, mul_4315, sum_430, getitem_1284, mul_4306, sum_428, getitem_1281, mul_4297, sum_426, getitem_1278, mul_4288, sum_424, getitem_1275, mul_4279, sum_422, getitem_1272, mul_4270, sum_420, getitem_1269, mul_4261, sum_418, getitem_1266, mul_4252, sum_416, getitem_1263, mul_4243, sum_414, getitem_1260, mul_4234, sum_412, getitem_1257, mul_4225, sum_410, getitem_1254, mul_4216, sum_408, getitem_1251, mul_4207, sum_406, getitem_1248, mul_4198, sum_404, getitem_1245, mul_4189, sum_402, getitem_1242, mul_4180, sum_400, getitem_1239, mul_4171, sum_398, getitem_1236, mul_4162, sum_396, getitem_1233, mul_4153, sum_394, getitem_1230, mul_4144, sum_392, getitem_1227, mul_4135, sum_390, getitem_1224, mul_4126, sum_388, getitem_1221, mul_4117, sum_386, getitem_1218, mul_4108, sum_384, getitem_1215, mul_4099, sum_382, getitem_1212, mul_4090, sum_380, getitem_1209, mul_4081, sum_378, getitem_1206, mul_4072, sum_376, getitem_1203, mul_4063, sum_374, getitem_1200, mul_4054, sum_372, getitem_1197, mul_4045, sum_370, getitem_1194, mul_4036, sum_368, getitem_1191, mul_4027, sum_366, getitem_1188, mul_4018, sum_364, getitem_1185, mul_4009, sum_362, getitem_1182, mul_4000, sum_360, getitem_1179, mul_3991, sum_358, getitem_1176, mul_3982, sum_356, getitem_1173, mul_3973, sum_354, getitem_1170, mul_3964, sum_352, getitem_1167, mul_3955, sum_350, getitem_1164, mul_3946, sum_348, getitem_1161, mul_3937, sum_346, getitem_1158, mul_3928, sum_344, getitem_1155, mul_3919, sum_342, getitem_1152, mul_3910, sum_340, getitem_1149, mul_3901, sum_338, getitem_1146, mul_3892, sum_336, getitem_1143, mul_3883, sum_334, getitem_1140, mul_3874, sum_332, getitem_1137, mul_3865, sum_330, getitem_1134, mul_3856, sum_328, getitem_1131, mul_3847, sum_326, getitem_1128, mul_3838, sum_324, getitem_1125, mul_3829, sum_322, getitem_1122, mul_3820, sum_320, getitem_1119, mul_3811, sum_318, getitem_1116, mul_3802, sum_316, getitem_1113, mul_3793, sum_314, getitem_1110, mul_3784, sum_312, getitem_1107, mul_3775, sum_310, getitem_1104, mul_3766, sum_308, getitem_1101, mul_3757, sum_306, getitem_1098, mul_3748, sum_304, getitem_1095, mul_3739, sum_302, getitem_1092, mul_3730, sum_300, getitem_1089, mul_3721, sum_298, getitem_1086, mul_3712, sum_296, getitem_1083, mul_3703, sum_294, getitem_1080, mul_3694, sum_292, getitem_1077, mul_3685, sum_290, getitem_1074, mul_3676, sum_288, getitem_1071, mul_3667, sum_286, getitem_1068, mul_3658, sum_284, getitem_1065, mul_3649, sum_282, getitem_1062, mul_3640, sum_280, getitem_1059, mul_3631, sum_278, getitem_1056, mul_3622, sum_276, getitem_1053, mul_3613, sum_274, getitem_1050, mul_3604, sum_272, getitem_1047, mul_3595, sum_270, getitem_1044, mul_3586, sum_268, getitem_1041, mul_3577, sum_266, getitem_1038, mul_3568, sum_264, getitem_1035, mul_3559, sum_262, getitem_1032, mul_3550, sum_260, getitem_1029, mul_3541, sum_258, getitem_1026, mul_3532, sum_256, getitem_1023, mul_3523, sum_254, getitem_1020, mul_3514, sum_252, getitem_1017, mul_3505, sum_250, getitem_1014, mul_3496, sum_248, getitem_1011, mul_3487, sum_246, getitem_1008, mul_3478, sum_244, getitem_1005, mul_3469, sum_242, getitem_1002, mul_3460, sum_240, getitem_999, mul_3451, sum_238, getitem_996, mul_3442, sum_236, getitem_993, mul_3433, sum_234, getitem_990, mul_3424, sum_232, getitem_987, mul_3415, sum_230, getitem_984, mul_3406, sum_228, getitem_981, mul_3397, sum_226, getitem_978, mul_3388, sum_224, getitem_975, mul_3379, sum_222, getitem_972, mul_3370, sum_220, getitem_969, mul_3361, sum_218, getitem_966, mul_3352, sum_216, getitem_963, mul_3343, sum_214, getitem_960, mul_3334, sum_212, getitem_957, mul_3325, sum_210, getitem_954, mul_3316, sum_208, getitem_951, mul_3307, sum_206, getitem_948, mul_3298, sum_204, getitem_945, mul_3289, sum_202, getitem_942, mul_3280, sum_200, getitem_939, mul_3271, sum_198, getitem_936, mul_3262, sum_196, getitem_933, mul_3253, sum_194, getitem_930, mul_3244, sum_192, getitem_927, mul_3235, sum_190, getitem_924, mul_3226, sum_188, getitem_921, mul_3217, sum_186, getitem_918, mul_3208, sum_184, getitem_915, mul_3199, sum_182, getitem_912, mul_3190, sum_180, getitem_909, mul_3181, sum_178, getitem_906, mul_3172, sum_176, getitem_903, mul_3163, sum_174, getitem_900, mul_3154, sum_172, getitem_897, mul_3145, sum_170, getitem_894, mul_3136, sum_168, getitem_891, mul_3127, sum_166, getitem_888, mul_3118, sum_164, getitem_885, mul_3109, sum_162, getitem_882, mul_3100, sum_160, getitem_879, mul_3091, sum_158, getitem_876, mul_3082, sum_156, getitem_873, mul_3073, sum_154, getitem_870, mul_3064, sum_152, getitem_867, mul_3055, sum_150, getitem_864, mul_3046, sum_148, getitem_861, mul_3037, sum_146, getitem_858, mul_3028, sum_144, getitem_855, mul_3019, sum_142, getitem_852, mul_3010, sum_140, getitem_849, mul_3001, sum_138, getitem_846, mul_2992, sum_136, getitem_843, mul_2983, sum_134, getitem_840, mul_2974, sum_132, getitem_837, mul_2965, sum_130, getitem_834, mul_2956, sum_128, getitem_831, mul_2947, sum_126, getitem_828, mul_2938, sum_124, getitem_825, mul_2929, sum_122, getitem_822, mul_2920, sum_120, getitem_819, mul_2911, sum_118, getitem_816, mul_2902, sum_116, getitem_813, mul_2893, sum_114, getitem_810, mul_2884, sum_112, getitem_807, mul_2875, sum_110, getitem_804, mul_2866, sum_108, getitem_801, mul_2857, sum_106, getitem_798, mul_2848, sum_104, getitem_795, mul_2839, sum_102, getitem_792, mul_2830, sum_100, getitem_789, mul_2821, sum_98, getitem_786, mul_2812, sum_96, getitem_783, mul_2803, sum_94, getitem_780, mul_2794, sum_92, getitem_777, mul_2785, sum_90, getitem_774, mul_2776, sum_88, getitem_771, mul_2767, sum_86, getitem_768, mul_2758, sum_84, getitem_765, mul_2749, sum_82, getitem_762, mul_2740, sum_80, getitem_759, mul_2731, sum_78, getitem_756, mul_2722, sum_76, getitem_753, mul_2713, sum_74, getitem_750, mul_2704, sum_72, getitem_747, mul_2695, sum_70, getitem_744, mul_2686, sum_68, getitem_741, mul_2677, sum_66, getitem_738, mul_2668, sum_64, getitem_735, mul_2659, sum_62, getitem_732, mul_2650, sum_60, getitem_729, mul_2641, sum_58, getitem_726, mul_2632, sum_56, getitem_723, mul_2623, sum_54, getitem_720, mul_2614, sum_52, getitem_717, mul_2605, sum_50, getitem_714, mul_2596, sum_48, getitem_711, mul_2587, sum_46, getitem_708, mul_2578, sum_44, getitem_705, mul_2569, sum_42, getitem_702, mul_2560, sum_40, getitem_699, mul_2551, sum_38, getitem_696, mul_2542, sum_36, getitem_693, mul_2533, sum_34, getitem_690, mul_2524, sum_32, getitem_687, mul_2515, sum_30, getitem_684, sum_29, mul_2506, sum_27, getitem_681, mul_2497, sum_25, getitem_678, mul_2488, sum_23, getitem_675, mul_2479, sum_21, getitem_672, mul_2470, sum_19, getitem_669, sum_18, mul_2461, sum_16, getitem_666, mul_2452, sum_14, getitem_663, mul_2443, sum_12, getitem_660, mul_2434, sum_10, getitem_657, mul_2425, sum_8, getitem_654, sum_7, mul_2416, sum_5, getitem_651, sum_4, mul_2407, sum_2, permute_4, view_1, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], self._out_spec)
    