
from ctypes import c_void_p, c_long
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align

from torch import device, empty, empty_strided
from torch._inductor.codecache import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
alloc_from_pool = torch.ops.inductor._alloc_from_pool
reinterpret_tensor = torch.ops.inductor._reinterpret_tensor
async_compile = AsyncCompile()


cpp_fused_0 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7,
                       float* out_ptr8,
                       float* out_ptr9,
                       float* out_ptr10,
                       float* out_ptr11,
                       float* out_ptr12,
                       float* out_ptr13,
                       float* out_ptr14,
                       float* out_ptr15,
                       float* out_ptr16,
                       float* out_ptr17,
                       float* out_ptr18,
                       float* out_ptr19,
                       float* out_ptr20,
                       float* out_ptr21,
                       float* out_ptr22,
                       float* out_ptr23,
                       float* out_ptr24,
                       float* out_ptr25,
                       float* out_ptr26,
                       float* out_ptr27,
                       float* out_ptr28,
                       float* out_ptr29,
                       float* out_ptr30,
                       float* out_ptr31,
                       float* out_ptr32,
                       float* out_ptr33,
                       float* out_ptr34,
                       float* out_ptr35,
                       float* out_ptr36)
{
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr0[static_cast<long>(x2 + (49L*x1) + (147L*x0))];
                    out_ptr0[static_cast<long>(x1 + (3L*x2) + (147L*x0))] = tmp0;
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(4L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr1[static_cast<long>(x2 + (9L*x1) + (36L*x0))];
                    out_ptr1[static_cast<long>(x1 + (4L*x2) + (36L*x0))] = tmp0;
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(4L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr2[static_cast<long>(x2 + (9L*x1) + (36L*x0))];
                    out_ptr2[static_cast<long>(x1 + (4L*x2) + (36L*x0))] = tmp0;
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(4L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr3[static_cast<long>(x2 + (9L*x1) + (36L*x0))];
                    out_ptr3[static_cast<long>(x1 + (4L*x2) + (36L*x0))] = tmp0;
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(4L); x1+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr4[static_cast<long>(x2 + (9L*x1) + (36L*x0))];
                    out_ptr4[static_cast<long>(x1 + (4L*x2) + (36L*x0))] = tmp0;
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr5 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr5 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr6 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr6 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr7 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr7[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr7 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr8 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr8[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr8 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr9 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr9[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr9 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr10 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr10[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr10 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr11 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr11 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr11[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr11 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    {
        #pragma GCC ivdep
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(1L))
        {
            #pragma GCC ivdep
            for(long x1=static_cast<long>(0L); x1<static_cast<long>(8L); x1+=static_cast<long>(8L))
            {
                #pragma GCC ivdep
                for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                {
                    float tmp1[8*8] __attribute__ ((aligned (8)));
                    for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr12 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0)));
                        tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                    }
                    at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr12 + static_cast<long>(x1 + (8L*x2) + (72L*x0)), static_cast<long>(8L));
                }
                #pragma GCC ivdep
                for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                {
                    auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr12[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (72L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                    tmp0.store(out_ptr12 + static_cast<long>(x1 + (8L*x2) + (72L*x0)));
                }
            }
        }
    }
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr13 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr13[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr13 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr14 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr14 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr14[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr14 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr15 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr15[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr15 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr16 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr16 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr16[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr16 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr17 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr17[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr17 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr18 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr18 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr18[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr18 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr19 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr19[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr19 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr20 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr20 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr20[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr20 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr21 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr21[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr21 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr22 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr22 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr22[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr22 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr23 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr23[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr23 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr24 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr24 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr24[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr24 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr25 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr25[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr25 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr26 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr26 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr26[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr26 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr27 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr27[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr27 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr28 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr28 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr28[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr28 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr29 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr29[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr29 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr30 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr30 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr30[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr30 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr31 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr31[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr31 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(16L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr32 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr32 + static_cast<long>(x1 + (16L*x2) + (144L*x0)), static_cast<long>(16L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr32[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr32 + static_cast<long>(x1 + (16L*x2) + (144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr33 + static_cast<long>(x1 + (32L*x2) + (288L*x0)), static_cast<long>(32L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr33[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr33 + static_cast<long>(x1 + (32L*x2) + (288L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr34 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr34 + static_cast<long>(x1 + (32L*x2) + (288L*x0)), static_cast<long>(32L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr34[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr34 + static_cast<long>(x1 + (32L*x2) + (288L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(8L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr35 + static_cast<long>(x1 + (32L*x2) + (288L*x0)), static_cast<long>(32L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(8L); x2<static_cast<long>(9L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr35[static_cast<long>(x2 + (9L*x1) + (9L*x1_inner) + (288L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr35 + static_cast<long>(x1 + (32L*x2) + (288L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(50176L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr36[static_cast<long>(x2 + (50176L*x1) + (150528L*x0))];
                        out_ptr36[static_cast<long>(x1 + (3L*x2) + (150528L*x0))] = tmp0;
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_1 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7,
                       float* out_ptr8,
                       float* out_ptr9,
                       float* out_ptr10)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(100352L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (128L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(100352.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(100352L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (128L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(100352.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (128L*x0)));
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(56L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(56L); x2+=static_cast<long>(1L))
                    {
                        #pragma GCC ivdep
                        for(long x3=static_cast<long>(0L); x3<static_cast<long>(128L); x3+=static_cast<long>(1L))
                        {
                            auto tmp0 = c10::convert<long>((-1L) + (2L*x1));
                            auto tmp1 = static_cast<long>(0);
                            auto tmp2 = tmp0 >= tmp1;
                            auto tmp3 = static_cast<long>(112);
                            auto tmp4 = tmp0 < tmp3;
                            auto tmp5 = tmp2 & tmp4;
                            auto tmp6 = c10::convert<long>((-1L) + (2L*x2));
                            auto tmp7 = tmp6 >= tmp1;
                            auto tmp8 = tmp6 < tmp3;
                            auto tmp9 = tmp7 & tmp8;
                            auto tmp10 = tmp5 & tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = out_ptr3[static_cast<long>((-14464L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp12;
                            }
                            ;
                            auto tmp13 = tmp10 ? tmp11() : -std::numeric_limits<decltype(tmp11())>::infinity();
                            auto tmp14 = c10::convert<long>(2L*x2);
                            auto tmp15 = tmp14 >= tmp1;
                            auto tmp16 = tmp14 < tmp3;
                            auto tmp17 = tmp15 & tmp16;
                            auto tmp18 = tmp5 & tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = out_ptr3[static_cast<long>((-14336L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : -std::numeric_limits<decltype(tmp19())>::infinity();
                            auto tmp22 = max_propagate_nan(tmp21, tmp13);
                            auto tmp23 = c10::convert<long>(1L + (2L*x2));
                            auto tmp24 = tmp23 >= tmp1;
                            auto tmp25 = tmp23 < tmp3;
                            auto tmp26 = tmp24 & tmp25;
                            auto tmp27 = tmp5 & tmp26;
                            auto tmp28 = [&]
                            {
                                auto tmp29 = out_ptr3[static_cast<long>((-14208L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp29;
                            }
                            ;
                            auto tmp30 = tmp27 ? tmp28() : -std::numeric_limits<decltype(tmp28())>::infinity();
                            auto tmp31 = max_propagate_nan(tmp30, tmp22);
                            auto tmp32 = c10::convert<long>(2L*x1);
                            auto tmp33 = tmp32 >= tmp1;
                            auto tmp34 = tmp32 < tmp3;
                            auto tmp35 = tmp33 & tmp34;
                            auto tmp36 = tmp35 & tmp9;
                            auto tmp37 = [&]
                            {
                                auto tmp38 = out_ptr3[static_cast<long>((-128L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp38;
                            }
                            ;
                            auto tmp39 = tmp36 ? tmp37() : -std::numeric_limits<decltype(tmp37())>::infinity();
                            auto tmp40 = max_propagate_nan(tmp39, tmp31);
                            auto tmp41 = tmp35 & tmp17;
                            auto tmp42 = [&]
                            {
                                auto tmp43 = out_ptr3[static_cast<long>(x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp43;
                            }
                            ;
                            auto tmp44 = tmp41 ? tmp42() : -std::numeric_limits<decltype(tmp42())>::infinity();
                            auto tmp45 = max_propagate_nan(tmp44, tmp40);
                            auto tmp46 = tmp35 & tmp26;
                            auto tmp47 = [&]
                            {
                                auto tmp48 = out_ptr3[static_cast<long>(128L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp48;
                            }
                            ;
                            auto tmp49 = tmp46 ? tmp47() : -std::numeric_limits<decltype(tmp47())>::infinity();
                            auto tmp50 = max_propagate_nan(tmp49, tmp45);
                            auto tmp51 = c10::convert<long>(1L + (2L*x1));
                            auto tmp52 = tmp51 >= tmp1;
                            auto tmp53 = tmp51 < tmp3;
                            auto tmp54 = tmp52 & tmp53;
                            auto tmp55 = tmp54 & tmp9;
                            auto tmp56 = [&]
                            {
                                auto tmp57 = out_ptr3[static_cast<long>(14208L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp57;
                            }
                            ;
                            auto tmp58 = tmp55 ? tmp56() : -std::numeric_limits<decltype(tmp56())>::infinity();
                            auto tmp59 = max_propagate_nan(tmp58, tmp50);
                            auto tmp60 = tmp54 & tmp17;
                            auto tmp61 = [&]
                            {
                                auto tmp62 = out_ptr3[static_cast<long>(14336L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp62;
                            }
                            ;
                            auto tmp63 = tmp60 ? tmp61() : -std::numeric_limits<decltype(tmp61())>::infinity();
                            auto tmp64 = max_propagate_nan(tmp63, tmp59);
                            auto tmp65 = tmp54 & tmp26;
                            auto tmp66 = [&]
                            {
                                auto tmp67 = out_ptr3[static_cast<long>(14464L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp67;
                            }
                            ;
                            auto tmp68 = tmp65 ? tmp66() : -std::numeric_limits<decltype(tmp66())>::infinity();
                            auto tmp69 = max_propagate_nan(tmp68, tmp64);
                            auto tmp70 = [&]
                            {
                                auto tmp71 = out_ptr3[static_cast<long>((-14464L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp71;
                            }
                            ;
                            auto tmp72 = tmp10 ? tmp70() : -std::numeric_limits<decltype(tmp70())>::infinity();
                            auto tmp73 = [&]
                            {
                                auto tmp74 = out_ptr3[static_cast<long>((-14336L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp74;
                            }
                            ;
                            auto tmp75 = tmp18 ? tmp73() : -std::numeric_limits<decltype(tmp73())>::infinity();
                            auto tmp76 = tmp75 > tmp72;
                            auto tmp77 = c10::convert<long>((-112L) + (2L*x2) + (224L*x1));
                            auto tmp78 = c10::convert<long>((-113L) + (2L*x2) + (224L*x1));
                            auto tmp79 = tmp76 ? tmp77 : tmp78;
                            auto tmp80 = max_propagate_nan(tmp75, tmp72);
                            auto tmp81 = [&]
                            {
                                auto tmp82 = out_ptr3[static_cast<long>((-14208L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp82;
                            }
                            ;
                            auto tmp83 = tmp27 ? tmp81() : -std::numeric_limits<decltype(tmp81())>::infinity();
                            auto tmp84 = tmp83 > tmp80;
                            auto tmp85 = c10::convert<long>((-111L) + (2L*x2) + (224L*x1));
                            auto tmp86 = tmp84 ? tmp85 : tmp79;
                            auto tmp87 = max_propagate_nan(tmp83, tmp80);
                            auto tmp88 = [&]
                            {
                                auto tmp89 = out_ptr3[static_cast<long>((-128L) + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp89;
                            }
                            ;
                            auto tmp90 = tmp36 ? tmp88() : -std::numeric_limits<decltype(tmp88())>::infinity();
                            auto tmp91 = tmp90 > tmp87;
                            auto tmp92 = c10::convert<long>((-1L) + (2L*x2) + (224L*x1));
                            auto tmp93 = tmp91 ? tmp92 : tmp86;
                            auto tmp94 = max_propagate_nan(tmp90, tmp87);
                            auto tmp95 = [&]
                            {
                                auto tmp96 = out_ptr3[static_cast<long>(x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp96;
                            }
                            ;
                            auto tmp97 = tmp41 ? tmp95() : -std::numeric_limits<decltype(tmp95())>::infinity();
                            auto tmp98 = tmp97 > tmp94;
                            auto tmp99 = c10::convert<long>((2L*x2) + (224L*x1));
                            auto tmp100 = tmp98 ? tmp99 : tmp93;
                            auto tmp101 = max_propagate_nan(tmp97, tmp94);
                            auto tmp102 = [&]
                            {
                                auto tmp103 = out_ptr3[static_cast<long>(128L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp103;
                            }
                            ;
                            auto tmp104 = tmp46 ? tmp102() : -std::numeric_limits<decltype(tmp102())>::infinity();
                            auto tmp105 = tmp104 > tmp101;
                            auto tmp106 = c10::convert<long>(1L + (2L*x2) + (224L*x1));
                            auto tmp107 = tmp105 ? tmp106 : tmp100;
                            auto tmp108 = max_propagate_nan(tmp104, tmp101);
                            auto tmp109 = [&]
                            {
                                auto tmp110 = out_ptr3[static_cast<long>(14208L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp110;
                            }
                            ;
                            auto tmp111 = tmp55 ? tmp109() : -std::numeric_limits<decltype(tmp109())>::infinity();
                            auto tmp112 = tmp111 > tmp108;
                            auto tmp113 = c10::convert<long>(111L + (2L*x2) + (224L*x1));
                            auto tmp114 = tmp112 ? tmp113 : tmp107;
                            auto tmp115 = max_propagate_nan(tmp111, tmp108);
                            auto tmp116 = [&]
                            {
                                auto tmp117 = out_ptr3[static_cast<long>(14336L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp117;
                            }
                            ;
                            auto tmp118 = tmp60 ? tmp116() : -std::numeric_limits<decltype(tmp116())>::infinity();
                            auto tmp119 = tmp118 > tmp115;
                            auto tmp120 = c10::convert<long>(112L + (2L*x2) + (224L*x1));
                            auto tmp121 = tmp119 ? tmp120 : tmp114;
                            auto tmp122 = max_propagate_nan(tmp118, tmp115);
                            auto tmp123 = [&]
                            {
                                auto tmp124 = out_ptr3[static_cast<long>(14464L + x3 + (256L*x2) + (28672L*x1) + (1605632L*x0))];
                                return tmp124;
                            }
                            ;
                            auto tmp125 = tmp65 ? tmp123() : -std::numeric_limits<decltype(tmp123())>::infinity();
                            auto tmp126 = tmp125 > tmp122;
                            auto tmp127 = c10::convert<long>(113L + (2L*x2) + (224L*x1));
                            auto tmp128 = tmp126 ? tmp127 : tmp121;
                            auto tmp129 = max_propagate_nan(tmp125, tmp122);
                            out_ptr4[static_cast<long>(x3 + (128L*x2) + (7168L*x1) + (401408L*x0))] = tmp69;
                            out_ptr5[static_cast<long>(x3 + (128L*x2) + (7168L*x1) + (401408L*x0))] = tmp128;
                        }
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0 + (128L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr6 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr7 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr7 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr8 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (128L*x2) + (401408L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr6 + static_cast<long>(x1));
                        auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr7 + static_cast<long>(x1));
                        auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                        auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                        auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                        auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        auto tmp4 = static_cast<float>(25088.0);
                        auto tmp5 = at::vec::Vectorized<float>(tmp4);
                        auto tmp6 = tmp3 / tmp5;
                        auto tmp7 = static_cast<float>(0.001);
                        auto tmp8 = at::vec::Vectorized<float>(tmp7);
                        auto tmp9 = tmp6 + tmp8;
                        auto tmp10 = tmp9.rsqrt();
                        auto tmp11 = tmp2 * tmp10;
                        auto tmp13 = tmp11 * tmp12;
                        auto tmp15 = tmp13 + tmp14;
                        auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                        auto tmp18 = tmp11 * tmp17;
                        auto tmp20 = tmp18 + tmp19;
                        auto tmp21 = at::vec::clamp_min(tmp20, decltype(tmp20)(0));
                        tmp16.store(out_ptr9 + static_cast<long>(x1 + (128L*x2) + (401408L*x0)));
                        tmp21.store(out_ptr10 + static_cast<long>(x1 + (128L*x2) + (401408L*x0)));
                    }
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_2 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_3 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_4 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(316L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(256);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (276L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        return tmp8;
                    }
                    ;
                    auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp10 = tmp0 >= tmp3;
                    auto tmp11 = static_cast<long>(316);
                    auto tmp12 = tmp0 < tmp11;
                    auto tmp13 = [&]
                    {
                        auto tmp14 = c10::convert<long>((-256L) + x1);
                        auto tmp15 = static_cast<long>(0);
                        auto tmp16 = tmp14 >= tmp15;
                        auto tmp17 = static_cast<long>(40);
                        auto tmp18 = tmp14 < tmp17;
                        auto tmp19 = [&]
                        {
                            auto tmp20 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                            return tmp20;
                        }
                        ;
                        auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                        auto tmp22 = tmp14 >= tmp17;
                        auto tmp23 = static_cast<long>(60);
                        auto tmp24 = tmp14 < tmp23;
                        auto tmp25 = [&]
                        {
                            auto tmp26 = in_ptr1[static_cast<long>((-40L) + x1 + (276L*x0))];
                            return tmp26;
                        }
                        ;
                        auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                        auto tmp28 = tmp18 ? tmp21 : tmp27;
                        return tmp28;
                    }
                    ;
                    auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                    auto tmp30 = tmp4 ? tmp9 : tmp29;
                    out_ptr0[static_cast<long>(x1 + (316L*x0))] = tmp30;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(312L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (316L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(312L); x0<static_cast<long>(316L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x0 + (316L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr2[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(312L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(312L); x0<static_cast<long>(316L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr2[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr3[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(312L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (316L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (316L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(312L); x1<static_cast<long>(316L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (316L*x0))];
                    auto tmp1 = out_ptr1[static_cast<long>(x1)];
                    auto tmp3 = out_ptr2[static_cast<long>(x1)];
                    auto tmp10 = in_ptr2[static_cast<long>(x1)];
                    auto tmp12 = in_ptr3[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr4[static_cast<long>(x1 + (316L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_5 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_6 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_7 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(336L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(256);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (276L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (276L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        return tmp10;
                    }
                    ;
                    auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp12 = tmp0 >= tmp3;
                    auto tmp13 = static_cast<long>(336);
                    auto tmp14 = tmp0 < tmp13;
                    auto tmp15 = [&]
                    {
                        auto tmp16 = c10::convert<long>((-256L) + x1);
                        auto tmp17 = static_cast<long>(0);
                        auto tmp18 = tmp16 >= tmp17;
                        auto tmp19 = static_cast<long>(60);
                        auto tmp20 = tmp16 < tmp19;
                        auto tmp21 = [&]
                        {
                            auto tmp22 = c10::convert<long>((-256L) + x1);
                            auto tmp23 = static_cast<long>(0);
                            auto tmp24 = tmp22 >= tmp23;
                            auto tmp25 = static_cast<long>(40);
                            auto tmp26 = tmp22 < tmp25;
                            auto tmp27 = [&]
                            {
                                auto tmp28 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                                return tmp28;
                            }
                            ;
                            auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                            auto tmp30 = tmp22 >= tmp25;
                            auto tmp31 = static_cast<long>(60);
                            auto tmp32 = tmp22 < tmp31;
                            auto tmp33 = [&]
                            {
                                auto tmp34 = in_ptr1[static_cast<long>((-40L) + x1 + (276L*x0))];
                                return tmp34;
                            }
                            ;
                            auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                            auto tmp36 = tmp26 ? tmp29 : tmp35;
                            return tmp36;
                        }
                        ;
                        auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                        auto tmp38 = tmp16 >= tmp19;
                        auto tmp39 = static_cast<long>(80);
                        auto tmp40 = tmp16 < tmp39;
                        auto tmp41 = [&]
                        {
                            auto tmp42 = in_ptr2[static_cast<long>((-60L) + x1 + (276L*x0))];
                            return tmp42;
                        }
                        ;
                        auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                        auto tmp44 = tmp20 ? tmp37 : tmp43;
                        return tmp44;
                    }
                    ;
                    auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                    auto tmp46 = tmp4 ? tmp11 : tmp45;
                    out_ptr0[static_cast<long>(x1 + (336L*x0))] = tmp46;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(336L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (336L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(336L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(336L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (336L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (336L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_8 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_9 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_10 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(356L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(256);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (276L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (276L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        auto tmp11 = in_ptr3[static_cast<long>(x1 + (276L*x0))];
                        auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp14 = tmp0 >= tmp3;
                    auto tmp15 = static_cast<long>(356);
                    auto tmp16 = tmp0 < tmp15;
                    auto tmp17 = [&]
                    {
                        auto tmp18 = c10::convert<long>((-256L) + x1);
                        auto tmp19 = static_cast<long>(0);
                        auto tmp20 = tmp18 >= tmp19;
                        auto tmp21 = static_cast<long>(80);
                        auto tmp22 = tmp18 < tmp21;
                        auto tmp23 = [&]
                        {
                            auto tmp24 = c10::convert<long>((-256L) + x1);
                            auto tmp25 = static_cast<long>(0);
                            auto tmp26 = tmp24 >= tmp25;
                            auto tmp27 = static_cast<long>(60);
                            auto tmp28 = tmp24 < tmp27;
                            auto tmp29 = [&]
                            {
                                auto tmp30 = c10::convert<long>((-256L) + x1);
                                auto tmp31 = static_cast<long>(0);
                                auto tmp32 = tmp30 >= tmp31;
                                auto tmp33 = static_cast<long>(40);
                                auto tmp34 = tmp30 < tmp33;
                                auto tmp35 = [&]
                                {
                                    auto tmp36 = in_ptr0[static_cast<long>(x1 + (296L*x0))];
                                    return tmp36;
                                }
                                ;
                                auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                auto tmp38 = tmp30 >= tmp33;
                                auto tmp39 = static_cast<long>(60);
                                auto tmp40 = tmp30 < tmp39;
                                auto tmp41 = [&]
                                {
                                    auto tmp42 = in_ptr1[static_cast<long>((-40L) + x1 + (276L*x0))];
                                    return tmp42;
                                }
                                ;
                                auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                auto tmp44 = tmp34 ? tmp37 : tmp43;
                                return tmp44;
                            }
                            ;
                            auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                            auto tmp46 = tmp24 >= tmp27;
                            auto tmp47 = static_cast<long>(80);
                            auto tmp48 = tmp24 < tmp47;
                            auto tmp49 = [&]
                            {
                                auto tmp50 = in_ptr2[static_cast<long>((-60L) + x1 + (276L*x0))];
                                return tmp50;
                            }
                            ;
                            auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                            auto tmp52 = tmp28 ? tmp45 : tmp51;
                            return tmp52;
                        }
                        ;
                        auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                        auto tmp54 = tmp18 >= tmp21;
                        auto tmp55 = static_cast<long>(100);
                        auto tmp56 = tmp18 < tmp55;
                        auto tmp57 = [&]
                        {
                            auto tmp58 = in_ptr3[static_cast<long>((-80L) + x1 + (276L*x0))];
                            return tmp58;
                        }
                        ;
                        auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                        auto tmp60 = tmp22 ? tmp53 : tmp59;
                        return tmp60;
                    }
                    ;
                    auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                    auto tmp62 = tmp4 ? tmp13 : tmp61;
                    out_ptr0[static_cast<long>(x1 + (356L*x0))] = tmp62;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (356L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
            #pragma omp for simd simdlen(4) 
            for(long x0=static_cast<long>(352L); x0<static_cast<long>(356L); x0+=static_cast<long>(1L))
            {
                {
                    #pragma omp declare reduction(    welford:Welford<float>:    omp_out = welford_combine(omp_out, omp_in))     initializer(omp_priv={Welford<float>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = out_ptr0[static_cast<long>(x0 + (356L*x1))];
                        tmp_acc0 = welford_combine(tmp_acc0, tmp0);
                    }
                    out_ptr1[static_cast<long>(x0)] = tmp_acc0.mean;
                    out_ptr2[static_cast<long>(x0)] = tmp_acc0.m2;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(352L); x0<static_cast<long>(356L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr2[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(0.001);
                    auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                    auto tmp5 = 1 / std::sqrt(tmp4);
                    out_ptr3[static_cast<long>(x0)] = tmp5;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(352L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (356L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (356L*x0)));
                }
                #pragma omp simd simdlen(4) 
                for(long x1=static_cast<long>(352L); x1<static_cast<long>(356L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = out_ptr0[static_cast<long>(x1 + (356L*x0))];
                    auto tmp1 = out_ptr1[static_cast<long>(x1)];
                    auto tmp3 = out_ptr2[static_cast<long>(x1)];
                    auto tmp10 = in_ptr4[static_cast<long>(x1)];
                    auto tmp12 = in_ptr5[static_cast<long>(x1)];
                    auto tmp2 = decltype(tmp0)(tmp0 - tmp1);
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = tmp3 / tmp4;
                    auto tmp6 = static_cast<float>(0.001);
                    auto tmp7 = decltype(tmp5)(tmp5 + tmp6);
                    auto tmp8 = 1 / std::sqrt(tmp7);
                    auto tmp9 = decltype(tmp2)(tmp2 * tmp8);
                    auto tmp11 = decltype(tmp9)(tmp9 * tmp10);
                    auto tmp13 = decltype(tmp11)(tmp11 + tmp12);
                    auto tmp14 = tmp13 * (tmp13>0);
                    out_ptr4[static_cast<long>(x1 + (356L*x0))] = tmp14;
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_11 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_12 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (200L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(200L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (200L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (200L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_13 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(120L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(100);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(80);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(60);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(40);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr0[static_cast<long>(256L + x2 + (296L*x1) + (928256L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(60);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(216L + x2 + (276L*x1) + (865536L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(80);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(196L + x2 + (276L*x1) + (865536L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(100);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(176L + x2 + (276L*x1) + (865536L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(120);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>(156L + x2 + (276L*x1) + (865536L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr0[static_cast<long>(x1 + (3136L*x2) + (1179136L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(3136L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(256L); x2+=static_cast<long>(8L))
                    {
                        float tmp9[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (296L*x1) + (296L*x1_inner) + (928256L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (276L*x1) + (276L*x1_inner) + (865536L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (276L*x1) + (276L*x1_inner) + (865536L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (276L*x1) + (276L*x1_inner) + (865536L*x0)));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (276L*x1) + (276L*x1_inner) + (865536L*x0)));
                            auto tmp2 = tmp0 + tmp1;
                            auto tmp4 = tmp2 + tmp3;
                            auto tmp6 = tmp4 + tmp5;
                            auto tmp8 = tmp6 + tmp7;
                            tmp8.store(tmp9 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp9, 8, out_ptr1 + static_cast<long>(x1 + (3136L*x2) + (1179136L*x0)), static_cast<long>(3136L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(376L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (3136L*x1) + (3136L*x1_inner) + (1179136L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (376L*x2) + (1179136L*x0)), static_cast<long>(376L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(376L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (376L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(376L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(376L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (376L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    auto tmp18 = tmp11 * tmp17;
                    auto tmp20 = tmp18 + tmp19;
                    auto tmp21 = at::vec::clamp_min(tmp20, decltype(tmp20)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (376L*x0)));
                    tmp21.store(out_ptr7 + static_cast<long>(x1 + (376L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_14 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(25088L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(25088L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(25088.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_15 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_16 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(704L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(512);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (576L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        return tmp8;
                    }
                    ;
                    auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp10 = tmp0 >= tmp3;
                    auto tmp11 = static_cast<long>(704);
                    auto tmp12 = tmp0 < tmp11;
                    auto tmp13 = [&]
                    {
                        auto tmp14 = c10::convert<long>((-512L) + x1);
                        auto tmp15 = static_cast<long>(0);
                        auto tmp16 = tmp14 >= tmp15;
                        auto tmp17 = static_cast<long>(128);
                        auto tmp18 = tmp14 < tmp17;
                        auto tmp19 = [&]
                        {
                            auto tmp20 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                            return tmp20;
                        }
                        ;
                        auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                        auto tmp22 = tmp14 >= tmp17;
                        auto tmp23 = static_cast<long>(192);
                        auto tmp24 = tmp14 < tmp23;
                        auto tmp25 = [&]
                        {
                            auto tmp26 = in_ptr1[static_cast<long>((-128L) + x1 + (576L*x0))];
                            return tmp26;
                        }
                        ;
                        auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                        auto tmp28 = tmp18 ? tmp21 : tmp27;
                        return tmp28;
                    }
                    ;
                    auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                    auto tmp30 = tmp4 ? tmp9 : tmp29;
                    out_ptr0[static_cast<long>(x1 + (704L*x0))] = tmp30;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (704L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(704L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (704L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (704L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_17 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_18 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_19 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(512);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (576L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (576L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        return tmp10;
                    }
                    ;
                    auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp12 = tmp0 >= tmp3;
                    auto tmp13 = static_cast<long>(768);
                    auto tmp14 = tmp0 < tmp13;
                    auto tmp15 = [&]
                    {
                        auto tmp16 = c10::convert<long>((-512L) + x1);
                        auto tmp17 = static_cast<long>(0);
                        auto tmp18 = tmp16 >= tmp17;
                        auto tmp19 = static_cast<long>(192);
                        auto tmp20 = tmp16 < tmp19;
                        auto tmp21 = [&]
                        {
                            auto tmp22 = c10::convert<long>((-512L) + x1);
                            auto tmp23 = static_cast<long>(0);
                            auto tmp24 = tmp22 >= tmp23;
                            auto tmp25 = static_cast<long>(128);
                            auto tmp26 = tmp22 < tmp25;
                            auto tmp27 = [&]
                            {
                                auto tmp28 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                                return tmp28;
                            }
                            ;
                            auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                            auto tmp30 = tmp22 >= tmp25;
                            auto tmp31 = static_cast<long>(192);
                            auto tmp32 = tmp22 < tmp31;
                            auto tmp33 = [&]
                            {
                                auto tmp34 = in_ptr1[static_cast<long>((-128L) + x1 + (576L*x0))];
                                return tmp34;
                            }
                            ;
                            auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                            auto tmp36 = tmp26 ? tmp29 : tmp35;
                            return tmp36;
                        }
                        ;
                        auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                        auto tmp38 = tmp16 >= tmp19;
                        auto tmp39 = static_cast<long>(256);
                        auto tmp40 = tmp16 < tmp39;
                        auto tmp41 = [&]
                        {
                            auto tmp42 = in_ptr2[static_cast<long>((-192L) + x1 + (576L*x0))];
                            return tmp42;
                        }
                        ;
                        auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                        auto tmp44 = tmp20 ? tmp37 : tmp43;
                        return tmp44;
                    }
                    ;
                    auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                    auto tmp46 = tmp4 ? tmp11 : tmp45;
                    out_ptr0[static_cast<long>(x1 + (768L*x0))] = tmp46;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (768L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(768L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (768L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (768L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_20 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_21 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_22 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(512);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (576L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (576L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        auto tmp11 = in_ptr3[static_cast<long>(x1 + (576L*x0))];
                        auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp14 = tmp0 >= tmp3;
                    auto tmp15 = static_cast<long>(832);
                    auto tmp16 = tmp0 < tmp15;
                    auto tmp17 = [&]
                    {
                        auto tmp18 = c10::convert<long>((-512L) + x1);
                        auto tmp19 = static_cast<long>(0);
                        auto tmp20 = tmp18 >= tmp19;
                        auto tmp21 = static_cast<long>(256);
                        auto tmp22 = tmp18 < tmp21;
                        auto tmp23 = [&]
                        {
                            auto tmp24 = c10::convert<long>((-512L) + x1);
                            auto tmp25 = static_cast<long>(0);
                            auto tmp26 = tmp24 >= tmp25;
                            auto tmp27 = static_cast<long>(192);
                            auto tmp28 = tmp24 < tmp27;
                            auto tmp29 = [&]
                            {
                                auto tmp30 = c10::convert<long>((-512L) + x1);
                                auto tmp31 = static_cast<long>(0);
                                auto tmp32 = tmp30 >= tmp31;
                                auto tmp33 = static_cast<long>(128);
                                auto tmp34 = tmp30 < tmp33;
                                auto tmp35 = [&]
                                {
                                    auto tmp36 = in_ptr0[static_cast<long>(x1 + (640L*x0))];
                                    return tmp36;
                                }
                                ;
                                auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                auto tmp38 = tmp30 >= tmp33;
                                auto tmp39 = static_cast<long>(192);
                                auto tmp40 = tmp30 < tmp39;
                                auto tmp41 = [&]
                                {
                                    auto tmp42 = in_ptr1[static_cast<long>((-128L) + x1 + (576L*x0))];
                                    return tmp42;
                                }
                                ;
                                auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                auto tmp44 = tmp34 ? tmp37 : tmp43;
                                return tmp44;
                            }
                            ;
                            auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                            auto tmp46 = tmp24 >= tmp27;
                            auto tmp47 = static_cast<long>(256);
                            auto tmp48 = tmp24 < tmp47;
                            auto tmp49 = [&]
                            {
                                auto tmp50 = in_ptr2[static_cast<long>((-192L) + x1 + (576L*x0))];
                                return tmp50;
                            }
                            ;
                            auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                            auto tmp52 = tmp28 ? tmp45 : tmp51;
                            return tmp52;
                        }
                        ;
                        auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                        auto tmp54 = tmp18 >= tmp21;
                        auto tmp55 = static_cast<long>(320);
                        auto tmp56 = tmp18 < tmp55;
                        auto tmp57 = [&]
                        {
                            auto tmp58 = in_ptr3[static_cast<long>((-256L) + x1 + (576L*x0))];
                            return tmp58;
                        }
                        ;
                        auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                        auto tmp60 = tmp22 ? tmp53 : tmp59;
                        return tmp60;
                    }
                    ;
                    auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                    auto tmp62 = tmp4 ? tmp13 : tmp61;
                    out_ptr0[static_cast<long>(x1 + (832L*x0))] = tmp62;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (832L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(832L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (832L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (832L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_23 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_24 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_25 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(512L); x2+=static_cast<long>(8L))
                    {
                        float tmp9[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (640L*x1) + (640L*x1_inner) + (501760L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp2 = tmp0 + tmp1;
                            auto tmp4 = tmp2 + tmp3;
                            auto tmp6 = tmp4 + tmp5;
                            auto tmp8 = tmp6 + tmp7;
                            tmp8.store(tmp9 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp9, 8, out_ptr0 + static_cast<long>(x1 + (784L*x2) + (702464L*x0)), static_cast<long>(784L));
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(320);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(256);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(192);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(128);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr0[static_cast<long>(512L + x2 + (640L*x1) + (501760L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(192);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(384L + x2 + (576L*x1) + (451584L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(256);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(320L + x2 + (576L*x1) + (451584L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(320);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(256L + x2 + (576L*x1) + (451584L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(384);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>(192L + x2 + (576L*x1) + (451584L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr1[static_cast<long>(x1 + (784L*x2) + (702464L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(896L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (702464L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (896L*x2) + (702464L*x0)), static_cast<long>(896L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (896L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(896L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (896L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (896L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_26 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_27 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_28 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(960L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x1);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(512);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x2 + (784L*x1) + (702464L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x1 + (576L*x2) + (451584L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            return tmp8;
                        }
                        ;
                        auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp10 = tmp0 >= tmp3;
                        auto tmp11 = static_cast<long>(960);
                        auto tmp12 = tmp0 < tmp11;
                        auto tmp13 = [&]
                        {
                            auto tmp14 = c10::convert<long>((-512L) + x1);
                            auto tmp15 = static_cast<long>(0);
                            auto tmp16 = tmp14 >= tmp15;
                            auto tmp17 = static_cast<long>(384);
                            auto tmp18 = tmp14 < tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr2[static_cast<long>((-401408L) + x2 + (784L*x1) + (702464L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = tmp14 >= tmp17;
                            auto tmp23 = static_cast<long>(448);
                            auto tmp24 = tmp14 < tmp23;
                            auto tmp25 = [&]
                            {
                                auto tmp26 = in_ptr1[static_cast<long>((-384L) + x1 + (576L*x2) + (451584L*x0))];
                                return tmp26;
                            }
                            ;
                            auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                            auto tmp28 = tmp18 ? tmp21 : tmp27;
                            return tmp28;
                        }
                        ;
                        auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                        auto tmp30 = tmp4 ? tmp9 : tmp29;
                        out_ptr0[static_cast<long>(x1 + (960L*x2) + (752640L*x0))] = tmp30;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (960L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(960L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (960L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (960L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_29 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_30 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_31 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(512);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (784L*x2) + (702464L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            return tmp10;
                        }
                        ;
                        auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp12 = tmp0 >= tmp3;
                        auto tmp13 = static_cast<long>(1024);
                        auto tmp14 = tmp0 < tmp13;
                        auto tmp15 = [&]
                        {
                            auto tmp16 = c10::convert<long>((-512L) + x2);
                            auto tmp17 = static_cast<long>(0);
                            auto tmp18 = tmp16 >= tmp17;
                            auto tmp19 = static_cast<long>(448);
                            auto tmp20 = tmp16 < tmp19;
                            auto tmp21 = [&]
                            {
                                auto tmp22 = c10::convert<long>((-512L) + x2);
                                auto tmp23 = static_cast<long>(0);
                                auto tmp24 = tmp22 >= tmp23;
                                auto tmp25 = static_cast<long>(384);
                                auto tmp26 = tmp22 < tmp25;
                                auto tmp27 = [&]
                                {
                                    auto tmp28 = in_ptr3[static_cast<long>((-401408L) + x1 + (784L*x2) + (702464L*x0))];
                                    return tmp28;
                                }
                                ;
                                auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                                auto tmp30 = tmp22 >= tmp25;
                                auto tmp31 = static_cast<long>(448);
                                auto tmp32 = tmp22 < tmp31;
                                auto tmp33 = [&]
                                {
                                    auto tmp34 = in_ptr1[static_cast<long>((-384L) + x2 + (576L*x1) + (451584L*x0))];
                                    return tmp34;
                                }
                                ;
                                auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                                auto tmp36 = tmp26 ? tmp29 : tmp35;
                                return tmp36;
                            }
                            ;
                            auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                            auto tmp38 = tmp16 >= tmp19;
                            auto tmp39 = static_cast<long>(512);
                            auto tmp40 = tmp16 < tmp39;
                            auto tmp41 = [&]
                            {
                                auto tmp42 = in_ptr2[static_cast<long>((-448L) + x2 + (576L*x1) + (451584L*x0))];
                                return tmp42;
                            }
                            ;
                            auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                            auto tmp44 = tmp20 ? tmp37 : tmp43;
                            return tmp44;
                        }
                        ;
                        auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                        auto tmp46 = tmp4 ? tmp11 : tmp45;
                        out_ptr0[static_cast<long>(x2 + (1024L*x1) + (802816L*x0))] = tmp46;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1024L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1024L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1024L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_32 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_33 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_34 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1088L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(512);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (784L*x2) + (702464L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            auto tmp11 = in_ptr3[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                            auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp14 = tmp0 >= tmp3;
                        auto tmp15 = static_cast<long>(1088);
                        auto tmp16 = tmp0 < tmp15;
                        auto tmp17 = [&]
                        {
                            auto tmp18 = c10::convert<long>((-512L) + x2);
                            auto tmp19 = static_cast<long>(0);
                            auto tmp20 = tmp18 >= tmp19;
                            auto tmp21 = static_cast<long>(512);
                            auto tmp22 = tmp18 < tmp21;
                            auto tmp23 = [&]
                            {
                                auto tmp24 = c10::convert<long>((-512L) + x2);
                                auto tmp25 = static_cast<long>(0);
                                auto tmp26 = tmp24 >= tmp25;
                                auto tmp27 = static_cast<long>(448);
                                auto tmp28 = tmp24 < tmp27;
                                auto tmp29 = [&]
                                {
                                    auto tmp30 = c10::convert<long>((-512L) + x2);
                                    auto tmp31 = static_cast<long>(0);
                                    auto tmp32 = tmp30 >= tmp31;
                                    auto tmp33 = static_cast<long>(384);
                                    auto tmp34 = tmp30 < tmp33;
                                    auto tmp35 = [&]
                                    {
                                        auto tmp36 = in_ptr4[static_cast<long>((-401408L) + x1 + (784L*x2) + (702464L*x0))];
                                        return tmp36;
                                    }
                                    ;
                                    auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                    auto tmp38 = tmp30 >= tmp33;
                                    auto tmp39 = static_cast<long>(448);
                                    auto tmp40 = tmp30 < tmp39;
                                    auto tmp41 = [&]
                                    {
                                        auto tmp42 = in_ptr1[static_cast<long>((-384L) + x2 + (576L*x1) + (451584L*x0))];
                                        return tmp42;
                                    }
                                    ;
                                    auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                    auto tmp44 = tmp34 ? tmp37 : tmp43;
                                    return tmp44;
                                }
                                ;
                                auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                auto tmp46 = tmp24 >= tmp27;
                                auto tmp47 = static_cast<long>(512);
                                auto tmp48 = tmp24 < tmp47;
                                auto tmp49 = [&]
                                {
                                    auto tmp50 = in_ptr2[static_cast<long>((-448L) + x2 + (576L*x1) + (451584L*x0))];
                                    return tmp50;
                                }
                                ;
                                auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                                auto tmp52 = tmp28 ? tmp45 : tmp51;
                                return tmp52;
                            }
                            ;
                            auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                            auto tmp54 = tmp18 >= tmp21;
                            auto tmp55 = static_cast<long>(576);
                            auto tmp56 = tmp18 < tmp55;
                            auto tmp57 = [&]
                            {
                                auto tmp58 = in_ptr3[static_cast<long>((-512L) + x2 + (576L*x1) + (451584L*x0))];
                                return tmp58;
                            }
                            ;
                            auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                            auto tmp60 = tmp22 ? tmp53 : tmp59;
                            return tmp60;
                        }
                        ;
                        auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                        auto tmp62 = tmp4 ? tmp13 : tmp61;
                        out_ptr0[static_cast<long>(x2 + (1088L*x1) + (852992L*x0))] = tmp62;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1088L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1088L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1088L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1088L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1088L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1088L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_35 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_36 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (400L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(400L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (400L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (400L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_37 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(640L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(576);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(512);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(448);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(384);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr0[static_cast<long>(x1 + (784L*x2) + (702464L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(448);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(128L + x2 + (576L*x1) + (451584L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(512);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(64L + x2 + (576L*x1) + (451584L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(576);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(x2 + (576L*x1) + (451584L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(640);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>((-64L) + x2 + (576L*x1) + (451584L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr0[static_cast<long>(x1 + (784L*x2) + (903168L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(784L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(512L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (784L*x2) + (702464L*x0)), static_cast<long>(784L), tmp0, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (576L*x1) + (576L*x1_inner) + (451584L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            auto tmp5 = tmp3 + tmp4;
                            auto tmp7 = tmp5 + tmp6;
                            auto tmp9 = tmp7 + tmp8;
                            tmp9.store(tmp10 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp10, 8, out_ptr1 + static_cast<long>(x1 + (784L*x2) + (903168L*x0)), static_cast<long>(784L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1152L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(784L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (784L*x1) + (784L*x1_inner) + (903168L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (1152L*x2) + (903168L*x0)), static_cast<long>(1152L));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1152L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (1152L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1152L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1152L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (1152L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                    auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    auto tmp18 = tmp11 * tmp17;
                    auto tmp20 = tmp18 + tmp19;
                    auto tmp21 = at::vec::clamp_min(tmp20, decltype(tmp20)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (1152L*x0)));
                    tmp21.store(out_ptr7 + static_cast<long>(x1 + (1152L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_38 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(6272L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(6272L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(6272.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_39 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_40 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1216L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(1024);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        return tmp8;
                    }
                    ;
                    auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp10 = tmp0 >= tmp3;
                    auto tmp11 = static_cast<long>(1216);
                    auto tmp12 = tmp0 < tmp11;
                    auto tmp13 = [&]
                    {
                        auto tmp14 = c10::convert<long>((-1024L) + x1);
                        auto tmp15 = static_cast<long>(0);
                        auto tmp16 = tmp14 >= tmp15;
                        auto tmp17 = static_cast<long>(128);
                        auto tmp18 = tmp14 < tmp17;
                        auto tmp19 = [&]
                        {
                            auto tmp20 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                            return tmp20;
                        }
                        ;
                        auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                        auto tmp22 = tmp14 >= tmp17;
                        auto tmp23 = static_cast<long>(192);
                        auto tmp24 = tmp14 < tmp23;
                        auto tmp25 = [&]
                        {
                            auto tmp26 = in_ptr1[static_cast<long>((-128L) + x1 + (1088L*x0))];
                            return tmp26;
                        }
                        ;
                        auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                        auto tmp28 = tmp18 ? tmp21 : tmp27;
                        return tmp28;
                    }
                    ;
                    auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                    auto tmp30 = tmp4 ? tmp9 : tmp29;
                    out_ptr0[static_cast<long>(x1 + (1216L*x0))] = tmp30;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1216L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1216L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1216L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1216L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1216L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_41 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_42 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_43 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1280L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(1024);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        return tmp10;
                    }
                    ;
                    auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp12 = tmp0 >= tmp3;
                    auto tmp13 = static_cast<long>(1280);
                    auto tmp14 = tmp0 < tmp13;
                    auto tmp15 = [&]
                    {
                        auto tmp16 = c10::convert<long>((-1024L) + x1);
                        auto tmp17 = static_cast<long>(0);
                        auto tmp18 = tmp16 >= tmp17;
                        auto tmp19 = static_cast<long>(192);
                        auto tmp20 = tmp16 < tmp19;
                        auto tmp21 = [&]
                        {
                            auto tmp22 = c10::convert<long>((-1024L) + x1);
                            auto tmp23 = static_cast<long>(0);
                            auto tmp24 = tmp22 >= tmp23;
                            auto tmp25 = static_cast<long>(128);
                            auto tmp26 = tmp22 < tmp25;
                            auto tmp27 = [&]
                            {
                                auto tmp28 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                                return tmp28;
                            }
                            ;
                            auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                            auto tmp30 = tmp22 >= tmp25;
                            auto tmp31 = static_cast<long>(192);
                            auto tmp32 = tmp22 < tmp31;
                            auto tmp33 = [&]
                            {
                                auto tmp34 = in_ptr1[static_cast<long>((-128L) + x1 + (1088L*x0))];
                                return tmp34;
                            }
                            ;
                            auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                            auto tmp36 = tmp26 ? tmp29 : tmp35;
                            return tmp36;
                        }
                        ;
                        auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                        auto tmp38 = tmp16 >= tmp19;
                        auto tmp39 = static_cast<long>(256);
                        auto tmp40 = tmp16 < tmp39;
                        auto tmp41 = [&]
                        {
                            auto tmp42 = in_ptr2[static_cast<long>((-192L) + x1 + (1088L*x0))];
                            return tmp42;
                        }
                        ;
                        auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                        auto tmp44 = tmp20 ? tmp37 : tmp43;
                        return tmp44;
                    }
                    ;
                    auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                    auto tmp46 = tmp4 ? tmp11 : tmp45;
                    out_ptr0[static_cast<long>(x1 + (1280L*x0))] = tmp46;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1280L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1280L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1280L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1280L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1280L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1280L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_44 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_45 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_46 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1344L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(1024);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        auto tmp11 = in_ptr3[static_cast<long>(x1 + (1088L*x0))];
                        auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp14 = tmp0 >= tmp3;
                    auto tmp15 = static_cast<long>(1344);
                    auto tmp16 = tmp0 < tmp15;
                    auto tmp17 = [&]
                    {
                        auto tmp18 = c10::convert<long>((-1024L) + x1);
                        auto tmp19 = static_cast<long>(0);
                        auto tmp20 = tmp18 >= tmp19;
                        auto tmp21 = static_cast<long>(256);
                        auto tmp22 = tmp18 < tmp21;
                        auto tmp23 = [&]
                        {
                            auto tmp24 = c10::convert<long>((-1024L) + x1);
                            auto tmp25 = static_cast<long>(0);
                            auto tmp26 = tmp24 >= tmp25;
                            auto tmp27 = static_cast<long>(192);
                            auto tmp28 = tmp24 < tmp27;
                            auto tmp29 = [&]
                            {
                                auto tmp30 = c10::convert<long>((-1024L) + x1);
                                auto tmp31 = static_cast<long>(0);
                                auto tmp32 = tmp30 >= tmp31;
                                auto tmp33 = static_cast<long>(128);
                                auto tmp34 = tmp30 < tmp33;
                                auto tmp35 = [&]
                                {
                                    auto tmp36 = in_ptr0[static_cast<long>(x1 + (1152L*x0))];
                                    return tmp36;
                                }
                                ;
                                auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                auto tmp38 = tmp30 >= tmp33;
                                auto tmp39 = static_cast<long>(192);
                                auto tmp40 = tmp30 < tmp39;
                                auto tmp41 = [&]
                                {
                                    auto tmp42 = in_ptr1[static_cast<long>((-128L) + x1 + (1088L*x0))];
                                    return tmp42;
                                }
                                ;
                                auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                auto tmp44 = tmp34 ? tmp37 : tmp43;
                                return tmp44;
                            }
                            ;
                            auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                            auto tmp46 = tmp24 >= tmp27;
                            auto tmp47 = static_cast<long>(256);
                            auto tmp48 = tmp24 < tmp47;
                            auto tmp49 = [&]
                            {
                                auto tmp50 = in_ptr2[static_cast<long>((-192L) + x1 + (1088L*x0))];
                                return tmp50;
                            }
                            ;
                            auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                            auto tmp52 = tmp28 ? tmp45 : tmp51;
                            return tmp52;
                        }
                        ;
                        auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                        auto tmp54 = tmp18 >= tmp21;
                        auto tmp55 = static_cast<long>(320);
                        auto tmp56 = tmp18 < tmp55;
                        auto tmp57 = [&]
                        {
                            auto tmp58 = in_ptr3[static_cast<long>((-256L) + x1 + (1088L*x0))];
                            return tmp58;
                        }
                        ;
                        auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                        auto tmp60 = tmp22 ? tmp53 : tmp59;
                        return tmp60;
                    }
                    ;
                    auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                    auto tmp62 = tmp4 ? tmp13 : tmp61;
                    out_ptr0[static_cast<long>(x1 + (1344L*x0))] = tmp62;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1344L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1344L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1344L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1344L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1344L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1344L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_47 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_48 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_49 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(8L))
                    {
                        float tmp9[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (1152L*x1) + (1152L*x1_inner) + (225792L*x0)));
                            auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp3 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp5 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp7 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp2 = tmp0 + tmp1;
                            auto tmp4 = tmp2 + tmp3;
                            auto tmp6 = tmp4 + tmp5;
                            auto tmp8 = tmp6 + tmp7;
                            tmp8.store(tmp9 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp9, 8, out_ptr0 + static_cast<long>(x1 + (196L*x2) + (275968L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (1152L*x1) + (225792L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp3 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp5 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (275968L*x0))] = tmp8;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(384L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(320);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(256);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(192);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(128);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr0[static_cast<long>(1024L + x2 + (1152L*x1) + (225792L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(192);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(896L + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(256);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(832L + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(320);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(768L + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(384);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>(704L + x2 + (1088L*x1) + (213248L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr1[static_cast<long>(x1 + (196L*x2) + (275968L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1408L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (275968L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (1408L*x2) + (275968L*x0)), static_cast<long>(1408L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr5[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (275968L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (1408L*x2) + (275968L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1408L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (1408L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1408L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1408L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (1408L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (1408L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_50 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_51 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_52 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1472L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x1);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x2 + (196L*x1) + (275968L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x2) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            return tmp8;
                        }
                        ;
                        auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp10 = tmp0 >= tmp3;
                        auto tmp11 = static_cast<long>(1472);
                        auto tmp12 = tmp0 < tmp11;
                        auto tmp13 = [&]
                        {
                            auto tmp14 = c10::convert<long>((-1024L) + x1);
                            auto tmp15 = static_cast<long>(0);
                            auto tmp16 = tmp14 >= tmp15;
                            auto tmp17 = static_cast<long>(384);
                            auto tmp18 = tmp14 < tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr2[static_cast<long>((-200704L) + x2 + (196L*x1) + (275968L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = tmp14 >= tmp17;
                            auto tmp23 = static_cast<long>(448);
                            auto tmp24 = tmp14 < tmp23;
                            auto tmp25 = [&]
                            {
                                auto tmp26 = in_ptr1[static_cast<long>((-384L) + x1 + (1088L*x2) + (213248L*x0))];
                                return tmp26;
                            }
                            ;
                            auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                            auto tmp28 = tmp18 ? tmp21 : tmp27;
                            return tmp28;
                        }
                        ;
                        auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                        auto tmp30 = tmp4 ? tmp9 : tmp29;
                        out_ptr0[static_cast<long>(x1 + (1472L*x2) + (288512L*x0))] = tmp30;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1472L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1472L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1472L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1472L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1472L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1472L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_53 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_54 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_55 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1536L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (275968L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            return tmp10;
                        }
                        ;
                        auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp12 = tmp0 >= tmp3;
                        auto tmp13 = static_cast<long>(1536);
                        auto tmp14 = tmp0 < tmp13;
                        auto tmp15 = [&]
                        {
                            auto tmp16 = c10::convert<long>((-1024L) + x2);
                            auto tmp17 = static_cast<long>(0);
                            auto tmp18 = tmp16 >= tmp17;
                            auto tmp19 = static_cast<long>(448);
                            auto tmp20 = tmp16 < tmp19;
                            auto tmp21 = [&]
                            {
                                auto tmp22 = c10::convert<long>((-1024L) + x2);
                                auto tmp23 = static_cast<long>(0);
                                auto tmp24 = tmp22 >= tmp23;
                                auto tmp25 = static_cast<long>(384);
                                auto tmp26 = tmp22 < tmp25;
                                auto tmp27 = [&]
                                {
                                    auto tmp28 = in_ptr3[static_cast<long>((-200704L) + x1 + (196L*x2) + (275968L*x0))];
                                    return tmp28;
                                }
                                ;
                                auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                                auto tmp30 = tmp22 >= tmp25;
                                auto tmp31 = static_cast<long>(448);
                                auto tmp32 = tmp22 < tmp31;
                                auto tmp33 = [&]
                                {
                                    auto tmp34 = in_ptr1[static_cast<long>((-384L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp34;
                                }
                                ;
                                auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                                auto tmp36 = tmp26 ? tmp29 : tmp35;
                                return tmp36;
                            }
                            ;
                            auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                            auto tmp38 = tmp16 >= tmp19;
                            auto tmp39 = static_cast<long>(512);
                            auto tmp40 = tmp16 < tmp39;
                            auto tmp41 = [&]
                            {
                                auto tmp42 = in_ptr2[static_cast<long>((-448L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp42;
                            }
                            ;
                            auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                            auto tmp44 = tmp20 ? tmp37 : tmp43;
                            return tmp44;
                        }
                        ;
                        auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                        auto tmp46 = tmp4 ? tmp11 : tmp45;
                        out_ptr0[static_cast<long>(x2 + (1536L*x1) + (301056L*x0))] = tmp46;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1536L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1536L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1536L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1536L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1536L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1536L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_56 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_57 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_58 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1600L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (275968L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            auto tmp11 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp14 = tmp0 >= tmp3;
                        auto tmp15 = static_cast<long>(1600);
                        auto tmp16 = tmp0 < tmp15;
                        auto tmp17 = [&]
                        {
                            auto tmp18 = c10::convert<long>((-1024L) + x2);
                            auto tmp19 = static_cast<long>(0);
                            auto tmp20 = tmp18 >= tmp19;
                            auto tmp21 = static_cast<long>(512);
                            auto tmp22 = tmp18 < tmp21;
                            auto tmp23 = [&]
                            {
                                auto tmp24 = c10::convert<long>((-1024L) + x2);
                                auto tmp25 = static_cast<long>(0);
                                auto tmp26 = tmp24 >= tmp25;
                                auto tmp27 = static_cast<long>(448);
                                auto tmp28 = tmp24 < tmp27;
                                auto tmp29 = [&]
                                {
                                    auto tmp30 = c10::convert<long>((-1024L) + x2);
                                    auto tmp31 = static_cast<long>(0);
                                    auto tmp32 = tmp30 >= tmp31;
                                    auto tmp33 = static_cast<long>(384);
                                    auto tmp34 = tmp30 < tmp33;
                                    auto tmp35 = [&]
                                    {
                                        auto tmp36 = in_ptr4[static_cast<long>((-200704L) + x1 + (196L*x2) + (275968L*x0))];
                                        return tmp36;
                                    }
                                    ;
                                    auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                    auto tmp38 = tmp30 >= tmp33;
                                    auto tmp39 = static_cast<long>(448);
                                    auto tmp40 = tmp30 < tmp39;
                                    auto tmp41 = [&]
                                    {
                                        auto tmp42 = in_ptr1[static_cast<long>((-384L) + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp42;
                                    }
                                    ;
                                    auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                    auto tmp44 = tmp34 ? tmp37 : tmp43;
                                    return tmp44;
                                }
                                ;
                                auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                auto tmp46 = tmp24 >= tmp27;
                                auto tmp47 = static_cast<long>(512);
                                auto tmp48 = tmp24 < tmp47;
                                auto tmp49 = [&]
                                {
                                    auto tmp50 = in_ptr2[static_cast<long>((-448L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp50;
                                }
                                ;
                                auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                                auto tmp52 = tmp28 ? tmp45 : tmp51;
                                return tmp52;
                            }
                            ;
                            auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                            auto tmp54 = tmp18 >= tmp21;
                            auto tmp55 = static_cast<long>(576);
                            auto tmp56 = tmp18 < tmp55;
                            auto tmp57 = [&]
                            {
                                auto tmp58 = in_ptr3[static_cast<long>((-512L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp58;
                            }
                            ;
                            auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                            auto tmp60 = tmp22 ? tmp53 : tmp59;
                            return tmp60;
                        }
                        ;
                        auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                        auto tmp62 = tmp4 ? tmp13 : tmp61;
                        out_ptr0[static_cast<long>(x2 + (1600L*x1) + (313600L*x0))] = tmp62;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_59 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_60 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_61 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (196L*x2) + (275968L*x0)), static_cast<long>(196L), tmp0, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            auto tmp5 = tmp3 + tmp4;
                            auto tmp7 = tmp5 + tmp6;
                            auto tmp9 = tmp7 + tmp8;
                            tmp9.store(tmp10 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp10, 8, out_ptr0 + static_cast<long>(x1 + (196L*x2) + (326144L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (275968L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp3 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp5 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (326144L*x0))] = tmp8;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(640L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(576);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(512);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(448);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(384);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr5[static_cast<long>(x1 + (196L*x2) + (275968L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(448);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(640L + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(512);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(576L + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(576);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(512L + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(640);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>(448L + x2 + (1088L*x1) + (213248L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr1[static_cast<long>(x1 + (196L*x2) + (326144L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1664L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (326144L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (1664L*x2) + (326144L*x0)), static_cast<long>(1664L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (326144L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (1664L*x2) + (326144L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1664L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (1664L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1664L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1664L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (1664L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (1664L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_62 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_63 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_64 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1728L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x1);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x2 + (196L*x1) + (326144L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x2) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            return tmp8;
                        }
                        ;
                        auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp10 = tmp0 >= tmp3;
                        auto tmp11 = static_cast<long>(1728);
                        auto tmp12 = tmp0 < tmp11;
                        auto tmp13 = [&]
                        {
                            auto tmp14 = c10::convert<long>((-1024L) + x1);
                            auto tmp15 = static_cast<long>(0);
                            auto tmp16 = tmp14 >= tmp15;
                            auto tmp17 = static_cast<long>(640);
                            auto tmp18 = tmp14 < tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr2[static_cast<long>((-200704L) + x2 + (196L*x1) + (326144L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = tmp14 >= tmp17;
                            auto tmp23 = static_cast<long>(704);
                            auto tmp24 = tmp14 < tmp23;
                            auto tmp25 = [&]
                            {
                                auto tmp26 = in_ptr1[static_cast<long>((-640L) + x1 + (1088L*x2) + (213248L*x0))];
                                return tmp26;
                            }
                            ;
                            auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                            auto tmp28 = tmp18 ? tmp21 : tmp27;
                            return tmp28;
                        }
                        ;
                        auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                        auto tmp30 = tmp4 ? tmp9 : tmp29;
                        out_ptr0[static_cast<long>(x1 + (1728L*x2) + (338688L*x0))] = tmp30;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1728L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1728L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1728L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1728L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1728L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1728L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_65 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_66 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_67 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1792L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (326144L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            return tmp10;
                        }
                        ;
                        auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp12 = tmp0 >= tmp3;
                        auto tmp13 = static_cast<long>(1792);
                        auto tmp14 = tmp0 < tmp13;
                        auto tmp15 = [&]
                        {
                            auto tmp16 = c10::convert<long>((-1024L) + x2);
                            auto tmp17 = static_cast<long>(0);
                            auto tmp18 = tmp16 >= tmp17;
                            auto tmp19 = static_cast<long>(704);
                            auto tmp20 = tmp16 < tmp19;
                            auto tmp21 = [&]
                            {
                                auto tmp22 = c10::convert<long>((-1024L) + x2);
                                auto tmp23 = static_cast<long>(0);
                                auto tmp24 = tmp22 >= tmp23;
                                auto tmp25 = static_cast<long>(640);
                                auto tmp26 = tmp22 < tmp25;
                                auto tmp27 = [&]
                                {
                                    auto tmp28 = in_ptr3[static_cast<long>((-200704L) + x1 + (196L*x2) + (326144L*x0))];
                                    return tmp28;
                                }
                                ;
                                auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                                auto tmp30 = tmp22 >= tmp25;
                                auto tmp31 = static_cast<long>(704);
                                auto tmp32 = tmp22 < tmp31;
                                auto tmp33 = [&]
                                {
                                    auto tmp34 = in_ptr1[static_cast<long>((-640L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp34;
                                }
                                ;
                                auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                                auto tmp36 = tmp26 ? tmp29 : tmp35;
                                return tmp36;
                            }
                            ;
                            auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                            auto tmp38 = tmp16 >= tmp19;
                            auto tmp39 = static_cast<long>(768);
                            auto tmp40 = tmp16 < tmp39;
                            auto tmp41 = [&]
                            {
                                auto tmp42 = in_ptr2[static_cast<long>((-704L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp42;
                            }
                            ;
                            auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                            auto tmp44 = tmp20 ? tmp37 : tmp43;
                            return tmp44;
                        }
                        ;
                        auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                        auto tmp46 = tmp4 ? tmp11 : tmp45;
                        out_ptr0[static_cast<long>(x2 + (1792L*x1) + (351232L*x0))] = tmp46;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1792L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1792L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1792L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1792L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1792L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1792L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_68 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_69 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_70 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1856L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (326144L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            auto tmp11 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp14 = tmp0 >= tmp3;
                        auto tmp15 = static_cast<long>(1856);
                        auto tmp16 = tmp0 < tmp15;
                        auto tmp17 = [&]
                        {
                            auto tmp18 = c10::convert<long>((-1024L) + x2);
                            auto tmp19 = static_cast<long>(0);
                            auto tmp20 = tmp18 >= tmp19;
                            auto tmp21 = static_cast<long>(768);
                            auto tmp22 = tmp18 < tmp21;
                            auto tmp23 = [&]
                            {
                                auto tmp24 = c10::convert<long>((-1024L) + x2);
                                auto tmp25 = static_cast<long>(0);
                                auto tmp26 = tmp24 >= tmp25;
                                auto tmp27 = static_cast<long>(704);
                                auto tmp28 = tmp24 < tmp27;
                                auto tmp29 = [&]
                                {
                                    auto tmp30 = c10::convert<long>((-1024L) + x2);
                                    auto tmp31 = static_cast<long>(0);
                                    auto tmp32 = tmp30 >= tmp31;
                                    auto tmp33 = static_cast<long>(640);
                                    auto tmp34 = tmp30 < tmp33;
                                    auto tmp35 = [&]
                                    {
                                        auto tmp36 = in_ptr4[static_cast<long>((-200704L) + x1 + (196L*x2) + (326144L*x0))];
                                        return tmp36;
                                    }
                                    ;
                                    auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                    auto tmp38 = tmp30 >= tmp33;
                                    auto tmp39 = static_cast<long>(704);
                                    auto tmp40 = tmp30 < tmp39;
                                    auto tmp41 = [&]
                                    {
                                        auto tmp42 = in_ptr1[static_cast<long>((-640L) + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp42;
                                    }
                                    ;
                                    auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                    auto tmp44 = tmp34 ? tmp37 : tmp43;
                                    return tmp44;
                                }
                                ;
                                auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                auto tmp46 = tmp24 >= tmp27;
                                auto tmp47 = static_cast<long>(768);
                                auto tmp48 = tmp24 < tmp47;
                                auto tmp49 = [&]
                                {
                                    auto tmp50 = in_ptr2[static_cast<long>((-704L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp50;
                                }
                                ;
                                auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                                auto tmp52 = tmp28 ? tmp45 : tmp51;
                                return tmp52;
                            }
                            ;
                            auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                            auto tmp54 = tmp18 >= tmp21;
                            auto tmp55 = static_cast<long>(832);
                            auto tmp56 = tmp18 < tmp55;
                            auto tmp57 = [&]
                            {
                                auto tmp58 = in_ptr3[static_cast<long>((-768L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp58;
                            }
                            ;
                            auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                            auto tmp60 = tmp22 ? tmp53 : tmp59;
                            return tmp60;
                        }
                        ;
                        auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                        auto tmp62 = tmp4 ? tmp13 : tmp61;
                        out_ptr0[static_cast<long>(x2 + (1856L*x1) + (363776L*x0))] = tmp62;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1856L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1856L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1856L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1856L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1856L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1856L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_71 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_72 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_73 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (196L*x2) + (326144L*x0)), static_cast<long>(196L), tmp0, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            auto tmp5 = tmp3 + tmp4;
                            auto tmp7 = tmp5 + tmp6;
                            auto tmp9 = tmp7 + tmp8;
                            tmp9.store(tmp10 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp10, 8, out_ptr0 + static_cast<long>(x1 + (196L*x2) + (376320L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (326144L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp3 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp5 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (376320L*x0))] = tmp8;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(896L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(832);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(768);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(704);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(640);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr5[static_cast<long>(x1 + (196L*x2) + (326144L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(704);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(384L + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(768);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(320L + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(832);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(256L + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(896);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>(192L + x2 + (1088L*x1) + (213248L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr1[static_cast<long>(x1 + (196L*x2) + (376320L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1920L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (376320L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (1920L*x2) + (376320L*x0)), static_cast<long>(1920L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (376320L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (1920L*x2) + (376320L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1920L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (1920L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1920L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1920L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (1920L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (1920L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_74 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_75 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_76 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1984L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x1);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x2 + (196L*x1) + (376320L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x2) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            return tmp8;
                        }
                        ;
                        auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp10 = tmp0 >= tmp3;
                        auto tmp11 = static_cast<long>(1984);
                        auto tmp12 = tmp0 < tmp11;
                        auto tmp13 = [&]
                        {
                            auto tmp14 = c10::convert<long>((-1024L) + x1);
                            auto tmp15 = static_cast<long>(0);
                            auto tmp16 = tmp14 >= tmp15;
                            auto tmp17 = static_cast<long>(896);
                            auto tmp18 = tmp14 < tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr2[static_cast<long>((-200704L) + x2 + (196L*x1) + (376320L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = tmp14 >= tmp17;
                            auto tmp23 = static_cast<long>(960);
                            auto tmp24 = tmp14 < tmp23;
                            auto tmp25 = [&]
                            {
                                auto tmp26 = in_ptr1[static_cast<long>((-896L) + x1 + (1088L*x2) + (213248L*x0))];
                                return tmp26;
                            }
                            ;
                            auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                            auto tmp28 = tmp18 ? tmp21 : tmp27;
                            return tmp28;
                        }
                        ;
                        auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                        auto tmp30 = tmp4 ? tmp9 : tmp29;
                        out_ptr0[static_cast<long>(x1 + (1984L*x2) + (388864L*x0))] = tmp30;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1984L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (1984L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1984L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1984L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (1984L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (1984L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_77 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_78 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_79 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(2048L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (376320L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            return tmp10;
                        }
                        ;
                        auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp12 = tmp0 >= tmp3;
                        auto tmp13 = static_cast<long>(2048);
                        auto tmp14 = tmp0 < tmp13;
                        auto tmp15 = [&]
                        {
                            auto tmp16 = c10::convert<long>((-1024L) + x2);
                            auto tmp17 = static_cast<long>(0);
                            auto tmp18 = tmp16 >= tmp17;
                            auto tmp19 = static_cast<long>(960);
                            auto tmp20 = tmp16 < tmp19;
                            auto tmp21 = [&]
                            {
                                auto tmp22 = c10::convert<long>((-1024L) + x2);
                                auto tmp23 = static_cast<long>(0);
                                auto tmp24 = tmp22 >= tmp23;
                                auto tmp25 = static_cast<long>(896);
                                auto tmp26 = tmp22 < tmp25;
                                auto tmp27 = [&]
                                {
                                    auto tmp28 = in_ptr3[static_cast<long>((-200704L) + x1 + (196L*x2) + (376320L*x0))];
                                    return tmp28;
                                }
                                ;
                                auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                                auto tmp30 = tmp22 >= tmp25;
                                auto tmp31 = static_cast<long>(960);
                                auto tmp32 = tmp22 < tmp31;
                                auto tmp33 = [&]
                                {
                                    auto tmp34 = in_ptr1[static_cast<long>((-896L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp34;
                                }
                                ;
                                auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                                auto tmp36 = tmp26 ? tmp29 : tmp35;
                                return tmp36;
                            }
                            ;
                            auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                            auto tmp38 = tmp16 >= tmp19;
                            auto tmp39 = static_cast<long>(1024);
                            auto tmp40 = tmp16 < tmp39;
                            auto tmp41 = [&]
                            {
                                auto tmp42 = in_ptr2[static_cast<long>((-960L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp42;
                            }
                            ;
                            auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                            auto tmp44 = tmp20 ? tmp37 : tmp43;
                            return tmp44;
                        }
                        ;
                        auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                        auto tmp46 = tmp4 ? tmp11 : tmp45;
                        out_ptr0[static_cast<long>(x2 + (2048L*x1) + (401408L*x0))] = tmp46;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2048L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2048L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2048L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2048L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2048L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2048L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_80 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_81 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_82 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(2112L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (376320L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            auto tmp11 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp14 = tmp0 >= tmp3;
                        auto tmp15 = static_cast<long>(2112);
                        auto tmp16 = tmp0 < tmp15;
                        auto tmp17 = [&]
                        {
                            auto tmp18 = c10::convert<long>((-1024L) + x2);
                            auto tmp19 = static_cast<long>(0);
                            auto tmp20 = tmp18 >= tmp19;
                            auto tmp21 = static_cast<long>(1024);
                            auto tmp22 = tmp18 < tmp21;
                            auto tmp23 = [&]
                            {
                                auto tmp24 = c10::convert<long>((-1024L) + x2);
                                auto tmp25 = static_cast<long>(0);
                                auto tmp26 = tmp24 >= tmp25;
                                auto tmp27 = static_cast<long>(960);
                                auto tmp28 = tmp24 < tmp27;
                                auto tmp29 = [&]
                                {
                                    auto tmp30 = c10::convert<long>((-1024L) + x2);
                                    auto tmp31 = static_cast<long>(0);
                                    auto tmp32 = tmp30 >= tmp31;
                                    auto tmp33 = static_cast<long>(896);
                                    auto tmp34 = tmp30 < tmp33;
                                    auto tmp35 = [&]
                                    {
                                        auto tmp36 = in_ptr4[static_cast<long>((-200704L) + x1 + (196L*x2) + (376320L*x0))];
                                        return tmp36;
                                    }
                                    ;
                                    auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                    auto tmp38 = tmp30 >= tmp33;
                                    auto tmp39 = static_cast<long>(960);
                                    auto tmp40 = tmp30 < tmp39;
                                    auto tmp41 = [&]
                                    {
                                        auto tmp42 = in_ptr1[static_cast<long>((-896L) + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp42;
                                    }
                                    ;
                                    auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                    auto tmp44 = tmp34 ? tmp37 : tmp43;
                                    return tmp44;
                                }
                                ;
                                auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                auto tmp46 = tmp24 >= tmp27;
                                auto tmp47 = static_cast<long>(1024);
                                auto tmp48 = tmp24 < tmp47;
                                auto tmp49 = [&]
                                {
                                    auto tmp50 = in_ptr2[static_cast<long>((-960L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp50;
                                }
                                ;
                                auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                                auto tmp52 = tmp28 ? tmp45 : tmp51;
                                return tmp52;
                            }
                            ;
                            auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                            auto tmp54 = tmp18 >= tmp21;
                            auto tmp55 = static_cast<long>(1088);
                            auto tmp56 = tmp18 < tmp55;
                            auto tmp57 = [&]
                            {
                                auto tmp58 = in_ptr3[static_cast<long>((-1024L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp58;
                            }
                            ;
                            auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                            auto tmp60 = tmp22 ? tmp53 : tmp59;
                            return tmp60;
                        }
                        ;
                        auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                        auto tmp62 = tmp4 ? tmp13 : tmp61;
                        out_ptr0[static_cast<long>(x2 + (2112L*x1) + (413952L*x0))] = tmp62;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2112L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2112L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2112L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2112L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2112L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2112L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_83 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_84 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_85 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr0 + static_cast<long>(x1 + (196L*x2) + (376320L*x0)), static_cast<long>(196L), tmp0, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            auto tmp5 = tmp3 + tmp4;
                            auto tmp7 = tmp5 + tmp6;
                            auto tmp9 = tmp7 + tmp8;
                            tmp9.store(tmp10 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp10, 8, out_ptr0 + static_cast<long>(x1 + (196L*x2) + (426496L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (376320L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp3 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp5 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (426496L*x0))] = tmp8;
                    }
                }
            }
        }
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1152L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1088);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(1024);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(960);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(896);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr5[static_cast<long>(x1 + (196L*x2) + (376320L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(960);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>(128L + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(1024);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>(64L + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(1088);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(1152);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>((-64L) + x2 + (1088L*x1) + (213248L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr1[static_cast<long>(x1 + (196L*x2) + (426496L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2176L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (426496L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (2176L*x2) + (426496L*x0)), static_cast<long>(2176L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (426496L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (2176L*x2) + (426496L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2176L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (2176L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2176L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2176L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (2176L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (2176L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_86 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_87 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_88 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2240L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x1);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x2 + (196L*x1) + (426496L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x1 + (1088L*x2) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            return tmp8;
                        }
                        ;
                        auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp10 = tmp0 >= tmp3;
                        auto tmp11 = static_cast<long>(2240);
                        auto tmp12 = tmp0 < tmp11;
                        auto tmp13 = [&]
                        {
                            auto tmp14 = c10::convert<long>((-1024L) + x1);
                            auto tmp15 = static_cast<long>(0);
                            auto tmp16 = tmp14 >= tmp15;
                            auto tmp17 = static_cast<long>(1152);
                            auto tmp18 = tmp14 < tmp17;
                            auto tmp19 = [&]
                            {
                                auto tmp20 = in_ptr2[static_cast<long>((-200704L) + x2 + (196L*x1) + (426496L*x0))];
                                return tmp20;
                            }
                            ;
                            auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                            auto tmp22 = tmp14 >= tmp17;
                            auto tmp23 = static_cast<long>(1216);
                            auto tmp24 = tmp14 < tmp23;
                            auto tmp25 = [&]
                            {
                                auto tmp26 = in_ptr1[static_cast<long>((-1152L) + x1 + (1088L*x2) + (213248L*x0))];
                                return tmp26;
                            }
                            ;
                            auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                            auto tmp28 = tmp18 ? tmp21 : tmp27;
                            return tmp28;
                        }
                        ;
                        auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                        auto tmp30 = tmp4 ? tmp9 : tmp29;
                        out_ptr0[static_cast<long>(x1 + (2240L*x2) + (439040L*x0))] = tmp30;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2240L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2240L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2240L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2240L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2240L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2240L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_89 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_90 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_91 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(2304L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (426496L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            return tmp10;
                        }
                        ;
                        auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp12 = tmp0 >= tmp3;
                        auto tmp13 = static_cast<long>(2304);
                        auto tmp14 = tmp0 < tmp13;
                        auto tmp15 = [&]
                        {
                            auto tmp16 = c10::convert<long>((-1024L) + x2);
                            auto tmp17 = static_cast<long>(0);
                            auto tmp18 = tmp16 >= tmp17;
                            auto tmp19 = static_cast<long>(1216);
                            auto tmp20 = tmp16 < tmp19;
                            auto tmp21 = [&]
                            {
                                auto tmp22 = c10::convert<long>((-1024L) + x2);
                                auto tmp23 = static_cast<long>(0);
                                auto tmp24 = tmp22 >= tmp23;
                                auto tmp25 = static_cast<long>(1152);
                                auto tmp26 = tmp22 < tmp25;
                                auto tmp27 = [&]
                                {
                                    auto tmp28 = in_ptr3[static_cast<long>((-200704L) + x1 + (196L*x2) + (426496L*x0))];
                                    return tmp28;
                                }
                                ;
                                auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                                auto tmp30 = tmp22 >= tmp25;
                                auto tmp31 = static_cast<long>(1216);
                                auto tmp32 = tmp22 < tmp31;
                                auto tmp33 = [&]
                                {
                                    auto tmp34 = in_ptr1[static_cast<long>((-1152L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp34;
                                }
                                ;
                                auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                                auto tmp36 = tmp26 ? tmp29 : tmp35;
                                return tmp36;
                            }
                            ;
                            auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                            auto tmp38 = tmp16 >= tmp19;
                            auto tmp39 = static_cast<long>(1280);
                            auto tmp40 = tmp16 < tmp39;
                            auto tmp41 = [&]
                            {
                                auto tmp42 = in_ptr2[static_cast<long>((-1216L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp42;
                            }
                            ;
                            auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                            auto tmp44 = tmp20 ? tmp37 : tmp43;
                            return tmp44;
                        }
                        ;
                        auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                        auto tmp46 = tmp4 ? tmp11 : tmp45;
                        out_ptr0[static_cast<long>(x2 + (2304L*x1) + (451584L*x0))] = tmp46;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2304L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2304L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2304L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2304L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2304L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2304L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_92 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_93 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_94 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(2368L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1024);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (426496L*x0))];
                            auto tmp7 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                            auto tmp9 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                            auto tmp11 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                            auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                            return tmp12;
                        }
                        ;
                        auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp14 = tmp0 >= tmp3;
                        auto tmp15 = static_cast<long>(2368);
                        auto tmp16 = tmp0 < tmp15;
                        auto tmp17 = [&]
                        {
                            auto tmp18 = c10::convert<long>((-1024L) + x2);
                            auto tmp19 = static_cast<long>(0);
                            auto tmp20 = tmp18 >= tmp19;
                            auto tmp21 = static_cast<long>(1280);
                            auto tmp22 = tmp18 < tmp21;
                            auto tmp23 = [&]
                            {
                                auto tmp24 = c10::convert<long>((-1024L) + x2);
                                auto tmp25 = static_cast<long>(0);
                                auto tmp26 = tmp24 >= tmp25;
                                auto tmp27 = static_cast<long>(1216);
                                auto tmp28 = tmp24 < tmp27;
                                auto tmp29 = [&]
                                {
                                    auto tmp30 = c10::convert<long>((-1024L) + x2);
                                    auto tmp31 = static_cast<long>(0);
                                    auto tmp32 = tmp30 >= tmp31;
                                    auto tmp33 = static_cast<long>(1152);
                                    auto tmp34 = tmp30 < tmp33;
                                    auto tmp35 = [&]
                                    {
                                        auto tmp36 = in_ptr4[static_cast<long>((-200704L) + x1 + (196L*x2) + (426496L*x0))];
                                        return tmp36;
                                    }
                                    ;
                                    auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                    auto tmp38 = tmp30 >= tmp33;
                                    auto tmp39 = static_cast<long>(1216);
                                    auto tmp40 = tmp30 < tmp39;
                                    auto tmp41 = [&]
                                    {
                                        auto tmp42 = in_ptr1[static_cast<long>((-1152L) + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp42;
                                    }
                                    ;
                                    auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                    auto tmp44 = tmp34 ? tmp37 : tmp43;
                                    return tmp44;
                                }
                                ;
                                auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                auto tmp46 = tmp24 >= tmp27;
                                auto tmp47 = static_cast<long>(1280);
                                auto tmp48 = tmp24 < tmp47;
                                auto tmp49 = [&]
                                {
                                    auto tmp50 = in_ptr2[static_cast<long>((-1216L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp50;
                                }
                                ;
                                auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                                auto tmp52 = tmp28 ? tmp45 : tmp51;
                                return tmp52;
                            }
                            ;
                            auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                            auto tmp54 = tmp18 >= tmp21;
                            auto tmp55 = static_cast<long>(1344);
                            auto tmp56 = tmp18 < tmp55;
                            auto tmp57 = [&]
                            {
                                auto tmp58 = in_ptr3[static_cast<long>((-1280L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp58;
                            }
                            ;
                            auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                            auto tmp60 = tmp22 ? tmp53 : tmp59;
                            return tmp60;
                        }
                        ;
                        auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                        auto tmp62 = tmp4 ? tmp13 : tmp61;
                        out_ptr0[static_cast<long>(x2 + (2368L*x1) + (464128L*x0))] = tmp62;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2368L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2368L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2368L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2368L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2368L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2368L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_95 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_96 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (800L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(800L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (800L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (800L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_cat_relu_97 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4,
                       float* out_ptr5,
                       float* out_ptr6,
                       float* out_ptr7)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for  collapse(2)
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1408L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = c10::convert<long>(x2);
                        auto tmp1 = static_cast<long>(0);
                        auto tmp2 = tmp0 >= tmp1;
                        auto tmp3 = static_cast<long>(1344);
                        auto tmp4 = tmp0 < tmp3;
                        auto tmp5 = [&]
                        {
                            auto tmp6 = c10::convert<long>(x2);
                            auto tmp7 = static_cast<long>(0);
                            auto tmp8 = tmp6 >= tmp7;
                            auto tmp9 = static_cast<long>(1280);
                            auto tmp10 = tmp6 < tmp9;
                            auto tmp11 = [&]
                            {
                                auto tmp12 = c10::convert<long>(x2);
                                auto tmp13 = static_cast<long>(0);
                                auto tmp14 = tmp12 >= tmp13;
                                auto tmp15 = static_cast<long>(1216);
                                auto tmp16 = tmp12 < tmp15;
                                auto tmp17 = [&]
                                {
                                    auto tmp18 = c10::convert<long>(x2);
                                    auto tmp19 = static_cast<long>(0);
                                    auto tmp20 = tmp18 >= tmp19;
                                    auto tmp21 = static_cast<long>(1152);
                                    auto tmp22 = tmp18 < tmp21;
                                    auto tmp23 = [&]
                                    {
                                        auto tmp24 = in_ptr0[static_cast<long>(x1 + (196L*x2) + (426496L*x0))];
                                        return tmp24;
                                    }
                                    ;
                                    auto tmp25 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                                    auto tmp26 = tmp18 >= tmp21;
                                    auto tmp27 = static_cast<long>(1216);
                                    auto tmp28 = tmp18 < tmp27;
                                    auto tmp29 = [&]
                                    {
                                        auto tmp30 = in_ptr1[static_cast<long>((-128L) + x2 + (1088L*x1) + (213248L*x0))];
                                        return tmp30;
                                    }
                                    ;
                                    auto tmp31 = tmp26 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                                    auto tmp32 = tmp22 ? tmp25 : tmp31;
                                    return tmp32;
                                }
                                ;
                                auto tmp33 = tmp16 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                                auto tmp34 = tmp12 >= tmp15;
                                auto tmp35 = static_cast<long>(1280);
                                auto tmp36 = tmp12 < tmp35;
                                auto tmp37 = [&]
                                {
                                    auto tmp38 = in_ptr2[static_cast<long>((-192L) + x2 + (1088L*x1) + (213248L*x0))];
                                    return tmp38;
                                }
                                ;
                                auto tmp39 = tmp34 ? tmp37() : static_cast<decltype(tmp37())>(0.0);
                                auto tmp40 = tmp16 ? tmp33 : tmp39;
                                return tmp40;
                            }
                            ;
                            auto tmp41 = tmp10 ? tmp11() : static_cast<decltype(tmp11())>(0.0);
                            auto tmp42 = tmp6 >= tmp9;
                            auto tmp43 = static_cast<long>(1344);
                            auto tmp44 = tmp6 < tmp43;
                            auto tmp45 = [&]
                            {
                                auto tmp46 = in_ptr3[static_cast<long>((-256L) + x2 + (1088L*x1) + (213248L*x0))];
                                return tmp46;
                            }
                            ;
                            auto tmp47 = tmp42 ? tmp45() : static_cast<decltype(tmp45())>(0.0);
                            auto tmp48 = tmp10 ? tmp41 : tmp47;
                            return tmp48;
                        }
                        ;
                        auto tmp49 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                        auto tmp50 = tmp0 >= tmp3;
                        auto tmp51 = static_cast<long>(1408);
                        auto tmp52 = tmp0 < tmp51;
                        auto tmp53 = [&]
                        {
                            auto tmp54 = in_ptr4[static_cast<long>((-320L) + x2 + (1088L*x1) + (213248L*x0))];
                            return tmp54;
                        }
                        ;
                        auto tmp55 = tmp50 ? tmp53() : static_cast<decltype(tmp53())>(0.0);
                        auto tmp56 = tmp4 ? tmp49 : tmp55;
                        out_ptr0[static_cast<long>(x1 + (196L*x2) + (476672L*x0))] = tmp56;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(192L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(8L))
                    {
                        float tmp0[8*8] __attribute__ ((aligned (8)));
                        at::vec::transpose_mxn<float,8,8>(in_ptr5 + static_cast<long>(x1 + (196L*x2) + (426496L*x0)), static_cast<long>(196L), tmp0, 8);
                        float tmp10[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp1 = at::vec::Vectorized<float>::loadu(tmp0 + static_cast<long>(8L*x1_inner));
                            auto tmp2 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp4 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp6 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp8 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x2 + (1088L*x1) + (1088L*x1_inner) + (213248L*x0)));
                            auto tmp3 = tmp1 + tmp2;
                            auto tmp5 = tmp3 + tmp4;
                            auto tmp7 = tmp5 + tmp6;
                            auto tmp9 = tmp7 + tmp8;
                            tmp9.store(tmp10 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp10, 8, out_ptr1 + static_cast<long>(x1 + (196L*x2) + (476672L*x0)), static_cast<long>(196L));
                    }
                }
                #pragma GCC ivdep
                for(long x1=static_cast<long>(192L); x1<static_cast<long>(196L); x1+=static_cast<long>(1L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = in_ptr5[static_cast<long>(x1 + (196L*x2) + (426496L*x0))];
                        auto tmp1 = in_ptr1[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp3 = in_ptr2[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp5 = in_ptr3[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp7 = in_ptr4[static_cast<long>(x2 + (1088L*x1) + (213248L*x0))];
                        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                        auto tmp4 = decltype(tmp2)(tmp2 + tmp3);
                        auto tmp6 = decltype(tmp4)(tmp4 + tmp5);
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        out_ptr1[static_cast<long>(x1 + (196L*x2) + (476672L*x0))] = tmp8;
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2432L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(192L); x2+=static_cast<long>(8L))
                    {
                        float tmp1[8*8] __attribute__ ((aligned (8)));
                        for (long x1_inner = 0; x1_inner < 8; x1_inner++)
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr6 + static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (476672L*x0)));
                            tmp0.store(tmp1 + static_cast<long>(8L*x1_inner));
                        }
                        at::vec::transpose_mxn<float,8,8>(tmp1, 8, out_ptr2 + static_cast<long>(x1 + (2432L*x2) + (476672L*x0)), static_cast<long>(2432L));
                    }
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(192L); x2<static_cast<long>(196L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = ([&]() { __at_align__ float tmpbuf[8]; for (long x1_inner = 0; x1_inner < 8; x1_inner++) tmpbuf[x1_inner] = in_ptr6[static_cast<long>(x2 + (196L*x1) + (196L*x1_inner) + (476672L*x0))]; return at::vec::Vectorized<float>::loadu(tmpbuf); })();
                        tmp0.store(out_ptr2 + static_cast<long>(x1 + (2432L*x2) + (476672L*x0)));
                    }
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0 + (2432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr3 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr4 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1 + (2432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr7 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr8 + static_cast<long>(x1));
                    auto tmp17 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x1));
                    auto tmp19 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    auto tmp18 = tmp11 * tmp17;
                    auto tmp20 = tmp18 + tmp19;
                    auto tmp21 = at::vec::clamp_min(tmp20, decltype(tmp20)(0));
                    tmp16.store(out_ptr6 + static_cast<long>(x1 + (2432L*x0)));
                    tmp21.store(out_ptr7 + static_cast<long>(x1 + (2432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_98 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1568L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1568L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(1568.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_99 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_100 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2432L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(2048);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        return tmp8;
                    }
                    ;
                    auto tmp9 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp10 = tmp0 >= tmp3;
                    auto tmp11 = static_cast<long>(2432);
                    auto tmp12 = tmp0 < tmp11;
                    auto tmp13 = [&]
                    {
                        auto tmp14 = c10::convert<long>((-2048L) + x1);
                        auto tmp15 = static_cast<long>(0);
                        auto tmp16 = tmp14 >= tmp15;
                        auto tmp17 = static_cast<long>(256);
                        auto tmp18 = tmp14 < tmp17;
                        auto tmp19 = [&]
                        {
                            auto tmp20 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                            return tmp20;
                        }
                        ;
                        auto tmp21 = tmp18 ? tmp19() : static_cast<decltype(tmp19())>(0.0);
                        auto tmp22 = tmp14 >= tmp17;
                        auto tmp23 = static_cast<long>(384);
                        auto tmp24 = tmp14 < tmp23;
                        auto tmp25 = [&]
                        {
                            auto tmp26 = in_ptr1[static_cast<long>((-256L) + x1 + (2176L*x0))];
                            return tmp26;
                        }
                        ;
                        auto tmp27 = tmp22 ? tmp25() : static_cast<decltype(tmp25())>(0.0);
                        auto tmp28 = tmp18 ? tmp21 : tmp27;
                        return tmp28;
                    }
                    ;
                    auto tmp29 = tmp10 ? tmp13() : static_cast<decltype(tmp13())>(0.0);
                    auto tmp30 = tmp4 ? tmp9 : tmp29;
                    out_ptr0[static_cast<long>(x1 + (2432L*x0))] = tmp30;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2432L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2432L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2432L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2432L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_101 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_102 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_relu_103 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2560L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(2048);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        return tmp10;
                    }
                    ;
                    auto tmp11 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp12 = tmp0 >= tmp3;
                    auto tmp13 = static_cast<long>(2560);
                    auto tmp14 = tmp0 < tmp13;
                    auto tmp15 = [&]
                    {
                        auto tmp16 = c10::convert<long>((-2048L) + x1);
                        auto tmp17 = static_cast<long>(0);
                        auto tmp18 = tmp16 >= tmp17;
                        auto tmp19 = static_cast<long>(384);
                        auto tmp20 = tmp16 < tmp19;
                        auto tmp21 = [&]
                        {
                            auto tmp22 = c10::convert<long>((-2048L) + x1);
                            auto tmp23 = static_cast<long>(0);
                            auto tmp24 = tmp22 >= tmp23;
                            auto tmp25 = static_cast<long>(256);
                            auto tmp26 = tmp22 < tmp25;
                            auto tmp27 = [&]
                            {
                                auto tmp28 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                                return tmp28;
                            }
                            ;
                            auto tmp29 = tmp26 ? tmp27() : static_cast<decltype(tmp27())>(0.0);
                            auto tmp30 = tmp22 >= tmp25;
                            auto tmp31 = static_cast<long>(384);
                            auto tmp32 = tmp22 < tmp31;
                            auto tmp33 = [&]
                            {
                                auto tmp34 = in_ptr1[static_cast<long>((-256L) + x1 + (2176L*x0))];
                                return tmp34;
                            }
                            ;
                            auto tmp35 = tmp30 ? tmp33() : static_cast<decltype(tmp33())>(0.0);
                            auto tmp36 = tmp26 ? tmp29 : tmp35;
                            return tmp36;
                        }
                        ;
                        auto tmp37 = tmp20 ? tmp21() : static_cast<decltype(tmp21())>(0.0);
                        auto tmp38 = tmp16 >= tmp19;
                        auto tmp39 = static_cast<long>(512);
                        auto tmp40 = tmp16 < tmp39;
                        auto tmp41 = [&]
                        {
                            auto tmp42 = in_ptr2[static_cast<long>((-384L) + x1 + (2176L*x0))];
                            return tmp42;
                        }
                        ;
                        auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                        auto tmp44 = tmp20 ? tmp37 : tmp43;
                        return tmp44;
                    }
                    ;
                    auto tmp45 = tmp12 ? tmp15() : static_cast<decltype(tmp15())>(0.0);
                    auto tmp46 = tmp4 ? tmp11 : tmp45;
                    out_ptr0[static_cast<long>(x1 + (2560L*x0))] = tmp46;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2560L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2560L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2560L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2560L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2560L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr3 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2560L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_104 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_relu_105 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x0 + (1600L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr0 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr1 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(1600L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1600L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr3 + static_cast<long>(x1 + (1600L*x0)));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_cat_mean_relu_106 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       float* out_ptr0,
                       float* out_ptr1,
                       float* out_ptr2,
                       float* out_ptr3,
                       float* out_ptr4)
{
    auto out_ptr5 = in_out_ptr0;
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                #pragma GCC ivdep
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2688L); x1+=static_cast<long>(1L))
                {
                    auto tmp0 = c10::convert<long>(x1);
                    auto tmp1 = static_cast<long>(0);
                    auto tmp2 = tmp0 >= tmp1;
                    auto tmp3 = static_cast<long>(2048);
                    auto tmp4 = tmp0 < tmp3;
                    auto tmp5 = [&]
                    {
                        auto tmp6 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                        auto tmp7 = in_ptr1[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp8 = decltype(tmp6)(tmp6 + tmp7);
                        auto tmp9 = in_ptr2[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp10 = decltype(tmp8)(tmp8 + tmp9);
                        auto tmp11 = in_ptr3[static_cast<long>(x1 + (2176L*x0))];
                        auto tmp12 = decltype(tmp10)(tmp10 + tmp11);
                        return tmp12;
                    }
                    ;
                    auto tmp13 = tmp4 ? tmp5() : static_cast<decltype(tmp5())>(0.0);
                    auto tmp14 = tmp0 >= tmp3;
                    auto tmp15 = static_cast<long>(2688);
                    auto tmp16 = tmp0 < tmp15;
                    auto tmp17 = [&]
                    {
                        auto tmp18 = c10::convert<long>((-2048L) + x1);
                        auto tmp19 = static_cast<long>(0);
                        auto tmp20 = tmp18 >= tmp19;
                        auto tmp21 = static_cast<long>(512);
                        auto tmp22 = tmp18 < tmp21;
                        auto tmp23 = [&]
                        {
                            auto tmp24 = c10::convert<long>((-2048L) + x1);
                            auto tmp25 = static_cast<long>(0);
                            auto tmp26 = tmp24 >= tmp25;
                            auto tmp27 = static_cast<long>(384);
                            auto tmp28 = tmp24 < tmp27;
                            auto tmp29 = [&]
                            {
                                auto tmp30 = c10::convert<long>((-2048L) + x1);
                                auto tmp31 = static_cast<long>(0);
                                auto tmp32 = tmp30 >= tmp31;
                                auto tmp33 = static_cast<long>(256);
                                auto tmp34 = tmp30 < tmp33;
                                auto tmp35 = [&]
                                {
                                    auto tmp36 = in_ptr0[static_cast<long>(x1 + (2304L*x0))];
                                    return tmp36;
                                }
                                ;
                                auto tmp37 = tmp34 ? tmp35() : static_cast<decltype(tmp35())>(0.0);
                                auto tmp38 = tmp30 >= tmp33;
                                auto tmp39 = static_cast<long>(384);
                                auto tmp40 = tmp30 < tmp39;
                                auto tmp41 = [&]
                                {
                                    auto tmp42 = in_ptr1[static_cast<long>((-256L) + x1 + (2176L*x0))];
                                    return tmp42;
                                }
                                ;
                                auto tmp43 = tmp38 ? tmp41() : static_cast<decltype(tmp41())>(0.0);
                                auto tmp44 = tmp34 ? tmp37 : tmp43;
                                return tmp44;
                            }
                            ;
                            auto tmp45 = tmp28 ? tmp29() : static_cast<decltype(tmp29())>(0.0);
                            auto tmp46 = tmp24 >= tmp27;
                            auto tmp47 = static_cast<long>(512);
                            auto tmp48 = tmp24 < tmp47;
                            auto tmp49 = [&]
                            {
                                auto tmp50 = in_ptr2[static_cast<long>((-384L) + x1 + (2176L*x0))];
                                return tmp50;
                            }
                            ;
                            auto tmp51 = tmp46 ? tmp49() : static_cast<decltype(tmp49())>(0.0);
                            auto tmp52 = tmp28 ? tmp45 : tmp51;
                            return tmp52;
                        }
                        ;
                        auto tmp53 = tmp22 ? tmp23() : static_cast<decltype(tmp23())>(0.0);
                        auto tmp54 = tmp18 >= tmp21;
                        auto tmp55 = static_cast<long>(640);
                        auto tmp56 = tmp18 < tmp55;
                        auto tmp57 = [&]
                        {
                            auto tmp58 = in_ptr3[static_cast<long>((-512L) + x1 + (2176L*x0))];
                            return tmp58;
                        }
                        ;
                        auto tmp59 = tmp54 ? tmp57() : static_cast<decltype(tmp57())>(0.0);
                        auto tmp60 = tmp22 ? tmp53 : tmp59;
                        return tmp60;
                    }
                    ;
                    auto tmp61 = tmp14 ? tmp17() : static_cast<decltype(tmp17())>(0.0);
                    auto tmp62 = tmp4 ? tmp13 : tmp61;
                    out_ptr0[static_cast<long>(x1 + (2688L*x0))] = tmp62;
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2688L); x0+=static_cast<long>(8L))
            {
                {
                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})
                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})
                    Welford<float> tmp_acc0 = Welford<float>();
                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();
                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(392L); x1+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x0 + (2688L*x1)));
                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);
                    }
                    tmp_acc0_vec.mean.store(out_ptr1 + static_cast<long>(x0));
                    tmp_acc0_vec.m2.store(out_ptr2 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(2688L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(392.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(0.001);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 + tmp5;
                    auto tmp7 = tmp6.rsqrt();
                    tmp7.store(out_ptr3 + static_cast<long>(x0));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(392L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2688L); x1+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr0 + static_cast<long>(x1 + (2688L*x0)));
                    auto tmp1 = at::vec::Vectorized<float>::loadu(out_ptr1 + static_cast<long>(x1));
                    auto tmp3 = at::vec::Vectorized<float>::loadu(out_ptr2 + static_cast<long>(x1));
                    auto tmp12 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x1));
                    auto tmp14 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x1));
                    auto tmp2 = tmp0 - tmp1;
                    auto tmp4 = static_cast<float>(392.0);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 / tmp5;
                    auto tmp7 = static_cast<float>(0.001);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 + tmp8;
                    auto tmp10 = tmp9.rsqrt();
                    auto tmp11 = tmp2 * tmp10;
                    auto tmp13 = tmp11 * tmp12;
                    auto tmp15 = tmp13 + tmp14;
                    auto tmp16 = at::vec::clamp_min(tmp15, decltype(tmp15)(0));
                    tmp16.store(out_ptr4 + static_cast<long>(x1 + (2688L*x0)));
                }
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(2688L); x1+=static_cast<long>(8L))
                {
                    {
                        #pragma omp declare reduction(+:at::vec::Vectorized<float>:omp_out = omp_out + omp_in) initializer(omp_priv={at::vec::Vectorized<float>(0)})
                        float tmp_acc0 = 0;
                        at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
                        for(long x2=static_cast<long>(0L); x2<static_cast<long>(49L); x2+=static_cast<long>(1L))
                        {
                            auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x1 + (2688L*x2) + (131712L*x0)));
                            tmp_acc0_vec = tmp_acc0_vec + tmp0;
                        }
                        tmp_acc0_vec.store(out_ptr5 + static_cast<long>(x1 + (2688L*x0)));
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(21504L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(out_ptr5 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(49.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    tmp3.store(in_out_ptr0 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_native_batch_norm_backward_threshold_backward_107 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       float* in_out_ptr46,
                       float* in_out_ptr47,
                       float* in_out_ptr48,
                       float* in_out_ptr49,
                       float* in_out_ptr50,
                       float* in_out_ptr51,
                       float* in_out_ptr52,
                       float* in_out_ptr53,
                       float* in_out_ptr54,
                       float* in_out_ptr55,
                       float* in_out_ptr56,
                       const float* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const long* in_ptr3,
                       const float* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const long* in_ptr7,
                       const float* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const float* in_ptr12,
                       const long* in_ptr13,
                       const long* in_ptr14,
                       const float* in_ptr15,
                       const float* in_ptr16,
                       const float* in_ptr17,
                       const long* in_ptr18,
                       const float* in_ptr19,
                       const float* in_ptr20,
                       const float* in_ptr21,
                       const long* in_ptr22,
                       const float* in_ptr23,
                       const float* in_ptr24,
                       const float* in_ptr25,
                       const long* in_ptr26,
                       const float* in_ptr27,
                       const float* in_ptr28,
                       const float* in_ptr29,
                       const long* in_ptr30,
                       const float* in_ptr31,
                       const float* in_ptr32,
                       const float* in_ptr33,
                       const long* in_ptr34,
                       const float* in_ptr35,
                       const float* in_ptr36,
                       const float* in_ptr37,
                       const long* in_ptr38,
                       const float* in_ptr39,
                       const float* in_ptr40,
                       const float* in_ptr41,
                       const long* in_ptr42,
                       const float* in_ptr43,
                       const float* in_ptr44,
                       const float* in_ptr45,
                       const long* in_ptr46,
                       const float* in_ptr47,
                       const float* in_ptr48,
                       const float* in_ptr49,
                       const long* in_ptr50,
                       const float* in_ptr51,
                       const float* in_ptr52,
                       const float* in_ptr53,
                       const long* in_ptr54,
                       const float* in_ptr55,
                       const float* in_ptr56,
                       const float* in_ptr57,
                       const long* in_ptr58,
                       const float* in_ptr59,
                       const float* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const float* in_ptr64,
                       const long* in_ptr65,
                       const long* in_ptr66,
                       const float* in_ptr67,
                       const float* in_ptr68,
                       const float* in_ptr69,
                       const long* in_ptr70,
                       const float* in_ptr71,
                       const float* in_ptr72,
                       const float* in_ptr73,
                       const long* in_ptr74,
                       const float* in_ptr75,
                       const float* in_ptr76,
                       const float* in_ptr77,
                       const long* in_ptr78,
                       const float* in_ptr79,
                       const float* in_ptr80,
                       const float* in_ptr81,
                       const long* in_ptr82,
                       const float* in_ptr83,
                       const float* in_ptr84,
                       const float* in_ptr85,
                       const long* in_ptr86,
                       const float* in_ptr87,
                       const float* in_ptr88,
                       const float* in_ptr89,
                       const long* in_ptr90,
                       const float* in_ptr91,
                       const float* in_ptr92,
                       const float* in_ptr93,
                       const long* in_ptr94,
                       const float* in_ptr95,
                       const float* in_ptr96,
                       const float* in_ptr97,
                       const long* in_ptr98,
                       const float* in_ptr99,
                       const float* in_ptr100,
                       const float* in_ptr101,
                       const long* in_ptr102,
                       const float* in_ptr103,
                       const float* in_ptr104,
                       const float* in_ptr105,
                       const long* in_ptr106,
                       const float* in_ptr107,
                       const float* in_ptr108,
                       const float* in_ptr109,
                       const long* in_ptr110,
                       const float* in_ptr111,
                       const float* in_ptr112,
                       const float* in_ptr113,
                       const long* in_ptr114,
                       const float* in_ptr115,
                       const float* in_ptr116,
                       const float* in_ptr117,
                       const long* in_ptr118,
                       const float* in_ptr119,
                       const float* in_ptr120,
                       const float* in_ptr121,
                       const long* in_ptr122,
                       const float* in_ptr123,
                       const float* in_ptr124,
                       const float* in_ptr125,
                       const long* in_ptr126,
                       const float* in_ptr127,
                       const float* in_ptr128,
                       const float* in_ptr129,
                       const long* in_ptr130,
                       const float* in_ptr131,
                       const float* in_ptr132,
                       const float* in_ptr133,
                       const long* in_ptr134,
                       const float* in_ptr135,
                       const float* in_ptr136,
                       const float* in_ptr137,
                       const long* in_ptr138,
                       const float* in_ptr139,
                       const float* in_ptr140,
                       const float* in_ptr141,
                       const long* in_ptr142,
                       const float* in_ptr143,
                       const float* in_ptr144,
                       const float* in_ptr145,
                       const long* in_ptr146,
                       const float* in_ptr147,
                       const float* in_ptr148,
                       const float* in_ptr149,
                       const long* in_ptr150,
                       const float* in_ptr151,
                       const float* in_ptr152,
                       const float* in_ptr153,
                       const long* in_ptr154,
                       const float* in_ptr155,
                       const float* in_ptr156,
                       const float* in_ptr157,
                       const long* in_ptr158,
                       const float* in_ptr159,
                       const float* in_ptr160,
                       const float* in_ptr161,
                       const float* in_ptr162,
                       const float* in_ptr163,
                       const float* in_ptr164,
                       const long* in_ptr165,
                       const long* in_ptr166,
                       const float* in_ptr167,
                       const float* in_ptr168,
                       const float* in_ptr169,
                       const long* in_ptr170,
                       const float* in_ptr171,
                       const float* in_ptr172,
                       const float* in_ptr173,
                       const long* in_ptr174,
                       const float* in_ptr175,
                       const float* in_ptr176,
                       const float* in_ptr177,
                       const long* in_ptr178,
                       const float* in_ptr179,
                       const float* in_ptr180,
                       const float* in_ptr181,
                       const long* in_ptr182,
                       const float* in_ptr183,
                       const float* in_ptr184,
                       const float* in_ptr185,
                       const long* in_ptr186,
                       const float* in_ptr187,
                       const float* in_ptr188,
                       const float* in_ptr189,
                       const long* in_ptr190,
                       const float* in_ptr191,
                       const float* in_ptr192,
                       const float* in_ptr193,
                       const long* in_ptr194,
                       const float* in_ptr195,
                       const float* in_ptr196,
                       const float* in_ptr197,
                       const long* in_ptr198,
                       const float* in_ptr199,
                       const float* in_ptr200,
                       const float* in_ptr201,
                       const long* in_ptr202,
                       const float* in_ptr203,
                       const float* in_ptr204,
                       const float* in_ptr205,
                       const long* in_ptr206,
                       const float* in_ptr207,
                       const float* in_ptr208,
                       const float* in_ptr209,
                       const long* in_ptr210,
                       const float* in_ptr211,
                       const float* in_ptr212,
                       const float* in_ptr213,
                       const long* in_ptr214,
                       const float* in_ptr215,
                       const float* in_ptr216,
                       const float* in_ptr217,
                       const long* in_ptr218,
                       const float* in_ptr219,
                       const float* in_ptr220,
                       const float* in_ptr221,
                       const long* in_ptr222,
                       const float* in_ptr223,
                       const float* in_ptr224,
                       const float* in_ptr225,
                       const long* in_ptr226,
                       const float* in_ptr227,
                       const float* in_ptr228,
                       const float* in_ptr229,
                       const long* in_ptr230,
                       const float* in_ptr231,
                       const float* in_ptr232,
                       const float* in_ptr233,
                       const long* in_ptr234,
                       const float* in_ptr235,
                       const float* in_ptr236,
                       const float* in_ptr237,
                       const long* in_ptr238,
                       const float* in_ptr239,
                       const float* in_ptr240,
                       const float* in_ptr241,
                       const long* in_ptr242,
                       const float* in_ptr243,
                       const float* in_ptr244,
                       const float* in_ptr245,
                       const long* in_ptr246,
                       const float* in_ptr247,
                       const float* in_ptr248,
                       const float* in_ptr249,
                       const long* in_ptr250,
                       const float* in_ptr251,
                       const float* in_ptr252,
                       const float* in_ptr253,
                       bool* out_ptr0,
                       float* out_ptr1,
                       long* out_ptr3,
                       float* out_ptr5,
                       float* out_ptr6,
                       long* out_ptr8,
                       float* out_ptr10,
                       float* out_ptr12,
                       float* out_ptr14,
                       float* out_ptr16,
                       long* out_ptr18,
                       long* out_ptr20,
                       float* out_ptr22,
                       float* out_ptr23,
                       long* out_ptr25,
                       float* out_ptr27,
                       float* out_ptr28,
                       long* out_ptr30,
                       float* out_ptr32,
                       float* out_ptr33,
                       long* out_ptr35,
                       float* out_ptr37,
                       float* out_ptr38,
                       long* out_ptr40,
                       float* out_ptr42,
                       float* out_ptr43,
                       long* out_ptr45,
                       float* out_ptr47,
                       float* out_ptr48,
                       long* out_ptr50,
                       float* out_ptr52,
                       float* out_ptr53,
                       long* out_ptr55,
                       float* out_ptr57,
                       float* out_ptr58,
                       long* out_ptr60,
                       float* out_ptr62,
                       float* out_ptr63,
                       long* out_ptr65,
                       float* out_ptr67,
                       float* out_ptr68,
                       long* out_ptr70,
                       float* out_ptr72,
                       float* out_ptr73,
                       long* out_ptr75,
                       float* out_ptr77,
                       float* out_ptr79,
                       float* out_ptr81,
                       float* out_ptr83,
                       long* out_ptr85,
                       long* out_ptr87,
                       float* out_ptr89,
                       float* out_ptr90,
                       long* out_ptr92,
                       float* out_ptr94,
                       float* out_ptr95,
                       long* out_ptr97,
                       float* out_ptr99,
                       float* out_ptr100,
                       long* out_ptr102,
                       float* out_ptr104,
                       float* out_ptr105,
                       long* out_ptr107,
                       float* out_ptr109,
                       float* out_ptr110,
                       long* out_ptr112,
                       float* out_ptr114,
                       float* out_ptr115,
                       long* out_ptr117,
                       float* out_ptr119,
                       float* out_ptr120,
                       long* out_ptr122,
                       float* out_ptr124,
                       float* out_ptr125,
                       long* out_ptr127,
                       float* out_ptr129,
                       float* out_ptr130,
                       long* out_ptr132,
                       float* out_ptr134,
                       float* out_ptr135,
                       long* out_ptr137,
                       float* out_ptr139,
                       float* out_ptr140,
                       long* out_ptr142,
                       float* out_ptr144,
                       float* out_ptr145,
                       long* out_ptr147,
                       float* out_ptr149,
                       float* out_ptr150,
                       long* out_ptr152,
                       float* out_ptr154,
                       float* out_ptr155,
                       long* out_ptr157,
                       float* out_ptr159,
                       float* out_ptr160,
                       long* out_ptr162,
                       float* out_ptr164,
                       float* out_ptr165,
                       long* out_ptr167,
                       float* out_ptr169,
                       float* out_ptr170,
                       long* out_ptr172,
                       float* out_ptr174,
                       float* out_ptr175,
                       long* out_ptr177,
                       float* out_ptr179,
                       float* out_ptr180,
                       long* out_ptr182,
                       float* out_ptr184,
                       float* out_ptr185,
                       long* out_ptr187,
                       float* out_ptr189,
                       float* out_ptr190,
                       long* out_ptr192,
                       float* out_ptr194,
                       float* out_ptr195,
                       long* out_ptr197,
                       float* out_ptr199,
                       float* out_ptr200,
                       long* out_ptr202,
                       float* out_ptr204,
                       float* out_ptr206,
                       float* out_ptr208,
                       float* out_ptr210,
                       long* out_ptr212,
                       long* out_ptr214,
                       float* out_ptr216,
                       float* out_ptr217,
                       long* out_ptr219,
                       float* out_ptr221,
                       float* out_ptr222,
                       long* out_ptr224,
                       float* out_ptr226,
                       float* out_ptr227,
                       long* out_ptr229,
                       float* out_ptr231,
                       float* out_ptr232,
                       long* out_ptr234,
                       float* out_ptr236,
                       float* out_ptr237,
                       long* out_ptr239,
                       float* out_ptr241,
                       float* out_ptr242,
                       long* out_ptr244,
                       float* out_ptr246,
                       float* out_ptr247,
                       long* out_ptr249,
                       float* out_ptr251,
                       float* out_ptr252,
                       long* out_ptr254,
                       float* out_ptr256,
                       float* out_ptr257,
                       long* out_ptr259,
                       float* out_ptr261,
                       float* out_ptr262,
                       long* out_ptr264,
                       float* out_ptr266,
                       float* out_ptr267,
                       long* out_ptr269,
                       float* out_ptr271,
                       float* out_ptr272,
                       long* out_ptr274,
                       float* out_ptr276,
                       float* out_ptr277,
                       long* out_ptr279,
                       float* out_ptr281,
                       float* out_ptr282,
                       long* out_ptr284,
                       float* out_ptr286,
                       float* out_ptr287,
                       long* out_ptr289,
                       float* out_ptr291,
                       float* out_ptr292,
                       long* out_ptr294,
                       float* out_ptr296,
                       float* out_ptr297,
                       long* out_ptr299,
                       float* out_ptr301,
                       float* out_ptr302,
                       long* out_ptr304,
                       float* out_ptr306,
                       float* out_ptr307,
                       long* out_ptr309,
                       float* out_ptr311,
                       float* out_ptr312,
                       long* out_ptr314,
                       float* out_ptr316,
                       float* out_ptr317,
                       long* out_ptr319,
                       float* out_ptr321,
                       float* out_ptr322)
{
    #pragma omp parallel num_threads(28)
    {
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(1053696L); x0+=static_cast<long>(1L))
            {
                auto tmp0 = in_ptr0[static_cast<long>(x0)];
                auto tmp1 = static_cast<float>(0.0);
                auto tmp2 = tmp0 <= tmp1;
                out_ptr0[static_cast<long>(x0)] = tmp2;
            }
        }
        {
            #pragma omp for 
            for(long x0=static_cast<long>(0L); x0<static_cast<long>(8L); x0+=static_cast<long>(1L))
            {
                for(long x1=static_cast<long>(0L); x1<static_cast<long>(128L); x1+=static_cast<long>(8L))
                {
                    #pragma GCC ivdep
                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(3136L); x2+=static_cast<long>(1L))
                    {
                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x1 + (128L*x2) + (401408L*x0)));
                        auto tmp1 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x1));
                        auto tmp2 = tmp0 - tmp1;
                        tmp2.store(out_ptr1 + static_cast<long>(x1 + (128L*x2) + (401408L*x0)));
                    }
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr3[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr3[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr4 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr5 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr5 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr6 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(100352.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.00000996502277);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr6 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr7[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr8[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr2 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr10 + static_cast<long>(x0));
                    auto tmp9 = at::vec::Vectorized<float>::loadu(out_ptr12 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    auto tmp10 = tmp9 * tmp6;
                    auto tmp11 = tmp3 + tmp10;
                    tmp8.store(out_ptr10 + static_cast<long>(x0));
                    tmp11.store(out_ptr12 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(128L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr10 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr14 + static_cast<long>(x0));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(out_ptr16 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    auto tmp16 = tmp15 * tmp12;
                    auto tmp17 = tmp9 + tmp16;
                    tmp14.store(out_ptr14 + static_cast<long>(x0));
                    tmp17.store(out_ptr16 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr13[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr18[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr14[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr20[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr15 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr22 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr22 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr23 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr23 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr18[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr25[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr19 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr27 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr27 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr28 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr28 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr22[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr30[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(312L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr23 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr32 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr32 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(312L); x0<static_cast<long>(316L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr23[static_cast<long>(x0)];
                    auto tmp3 = in_ptr24[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr32[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(312L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr33 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr33 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(312L); x0<static_cast<long>(316L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr3[static_cast<long>(x0)];
                    auto tmp7 = in_ptr25[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000398612827361);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr33[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr26[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr35[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr27 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr37 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr37 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr38 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr38 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr30[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr40[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr31 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr42 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr42 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr43 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr43 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr34[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr45[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(336L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr35 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr47 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr47 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(336L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr48 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr48 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr38[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr50[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr39 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr52 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr52 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr53 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr53 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr42[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr55[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr43 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr57 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr57 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr58 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr58 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr46[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr60[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr47 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr62 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr62 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(352L); x0<static_cast<long>(356L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_ptr47[static_cast<long>(x0)];
                    auto tmp3 = in_ptr48[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = decltype(tmp0)(tmp0 * tmp1);
                    auto tmp4 = static_cast<float>(0.9);
                    auto tmp5 = decltype(tmp3)(tmp3 * tmp4);
                    auto tmp6 = decltype(tmp2)(tmp2 + tmp5);
                    out_ptr62[static_cast<long>(x0)] = tmp6;
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(352L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr63 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr63 + static_cast<long>(x0));
                }
                #pragma omp simd simdlen(4) 
                for(long x0=static_cast<long>(352L); x0<static_cast<long>(356L); x0+=static_cast<long>(1L))
                {
                    auto tmp0 = in_out_ptr9[static_cast<long>(x0)];
                    auto tmp7 = in_ptr49[static_cast<long>(x0)];
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = tmp0 / tmp1;
                    auto tmp3 = static_cast<float>(1.0000398612827361);
                    auto tmp4 = decltype(tmp2)(tmp2 * tmp3);
                    auto tmp5 = static_cast<float>(0.1);
                    auto tmp6 = decltype(tmp4)(tmp4 * tmp5);
                    auto tmp8 = static_cast<float>(0.9);
                    auto tmp9 = decltype(tmp7)(tmp7 * tmp8);
                    auto tmp10 = decltype(tmp6)(tmp6 + tmp9);
                    out_ptr63[static_cast<long>(x0)] = tmp10;
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr50[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr65[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr51 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr67 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr67 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr68 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr68 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr54[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr70[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr55 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr72 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr72 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(200L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr73 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr73 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr58[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr75[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(376L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr59 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr77 + static_cast<long>(x0));
                    auto tmp9 = at::vec::Vectorized<float>::loadu(out_ptr79 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    auto tmp10 = tmp9 * tmp6;
                    auto tmp11 = tmp3 + tmp10;
                    tmp8.store(out_ptr77 + static_cast<long>(x0));
                    tmp11.store(out_ptr79 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(376L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr62 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr81 + static_cast<long>(x0));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(out_ptr83 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    auto tmp16 = tmp15 * tmp12;
                    auto tmp17 = tmp9 + tmp16;
                    tmp14.store(out_ptr81 + static_cast<long>(x0));
                    tmp17.store(out_ptr83 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr65[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr85[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr66[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr87[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr67 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr89 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr89 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr90 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(25088.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0000398612827361);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr90 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr70[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr92[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr71 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr94 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr94 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr95 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr95 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr74[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr97[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr75 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr99 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr99 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(704L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr100 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr100 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr78[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr102[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr79 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr104 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr104 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr105 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr105 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr82[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr107[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr83 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr109 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr109 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr110 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr110 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr86[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr112[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr87 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr114 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr114 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(768L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr115 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr115 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr90[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr117[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr91 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr119 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr119 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr120 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr120 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr94[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr122[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr95 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr124 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr124 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr125 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr125 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr98[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr127[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr99 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr129 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr129 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(832L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr130 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr130 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr102[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr132[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr103 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr134 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr134 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr135 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr135 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr106[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr137[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr107 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr139 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr139 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr140 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr140 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr110[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr142[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr111 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr144 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr144 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(896L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr145 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr145 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr114[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr147[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr115 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr149 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr149 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr150 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr150 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr118[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr152[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr119 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr154 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr154 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr155 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr155 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr122[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr157[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr123 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr159 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr159 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(960L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr160 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr160 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr126[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr162[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr127 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr164 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr164 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr165 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr165 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr130[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr167[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr131 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr169 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr169 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr170 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr170 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr134[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr172[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr135 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr174 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr174 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1024L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr175 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr175 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr138[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr177[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr139 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr179 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr179 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr180 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr180 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr142[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr182[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr143 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr184 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr184 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr185 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr185 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr146[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr187[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1088L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr147 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr189 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr189 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1088L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr190 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr190 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr150[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr192[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr151 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr194 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr194 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr195 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr195 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr154[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr197[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr155 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr199 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr199 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(400L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr200 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr200 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr158[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr202[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1152L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr159 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr204 + static_cast<long>(x0));
                    auto tmp9 = at::vec::Vectorized<float>::loadu(out_ptr206 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    auto tmp10 = tmp9 * tmp6;
                    auto tmp11 = tmp3 + tmp10;
                    tmp8.store(out_ptr204 + static_cast<long>(x0));
                    tmp11.store(out_ptr206 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1152L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr162 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr208 + static_cast<long>(x0));
                    auto tmp15 = at::vec::Vectorized<float>::loadu(out_ptr210 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    auto tmp16 = tmp15 * tmp12;
                    auto tmp17 = tmp9 + tmp16;
                    tmp14.store(out_ptr208 + static_cast<long>(x0));
                    tmp17.store(out_ptr210 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr165[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr212[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr166[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr214[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr167 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr216 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr216 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr217 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(6272.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0001594642002871);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr217 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr170[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr219[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr171 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr221 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr221 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr222 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr222 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr174[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr224[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr175 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr226 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr226 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1216L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr227 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr227 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr178[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr229[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr179 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr231 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr231 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr232 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr232 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr182[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr234[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr183 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr236 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr236 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr237 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr237 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr186[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr239[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1280L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr187 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr241 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr241 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1280L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr242 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr242 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr190[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr244[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr191 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr246 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr246 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr247 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr247 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr194[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr249[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr195 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr251 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr251 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr252 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr252 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr198[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr254[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1344L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr199 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr256 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr256 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1344L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr257 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr257 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr202[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr259[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr203 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr261 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr261 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr262 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr262 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr206[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr264[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr207 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr266 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr266 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr267 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr267 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr210[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr269[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1408L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr211 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr271 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr271 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1408L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr46 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr272 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr272 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr214[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr274[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr215 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr276 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr276 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr47 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr277 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr277 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr218[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr279[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr219 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr281 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr281 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr48 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr282 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr282 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr222[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr284[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1472L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr223 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr286 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr286 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1472L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr49 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr287 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr287 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr226[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr289[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr227 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr291 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr291 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr50 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr292 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr292 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr230[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr294[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr231 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr296 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr296 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr51 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr297 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr297 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr234[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr299[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1536L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr235 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr301 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr301 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1536L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr52 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr302 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr302 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr238[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr304[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr239 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr306 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr306 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr53 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr307 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr307 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr242[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr309[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr243 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr311 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr311 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr54 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr312 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr312 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr246[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr314[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr247 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr316 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr316 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr55 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr317 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr317 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                auto tmp0 = in_ptr250[static_cast<long>(0L)];
                auto tmp1 = static_cast<long>(1);
                auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
                out_ptr319[static_cast<long>(0L)] = tmp2;
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr251 + static_cast<long>(x0));
                    auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr321 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(0.1);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 * tmp2;
                    auto tmp5 = static_cast<float>(0.9);
                    auto tmp6 = at::vec::Vectorized<float>(tmp5);
                    auto tmp7 = tmp4 * tmp6;
                    auto tmp8 = tmp3 + tmp7;
                    tmp8.store(out_ptr321 + static_cast<long>(x0));
                }
            }
        }
        #pragma omp single
        {
            {
                for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
                {
                    auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr56 + static_cast<long>(x0));
                    auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr322 + static_cast<long>(x0));
                    auto tmp1 = static_cast<float>(1568.0);
                    auto tmp2 = at::vec::Vectorized<float>(tmp1);
                    auto tmp3 = tmp0 / tmp2;
                    auto tmp4 = static_cast<float>(1.0006381620931717);
                    auto tmp5 = at::vec::Vectorized<float>(tmp4);
                    auto tmp6 = tmp3 * tmp5;
                    auto tmp7 = static_cast<float>(0.1);
                    auto tmp8 = at::vec::Vectorized<float>(tmp7);
                    auto tmp9 = tmp6 * tmp8;
                    auto tmp11 = static_cast<float>(0.9);
                    auto tmp12 = at::vec::Vectorized<float>(tmp11);
                    auto tmp13 = tmp10 * tmp12;
                    auto tmp14 = tmp9 + tmp13;
                    tmp14.store(out_ptr322 + static_cast<long>(x0));
                }
            }
        }
    }
}
''')


cpp_fused__native_batch_norm_legit_functional_add_108 = async_compile.cpp('''
#include "/tmp/torchinductor_youkaichao/2l/c2ljzlm4sosod7u6lyrroqdba6hmfcyijrric6p4t3fhbcmw6osp.h"
extern "C" void kernel(float* in_out_ptr0,
                       float* in_out_ptr1,
                       float* in_out_ptr2,
                       float* in_out_ptr3,
                       float* in_out_ptr4,
                       float* in_out_ptr5,
                       float* in_out_ptr6,
                       float* in_out_ptr7,
                       float* in_out_ptr8,
                       float* in_out_ptr9,
                       float* in_out_ptr10,
                       float* in_out_ptr11,
                       float* in_out_ptr12,
                       float* in_out_ptr13,
                       float* in_out_ptr14,
                       float* in_out_ptr15,
                       float* in_out_ptr16,
                       float* in_out_ptr17,
                       float* in_out_ptr18,
                       float* in_out_ptr19,
                       float* in_out_ptr20,
                       float* in_out_ptr21,
                       float* in_out_ptr22,
                       float* in_out_ptr23,
                       float* in_out_ptr24,
                       float* in_out_ptr25,
                       float* in_out_ptr26,
                       float* in_out_ptr27,
                       float* in_out_ptr28,
                       float* in_out_ptr29,
                       float* in_out_ptr30,
                       float* in_out_ptr31,
                       float* in_out_ptr32,
                       float* in_out_ptr33,
                       float* in_out_ptr34,
                       float* in_out_ptr35,
                       float* in_out_ptr36,
                       float* in_out_ptr37,
                       float* in_out_ptr38,
                       float* in_out_ptr39,
                       float* in_out_ptr40,
                       float* in_out_ptr41,
                       float* in_out_ptr42,
                       float* in_out_ptr43,
                       float* in_out_ptr44,
                       float* in_out_ptr45,
                       const long* in_ptr0,
                       const float* in_ptr1,
                       const float* in_ptr2,
                       const float* in_ptr3,
                       const long* in_ptr4,
                       const float* in_ptr5,
                       const float* in_ptr6,
                       const float* in_ptr7,
                       const long* in_ptr8,
                       const float* in_ptr9,
                       const float* in_ptr10,
                       const float* in_ptr11,
                       const long* in_ptr12,
                       const float* in_ptr13,
                       const float* in_ptr14,
                       const float* in_ptr15,
                       const long* in_ptr16,
                       const float* in_ptr17,
                       const float* in_ptr18,
                       const float* in_ptr19,
                       const long* in_ptr20,
                       const float* in_ptr21,
                       const float* in_ptr22,
                       const float* in_ptr23,
                       const long* in_ptr24,
                       const float* in_ptr25,
                       const float* in_ptr26,
                       const float* in_ptr27,
                       const long* in_ptr28,
                       const float* in_ptr29,
                       const float* in_ptr30,
                       const float* in_ptr31,
                       const long* in_ptr32,
                       const float* in_ptr33,
                       const float* in_ptr34,
                       const float* in_ptr35,
                       const long* in_ptr36,
                       const float* in_ptr37,
                       const float* in_ptr38,
                       const float* in_ptr39,
                       const long* in_ptr40,
                       const float* in_ptr41,
                       const float* in_ptr42,
                       const float* in_ptr43,
                       const long* in_ptr44,
                       const float* in_ptr45,
                       const float* in_ptr46,
                       const float* in_ptr47,
                       const long* in_ptr48,
                       const float* in_ptr49,
                       const float* in_ptr50,
                       const float* in_ptr51,
                       const long* in_ptr52,
                       const float* in_ptr53,
                       const float* in_ptr54,
                       const float* in_ptr55,
                       const long* in_ptr56,
                       const float* in_ptr57,
                       const float* in_ptr58,
                       const float* in_ptr59,
                       const long* in_ptr60,
                       const float* in_ptr61,
                       const float* in_ptr62,
                       const float* in_ptr63,
                       const long* in_ptr64,
                       const float* in_ptr65,
                       const float* in_ptr66,
                       const float* in_ptr67,
                       const long* in_ptr68,
                       const float* in_ptr69,
                       const float* in_ptr70,
                       const float* in_ptr71,
                       const long* in_ptr72,
                       const float* in_ptr73,
                       const float* in_ptr74,
                       const float* in_ptr75,
                       const long* in_ptr76,
                       const float* in_ptr77,
                       const float* in_ptr78,
                       const float* in_ptr79,
                       const long* in_ptr80,
                       const float* in_ptr81,
                       const float* in_ptr82,
                       const float* in_ptr83,
                       const long* in_ptr84,
                       const float* in_ptr85,
                       const float* in_ptr86,
                       const float* in_ptr87,
                       const long* in_ptr88,
                       const float* in_ptr89,
                       const float* in_ptr90,
                       const float* in_ptr91,
                       const long* in_ptr92,
                       const float* in_ptr93,
                       const float* in_ptr94,
                       const float* in_ptr95,
                       const long* in_ptr96,
                       const float* in_ptr97,
                       const float* in_ptr98,
                       const float* in_ptr99,
                       const long* in_ptr100,
                       const float* in_ptr101,
                       const float* in_ptr102,
                       const float* in_ptr103,
                       const long* in_ptr104,
                       const float* in_ptr105,
                       const float* in_ptr106,
                       const float* in_ptr107,
                       const long* in_ptr108,
                       const float* in_ptr109,
                       const float* in_ptr110,
                       const float* in_ptr111,
                       const long* in_ptr112,
                       const float* in_ptr113,
                       const float* in_ptr114,
                       const float* in_ptr115,
                       const long* in_ptr116,
                       const float* in_ptr117,
                       const float* in_ptr118,
                       const float* in_ptr119,
                       const long* in_ptr120,
                       const float* in_ptr121,
                       const float* in_ptr122,
                       const float* in_ptr123,
                       const long* in_ptr124,
                       const float* in_ptr125,
                       const float* in_ptr126,
                       const float* in_ptr127,
                       const long* in_ptr128,
                       const float* in_ptr129,
                       const float* in_ptr130,
                       const float* in_ptr131,
                       const long* in_ptr132,
                       const float* in_ptr133,
                       const float* in_ptr134,
                       const float* in_ptr135,
                       const long* in_ptr136,
                       const float* in_ptr137,
                       const float* in_ptr138,
                       const float* in_ptr139,
                       const long* in_ptr140,
                       const float* in_ptr141,
                       const float* in_ptr142,
                       const float* in_ptr143,
                       const long* in_ptr144,
                       const float* in_ptr145,
                       const float* in_ptr146,
                       const float* in_ptr147,
                       const long* in_ptr148,
                       const float* in_ptr149,
                       const float* in_ptr150,
                       const float* in_ptr151,
                       const float* in_ptr152,
                       const float* in_ptr153,
                       const float* in_ptr154,
                       const long* in_ptr155,
                       const long* in_ptr156,
                       const float* in_ptr157,
                       const float* in_ptr158,
                       const float* in_ptr159,
                       const long* in_ptr160,
                       const float* in_ptr161,
                       const float* in_ptr162,
                       const float* in_ptr163,
                       const long* in_ptr164,
                       const float* in_ptr165,
                       const float* in_ptr166,
                       const float* in_ptr167,
                       const long* in_ptr168,
                       const float* in_ptr169,
                       const float* in_ptr170,
                       const float* in_ptr171,
                       const long* in_ptr172,
                       const float* in_ptr173,
                       const float* in_ptr174,
                       const float* in_ptr175,
                       const long* in_ptr176,
                       const float* in_ptr177,
                       const float* in_ptr178,
                       const float* in_ptr179,
                       const long* in_ptr180,
                       const float* in_ptr181,
                       const float* in_ptr182,
                       const float* in_ptr183,
                       const long* in_ptr184,
                       const float* in_ptr185,
                       const float* in_ptr186,
                       const float* in_ptr187,
                       const long* in_ptr188,
                       const float* in_ptr189,
                       const float* in_ptr190,
                       const float* in_ptr191,
                       long* out_ptr1,
                       float* out_ptr3,
                       float* out_ptr4,
                       long* out_ptr6,
                       float* out_ptr8,
                       float* out_ptr9,
                       long* out_ptr11,
                       float* out_ptr13,
                       float* out_ptr14,
                       long* out_ptr16,
                       float* out_ptr18,
                       float* out_ptr19,
                       long* out_ptr21,
                       float* out_ptr23,
                       float* out_ptr24,
                       long* out_ptr26,
                       float* out_ptr28,
                       float* out_ptr29,
                       long* out_ptr31,
                       float* out_ptr33,
                       float* out_ptr34,
                       long* out_ptr36,
                       float* out_ptr38,
                       float* out_ptr39,
                       long* out_ptr41,
                       float* out_ptr43,
                       float* out_ptr44,
                       long* out_ptr46,
                       float* out_ptr48,
                       float* out_ptr49,
                       long* out_ptr51,
                       float* out_ptr53,
                       float* out_ptr54,
                       long* out_ptr56,
                       float* out_ptr58,
                       float* out_ptr59,
                       long* out_ptr61,
                       float* out_ptr63,
                       float* out_ptr64,
                       long* out_ptr66,
                       float* out_ptr68,
                       float* out_ptr69,
                       long* out_ptr71,
                       float* out_ptr73,
                       float* out_ptr74,
                       long* out_ptr76,
                       float* out_ptr78,
                       float* out_ptr79,
                       long* out_ptr81,
                       float* out_ptr83,
                       float* out_ptr84,
                       long* out_ptr86,
                       float* out_ptr88,
                       float* out_ptr89,
                       long* out_ptr91,
                       float* out_ptr93,
                       float* out_ptr94,
                       long* out_ptr96,
                       float* out_ptr98,
                       float* out_ptr99,
                       long* out_ptr101,
                       float* out_ptr103,
                       float* out_ptr104,
                       long* out_ptr106,
                       float* out_ptr108,
                       float* out_ptr109,
                       long* out_ptr111,
                       float* out_ptr113,
                       float* out_ptr114,
                       long* out_ptr116,
                       float* out_ptr118,
                       float* out_ptr119,
                       long* out_ptr121,
                       float* out_ptr123,
                       float* out_ptr124,
                       long* out_ptr126,
                       float* out_ptr128,
                       float* out_ptr129,
                       long* out_ptr131,
                       float* out_ptr133,
                       float* out_ptr134,
                       long* out_ptr136,
                       float* out_ptr138,
                       float* out_ptr139,
                       long* out_ptr141,
                       float* out_ptr143,
                       float* out_ptr144,
                       long* out_ptr146,
                       float* out_ptr148,
                       float* out_ptr149,
                       long* out_ptr151,
                       float* out_ptr153,
                       float* out_ptr154,
                       long* out_ptr156,
                       float* out_ptr158,
                       float* out_ptr159,
                       long* out_ptr161,
                       float* out_ptr163,
                       float* out_ptr164,
                       long* out_ptr166,
                       float* out_ptr168,
                       float* out_ptr169,
                       long* out_ptr171,
                       float* out_ptr173,
                       float* out_ptr174,
                       long* out_ptr176,
                       float* out_ptr178,
                       float* out_ptr179,
                       long* out_ptr181,
                       float* out_ptr183,
                       float* out_ptr184,
                       long* out_ptr186,
                       float* out_ptr188,
                       float* out_ptr190,
                       float* out_ptr192,
                       float* out_ptr194,
                       long* out_ptr196,
                       long* out_ptr198,
                       float* out_ptr200,
                       float* out_ptr201,
                       long* out_ptr203,
                       float* out_ptr205,
                       float* out_ptr206,
                       long* out_ptr208,
                       float* out_ptr210,
                       float* out_ptr211,
                       long* out_ptr213,
                       float* out_ptr215,
                       float* out_ptr216,
                       long* out_ptr218,
                       float* out_ptr220,
                       float* out_ptr221,
                       long* out_ptr223,
                       float* out_ptr225,
                       float* out_ptr226,
                       long* out_ptr228,
                       float* out_ptr230,
                       float* out_ptr231,
                       long* out_ptr233,
                       float* out_ptr235,
                       float* out_ptr236,
                       long* out_ptr238,
                       float* out_ptr240,
                       float* out_ptr241)
{
    {
        auto tmp0 = in_ptr0[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr1[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr1 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr3 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr3 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr0 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr4 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr4 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr4[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr6[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1664L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr5 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr8 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr8 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1664L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr1 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr9 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr9 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr8[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr11[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr9 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr13 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr13 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr2 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr14 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr14 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr12[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr16[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr13 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr18 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr18 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr3 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr19 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr19 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr16[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr21[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1728L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr17 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr23 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr23 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1728L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr4 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr24 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr24 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr20[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr26[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr21 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr28 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr28 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr5 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr29 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr29 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr24[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr31[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr25 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr33 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr33 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr6 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr34 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr34 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr28[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr36[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1792L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr29 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr38 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr38 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1792L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr7 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr39 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr39 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr32[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr41[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr33 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr43 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr43 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr8 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr44 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr44 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr36[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr46[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr37 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr48 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr48 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr9 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr49 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr49 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr40[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr51[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1856L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr41 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr53 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr53 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1856L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr10 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr54 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr54 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr44[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr56[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr45 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr58 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr58 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr11 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr59 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr59 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr48[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr61[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr49 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr63 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr63 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr12 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr64 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr64 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr52[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr66[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1920L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr53 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr68 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr68 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1920L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr13 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr69 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr69 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr56[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr71[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr57 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr73 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr73 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr14 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr74 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr74 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr60[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr76[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr61 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr78 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr78 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr15 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr79 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr79 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr64[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr81[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1984L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr65 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr83 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr83 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1984L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr16 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr84 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr84 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr68[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr86[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr69 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr88 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr88 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr17 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr89 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr89 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr72[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr91[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr73 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr93 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr93 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr18 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr94 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr94 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr76[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr96[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2048L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr77 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr98 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr98 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2048L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr19 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr99 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr99 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr80[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr101[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr81 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr103 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr103 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr20 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr104 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr104 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr84[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr106[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr85 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr108 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr108 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr21 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr109 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr109 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr88[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr111[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2112L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr89 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr113 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr113 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2112L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr22 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr114 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr114 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr92[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr116[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr93 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr118 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr118 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr23 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr119 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr119 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr96[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr121[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr97 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr123 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr123 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr24 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr124 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr124 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr100[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr126[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2176L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr101 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr128 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr128 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2176L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr25 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr129 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr129 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr104[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr131[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr105 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr133 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr133 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr26 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr134 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr134 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr108[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr136[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr109 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr138 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr138 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr27 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr139 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr139 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr112[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr141[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2240L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr113 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr143 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr143 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2240L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr28 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr144 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr144 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr116[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr146[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr117 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr148 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr148 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr29 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr149 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr149 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr120[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr151[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr121 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr153 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr153 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr30 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr154 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr154 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr124[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr156[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2304L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr125 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr158 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr158 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2304L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr31 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr159 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr159 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr128[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr161[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr129 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr163 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr163 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr32 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr164 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr164 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr132[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr166[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr133 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr168 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr168 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr33 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr169 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr169 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr136[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr171[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2368L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr137 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr173 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr173 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2368L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr34 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr174 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr174 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr140[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr176[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr141 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr178 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr178 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr35 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr179 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr179 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr144[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr181[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr145 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr183 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr183 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(800L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr36 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr184 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr184 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr148[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr186[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr149 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr188 + static_cast<long>(x0));
            auto tmp9 = at::vec::Vectorized<float>::loadu(out_ptr190 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            auto tmp10 = tmp9 * tmp6;
            auto tmp11 = tmp3 + tmp10;
            tmp8.store(out_ptr188 + static_cast<long>(x0));
            tmp11.store(out_ptr190 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr152 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr192 + static_cast<long>(x0));
            auto tmp15 = at::vec::Vectorized<float>::loadu(out_ptr194 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            auto tmp16 = tmp15 * tmp12;
            auto tmp17 = tmp9 + tmp16;
            tmp14.store(out_ptr192 + static_cast<long>(x0));
            tmp17.store(out_ptr194 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr155[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr196[static_cast<long>(0L)] = tmp2;
    }
    {
        auto tmp0 = in_ptr156[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr198[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr157 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr200 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr200 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr37 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr201 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(1568.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0006381620931717);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr201 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr160[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr203[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr161 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr205 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr205 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr38 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr206 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr206 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr164[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr208[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr165 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr210 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr210 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2432L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr39 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr211 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr211 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr168[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr213[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr169 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr215 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr215 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr40 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr216 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr216 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr172[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr218[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr173 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr220 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr220 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr41 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr221 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr221 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr176[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr223[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2560L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr177 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr225 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr225 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2560L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr42 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr226 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr226 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr180[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr228[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr181 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr230 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr230 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr43 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr231 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr231 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr184[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr233[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr185 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr235 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr235 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(1600L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr44 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr236 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr236 + static_cast<long>(x0));
        }
    }
    {
        auto tmp0 = in_ptr188[static_cast<long>(0L)];
        auto tmp1 = static_cast<long>(1);
        auto tmp2 = decltype(tmp0)(tmp0 + tmp1);
        out_ptr238[static_cast<long>(0L)] = tmp2;
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2688L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr189 + static_cast<long>(x0));
            auto tmp4 = at::vec::Vectorized<float>::loadu(out_ptr240 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(0.1);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 * tmp2;
            auto tmp5 = static_cast<float>(0.9);
            auto tmp6 = at::vec::Vectorized<float>(tmp5);
            auto tmp7 = tmp4 * tmp6;
            auto tmp8 = tmp3 + tmp7;
            tmp8.store(out_ptr240 + static_cast<long>(x0));
        }
    }
    {
        for(long x0=static_cast<long>(0L); x0<static_cast<long>(2688L); x0+=static_cast<long>(8L))
        {
            auto tmp0 = at::vec::Vectorized<float>::loadu(in_out_ptr45 + static_cast<long>(x0));
            auto tmp10 = at::vec::Vectorized<float>::loadu(out_ptr241 + static_cast<long>(x0));
            auto tmp1 = static_cast<float>(392.0);
            auto tmp2 = at::vec::Vectorized<float>(tmp1);
            auto tmp3 = tmp0 / tmp2;
            auto tmp4 = static_cast<float>(1.0025575447570332);
            auto tmp5 = at::vec::Vectorized<float>(tmp4);
            auto tmp6 = tmp3 * tmp5;
            auto tmp7 = static_cast<float>(0.1);
            auto tmp8 = at::vec::Vectorized<float>(tmp7);
            auto tmp9 = tmp6 * tmp8;
            auto tmp11 = static_cast<float>(0.9);
            auto tmp12 = at::vec::Vectorized<float>(tmp11);
            auto tmp13 = tmp10 * tmp12;
            auto tmp14 = tmp9 + tmp13;
            tmp14.store(out_ptr241 + static_cast<long>(x0));
        }
    }
}
''')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668 = args
    args.clear()
    assert_size_stride(primals_1, (128, ), (1, ))
    assert_size_stride(primals_2, (128, ), (1, ))
    assert_size_stride(primals_3, (128, ), (1, ))
    assert_size_stride(primals_4, (128, ), (1, ))
    assert_size_stride(primals_5, (128, ), (1, ))
    assert_size_stride(primals_6, (128, ), (1, ))
    assert_size_stride(primals_7, (200, ), (1, ))
    assert_size_stride(primals_8, (200, ), (1, ))
    assert_size_stride(primals_9, (200, ), (1, ))
    assert_size_stride(primals_10, (200, ), (1, ))
    assert_size_stride(primals_11, (316, ), (1, ))
    assert_size_stride(primals_12, (316, ), (1, ))
    assert_size_stride(primals_13, (200, ), (1, ))
    assert_size_stride(primals_14, (200, ), (1, ))
    assert_size_stride(primals_15, (200, ), (1, ))
    assert_size_stride(primals_16, (200, ), (1, ))
    assert_size_stride(primals_17, (336, ), (1, ))
    assert_size_stride(primals_18, (336, ), (1, ))
    assert_size_stride(primals_19, (200, ), (1, ))
    assert_size_stride(primals_20, (200, ), (1, ))
    assert_size_stride(primals_21, (200, ), (1, ))
    assert_size_stride(primals_22, (200, ), (1, ))
    assert_size_stride(primals_23, (356, ), (1, ))
    assert_size_stride(primals_24, (356, ), (1, ))
    assert_size_stride(primals_25, (200, ), (1, ))
    assert_size_stride(primals_26, (200, ), (1, ))
    assert_size_stride(primals_27, (200, ), (1, ))
    assert_size_stride(primals_28, (200, ), (1, ))
    assert_size_stride(primals_29, (376, ), (1, ))
    assert_size_stride(primals_30, (376, ), (1, ))
    assert_size_stride(primals_31, (376, ), (1, ))
    assert_size_stride(primals_32, (376, ), (1, ))
    assert_size_stride(primals_33, (400, ), (1, ))
    assert_size_stride(primals_34, (400, ), (1, ))
    assert_size_stride(primals_35, (400, ), (1, ))
    assert_size_stride(primals_36, (400, ), (1, ))
    assert_size_stride(primals_37, (704, ), (1, ))
    assert_size_stride(primals_38, (704, ), (1, ))
    assert_size_stride(primals_39, (400, ), (1, ))
    assert_size_stride(primals_40, (400, ), (1, ))
    assert_size_stride(primals_41, (400, ), (1, ))
    assert_size_stride(primals_42, (400, ), (1, ))
    assert_size_stride(primals_43, (768, ), (1, ))
    assert_size_stride(primals_44, (768, ), (1, ))
    assert_size_stride(primals_45, (400, ), (1, ))
    assert_size_stride(primals_46, (400, ), (1, ))
    assert_size_stride(primals_47, (400, ), (1, ))
    assert_size_stride(primals_48, (400, ), (1, ))
    assert_size_stride(primals_49, (832, ), (1, ))
    assert_size_stride(primals_50, (832, ), (1, ))
    assert_size_stride(primals_51, (400, ), (1, ))
    assert_size_stride(primals_52, (400, ), (1, ))
    assert_size_stride(primals_53, (400, ), (1, ))
    assert_size_stride(primals_54, (400, ), (1, ))
    assert_size_stride(primals_55, (896, ), (1, ))
    assert_size_stride(primals_56, (896, ), (1, ))
    assert_size_stride(primals_57, (400, ), (1, ))
    assert_size_stride(primals_58, (400, ), (1, ))
    assert_size_stride(primals_59, (400, ), (1, ))
    assert_size_stride(primals_60, (400, ), (1, ))
    assert_size_stride(primals_61, (960, ), (1, ))
    assert_size_stride(primals_62, (960, ), (1, ))
    assert_size_stride(primals_63, (400, ), (1, ))
    assert_size_stride(primals_64, (400, ), (1, ))
    assert_size_stride(primals_65, (400, ), (1, ))
    assert_size_stride(primals_66, (400, ), (1, ))
    assert_size_stride(primals_67, (1024, ), (1, ))
    assert_size_stride(primals_68, (1024, ), (1, ))
    assert_size_stride(primals_69, (400, ), (1, ))
    assert_size_stride(primals_70, (400, ), (1, ))
    assert_size_stride(primals_71, (400, ), (1, ))
    assert_size_stride(primals_72, (400, ), (1, ))
    assert_size_stride(primals_73, (1088, ), (1, ))
    assert_size_stride(primals_74, (1088, ), (1, ))
    assert_size_stride(primals_75, (400, ), (1, ))
    assert_size_stride(primals_76, (400, ), (1, ))
    assert_size_stride(primals_77, (400, ), (1, ))
    assert_size_stride(primals_78, (400, ), (1, ))
    assert_size_stride(primals_79, (1152, ), (1, ))
    assert_size_stride(primals_80, (1152, ), (1, ))
    assert_size_stride(primals_81, (1152, ), (1, ))
    assert_size_stride(primals_82, (1152, ), (1, ))
    assert_size_stride(primals_83, (800, ), (1, ))
    assert_size_stride(primals_84, (800, ), (1, ))
    assert_size_stride(primals_85, (800, ), (1, ))
    assert_size_stride(primals_86, (800, ), (1, ))
    assert_size_stride(primals_87, (1216, ), (1, ))
    assert_size_stride(primals_88, (1216, ), (1, ))
    assert_size_stride(primals_89, (800, ), (1, ))
    assert_size_stride(primals_90, (800, ), (1, ))
    assert_size_stride(primals_91, (800, ), (1, ))
    assert_size_stride(primals_92, (800, ), (1, ))
    assert_size_stride(primals_93, (1280, ), (1, ))
    assert_size_stride(primals_94, (1280, ), (1, ))
    assert_size_stride(primals_95, (800, ), (1, ))
    assert_size_stride(primals_96, (800, ), (1, ))
    assert_size_stride(primals_97, (800, ), (1, ))
    assert_size_stride(primals_98, (800, ), (1, ))
    assert_size_stride(primals_99, (1344, ), (1, ))
    assert_size_stride(primals_100, (1344, ), (1, ))
    assert_size_stride(primals_101, (800, ), (1, ))
    assert_size_stride(primals_102, (800, ), (1, ))
    assert_size_stride(primals_103, (800, ), (1, ))
    assert_size_stride(primals_104, (800, ), (1, ))
    assert_size_stride(primals_105, (1408, ), (1, ))
    assert_size_stride(primals_106, (1408, ), (1, ))
    assert_size_stride(primals_107, (800, ), (1, ))
    assert_size_stride(primals_108, (800, ), (1, ))
    assert_size_stride(primals_109, (800, ), (1, ))
    assert_size_stride(primals_110, (800, ), (1, ))
    assert_size_stride(primals_111, (1472, ), (1, ))
    assert_size_stride(primals_112, (1472, ), (1, ))
    assert_size_stride(primals_113, (800, ), (1, ))
    assert_size_stride(primals_114, (800, ), (1, ))
    assert_size_stride(primals_115, (800, ), (1, ))
    assert_size_stride(primals_116, (800, ), (1, ))
    assert_size_stride(primals_117, (1536, ), (1, ))
    assert_size_stride(primals_118, (1536, ), (1, ))
    assert_size_stride(primals_119, (800, ), (1, ))
    assert_size_stride(primals_120, (800, ), (1, ))
    assert_size_stride(primals_121, (800, ), (1, ))
    assert_size_stride(primals_122, (800, ), (1, ))
    assert_size_stride(primals_123, (1600, ), (1, ))
    assert_size_stride(primals_124, (1600, ), (1, ))
    assert_size_stride(primals_125, (800, ), (1, ))
    assert_size_stride(primals_126, (800, ), (1, ))
    assert_size_stride(primals_127, (800, ), (1, ))
    assert_size_stride(primals_128, (800, ), (1, ))
    assert_size_stride(primals_129, (1664, ), (1, ))
    assert_size_stride(primals_130, (1664, ), (1, ))
    assert_size_stride(primals_131, (800, ), (1, ))
    assert_size_stride(primals_132, (800, ), (1, ))
    assert_size_stride(primals_133, (800, ), (1, ))
    assert_size_stride(primals_134, (800, ), (1, ))
    assert_size_stride(primals_135, (1728, ), (1, ))
    assert_size_stride(primals_136, (1728, ), (1, ))
    assert_size_stride(primals_137, (800, ), (1, ))
    assert_size_stride(primals_138, (800, ), (1, ))
    assert_size_stride(primals_139, (800, ), (1, ))
    assert_size_stride(primals_140, (800, ), (1, ))
    assert_size_stride(primals_141, (1792, ), (1, ))
    assert_size_stride(primals_142, (1792, ), (1, ))
    assert_size_stride(primals_143, (800, ), (1, ))
    assert_size_stride(primals_144, (800, ), (1, ))
    assert_size_stride(primals_145, (800, ), (1, ))
    assert_size_stride(primals_146, (800, ), (1, ))
    assert_size_stride(primals_147, (1856, ), (1, ))
    assert_size_stride(primals_148, (1856, ), (1, ))
    assert_size_stride(primals_149, (800, ), (1, ))
    assert_size_stride(primals_150, (800, ), (1, ))
    assert_size_stride(primals_151, (800, ), (1, ))
    assert_size_stride(primals_152, (800, ), (1, ))
    assert_size_stride(primals_153, (1920, ), (1, ))
    assert_size_stride(primals_154, (1920, ), (1, ))
    assert_size_stride(primals_155, (800, ), (1, ))
    assert_size_stride(primals_156, (800, ), (1, ))
    assert_size_stride(primals_157, (800, ), (1, ))
    assert_size_stride(primals_158, (800, ), (1, ))
    assert_size_stride(primals_159, (1984, ), (1, ))
    assert_size_stride(primals_160, (1984, ), (1, ))
    assert_size_stride(primals_161, (800, ), (1, ))
    assert_size_stride(primals_162, (800, ), (1, ))
    assert_size_stride(primals_163, (800, ), (1, ))
    assert_size_stride(primals_164, (800, ), (1, ))
    assert_size_stride(primals_165, (2048, ), (1, ))
    assert_size_stride(primals_166, (2048, ), (1, ))
    assert_size_stride(primals_167, (800, ), (1, ))
    assert_size_stride(primals_168, (800, ), (1, ))
    assert_size_stride(primals_169, (800, ), (1, ))
    assert_size_stride(primals_170, (800, ), (1, ))
    assert_size_stride(primals_171, (2112, ), (1, ))
    assert_size_stride(primals_172, (2112, ), (1, ))
    assert_size_stride(primals_173, (800, ), (1, ))
    assert_size_stride(primals_174, (800, ), (1, ))
    assert_size_stride(primals_175, (800, ), (1, ))
    assert_size_stride(primals_176, (800, ), (1, ))
    assert_size_stride(primals_177, (2176, ), (1, ))
    assert_size_stride(primals_178, (2176, ), (1, ))
    assert_size_stride(primals_179, (800, ), (1, ))
    assert_size_stride(primals_180, (800, ), (1, ))
    assert_size_stride(primals_181, (800, ), (1, ))
    assert_size_stride(primals_182, (800, ), (1, ))
    assert_size_stride(primals_183, (2240, ), (1, ))
    assert_size_stride(primals_184, (2240, ), (1, ))
    assert_size_stride(primals_185, (800, ), (1, ))
    assert_size_stride(primals_186, (800, ), (1, ))
    assert_size_stride(primals_187, (800, ), (1, ))
    assert_size_stride(primals_188, (800, ), (1, ))
    assert_size_stride(primals_189, (2304, ), (1, ))
    assert_size_stride(primals_190, (2304, ), (1, ))
    assert_size_stride(primals_191, (800, ), (1, ))
    assert_size_stride(primals_192, (800, ), (1, ))
    assert_size_stride(primals_193, (800, ), (1, ))
    assert_size_stride(primals_194, (800, ), (1, ))
    assert_size_stride(primals_195, (2368, ), (1, ))
    assert_size_stride(primals_196, (2368, ), (1, ))
    assert_size_stride(primals_197, (800, ), (1, ))
    assert_size_stride(primals_198, (800, ), (1, ))
    assert_size_stride(primals_199, (800, ), (1, ))
    assert_size_stride(primals_200, (800, ), (1, ))
    assert_size_stride(primals_201, (2432, ), (1, ))
    assert_size_stride(primals_202, (2432, ), (1, ))
    assert_size_stride(primals_203, (2432, ), (1, ))
    assert_size_stride(primals_204, (2432, ), (1, ))
    assert_size_stride(primals_205, (1600, ), (1, ))
    assert_size_stride(primals_206, (1600, ), (1, ))
    assert_size_stride(primals_207, (1600, ), (1, ))
    assert_size_stride(primals_208, (1600, ), (1, ))
    assert_size_stride(primals_209, (2432, ), (1, ))
    assert_size_stride(primals_210, (2432, ), (1, ))
    assert_size_stride(primals_211, (1600, ), (1, ))
    assert_size_stride(primals_212, (1600, ), (1, ))
    assert_size_stride(primals_213, (1600, ), (1, ))
    assert_size_stride(primals_214, (1600, ), (1, ))
    assert_size_stride(primals_215, (2560, ), (1, ))
    assert_size_stride(primals_216, (2560, ), (1, ))
    assert_size_stride(primals_217, (1600, ), (1, ))
    assert_size_stride(primals_218, (1600, ), (1, ))
    assert_size_stride(primals_219, (1600, ), (1, ))
    assert_size_stride(primals_220, (1600, ), (1, ))
    assert_size_stride(primals_221, (2688, ), (1, ))
    assert_size_stride(primals_222, (2688, ), (1, ))
    assert_size_stride(primals_223, (128, 3, 7, 7), (147, 49, 7, 1))
    assert_size_stride(primals_224, (296, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_225, (200, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_226, (200, 4, 3, 3), (36, 9, 3, 1))
    assert_size_stride(primals_227, (276, 200, 1, 1), (200, 1, 1, 1))
    assert_size_stride(primals_228, (200, 316, 1, 1), (316, 1, 1, 1))
    assert_size_stride(primals_229, (200, 4, 3, 3), (36, 9, 3, 1))
    assert_size_stride(primals_230, (276, 200, 1, 1), (200, 1, 1, 1))
    assert_size_stride(primals_231, (200, 336, 1, 1), (336, 1, 1, 1))
    assert_size_stride(primals_232, (200, 4, 3, 3), (36, 9, 3, 1))
    assert_size_stride(primals_233, (276, 200, 1, 1), (200, 1, 1, 1))
    assert_size_stride(primals_234, (200, 356, 1, 1), (356, 1, 1, 1))
    assert_size_stride(primals_235, (200, 4, 3, 3), (36, 9, 3, 1))
    assert_size_stride(primals_236, (276, 200, 1, 1), (200, 1, 1, 1))
    assert_size_stride(primals_237, (640, 376, 1, 1), (376, 1, 1, 1))
    assert_size_stride(primals_238, (400, 376, 1, 1), (376, 1, 1, 1))
    assert_size_stride(primals_239, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_240, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_241, (400, 704, 1, 1), (704, 1, 1, 1))
    assert_size_stride(primals_242, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_243, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_244, (400, 768, 1, 1), (768, 1, 1, 1))
    assert_size_stride(primals_245, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_246, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_247, (400, 832, 1, 1), (832, 1, 1, 1))
    assert_size_stride(primals_248, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_249, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_250, (400, 896, 1, 1), (896, 1, 1, 1))
    assert_size_stride(primals_251, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_252, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_253, (400, 960, 1, 1), (960, 1, 1, 1))
    assert_size_stride(primals_254, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_255, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_256, (400, 1024, 1, 1), (1024, 1, 1, 1))
    assert_size_stride(primals_257, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_258, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_259, (400, 1088, 1, 1), (1088, 1, 1, 1))
    assert_size_stride(primals_260, (400, 8, 3, 3), (72, 9, 3, 1))
    assert_size_stride(primals_261, (576, 400, 1, 1), (400, 1, 1, 1))
    assert_size_stride(primals_262, (1152, 1152, 1, 1), (1152, 1, 1, 1))
    assert_size_stride(primals_263, (800, 1152, 1, 1), (1152, 1, 1, 1))
    assert_size_stride(primals_264, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_265, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_266, (800, 1216, 1, 1), (1216, 1, 1, 1))
    assert_size_stride(primals_267, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_268, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_269, (800, 1280, 1, 1), (1280, 1, 1, 1))
    assert_size_stride(primals_270, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_271, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_272, (800, 1344, 1, 1), (1344, 1, 1, 1))
    assert_size_stride(primals_273, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_274, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_275, (800, 1408, 1, 1), (1408, 1, 1, 1))
    assert_size_stride(primals_276, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_277, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_278, (800, 1472, 1, 1), (1472, 1, 1, 1))
    assert_size_stride(primals_279, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_280, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_281, (800, 1536, 1, 1), (1536, 1, 1, 1))
    assert_size_stride(primals_282, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_283, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_284, (800, 1600, 1, 1), (1600, 1, 1, 1))
    assert_size_stride(primals_285, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_286, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_287, (800, 1664, 1, 1), (1664, 1, 1, 1))
    assert_size_stride(primals_288, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_289, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_290, (800, 1728, 1, 1), (1728, 1, 1, 1))
    assert_size_stride(primals_291, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_292, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_293, (800, 1792, 1, 1), (1792, 1, 1, 1))
    assert_size_stride(primals_294, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_295, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_296, (800, 1856, 1, 1), (1856, 1, 1, 1))
    assert_size_stride(primals_297, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_298, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_299, (800, 1920, 1, 1), (1920, 1, 1, 1))
    assert_size_stride(primals_300, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_301, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_302, (800, 1984, 1, 1), (1984, 1, 1, 1))
    assert_size_stride(primals_303, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_304, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_305, (800, 2048, 1, 1), (2048, 1, 1, 1))
    assert_size_stride(primals_306, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_307, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_308, (800, 2112, 1, 1), (2112, 1, 1, 1))
    assert_size_stride(primals_309, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_310, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_311, (800, 2176, 1, 1), (2176, 1, 1, 1))
    assert_size_stride(primals_312, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_313, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_314, (800, 2240, 1, 1), (2240, 1, 1, 1))
    assert_size_stride(primals_315, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_316, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_317, (800, 2304, 1, 1), (2304, 1, 1, 1))
    assert_size_stride(primals_318, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_319, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_320, (800, 2368, 1, 1), (2368, 1, 1, 1))
    assert_size_stride(primals_321, (800, 16, 3, 3), (144, 9, 3, 1))
    assert_size_stride(primals_322, (1088, 800, 1, 1), (800, 1, 1, 1))
    assert_size_stride(primals_323, (2304, 2432, 1, 1), (2432, 1, 1, 1))
    assert_size_stride(primals_324, (1600, 2432, 1, 1), (2432, 1, 1, 1))
    assert_size_stride(primals_325, (1600, 32, 3, 3), (288, 9, 3, 1))
    assert_size_stride(primals_326, (2176, 1600, 1, 1), (1600, 1, 1, 1))
    assert_size_stride(primals_327, (1600, 2432, 1, 1), (2432, 1, 1, 1))
    assert_size_stride(primals_328, (1600, 32, 3, 3), (288, 9, 3, 1))
    assert_size_stride(primals_329, (2176, 1600, 1, 1), (1600, 1, 1, 1))
    assert_size_stride(primals_330, (1600, 2560, 1, 1), (2560, 1, 1, 1))
    assert_size_stride(primals_331, (1600, 32, 3, 3), (288, 9, 3, 1))
    assert_size_stride(primals_332, (2176, 1600, 1, 1), (1600, 1, 1, 1))
    assert_size_stride(primals_333, (1000, 2688, 1, 1), (2688, 1, 1, 1))
    assert_size_stride(primals_334, (1000, ), (1, ))
    assert_size_stride(primals_335, (), ())
    assert_size_stride(primals_336, (128, ), (1, ))
    assert_size_stride(primals_337, (128, ), (1, ))
    assert_size_stride(primals_338, (), ())
    assert_size_stride(primals_339, (128, ), (1, ))
    assert_size_stride(primals_340, (128, ), (1, ))
    assert_size_stride(primals_341, (), ())
    assert_size_stride(primals_342, (128, ), (1, ))
    assert_size_stride(primals_343, (128, ), (1, ))
    assert_size_stride(primals_344, (), ())
    assert_size_stride(primals_345, (200, ), (1, ))
    assert_size_stride(primals_346, (200, ), (1, ))
    assert_size_stride(primals_347, (), ())
    assert_size_stride(primals_348, (200, ), (1, ))
    assert_size_stride(primals_349, (200, ), (1, ))
    assert_size_stride(primals_350, (), ())
    assert_size_stride(primals_351, (316, ), (1, ))
    assert_size_stride(primals_352, (316, ), (1, ))
    assert_size_stride(primals_353, (), ())
    assert_size_stride(primals_354, (200, ), (1, ))
    assert_size_stride(primals_355, (200, ), (1, ))
    assert_size_stride(primals_356, (), ())
    assert_size_stride(primals_357, (200, ), (1, ))
    assert_size_stride(primals_358, (200, ), (1, ))
    assert_size_stride(primals_359, (), ())
    assert_size_stride(primals_360, (336, ), (1, ))
    assert_size_stride(primals_361, (336, ), (1, ))
    assert_size_stride(primals_362, (), ())
    assert_size_stride(primals_363, (200, ), (1, ))
    assert_size_stride(primals_364, (200, ), (1, ))
    assert_size_stride(primals_365, (), ())
    assert_size_stride(primals_366, (200, ), (1, ))
    assert_size_stride(primals_367, (200, ), (1, ))
    assert_size_stride(primals_368, (), ())
    assert_size_stride(primals_369, (356, ), (1, ))
    assert_size_stride(primals_370, (356, ), (1, ))
    assert_size_stride(primals_371, (), ())
    assert_size_stride(primals_372, (200, ), (1, ))
    assert_size_stride(primals_373, (200, ), (1, ))
    assert_size_stride(primals_374, (), ())
    assert_size_stride(primals_375, (200, ), (1, ))
    assert_size_stride(primals_376, (200, ), (1, ))
    assert_size_stride(primals_377, (), ())
    assert_size_stride(primals_378, (376, ), (1, ))
    assert_size_stride(primals_379, (376, ), (1, ))
    assert_size_stride(primals_380, (), ())
    assert_size_stride(primals_381, (376, ), (1, ))
    assert_size_stride(primals_382, (376, ), (1, ))
    assert_size_stride(primals_383, (), ())
    assert_size_stride(primals_384, (400, ), (1, ))
    assert_size_stride(primals_385, (400, ), (1, ))
    assert_size_stride(primals_386, (), ())
    assert_size_stride(primals_387, (400, ), (1, ))
    assert_size_stride(primals_388, (400, ), (1, ))
    assert_size_stride(primals_389, (), ())
    assert_size_stride(primals_390, (704, ), (1, ))
    assert_size_stride(primals_391, (704, ), (1, ))
    assert_size_stride(primals_392, (), ())
    assert_size_stride(primals_393, (400, ), (1, ))
    assert_size_stride(primals_394, (400, ), (1, ))
    assert_size_stride(primals_395, (), ())
    assert_size_stride(primals_396, (400, ), (1, ))
    assert_size_stride(primals_397, (400, ), (1, ))
    assert_size_stride(primals_398, (), ())
    assert_size_stride(primals_399, (768, ), (1, ))
    assert_size_stride(primals_400, (768, ), (1, ))
    assert_size_stride(primals_401, (), ())
    assert_size_stride(primals_402, (400, ), (1, ))
    assert_size_stride(primals_403, (400, ), (1, ))
    assert_size_stride(primals_404, (), ())
    assert_size_stride(primals_405, (400, ), (1, ))
    assert_size_stride(primals_406, (400, ), (1, ))
    assert_size_stride(primals_407, (), ())
    assert_size_stride(primals_408, (832, ), (1, ))
    assert_size_stride(primals_409, (832, ), (1, ))
    assert_size_stride(primals_410, (), ())
    assert_size_stride(primals_411, (400, ), (1, ))
    assert_size_stride(primals_412, (400, ), (1, ))
    assert_size_stride(primals_413, (), ())
    assert_size_stride(primals_414, (400, ), (1, ))
    assert_size_stride(primals_415, (400, ), (1, ))
    assert_size_stride(primals_416, (), ())
    assert_size_stride(primals_417, (896, ), (1, ))
    assert_size_stride(primals_418, (896, ), (1, ))
    assert_size_stride(primals_419, (), ())
    assert_size_stride(primals_420, (400, ), (1, ))
    assert_size_stride(primals_421, (400, ), (1, ))
    assert_size_stride(primals_422, (), ())
    assert_size_stride(primals_423, (400, ), (1, ))
    assert_size_stride(primals_424, (400, ), (1, ))
    assert_size_stride(primals_425, (), ())
    assert_size_stride(primals_426, (960, ), (1, ))
    assert_size_stride(primals_427, (960, ), (1, ))
    assert_size_stride(primals_428, (), ())
    assert_size_stride(primals_429, (400, ), (1, ))
    assert_size_stride(primals_430, (400, ), (1, ))
    assert_size_stride(primals_431, (), ())
    assert_size_stride(primals_432, (400, ), (1, ))
    assert_size_stride(primals_433, (400, ), (1, ))
    assert_size_stride(primals_434, (), ())
    assert_size_stride(primals_435, (1024, ), (1, ))
    assert_size_stride(primals_436, (1024, ), (1, ))
    assert_size_stride(primals_437, (), ())
    assert_size_stride(primals_438, (400, ), (1, ))
    assert_size_stride(primals_439, (400, ), (1, ))
    assert_size_stride(primals_440, (), ())
    assert_size_stride(primals_441, (400, ), (1, ))
    assert_size_stride(primals_442, (400, ), (1, ))
    assert_size_stride(primals_443, (), ())
    assert_size_stride(primals_444, (1088, ), (1, ))
    assert_size_stride(primals_445, (1088, ), (1, ))
    assert_size_stride(primals_446, (), ())
    assert_size_stride(primals_447, (400, ), (1, ))
    assert_size_stride(primals_448, (400, ), (1, ))
    assert_size_stride(primals_449, (), ())
    assert_size_stride(primals_450, (400, ), (1, ))
    assert_size_stride(primals_451, (400, ), (1, ))
    assert_size_stride(primals_452, (), ())
    assert_size_stride(primals_453, (1152, ), (1, ))
    assert_size_stride(primals_454, (1152, ), (1, ))
    assert_size_stride(primals_455, (), ())
    assert_size_stride(primals_456, (1152, ), (1, ))
    assert_size_stride(primals_457, (1152, ), (1, ))
    assert_size_stride(primals_458, (), ())
    assert_size_stride(primals_459, (800, ), (1, ))
    assert_size_stride(primals_460, (800, ), (1, ))
    assert_size_stride(primals_461, (), ())
    assert_size_stride(primals_462, (800, ), (1, ))
    assert_size_stride(primals_463, (800, ), (1, ))
    assert_size_stride(primals_464, (), ())
    assert_size_stride(primals_465, (1216, ), (1, ))
    assert_size_stride(primals_466, (1216, ), (1, ))
    assert_size_stride(primals_467, (), ())
    assert_size_stride(primals_468, (800, ), (1, ))
    assert_size_stride(primals_469, (800, ), (1, ))
    assert_size_stride(primals_470, (), ())
    assert_size_stride(primals_471, (800, ), (1, ))
    assert_size_stride(primals_472, (800, ), (1, ))
    assert_size_stride(primals_473, (), ())
    assert_size_stride(primals_474, (1280, ), (1, ))
    assert_size_stride(primals_475, (1280, ), (1, ))
    assert_size_stride(primals_476, (), ())
    assert_size_stride(primals_477, (800, ), (1, ))
    assert_size_stride(primals_478, (800, ), (1, ))
    assert_size_stride(primals_479, (), ())
    assert_size_stride(primals_480, (800, ), (1, ))
    assert_size_stride(primals_481, (800, ), (1, ))
    assert_size_stride(primals_482, (), ())
    assert_size_stride(primals_483, (1344, ), (1, ))
    assert_size_stride(primals_484, (1344, ), (1, ))
    assert_size_stride(primals_485, (), ())
    assert_size_stride(primals_486, (800, ), (1, ))
    assert_size_stride(primals_487, (800, ), (1, ))
    assert_size_stride(primals_488, (), ())
    assert_size_stride(primals_489, (800, ), (1, ))
    assert_size_stride(primals_490, (800, ), (1, ))
    assert_size_stride(primals_491, (), ())
    assert_size_stride(primals_492, (1408, ), (1, ))
    assert_size_stride(primals_493, (1408, ), (1, ))
    assert_size_stride(primals_494, (), ())
    assert_size_stride(primals_495, (800, ), (1, ))
    assert_size_stride(primals_496, (800, ), (1, ))
    assert_size_stride(primals_497, (), ())
    assert_size_stride(primals_498, (800, ), (1, ))
    assert_size_stride(primals_499, (800, ), (1, ))
    assert_size_stride(primals_500, (), ())
    assert_size_stride(primals_501, (1472, ), (1, ))
    assert_size_stride(primals_502, (1472, ), (1, ))
    assert_size_stride(primals_503, (), ())
    assert_size_stride(primals_504, (800, ), (1, ))
    assert_size_stride(primals_505, (800, ), (1, ))
    assert_size_stride(primals_506, (), ())
    assert_size_stride(primals_507, (800, ), (1, ))
    assert_size_stride(primals_508, (800, ), (1, ))
    assert_size_stride(primals_509, (), ())
    assert_size_stride(primals_510, (1536, ), (1, ))
    assert_size_stride(primals_511, (1536, ), (1, ))
    assert_size_stride(primals_512, (), ())
    assert_size_stride(primals_513, (800, ), (1, ))
    assert_size_stride(primals_514, (800, ), (1, ))
    assert_size_stride(primals_515, (), ())
    assert_size_stride(primals_516, (800, ), (1, ))
    assert_size_stride(primals_517, (800, ), (1, ))
    assert_size_stride(primals_518, (), ())
    assert_size_stride(primals_519, (1600, ), (1, ))
    assert_size_stride(primals_520, (1600, ), (1, ))
    assert_size_stride(primals_521, (), ())
    assert_size_stride(primals_522, (800, ), (1, ))
    assert_size_stride(primals_523, (800, ), (1, ))
    assert_size_stride(primals_524, (), ())
    assert_size_stride(primals_525, (800, ), (1, ))
    assert_size_stride(primals_526, (800, ), (1, ))
    assert_size_stride(primals_527, (), ())
    assert_size_stride(primals_528, (1664, ), (1, ))
    assert_size_stride(primals_529, (1664, ), (1, ))
    assert_size_stride(primals_530, (), ())
    assert_size_stride(primals_531, (800, ), (1, ))
    assert_size_stride(primals_532, (800, ), (1, ))
    assert_size_stride(primals_533, (), ())
    assert_size_stride(primals_534, (800, ), (1, ))
    assert_size_stride(primals_535, (800, ), (1, ))
    assert_size_stride(primals_536, (), ())
    assert_size_stride(primals_537, (1728, ), (1, ))
    assert_size_stride(primals_538, (1728, ), (1, ))
    assert_size_stride(primals_539, (), ())
    assert_size_stride(primals_540, (800, ), (1, ))
    assert_size_stride(primals_541, (800, ), (1, ))
    assert_size_stride(primals_542, (), ())
    assert_size_stride(primals_543, (800, ), (1, ))
    assert_size_stride(primals_544, (800, ), (1, ))
    assert_size_stride(primals_545, (), ())
    assert_size_stride(primals_546, (1792, ), (1, ))
    assert_size_stride(primals_547, (1792, ), (1, ))
    assert_size_stride(primals_548, (), ())
    assert_size_stride(primals_549, (800, ), (1, ))
    assert_size_stride(primals_550, (800, ), (1, ))
    assert_size_stride(primals_551, (), ())
    assert_size_stride(primals_552, (800, ), (1, ))
    assert_size_stride(primals_553, (800, ), (1, ))
    assert_size_stride(primals_554, (), ())
    assert_size_stride(primals_555, (1856, ), (1, ))
    assert_size_stride(primals_556, (1856, ), (1, ))
    assert_size_stride(primals_557, (), ())
    assert_size_stride(primals_558, (800, ), (1, ))
    assert_size_stride(primals_559, (800, ), (1, ))
    assert_size_stride(primals_560, (), ())
    assert_size_stride(primals_561, (800, ), (1, ))
    assert_size_stride(primals_562, (800, ), (1, ))
    assert_size_stride(primals_563, (), ())
    assert_size_stride(primals_564, (1920, ), (1, ))
    assert_size_stride(primals_565, (1920, ), (1, ))
    assert_size_stride(primals_566, (), ())
    assert_size_stride(primals_567, (800, ), (1, ))
    assert_size_stride(primals_568, (800, ), (1, ))
    assert_size_stride(primals_569, (), ())
    assert_size_stride(primals_570, (800, ), (1, ))
    assert_size_stride(primals_571, (800, ), (1, ))
    assert_size_stride(primals_572, (), ())
    assert_size_stride(primals_573, (1984, ), (1, ))
    assert_size_stride(primals_574, (1984, ), (1, ))
    assert_size_stride(primals_575, (), ())
    assert_size_stride(primals_576, (800, ), (1, ))
    assert_size_stride(primals_577, (800, ), (1, ))
    assert_size_stride(primals_578, (), ())
    assert_size_stride(primals_579, (800, ), (1, ))
    assert_size_stride(primals_580, (800, ), (1, ))
    assert_size_stride(primals_581, (), ())
    assert_size_stride(primals_582, (2048, ), (1, ))
    assert_size_stride(primals_583, (2048, ), (1, ))
    assert_size_stride(primals_584, (), ())
    assert_size_stride(primals_585, (800, ), (1, ))
    assert_size_stride(primals_586, (800, ), (1, ))
    assert_size_stride(primals_587, (), ())
    assert_size_stride(primals_588, (800, ), (1, ))
    assert_size_stride(primals_589, (800, ), (1, ))
    assert_size_stride(primals_590, (), ())
    assert_size_stride(primals_591, (2112, ), (1, ))
    assert_size_stride(primals_592, (2112, ), (1, ))
    assert_size_stride(primals_593, (), ())
    assert_size_stride(primals_594, (800, ), (1, ))
    assert_size_stride(primals_595, (800, ), (1, ))
    assert_size_stride(primals_596, (), ())
    assert_size_stride(primals_597, (800, ), (1, ))
    assert_size_stride(primals_598, (800, ), (1, ))
    assert_size_stride(primals_599, (), ())
    assert_size_stride(primals_600, (2176, ), (1, ))
    assert_size_stride(primals_601, (2176, ), (1, ))
    assert_size_stride(primals_602, (), ())
    assert_size_stride(primals_603, (800, ), (1, ))
    assert_size_stride(primals_604, (800, ), (1, ))
    assert_size_stride(primals_605, (), ())
    assert_size_stride(primals_606, (800, ), (1, ))
    assert_size_stride(primals_607, (800, ), (1, ))
    assert_size_stride(primals_608, (), ())
    assert_size_stride(primals_609, (2240, ), (1, ))
    assert_size_stride(primals_610, (2240, ), (1, ))
    assert_size_stride(primals_611, (), ())
    assert_size_stride(primals_612, (800, ), (1, ))
    assert_size_stride(primals_613, (800, ), (1, ))
    assert_size_stride(primals_614, (), ())
    assert_size_stride(primals_615, (800, ), (1, ))
    assert_size_stride(primals_616, (800, ), (1, ))
    assert_size_stride(primals_617, (), ())
    assert_size_stride(primals_618, (2304, ), (1, ))
    assert_size_stride(primals_619, (2304, ), (1, ))
    assert_size_stride(primals_620, (), ())
    assert_size_stride(primals_621, (800, ), (1, ))
    assert_size_stride(primals_622, (800, ), (1, ))
    assert_size_stride(primals_623, (), ())
    assert_size_stride(primals_624, (800, ), (1, ))
    assert_size_stride(primals_625, (800, ), (1, ))
    assert_size_stride(primals_626, (), ())
    assert_size_stride(primals_627, (2368, ), (1, ))
    assert_size_stride(primals_628, (2368, ), (1, ))
    assert_size_stride(primals_629, (), ())
    assert_size_stride(primals_630, (800, ), (1, ))
    assert_size_stride(primals_631, (800, ), (1, ))
    assert_size_stride(primals_632, (), ())
    assert_size_stride(primals_633, (800, ), (1, ))
    assert_size_stride(primals_634, (800, ), (1, ))
    assert_size_stride(primals_635, (), ())
    assert_size_stride(primals_636, (2432, ), (1, ))
    assert_size_stride(primals_637, (2432, ), (1, ))
    assert_size_stride(primals_638, (), ())
    assert_size_stride(primals_639, (2432, ), (1, ))
    assert_size_stride(primals_640, (2432, ), (1, ))
    assert_size_stride(primals_641, (), ())
    assert_size_stride(primals_642, (1600, ), (1, ))
    assert_size_stride(primals_643, (1600, ), (1, ))
    assert_size_stride(primals_644, (), ())
    assert_size_stride(primals_645, (1600, ), (1, ))
    assert_size_stride(primals_646, (1600, ), (1, ))
    assert_size_stride(primals_647, (), ())
    assert_size_stride(primals_648, (2432, ), (1, ))
    assert_size_stride(primals_649, (2432, ), (1, ))
    assert_size_stride(primals_650, (), ())
    assert_size_stride(primals_651, (1600, ), (1, ))
    assert_size_stride(primals_652, (1600, ), (1, ))
    assert_size_stride(primals_653, (), ())
    assert_size_stride(primals_654, (1600, ), (1, ))
    assert_size_stride(primals_655, (1600, ), (1, ))
    assert_size_stride(primals_656, (), ())
    assert_size_stride(primals_657, (2560, ), (1, ))
    assert_size_stride(primals_658, (2560, ), (1, ))
    assert_size_stride(primals_659, (), ())
    assert_size_stride(primals_660, (1600, ), (1, ))
    assert_size_stride(primals_661, (1600, ), (1, ))
    assert_size_stride(primals_662, (), ())
    assert_size_stride(primals_663, (1600, ), (1, ))
    assert_size_stride(primals_664, (1600, ), (1, ))
    assert_size_stride(primals_665, (), ())
    assert_size_stride(primals_666, (2688, ), (1, ))
    assert_size_stride(primals_667, (2688, ), (1, ))
    assert_size_stride(primals_668, (8, 3, 224, 224), (150528, 50176, 224, 1))
    buf0 = empty_strided((128, 3, 7, 7), (147, 1, 21, 3), device='cpu', dtype=torch.float32)
    buf1 = empty_strided((200, 4, 3, 3), (36, 1, 12, 4), device='cpu', dtype=torch.float32)
    buf2 = empty_strided((200, 4, 3, 3), (36, 1, 12, 4), device='cpu', dtype=torch.float32)
    buf3 = empty_strided((200, 4, 3, 3), (36, 1, 12, 4), device='cpu', dtype=torch.float32)
    buf4 = empty_strided((200, 4, 3, 3), (36, 1, 12, 4), device='cpu', dtype=torch.float32)
    buf5 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf6 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf7 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf8 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf9 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf10 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf11 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf12 = empty_strided((400, 8, 3, 3), (72, 1, 24, 8), device='cpu', dtype=torch.float32)
    buf13 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf14 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf15 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf16 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf17 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf18 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf19 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf20 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf21 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf22 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf23 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf24 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf25 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf26 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf27 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf28 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf29 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf30 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf31 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf32 = empty_strided((800, 16, 3, 3), (144, 1, 48, 16), device='cpu', dtype=torch.float32)
    buf33 = empty_strided((1600, 32, 3, 3), (288, 1, 96, 32), device='cpu', dtype=torch.float32)
    buf34 = empty_strided((1600, 32, 3, 3), (288, 1, 96, 32), device='cpu', dtype=torch.float32)
    buf35 = empty_strided((1600, 32, 3, 3), (288, 1, 96, 32), device='cpu', dtype=torch.float32)
    buf36 = empty_strided((8, 3, 224, 224), (150528, 1, 672, 3), device='cpu', dtype=torch.float32)
    cpp_fused_0(c_void_p(primals_223.data_ptr()), c_void_p(primals_226.data_ptr()), c_void_p(primals_229.data_ptr()), c_void_p(primals_232.data_ptr()), c_void_p(primals_235.data_ptr()), c_void_p(primals_239.data_ptr()), c_void_p(primals_242.data_ptr()), c_void_p(primals_245.data_ptr()), c_void_p(primals_248.data_ptr()), c_void_p(primals_251.data_ptr()), c_void_p(primals_254.data_ptr()), c_void_p(primals_257.data_ptr()), c_void_p(primals_260.data_ptr()), c_void_p(primals_264.data_ptr()), c_void_p(primals_267.data_ptr()), c_void_p(primals_270.data_ptr()), c_void_p(primals_273.data_ptr()), c_void_p(primals_276.data_ptr()), c_void_p(primals_279.data_ptr()), c_void_p(primals_282.data_ptr()), c_void_p(primals_285.data_ptr()), c_void_p(primals_288.data_ptr()), c_void_p(primals_291.data_ptr()), c_void_p(primals_294.data_ptr()), c_void_p(primals_297.data_ptr()), c_void_p(primals_300.data_ptr()), c_void_p(primals_303.data_ptr()), c_void_p(primals_306.data_ptr()), c_void_p(primals_309.data_ptr()), c_void_p(primals_312.data_ptr()), c_void_p(primals_315.data_ptr()), c_void_p(primals_318.data_ptr()), c_void_p(primals_321.data_ptr()), c_void_p(primals_325.data_ptr()), c_void_p(primals_328.data_ptr()), c_void_p(primals_331.data_ptr()), c_void_p(primals_668.data_ptr()), c_void_p(buf0.data_ptr()), c_void_p(buf1.data_ptr()), c_void_p(buf2.data_ptr()), c_void_p(buf3.data_ptr()), c_void_p(buf4.data_ptr()), c_void_p(buf5.data_ptr()), c_void_p(buf6.data_ptr()), c_void_p(buf7.data_ptr()), c_void_p(buf8.data_ptr()), c_void_p(buf9.data_ptr()), c_void_p(buf10.data_ptr()), c_void_p(buf11.data_ptr()), c_void_p(buf12.data_ptr()), c_void_p(buf13.data_ptr()), c_void_p(buf14.data_ptr()), c_void_p(buf15.data_ptr()), c_void_p(buf16.data_ptr()), c_void_p(buf17.data_ptr()), c_void_p(buf18.data_ptr()), c_void_p(buf19.data_ptr()), c_void_p(buf20.data_ptr()), c_void_p(buf21.data_ptr()), c_void_p(buf22.data_ptr()), c_void_p(buf23.data_ptr()), c_void_p(buf24.data_ptr()), c_void_p(buf25.data_ptr()), c_void_p(buf26.data_ptr()), c_void_p(buf27.data_ptr()), c_void_p(buf28.data_ptr()), c_void_p(buf29.data_ptr()), c_void_p(buf30.data_ptr()), c_void_p(buf31.data_ptr()), c_void_p(buf32.data_ptr()), c_void_p(buf33.data_ptr()), c_void_p(buf34.data_ptr()), c_void_p(buf35.data_ptr()), c_void_p(buf36.data_ptr()))
    del primals_223
    del primals_226
    del primals_229
    del primals_232
    del primals_235
    del primals_239
    del primals_242
    del primals_245
    del primals_248
    del primals_251
    del primals_254
    del primals_257
    del primals_260
    del primals_264
    del primals_267
    del primals_270
    del primals_273
    del primals_276
    del primals_279
    del primals_282
    del primals_285
    del primals_288
    del primals_291
    del primals_294
    del primals_297
    del primals_300
    del primals_303
    del primals_306
    del primals_309
    del primals_312
    del primals_315
    del primals_318
    del primals_321
    del primals_325
    del primals_328
    del primals_331
    del primals_668
    # Source Nodes: [x], Original ATen: [aten.convolution]
    buf37 = extern_kernels.convolution(buf36, buf0, stride=(2, 2), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf37, (8, 128, 112, 112), (1605632, 1, 14336, 128))
    buf38 = empty_strided((1, 128, 1, 1), (128, 1, 128, 128), device='cpu', dtype=torch.float32)
    buf39 = empty_strided((1, 128, 1, 1), (128, 1, 128, 128), device='cpu', dtype=torch.float32)
    buf41 = empty((128, ), device='cpu', dtype=torch.float32)
    buf42 = empty_strided((8, 128, 112, 112), (1605632, 1, 14336, 128), device='cpu', dtype=torch.float32)
    buf43 = empty_strided((8, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    buf44 = empty_strided((8, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.int64)
    buf45 = empty_strided((1, 128, 1, 1), (128, 1, 128, 128), device='cpu', dtype=torch.float32)
    buf46 = empty_strided((1, 128, 1, 1), (128, 1, 128, 128), device='cpu', dtype=torch.float32)
    buf48 = empty((128, ), device='cpu', dtype=torch.float32)
    buf49 = empty_strided((8, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    buf51 = empty_strided((8, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_max_pool2d_with_indices_relu_1(c_void_p(buf37.data_ptr()), c_void_p(primals_1.data_ptr()), c_void_p(primals_2.data_ptr()), c_void_p(primals_3.data_ptr()), c_void_p(primals_4.data_ptr()), c_void_p(primals_5.data_ptr()), c_void_p(primals_6.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(buf39.data_ptr()), c_void_p(buf41.data_ptr()), c_void_p(buf42.data_ptr()), c_void_p(buf43.data_ptr()), c_void_p(buf44.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(buf48.data_ptr()), c_void_p(buf49.data_ptr()), c_void_p(buf51.data_ptr()))
    del primals_2
    del primals_4
    del primals_6
    # Source Nodes: [x_s], Original ATen: [aten.convolution]
    buf50 = extern_kernels.convolution(buf49, primals_224, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf50, (8, 296, 56, 56), (928256, 1, 16576, 296))
    # Source Nodes: [x_in_1], Original ATen: [aten.convolution]
    buf52 = extern_kernels.convolution(buf51, primals_225, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf52, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf53 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf54 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf56 = empty((200, ), device='cpu', dtype=torch.float32)
    buf57 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_2(c_void_p(buf52.data_ptr()), c_void_p(primals_7.data_ptr()), c_void_p(primals_8.data_ptr()), c_void_p(buf53.data_ptr()), c_void_p(buf54.data_ptr()), c_void_p(buf56.data_ptr()), c_void_p(buf57.data_ptr()))
    del primals_8
    # Source Nodes: [x_in_2], Original ATen: [aten.convolution]
    buf58 = extern_kernels.convolution(buf57, buf1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf58, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf59 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf60 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf62 = empty((200, ), device='cpu', dtype=torch.float32)
    buf63 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_3(c_void_p(buf58.data_ptr()), c_void_p(primals_9.data_ptr()), c_void_p(primals_10.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(buf60.data_ptr()), c_void_p(buf62.data_ptr()), c_void_p(buf63.data_ptr()))
    del primals_10
    # Source Nodes: [x_in_3], Original ATen: [aten.convolution]
    buf64 = extern_kernels.convolution(buf63, primals_227, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf64, (8, 276, 56, 56), (865536, 1, 15456, 276))
    buf65 = empty_strided((8, 316, 56, 56), (990976, 1, 17696, 316), device='cpu', dtype=torch.float32)
    buf66 = empty_strided((1, 316, 1, 1), (316, 1, 316, 316), device='cpu', dtype=torch.float32)
    buf67 = empty_strided((1, 316, 1, 1), (316, 1, 316, 316), device='cpu', dtype=torch.float32)
    buf69 = empty((316, ), device='cpu', dtype=torch.float32)
    buf70 = empty_strided((8, 316, 56, 56), (990976, 1, 17696, 316), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_4(c_void_p(buf50.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(primals_11.data_ptr()), c_void_p(primals_12.data_ptr()), c_void_p(buf65.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(buf67.data_ptr()), c_void_p(buf69.data_ptr()), c_void_p(buf70.data_ptr()))
    del primals_12
    # Source Nodes: [x_in_5], Original ATen: [aten.convolution]
    buf71 = extern_kernels.convolution(buf70, primals_228, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf71, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf72 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf73 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf75 = empty((200, ), device='cpu', dtype=torch.float32)
    buf76 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_5(c_void_p(buf71.data_ptr()), c_void_p(primals_13.data_ptr()), c_void_p(primals_14.data_ptr()), c_void_p(buf72.data_ptr()), c_void_p(buf73.data_ptr()), c_void_p(buf75.data_ptr()), c_void_p(buf76.data_ptr()))
    del primals_14
    # Source Nodes: [x_in_6], Original ATen: [aten.convolution]
    buf77 = extern_kernels.convolution(buf76, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf77, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf78 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf79 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf81 = empty((200, ), device='cpu', dtype=torch.float32)
    buf82 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_6(c_void_p(buf77.data_ptr()), c_void_p(primals_15.data_ptr()), c_void_p(primals_16.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(buf79.data_ptr()), c_void_p(buf81.data_ptr()), c_void_p(buf82.data_ptr()))
    del primals_16
    # Source Nodes: [x_in_7], Original ATen: [aten.convolution]
    buf83 = extern_kernels.convolution(buf82, primals_230, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf83, (8, 276, 56, 56), (865536, 1, 15456, 276))
    buf84 = empty_strided((8, 336, 56, 56), (1053696, 1, 18816, 336), device='cpu', dtype=torch.float32)
    buf85 = empty_strided((1, 336, 1, 1), (336, 1, 336, 336), device='cpu', dtype=torch.float32)
    buf86 = empty_strided((1, 336, 1, 1), (336, 1, 336, 336), device='cpu', dtype=torch.float32)
    buf88 = empty((336, ), device='cpu', dtype=torch.float32)
    buf89 = empty_strided((8, 336, 56, 56), (1053696, 1, 18816, 336), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_7(c_void_p(buf50.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf83.data_ptr()), c_void_p(primals_17.data_ptr()), c_void_p(primals_18.data_ptr()), c_void_p(buf84.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(buf86.data_ptr()), c_void_p(buf88.data_ptr()), c_void_p(buf89.data_ptr()))
    del primals_18
    # Source Nodes: [x_in_9], Original ATen: [aten.convolution]
    buf90 = extern_kernels.convolution(buf89, primals_231, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf90, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf91 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf92 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf94 = empty((200, ), device='cpu', dtype=torch.float32)
    buf95 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_8(c_void_p(buf90.data_ptr()), c_void_p(primals_19.data_ptr()), c_void_p(primals_20.data_ptr()), c_void_p(buf91.data_ptr()), c_void_p(buf92.data_ptr()), c_void_p(buf94.data_ptr()), c_void_p(buf95.data_ptr()))
    del primals_20
    # Source Nodes: [x_in_10], Original ATen: [aten.convolution]
    buf96 = extern_kernels.convolution(buf95, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf96, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf97 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf98 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf100 = empty((200, ), device='cpu', dtype=torch.float32)
    buf101 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_9(c_void_p(buf96.data_ptr()), c_void_p(primals_21.data_ptr()), c_void_p(primals_22.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(buf98.data_ptr()), c_void_p(buf100.data_ptr()), c_void_p(buf101.data_ptr()))
    del primals_22
    # Source Nodes: [x_in_11], Original ATen: [aten.convolution]
    buf102 = extern_kernels.convolution(buf101, primals_233, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf102, (8, 276, 56, 56), (865536, 1, 15456, 276))
    buf103 = empty_strided((8, 356, 56, 56), (1116416, 1, 19936, 356), device='cpu', dtype=torch.float32)
    buf104 = empty_strided((1, 356, 1, 1), (356, 1, 356, 356), device='cpu', dtype=torch.float32)
    buf105 = empty_strided((1, 356, 1, 1), (356, 1, 356, 356), device='cpu', dtype=torch.float32)
    buf107 = empty((356, ), device='cpu', dtype=torch.float32)
    buf108 = empty_strided((8, 356, 56, 56), (1116416, 1, 19936, 356), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_10(c_void_p(buf50.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf83.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(primals_23.data_ptr()), c_void_p(primals_24.data_ptr()), c_void_p(buf103.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(buf105.data_ptr()), c_void_p(buf107.data_ptr()), c_void_p(buf108.data_ptr()))
    del primals_24
    # Source Nodes: [x_in_13], Original ATen: [aten.convolution]
    buf109 = extern_kernels.convolution(buf108, primals_234, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf109, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf110 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf111 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf113 = empty((200, ), device='cpu', dtype=torch.float32)
    buf114 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_11(c_void_p(buf109.data_ptr()), c_void_p(primals_25.data_ptr()), c_void_p(primals_26.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(buf111.data_ptr()), c_void_p(buf113.data_ptr()), c_void_p(buf114.data_ptr()))
    del primals_26
    # Source Nodes: [x_in_14], Original ATen: [aten.convolution]
    buf115 = extern_kernels.convolution(buf114, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf115, (8, 200, 56, 56), (627200, 1, 11200, 200))
    buf116 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf117 = empty_strided((1, 200, 1, 1), (200, 1, 200, 200), device='cpu', dtype=torch.float32)
    buf119 = empty((200, ), device='cpu', dtype=torch.float32)
    buf120 = empty_strided((8, 200, 56, 56), (627200, 1, 11200, 200), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_12(c_void_p(buf115.data_ptr()), c_void_p(primals_27.data_ptr()), c_void_p(primals_28.data_ptr()), c_void_p(buf116.data_ptr()), c_void_p(buf117.data_ptr()), c_void_p(buf119.data_ptr()), c_void_p(buf120.data_ptr()))
    del primals_28
    # Source Nodes: [x_in_15], Original ATen: [aten.convolution]
    buf121 = extern_kernels.convolution(buf120, primals_236, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf121, (8, 276, 56, 56), (865536, 1, 15456, 276))
    buf124 = empty((8, 376, 56, 56), device='cpu', dtype=torch.float32)
    buf122 = reinterpret_tensor(buf124, (8, 120, 56, 56), (1179136, 3136, 56, 1), 802816)  # alias
    buf123 = reinterpret_tensor(buf124, (8, 256, 56, 56), (1179136, 3136, 56, 1), 0)  # alias
    buf125 = empty_strided((8, 376, 56, 56), (1179136, 1, 21056, 376), device='cpu', dtype=torch.float32)
    buf126 = empty_strided((1, 376, 1, 1), (376, 1, 376, 376), device='cpu', dtype=torch.float32)
    buf127 = empty_strided((1, 376, 1, 1), (376, 1, 376, 376), device='cpu', dtype=torch.float32)
    buf129 = empty((376, ), device='cpu', dtype=torch.float32)
    buf130 = empty_strided((8, 376, 56, 56), (1179136, 1, 21056, 376), device='cpu', dtype=torch.float32)
    buf132 = empty_strided((8, 376, 56, 56), (1179136, 1, 21056, 376), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_13(c_void_p(buf50.data_ptr()), c_void_p(buf64.data_ptr()), c_void_p(buf83.data_ptr()), c_void_p(buf102.data_ptr()), c_void_p(buf121.data_ptr()), c_void_p(buf124.data_ptr()), c_void_p(primals_29.data_ptr()), c_void_p(primals_30.data_ptr()), c_void_p(primals_31.data_ptr()), c_void_p(primals_32.data_ptr()), c_void_p(buf122.data_ptr()), c_void_p(buf123.data_ptr()), c_void_p(buf125.data_ptr()), c_void_p(buf126.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(buf129.data_ptr()), c_void_p(buf130.data_ptr()), c_void_p(buf132.data_ptr()))
    del buf102
    del buf121
    del buf122
    del buf123
    del buf124
    del buf50
    del buf64
    del buf83
    del primals_30
    del primals_32
    # Source Nodes: [x_s_1], Original ATen: [aten.convolution]
    buf131 = extern_kernels.convolution(buf130, primals_237, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf131, (8, 640, 28, 28), (501760, 1, 17920, 640))
    # Source Nodes: [x_in_17], Original ATen: [aten.convolution]
    buf133 = extern_kernels.convolution(buf132, primals_238, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf133, (8, 400, 56, 56), (1254400, 1, 22400, 400))
    buf134 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf135 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf137 = empty((400, ), device='cpu', dtype=torch.float32)
    buf138 = empty_strided((8, 400, 56, 56), (1254400, 1, 22400, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_14(c_void_p(buf133.data_ptr()), c_void_p(primals_33.data_ptr()), c_void_p(primals_34.data_ptr()), c_void_p(buf134.data_ptr()), c_void_p(buf135.data_ptr()), c_void_p(buf137.data_ptr()), c_void_p(buf138.data_ptr()))
    del primals_34
    # Source Nodes: [x_in_18], Original ATen: [aten.convolution]
    buf139 = extern_kernels.convolution(buf138, buf5, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf139, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf140 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf141 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf143 = empty((400, ), device='cpu', dtype=torch.float32)
    buf144 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_15(c_void_p(buf139.data_ptr()), c_void_p(primals_35.data_ptr()), c_void_p(primals_36.data_ptr()), c_void_p(buf140.data_ptr()), c_void_p(buf141.data_ptr()), c_void_p(buf143.data_ptr()), c_void_p(buf144.data_ptr()))
    del primals_36
    # Source Nodes: [x_in_19], Original ATen: [aten.convolution]
    buf145 = extern_kernels.convolution(buf144, primals_240, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf145, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf146 = empty_strided((8, 704, 28, 28), (551936, 1, 19712, 704), device='cpu', dtype=torch.float32)
    buf147 = empty_strided((1, 704, 1, 1), (704, 1, 704, 704), device='cpu', dtype=torch.float32)
    buf148 = empty_strided((1, 704, 1, 1), (704, 1, 704, 704), device='cpu', dtype=torch.float32)
    buf150 = empty((704, ), device='cpu', dtype=torch.float32)
    buf151 = empty_strided((8, 704, 28, 28), (551936, 1, 19712, 704), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_16(c_void_p(buf131.data_ptr()), c_void_p(buf145.data_ptr()), c_void_p(primals_37.data_ptr()), c_void_p(primals_38.data_ptr()), c_void_p(buf146.data_ptr()), c_void_p(buf147.data_ptr()), c_void_p(buf148.data_ptr()), c_void_p(buf150.data_ptr()), c_void_p(buf151.data_ptr()))
    del primals_38
    # Source Nodes: [x_in_21], Original ATen: [aten.convolution]
    buf152 = extern_kernels.convolution(buf151, primals_241, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf152, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf153 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf154 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf156 = empty((400, ), device='cpu', dtype=torch.float32)
    buf157 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_17(c_void_p(buf152.data_ptr()), c_void_p(primals_39.data_ptr()), c_void_p(primals_40.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(buf154.data_ptr()), c_void_p(buf156.data_ptr()), c_void_p(buf157.data_ptr()))
    del primals_40
    # Source Nodes: [x_in_22], Original ATen: [aten.convolution]
    buf158 = extern_kernels.convolution(buf157, buf6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf158, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf159 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf160 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf162 = empty((400, ), device='cpu', dtype=torch.float32)
    buf163 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_18(c_void_p(buf158.data_ptr()), c_void_p(primals_41.data_ptr()), c_void_p(primals_42.data_ptr()), c_void_p(buf159.data_ptr()), c_void_p(buf160.data_ptr()), c_void_p(buf162.data_ptr()), c_void_p(buf163.data_ptr()))
    del primals_42
    # Source Nodes: [x_in_23], Original ATen: [aten.convolution]
    buf164 = extern_kernels.convolution(buf163, primals_243, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf164, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf165 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    buf166 = empty_strided((1, 768, 1, 1), (768, 1, 768, 768), device='cpu', dtype=torch.float32)
    buf167 = empty_strided((1, 768, 1, 1), (768, 1, 768, 768), device='cpu', dtype=torch.float32)
    buf169 = empty((768, ), device='cpu', dtype=torch.float32)
    buf170 = empty_strided((8, 768, 28, 28), (602112, 1, 21504, 768), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_19(c_void_p(buf131.data_ptr()), c_void_p(buf145.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(primals_43.data_ptr()), c_void_p(primals_44.data_ptr()), c_void_p(buf165.data_ptr()), c_void_p(buf166.data_ptr()), c_void_p(buf167.data_ptr()), c_void_p(buf169.data_ptr()), c_void_p(buf170.data_ptr()))
    del primals_44
    # Source Nodes: [x_in_25], Original ATen: [aten.convolution]
    buf171 = extern_kernels.convolution(buf170, primals_244, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf171, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf172 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf173 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf175 = empty((400, ), device='cpu', dtype=torch.float32)
    buf176 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_20(c_void_p(buf171.data_ptr()), c_void_p(primals_45.data_ptr()), c_void_p(primals_46.data_ptr()), c_void_p(buf172.data_ptr()), c_void_p(buf173.data_ptr()), c_void_p(buf175.data_ptr()), c_void_p(buf176.data_ptr()))
    del primals_46
    # Source Nodes: [x_in_26], Original ATen: [aten.convolution]
    buf177 = extern_kernels.convolution(buf176, buf7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf177, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf178 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf179 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf181 = empty((400, ), device='cpu', dtype=torch.float32)
    buf182 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_21(c_void_p(buf177.data_ptr()), c_void_p(primals_47.data_ptr()), c_void_p(primals_48.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(buf179.data_ptr()), c_void_p(buf181.data_ptr()), c_void_p(buf182.data_ptr()))
    del primals_48
    # Source Nodes: [x_in_27], Original ATen: [aten.convolution]
    buf183 = extern_kernels.convolution(buf182, primals_246, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf183, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf184 = empty_strided((8, 832, 28, 28), (652288, 1, 23296, 832), device='cpu', dtype=torch.float32)
    buf185 = empty_strided((1, 832, 1, 1), (832, 1, 832, 832), device='cpu', dtype=torch.float32)
    buf186 = empty_strided((1, 832, 1, 1), (832, 1, 832, 832), device='cpu', dtype=torch.float32)
    buf188 = empty((832, ), device='cpu', dtype=torch.float32)
    buf189 = empty_strided((8, 832, 28, 28), (652288, 1, 23296, 832), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_22(c_void_p(buf131.data_ptr()), c_void_p(buf145.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(buf183.data_ptr()), c_void_p(primals_49.data_ptr()), c_void_p(primals_50.data_ptr()), c_void_p(buf184.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(buf186.data_ptr()), c_void_p(buf188.data_ptr()), c_void_p(buf189.data_ptr()))
    del primals_50
    # Source Nodes: [x_in_29], Original ATen: [aten.convolution]
    buf190 = extern_kernels.convolution(buf189, primals_247, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf190, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf191 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf192 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf194 = empty((400, ), device='cpu', dtype=torch.float32)
    buf195 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_23(c_void_p(buf190.data_ptr()), c_void_p(primals_51.data_ptr()), c_void_p(primals_52.data_ptr()), c_void_p(buf191.data_ptr()), c_void_p(buf192.data_ptr()), c_void_p(buf194.data_ptr()), c_void_p(buf195.data_ptr()))
    del primals_52
    # Source Nodes: [x_in_30], Original ATen: [aten.convolution]
    buf196 = extern_kernels.convolution(buf195, buf8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf196, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf197 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf198 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf200 = empty((400, ), device='cpu', dtype=torch.float32)
    buf201 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_24(c_void_p(buf196.data_ptr()), c_void_p(primals_53.data_ptr()), c_void_p(primals_54.data_ptr()), c_void_p(buf197.data_ptr()), c_void_p(buf198.data_ptr()), c_void_p(buf200.data_ptr()), c_void_p(buf201.data_ptr()))
    del primals_54
    # Source Nodes: [x_in_31], Original ATen: [aten.convolution]
    buf202 = extern_kernels.convolution(buf201, primals_249, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf202, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf205 = empty((8, 896, 28, 28), device='cpu', dtype=torch.float32)
    buf203 = reinterpret_tensor(buf205, (8, 512, 28, 28), (702464, 784, 28, 1), 0)  # alias
    buf204 = reinterpret_tensor(buf205, (8, 384, 28, 28), (702464, 784, 28, 1), 401408)  # alias
    buf206 = empty_strided((8, 896, 28, 28), (702464, 1, 25088, 896), device='cpu', dtype=torch.float32)
    buf207 = empty_strided((1, 896, 1, 1), (896, 1, 896, 896), device='cpu', dtype=torch.float32)
    buf208 = empty_strided((1, 896, 1, 1), (896, 1, 896, 896), device='cpu', dtype=torch.float32)
    buf210 = empty((896, ), device='cpu', dtype=torch.float32)
    buf211 = empty_strided((8, 896, 28, 28), (702464, 1, 25088, 896), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_25(c_void_p(buf131.data_ptr()), c_void_p(buf145.data_ptr()), c_void_p(buf164.data_ptr()), c_void_p(buf183.data_ptr()), c_void_p(buf202.data_ptr()), c_void_p(buf205.data_ptr()), c_void_p(primals_55.data_ptr()), c_void_p(primals_56.data_ptr()), c_void_p(buf203.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(buf206.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(buf208.data_ptr()), c_void_p(buf210.data_ptr()), c_void_p(buf211.data_ptr()))
    del buf131
    del buf145
    del buf164
    del buf183
    del buf202
    del primals_56
    # Source Nodes: [x_in_33], Original ATen: [aten.convolution]
    buf212 = extern_kernels.convolution(buf211, primals_250, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf212, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf213 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf214 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf216 = empty((400, ), device='cpu', dtype=torch.float32)
    buf217 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_26(c_void_p(buf212.data_ptr()), c_void_p(primals_57.data_ptr()), c_void_p(primals_58.data_ptr()), c_void_p(buf213.data_ptr()), c_void_p(buf214.data_ptr()), c_void_p(buf216.data_ptr()), c_void_p(buf217.data_ptr()))
    del primals_58
    # Source Nodes: [x_in_34], Original ATen: [aten.convolution]
    buf218 = extern_kernels.convolution(buf217, buf9, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf218, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf219 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf220 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf222 = empty((400, ), device='cpu', dtype=torch.float32)
    buf223 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_27(c_void_p(buf218.data_ptr()), c_void_p(primals_59.data_ptr()), c_void_p(primals_60.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(buf220.data_ptr()), c_void_p(buf222.data_ptr()), c_void_p(buf223.data_ptr()))
    del primals_60
    # Source Nodes: [x_in_35], Original ATen: [aten.convolution]
    buf224 = extern_kernels.convolution(buf223, primals_252, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf224, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf225 = empty_strided((8, 960, 28, 28), (752640, 1, 26880, 960), device='cpu', dtype=torch.float32)
    buf226 = empty_strided((1, 960, 1, 1), (960, 1, 960, 960), device='cpu', dtype=torch.float32)
    buf227 = empty_strided((1, 960, 1, 1), (960, 1, 960, 960), device='cpu', dtype=torch.float32)
    buf229 = empty((960, ), device='cpu', dtype=torch.float32)
    buf230 = empty_strided((8, 960, 28, 28), (752640, 1, 26880, 960), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_28(c_void_p(buf203.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(primals_61.data_ptr()), c_void_p(primals_62.data_ptr()), c_void_p(buf225.data_ptr()), c_void_p(buf226.data_ptr()), c_void_p(buf227.data_ptr()), c_void_p(buf229.data_ptr()), c_void_p(buf230.data_ptr()))
    del primals_62
    # Source Nodes: [x_in_37], Original ATen: [aten.convolution]
    buf231 = extern_kernels.convolution(buf230, primals_253, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf231, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf232 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf233 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf235 = empty((400, ), device='cpu', dtype=torch.float32)
    buf236 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_29(c_void_p(buf231.data_ptr()), c_void_p(primals_63.data_ptr()), c_void_p(primals_64.data_ptr()), c_void_p(buf232.data_ptr()), c_void_p(buf233.data_ptr()), c_void_p(buf235.data_ptr()), c_void_p(buf236.data_ptr()))
    del primals_64
    # Source Nodes: [x_in_38], Original ATen: [aten.convolution]
    buf237 = extern_kernels.convolution(buf236, buf10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf237, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf238 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf239 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf241 = empty((400, ), device='cpu', dtype=torch.float32)
    buf242 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_30(c_void_p(buf237.data_ptr()), c_void_p(primals_65.data_ptr()), c_void_p(primals_66.data_ptr()), c_void_p(buf238.data_ptr()), c_void_p(buf239.data_ptr()), c_void_p(buf241.data_ptr()), c_void_p(buf242.data_ptr()))
    del primals_66
    # Source Nodes: [x_in_39], Original ATen: [aten.convolution]
    buf243 = extern_kernels.convolution(buf242, primals_255, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf243, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf244 = empty_strided((8, 1024, 28, 28), (802816, 1, 28672, 1024), device='cpu', dtype=torch.float32)
    buf245 = empty_strided((1, 1024, 1, 1), (1024, 1, 1024, 1024), device='cpu', dtype=torch.float32)
    buf246 = empty_strided((1, 1024, 1, 1), (1024, 1, 1024, 1024), device='cpu', dtype=torch.float32)
    buf248 = empty((1024, ), device='cpu', dtype=torch.float32)
    buf249 = empty_strided((8, 1024, 28, 28), (802816, 1, 28672, 1024), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_31(c_void_p(buf203.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf243.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(primals_67.data_ptr()), c_void_p(primals_68.data_ptr()), c_void_p(buf244.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(buf246.data_ptr()), c_void_p(buf248.data_ptr()), c_void_p(buf249.data_ptr()))
    del primals_68
    # Source Nodes: [x_in_41], Original ATen: [aten.convolution]
    buf250 = extern_kernels.convolution(buf249, primals_256, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf250, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf251 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf252 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf254 = empty((400, ), device='cpu', dtype=torch.float32)
    buf255 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_32(c_void_p(buf250.data_ptr()), c_void_p(primals_69.data_ptr()), c_void_p(primals_70.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(buf252.data_ptr()), c_void_p(buf254.data_ptr()), c_void_p(buf255.data_ptr()))
    del primals_70
    # Source Nodes: [x_in_42], Original ATen: [aten.convolution]
    buf256 = extern_kernels.convolution(buf255, buf11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf256, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf257 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf258 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf260 = empty((400, ), device='cpu', dtype=torch.float32)
    buf261 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_33(c_void_p(buf256.data_ptr()), c_void_p(primals_71.data_ptr()), c_void_p(primals_72.data_ptr()), c_void_p(buf257.data_ptr()), c_void_p(buf258.data_ptr()), c_void_p(buf260.data_ptr()), c_void_p(buf261.data_ptr()))
    del primals_72
    # Source Nodes: [x_in_43], Original ATen: [aten.convolution]
    buf262 = extern_kernels.convolution(buf261, primals_258, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf262, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf263 = empty_strided((8, 1088, 28, 28), (852992, 1, 30464, 1088), device='cpu', dtype=torch.float32)
    buf264 = empty_strided((1, 1088, 1, 1), (1088, 1, 1088, 1088), device='cpu', dtype=torch.float32)
    buf265 = empty_strided((1, 1088, 1, 1), (1088, 1, 1088, 1088), device='cpu', dtype=torch.float32)
    buf267 = empty((1088, ), device='cpu', dtype=torch.float32)
    buf268 = empty_strided((8, 1088, 28, 28), (852992, 1, 30464, 1088), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_34(c_void_p(buf203.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf243.data_ptr()), c_void_p(buf262.data_ptr()), c_void_p(buf204.data_ptr()), c_void_p(primals_73.data_ptr()), c_void_p(primals_74.data_ptr()), c_void_p(buf263.data_ptr()), c_void_p(buf264.data_ptr()), c_void_p(buf265.data_ptr()), c_void_p(buf267.data_ptr()), c_void_p(buf268.data_ptr()))
    del primals_74
    # Source Nodes: [x_in_45], Original ATen: [aten.convolution]
    buf269 = extern_kernels.convolution(buf268, primals_259, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf269, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf270 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf271 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf273 = empty((400, ), device='cpu', dtype=torch.float32)
    buf274 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_35(c_void_p(buf269.data_ptr()), c_void_p(primals_75.data_ptr()), c_void_p(primals_76.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(buf271.data_ptr()), c_void_p(buf273.data_ptr()), c_void_p(buf274.data_ptr()))
    del primals_76
    # Source Nodes: [x_in_46], Original ATen: [aten.convolution]
    buf275 = extern_kernels.convolution(buf274, buf12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf275, (8, 400, 28, 28), (313600, 1, 11200, 400))
    buf276 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf277 = empty_strided((1, 400, 1, 1), (400, 1, 400, 400), device='cpu', dtype=torch.float32)
    buf279 = empty((400, ), device='cpu', dtype=torch.float32)
    buf280 = empty_strided((8, 400, 28, 28), (313600, 1, 11200, 400), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_36(c_void_p(buf275.data_ptr()), c_void_p(primals_77.data_ptr()), c_void_p(primals_78.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(buf277.data_ptr()), c_void_p(buf279.data_ptr()), c_void_p(buf280.data_ptr()))
    del primals_78
    # Source Nodes: [x_in_47], Original ATen: [aten.convolution]
    buf281 = extern_kernels.convolution(buf280, primals_261, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf281, (8, 576, 28, 28), (451584, 1, 16128, 576))
    buf284 = empty((8, 1152, 28, 28), device='cpu', dtype=torch.float32)
    buf282 = reinterpret_tensor(buf284, (8, 640, 28, 28), (903168, 784, 28, 1), 401408)  # alias
    buf283 = reinterpret_tensor(buf284, (8, 512, 28, 28), (903168, 784, 28, 1), 0)  # alias
    buf285 = empty_strided((8, 1152, 28, 28), (903168, 1, 32256, 1152), device='cpu', dtype=torch.float32)
    buf286 = empty_strided((1, 1152, 1, 1), (1152, 1, 1152, 1152), device='cpu', dtype=torch.float32)
    buf287 = empty_strided((1, 1152, 1, 1), (1152, 1, 1152, 1152), device='cpu', dtype=torch.float32)
    buf289 = empty((1152, ), device='cpu', dtype=torch.float32)
    buf290 = empty_strided((8, 1152, 28, 28), (903168, 1, 32256, 1152), device='cpu', dtype=torch.float32)
    buf292 = empty_strided((8, 1152, 28, 28), (903168, 1, 32256, 1152), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_37(c_void_p(buf204.data_ptr()), c_void_p(buf224.data_ptr()), c_void_p(buf243.data_ptr()), c_void_p(buf262.data_ptr()), c_void_p(buf281.data_ptr()), c_void_p(buf203.data_ptr()), c_void_p(buf284.data_ptr()), c_void_p(primals_79.data_ptr()), c_void_p(primals_80.data_ptr()), c_void_p(primals_81.data_ptr()), c_void_p(primals_82.data_ptr()), c_void_p(buf282.data_ptr()), c_void_p(buf283.data_ptr()), c_void_p(buf285.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(buf289.data_ptr()), c_void_p(buf290.data_ptr()), c_void_p(buf292.data_ptr()))
    del buf203
    del buf204
    del buf205
    del buf224
    del buf243
    del buf282
    del buf283
    del buf284
    del primals_80
    del primals_82
    # Source Nodes: [x_s_2], Original ATen: [aten.convolution]
    buf291 = extern_kernels.convolution(buf290, primals_262, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf291, (8, 1152, 14, 14), (225792, 1, 16128, 1152))
    # Source Nodes: [x_in_49], Original ATen: [aten.convolution]
    buf293 = extern_kernels.convolution(buf292, primals_263, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf293, (8, 800, 28, 28), (627200, 1, 22400, 800))
    buf294 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf295 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf297 = empty((800, ), device='cpu', dtype=torch.float32)
    buf298 = empty_strided((8, 800, 28, 28), (627200, 1, 22400, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_38(c_void_p(buf293.data_ptr()), c_void_p(primals_83.data_ptr()), c_void_p(primals_84.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(buf295.data_ptr()), c_void_p(buf297.data_ptr()), c_void_p(buf298.data_ptr()))
    del primals_84
    # Source Nodes: [x_in_50], Original ATen: [aten.convolution]
    buf299 = extern_kernels.convolution(buf298, buf13, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf299, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf300 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf301 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf303 = empty((800, ), device='cpu', dtype=torch.float32)
    buf304 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_39(c_void_p(buf299.data_ptr()), c_void_p(primals_85.data_ptr()), c_void_p(primals_86.data_ptr()), c_void_p(buf300.data_ptr()), c_void_p(buf301.data_ptr()), c_void_p(buf303.data_ptr()), c_void_p(buf304.data_ptr()))
    del primals_86
    # Source Nodes: [x_in_51], Original ATen: [aten.convolution]
    buf305 = extern_kernels.convolution(buf304, primals_265, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf305, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf306 = empty_strided((8, 1216, 14, 14), (238336, 1, 17024, 1216), device='cpu', dtype=torch.float32)
    buf307 = empty_strided((1, 1216, 1, 1), (1216, 1, 1216, 1216), device='cpu', dtype=torch.float32)
    buf308 = empty_strided((1, 1216, 1, 1), (1216, 1, 1216, 1216), device='cpu', dtype=torch.float32)
    buf310 = empty((1216, ), device='cpu', dtype=torch.float32)
    buf311 = empty_strided((8, 1216, 14, 14), (238336, 1, 17024, 1216), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_40(c_void_p(buf291.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(primals_87.data_ptr()), c_void_p(primals_88.data_ptr()), c_void_p(buf306.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(buf308.data_ptr()), c_void_p(buf310.data_ptr()), c_void_p(buf311.data_ptr()))
    del primals_88
    # Source Nodes: [x_in_53], Original ATen: [aten.convolution]
    buf312 = extern_kernels.convolution(buf311, primals_266, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf312, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf313 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf314 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf316 = empty((800, ), device='cpu', dtype=torch.float32)
    buf317 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_41(c_void_p(buf312.data_ptr()), c_void_p(primals_89.data_ptr()), c_void_p(primals_90.data_ptr()), c_void_p(buf313.data_ptr()), c_void_p(buf314.data_ptr()), c_void_p(buf316.data_ptr()), c_void_p(buf317.data_ptr()))
    del primals_90
    # Source Nodes: [x_in_54], Original ATen: [aten.convolution]
    buf318 = extern_kernels.convolution(buf317, buf14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf318, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf319 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf320 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf322 = empty((800, ), device='cpu', dtype=torch.float32)
    buf323 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_42(c_void_p(buf318.data_ptr()), c_void_p(primals_91.data_ptr()), c_void_p(primals_92.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(buf320.data_ptr()), c_void_p(buf322.data_ptr()), c_void_p(buf323.data_ptr()))
    del primals_92
    # Source Nodes: [x_in_55], Original ATen: [aten.convolution]
    buf324 = extern_kernels.convolution(buf323, primals_268, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf324, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf325 = empty_strided((8, 1280, 14, 14), (250880, 1, 17920, 1280), device='cpu', dtype=torch.float32)
    buf326 = empty_strided((1, 1280, 1, 1), (1280, 1, 1280, 1280), device='cpu', dtype=torch.float32)
    buf327 = empty_strided((1, 1280, 1, 1), (1280, 1, 1280, 1280), device='cpu', dtype=torch.float32)
    buf329 = empty((1280, ), device='cpu', dtype=torch.float32)
    buf330 = empty_strided((8, 1280, 14, 14), (250880, 1, 17920, 1280), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_43(c_void_p(buf291.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(primals_93.data_ptr()), c_void_p(primals_94.data_ptr()), c_void_p(buf325.data_ptr()), c_void_p(buf326.data_ptr()), c_void_p(buf327.data_ptr()), c_void_p(buf329.data_ptr()), c_void_p(buf330.data_ptr()))
    del primals_94
    # Source Nodes: [x_in_57], Original ATen: [aten.convolution]
    buf331 = extern_kernels.convolution(buf330, primals_269, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf331, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf332 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf333 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf335 = empty((800, ), device='cpu', dtype=torch.float32)
    buf336 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_44(c_void_p(buf331.data_ptr()), c_void_p(primals_95.data_ptr()), c_void_p(primals_96.data_ptr()), c_void_p(buf332.data_ptr()), c_void_p(buf333.data_ptr()), c_void_p(buf335.data_ptr()), c_void_p(buf336.data_ptr()))
    del primals_96
    # Source Nodes: [x_in_58], Original ATen: [aten.convolution]
    buf337 = extern_kernels.convolution(buf336, buf15, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf337, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf338 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf339 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf341 = empty((800, ), device='cpu', dtype=torch.float32)
    buf342 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_45(c_void_p(buf337.data_ptr()), c_void_p(primals_97.data_ptr()), c_void_p(primals_98.data_ptr()), c_void_p(buf338.data_ptr()), c_void_p(buf339.data_ptr()), c_void_p(buf341.data_ptr()), c_void_p(buf342.data_ptr()))
    del primals_98
    # Source Nodes: [x_in_59], Original ATen: [aten.convolution]
    buf343 = extern_kernels.convolution(buf342, primals_271, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf343, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf344 = empty_strided((8, 1344, 14, 14), (263424, 1, 18816, 1344), device='cpu', dtype=torch.float32)
    buf345 = empty_strided((1, 1344, 1, 1), (1344, 1, 1344, 1344), device='cpu', dtype=torch.float32)
    buf346 = empty_strided((1, 1344, 1, 1), (1344, 1, 1344, 1344), device='cpu', dtype=torch.float32)
    buf348 = empty((1344, ), device='cpu', dtype=torch.float32)
    buf349 = empty_strided((8, 1344, 14, 14), (263424, 1, 18816, 1344), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_46(c_void_p(buf291.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf343.data_ptr()), c_void_p(primals_99.data_ptr()), c_void_p(primals_100.data_ptr()), c_void_p(buf344.data_ptr()), c_void_p(buf345.data_ptr()), c_void_p(buf346.data_ptr()), c_void_p(buf348.data_ptr()), c_void_p(buf349.data_ptr()))
    del primals_100
    # Source Nodes: [x_in_61], Original ATen: [aten.convolution]
    buf350 = extern_kernels.convolution(buf349, primals_272, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf350, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf351 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf352 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf354 = empty((800, ), device='cpu', dtype=torch.float32)
    buf355 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_47(c_void_p(buf350.data_ptr()), c_void_p(primals_101.data_ptr()), c_void_p(primals_102.data_ptr()), c_void_p(buf351.data_ptr()), c_void_p(buf352.data_ptr()), c_void_p(buf354.data_ptr()), c_void_p(buf355.data_ptr()))
    del primals_102
    # Source Nodes: [x_in_62], Original ATen: [aten.convolution]
    buf356 = extern_kernels.convolution(buf355, buf16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf356, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf357 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf358 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf360 = empty((800, ), device='cpu', dtype=torch.float32)
    buf361 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_48(c_void_p(buf356.data_ptr()), c_void_p(primals_103.data_ptr()), c_void_p(primals_104.data_ptr()), c_void_p(buf357.data_ptr()), c_void_p(buf358.data_ptr()), c_void_p(buf360.data_ptr()), c_void_p(buf361.data_ptr()))
    del primals_104
    # Source Nodes: [x_in_63], Original ATen: [aten.convolution]
    buf362 = extern_kernels.convolution(buf361, primals_274, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf362, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf365 = empty((8, 1408, 14, 14), device='cpu', dtype=torch.float32)
    buf363 = reinterpret_tensor(buf365, (8, 1024, 14, 14), (275968, 196, 14, 1), 0)  # alias
    buf364 = reinterpret_tensor(buf365, (8, 384, 14, 14), (275968, 196, 14, 1), 200704)  # alias
    buf366 = empty_strided((8, 1408, 14, 14), (275968, 1, 19712, 1408), device='cpu', dtype=torch.float32)
    buf367 = empty_strided((1, 1408, 1, 1), (1408, 1, 1408, 1408), device='cpu', dtype=torch.float32)
    buf368 = empty_strided((1, 1408, 1, 1), (1408, 1, 1408, 1408), device='cpu', dtype=torch.float32)
    buf370 = empty((1408, ), device='cpu', dtype=torch.float32)
    buf371 = empty_strided((8, 1408, 14, 14), (275968, 1, 19712, 1408), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_49(c_void_p(buf291.data_ptr()), c_void_p(buf305.data_ptr()), c_void_p(buf324.data_ptr()), c_void_p(buf343.data_ptr()), c_void_p(buf362.data_ptr()), c_void_p(buf365.data_ptr()), c_void_p(primals_105.data_ptr()), c_void_p(primals_106.data_ptr()), c_void_p(buf363.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(buf366.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(buf368.data_ptr()), c_void_p(buf370.data_ptr()), c_void_p(buf371.data_ptr()))
    del buf291
    del buf305
    del buf324
    del buf343
    del buf362
    del primals_106
    # Source Nodes: [x_in_65], Original ATen: [aten.convolution]
    buf372 = extern_kernels.convolution(buf371, primals_275, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf372, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf373 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf374 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf376 = empty((800, ), device='cpu', dtype=torch.float32)
    buf377 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_50(c_void_p(buf372.data_ptr()), c_void_p(primals_107.data_ptr()), c_void_p(primals_108.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(buf374.data_ptr()), c_void_p(buf376.data_ptr()), c_void_p(buf377.data_ptr()))
    del primals_108
    # Source Nodes: [x_in_66], Original ATen: [aten.convolution]
    buf378 = extern_kernels.convolution(buf377, buf17, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf378, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf379 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf380 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf382 = empty((800, ), device='cpu', dtype=torch.float32)
    buf383 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_51(c_void_p(buf378.data_ptr()), c_void_p(primals_109.data_ptr()), c_void_p(primals_110.data_ptr()), c_void_p(buf379.data_ptr()), c_void_p(buf380.data_ptr()), c_void_p(buf382.data_ptr()), c_void_p(buf383.data_ptr()))
    del primals_110
    # Source Nodes: [x_in_67], Original ATen: [aten.convolution]
    buf384 = extern_kernels.convolution(buf383, primals_277, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf384, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf385 = empty_strided((8, 1472, 14, 14), (288512, 1, 20608, 1472), device='cpu', dtype=torch.float32)
    buf386 = empty_strided((1, 1472, 1, 1), (1472, 1, 1472, 1472), device='cpu', dtype=torch.float32)
    buf387 = empty_strided((1, 1472, 1, 1), (1472, 1, 1472, 1472), device='cpu', dtype=torch.float32)
    buf389 = empty((1472, ), device='cpu', dtype=torch.float32)
    buf390 = empty_strided((8, 1472, 14, 14), (288512, 1, 20608, 1472), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_52(c_void_p(buf363.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(primals_111.data_ptr()), c_void_p(primals_112.data_ptr()), c_void_p(buf385.data_ptr()), c_void_p(buf386.data_ptr()), c_void_p(buf387.data_ptr()), c_void_p(buf389.data_ptr()), c_void_p(buf390.data_ptr()))
    del primals_112
    # Source Nodes: [x_in_69], Original ATen: [aten.convolution]
    buf391 = extern_kernels.convolution(buf390, primals_278, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf391, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf392 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf393 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf395 = empty((800, ), device='cpu', dtype=torch.float32)
    buf396 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_53(c_void_p(buf391.data_ptr()), c_void_p(primals_113.data_ptr()), c_void_p(primals_114.data_ptr()), c_void_p(buf392.data_ptr()), c_void_p(buf393.data_ptr()), c_void_p(buf395.data_ptr()), c_void_p(buf396.data_ptr()))
    del primals_114
    # Source Nodes: [x_in_70], Original ATen: [aten.convolution]
    buf397 = extern_kernels.convolution(buf396, buf18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf397, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf398 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf399 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf401 = empty((800, ), device='cpu', dtype=torch.float32)
    buf402 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_54(c_void_p(buf397.data_ptr()), c_void_p(primals_115.data_ptr()), c_void_p(primals_116.data_ptr()), c_void_p(buf398.data_ptr()), c_void_p(buf399.data_ptr()), c_void_p(buf401.data_ptr()), c_void_p(buf402.data_ptr()))
    del primals_116
    # Source Nodes: [x_in_71], Original ATen: [aten.convolution]
    buf403 = extern_kernels.convolution(buf402, primals_280, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf403, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf404 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    buf405 = empty_strided((1, 1536, 1, 1), (1536, 1, 1536, 1536), device='cpu', dtype=torch.float32)
    buf406 = empty_strided((1, 1536, 1, 1), (1536, 1, 1536, 1536), device='cpu', dtype=torch.float32)
    buf408 = empty((1536, ), device='cpu', dtype=torch.float32)
    buf409 = empty_strided((8, 1536, 14, 14), (301056, 1, 21504, 1536), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_55(c_void_p(buf363.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf403.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(primals_117.data_ptr()), c_void_p(primals_118.data_ptr()), c_void_p(buf404.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(buf406.data_ptr()), c_void_p(buf408.data_ptr()), c_void_p(buf409.data_ptr()))
    del primals_118
    # Source Nodes: [x_in_73], Original ATen: [aten.convolution]
    buf410 = extern_kernels.convolution(buf409, primals_281, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf410, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf411 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf412 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf414 = empty((800, ), device='cpu', dtype=torch.float32)
    buf415 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_56(c_void_p(buf410.data_ptr()), c_void_p(primals_119.data_ptr()), c_void_p(primals_120.data_ptr()), c_void_p(buf411.data_ptr()), c_void_p(buf412.data_ptr()), c_void_p(buf414.data_ptr()), c_void_p(buf415.data_ptr()))
    del primals_120
    # Source Nodes: [x_in_74], Original ATen: [aten.convolution]
    buf416 = extern_kernels.convolution(buf415, buf19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf416, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf417 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf418 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf420 = empty((800, ), device='cpu', dtype=torch.float32)
    buf421 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_57(c_void_p(buf416.data_ptr()), c_void_p(primals_121.data_ptr()), c_void_p(primals_122.data_ptr()), c_void_p(buf417.data_ptr()), c_void_p(buf418.data_ptr()), c_void_p(buf420.data_ptr()), c_void_p(buf421.data_ptr()))
    del primals_122
    # Source Nodes: [x_in_75], Original ATen: [aten.convolution]
    buf422 = extern_kernels.convolution(buf421, primals_283, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf422, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf423 = empty_strided((8, 1600, 14, 14), (313600, 1, 22400, 1600), device='cpu', dtype=torch.float32)
    buf424 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf425 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf427 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf428 = empty_strided((8, 1600, 14, 14), (313600, 1, 22400, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_58(c_void_p(buf363.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf403.data_ptr()), c_void_p(buf422.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(primals_123.data_ptr()), c_void_p(primals_124.data_ptr()), c_void_p(buf423.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(buf425.data_ptr()), c_void_p(buf427.data_ptr()), c_void_p(buf428.data_ptr()))
    del primals_124
    # Source Nodes: [x_in_77], Original ATen: [aten.convolution]
    buf429 = extern_kernels.convolution(buf428, primals_284, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf429, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf430 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf431 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf433 = empty((800, ), device='cpu', dtype=torch.float32)
    buf434 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_59(c_void_p(buf429.data_ptr()), c_void_p(primals_125.data_ptr()), c_void_p(primals_126.data_ptr()), c_void_p(buf430.data_ptr()), c_void_p(buf431.data_ptr()), c_void_p(buf433.data_ptr()), c_void_p(buf434.data_ptr()))
    del primals_126
    # Source Nodes: [x_in_78], Original ATen: [aten.convolution]
    buf435 = extern_kernels.convolution(buf434, buf20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf435, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf436 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf437 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf439 = empty((800, ), device='cpu', dtype=torch.float32)
    buf440 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_60(c_void_p(buf435.data_ptr()), c_void_p(primals_127.data_ptr()), c_void_p(primals_128.data_ptr()), c_void_p(buf436.data_ptr()), c_void_p(buf437.data_ptr()), c_void_p(buf439.data_ptr()), c_void_p(buf440.data_ptr()))
    del primals_128
    # Source Nodes: [x_in_79], Original ATen: [aten.convolution]
    buf441 = extern_kernels.convolution(buf440, primals_286, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf441, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf444 = empty((8, 1664, 14, 14), device='cpu', dtype=torch.float32)
    buf442 = reinterpret_tensor(buf444, (8, 1024, 14, 14), (326144, 196, 14, 1), 0)  # alias
    buf443 = reinterpret_tensor(buf444, (8, 640, 14, 14), (326144, 196, 14, 1), 200704)  # alias
    buf445 = empty_strided((8, 1664, 14, 14), (326144, 1, 23296, 1664), device='cpu', dtype=torch.float32)
    buf446 = empty_strided((1, 1664, 1, 1), (1664, 1, 1664, 1664), device='cpu', dtype=torch.float32)
    buf447 = empty_strided((1, 1664, 1, 1), (1664, 1, 1664, 1664), device='cpu', dtype=torch.float32)
    buf449 = empty((1664, ), device='cpu', dtype=torch.float32)
    buf450 = empty_strided((8, 1664, 14, 14), (326144, 1, 23296, 1664), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_61(c_void_p(buf363.data_ptr()), c_void_p(buf384.data_ptr()), c_void_p(buf403.data_ptr()), c_void_p(buf422.data_ptr()), c_void_p(buf441.data_ptr()), c_void_p(buf364.data_ptr()), c_void_p(buf444.data_ptr()), c_void_p(primals_129.data_ptr()), c_void_p(primals_130.data_ptr()), c_void_p(buf442.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(buf445.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(buf447.data_ptr()), c_void_p(buf449.data_ptr()), c_void_p(buf450.data_ptr()))
    del buf363
    del buf364
    del buf365
    del buf384
    del buf403
    del buf422
    del buf441
    del primals_130
    # Source Nodes: [x_in_81], Original ATen: [aten.convolution]
    buf451 = extern_kernels.convolution(buf450, primals_287, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf451, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf452 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf453 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf455 = empty((800, ), device='cpu', dtype=torch.float32)
    buf456 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_62(c_void_p(buf451.data_ptr()), c_void_p(primals_131.data_ptr()), c_void_p(primals_132.data_ptr()), c_void_p(buf452.data_ptr()), c_void_p(buf453.data_ptr()), c_void_p(buf455.data_ptr()), c_void_p(buf456.data_ptr()))
    del primals_132
    # Source Nodes: [x_in_82], Original ATen: [aten.convolution]
    buf457 = extern_kernels.convolution(buf456, buf21, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf457, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf458 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf459 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf461 = empty((800, ), device='cpu', dtype=torch.float32)
    buf462 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_63(c_void_p(buf457.data_ptr()), c_void_p(primals_133.data_ptr()), c_void_p(primals_134.data_ptr()), c_void_p(buf458.data_ptr()), c_void_p(buf459.data_ptr()), c_void_p(buf461.data_ptr()), c_void_p(buf462.data_ptr()))
    del primals_134
    # Source Nodes: [x_in_83], Original ATen: [aten.convolution]
    buf463 = extern_kernels.convolution(buf462, primals_289, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf463, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf464 = empty_strided((8, 1728, 14, 14), (338688, 1, 24192, 1728), device='cpu', dtype=torch.float32)
    buf465 = empty_strided((1, 1728, 1, 1), (1728, 1, 1728, 1728), device='cpu', dtype=torch.float32)
    buf466 = empty_strided((1, 1728, 1, 1), (1728, 1, 1728, 1728), device='cpu', dtype=torch.float32)
    buf468 = empty((1728, ), device='cpu', dtype=torch.float32)
    buf469 = empty_strided((8, 1728, 14, 14), (338688, 1, 24192, 1728), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_64(c_void_p(buf442.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(primals_135.data_ptr()), c_void_p(primals_136.data_ptr()), c_void_p(buf464.data_ptr()), c_void_p(buf465.data_ptr()), c_void_p(buf466.data_ptr()), c_void_p(buf468.data_ptr()), c_void_p(buf469.data_ptr()))
    del primals_136
    # Source Nodes: [x_in_85], Original ATen: [aten.convolution]
    buf470 = extern_kernels.convolution(buf469, primals_290, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf470, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf471 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf472 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf474 = empty((800, ), device='cpu', dtype=torch.float32)
    buf475 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_65(c_void_p(buf470.data_ptr()), c_void_p(primals_137.data_ptr()), c_void_p(primals_138.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(buf472.data_ptr()), c_void_p(buf474.data_ptr()), c_void_p(buf475.data_ptr()))
    del primals_138
    # Source Nodes: [x_in_86], Original ATen: [aten.convolution]
    buf476 = extern_kernels.convolution(buf475, buf22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf476, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf477 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf478 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf480 = empty((800, ), device='cpu', dtype=torch.float32)
    buf481 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_66(c_void_p(buf476.data_ptr()), c_void_p(primals_139.data_ptr()), c_void_p(primals_140.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(buf478.data_ptr()), c_void_p(buf480.data_ptr()), c_void_p(buf481.data_ptr()))
    del primals_140
    # Source Nodes: [x_in_87], Original ATen: [aten.convolution]
    buf482 = extern_kernels.convolution(buf481, primals_292, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf482, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf483 = empty_strided((8, 1792, 14, 14), (351232, 1, 25088, 1792), device='cpu', dtype=torch.float32)
    buf484 = empty_strided((1, 1792, 1, 1), (1792, 1, 1792, 1792), device='cpu', dtype=torch.float32)
    buf485 = empty_strided((1, 1792, 1, 1), (1792, 1, 1792, 1792), device='cpu', dtype=torch.float32)
    buf487 = empty((1792, ), device='cpu', dtype=torch.float32)
    buf488 = empty_strided((8, 1792, 14, 14), (351232, 1, 25088, 1792), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_67(c_void_p(buf442.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(primals_141.data_ptr()), c_void_p(primals_142.data_ptr()), c_void_p(buf483.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(buf485.data_ptr()), c_void_p(buf487.data_ptr()), c_void_p(buf488.data_ptr()))
    del primals_142
    # Source Nodes: [x_in_89], Original ATen: [aten.convolution]
    buf489 = extern_kernels.convolution(buf488, primals_293, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf489, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf490 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf491 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf493 = empty((800, ), device='cpu', dtype=torch.float32)
    buf494 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_68(c_void_p(buf489.data_ptr()), c_void_p(primals_143.data_ptr()), c_void_p(primals_144.data_ptr()), c_void_p(buf490.data_ptr()), c_void_p(buf491.data_ptr()), c_void_p(buf493.data_ptr()), c_void_p(buf494.data_ptr()))
    del primals_144
    # Source Nodes: [x_in_90], Original ATen: [aten.convolution]
    buf495 = extern_kernels.convolution(buf494, buf23, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf495, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf496 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf497 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf499 = empty((800, ), device='cpu', dtype=torch.float32)
    buf500 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_69(c_void_p(buf495.data_ptr()), c_void_p(primals_145.data_ptr()), c_void_p(primals_146.data_ptr()), c_void_p(buf496.data_ptr()), c_void_p(buf497.data_ptr()), c_void_p(buf499.data_ptr()), c_void_p(buf500.data_ptr()))
    del primals_146
    # Source Nodes: [x_in_91], Original ATen: [aten.convolution]
    buf501 = extern_kernels.convolution(buf500, primals_295, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf501, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf502 = empty_strided((8, 1856, 14, 14), (363776, 1, 25984, 1856), device='cpu', dtype=torch.float32)
    buf503 = empty_strided((1, 1856, 1, 1), (1856, 1, 1856, 1856), device='cpu', dtype=torch.float32)
    buf504 = empty_strided((1, 1856, 1, 1), (1856, 1, 1856, 1856), device='cpu', dtype=torch.float32)
    buf506 = empty((1856, ), device='cpu', dtype=torch.float32)
    buf507 = empty_strided((8, 1856, 14, 14), (363776, 1, 25984, 1856), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_70(c_void_p(buf442.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf501.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(primals_147.data_ptr()), c_void_p(primals_148.data_ptr()), c_void_p(buf502.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(buf504.data_ptr()), c_void_p(buf506.data_ptr()), c_void_p(buf507.data_ptr()))
    del primals_148
    # Source Nodes: [x_in_93], Original ATen: [aten.convolution]
    buf508 = extern_kernels.convolution(buf507, primals_296, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf508, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf509 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf510 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf512 = empty((800, ), device='cpu', dtype=torch.float32)
    buf513 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_71(c_void_p(buf508.data_ptr()), c_void_p(primals_149.data_ptr()), c_void_p(primals_150.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(buf510.data_ptr()), c_void_p(buf512.data_ptr()), c_void_p(buf513.data_ptr()))
    del primals_150
    # Source Nodes: [x_in_94], Original ATen: [aten.convolution]
    buf514 = extern_kernels.convolution(buf513, buf24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf514, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf515 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf516 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf518 = empty((800, ), device='cpu', dtype=torch.float32)
    buf519 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_72(c_void_p(buf514.data_ptr()), c_void_p(primals_151.data_ptr()), c_void_p(primals_152.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(buf516.data_ptr()), c_void_p(buf518.data_ptr()), c_void_p(buf519.data_ptr()))
    del primals_152
    # Source Nodes: [x_in_95], Original ATen: [aten.convolution]
    buf520 = extern_kernels.convolution(buf519, primals_298, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf520, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf523 = empty((8, 1920, 14, 14), device='cpu', dtype=torch.float32)
    buf521 = reinterpret_tensor(buf523, (8, 1024, 14, 14), (376320, 196, 14, 1), 0)  # alias
    buf522 = reinterpret_tensor(buf523, (8, 896, 14, 14), (376320, 196, 14, 1), 200704)  # alias
    buf524 = empty_strided((8, 1920, 14, 14), (376320, 1, 26880, 1920), device='cpu', dtype=torch.float32)
    buf525 = empty_strided((1, 1920, 1, 1), (1920, 1, 1920, 1920), device='cpu', dtype=torch.float32)
    buf526 = empty_strided((1, 1920, 1, 1), (1920, 1, 1920, 1920), device='cpu', dtype=torch.float32)
    buf528 = empty((1920, ), device='cpu', dtype=torch.float32)
    buf529 = empty_strided((8, 1920, 14, 14), (376320, 1, 26880, 1920), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_73(c_void_p(buf442.data_ptr()), c_void_p(buf463.data_ptr()), c_void_p(buf482.data_ptr()), c_void_p(buf501.data_ptr()), c_void_p(buf520.data_ptr()), c_void_p(buf443.data_ptr()), c_void_p(buf523.data_ptr()), c_void_p(primals_153.data_ptr()), c_void_p(primals_154.data_ptr()), c_void_p(buf521.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(buf524.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(buf526.data_ptr()), c_void_p(buf528.data_ptr()), c_void_p(buf529.data_ptr()))
    del buf442
    del buf443
    del buf444
    del buf463
    del buf482
    del buf501
    del buf520
    del primals_154
    # Source Nodes: [x_in_97], Original ATen: [aten.convolution]
    buf530 = extern_kernels.convolution(buf529, primals_299, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf530, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf531 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf532 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf534 = empty((800, ), device='cpu', dtype=torch.float32)
    buf535 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_74(c_void_p(buf530.data_ptr()), c_void_p(primals_155.data_ptr()), c_void_p(primals_156.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(buf532.data_ptr()), c_void_p(buf534.data_ptr()), c_void_p(buf535.data_ptr()))
    del primals_156
    # Source Nodes: [x_in_98], Original ATen: [aten.convolution]
    buf536 = extern_kernels.convolution(buf535, buf25, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf536, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf537 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf538 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf540 = empty((800, ), device='cpu', dtype=torch.float32)
    buf541 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_75(c_void_p(buf536.data_ptr()), c_void_p(primals_157.data_ptr()), c_void_p(primals_158.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(buf538.data_ptr()), c_void_p(buf540.data_ptr()), c_void_p(buf541.data_ptr()))
    del primals_158
    # Source Nodes: [x_in_99], Original ATen: [aten.convolution]
    buf542 = extern_kernels.convolution(buf541, primals_301, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf542, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf543 = empty_strided((8, 1984, 14, 14), (388864, 1, 27776, 1984), device='cpu', dtype=torch.float32)
    buf544 = empty_strided((1, 1984, 1, 1), (1984, 1, 1984, 1984), device='cpu', dtype=torch.float32)
    buf545 = empty_strided((1, 1984, 1, 1), (1984, 1, 1984, 1984), device='cpu', dtype=torch.float32)
    buf547 = empty((1984, ), device='cpu', dtype=torch.float32)
    buf548 = empty_strided((8, 1984, 14, 14), (388864, 1, 27776, 1984), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_76(c_void_p(buf521.data_ptr()), c_void_p(buf542.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(primals_159.data_ptr()), c_void_p(primals_160.data_ptr()), c_void_p(buf543.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(buf545.data_ptr()), c_void_p(buf547.data_ptr()), c_void_p(buf548.data_ptr()))
    del primals_160
    # Source Nodes: [x_in_101], Original ATen: [aten.convolution]
    buf549 = extern_kernels.convolution(buf548, primals_302, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf549, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf550 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf551 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf553 = empty((800, ), device='cpu', dtype=torch.float32)
    buf554 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_77(c_void_p(buf549.data_ptr()), c_void_p(primals_161.data_ptr()), c_void_p(primals_162.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(buf551.data_ptr()), c_void_p(buf553.data_ptr()), c_void_p(buf554.data_ptr()))
    del primals_162
    # Source Nodes: [x_in_102], Original ATen: [aten.convolution]
    buf555 = extern_kernels.convolution(buf554, buf26, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf555, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf556 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf557 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf559 = empty((800, ), device='cpu', dtype=torch.float32)
    buf560 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_78(c_void_p(buf555.data_ptr()), c_void_p(primals_163.data_ptr()), c_void_p(primals_164.data_ptr()), c_void_p(buf556.data_ptr()), c_void_p(buf557.data_ptr()), c_void_p(buf559.data_ptr()), c_void_p(buf560.data_ptr()))
    del primals_164
    # Source Nodes: [x_in_103], Original ATen: [aten.convolution]
    buf561 = extern_kernels.convolution(buf560, primals_304, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf561, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf562 = empty_strided((8, 2048, 14, 14), (401408, 1, 28672, 2048), device='cpu', dtype=torch.float32)
    buf563 = empty_strided((1, 2048, 1, 1), (2048, 1, 2048, 2048), device='cpu', dtype=torch.float32)
    buf564 = empty_strided((1, 2048, 1, 1), (2048, 1, 2048, 2048), device='cpu', dtype=torch.float32)
    buf566 = empty((2048, ), device='cpu', dtype=torch.float32)
    buf567 = empty_strided((8, 2048, 14, 14), (401408, 1, 28672, 2048), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_79(c_void_p(buf521.data_ptr()), c_void_p(buf542.data_ptr()), c_void_p(buf561.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(primals_165.data_ptr()), c_void_p(primals_166.data_ptr()), c_void_p(buf562.data_ptr()), c_void_p(buf563.data_ptr()), c_void_p(buf564.data_ptr()), c_void_p(buf566.data_ptr()), c_void_p(buf567.data_ptr()))
    del primals_166
    # Source Nodes: [x_in_105], Original ATen: [aten.convolution]
    buf568 = extern_kernels.convolution(buf567, primals_305, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf568, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf569 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf570 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf572 = empty((800, ), device='cpu', dtype=torch.float32)
    buf573 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_80(c_void_p(buf568.data_ptr()), c_void_p(primals_167.data_ptr()), c_void_p(primals_168.data_ptr()), c_void_p(buf569.data_ptr()), c_void_p(buf570.data_ptr()), c_void_p(buf572.data_ptr()), c_void_p(buf573.data_ptr()))
    del primals_168
    # Source Nodes: [x_in_106], Original ATen: [aten.convolution]
    buf574 = extern_kernels.convolution(buf573, buf27, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf574, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf575 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf576 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf578 = empty((800, ), device='cpu', dtype=torch.float32)
    buf579 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_81(c_void_p(buf574.data_ptr()), c_void_p(primals_169.data_ptr()), c_void_p(primals_170.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(buf576.data_ptr()), c_void_p(buf578.data_ptr()), c_void_p(buf579.data_ptr()))
    del primals_170
    # Source Nodes: [x_in_107], Original ATen: [aten.convolution]
    buf580 = extern_kernels.convolution(buf579, primals_307, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf580, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf581 = empty_strided((8, 2112, 14, 14), (413952, 1, 29568, 2112), device='cpu', dtype=torch.float32)
    buf582 = empty_strided((1, 2112, 1, 1), (2112, 1, 2112, 2112), device='cpu', dtype=torch.float32)
    buf583 = empty_strided((1, 2112, 1, 1), (2112, 1, 2112, 2112), device='cpu', dtype=torch.float32)
    buf585 = empty((2112, ), device='cpu', dtype=torch.float32)
    buf586 = empty_strided((8, 2112, 14, 14), (413952, 1, 29568, 2112), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_82(c_void_p(buf521.data_ptr()), c_void_p(buf542.data_ptr()), c_void_p(buf561.data_ptr()), c_void_p(buf580.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(primals_171.data_ptr()), c_void_p(primals_172.data_ptr()), c_void_p(buf581.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(buf583.data_ptr()), c_void_p(buf585.data_ptr()), c_void_p(buf586.data_ptr()))
    del primals_172
    # Source Nodes: [x_in_109], Original ATen: [aten.convolution]
    buf587 = extern_kernels.convolution(buf586, primals_308, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf587, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf588 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf589 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf591 = empty((800, ), device='cpu', dtype=torch.float32)
    buf592 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_83(c_void_p(buf587.data_ptr()), c_void_p(primals_173.data_ptr()), c_void_p(primals_174.data_ptr()), c_void_p(buf588.data_ptr()), c_void_p(buf589.data_ptr()), c_void_p(buf591.data_ptr()), c_void_p(buf592.data_ptr()))
    del primals_174
    # Source Nodes: [x_in_110], Original ATen: [aten.convolution]
    buf593 = extern_kernels.convolution(buf592, buf28, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf593, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf594 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf595 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf597 = empty((800, ), device='cpu', dtype=torch.float32)
    buf598 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_84(c_void_p(buf593.data_ptr()), c_void_p(primals_175.data_ptr()), c_void_p(primals_176.data_ptr()), c_void_p(buf594.data_ptr()), c_void_p(buf595.data_ptr()), c_void_p(buf597.data_ptr()), c_void_p(buf598.data_ptr()))
    del primals_176
    # Source Nodes: [x_in_111], Original ATen: [aten.convolution]
    buf599 = extern_kernels.convolution(buf598, primals_310, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf599, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf602 = empty((8, 2176, 14, 14), device='cpu', dtype=torch.float32)
    buf600 = reinterpret_tensor(buf602, (8, 1024, 14, 14), (426496, 196, 14, 1), 0)  # alias
    buf601 = reinterpret_tensor(buf602, (8, 1152, 14, 14), (426496, 196, 14, 1), 200704)  # alias
    buf603 = empty_strided((8, 2176, 14, 14), (426496, 1, 30464, 2176), device='cpu', dtype=torch.float32)
    buf604 = empty_strided((1, 2176, 1, 1), (2176, 1, 2176, 2176), device='cpu', dtype=torch.float32)
    buf605 = empty_strided((1, 2176, 1, 1), (2176, 1, 2176, 2176), device='cpu', dtype=torch.float32)
    buf607 = empty((2176, ), device='cpu', dtype=torch.float32)
    buf608 = empty_strided((8, 2176, 14, 14), (426496, 1, 30464, 2176), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_85(c_void_p(buf521.data_ptr()), c_void_p(buf542.data_ptr()), c_void_p(buf561.data_ptr()), c_void_p(buf580.data_ptr()), c_void_p(buf599.data_ptr()), c_void_p(buf522.data_ptr()), c_void_p(buf602.data_ptr()), c_void_p(primals_177.data_ptr()), c_void_p(primals_178.data_ptr()), c_void_p(buf600.data_ptr()), c_void_p(buf601.data_ptr()), c_void_p(buf603.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(buf605.data_ptr()), c_void_p(buf607.data_ptr()), c_void_p(buf608.data_ptr()))
    del buf521
    del buf522
    del buf523
    del buf542
    del buf561
    del buf580
    del buf599
    del primals_178
    # Source Nodes: [x_in_113], Original ATen: [aten.convolution]
    buf609 = extern_kernels.convolution(buf608, primals_311, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf609, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf610 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf611 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf613 = empty((800, ), device='cpu', dtype=torch.float32)
    buf614 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_86(c_void_p(buf609.data_ptr()), c_void_p(primals_179.data_ptr()), c_void_p(primals_180.data_ptr()), c_void_p(buf610.data_ptr()), c_void_p(buf611.data_ptr()), c_void_p(buf613.data_ptr()), c_void_p(buf614.data_ptr()))
    del primals_180
    # Source Nodes: [x_in_114], Original ATen: [aten.convolution]
    buf615 = extern_kernels.convolution(buf614, buf29, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf615, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf616 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf617 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf619 = empty((800, ), device='cpu', dtype=torch.float32)
    buf620 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_87(c_void_p(buf615.data_ptr()), c_void_p(primals_181.data_ptr()), c_void_p(primals_182.data_ptr()), c_void_p(buf616.data_ptr()), c_void_p(buf617.data_ptr()), c_void_p(buf619.data_ptr()), c_void_p(buf620.data_ptr()))
    del primals_182
    # Source Nodes: [x_in_115], Original ATen: [aten.convolution]
    buf621 = extern_kernels.convolution(buf620, primals_313, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf621, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf622 = empty_strided((8, 2240, 14, 14), (439040, 1, 31360, 2240), device='cpu', dtype=torch.float32)
    buf623 = empty_strided((1, 2240, 1, 1), (2240, 1, 2240, 2240), device='cpu', dtype=torch.float32)
    buf624 = empty_strided((1, 2240, 1, 1), (2240, 1, 2240, 2240), device='cpu', dtype=torch.float32)
    buf626 = empty((2240, ), device='cpu', dtype=torch.float32)
    buf627 = empty_strided((8, 2240, 14, 14), (439040, 1, 31360, 2240), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_88(c_void_p(buf600.data_ptr()), c_void_p(buf621.data_ptr()), c_void_p(buf601.data_ptr()), c_void_p(primals_183.data_ptr()), c_void_p(primals_184.data_ptr()), c_void_p(buf622.data_ptr()), c_void_p(buf623.data_ptr()), c_void_p(buf624.data_ptr()), c_void_p(buf626.data_ptr()), c_void_p(buf627.data_ptr()))
    del primals_184
    # Source Nodes: [x_in_117], Original ATen: [aten.convolution]
    buf628 = extern_kernels.convolution(buf627, primals_314, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf628, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf629 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf630 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf632 = empty((800, ), device='cpu', dtype=torch.float32)
    buf633 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_89(c_void_p(buf628.data_ptr()), c_void_p(primals_185.data_ptr()), c_void_p(primals_186.data_ptr()), c_void_p(buf629.data_ptr()), c_void_p(buf630.data_ptr()), c_void_p(buf632.data_ptr()), c_void_p(buf633.data_ptr()))
    del primals_186
    # Source Nodes: [x_in_118], Original ATen: [aten.convolution]
    buf634 = extern_kernels.convolution(buf633, buf30, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf634, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf635 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf636 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf638 = empty((800, ), device='cpu', dtype=torch.float32)
    buf639 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_90(c_void_p(buf634.data_ptr()), c_void_p(primals_187.data_ptr()), c_void_p(primals_188.data_ptr()), c_void_p(buf635.data_ptr()), c_void_p(buf636.data_ptr()), c_void_p(buf638.data_ptr()), c_void_p(buf639.data_ptr()))
    del primals_188
    # Source Nodes: [x_in_119], Original ATen: [aten.convolution]
    buf640 = extern_kernels.convolution(buf639, primals_316, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf640, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf641 = reinterpret_tensor(buf281, (8, 2304, 14, 14), (451584, 1, 32256, 2304), 0); del buf281  # reuse
    buf642 = empty_strided((1, 2304, 1, 1), (2304, 1, 2304, 2304), device='cpu', dtype=torch.float32)
    buf643 = empty_strided((1, 2304, 1, 1), (2304, 1, 2304, 2304), device='cpu', dtype=torch.float32)
    buf645 = empty((2304, ), device='cpu', dtype=torch.float32)
    buf646 = reinterpret_tensor(buf262, (8, 2304, 14, 14), (451584, 1, 32256, 2304), 0); del buf262  # reuse
    cpp_fused__native_batch_norm_legit_functional_cat_relu_91(c_void_p(buf600.data_ptr()), c_void_p(buf621.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(buf601.data_ptr()), c_void_p(primals_189.data_ptr()), c_void_p(primals_190.data_ptr()), c_void_p(buf641.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(buf643.data_ptr()), c_void_p(buf645.data_ptr()), c_void_p(buf646.data_ptr()))
    del primals_190
    # Source Nodes: [x_in_121], Original ATen: [aten.convolution]
    buf647 = extern_kernels.convolution(buf646, primals_317, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf647, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf648 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf649 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf651 = empty((800, ), device='cpu', dtype=torch.float32)
    buf652 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_92(c_void_p(buf647.data_ptr()), c_void_p(primals_191.data_ptr()), c_void_p(primals_192.data_ptr()), c_void_p(buf648.data_ptr()), c_void_p(buf649.data_ptr()), c_void_p(buf651.data_ptr()), c_void_p(buf652.data_ptr()))
    del primals_192
    # Source Nodes: [x_in_122], Original ATen: [aten.convolution]
    buf653 = extern_kernels.convolution(buf652, buf31, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf653, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf654 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf655 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf657 = empty((800, ), device='cpu', dtype=torch.float32)
    buf658 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_93(c_void_p(buf653.data_ptr()), c_void_p(primals_193.data_ptr()), c_void_p(primals_194.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(buf655.data_ptr()), c_void_p(buf657.data_ptr()), c_void_p(buf658.data_ptr()))
    del primals_194
    # Source Nodes: [x_in_123], Original ATen: [aten.convolution]
    buf659 = extern_kernels.convolution(buf658, primals_319, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf659, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf660 = empty_strided((8, 2368, 14, 14), (464128, 1, 33152, 2368), device='cpu', dtype=torch.float32)
    buf661 = empty_strided((1, 2368, 1, 1), (2368, 1, 2368, 2368), device='cpu', dtype=torch.float32)
    buf662 = empty_strided((1, 2368, 1, 1), (2368, 1, 2368, 2368), device='cpu', dtype=torch.float32)
    buf664 = empty((2368, ), device='cpu', dtype=torch.float32)
    buf665 = empty_strided((8, 2368, 14, 14), (464128, 1, 33152, 2368), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_94(c_void_p(buf600.data_ptr()), c_void_p(buf621.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(buf659.data_ptr()), c_void_p(buf601.data_ptr()), c_void_p(primals_195.data_ptr()), c_void_p(primals_196.data_ptr()), c_void_p(buf660.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(buf662.data_ptr()), c_void_p(buf664.data_ptr()), c_void_p(buf665.data_ptr()))
    del primals_196
    # Source Nodes: [x_in_125], Original ATen: [aten.convolution]
    buf666 = extern_kernels.convolution(buf665, primals_320, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf666, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf667 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf668 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf670 = empty((800, ), device='cpu', dtype=torch.float32)
    buf671 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_95(c_void_p(buf666.data_ptr()), c_void_p(primals_197.data_ptr()), c_void_p(primals_198.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(buf668.data_ptr()), c_void_p(buf670.data_ptr()), c_void_p(buf671.data_ptr()))
    del primals_198
    # Source Nodes: [x_in_126], Original ATen: [aten.convolution]
    buf672 = extern_kernels.convolution(buf671, buf32, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf672, (8, 800, 14, 14), (156800, 1, 11200, 800))
    buf673 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf674 = empty_strided((1, 800, 1, 1), (800, 1, 800, 800), device='cpu', dtype=torch.float32)
    buf676 = empty((800, ), device='cpu', dtype=torch.float32)
    buf677 = empty_strided((8, 800, 14, 14), (156800, 1, 11200, 800), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_96(c_void_p(buf672.data_ptr()), c_void_p(primals_199.data_ptr()), c_void_p(primals_200.data_ptr()), c_void_p(buf673.data_ptr()), c_void_p(buf674.data_ptr()), c_void_p(buf676.data_ptr()), c_void_p(buf677.data_ptr()))
    del primals_200
    # Source Nodes: [x_in_127], Original ATen: [aten.convolution]
    buf678 = extern_kernels.convolution(buf677, primals_322, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf678, (8, 1088, 14, 14), (213248, 1, 15232, 1088))
    buf681 = empty((8, 2432, 14, 14), device='cpu', dtype=torch.float32)
    buf679 = reinterpret_tensor(buf681, (8, 1408, 14, 14), (476672, 196, 14, 1), 200704)  # alias
    buf680 = reinterpret_tensor(buf681, (8, 1024, 14, 14), (476672, 196, 14, 1), 0)  # alias
    buf682 = empty_strided((8, 2432, 14, 14), (476672, 1, 34048, 2432), device='cpu', dtype=torch.float32)
    buf683 = empty_strided((1, 2432, 1, 1), (2432, 1, 2432, 2432), device='cpu', dtype=torch.float32)
    buf684 = empty_strided((1, 2432, 1, 1), (2432, 1, 2432, 2432), device='cpu', dtype=torch.float32)
    buf686 = empty((2432, ), device='cpu', dtype=torch.float32)
    buf687 = empty_strided((8, 2432, 14, 14), (476672, 1, 34048, 2432), device='cpu', dtype=torch.float32)
    buf689 = empty_strided((8, 2432, 14, 14), (476672, 1, 34048, 2432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_add_cat_relu_97(c_void_p(buf601.data_ptr()), c_void_p(buf621.data_ptr()), c_void_p(buf640.data_ptr()), c_void_p(buf659.data_ptr()), c_void_p(buf678.data_ptr()), c_void_p(buf600.data_ptr()), c_void_p(buf681.data_ptr()), c_void_p(primals_201.data_ptr()), c_void_p(primals_202.data_ptr()), c_void_p(primals_203.data_ptr()), c_void_p(primals_204.data_ptr()), c_void_p(buf679.data_ptr()), c_void_p(buf680.data_ptr()), c_void_p(buf682.data_ptr()), c_void_p(buf683.data_ptr()), c_void_p(buf684.data_ptr()), c_void_p(buf686.data_ptr()), c_void_p(buf687.data_ptr()), c_void_p(buf689.data_ptr()))
    del buf600
    del buf601
    del buf602
    del buf621
    del buf640
    del buf659
    del buf678
    del buf679
    del buf680
    del buf681
    del primals_202
    del primals_204
    # Source Nodes: [x_s_3], Original ATen: [aten.convolution]
    buf688 = extern_kernels.convolution(buf687, primals_323, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf688, (8, 2304, 7, 7), (112896, 1, 16128, 2304))
    # Source Nodes: [x_in_129], Original ATen: [aten.convolution]
    buf690 = extern_kernels.convolution(buf689, primals_324, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf690, (8, 1600, 14, 14), (313600, 1, 22400, 1600))
    buf691 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf692 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf694 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf695 = empty_strided((8, 1600, 14, 14), (313600, 1, 22400, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_98(c_void_p(buf690.data_ptr()), c_void_p(primals_205.data_ptr()), c_void_p(primals_206.data_ptr()), c_void_p(buf691.data_ptr()), c_void_p(buf692.data_ptr()), c_void_p(buf694.data_ptr()), c_void_p(buf695.data_ptr()))
    del primals_206
    # Source Nodes: [x_in_130], Original ATen: [aten.convolution]
    buf696 = extern_kernels.convolution(buf695, buf33, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf696, (8, 1600, 7, 7), (78400, 1, 11200, 1600))
    buf697 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf698 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf700 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf701 = empty_strided((8, 1600, 7, 7), (78400, 1, 11200, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_99(c_void_p(buf696.data_ptr()), c_void_p(primals_207.data_ptr()), c_void_p(primals_208.data_ptr()), c_void_p(buf697.data_ptr()), c_void_p(buf698.data_ptr()), c_void_p(buf700.data_ptr()), c_void_p(buf701.data_ptr()))
    del primals_208
    # Source Nodes: [x_in_131], Original ATen: [aten.convolution]
    buf702 = extern_kernels.convolution(buf701, primals_326, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf702, (8, 2176, 7, 7), (106624, 1, 15232, 2176))
    buf703 = empty_strided((8, 2432, 7, 7), (119168, 1, 17024, 2432), device='cpu', dtype=torch.float32)
    buf704 = empty_strided((1, 2432, 1, 1), (2432, 1, 2432, 2432), device='cpu', dtype=torch.float32)
    buf705 = empty_strided((1, 2432, 1, 1), (2432, 1, 2432, 2432), device='cpu', dtype=torch.float32)
    buf707 = empty((2432, ), device='cpu', dtype=torch.float32)
    buf708 = empty_strided((8, 2432, 7, 7), (119168, 1, 17024, 2432), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_100(c_void_p(buf688.data_ptr()), c_void_p(buf702.data_ptr()), c_void_p(primals_209.data_ptr()), c_void_p(primals_210.data_ptr()), c_void_p(buf703.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(buf705.data_ptr()), c_void_p(buf707.data_ptr()), c_void_p(buf708.data_ptr()))
    del primals_210
    # Source Nodes: [x_in_133], Original ATen: [aten.convolution]
    buf709 = extern_kernels.convolution(buf708, primals_327, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf709, (8, 1600, 7, 7), (78400, 1, 11200, 1600))
    buf710 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf711 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf713 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf714 = empty_strided((8, 1600, 7, 7), (78400, 1, 11200, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_101(c_void_p(buf709.data_ptr()), c_void_p(primals_211.data_ptr()), c_void_p(primals_212.data_ptr()), c_void_p(buf710.data_ptr()), c_void_p(buf711.data_ptr()), c_void_p(buf713.data_ptr()), c_void_p(buf714.data_ptr()))
    del primals_212
    # Source Nodes: [x_in_134], Original ATen: [aten.convolution]
    buf715 = extern_kernels.convolution(buf714, buf34, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf715, (8, 1600, 7, 7), (78400, 1, 11200, 1600))
    buf716 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf717 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf719 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf720 = empty_strided((8, 1600, 7, 7), (78400, 1, 11200, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_102(c_void_p(buf715.data_ptr()), c_void_p(primals_213.data_ptr()), c_void_p(primals_214.data_ptr()), c_void_p(buf716.data_ptr()), c_void_p(buf717.data_ptr()), c_void_p(buf719.data_ptr()), c_void_p(buf720.data_ptr()))
    del primals_214
    # Source Nodes: [x_in_135], Original ATen: [aten.convolution]
    buf721 = extern_kernels.convolution(buf720, primals_329, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf721, (8, 2176, 7, 7), (106624, 1, 15232, 2176))
    buf722 = empty_strided((8, 2560, 7, 7), (125440, 1, 17920, 2560), device='cpu', dtype=torch.float32)
    buf723 = empty_strided((1, 2560, 1, 1), (2560, 1, 2560, 2560), device='cpu', dtype=torch.float32)
    buf724 = empty_strided((1, 2560, 1, 1), (2560, 1, 2560, 2560), device='cpu', dtype=torch.float32)
    buf726 = empty((2560, ), device='cpu', dtype=torch.float32)
    buf727 = empty_strided((8, 2560, 7, 7), (125440, 1, 17920, 2560), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_cat_relu_103(c_void_p(buf688.data_ptr()), c_void_p(buf702.data_ptr()), c_void_p(buf721.data_ptr()), c_void_p(primals_215.data_ptr()), c_void_p(primals_216.data_ptr()), c_void_p(buf722.data_ptr()), c_void_p(buf723.data_ptr()), c_void_p(buf724.data_ptr()), c_void_p(buf726.data_ptr()), c_void_p(buf727.data_ptr()))
    del primals_216
    # Source Nodes: [x_in_137], Original ATen: [aten.convolution]
    buf728 = extern_kernels.convolution(buf727, primals_330, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf728, (8, 1600, 7, 7), (78400, 1, 11200, 1600))
    buf729 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf730 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf732 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf733 = empty_strided((8, 1600, 7, 7), (78400, 1, 11200, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_104(c_void_p(buf728.data_ptr()), c_void_p(primals_217.data_ptr()), c_void_p(primals_218.data_ptr()), c_void_p(buf729.data_ptr()), c_void_p(buf730.data_ptr()), c_void_p(buf732.data_ptr()), c_void_p(buf733.data_ptr()))
    del primals_218
    # Source Nodes: [x_in_138], Original ATen: [aten.convolution]
    buf734 = extern_kernels.convolution(buf733, buf35, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=50, bias=None)
    assert_size_stride(buf734, (8, 1600, 7, 7), (78400, 1, 11200, 1600))
    buf735 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf736 = empty_strided((1, 1600, 1, 1), (1600, 1, 1600, 1600), device='cpu', dtype=torch.float32)
    buf738 = empty((1600, ), device='cpu', dtype=torch.float32)
    buf739 = empty_strided((8, 1600, 7, 7), (78400, 1, 11200, 1600), device='cpu', dtype=torch.float32)
    cpp_fused__native_batch_norm_legit_functional_relu_105(c_void_p(buf734.data_ptr()), c_void_p(primals_219.data_ptr()), c_void_p(primals_220.data_ptr()), c_void_p(buf735.data_ptr()), c_void_p(buf736.data_ptr()), c_void_p(buf738.data_ptr()), c_void_p(buf739.data_ptr()))
    del primals_220
    # Source Nodes: [x_in_139], Original ATen: [aten.convolution]
    buf740 = extern_kernels.convolution(buf739, primals_332, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
    assert_size_stride(buf740, (8, 2176, 7, 7), (106624, 1, 15232, 2176))
    buf741 = empty_strided((8, 2688, 7, 7), (131712, 1, 18816, 2688), device='cpu', dtype=torch.float32)
    buf742 = empty_strided((1, 2688, 1, 1), (2688, 1, 2688, 2688), device='cpu', dtype=torch.float32)
    buf743 = empty_strided((1, 2688, 1, 1), (2688, 1, 2688, 2688), device='cpu', dtype=torch.float32)
    buf745 = empty((2688, ), device='cpu', dtype=torch.float32)
    buf746 = empty_strided((8, 2688, 7, 7), (131712, 1, 18816, 2688), device='cpu', dtype=torch.float32)
    buf747 = empty_strided((8, 2688, 1, 1), (2688, 1, 21504, 21504), device='cpu', dtype=torch.float32)
    buf748 = reinterpret_tensor(buf747, (8, 2688, 1, 1), (2688, 1, 2688, 2688), 0); del buf747  # reuse
    cpp_fused__native_batch_norm_legit_functional_cat_mean_relu_106(c_void_p(buf748.data_ptr()), c_void_p(buf688.data_ptr()), c_void_p(buf702.data_ptr()), c_void_p(buf721.data_ptr()), c_void_p(buf740.data_ptr()), c_void_p(primals_221.data_ptr()), c_void_p(primals_222.data_ptr()), c_void_p(buf741.data_ptr()), c_void_p(buf742.data_ptr()), c_void_p(buf743.data_ptr()), c_void_p(buf745.data_ptr()), c_void_p(buf746.data_ptr()))
    del buf688
    del buf702
    del buf721
    del buf740
    del primals_222
    # Source Nodes: [x_340], Original ATen: [aten.convolution]
    buf749 = extern_kernels.convolution(buf748, primals_333, primals_334, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1)
    assert_size_stride(buf749, (8, 1000, 1, 1), (1000, 1, 1000, 1000))
    del primals_334
    buf750 = empty_strided((8, 2688, 7, 7), (131712, 1, 18816, 2688), device='cpu', dtype=torch.bool)
    buf751 = empty_strided((8, 128, 56, 56), (401408, 1, 7168, 128), device='cpu', dtype=torch.float32)
    buf758 = reinterpret_tensor(buf39, (128, ), (1, ), 0); del buf39  # reuse
    buf782 = reinterpret_tensor(buf54, (200, ), (1, ), 0); del buf54  # reuse
    buf790 = reinterpret_tensor(buf60, (200, ), (1, ), 0); del buf60  # reuse
    buf798 = reinterpret_tensor(buf67, (316, ), (1, ), 0); del buf67  # reuse
    buf806 = reinterpret_tensor(buf73, (200, ), (1, ), 0); del buf73  # reuse
    buf814 = reinterpret_tensor(buf79, (200, ), (1, ), 0); del buf79  # reuse
    buf822 = reinterpret_tensor(buf86, (336, ), (1, ), 0); del buf86  # reuse
    buf830 = reinterpret_tensor(buf92, (200, ), (1, ), 0); del buf92  # reuse
    buf838 = reinterpret_tensor(buf98, (200, ), (1, ), 0); del buf98  # reuse
    buf846 = reinterpret_tensor(buf105, (356, ), (1, ), 0); del buf105  # reuse
    buf854 = reinterpret_tensor(buf111, (200, ), (1, ), 0); del buf111  # reuse
    buf862 = reinterpret_tensor(buf117, (200, ), (1, ), 0); del buf117  # reuse
    buf886 = reinterpret_tensor(buf135, (400, ), (1, ), 0); del buf135  # reuse
    buf894 = reinterpret_tensor(buf141, (400, ), (1, ), 0); del buf141  # reuse
    buf902 = reinterpret_tensor(buf148, (704, ), (1, ), 0); del buf148  # reuse
    buf910 = reinterpret_tensor(buf154, (400, ), (1, ), 0); del buf154  # reuse
    buf918 = reinterpret_tensor(buf160, (400, ), (1, ), 0); del buf160  # reuse
    buf926 = reinterpret_tensor(buf167, (768, ), (1, ), 0); del buf167  # reuse
    buf934 = reinterpret_tensor(buf173, (400, ), (1, ), 0); del buf173  # reuse
    buf942 = reinterpret_tensor(buf179, (400, ), (1, ), 0); del buf179  # reuse
    buf950 = reinterpret_tensor(buf186, (832, ), (1, ), 0); del buf186  # reuse
    buf958 = reinterpret_tensor(buf192, (400, ), (1, ), 0); del buf192  # reuse
    buf966 = reinterpret_tensor(buf198, (400, ), (1, ), 0); del buf198  # reuse
    buf974 = reinterpret_tensor(buf208, (896, ), (1, ), 0); del buf208  # reuse
    buf982 = reinterpret_tensor(buf214, (400, ), (1, ), 0); del buf214  # reuse
    buf990 = reinterpret_tensor(buf220, (400, ), (1, ), 0); del buf220  # reuse
    buf998 = reinterpret_tensor(buf227, (960, ), (1, ), 0); del buf227  # reuse
    buf1006 = reinterpret_tensor(buf233, (400, ), (1, ), 0); del buf233  # reuse
    buf1014 = reinterpret_tensor(buf239, (400, ), (1, ), 0); del buf239  # reuse
    buf1022 = reinterpret_tensor(buf246, (1024, ), (1, ), 0); del buf246  # reuse
    buf1030 = reinterpret_tensor(buf252, (400, ), (1, ), 0); del buf252  # reuse
    buf1038 = reinterpret_tensor(buf258, (400, ), (1, ), 0); del buf258  # reuse
    buf1046 = reinterpret_tensor(buf265, (1088, ), (1, ), 0); del buf265  # reuse
    buf1054 = reinterpret_tensor(buf271, (400, ), (1, ), 0); del buf271  # reuse
    buf1062 = reinterpret_tensor(buf277, (400, ), (1, ), 0); del buf277  # reuse
    buf1086 = reinterpret_tensor(buf295, (800, ), (1, ), 0); del buf295  # reuse
    buf1094 = reinterpret_tensor(buf301, (800, ), (1, ), 0); del buf301  # reuse
    buf1102 = reinterpret_tensor(buf308, (1216, ), (1, ), 0); del buf308  # reuse
    buf1110 = reinterpret_tensor(buf314, (800, ), (1, ), 0); del buf314  # reuse
    buf1118 = reinterpret_tensor(buf320, (800, ), (1, ), 0); del buf320  # reuse
    buf1126 = reinterpret_tensor(buf327, (1280, ), (1, ), 0); del buf327  # reuse
    buf1134 = reinterpret_tensor(buf333, (800, ), (1, ), 0); del buf333  # reuse
    buf1142 = reinterpret_tensor(buf339, (800, ), (1, ), 0); del buf339  # reuse
    buf1150 = reinterpret_tensor(buf346, (1344, ), (1, ), 0); del buf346  # reuse
    buf1158 = reinterpret_tensor(buf352, (800, ), (1, ), 0); del buf352  # reuse
    buf1166 = reinterpret_tensor(buf358, (800, ), (1, ), 0); del buf358  # reuse
    buf1174 = reinterpret_tensor(buf368, (1408, ), (1, ), 0); del buf368  # reuse
    buf1182 = reinterpret_tensor(buf374, (800, ), (1, ), 0); del buf374  # reuse
    buf1190 = reinterpret_tensor(buf380, (800, ), (1, ), 0); del buf380  # reuse
    buf1198 = reinterpret_tensor(buf387, (1472, ), (1, ), 0); del buf387  # reuse
    buf1206 = reinterpret_tensor(buf393, (800, ), (1, ), 0); del buf393  # reuse
    buf1214 = reinterpret_tensor(buf399, (800, ), (1, ), 0); del buf399  # reuse
    buf1222 = reinterpret_tensor(buf406, (1536, ), (1, ), 0); del buf406  # reuse
    buf1230 = reinterpret_tensor(buf412, (800, ), (1, ), 0); del buf412  # reuse
    buf1238 = reinterpret_tensor(buf418, (800, ), (1, ), 0); del buf418  # reuse
    buf1246 = reinterpret_tensor(buf425, (1600, ), (1, ), 0); del buf425  # reuse
    buf1254 = reinterpret_tensor(buf431, (800, ), (1, ), 0); del buf431  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_native_batch_norm_backward_threshold_backward_107(c_void_p(buf758.data_ptr()), c_void_p(buf782.data_ptr()), c_void_p(buf790.data_ptr()), c_void_p(buf798.data_ptr()), c_void_p(buf806.data_ptr()), c_void_p(buf814.data_ptr()), c_void_p(buf822.data_ptr()), c_void_p(buf830.data_ptr()), c_void_p(buf838.data_ptr()), c_void_p(buf846.data_ptr()), c_void_p(buf854.data_ptr()), c_void_p(buf862.data_ptr()), c_void_p(buf886.data_ptr()), c_void_p(buf894.data_ptr()), c_void_p(buf902.data_ptr()), c_void_p(buf910.data_ptr()), c_void_p(buf918.data_ptr()), c_void_p(buf926.data_ptr()), c_void_p(buf934.data_ptr()), c_void_p(buf942.data_ptr()), c_void_p(buf950.data_ptr()), c_void_p(buf958.data_ptr()), c_void_p(buf966.data_ptr()), c_void_p(buf974.data_ptr()), c_void_p(buf982.data_ptr()), c_void_p(buf990.data_ptr()), c_void_p(buf998.data_ptr()), c_void_p(buf1006.data_ptr()), c_void_p(buf1014.data_ptr()), c_void_p(buf1022.data_ptr()), c_void_p(buf1030.data_ptr()), c_void_p(buf1038.data_ptr()), c_void_p(buf1046.data_ptr()), c_void_p(buf1054.data_ptr()), c_void_p(buf1062.data_ptr()), c_void_p(buf1086.data_ptr()), c_void_p(buf1094.data_ptr()), c_void_p(buf1102.data_ptr()), c_void_p(buf1110.data_ptr()), c_void_p(buf1118.data_ptr()), c_void_p(buf1126.data_ptr()), c_void_p(buf1134.data_ptr()), c_void_p(buf1142.data_ptr()), c_void_p(buf1150.data_ptr()), c_void_p(buf1158.data_ptr()), c_void_p(buf1166.data_ptr()), c_void_p(buf1174.data_ptr()), c_void_p(buf1182.data_ptr()), c_void_p(buf1190.data_ptr()), c_void_p(buf1198.data_ptr()), c_void_p(buf1206.data_ptr()), c_void_p(buf1214.data_ptr()), c_void_p(buf1222.data_ptr()), c_void_p(buf1230.data_ptr()), c_void_p(buf1238.data_ptr()), c_void_p(buf1246.data_ptr()), c_void_p(buf1254.data_ptr()), c_void_p(buf746.data_ptr()), c_void_p(buf43.data_ptr()), c_void_p(buf45.data_ptr()), c_void_p(primals_335.data_ptr()), c_void_p(buf38.data_ptr()), c_void_p(primals_336.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(primals_338.data_ptr()), c_void_p(primals_339.data_ptr()), c_void_p(primals_342.data_ptr()), c_void_p(buf46.data_ptr()), c_void_p(primals_340.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(primals_341.data_ptr()), c_void_p(primals_344.data_ptr()), c_void_p(buf53.data_ptr()), c_void_p(primals_345.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(primals_347.data_ptr()), c_void_p(buf59.data_ptr()), c_void_p(primals_348.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(primals_350.data_ptr()), c_void_p(buf66.data_ptr()), c_void_p(primals_351.data_ptr()), c_void_p(primals_352.data_ptr()), c_void_p(primals_353.data_ptr()), c_void_p(buf72.data_ptr()), c_void_p(primals_354.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(primals_356.data_ptr()), c_void_p(buf78.data_ptr()), c_void_p(primals_357.data_ptr()), c_void_p(primals_358.data_ptr()), c_void_p(primals_359.data_ptr()), c_void_p(buf85.data_ptr()), c_void_p(primals_360.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(primals_362.data_ptr()), c_void_p(buf91.data_ptr()), c_void_p(primals_363.data_ptr()), c_void_p(primals_364.data_ptr()), c_void_p(primals_365.data_ptr()), c_void_p(buf97.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(primals_367.data_ptr()), c_void_p(primals_368.data_ptr()), c_void_p(buf104.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_370.data_ptr()), c_void_p(primals_371.data_ptr()), c_void_p(buf110.data_ptr()), c_void_p(primals_372.data_ptr()), c_void_p(primals_373.data_ptr()), c_void_p(primals_374.data_ptr()), c_void_p(buf116.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(primals_376.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(buf126.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(buf127.data_ptr()), c_void_p(primals_379.data_ptr()), c_void_p(primals_382.data_ptr()), c_void_p(primals_380.data_ptr()), c_void_p(primals_383.data_ptr()), c_void_p(buf134.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(primals_385.data_ptr()), c_void_p(primals_386.data_ptr()), c_void_p(buf140.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_388.data_ptr()), c_void_p(primals_389.data_ptr()), c_void_p(buf147.data_ptr()), c_void_p(primals_390.data_ptr()), c_void_p(primals_391.data_ptr()), c_void_p(primals_392.data_ptr()), c_void_p(buf153.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_394.data_ptr()), c_void_p(primals_395.data_ptr()), c_void_p(buf159.data_ptr()), c_void_p(primals_396.data_ptr()), c_void_p(primals_397.data_ptr()), c_void_p(primals_398.data_ptr()), c_void_p(buf166.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_400.data_ptr()), c_void_p(primals_401.data_ptr()), c_void_p(buf172.data_ptr()), c_void_p(primals_402.data_ptr()), c_void_p(primals_403.data_ptr()), c_void_p(primals_404.data_ptr()), c_void_p(buf178.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_406.data_ptr()), c_void_p(primals_407.data_ptr()), c_void_p(buf185.data_ptr()), c_void_p(primals_408.data_ptr()), c_void_p(primals_409.data_ptr()), c_void_p(primals_410.data_ptr()), c_void_p(buf191.data_ptr()), c_void_p(primals_411.data_ptr()), c_void_p(primals_412.data_ptr()), c_void_p(primals_413.data_ptr()), c_void_p(buf197.data_ptr()), c_void_p(primals_414.data_ptr()), c_void_p(primals_415.data_ptr()), c_void_p(primals_416.data_ptr()), c_void_p(buf207.data_ptr()), c_void_p(primals_417.data_ptr()), c_void_p(primals_418.data_ptr()), c_void_p(primals_419.data_ptr()), c_void_p(buf213.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_421.data_ptr()), c_void_p(primals_422.data_ptr()), c_void_p(buf219.data_ptr()), c_void_p(primals_423.data_ptr()), c_void_p(primals_424.data_ptr()), c_void_p(primals_425.data_ptr()), c_void_p(buf226.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_427.data_ptr()), c_void_p(primals_428.data_ptr()), c_void_p(buf232.data_ptr()), c_void_p(primals_429.data_ptr()), c_void_p(primals_430.data_ptr()), c_void_p(primals_431.data_ptr()), c_void_p(buf238.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_433.data_ptr()), c_void_p(primals_434.data_ptr()), c_void_p(buf245.data_ptr()), c_void_p(primals_435.data_ptr()), c_void_p(primals_436.data_ptr()), c_void_p(primals_437.data_ptr()), c_void_p(buf251.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_439.data_ptr()), c_void_p(primals_440.data_ptr()), c_void_p(buf257.data_ptr()), c_void_p(primals_441.data_ptr()), c_void_p(primals_442.data_ptr()), c_void_p(primals_443.data_ptr()), c_void_p(buf264.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_445.data_ptr()), c_void_p(primals_446.data_ptr()), c_void_p(buf270.data_ptr()), c_void_p(primals_447.data_ptr()), c_void_p(primals_448.data_ptr()), c_void_p(primals_449.data_ptr()), c_void_p(buf276.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_451.data_ptr()), c_void_p(primals_452.data_ptr()), c_void_p(buf286.data_ptr()), c_void_p(primals_453.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(buf287.data_ptr()), c_void_p(primals_454.data_ptr()), c_void_p(primals_457.data_ptr()), c_void_p(primals_455.data_ptr()), c_void_p(primals_458.data_ptr()), c_void_p(buf294.data_ptr()), c_void_p(primals_459.data_ptr()), c_void_p(primals_460.data_ptr()), c_void_p(primals_461.data_ptr()), c_void_p(buf300.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_463.data_ptr()), c_void_p(primals_464.data_ptr()), c_void_p(buf307.data_ptr()), c_void_p(primals_465.data_ptr()), c_void_p(primals_466.data_ptr()), c_void_p(primals_467.data_ptr()), c_void_p(buf313.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_469.data_ptr()), c_void_p(primals_470.data_ptr()), c_void_p(buf319.data_ptr()), c_void_p(primals_471.data_ptr()), c_void_p(primals_472.data_ptr()), c_void_p(primals_473.data_ptr()), c_void_p(buf326.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_475.data_ptr()), c_void_p(primals_476.data_ptr()), c_void_p(buf332.data_ptr()), c_void_p(primals_477.data_ptr()), c_void_p(primals_478.data_ptr()), c_void_p(primals_479.data_ptr()), c_void_p(buf338.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_481.data_ptr()), c_void_p(primals_482.data_ptr()), c_void_p(buf345.data_ptr()), c_void_p(primals_483.data_ptr()), c_void_p(primals_484.data_ptr()), c_void_p(primals_485.data_ptr()), c_void_p(buf351.data_ptr()), c_void_p(primals_486.data_ptr()), c_void_p(primals_487.data_ptr()), c_void_p(primals_488.data_ptr()), c_void_p(buf357.data_ptr()), c_void_p(primals_489.data_ptr()), c_void_p(primals_490.data_ptr()), c_void_p(primals_491.data_ptr()), c_void_p(buf367.data_ptr()), c_void_p(primals_492.data_ptr()), c_void_p(primals_493.data_ptr()), c_void_p(primals_494.data_ptr()), c_void_p(buf373.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(primals_496.data_ptr()), c_void_p(primals_497.data_ptr()), c_void_p(buf379.data_ptr()), c_void_p(primals_498.data_ptr()), c_void_p(primals_499.data_ptr()), c_void_p(primals_500.data_ptr()), c_void_p(buf386.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_502.data_ptr()), c_void_p(primals_503.data_ptr()), c_void_p(buf392.data_ptr()), c_void_p(primals_504.data_ptr()), c_void_p(primals_505.data_ptr()), c_void_p(primals_506.data_ptr()), c_void_p(buf398.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_508.data_ptr()), c_void_p(primals_509.data_ptr()), c_void_p(buf405.data_ptr()), c_void_p(primals_510.data_ptr()), c_void_p(primals_511.data_ptr()), c_void_p(primals_512.data_ptr()), c_void_p(buf411.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_514.data_ptr()), c_void_p(primals_515.data_ptr()), c_void_p(buf417.data_ptr()), c_void_p(primals_516.data_ptr()), c_void_p(primals_517.data_ptr()), c_void_p(primals_518.data_ptr()), c_void_p(buf424.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_520.data_ptr()), c_void_p(primals_521.data_ptr()), c_void_p(buf430.data_ptr()), c_void_p(primals_522.data_ptr()), c_void_p(primals_523.data_ptr()), c_void_p(buf750.data_ptr()), c_void_p(buf751.data_ptr()), c_void_p(primals_335.data_ptr()), c_void_p(primals_336.data_ptr()), c_void_p(primals_337.data_ptr()), c_void_p(primals_338.data_ptr()), c_void_p(primals_339.data_ptr()), c_void_p(primals_342.data_ptr()), c_void_p(primals_340.data_ptr()), c_void_p(primals_343.data_ptr()), c_void_p(primals_341.data_ptr()), c_void_p(primals_344.data_ptr()), c_void_p(primals_345.data_ptr()), c_void_p(primals_346.data_ptr()), c_void_p(primals_347.data_ptr()), c_void_p(primals_348.data_ptr()), c_void_p(primals_349.data_ptr()), c_void_p(primals_350.data_ptr()), c_void_p(primals_351.data_ptr()), c_void_p(primals_352.data_ptr()), c_void_p(primals_353.data_ptr()), c_void_p(primals_354.data_ptr()), c_void_p(primals_355.data_ptr()), c_void_p(primals_356.data_ptr()), c_void_p(primals_357.data_ptr()), c_void_p(primals_358.data_ptr()), c_void_p(primals_359.data_ptr()), c_void_p(primals_360.data_ptr()), c_void_p(primals_361.data_ptr()), c_void_p(primals_362.data_ptr()), c_void_p(primals_363.data_ptr()), c_void_p(primals_364.data_ptr()), c_void_p(primals_365.data_ptr()), c_void_p(primals_366.data_ptr()), c_void_p(primals_367.data_ptr()), c_void_p(primals_368.data_ptr()), c_void_p(primals_369.data_ptr()), c_void_p(primals_370.data_ptr()), c_void_p(primals_371.data_ptr()), c_void_p(primals_372.data_ptr()), c_void_p(primals_373.data_ptr()), c_void_p(primals_374.data_ptr()), c_void_p(primals_375.data_ptr()), c_void_p(primals_376.data_ptr()), c_void_p(primals_377.data_ptr()), c_void_p(primals_378.data_ptr()), c_void_p(primals_381.data_ptr()), c_void_p(primals_379.data_ptr()), c_void_p(primals_382.data_ptr()), c_void_p(primals_380.data_ptr()), c_void_p(primals_383.data_ptr()), c_void_p(primals_384.data_ptr()), c_void_p(primals_385.data_ptr()), c_void_p(primals_386.data_ptr()), c_void_p(primals_387.data_ptr()), c_void_p(primals_388.data_ptr()), c_void_p(primals_389.data_ptr()), c_void_p(primals_390.data_ptr()), c_void_p(primals_391.data_ptr()), c_void_p(primals_392.data_ptr()), c_void_p(primals_393.data_ptr()), c_void_p(primals_394.data_ptr()), c_void_p(primals_395.data_ptr()), c_void_p(primals_396.data_ptr()), c_void_p(primals_397.data_ptr()), c_void_p(primals_398.data_ptr()), c_void_p(primals_399.data_ptr()), c_void_p(primals_400.data_ptr()), c_void_p(primals_401.data_ptr()), c_void_p(primals_402.data_ptr()), c_void_p(primals_403.data_ptr()), c_void_p(primals_404.data_ptr()), c_void_p(primals_405.data_ptr()), c_void_p(primals_406.data_ptr()), c_void_p(primals_407.data_ptr()), c_void_p(primals_408.data_ptr()), c_void_p(primals_409.data_ptr()), c_void_p(primals_410.data_ptr()), c_void_p(primals_411.data_ptr()), c_void_p(primals_412.data_ptr()), c_void_p(primals_413.data_ptr()), c_void_p(primals_414.data_ptr()), c_void_p(primals_415.data_ptr()), c_void_p(primals_416.data_ptr()), c_void_p(primals_417.data_ptr()), c_void_p(primals_418.data_ptr()), c_void_p(primals_419.data_ptr()), c_void_p(primals_420.data_ptr()), c_void_p(primals_421.data_ptr()), c_void_p(primals_422.data_ptr()), c_void_p(primals_423.data_ptr()), c_void_p(primals_424.data_ptr()), c_void_p(primals_425.data_ptr()), c_void_p(primals_426.data_ptr()), c_void_p(primals_427.data_ptr()), c_void_p(primals_428.data_ptr()), c_void_p(primals_429.data_ptr()), c_void_p(primals_430.data_ptr()), c_void_p(primals_431.data_ptr()), c_void_p(primals_432.data_ptr()), c_void_p(primals_433.data_ptr()), c_void_p(primals_434.data_ptr()), c_void_p(primals_435.data_ptr()), c_void_p(primals_436.data_ptr()), c_void_p(primals_437.data_ptr()), c_void_p(primals_438.data_ptr()), c_void_p(primals_439.data_ptr()), c_void_p(primals_440.data_ptr()), c_void_p(primals_441.data_ptr()), c_void_p(primals_442.data_ptr()), c_void_p(primals_443.data_ptr()), c_void_p(primals_444.data_ptr()), c_void_p(primals_445.data_ptr()), c_void_p(primals_446.data_ptr()), c_void_p(primals_447.data_ptr()), c_void_p(primals_448.data_ptr()), c_void_p(primals_449.data_ptr()), c_void_p(primals_450.data_ptr()), c_void_p(primals_451.data_ptr()), c_void_p(primals_452.data_ptr()), c_void_p(primals_453.data_ptr()), c_void_p(primals_456.data_ptr()), c_void_p(primals_454.data_ptr()), c_void_p(primals_457.data_ptr()), c_void_p(primals_455.data_ptr()), c_void_p(primals_458.data_ptr()), c_void_p(primals_459.data_ptr()), c_void_p(primals_460.data_ptr()), c_void_p(primals_461.data_ptr()), c_void_p(primals_462.data_ptr()), c_void_p(primals_463.data_ptr()), c_void_p(primals_464.data_ptr()), c_void_p(primals_465.data_ptr()), c_void_p(primals_466.data_ptr()), c_void_p(primals_467.data_ptr()), c_void_p(primals_468.data_ptr()), c_void_p(primals_469.data_ptr()), c_void_p(primals_470.data_ptr()), c_void_p(primals_471.data_ptr()), c_void_p(primals_472.data_ptr()), c_void_p(primals_473.data_ptr()), c_void_p(primals_474.data_ptr()), c_void_p(primals_475.data_ptr()), c_void_p(primals_476.data_ptr()), c_void_p(primals_477.data_ptr()), c_void_p(primals_478.data_ptr()), c_void_p(primals_479.data_ptr()), c_void_p(primals_480.data_ptr()), c_void_p(primals_481.data_ptr()), c_void_p(primals_482.data_ptr()), c_void_p(primals_483.data_ptr()), c_void_p(primals_484.data_ptr()), c_void_p(primals_485.data_ptr()), c_void_p(primals_486.data_ptr()), c_void_p(primals_487.data_ptr()), c_void_p(primals_488.data_ptr()), c_void_p(primals_489.data_ptr()), c_void_p(primals_490.data_ptr()), c_void_p(primals_491.data_ptr()), c_void_p(primals_492.data_ptr()), c_void_p(primals_493.data_ptr()), c_void_p(primals_494.data_ptr()), c_void_p(primals_495.data_ptr()), c_void_p(primals_496.data_ptr()), c_void_p(primals_497.data_ptr()), c_void_p(primals_498.data_ptr()), c_void_p(primals_499.data_ptr()), c_void_p(primals_500.data_ptr()), c_void_p(primals_501.data_ptr()), c_void_p(primals_502.data_ptr()), c_void_p(primals_503.data_ptr()), c_void_p(primals_504.data_ptr()), c_void_p(primals_505.data_ptr()), c_void_p(primals_506.data_ptr()), c_void_p(primals_507.data_ptr()), c_void_p(primals_508.data_ptr()), c_void_p(primals_509.data_ptr()), c_void_p(primals_510.data_ptr()), c_void_p(primals_511.data_ptr()), c_void_p(primals_512.data_ptr()), c_void_p(primals_513.data_ptr()), c_void_p(primals_514.data_ptr()), c_void_p(primals_515.data_ptr()), c_void_p(primals_516.data_ptr()), c_void_p(primals_517.data_ptr()), c_void_p(primals_518.data_ptr()), c_void_p(primals_519.data_ptr()), c_void_p(primals_520.data_ptr()), c_void_p(primals_521.data_ptr()), c_void_p(primals_522.data_ptr()), c_void_p(primals_523.data_ptr()))
    del buf1006
    del buf1014
    del buf1022
    del buf1030
    del buf1038
    del buf1046
    del buf1054
    del buf1062
    del buf1086
    del buf1094
    del buf1102
    del buf1110
    del buf1118
    del buf1126
    del buf1134
    del buf1142
    del buf1150
    del buf1158
    del buf1166
    del buf1174
    del buf1182
    del buf1190
    del buf1198
    del buf1206
    del buf1214
    del buf1222
    del buf1230
    del buf1238
    del buf1246
    del buf1254
    del buf127
    del buf287
    del buf43
    del buf45
    del buf46
    del buf746
    del buf758
    del buf782
    del buf790
    del buf798
    del buf806
    del buf814
    del buf822
    del buf830
    del buf838
    del buf846
    del buf854
    del buf862
    del buf886
    del buf894
    del buf902
    del buf910
    del buf918
    del buf926
    del buf934
    del buf942
    del buf950
    del buf958
    del buf966
    del buf974
    del buf982
    del buf990
    del buf998
    del primals_335
    del primals_336
    del primals_337
    del primals_338
    del primals_339
    del primals_340
    del primals_341
    del primals_342
    del primals_343
    del primals_344
    del primals_345
    del primals_346
    del primals_347
    del primals_348
    del primals_349
    del primals_350
    del primals_351
    del primals_352
    del primals_353
    del primals_354
    del primals_355
    del primals_356
    del primals_357
    del primals_358
    del primals_359
    del primals_360
    del primals_361
    del primals_362
    del primals_363
    del primals_364
    del primals_365
    del primals_366
    del primals_367
    del primals_368
    del primals_369
    del primals_370
    del primals_371
    del primals_372
    del primals_373
    del primals_374
    del primals_375
    del primals_376
    del primals_377
    del primals_378
    del primals_379
    del primals_380
    del primals_381
    del primals_382
    del primals_383
    del primals_384
    del primals_385
    del primals_386
    del primals_387
    del primals_388
    del primals_389
    del primals_390
    del primals_391
    del primals_392
    del primals_393
    del primals_394
    del primals_395
    del primals_396
    del primals_397
    del primals_398
    del primals_399
    del primals_400
    del primals_401
    del primals_402
    del primals_403
    del primals_404
    del primals_405
    del primals_406
    del primals_407
    del primals_408
    del primals_409
    del primals_410
    del primals_411
    del primals_412
    del primals_413
    del primals_414
    del primals_415
    del primals_416
    del primals_417
    del primals_418
    del primals_419
    del primals_420
    del primals_421
    del primals_422
    del primals_423
    del primals_424
    del primals_425
    del primals_426
    del primals_427
    del primals_428
    del primals_429
    del primals_430
    del primals_431
    del primals_432
    del primals_433
    del primals_434
    del primals_435
    del primals_436
    del primals_437
    del primals_438
    del primals_439
    del primals_440
    del primals_441
    del primals_442
    del primals_443
    del primals_444
    del primals_445
    del primals_446
    del primals_447
    del primals_448
    del primals_449
    del primals_450
    del primals_451
    del primals_452
    del primals_453
    del primals_454
    del primals_455
    del primals_456
    del primals_457
    del primals_458
    del primals_459
    del primals_460
    del primals_461
    del primals_462
    del primals_463
    del primals_464
    del primals_465
    del primals_466
    del primals_467
    del primals_468
    del primals_469
    del primals_470
    del primals_471
    del primals_472
    del primals_473
    del primals_474
    del primals_475
    del primals_476
    del primals_477
    del primals_478
    del primals_479
    del primals_480
    del primals_481
    del primals_482
    del primals_483
    del primals_484
    del primals_485
    del primals_486
    del primals_487
    del primals_488
    del primals_489
    del primals_490
    del primals_491
    del primals_492
    del primals_493
    del primals_494
    del primals_495
    del primals_496
    del primals_497
    del primals_498
    del primals_499
    del primals_500
    del primals_501
    del primals_502
    del primals_503
    del primals_504
    del primals_505
    del primals_506
    del primals_507
    del primals_508
    del primals_509
    del primals_510
    del primals_511
    del primals_512
    del primals_513
    del primals_514
    del primals_515
    del primals_516
    del primals_517
    del primals_518
    del primals_519
    del primals_520
    del primals_521
    del primals_522
    del primals_523
    buf1262 = reinterpret_tensor(buf437, (800, ), (1, ), 0); del buf437  # reuse
    buf1270 = reinterpret_tensor(buf447, (1664, ), (1, ), 0); del buf447  # reuse
    buf1278 = reinterpret_tensor(buf453, (800, ), (1, ), 0); del buf453  # reuse
    buf1286 = reinterpret_tensor(buf459, (800, ), (1, ), 0); del buf459  # reuse
    buf1294 = reinterpret_tensor(buf466, (1728, ), (1, ), 0); del buf466  # reuse
    buf1302 = reinterpret_tensor(buf472, (800, ), (1, ), 0); del buf472  # reuse
    buf1310 = reinterpret_tensor(buf478, (800, ), (1, ), 0); del buf478  # reuse
    buf1318 = reinterpret_tensor(buf485, (1792, ), (1, ), 0); del buf485  # reuse
    buf1326 = reinterpret_tensor(buf491, (800, ), (1, ), 0); del buf491  # reuse
    buf1334 = reinterpret_tensor(buf497, (800, ), (1, ), 0); del buf497  # reuse
    buf1342 = reinterpret_tensor(buf504, (1856, ), (1, ), 0); del buf504  # reuse
    buf1350 = reinterpret_tensor(buf510, (800, ), (1, ), 0); del buf510  # reuse
    buf1358 = reinterpret_tensor(buf516, (800, ), (1, ), 0); del buf516  # reuse
    buf1366 = reinterpret_tensor(buf526, (1920, ), (1, ), 0); del buf526  # reuse
    buf1374 = reinterpret_tensor(buf532, (800, ), (1, ), 0); del buf532  # reuse
    buf1382 = reinterpret_tensor(buf538, (800, ), (1, ), 0); del buf538  # reuse
    buf1390 = reinterpret_tensor(buf545, (1984, ), (1, ), 0); del buf545  # reuse
    buf1398 = reinterpret_tensor(buf551, (800, ), (1, ), 0); del buf551  # reuse
    buf1406 = reinterpret_tensor(buf557, (800, ), (1, ), 0); del buf557  # reuse
    buf1414 = reinterpret_tensor(buf564, (2048, ), (1, ), 0); del buf564  # reuse
    buf1422 = reinterpret_tensor(buf570, (800, ), (1, ), 0); del buf570  # reuse
    buf1430 = reinterpret_tensor(buf576, (800, ), (1, ), 0); del buf576  # reuse
    buf1438 = reinterpret_tensor(buf583, (2112, ), (1, ), 0); del buf583  # reuse
    buf1446 = reinterpret_tensor(buf589, (800, ), (1, ), 0); del buf589  # reuse
    buf1454 = reinterpret_tensor(buf595, (800, ), (1, ), 0); del buf595  # reuse
    buf1462 = reinterpret_tensor(buf605, (2176, ), (1, ), 0); del buf605  # reuse
    buf1470 = reinterpret_tensor(buf611, (800, ), (1, ), 0); del buf611  # reuse
    buf1478 = reinterpret_tensor(buf617, (800, ), (1, ), 0); del buf617  # reuse
    buf1486 = reinterpret_tensor(buf624, (2240, ), (1, ), 0); del buf624  # reuse
    buf1494 = reinterpret_tensor(buf630, (800, ), (1, ), 0); del buf630  # reuse
    buf1502 = reinterpret_tensor(buf636, (800, ), (1, ), 0); del buf636  # reuse
    buf1510 = reinterpret_tensor(buf643, (2304, ), (1, ), 0); del buf643  # reuse
    buf1518 = reinterpret_tensor(buf649, (800, ), (1, ), 0); del buf649  # reuse
    buf1526 = reinterpret_tensor(buf655, (800, ), (1, ), 0); del buf655  # reuse
    buf1534 = reinterpret_tensor(buf662, (2368, ), (1, ), 0); del buf662  # reuse
    buf1542 = reinterpret_tensor(buf668, (800, ), (1, ), 0); del buf668  # reuse
    buf1550 = reinterpret_tensor(buf674, (800, ), (1, ), 0); del buf674  # reuse
    buf1574 = reinterpret_tensor(buf692, (1600, ), (1, ), 0); del buf692  # reuse
    buf1582 = reinterpret_tensor(buf698, (1600, ), (1, ), 0); del buf698  # reuse
    buf1590 = reinterpret_tensor(buf705, (2432, ), (1, ), 0); del buf705  # reuse
    buf1598 = reinterpret_tensor(buf711, (1600, ), (1, ), 0); del buf711  # reuse
    buf1606 = reinterpret_tensor(buf717, (1600, ), (1, ), 0); del buf717  # reuse
    buf1614 = reinterpret_tensor(buf724, (2560, ), (1, ), 0); del buf724  # reuse
    buf1622 = reinterpret_tensor(buf730, (1600, ), (1, ), 0); del buf730  # reuse
    buf1630 = reinterpret_tensor(buf736, (1600, ), (1, ), 0); del buf736  # reuse
    buf1638 = reinterpret_tensor(buf743, (2688, ), (1, ), 0); del buf743  # reuse
    cpp_fused__native_batch_norm_legit_functional_add_108(c_void_p(buf1262.data_ptr()), c_void_p(buf1270.data_ptr()), c_void_p(buf1278.data_ptr()), c_void_p(buf1286.data_ptr()), c_void_p(buf1294.data_ptr()), c_void_p(buf1302.data_ptr()), c_void_p(buf1310.data_ptr()), c_void_p(buf1318.data_ptr()), c_void_p(buf1326.data_ptr()), c_void_p(buf1334.data_ptr()), c_void_p(buf1342.data_ptr()), c_void_p(buf1350.data_ptr()), c_void_p(buf1358.data_ptr()), c_void_p(buf1366.data_ptr()), c_void_p(buf1374.data_ptr()), c_void_p(buf1382.data_ptr()), c_void_p(buf1390.data_ptr()), c_void_p(buf1398.data_ptr()), c_void_p(buf1406.data_ptr()), c_void_p(buf1414.data_ptr()), c_void_p(buf1422.data_ptr()), c_void_p(buf1430.data_ptr()), c_void_p(buf1438.data_ptr()), c_void_p(buf1446.data_ptr()), c_void_p(buf1454.data_ptr()), c_void_p(buf1462.data_ptr()), c_void_p(buf1470.data_ptr()), c_void_p(buf1478.data_ptr()), c_void_p(buf1486.data_ptr()), c_void_p(buf1494.data_ptr()), c_void_p(buf1502.data_ptr()), c_void_p(buf1510.data_ptr()), c_void_p(buf1518.data_ptr()), c_void_p(buf1526.data_ptr()), c_void_p(buf1534.data_ptr()), c_void_p(buf1542.data_ptr()), c_void_p(buf1550.data_ptr()), c_void_p(buf1574.data_ptr()), c_void_p(buf1582.data_ptr()), c_void_p(buf1590.data_ptr()), c_void_p(buf1598.data_ptr()), c_void_p(buf1606.data_ptr()), c_void_p(buf1614.data_ptr()), c_void_p(buf1622.data_ptr()), c_void_p(buf1630.data_ptr()), c_void_p(buf1638.data_ptr()), c_void_p(primals_524.data_ptr()), c_void_p(buf436.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_526.data_ptr()), c_void_p(primals_527.data_ptr()), c_void_p(buf446.data_ptr()), c_void_p(primals_528.data_ptr()), c_void_p(primals_529.data_ptr()), c_void_p(primals_530.data_ptr()), c_void_p(buf452.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_532.data_ptr()), c_void_p(primals_533.data_ptr()), c_void_p(buf458.data_ptr()), c_void_p(primals_534.data_ptr()), c_void_p(primals_535.data_ptr()), c_void_p(primals_536.data_ptr()), c_void_p(buf465.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_538.data_ptr()), c_void_p(primals_539.data_ptr()), c_void_p(buf471.data_ptr()), c_void_p(primals_540.data_ptr()), c_void_p(primals_541.data_ptr()), c_void_p(primals_542.data_ptr()), c_void_p(buf477.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_544.data_ptr()), c_void_p(primals_545.data_ptr()), c_void_p(buf484.data_ptr()), c_void_p(primals_546.data_ptr()), c_void_p(primals_547.data_ptr()), c_void_p(primals_548.data_ptr()), c_void_p(buf490.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_550.data_ptr()), c_void_p(primals_551.data_ptr()), c_void_p(buf496.data_ptr()), c_void_p(primals_552.data_ptr()), c_void_p(primals_553.data_ptr()), c_void_p(primals_554.data_ptr()), c_void_p(buf503.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_556.data_ptr()), c_void_p(primals_557.data_ptr()), c_void_p(buf509.data_ptr()), c_void_p(primals_558.data_ptr()), c_void_p(primals_559.data_ptr()), c_void_p(primals_560.data_ptr()), c_void_p(buf515.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_562.data_ptr()), c_void_p(primals_563.data_ptr()), c_void_p(buf525.data_ptr()), c_void_p(primals_564.data_ptr()), c_void_p(primals_565.data_ptr()), c_void_p(primals_566.data_ptr()), c_void_p(buf531.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_568.data_ptr()), c_void_p(primals_569.data_ptr()), c_void_p(buf537.data_ptr()), c_void_p(primals_570.data_ptr()), c_void_p(primals_571.data_ptr()), c_void_p(primals_572.data_ptr()), c_void_p(buf544.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_574.data_ptr()), c_void_p(primals_575.data_ptr()), c_void_p(buf550.data_ptr()), c_void_p(primals_576.data_ptr()), c_void_p(primals_577.data_ptr()), c_void_p(primals_578.data_ptr()), c_void_p(buf556.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_580.data_ptr()), c_void_p(primals_581.data_ptr()), c_void_p(buf563.data_ptr()), c_void_p(primals_582.data_ptr()), c_void_p(primals_583.data_ptr()), c_void_p(primals_584.data_ptr()), c_void_p(buf569.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_586.data_ptr()), c_void_p(primals_587.data_ptr()), c_void_p(buf575.data_ptr()), c_void_p(primals_588.data_ptr()), c_void_p(primals_589.data_ptr()), c_void_p(primals_590.data_ptr()), c_void_p(buf582.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_592.data_ptr()), c_void_p(primals_593.data_ptr()), c_void_p(buf588.data_ptr()), c_void_p(primals_594.data_ptr()), c_void_p(primals_595.data_ptr()), c_void_p(primals_596.data_ptr()), c_void_p(buf594.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_598.data_ptr()), c_void_p(primals_599.data_ptr()), c_void_p(buf604.data_ptr()), c_void_p(primals_600.data_ptr()), c_void_p(primals_601.data_ptr()), c_void_p(primals_602.data_ptr()), c_void_p(buf610.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_604.data_ptr()), c_void_p(primals_605.data_ptr()), c_void_p(buf616.data_ptr()), c_void_p(primals_606.data_ptr()), c_void_p(primals_607.data_ptr()), c_void_p(primals_608.data_ptr()), c_void_p(buf623.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_610.data_ptr()), c_void_p(primals_611.data_ptr()), c_void_p(buf629.data_ptr()), c_void_p(primals_612.data_ptr()), c_void_p(primals_613.data_ptr()), c_void_p(primals_614.data_ptr()), c_void_p(buf635.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_616.data_ptr()), c_void_p(primals_617.data_ptr()), c_void_p(buf642.data_ptr()), c_void_p(primals_618.data_ptr()), c_void_p(primals_619.data_ptr()), c_void_p(primals_620.data_ptr()), c_void_p(buf648.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_622.data_ptr()), c_void_p(primals_623.data_ptr()), c_void_p(buf654.data_ptr()), c_void_p(primals_624.data_ptr()), c_void_p(primals_625.data_ptr()), c_void_p(primals_626.data_ptr()), c_void_p(buf661.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_628.data_ptr()), c_void_p(primals_629.data_ptr()), c_void_p(buf667.data_ptr()), c_void_p(primals_630.data_ptr()), c_void_p(primals_631.data_ptr()), c_void_p(primals_632.data_ptr()), c_void_p(buf673.data_ptr()), c_void_p(primals_633.data_ptr()), c_void_p(primals_634.data_ptr()), c_void_p(primals_635.data_ptr()), c_void_p(buf683.data_ptr()), c_void_p(primals_636.data_ptr()), c_void_p(primals_639.data_ptr()), c_void_p(buf684.data_ptr()), c_void_p(primals_637.data_ptr()), c_void_p(primals_640.data_ptr()), c_void_p(primals_638.data_ptr()), c_void_p(primals_641.data_ptr()), c_void_p(buf691.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_643.data_ptr()), c_void_p(primals_644.data_ptr()), c_void_p(buf697.data_ptr()), c_void_p(primals_645.data_ptr()), c_void_p(primals_646.data_ptr()), c_void_p(primals_647.data_ptr()), c_void_p(buf704.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_649.data_ptr()), c_void_p(primals_650.data_ptr()), c_void_p(buf710.data_ptr()), c_void_p(primals_651.data_ptr()), c_void_p(primals_652.data_ptr()), c_void_p(primals_653.data_ptr()), c_void_p(buf716.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_655.data_ptr()), c_void_p(primals_656.data_ptr()), c_void_p(buf723.data_ptr()), c_void_p(primals_657.data_ptr()), c_void_p(primals_658.data_ptr()), c_void_p(primals_659.data_ptr()), c_void_p(buf729.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_661.data_ptr()), c_void_p(primals_662.data_ptr()), c_void_p(buf735.data_ptr()), c_void_p(primals_663.data_ptr()), c_void_p(primals_664.data_ptr()), c_void_p(primals_665.data_ptr()), c_void_p(buf742.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_667.data_ptr()), c_void_p(primals_524.data_ptr()), c_void_p(primals_525.data_ptr()), c_void_p(primals_526.data_ptr()), c_void_p(primals_527.data_ptr()), c_void_p(primals_528.data_ptr()), c_void_p(primals_529.data_ptr()), c_void_p(primals_530.data_ptr()), c_void_p(primals_531.data_ptr()), c_void_p(primals_532.data_ptr()), c_void_p(primals_533.data_ptr()), c_void_p(primals_534.data_ptr()), c_void_p(primals_535.data_ptr()), c_void_p(primals_536.data_ptr()), c_void_p(primals_537.data_ptr()), c_void_p(primals_538.data_ptr()), c_void_p(primals_539.data_ptr()), c_void_p(primals_540.data_ptr()), c_void_p(primals_541.data_ptr()), c_void_p(primals_542.data_ptr()), c_void_p(primals_543.data_ptr()), c_void_p(primals_544.data_ptr()), c_void_p(primals_545.data_ptr()), c_void_p(primals_546.data_ptr()), c_void_p(primals_547.data_ptr()), c_void_p(primals_548.data_ptr()), c_void_p(primals_549.data_ptr()), c_void_p(primals_550.data_ptr()), c_void_p(primals_551.data_ptr()), c_void_p(primals_552.data_ptr()), c_void_p(primals_553.data_ptr()), c_void_p(primals_554.data_ptr()), c_void_p(primals_555.data_ptr()), c_void_p(primals_556.data_ptr()), c_void_p(primals_557.data_ptr()), c_void_p(primals_558.data_ptr()), c_void_p(primals_559.data_ptr()), c_void_p(primals_560.data_ptr()), c_void_p(primals_561.data_ptr()), c_void_p(primals_562.data_ptr()), c_void_p(primals_563.data_ptr()), c_void_p(primals_564.data_ptr()), c_void_p(primals_565.data_ptr()), c_void_p(primals_566.data_ptr()), c_void_p(primals_567.data_ptr()), c_void_p(primals_568.data_ptr()), c_void_p(primals_569.data_ptr()), c_void_p(primals_570.data_ptr()), c_void_p(primals_571.data_ptr()), c_void_p(primals_572.data_ptr()), c_void_p(primals_573.data_ptr()), c_void_p(primals_574.data_ptr()), c_void_p(primals_575.data_ptr()), c_void_p(primals_576.data_ptr()), c_void_p(primals_577.data_ptr()), c_void_p(primals_578.data_ptr()), c_void_p(primals_579.data_ptr()), c_void_p(primals_580.data_ptr()), c_void_p(primals_581.data_ptr()), c_void_p(primals_582.data_ptr()), c_void_p(primals_583.data_ptr()), c_void_p(primals_584.data_ptr()), c_void_p(primals_585.data_ptr()), c_void_p(primals_586.data_ptr()), c_void_p(primals_587.data_ptr()), c_void_p(primals_588.data_ptr()), c_void_p(primals_589.data_ptr()), c_void_p(primals_590.data_ptr()), c_void_p(primals_591.data_ptr()), c_void_p(primals_592.data_ptr()), c_void_p(primals_593.data_ptr()), c_void_p(primals_594.data_ptr()), c_void_p(primals_595.data_ptr()), c_void_p(primals_596.data_ptr()), c_void_p(primals_597.data_ptr()), c_void_p(primals_598.data_ptr()), c_void_p(primals_599.data_ptr()), c_void_p(primals_600.data_ptr()), c_void_p(primals_601.data_ptr()), c_void_p(primals_602.data_ptr()), c_void_p(primals_603.data_ptr()), c_void_p(primals_604.data_ptr()), c_void_p(primals_605.data_ptr()), c_void_p(primals_606.data_ptr()), c_void_p(primals_607.data_ptr()), c_void_p(primals_608.data_ptr()), c_void_p(primals_609.data_ptr()), c_void_p(primals_610.data_ptr()), c_void_p(primals_611.data_ptr()), c_void_p(primals_612.data_ptr()), c_void_p(primals_613.data_ptr()), c_void_p(primals_614.data_ptr()), c_void_p(primals_615.data_ptr()), c_void_p(primals_616.data_ptr()), c_void_p(primals_617.data_ptr()), c_void_p(primals_618.data_ptr()), c_void_p(primals_619.data_ptr()), c_void_p(primals_620.data_ptr()), c_void_p(primals_621.data_ptr()), c_void_p(primals_622.data_ptr()), c_void_p(primals_623.data_ptr()), c_void_p(primals_624.data_ptr()), c_void_p(primals_625.data_ptr()), c_void_p(primals_626.data_ptr()), c_void_p(primals_627.data_ptr()), c_void_p(primals_628.data_ptr()), c_void_p(primals_629.data_ptr()), c_void_p(primals_630.data_ptr()), c_void_p(primals_631.data_ptr()), c_void_p(primals_632.data_ptr()), c_void_p(primals_633.data_ptr()), c_void_p(primals_634.data_ptr()), c_void_p(primals_635.data_ptr()), c_void_p(primals_636.data_ptr()), c_void_p(primals_639.data_ptr()), c_void_p(primals_637.data_ptr()), c_void_p(primals_640.data_ptr()), c_void_p(primals_638.data_ptr()), c_void_p(primals_641.data_ptr()), c_void_p(primals_642.data_ptr()), c_void_p(primals_643.data_ptr()), c_void_p(primals_644.data_ptr()), c_void_p(primals_645.data_ptr()), c_void_p(primals_646.data_ptr()), c_void_p(primals_647.data_ptr()), c_void_p(primals_648.data_ptr()), c_void_p(primals_649.data_ptr()), c_void_p(primals_650.data_ptr()), c_void_p(primals_651.data_ptr()), c_void_p(primals_652.data_ptr()), c_void_p(primals_653.data_ptr()), c_void_p(primals_654.data_ptr()), c_void_p(primals_655.data_ptr()), c_void_p(primals_656.data_ptr()), c_void_p(primals_657.data_ptr()), c_void_p(primals_658.data_ptr()), c_void_p(primals_659.data_ptr()), c_void_p(primals_660.data_ptr()), c_void_p(primals_661.data_ptr()), c_void_p(primals_662.data_ptr()), c_void_p(primals_663.data_ptr()), c_void_p(primals_664.data_ptr()), c_void_p(primals_665.data_ptr()), c_void_p(primals_666.data_ptr()), c_void_p(primals_667.data_ptr()))
    del buf1262
    del buf1270
    del buf1278
    del buf1286
    del buf1294
    del buf1302
    del buf1310
    del buf1318
    del buf1326
    del buf1334
    del buf1342
    del buf1350
    del buf1358
    del buf1366
    del buf1374
    del buf1382
    del buf1390
    del buf1398
    del buf1406
    del buf1414
    del buf1422
    del buf1430
    del buf1438
    del buf1446
    del buf1454
    del buf1462
    del buf1470
    del buf1478
    del buf1486
    del buf1494
    del buf1502
    del buf1510
    del buf1518
    del buf1526
    del buf1534
    del buf1542
    del buf1550
    del buf1574
    del buf1582
    del buf1590
    del buf1598
    del buf1606
    del buf1614
    del buf1622
    del buf1630
    del buf1638
    del buf684
    del primals_524
    del primals_525
    del primals_526
    del primals_527
    del primals_528
    del primals_529
    del primals_530
    del primals_531
    del primals_532
    del primals_533
    del primals_534
    del primals_535
    del primals_536
    del primals_537
    del primals_538
    del primals_539
    del primals_540
    del primals_541
    del primals_542
    del primals_543
    del primals_544
    del primals_545
    del primals_546
    del primals_547
    del primals_548
    del primals_549
    del primals_550
    del primals_551
    del primals_552
    del primals_553
    del primals_554
    del primals_555
    del primals_556
    del primals_557
    del primals_558
    del primals_559
    del primals_560
    del primals_561
    del primals_562
    del primals_563
    del primals_564
    del primals_565
    del primals_566
    del primals_567
    del primals_568
    del primals_569
    del primals_570
    del primals_571
    del primals_572
    del primals_573
    del primals_574
    del primals_575
    del primals_576
    del primals_577
    del primals_578
    del primals_579
    del primals_580
    del primals_581
    del primals_582
    del primals_583
    del primals_584
    del primals_585
    del primals_586
    del primals_587
    del primals_588
    del primals_589
    del primals_590
    del primals_591
    del primals_592
    del primals_593
    del primals_594
    del primals_595
    del primals_596
    del primals_597
    del primals_598
    del primals_599
    del primals_600
    del primals_601
    del primals_602
    del primals_603
    del primals_604
    del primals_605
    del primals_606
    del primals_607
    del primals_608
    del primals_609
    del primals_610
    del primals_611
    del primals_612
    del primals_613
    del primals_614
    del primals_615
    del primals_616
    del primals_617
    del primals_618
    del primals_619
    del primals_620
    del primals_621
    del primals_622
    del primals_623
    del primals_624
    del primals_625
    del primals_626
    del primals_627
    del primals_628
    del primals_629
    del primals_630
    del primals_631
    del primals_632
    del primals_633
    del primals_634
    del primals_635
    del primals_636
    del primals_637
    del primals_638
    del primals_639
    del primals_640
    del primals_641
    del primals_642
    del primals_643
    del primals_644
    del primals_645
    del primals_646
    del primals_647
    del primals_648
    del primals_649
    del primals_650
    del primals_651
    del primals_652
    del primals_653
    del primals_654
    del primals_655
    del primals_656
    del primals_657
    del primals_658
    del primals_659
    del primals_660
    del primals_661
    del primals_662
    del primals_663
    del primals_664
    del primals_665
    del primals_666
    del primals_667
    return (reinterpret_tensor(buf749, (8, 1000), (1000, 1), 0), primals_1, primals_3, primals_5, primals_7, primals_9, primals_11, primals_13, primals_15, primals_17, primals_19, primals_21, primals_23, primals_25, primals_27, primals_29, primals_31, primals_33, primals_35, primals_37, primals_39, primals_41, primals_43, primals_45, primals_47, primals_49, primals_51, primals_53, primals_55, primals_57, primals_59, primals_61, primals_63, primals_65, primals_67, primals_69, primals_71, primals_73, primals_75, primals_77, primals_79, primals_81, primals_83, primals_85, primals_87, primals_89, primals_91, primals_93, primals_95, primals_97, primals_99, primals_101, primals_103, primals_105, primals_107, primals_109, primals_111, primals_113, primals_115, primals_117, primals_119, primals_121, primals_123, primals_125, primals_127, primals_129, primals_131, primals_133, primals_135, primals_137, primals_139, primals_141, primals_143, primals_145, primals_147, primals_149, primals_151, primals_153, primals_155, primals_157, primals_159, primals_161, primals_163, primals_165, primals_167, primals_169, primals_171, primals_173, primals_175, primals_177, primals_179, primals_181, primals_183, primals_185, primals_187, primals_189, primals_191, primals_193, primals_195, primals_197, primals_199, primals_201, primals_203, primals_205, primals_207, primals_209, primals_211, primals_213, primals_215, primals_217, primals_219, primals_221, buf0, primals_224, primals_225, buf1, primals_227, primals_228, buf2, primals_230, primals_231, buf3, primals_233, primals_234, buf4, primals_236, primals_237, primals_238, buf5, primals_240, primals_241, buf6, primals_243, primals_244, buf7, primals_246, primals_247, buf8, primals_249, primals_250, buf9, primals_252, primals_253, buf10, primals_255, primals_256, buf11, primals_258, primals_259, buf12, primals_261, primals_262, primals_263, buf13, primals_265, primals_266, buf14, primals_268, primals_269, buf15, primals_271, primals_272, buf16, primals_274, primals_275, buf17, primals_277, primals_278, buf18, primals_280, primals_281, buf19, primals_283, primals_284, buf20, primals_286, primals_287, buf21, primals_289, primals_290, buf22, primals_292, primals_293, buf23, primals_295, primals_296, buf24, primals_298, primals_299, buf25, primals_301, primals_302, buf26, primals_304, primals_305, buf27, primals_307, primals_308, buf28, primals_310, primals_311, buf29, primals_313, primals_314, buf30, primals_316, primals_317, buf31, primals_319, primals_320, buf32, primals_322, primals_323, primals_324, buf33, primals_326, primals_327, buf34, primals_329, primals_330, buf35, primals_332, primals_333, buf36, buf37, buf41, buf42, buf44, buf48, buf49, buf51, buf52, buf56, buf57, buf58, buf62, buf63, buf65, buf69, buf70, buf71, buf75, buf76, buf77, buf81, buf82, buf84, buf88, buf89, buf90, buf94, buf95, buf96, buf100, buf101, buf103, buf107, buf108, buf109, buf113, buf114, buf115, buf119, buf120, buf125, buf129, buf130, buf132, buf133, buf137, buf138, buf139, buf143, buf144, buf146, buf150, buf151, buf152, buf156, buf157, buf158, buf162, buf163, buf165, buf169, buf170, buf171, buf175, buf176, buf177, buf181, buf182, buf184, buf188, buf189, buf190, buf194, buf195, buf196, buf200, buf201, buf206, buf210, buf211, buf212, buf216, buf217, buf218, buf222, buf223, buf225, buf229, buf230, buf231, buf235, buf236, buf237, buf241, buf242, buf244, buf248, buf249, buf250, buf254, buf255, buf256, buf260, buf261, buf263, buf267, buf268, buf269, buf273, buf274, buf275, buf279, buf280, buf285, buf289, buf290, buf292, buf293, buf297, buf298, buf299, buf303, buf304, buf306, buf310, buf311, buf312, buf316, buf317, buf318, buf322, buf323, buf325, buf329, buf330, buf331, buf335, buf336, buf337, buf341, buf342, buf344, buf348, buf349, buf350, buf354, buf355, buf356, buf360, buf361, buf366, buf370, buf371, buf372, buf376, buf377, buf378, buf382, buf383, buf385, buf389, buf390, buf391, buf395, buf396, buf397, buf401, buf402, buf404, buf408, buf409, buf410, buf414, buf415, buf416, buf420, buf421, buf423, buf427, buf428, buf429, buf433, buf434, buf435, buf439, buf440, buf445, buf449, buf450, buf451, buf455, buf456, buf457, buf461, buf462, buf464, buf468, buf469, buf470, buf474, buf475, buf476, buf480, buf481, buf483, buf487, buf488, buf489, buf493, buf494, buf495, buf499, buf500, buf502, buf506, buf507, buf508, buf512, buf513, buf514, buf518, buf519, buf524, buf528, buf529, buf530, buf534, buf535, buf536, buf540, buf541, buf543, buf547, buf548, buf549, buf553, buf554, buf555, buf559, buf560, buf562, buf566, buf567, buf568, buf572, buf573, buf574, buf578, buf579, buf581, buf585, buf586, buf587, buf591, buf592, buf593, buf597, buf598, buf603, buf607, buf608, buf609, buf613, buf614, buf615, buf619, buf620, buf622, buf626, buf627, buf628, buf632, buf633, buf634, buf638, buf639, buf641, buf645, buf646, buf647, buf651, buf652, buf653, buf657, buf658, buf660, buf664, buf665, buf666, buf670, buf671, buf672, buf676, buf677, buf682, buf686, buf687, buf689, buf690, buf694, buf695, buf696, buf700, buf701, buf703, buf707, buf708, buf709, buf713, buf714, buf715, buf719, buf720, buf722, buf726, buf727, buf728, buf732, buf733, buf734, buf738, buf739, buf741, buf745, buf748, buf750, reinterpret_tensor(buf742, (1, 2688, 1, 1), (2688, 1, 1, 1), 0), reinterpret_tensor(buf735, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf729, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf723, (1, 2560, 1, 1), (2560, 1, 1, 1), 0), reinterpret_tensor(buf716, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf710, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf704, (1, 2432, 1, 1), (2432, 1, 1, 1), 0), reinterpret_tensor(buf697, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf691, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf683, (1, 2432, 1, 1), (2432, 1, 1, 1), 0), reinterpret_tensor(buf673, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf667, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf661, (1, 2368, 1, 1), (2368, 1, 1, 1), 0), reinterpret_tensor(buf654, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf648, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf642, (1, 2304, 1, 1), (2304, 1, 1, 1), 0), reinterpret_tensor(buf635, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf629, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf623, (1, 2240, 1, 1), (2240, 1, 1, 1), 0), reinterpret_tensor(buf616, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf610, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf604, (1, 2176, 1, 1), (2176, 1, 1, 1), 0), reinterpret_tensor(buf594, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf588, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf582, (1, 2112, 1, 1), (2112, 1, 1, 1), 0), reinterpret_tensor(buf575, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf569, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf563, (1, 2048, 1, 1), (2048, 1, 1, 1), 0), reinterpret_tensor(buf556, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf550, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf544, (1, 1984, 1, 1), (1984, 1, 1, 1), 0), reinterpret_tensor(buf537, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf531, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf525, (1, 1920, 1, 1), (1920, 1, 1, 1), 0), reinterpret_tensor(buf515, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf509, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf503, (1, 1856, 1, 1), (1856, 1, 1, 1), 0), reinterpret_tensor(buf496, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf490, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf484, (1, 1792, 1, 1), (1792, 1, 1, 1), 0), reinterpret_tensor(buf477, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf471, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf465, (1, 1728, 1, 1), (1728, 1, 1, 1), 0), reinterpret_tensor(buf458, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf452, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf446, (1, 1664, 1, 1), (1664, 1, 1, 1), 0), reinterpret_tensor(buf436, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf430, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf424, (1, 1600, 1, 1), (1600, 1, 1, 1), 0), reinterpret_tensor(buf417, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf411, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf405, (1, 1536, 1, 1), (1536, 1, 1, 1), 0), reinterpret_tensor(buf398, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf392, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf386, (1, 1472, 1, 1), (1472, 1, 1, 1), 0), reinterpret_tensor(buf379, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf373, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf367, (1, 1408, 1, 1), (1408, 1, 1, 1), 0), reinterpret_tensor(buf357, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf351, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf345, (1, 1344, 1, 1), (1344, 1, 1, 1), 0), reinterpret_tensor(buf338, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf332, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf326, (1, 1280, 1, 1), (1280, 1, 1, 1), 0), reinterpret_tensor(buf319, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf313, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf307, (1, 1216, 1, 1), (1216, 1, 1, 1), 0), reinterpret_tensor(buf300, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf294, (1, 800, 1, 1), (800, 1, 1, 1), 0), reinterpret_tensor(buf286, (1, 1152, 1, 1), (1152, 1, 1, 1), 0), reinterpret_tensor(buf276, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf270, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf264, (1, 1088, 1, 1), (1088, 1, 1, 1), 0), reinterpret_tensor(buf257, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf251, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf245, (1, 1024, 1, 1), (1024, 1, 1, 1), 0), reinterpret_tensor(buf238, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf232, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf226, (1, 960, 1, 1), (960, 1, 1, 1), 0), reinterpret_tensor(buf219, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf213, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf207, (1, 896, 1, 1), (896, 1, 1, 1), 0), reinterpret_tensor(buf197, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf191, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf185, (1, 832, 1, 1), (832, 1, 1, 1), 0), reinterpret_tensor(buf178, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf172, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf166, (1, 768, 1, 1), (768, 1, 1, 1), 0), reinterpret_tensor(buf159, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf153, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf147, (1, 704, 1, 1), (704, 1, 1, 1), 0), reinterpret_tensor(buf140, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf134, (1, 400, 1, 1), (400, 1, 1, 1), 0), reinterpret_tensor(buf126, (1, 376, 1, 1), (376, 1, 1, 1), 0), reinterpret_tensor(buf116, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf110, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf104, (1, 356, 1, 1), (356, 1, 1, 1), 0), reinterpret_tensor(buf97, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf91, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf85, (1, 336, 1, 1), (336, 1, 1, 1), 0), reinterpret_tensor(buf78, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf72, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf66, (1, 316, 1, 1), (316, 1, 1, 1), 0), reinterpret_tensor(buf59, (1, 200, 1, 1), (200, 1, 1, 1), 0), reinterpret_tensor(buf53, (1, 200, 1, 1), (200, 1, 1, 1), 0), buf751, reinterpret_tensor(buf38, (1, 128, 1, 1), (128, 1, 1, 1), 0), )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_2 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_3 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_4 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_5 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_6 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_7 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_8 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_9 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_10 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_11 = rand_strided((316, ), (1, ), device='cpu', dtype=torch.float32)
    primals_12 = rand_strided((316, ), (1, ), device='cpu', dtype=torch.float32)
    primals_13 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_14 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_15 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_16 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_17 = rand_strided((336, ), (1, ), device='cpu', dtype=torch.float32)
    primals_18 = rand_strided((336, ), (1, ), device='cpu', dtype=torch.float32)
    primals_19 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_20 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_21 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_22 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_23 = rand_strided((356, ), (1, ), device='cpu', dtype=torch.float32)
    primals_24 = rand_strided((356, ), (1, ), device='cpu', dtype=torch.float32)
    primals_25 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_26 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_27 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_28 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_29 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_30 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_31 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_32 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_33 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_34 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_35 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_36 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_37 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_38 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_39 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_40 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_41 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_42 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_43 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_44 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_45 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_46 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_47 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_48 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_49 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_50 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_51 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_52 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_53 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_54 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_55 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_56 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_57 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_58 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_59 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_60 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_61 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_62 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_63 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_64 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_65 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_66 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_67 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_68 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_69 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_70 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_71 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_72 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_73 = rand_strided((1088, ), (1, ), device='cpu', dtype=torch.float32)
    primals_74 = rand_strided((1088, ), (1, ), device='cpu', dtype=torch.float32)
    primals_75 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_76 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_77 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_78 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_79 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_80 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_81 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_82 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_83 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_84 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_85 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_86 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_87 = rand_strided((1216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_88 = rand_strided((1216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_89 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_90 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_91 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_92 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_93 = rand_strided((1280, ), (1, ), device='cpu', dtype=torch.float32)
    primals_94 = rand_strided((1280, ), (1, ), device='cpu', dtype=torch.float32)
    primals_95 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_96 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_97 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_98 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_99 = rand_strided((1344, ), (1, ), device='cpu', dtype=torch.float32)
    primals_100 = rand_strided((1344, ), (1, ), device='cpu', dtype=torch.float32)
    primals_101 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_102 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_103 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_104 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_105 = rand_strided((1408, ), (1, ), device='cpu', dtype=torch.float32)
    primals_106 = rand_strided((1408, ), (1, ), device='cpu', dtype=torch.float32)
    primals_107 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_108 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_109 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_110 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_111 = rand_strided((1472, ), (1, ), device='cpu', dtype=torch.float32)
    primals_112 = rand_strided((1472, ), (1, ), device='cpu', dtype=torch.float32)
    primals_113 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_114 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_115 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_116 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_117 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_118 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_119 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_120 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_121 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_122 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_123 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_124 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_125 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_126 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_127 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_128 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_129 = rand_strided((1664, ), (1, ), device='cpu', dtype=torch.float32)
    primals_130 = rand_strided((1664, ), (1, ), device='cpu', dtype=torch.float32)
    primals_131 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_132 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_133 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_134 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_135 = rand_strided((1728, ), (1, ), device='cpu', dtype=torch.float32)
    primals_136 = rand_strided((1728, ), (1, ), device='cpu', dtype=torch.float32)
    primals_137 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_138 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_139 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_140 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_141 = rand_strided((1792, ), (1, ), device='cpu', dtype=torch.float32)
    primals_142 = rand_strided((1792, ), (1, ), device='cpu', dtype=torch.float32)
    primals_143 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_144 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_145 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_146 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_147 = rand_strided((1856, ), (1, ), device='cpu', dtype=torch.float32)
    primals_148 = rand_strided((1856, ), (1, ), device='cpu', dtype=torch.float32)
    primals_149 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_150 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_151 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_152 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_153 = rand_strided((1920, ), (1, ), device='cpu', dtype=torch.float32)
    primals_154 = rand_strided((1920, ), (1, ), device='cpu', dtype=torch.float32)
    primals_155 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_156 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_157 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_158 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_159 = rand_strided((1984, ), (1, ), device='cpu', dtype=torch.float32)
    primals_160 = rand_strided((1984, ), (1, ), device='cpu', dtype=torch.float32)
    primals_161 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_162 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_163 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_164 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_165 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    primals_166 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    primals_167 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_168 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_169 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_170 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_171 = rand_strided((2112, ), (1, ), device='cpu', dtype=torch.float32)
    primals_172 = rand_strided((2112, ), (1, ), device='cpu', dtype=torch.float32)
    primals_173 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_174 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_175 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_176 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_177 = rand_strided((2176, ), (1, ), device='cpu', dtype=torch.float32)
    primals_178 = rand_strided((2176, ), (1, ), device='cpu', dtype=torch.float32)
    primals_179 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_180 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_181 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_182 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_183 = rand_strided((2240, ), (1, ), device='cpu', dtype=torch.float32)
    primals_184 = rand_strided((2240, ), (1, ), device='cpu', dtype=torch.float32)
    primals_185 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_186 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_187 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_188 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_189 = rand_strided((2304, ), (1, ), device='cpu', dtype=torch.float32)
    primals_190 = rand_strided((2304, ), (1, ), device='cpu', dtype=torch.float32)
    primals_191 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_192 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_193 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_194 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_195 = rand_strided((2368, ), (1, ), device='cpu', dtype=torch.float32)
    primals_196 = rand_strided((2368, ), (1, ), device='cpu', dtype=torch.float32)
    primals_197 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_198 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_199 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_200 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_201 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_202 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_203 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_204 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_205 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_206 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_207 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_208 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_209 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_210 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_211 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_212 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_213 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_214 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_215 = rand_strided((2560, ), (1, ), device='cpu', dtype=torch.float32)
    primals_216 = rand_strided((2560, ), (1, ), device='cpu', dtype=torch.float32)
    primals_217 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_218 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_219 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_220 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_221 = rand_strided((2688, ), (1, ), device='cpu', dtype=torch.float32)
    primals_222 = rand_strided((2688, ), (1, ), device='cpu', dtype=torch.float32)
    primals_223 = rand_strided((128, 3, 7, 7), (147, 49, 7, 1), device='cpu', dtype=torch.float32)
    primals_224 = rand_strided((296, 128, 1, 1), (128, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_225 = rand_strided((200, 128, 1, 1), (128, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_226 = rand_strided((200, 4, 3, 3), (36, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_227 = rand_strided((276, 200, 1, 1), (200, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_228 = rand_strided((200, 316, 1, 1), (316, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_229 = rand_strided((200, 4, 3, 3), (36, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_230 = rand_strided((276, 200, 1, 1), (200, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_231 = rand_strided((200, 336, 1, 1), (336, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_232 = rand_strided((200, 4, 3, 3), (36, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_233 = rand_strided((276, 200, 1, 1), (200, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_234 = rand_strided((200, 356, 1, 1), (356, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_235 = rand_strided((200, 4, 3, 3), (36, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_236 = rand_strided((276, 200, 1, 1), (200, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_237 = rand_strided((640, 376, 1, 1), (376, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_238 = rand_strided((400, 376, 1, 1), (376, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_239 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_240 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_241 = rand_strided((400, 704, 1, 1), (704, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_242 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_243 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_244 = rand_strided((400, 768, 1, 1), (768, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_245 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_246 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_247 = rand_strided((400, 832, 1, 1), (832, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_248 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_249 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_250 = rand_strided((400, 896, 1, 1), (896, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_251 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_252 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_253 = rand_strided((400, 960, 1, 1), (960, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_254 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_255 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_256 = rand_strided((400, 1024, 1, 1), (1024, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_257 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_258 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_259 = rand_strided((400, 1088, 1, 1), (1088, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_260 = rand_strided((400, 8, 3, 3), (72, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_261 = rand_strided((576, 400, 1, 1), (400, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_262 = rand_strided((1152, 1152, 1, 1), (1152, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_263 = rand_strided((800, 1152, 1, 1), (1152, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_264 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_265 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_266 = rand_strided((800, 1216, 1, 1), (1216, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_267 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_268 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_269 = rand_strided((800, 1280, 1, 1), (1280, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_270 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_271 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_272 = rand_strided((800, 1344, 1, 1), (1344, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_273 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_274 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_275 = rand_strided((800, 1408, 1, 1), (1408, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_276 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_277 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_278 = rand_strided((800, 1472, 1, 1), (1472, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_279 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_280 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_281 = rand_strided((800, 1536, 1, 1), (1536, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_282 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_283 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_284 = rand_strided((800, 1600, 1, 1), (1600, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_285 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_286 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_287 = rand_strided((800, 1664, 1, 1), (1664, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_288 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_289 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_290 = rand_strided((800, 1728, 1, 1), (1728, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_291 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_292 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_293 = rand_strided((800, 1792, 1, 1), (1792, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_294 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_295 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_296 = rand_strided((800, 1856, 1, 1), (1856, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_297 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_298 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_299 = rand_strided((800, 1920, 1, 1), (1920, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_300 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_301 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_302 = rand_strided((800, 1984, 1, 1), (1984, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_303 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_304 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_305 = rand_strided((800, 2048, 1, 1), (2048, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_306 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_307 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_308 = rand_strided((800, 2112, 1, 1), (2112, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_309 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_310 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_311 = rand_strided((800, 2176, 1, 1), (2176, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_312 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_313 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_314 = rand_strided((800, 2240, 1, 1), (2240, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_315 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_316 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_317 = rand_strided((800, 2304, 1, 1), (2304, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_318 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_319 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_320 = rand_strided((800, 2368, 1, 1), (2368, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_321 = rand_strided((800, 16, 3, 3), (144, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_322 = rand_strided((1088, 800, 1, 1), (800, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_323 = rand_strided((2304, 2432, 1, 1), (2432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_324 = rand_strided((1600, 2432, 1, 1), (2432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_325 = rand_strided((1600, 32, 3, 3), (288, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_326 = rand_strided((2176, 1600, 1, 1), (1600, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_327 = rand_strided((1600, 2432, 1, 1), (2432, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_328 = rand_strided((1600, 32, 3, 3), (288, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_329 = rand_strided((2176, 1600, 1, 1), (1600, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_330 = rand_strided((1600, 2560, 1, 1), (2560, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_331 = rand_strided((1600, 32, 3, 3), (288, 9, 3, 1), device='cpu', dtype=torch.float32)
    primals_332 = rand_strided((2176, 1600, 1, 1), (1600, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_333 = rand_strided((1000, 2688, 1, 1), (2688, 1, 1, 1), device='cpu', dtype=torch.float32)
    primals_334 = rand_strided((1000, ), (1, ), device='cpu', dtype=torch.float32)
    primals_335 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_336 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_337 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_338 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_339 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_340 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_341 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_342 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_343 = rand_strided((128, ), (1, ), device='cpu', dtype=torch.float32)
    primals_344 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_345 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_346 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_347 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_348 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_349 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_350 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_351 = rand_strided((316, ), (1, ), device='cpu', dtype=torch.float32)
    primals_352 = rand_strided((316, ), (1, ), device='cpu', dtype=torch.float32)
    primals_353 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_354 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_355 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_356 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_357 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_358 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_359 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_360 = rand_strided((336, ), (1, ), device='cpu', dtype=torch.float32)
    primals_361 = rand_strided((336, ), (1, ), device='cpu', dtype=torch.float32)
    primals_362 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_363 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_364 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_365 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_366 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_367 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_368 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_369 = rand_strided((356, ), (1, ), device='cpu', dtype=torch.float32)
    primals_370 = rand_strided((356, ), (1, ), device='cpu', dtype=torch.float32)
    primals_371 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_372 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_373 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_374 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_375 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_376 = rand_strided((200, ), (1, ), device='cpu', dtype=torch.float32)
    primals_377 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_378 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_379 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_380 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_381 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_382 = rand_strided((376, ), (1, ), device='cpu', dtype=torch.float32)
    primals_383 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_384 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_385 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_386 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_387 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_388 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_389 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_390 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_391 = rand_strided((704, ), (1, ), device='cpu', dtype=torch.float32)
    primals_392 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_393 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_394 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_395 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_396 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_397 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_398 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_399 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_400 = rand_strided((768, ), (1, ), device='cpu', dtype=torch.float32)
    primals_401 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_402 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_403 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_404 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_405 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_406 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_407 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_408 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_409 = rand_strided((832, ), (1, ), device='cpu', dtype=torch.float32)
    primals_410 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_411 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_412 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_413 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_414 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_415 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_416 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_417 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_418 = rand_strided((896, ), (1, ), device='cpu', dtype=torch.float32)
    primals_419 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_420 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_421 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_422 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_423 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_424 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_425 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_426 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_427 = rand_strided((960, ), (1, ), device='cpu', dtype=torch.float32)
    primals_428 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_429 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_430 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_431 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_432 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_433 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_434 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_435 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_436 = rand_strided((1024, ), (1, ), device='cpu', dtype=torch.float32)
    primals_437 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_438 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_439 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_440 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_441 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_442 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_443 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_444 = rand_strided((1088, ), (1, ), device='cpu', dtype=torch.float32)
    primals_445 = rand_strided((1088, ), (1, ), device='cpu', dtype=torch.float32)
    primals_446 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_447 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_448 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_449 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_450 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_451 = rand_strided((400, ), (1, ), device='cpu', dtype=torch.float32)
    primals_452 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_453 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_454 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_455 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_456 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_457 = rand_strided((1152, ), (1, ), device='cpu', dtype=torch.float32)
    primals_458 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_459 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_460 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_461 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_462 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_463 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_464 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_465 = rand_strided((1216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_466 = rand_strided((1216, ), (1, ), device='cpu', dtype=torch.float32)
    primals_467 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_468 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_469 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_470 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_471 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_472 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_473 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_474 = rand_strided((1280, ), (1, ), device='cpu', dtype=torch.float32)
    primals_475 = rand_strided((1280, ), (1, ), device='cpu', dtype=torch.float32)
    primals_476 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_477 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_478 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_479 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_480 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_481 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_482 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_483 = rand_strided((1344, ), (1, ), device='cpu', dtype=torch.float32)
    primals_484 = rand_strided((1344, ), (1, ), device='cpu', dtype=torch.float32)
    primals_485 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_486 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_487 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_488 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_489 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_490 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_491 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_492 = rand_strided((1408, ), (1, ), device='cpu', dtype=torch.float32)
    primals_493 = rand_strided((1408, ), (1, ), device='cpu', dtype=torch.float32)
    primals_494 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_495 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_496 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_497 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_498 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_499 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_500 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_501 = rand_strided((1472, ), (1, ), device='cpu', dtype=torch.float32)
    primals_502 = rand_strided((1472, ), (1, ), device='cpu', dtype=torch.float32)
    primals_503 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_504 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_505 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_506 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_507 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_508 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_509 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_510 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_511 = rand_strided((1536, ), (1, ), device='cpu', dtype=torch.float32)
    primals_512 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_513 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_514 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_515 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_516 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_517 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_518 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_519 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_520 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_521 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_522 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_523 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_524 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_525 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_526 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_527 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_528 = rand_strided((1664, ), (1, ), device='cpu', dtype=torch.float32)
    primals_529 = rand_strided((1664, ), (1, ), device='cpu', dtype=torch.float32)
    primals_530 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_531 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_532 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_533 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_534 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_535 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_536 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_537 = rand_strided((1728, ), (1, ), device='cpu', dtype=torch.float32)
    primals_538 = rand_strided((1728, ), (1, ), device='cpu', dtype=torch.float32)
    primals_539 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_540 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_541 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_542 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_543 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_544 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_545 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_546 = rand_strided((1792, ), (1, ), device='cpu', dtype=torch.float32)
    primals_547 = rand_strided((1792, ), (1, ), device='cpu', dtype=torch.float32)
    primals_548 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_549 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_550 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_551 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_552 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_553 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_554 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_555 = rand_strided((1856, ), (1, ), device='cpu', dtype=torch.float32)
    primals_556 = rand_strided((1856, ), (1, ), device='cpu', dtype=torch.float32)
    primals_557 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_558 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_559 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_560 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_561 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_562 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_563 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_564 = rand_strided((1920, ), (1, ), device='cpu', dtype=torch.float32)
    primals_565 = rand_strided((1920, ), (1, ), device='cpu', dtype=torch.float32)
    primals_566 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_567 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_568 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_569 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_570 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_571 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_572 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_573 = rand_strided((1984, ), (1, ), device='cpu', dtype=torch.float32)
    primals_574 = rand_strided((1984, ), (1, ), device='cpu', dtype=torch.float32)
    primals_575 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_576 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_577 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_578 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_579 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_580 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_581 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_582 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    primals_583 = rand_strided((2048, ), (1, ), device='cpu', dtype=torch.float32)
    primals_584 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_585 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_586 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_587 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_588 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_589 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_590 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_591 = rand_strided((2112, ), (1, ), device='cpu', dtype=torch.float32)
    primals_592 = rand_strided((2112, ), (1, ), device='cpu', dtype=torch.float32)
    primals_593 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_594 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_595 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_596 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_597 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_598 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_599 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_600 = rand_strided((2176, ), (1, ), device='cpu', dtype=torch.float32)
    primals_601 = rand_strided((2176, ), (1, ), device='cpu', dtype=torch.float32)
    primals_602 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_603 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_604 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_605 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_606 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_607 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_608 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_609 = rand_strided((2240, ), (1, ), device='cpu', dtype=torch.float32)
    primals_610 = rand_strided((2240, ), (1, ), device='cpu', dtype=torch.float32)
    primals_611 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_612 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_613 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_614 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_615 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_616 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_617 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_618 = rand_strided((2304, ), (1, ), device='cpu', dtype=torch.float32)
    primals_619 = rand_strided((2304, ), (1, ), device='cpu', dtype=torch.float32)
    primals_620 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_621 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_622 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_623 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_624 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_625 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_626 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_627 = rand_strided((2368, ), (1, ), device='cpu', dtype=torch.float32)
    primals_628 = rand_strided((2368, ), (1, ), device='cpu', dtype=torch.float32)
    primals_629 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_630 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_631 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_632 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_633 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_634 = rand_strided((800, ), (1, ), device='cpu', dtype=torch.float32)
    primals_635 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_636 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_637 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_638 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_639 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_640 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_641 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_642 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_643 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_644 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_645 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_646 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_647 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_648 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_649 = rand_strided((2432, ), (1, ), device='cpu', dtype=torch.float32)
    primals_650 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_651 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_652 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_653 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_654 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_655 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_656 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_657 = rand_strided((2560, ), (1, ), device='cpu', dtype=torch.float32)
    primals_658 = rand_strided((2560, ), (1, ), device='cpu', dtype=torch.float32)
    primals_659 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_660 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_661 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_662 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_663 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_664 = rand_strided((1600, ), (1, ), device='cpu', dtype=torch.float32)
    primals_665 = rand_strided((), (), device='cpu', dtype=torch.int64)
    primals_666 = rand_strided((2688, ), (1, ), device='cpu', dtype=torch.float32)
    primals_667 = rand_strided((2688, ), (1, ), device='cpu', dtype=torch.float32)
    primals_668 = rand_strided((8, 3, 224, 224), (150528, 50176, 224, 1), device='cpu', dtype=torch.float32)
    return print_performance(lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668]), times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('dpn107', benchmark_compiled_module)
